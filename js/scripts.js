// Bootstrap js To be included
// Avoid `console` errors in browsers that lack a console.
(function() {
    var method;
    var noop = function () {};
    var methods = [
        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',
        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',
        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',
        'timeStamp', 'trace', 'warn'
    ];
    var length = methods.length;
    var console = (window.console = window.console || {});

    while (length--) {
        method = methods[length];

        // Only stub undefined methods.
        if (!console[method]) {
            console[method] = noop;
        }
    }
}());
/* ========================================================================
 * Bootstrap: alert.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.4.1'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    selector    = selector === '#' ? [] : selector
    var $parent = $(document).find(selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);
/* ========================================================================
 * Bootstrap: collapse.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  'use strict';

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $('[data-toggle="collapse"][href="#' + element.id + '"],' +
                           '[data-toggle="collapse"][data-target="#' + element.id + '"]')
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = '3.4.1'

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var activesData
    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')

    if (actives && actives.length) {
      activesData = actives.data('bs.collapse')
      if (activesData && activesData.transitioning) return
    }

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives && actives.length) {
      Plugin.call(actives, 'hide')
      activesData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')[dimension](0)
      .attr('aria-expanded', true)

    this.$trigger
      .removeClass('collapsed')
      .attr('aria-expanded', true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('collapse in')[dimension]('')
      this.transitioning = 0
      this.$element
        .trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse in')
      .attr('aria-expanded', false)

    this.$trigger
      .addClass('collapsed')
      .attr('aria-expanded', false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass('collapsing')
        .addClass('collapse')
        .trigger('hidden.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }

  Collapse.prototype.getParent = function () {
    return $(document).find(this.options.parent)
      .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in')

    $element.attr('aria-expanded', isOpen)
    $trigger
      .toggleClass('collapsed', !isOpen)
      .attr('aria-expanded', isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr('data-target')
      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7

    return $(document).find(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this   = $(this)

    if (!$this.attr('data-target')) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);
/* ========================================================================
 * Bootstrap: dropdown.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle="dropdown"]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.VERSION = '3.4.1'

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = selector !== '#' ? $(document).find(selector) : null

    return $parent && $parent.length ? $parent : $this.parent()
  }

  function clearMenus(e) {
    if (e && e.which === 3) return
    $(backdrop).remove()
    $(toggle).each(function () {
      var $this         = $(this)
      var $parent       = getParent($this)
      var relatedTarget = { relatedTarget: this }

      if (!$parent.hasClass('open')) return

      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return

      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this.attr('aria-expanded', 'false')
      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))
    })
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement('div'))
          .addClass('dropdown-backdrop')
          .insertAfter($(this))
          .on('click', clearMenus)
      }

      var relatedTarget = { relatedTarget: this }
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this
        .trigger('focus')
        .attr('aria-expanded', 'true')

      $parent
        .toggleClass('open')
        .trigger($.Event('shown.bs.dropdown', relatedTarget))
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive && e.which != 27 || isActive && e.which == 27) {
      if (e.which == 27) $parent.find(toggle).trigger('focus')
      return $this.trigger('click')
    }

    var desc = ' li:not(.disabled):visible a'
    var $items = $parent.find('.dropdown-menu' + desc)

    if (!$items.length) return

    var index = $items.index(e.target)

    if (e.which == 38 && index > 0)                 index--         // up
    if (e.which == 40 && index < $items.length - 1) index++         // down
    if (!~index)                                    index = 0

    $items.eq(index).trigger('focus')
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.dropdown

  $.fn.dropdown             = Plugin
  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)

}(jQuery);
/* ========================================================================
 * Bootstrap: tooltip.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+function ($) {
  'use strict';

  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn']

  var uriAttrs = [
    'background',
    'cite',
    'href',
    'itemtype',
    'longdesc',
    'poster',
    'src',
    'xlink:href'
  ]

  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i

  var DefaultWhitelist = {
    // Global attributes allowed on any supplied element below.
    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
    a: ['target', 'href', 'title', 'rel'],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ['src', 'alt', 'title', 'width', 'height'],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  }

  /**
   * A pattern that recognizes a commonly useful subset of URLs that are safe.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */
  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi

  /**
   * A pattern that matches safe data URLs. Only matches image, video and audio types.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */
  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i

  function allowedAttribute(attr, allowedAttributeList) {
    var attrName = attr.nodeName.toLowerCase()

    if ($.inArray(attrName, allowedAttributeList) !== -1) {
      if ($.inArray(attrName, uriAttrs) !== -1) {
        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))
      }

      return true
    }

    var regExp = $(allowedAttributeList).filter(function (index, value) {
      return value instanceof RegExp
    })

    // Check if a regular expression validates the attribute.
    for (var i = 0, l = regExp.length; i < l; i++) {
      if (attrName.match(regExp[i])) {
        return true
      }
    }

    return false
  }

  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {
    if (unsafeHtml.length === 0) {
      return unsafeHtml
    }

    if (sanitizeFn && typeof sanitizeFn === 'function') {
      return sanitizeFn(unsafeHtml)
    }

    // IE 8 and below don't support createHTMLDocument
    if (!document.implementation || !document.implementation.createHTMLDocument) {
      return unsafeHtml
    }

    var createdDocument = document.implementation.createHTMLDocument('sanitization')
    createdDocument.body.innerHTML = unsafeHtml

    var whitelistKeys = $.map(whiteList, function (el, i) { return i })
    var elements = $(createdDocument.body).find('*')

    for (var i = 0, len = elements.length; i < len; i++) {
      var el = elements[i]
      var elName = el.nodeName.toLowerCase()

      if ($.inArray(elName, whitelistKeys) === -1) {
        el.parentNode.removeChild(el)

        continue
      }

      var attributeList = $.map(el.attributes, function (el) { return el })
      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || [])

      for (var j = 0, len2 = attributeList.length; j < len2; j++) {
        if (!allowedAttribute(attributeList[j], whitelistedAttributes)) {
          el.removeAttribute(attributeList[j].nodeName)
        }
      }
    }

    return createdDocument.body.innerHTML
  }

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       = null
    this.options    = null
    this.enabled    = null
    this.timeout    = null
    this.hoverState = null
    this.$element   = null
    this.inState    = null

    this.init('tooltip', element, options)
  }

  Tooltip.VERSION  = '3.4.1'

  Tooltip.TRANSITION_DURATION = 150

  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    },
    sanitize : true,
    sanitizeFn : null,
    whiteList : DefaultWhitelist
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled   = true
    this.type      = type
    this.$element  = $(element)
    this.options   = this.getOptions(options)
    this.$viewport = this.options.viewport && $(document).find($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))
    this.inState   = { click: false, hover: false, focus: false }

    if (this.$element[0] instanceof document.constructor && !this.options.selector) {
      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')
    }

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    var dataAttributes = this.$element.data()

    for (var dataAttr in dataAttributes) {
      if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {
        delete dataAttributes[dataAttr]
      }
    }

    options = $.extend({}, this.getDefaults(), dataAttributes, options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      }
    }

    if (options.sanitize) {
      options.template = sanitizeHtml(options.template, options.whiteList, options.sanitizeFn)
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true
    }

    if (self.tip().hasClass('in') || self.hoverState == 'in') {
      self.hoverState = 'in'
      return
    }

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true
    }

    return false
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false
    }

    if (self.isInStateTrue()) return

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])
      if (e.isDefaultPrevented() || !inDom) return
      var that = this

      var $tip = this.tip()

      var tipId = this.getUID(this.type)

      this.setContent()
      $tip.attr('id', tipId)
      this.$element.attr('aria-describedby', tipId)

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)
        .data('bs.' + this.type, this)

      this.options.container ? $tip.appendTo($(document).find(this.options.container)) : $tip.insertAfter(this.$element)
      this.$element.trigger('inserted.bs.' + this.type)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var orgPlacement = placement
        var viewportDim = this.getPosition(this.$viewport)

        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :
                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :
                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :
                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)

      var complete = function () {
        var prevHoverState = that.hoverState
        that.$element.trigger('shown.bs.' + that.type)
        that.hoverState = null

        if (prevHoverState == 'out') that.leave(that)
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        $tip
          .one('bsTransitionEnd', complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
        complete()
    }
  }

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  += marginTop
    offset.left += marginLeft

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        })
      }
    }, offset), 0)

    $tip.addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)

    if (delta.left) offset.left += delta.left
    else offset.top += delta.top

    var isVertical          = /top|bottom/.test(placement)
    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'

    $tip.offset(offset)
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow()
      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')
      .css(isVertical ? 'top' : 'left', '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    if (this.options.html) {
      if (this.options.sanitize) {
        title = sanitizeHtml(title, this.options.whiteList, this.options.sanitizeFn)
      }

      $tip.find('.tooltip-inner').html(title)
    } else {
      $tip.find('.tooltip-inner').text(title)
    }

    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function (callback) {
    var that = this
    var $tip = $(this.$tip)
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element
          .removeAttr('aria-describedby')
          .trigger('hidden.bs.' + that.type)
      }
      callback && callback()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && $tip.hasClass('fade') ?
      $tip
        .one('bsTransitionEnd', complete)
        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
      complete()

    this.hoverState = null

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function ($element) {
    $element   = $element || this.$element

    var el     = $element[0]
    var isBody = el.tagName == 'BODY'

    var elRect    = el.getBoundingClientRect()
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })
    }
    var isSvg = window.SVGElement && el instanceof window.SVGElement
    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280
    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())
    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }
    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null

    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }

  }

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = { top: 0, left: 0 }
    if (!this.$viewport) return delta

    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
    var viewportDimensions = this.getPosition(this.$viewport)

    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
      if (topEdgeOffset < viewportDimensions.top) { // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset
      }
    } else {
      var leftEdgeOffset  = pos.left - viewportPadding
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth
      if (leftEdgeOffset < viewportDimensions.left) { // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset
      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset
      }
    }

    return delta
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000)
    while (document.getElementById(prefix))
    return prefix
  }

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template)
      if (this.$tip.length != 1) {
        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')
      }
    }
    return this.$tip
  }

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = this
    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type)
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions())
        $(e.currentTarget).data('bs.' + this.type, self)
      }
    }

    if (e) {
      self.inState.click = !self.inState.click
      if (self.isInStateTrue()) self.enter(self)
      else self.leave(self)
    } else {
      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
    }
  }

  Tooltip.prototype.destroy = function () {
    var that = this
    clearTimeout(this.timeout)
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type)
      if (that.$tip) {
        that.$tip.detach()
      }
      that.$tip = null
      that.$arrow = null
      that.$viewport = null
      that.$element = null
    })
  }

  Tooltip.prototype.sanitizeHtml = function (unsafeHtml) {
    return sanitizeHtml(unsafeHtml, this.options.whiteList, this.options.sanitizeFn)
  }

  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tooltip

  $.fn.tooltip             = Plugin
  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);
/* ========================================================================
 * Bootstrap: popover.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.VERSION  = '3.4.1'

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    if (this.options.html) {
      var typeContent = typeof content

      if (this.options.sanitize) {
        title = this.sanitizeHtml(title)

        if (typeContent === 'string') {
          content = this.sanitizeHtml(content)
        }
      }

      $tip.find('.popover-title').html(title)
      $tip.find('.popover-content').children().detach().end()[
        typeContent === 'string' ? 'html' : 'append'
      ](content)
    } else {
      $tip.find('.popover-title').text(title)
      $tip.find('.popover-content').children().detach().end().text(content)
    }

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
        o.content.call($e[0]) :
        o.content)
  }

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.popover

  $.fn.popover             = Plugin
  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);
/* ========================================================================
 * Bootstrap: transition.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: https://modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // https://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);
/* ========================================================================
 * Bootstrap: modal.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#modals
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options = options
    this.$body = $(document.body)
    this.$element = $(element)
    this.$dialog = this.$element.find('.modal-dialog')
    this.$backdrop = null
    this.isShown = null
    this.originalBodyPad = null
    this.scrollbarWidth = 0
    this.ignoreBackdropClick = false
    this.fixedContent = '.navbar-fixed-top, .navbar-fixed-bottom'

    if (this.options.remote) {
      this.$element
        .find('.modal-content')
        .load(this.options.remote, $.proxy(function () {
          this.$element.trigger('loaded.bs.modal')
        }, this))
    }
  }

  Modal.VERSION = '3.4.1'

  Modal.TRANSITION_DURATION = 300
  Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.setScrollbar()
    this.$body.addClass('modal-open')

    this.escape()
    this.resize()

    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
      })
    })

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        .show()
        .scrollTop(0)

      that.adjustDialog()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element.addClass('in')

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$dialog // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e)
          })
          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()
    this.resize()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .off('click.dismiss.bs.modal')
      .off('mouseup.dismiss.bs.modal')

    this.$dialog.off('mousedown.dismiss.bs.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (document !== e.target &&
          this.$element[0] !== e.target &&
          !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal')
    }
  }

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
    } else {
      $(window).off('resize.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('modal-open')
      that.resetAdjustments()
      that.resetScrollbar()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $(document.createElement('div'))
        .addClass('modal-backdrop ' + animate)
        .appendTo(this.$body)

      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false
          return
        }
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus()
          : this.hide()
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one('bsTransitionEnd', callback)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one('bsTransitionEnd', callbackRemove)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

    this.$element.css({
      paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    })
  }

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    })
  }

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth
    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect()
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    this.originalBodyPad = document.body.style.paddingRight || ''
    var scrollbarWidth = this.scrollbarWidth
    if (this.bodyIsOverflowing) {
      this.$body.css('padding-right', bodyPad + scrollbarWidth)
      $(this.fixedContent).each(function (index, element) {
        var actualPadding = element.style.paddingRight
        var calculatedPadding = $(element).css('padding-right')
        $(element)
          .data('padding-right', actualPadding)
          .css('padding-right', parseFloat(calculatedPadding) + scrollbarWidth + 'px')
      })
    }
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad)
    $(this.fixedContent).each(function (index, element) {
      var padding = $(element).data('padding-right')
      $(element).removeData('padding-right')
      element.style.paddingRight = padding ? padding : ''
    })
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this = $(this)
      var data = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this = $(this)
    var href = $this.attr('href')
    var target = $this.attr('data-target') ||
      (href && href.replace(/.*(?=#[^\s]+$)/, '')) // strip for ie7

    var $target = $(document).find(target)
    var option = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);
/* ========================================================================
 * Bootstrap: carousel.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      = null
    this.sliding     = null
    this.interval    = null
    this.$active     = null
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.4.1'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active)
    var willWrap = (direction == 'prev' && activeIndex === 0)
                || (direction == 'next' && activeIndex == (this.$items.length - 1))
    if (willWrap && !this.options.wrap) return active
    var delta = direction == 'prev' ? -1 : 1
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var that      = this

    if ($next.hasClass('active')) return (this.sliding = false)

    var relatedTarget = $next[0]
    var slideEvent = $.Event('slide.bs.carousel', {
      relatedTarget: relatedTarget,
      direction: direction
    })
    this.$element.trigger(slideEvent)
    if (slideEvent.isDefaultPrevented()) return

    this.sliding = true

    isCycling && this.pause()

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
      $nextIndicator && $nextIndicator.addClass('active')
    }

    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, "slid"
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type)
      if (typeof $next === 'object' && $next.length) {
        $next[0].offsetWidth // force reflow
      }
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one('bsTransitionEnd', function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () {
            that.$element.trigger(slidEvent)
          }, 0)
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)
    } else {
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger(slidEvent)
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  var old = $.fn.carousel

  $.fn.carousel             = Plugin
  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    if (href) {
      href = href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7
    }

    var target  = $this.attr('data-target') || href
    var $target = $(document).find(target)

    if (!$target.hasClass('carousel')) return

    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    Plugin.call($target, options)

    if (slideIndex) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  }

  $(document)
    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)
    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      Plugin.call($carousel, $carousel.data())
    })
  })

}(jQuery);
/* ========================================================================
 * Bootstrap: affix.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#affix
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)

    var target = this.options.target === Affix.DEFAULTS.target ? $(this.options.target) : $(document).find(this.options.target)

    this.$target = target
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      = null
    this.unpin        = null
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.VERSION  = '3.4.1'

  Affix.RESET    = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0,
    target: window
  }

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop    = this.$target.scrollTop()
    var position     = this.$element.offset()
    var targetHeight = this.$target.height()

    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'
      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'
    }

    var initializing   = this.affixed == null
    var colliderTop    = initializing ? scrollTop : position.top
    var colliderHeight = initializing ? targetHeight : height

    if (offsetTop != null && scrollTop <= offsetTop) return 'top'
    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'

    return false
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$target.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var height       = this.$element.height()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom
    var scrollHeight = Math.max($(document).height(), $(document.body).height())

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '')

      var affixType = 'affix' + (affix ? '-' + affix : '')
      var e         = $.Event(affixType + '.bs.affix')

      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      this.affixed = affix
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.affix

  $.fn.affix             = Plugin
  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom
      if (data.offsetTop    != null) data.offset.top    = data.offsetTop

      Plugin.call($spy, data)
    })
  })

}(jQuery);

// Other Bootstrap js that might be included in the future
// ../node_modules/bootstrap-sass/assets/javascripts/bootstrap/button.js
// ../node_modules/bootstrap-sass/assets/javascripts/bootstrap/tab.js
// ../node_modules/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js

// Bootstrap carousel mobile swipe
/*! Bootstrap Carousel Swipe jQuery plugin v1.1 | https://github.com/maaaaark/bcSwipe | MIT License */
!function(t){t.fn.bcSwipe=function(e){var n={threshold:50};return e&&t.extend(n,e),this.each(function(){function e(t){1==t.touches.length&&(u=t.touches[0].pageX,c=!0,this.addEventListener("touchmove",i,!1))}function i(e){if(c){var i=e.touches[0].pageX,r=u-i;if(Math.abs(r)>=n.threshold){if(h(),o(t(this)))return;r>0?t(this).carousel("next"):t(this).carousel("prev")}}}function o(t){return t.find(".item.active").length<1}function h(){this.removeEventListener("touchmove",i),u=null,c=!1}var u,c=!1;"ontouchstart"in document.documentElement&&this.addEventListener("touchstart",e,!1)}),this}}(jQuery);

// Import additional plugins below...
Unison = (function() {

  'use strict';

  var win = window;
  var doc = document;
  var head = doc.head;
  var eventCache = {};
  var unisonReady = false;
  var currentBP;

  var util = {
    parseMQ : function(el) {
      var str = win.getComputedStyle(el, null).getPropertyValue('font-family');
      return str.replace(/"/g, '').replace(/'/g, '');
    },
    debounce : function(func, wait, immediate) {
      var timeout;
      return function() {
        var context = this, args = arguments;
        clearTimeout(timeout);
        timeout = setTimeout(function() {
          timeout = null;
          if (!immediate) {
            func.apply(context, args);
          }
        }, wait);
        if (immediate && !timeout) {
          func.apply(context, args);
        }
      };
    },
    isObject : function(e) { return typeof e === 'object'; },
    isUndefined : function(e) { return typeof e === 'undefined'; }
  };

  var events = {
    on : function(event, callback) {
      if ( !util.isObject(eventCache[event]) ) {
        eventCache[event] = [];
      }
      eventCache[event].push(callback);
    },
    emit : function(event, data) {
      if ( util.isObject(eventCache[event]) ) {
        var eventQ = eventCache[event].slice();
        for ( var i = 0; i < eventQ.length; i++ ) {
          eventQ[i].call(this, data);
        }
      }
    }
  };

  var breakpoints = {
    all : function() {
      var BPs = {};
      var allBP = util.parseMQ(doc.querySelector('title')).split(',');
      for ( var i = 0; i < allBP.length; i++ ) {
        var mq = allBP[i].trim().split(' ');
        BPs[mq[0]] = mq[1];
      }
      return ( unisonReady ) ? BPs : null ;
    },
    now : function(callback) {
      var nowBP = util.parseMQ(head).split(' ');
      var now = {
        name : nowBP[0],
        width : nowBP[1]
      };
      return ( unisonReady ) ? (( util.isUndefined(callback) ) ? now : callback(now)) : null ;
    },
    update : function() {
      breakpoints.now(function(bp) {
        if ( bp.name !== currentBP ) {
          events.emit(bp.name);
          events.emit('change', bp);
          currentBP = bp.name;
        }
      });
    }
  };

  win.onresize = util.debounce(breakpoints.update, 100);
  doc.addEventListener('DOMContentLoaded', function(){
    unisonReady = win.getComputedStyle(head, null).getPropertyValue('clear') !== 'none';
    breakpoints.update();
  });

  return {
    fetch : {
      all : breakpoints.all,
      now : breakpoints.now
    },
    on : events.on,
    emit : events.emit,
    util : {
      debounce : util.debounce,
      isObject : util.isObject
    }
  };

})();
/*!
  * Stickyfill – `position: sticky` polyfill
  * v. 2.1.0 | https://github.com/wilddeer/stickyfill
  * MIT License
  */

;(function(window, document) {
    'use strict';
    
    /*
     * 1. Check if the browser supports `position: sticky` natively or is too old to run the polyfill.
     *    If either of these is the case set `seppuku` flag. It will be checked later to disable key features
     *    of the polyfill, but the API will remain functional to avoid breaking things.
     */
    
    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
    
    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
    
    var seppuku = false;
    
    var isWindowDefined = typeof window !== 'undefined';
    
    // The polyfill can’t function properly without `window` or `window.getComputedStyle`.
    if (!isWindowDefined || !window.getComputedStyle) seppuku = true;
    // Dont’t get in a way if the browser supports `position: sticky` natively.
    else {
            (function () {
                var testNode = document.createElement('div');
    
                if (['', '-webkit-', '-moz-', '-ms-'].some(function (prefix) {
                    try {
                        testNode.style.position = prefix + 'sticky';
                    } catch (e) {}
    
                    return testNode.style.position != '';
                })) seppuku = true;
            })();
        }
    
    /*
     * 2. “Global” vars used across the polyfill
     */
    var isInitialized = false;
    
    // Check if Shadow Root constructor exists to make further checks simpler
    var shadowRootExists = typeof ShadowRoot !== 'undefined';
    
    // Last saved scroll position
    var scroll = {
        top: null,
        left: null
    };
    
    // Array of created Sticky instances
    var stickies = [];
    
    /*
     * 3. Utility functions
     */
    function extend(targetObj, sourceObject) {
        for (var key in sourceObject) {
            if (sourceObject.hasOwnProperty(key)) {
                targetObj[key] = sourceObject[key];
            }
        }
    }
    
    function parseNumeric(val) {
        return parseFloat(val) || 0;
    }
    
    function getDocOffsetTop(node) {
        var docOffsetTop = 0;
    
        while (node) {
            docOffsetTop += node.offsetTop;
            node = node.offsetParent;
        }
    
        return docOffsetTop;
    }
    
    /*
     * 4. Sticky class
     */
    
    var Sticky = function () {
        function Sticky(node) {
            _classCallCheck(this, Sticky);
    
            if (!(node instanceof HTMLElement)) throw new Error('First argument must be HTMLElement');
            if (stickies.some(function (sticky) {
                return sticky._node === node;
            })) throw new Error('Stickyfill is already applied to this node');
    
            this._node = node;
            this._stickyMode = null;
            this._active = false;
    
            stickies.push(this);
    
            this.refresh();
        }
    
        _createClass(Sticky, [{
            key: 'refresh',
            value: function refresh() {
                if (seppuku || this._removed) return;
                if (this._active) this._deactivate();
    
                var node = this._node;
    
                /*
                 * 1. Save node computed props
                 */
                var nodeComputedStyle = getComputedStyle(node);
                var nodeComputedProps = {
                    position: nodeComputedStyle.position,
                    top: nodeComputedStyle.top,
                    display: nodeComputedStyle.display,
                    marginTop: nodeComputedStyle.marginTop,
                    marginBottom: nodeComputedStyle.marginBottom,
                    marginLeft: nodeComputedStyle.marginLeft,
                    marginRight: nodeComputedStyle.marginRight,
                    cssFloat: nodeComputedStyle.cssFloat
                };
    
                /*
                 * 2. Check if the node can be activated
                 */
                if (isNaN(parseFloat(nodeComputedProps.top)) || nodeComputedProps.display == 'table-cell' || nodeComputedProps.display == 'none') return;
    
                this._active = true;
    
                /*
                 * 3. Check if the current node position is `sticky`. If it is, it means that the browser supports sticky positioning,
                 *    but the polyfill was force-enabled. We set the node’s position to `static` before continuing, so that the node
                 *    is in it’s initial position when we gather its params.
                 */
                var originalPosition = node.style.position;
                if (nodeComputedStyle.position == 'sticky' || nodeComputedStyle.position == '-webkit-sticky') node.style.position = 'static';
    
                /*
                 * 4. Get necessary node parameters
                 */
                var referenceNode = node.parentNode;
                var parentNode = shadowRootExists && referenceNode instanceof ShadowRoot ? referenceNode.host : referenceNode;
                var nodeWinOffset = node.getBoundingClientRect();
                var parentWinOffset = parentNode.getBoundingClientRect();
                var parentComputedStyle = getComputedStyle(parentNode);
    
                this._parent = {
                    node: parentNode,
                    styles: {
                        position: parentNode.style.position
                    },
                    offsetHeight: parentNode.offsetHeight
                };
                this._offsetToWindow = {
                    left: nodeWinOffset.left,
                    right: document.documentElement.clientWidth - nodeWinOffset.right
                };
                this._offsetToParent = {
                    top: nodeWinOffset.top - parentWinOffset.top - parseNumeric(parentComputedStyle.borderTopWidth),
                    left: nodeWinOffset.left - parentWinOffset.left - parseNumeric(parentComputedStyle.borderLeftWidth),
                    right: -nodeWinOffset.right + parentWinOffset.right - parseNumeric(parentComputedStyle.borderRightWidth)
                };
                this._styles = {
                    position: originalPosition,
                    top: node.style.top,
                    bottom: node.style.bottom,
                    left: node.style.left,
                    right: node.style.right,
                    width: node.style.width,
                    marginTop: node.style.marginTop,
                    marginLeft: node.style.marginLeft,
                    marginRight: node.style.marginRight
                };
    
                var nodeTopValue = parseNumeric(nodeComputedProps.top);
                this._limits = {
                    start: nodeWinOffset.top + window.pageYOffset - nodeTopValue,
                    end: parentWinOffset.top + window.pageYOffset + parentNode.offsetHeight - parseNumeric(parentComputedStyle.borderBottomWidth) - node.offsetHeight - nodeTopValue - parseNumeric(nodeComputedProps.marginBottom)
                };
    
                /*
                 * 5. Ensure that the node will be positioned relatively to the parent node
                 */
                var parentPosition = parentComputedStyle.position;
    
                if (parentPosition != 'absolute' && parentPosition != 'relative') {
                    parentNode.style.position = 'relative';
                }
    
                /*
                 * 6. Recalc node position.
                 *    It’s important to do this before clone injection to avoid scrolling bug in Chrome.
                 */
                this._recalcPosition();
    
                /*
                 * 7. Create a clone
                 */
                var clone = this._clone = {};
                clone.node = document.createElement('div');
    
                // Apply styles to the clone
                extend(clone.node.style, {
                    width: nodeWinOffset.right - nodeWinOffset.left + 'px',
                    height: nodeWinOffset.bottom - nodeWinOffset.top + 'px',
                    marginTop: nodeComputedProps.marginTop,
                    marginBottom: nodeComputedProps.marginBottom,
                    marginLeft: nodeComputedProps.marginLeft,
                    marginRight: nodeComputedProps.marginRight,
                    cssFloat: nodeComputedProps.cssFloat,
                    padding: 0,
                    border: 0,
                    borderSpacing: 0,
                    fontSize: '1em',
                    position: 'static'
                });
    
                referenceNode.insertBefore(clone.node, node);
                clone.docOffsetTop = getDocOffsetTop(clone.node);
            }
        }, {
            key: '_recalcPosition',
            value: function _recalcPosition() {
                if (!this._active || this._removed) return;
    
                var stickyMode = scroll.top <= this._limits.start ? 'start' : scroll.top >= this._limits.end ? 'end' : 'middle';
    
                if (this._stickyMode == stickyMode) return;
    
                switch (stickyMode) {
                    case 'start':
                        extend(this._node.style, {
                            position: 'absolute',
                            left: this._offsetToParent.left + 'px',
                            right: this._offsetToParent.right + 'px',
                            top: this._offsetToParent.top + 'px',
                            bottom: 'auto',
                            width: 'auto',
                            marginLeft: 0,
                            marginRight: 0,
                            marginTop: 0
                        });
                        break;
    
                    case 'middle':
                        extend(this._node.style, {
                            position: 'fixed',
                            left: this._offsetToWindow.left + 'px',
                            right: this._offsetToWindow.right + 'px',
                            top: this._styles.top,
                            bottom: 'auto',
                            width: 'auto',
                            marginLeft: 0,
                            marginRight: 0,
                            marginTop: 0
                        });
                        break;
    
                    case 'end':
                        extend(this._node.style, {
                            position: 'absolute',
                            left: this._offsetToParent.left + 'px',
                            right: this._offsetToParent.right + 'px',
                            top: 'auto',
                            bottom: 0,
                            width: 'auto',
                            marginLeft: 0,
                            marginRight: 0
                        });
                        break;
                }
    
                this._stickyMode = stickyMode;
            }
        }, {
            key: '_fastCheck',
            value: function _fastCheck() {
                if (!this._active || this._removed) return;
    
                if (Math.abs(getDocOffsetTop(this._clone.node) - this._clone.docOffsetTop) > 1 || Math.abs(this._parent.node.offsetHeight - this._parent.offsetHeight) > 1) this.refresh();
            }
        }, {
            key: '_deactivate',
            value: function _deactivate() {
                var _this = this;
    
                if (!this._active || this._removed) return;
    
                this._clone.node.parentNode.removeChild(this._clone.node);
                delete this._clone;
    
                extend(this._node.style, this._styles);
                delete this._styles;
    
                // Check whether element’s parent node is used by other stickies.
                // If not, restore parent node’s styles.
                if (!stickies.some(function (sticky) {
                    return sticky !== _this && sticky._parent && sticky._parent.node === _this._parent.node;
                })) {
                    extend(this._parent.node.style, this._parent.styles);
                }
                delete this._parent;
    
                this._stickyMode = null;
                this._active = false;
    
                delete this._offsetToWindow;
                delete this._offsetToParent;
                delete this._limits;
            }
        }, {
            key: 'remove',
            value: function remove() {
                var _this2 = this;
    
                this._deactivate();
    
                stickies.some(function (sticky, index) {
                    if (sticky._node === _this2._node) {
                        stickies.splice(index, 1);
                        return true;
                    }
                });
    
                this._removed = true;
            }
        }]);
    
        return Sticky;
    }();
    
    /*
     * 5. Stickyfill API
     */
    
    
    var Stickyfill = {
        stickies: stickies,
        Sticky: Sticky,
    
        forceSticky: function forceSticky() {
            seppuku = false;
            init();
    
            this.refreshAll();
        },
        addOne: function addOne(node) {
            // Check whether it’s a node
            if (!(node instanceof HTMLElement)) {
                // Maybe it’s a node list of some sort?
                // Take first node from the list then
                if (node.length && node[0]) node = node[0];else return;
            }
    
            // Check if Stickyfill is already applied to the node
            // and return existing sticky
            for (var i = 0; i < stickies.length; i++) {
                if (stickies[i]._node === node) return stickies[i];
            }
    
            // Create and return new sticky
            return new Sticky(node);
        },
        add: function add(nodeList) {
            // If it’s a node make an array of one node
            if (nodeList instanceof HTMLElement) nodeList = [nodeList];
            // Check if the argument is an iterable of some sort
            if (!nodeList.length) return;
    
            // Add every element as a sticky and return an array of created Sticky instances
            var addedStickies = [];
    
            var _loop = function _loop(i) {
                var node = nodeList[i];
    
                // If it’s not an HTMLElement – create an empty element to preserve 1-to-1
                // correlation with input list
                if (!(node instanceof HTMLElement)) {
                    addedStickies.push(void 0);
                    return 'continue';
                }
    
                // If Stickyfill is already applied to the node
                // add existing sticky
                if (stickies.some(function (sticky) {
                    if (sticky._node === node) {
                        addedStickies.push(sticky);
                        return true;
                    }
                })) return 'continue';
    
                // Create and add new sticky
                addedStickies.push(new Sticky(node));
            };
    
            for (var i = 0; i < nodeList.length; i++) {
                var _ret2 = _loop(i);
    
                if (_ret2 === 'continue') continue;
            }
    
            return addedStickies;
        },
        refreshAll: function refreshAll() {
            stickies.forEach(function (sticky) {
                return sticky.refresh();
            });
        },
        removeOne: function removeOne(node) {
            // Check whether it’s a node
            if (!(node instanceof HTMLElement)) {
                // Maybe it’s a node list of some sort?
                // Take first node from the list then
                if (node.length && node[0]) node = node[0];else return;
            }
    
            // Remove the stickies bound to the nodes in the list
            stickies.some(function (sticky) {
                if (sticky._node === node) {
                    sticky.remove();
                    return true;
                }
            });
        },
        remove: function remove(nodeList) {
            // If it’s a node make an array of one node
            if (nodeList instanceof HTMLElement) nodeList = [nodeList];
            // Check if the argument is an iterable of some sort
            if (!nodeList.length) return;
    
            // Remove the stickies bound to the nodes in the list
    
            var _loop2 = function _loop2(i) {
                var node = nodeList[i];
    
                stickies.some(function (sticky) {
                    if (sticky._node === node) {
                        sticky.remove();
                        return true;
                    }
                });
            };
    
            for (var i = 0; i < nodeList.length; i++) {
                _loop2(i);
            }
        },
        removeAll: function removeAll() {
            while (stickies.length) {
                stickies[0].remove();
            }
        }
    };
    
    /*
     * 6. Setup events (unless the polyfill was disabled)
     */
    function init() {
        if (isInitialized) {
            return;
        }
    
        isInitialized = true;
    
        // Watch for scroll position changes and trigger recalc/refresh if needed
        function checkScroll() {
            if (window.pageXOffset != scroll.left) {
                scroll.top = window.pageYOffset;
                scroll.left = window.pageXOffset;
    
                Stickyfill.refreshAll();
            } else if (window.pageYOffset != scroll.top) {
                scroll.top = window.pageYOffset;
                scroll.left = window.pageXOffset;
    
                // recalc position for all stickies
                stickies.forEach(function (sticky) {
                    return sticky._recalcPosition();
                });
            }
        }
    
        checkScroll();
        window.addEventListener('scroll', checkScroll);
    
        // Watch for window resizes and device orientation changes and trigger refresh
        window.addEventListener('resize', Stickyfill.refreshAll);
        window.addEventListener('orientationchange', Stickyfill.refreshAll);
    
        //Fast dirty check for layout changes every 500ms
        var fastCheckTimer = void 0;
    
        function startFastCheckTimer() {
            fastCheckTimer = setInterval(function () {
                stickies.forEach(function (sticky) {
                    return sticky._fastCheck();
                });
            }, 500);
        }
    
        function stopFastCheckTimer() {
            clearInterval(fastCheckTimer);
        }
    
        var docHiddenKey = void 0;
        var visibilityChangeEventName = void 0;
    
        if ('hidden' in document) {
            docHiddenKey = 'hidden';
            visibilityChangeEventName = 'visibilitychange';
        } else if ('webkitHidden' in document) {
            docHiddenKey = 'webkitHidden';
            visibilityChangeEventName = 'webkitvisibilitychange';
        }
    
        if (visibilityChangeEventName) {
            if (!document[docHiddenKey]) startFastCheckTimer();
    
            document.addEventListener(visibilityChangeEventName, function () {
                if (document[docHiddenKey]) {
                    stopFastCheckTimer();
                } else {
                    startFastCheckTimer();
                }
            });
        } else startFastCheckTimer();
    }
    
    if (!seppuku) init();
    
    /*
     * 7. Expose Stickyfill
     */
    if (typeof module != 'undefined' && module.exports) {
        module.exports = Stickyfill;
    } else if (isWindowDefined) {
        window.Stickyfill = Stickyfill;
    }
    
})(window, document);
/*! Copyright (c) Jonas Mosbech - https://github.com/jmosbech/StickyTableHeaders
	MIT license info: https://github.com/jmosbech/StickyTableHeaders/blob/master/license.txt */

;(function ($, window, undefined) {
	'use strict';

	var name = 'stickyTableHeaders',
		id = 0,
		defaults = {
			fixedOffset: 0,
			leftOffset: 0,
			marginTop: 0,
			objDocument: document,
			objHead: 'head',
			objWindow: window,
			scrollableArea: window,
			cacheHeaderHeight: false,
			zIndex: 3
		};

	function Plugin (el, options) {
		// To avoid scope issues, use 'base' instead of 'this'
		// to reference this class from internal events and functions.
		var base = this;

		// Access to jQuery and DOM versions of element
		base.$el = $(el);
		base.el = el;
		base.id = id++;

		// Listen for destroyed, call teardown
		base.$el.bind('destroyed',
			$.proxy(base.teardown, base));

		// Cache DOM refs for performance reasons
		base.$clonedHeader = null;
		base.$originalHeader = null;

		// Cache header height for performance reasons
		base.cachedHeaderHeight = null;

		// Keep track of state
		base.isSticky = false;
		base.hasBeenSticky = false;
		base.leftOffset = null;
		base.topOffset = null;

		base.init = function () {
			base.setOptions(options);

			base.$el.each(function () {
				var $this = $(this);

				// remove padding on <table> to fix issue #7
				$this.css('padding', 0);

				base.$originalHeader = $('thead:first', this);
				base.$clonedHeader = base.$originalHeader.clone();
				$this.trigger('clonedHeader.' + name, [base.$clonedHeader]);

				base.$clonedHeader.addClass('tableFloatingHeader');
				base.$clonedHeader.css({display: 'none', opacity: 0.0});

				base.$originalHeader.addClass('tableFloatingHeaderOriginal');

				base.$originalHeader.after(base.$clonedHeader);

				base.$printStyle = $('<style type="text/css" media="print">' +
					'.tableFloatingHeader{display:none !important;}' +
					'.tableFloatingHeaderOriginal{position:static !important;}' +
					'</style>');
				base.$head.append(base.$printStyle);
			});
			
			base.$clonedHeader.find("input, select").attr("disabled", true);

			base.updateWidth();
			base.toggleHeaders();
			base.bind();
		};

		base.destroy = function (){
			base.$el.unbind('destroyed', base.teardown);
			base.teardown();
		};

		base.teardown = function(){
			if (base.isSticky) {
				base.$originalHeader.css('position', 'static');
			}
			$.removeData(base.el, 'plugin_' + name);
			base.unbind();

			base.$clonedHeader.remove();
			base.$originalHeader.removeClass('tableFloatingHeaderOriginal');
			base.$originalHeader.css('visibility', 'visible');
			base.$printStyle.remove();

			base.el = null;
			base.$el = null;
		};

		base.bind = function(){
			base.$scrollableArea.on('scroll.' + name, base.toggleHeaders);
			if (!base.isWindowScrolling) {
				base.$window.on('scroll.' + name + base.id, base.setPositionValues);
				base.$window.on('resize.' + name + base.id, base.toggleHeaders);
			}
			base.$scrollableArea.on('resize.' + name, base.toggleHeaders);
			base.$scrollableArea.on('resize.' + name, base.updateWidth);
		};

		base.unbind = function(){
			// unbind window events by specifying handle so we don't remove too much
			base.$scrollableArea.off('.' + name, base.toggleHeaders);
			if (!base.isWindowScrolling) {
				base.$window.off('.' + name + base.id, base.setPositionValues);
				base.$window.off('.' + name + base.id, base.toggleHeaders);
			}
			base.$scrollableArea.off('.' + name, base.updateWidth);
		};

		// We debounce the functions bound to the scroll and resize events
		base.debounce = function (fn, delay) {
			var timer = null;
			return function () {
				var context = this, args = arguments;
				clearTimeout(timer);
				timer = setTimeout(function () {
					fn.apply(context, args);
				}, delay);
			};
		};

		base.toggleHeaders = base.debounce(function () {
			if (base.$el) {
				base.$el.each(function () {
					var $this = $(this),
						newLeft,
						newTopOffset = base.isWindowScrolling ? (
									isNaN(base.options.fixedOffset) ?
									base.options.fixedOffset.outerHeight() :
									base.options.fixedOffset
								) :
								base.$scrollableArea.offset().top + (!isNaN(base.options.fixedOffset) ? base.options.fixedOffset : 0),
						offset = $this.offset(),

						scrollTop = base.$scrollableArea.scrollTop() + newTopOffset,
						scrollLeft = base.$scrollableArea.scrollLeft(),

						headerHeight,

						scrolledPastTop = base.isWindowScrolling ?
								scrollTop > offset.top :
								newTopOffset > offset.top,
						notScrolledPastBottom;

					if (scrolledPastTop) {
						headerHeight = base.options.cacheHeaderHeight ? base.cachedHeaderHeight : base.$clonedHeader.height();
						notScrolledPastBottom = (base.isWindowScrolling ? scrollTop : 0) <
							(offset.top + $this.height() - headerHeight - (base.isWindowScrolling ? 0 : newTopOffset));
					}

					if (scrolledPastTop && notScrolledPastBottom) {
						newLeft = offset.left - scrollLeft + base.options.leftOffset;
						base.$originalHeader.css({
							'position': 'fixed',
							'margin-top': base.options.marginTop,
                                                        'top': 0,
							'left': newLeft,
							'z-index': base.options.zIndex
						});
						base.leftOffset = newLeft;
						base.topOffset = newTopOffset;
						base.$clonedHeader.css('display', '');
						if (!base.isSticky) {
							base.isSticky = true;
							// make sure the width is correct: the user might have resized the browser while in static mode
							base.updateWidth();
							$this.trigger('enabledStickiness.' + name);
						}
						base.setPositionValues();
					} else if (base.isSticky) {
						base.$originalHeader.css('position', 'static');
						base.$clonedHeader.css('display', 'none');
						base.isSticky = false;
						base.resetWidth($('td,th', base.$clonedHeader), $('td,th', base.$originalHeader));
						$this.trigger('disabledStickiness.' + name);
					}
				});
			}
		}, 0);

		base.setPositionValues = base.debounce(function () {
			var winScrollTop = base.$window.scrollTop(),
				winScrollLeft = base.$window.scrollLeft();
			if (!base.isSticky ||
					winScrollTop < 0 || winScrollTop + base.$window.height() > base.$document.height() ||
					winScrollLeft < 0 || winScrollLeft + base.$window.width() > base.$document.width()) {
				return;
			}
			base.$originalHeader.css({
				'top': base.topOffset - (base.isWindowScrolling ? 0 : winScrollTop),
				'left': base.leftOffset - (base.isWindowScrolling ? 0 : winScrollLeft)
			});
		}, 0);

		base.updateWidth = base.debounce(function () {
			if (!base.isSticky) {
				return;
			}
			// Copy cell widths from clone
			if (!base.$originalHeaderCells) {
				base.$originalHeaderCells = $('th,td', base.$originalHeader);
			}
			if (!base.$clonedHeaderCells) {
				base.$clonedHeaderCells = $('th,td', base.$clonedHeader);
			}
			var cellWidths = base.getWidth(base.$clonedHeaderCells);
			base.setWidth(cellWidths, base.$clonedHeaderCells, base.$originalHeaderCells);

			// Copy row width from whole table
			base.$originalHeader.css('width', base.$clonedHeader.width());

			// If we're caching the height, we need to update the cached value when the width changes
			if (base.options.cacheHeaderHeight) {
				base.cachedHeaderHeight = base.$clonedHeader.height();
			}
		}, 0);

		base.getWidth = function ($clonedHeaders) {
			var widths = [];
			$clonedHeaders.each(function (index) {
				var width, $this = $(this);

				if ($this.css('box-sizing') === 'border-box') {
					var boundingClientRect = $this[0].getBoundingClientRect();
					if(boundingClientRect.width) {
						width = boundingClientRect.width; // #39: border-box bug
					} else {
						width = boundingClientRect.right - boundingClientRect.left; // ie8 bug: getBoundingClientRect() does not have a width property
					}
				} else {
					var $origTh = $('th', base.$originalHeader);
					if ($origTh.css('border-collapse') === 'collapse') {
						if (window.getComputedStyle) {
							width = parseFloat(window.getComputedStyle(this, null).width);
						} else {
							// ie8 only
							var leftPadding = parseFloat($this.css('padding-left'));
							var rightPadding = parseFloat($this.css('padding-right'));
							// Needs more investigation - this is assuming constant border around this cell and it's neighbours.
							var border = parseFloat($this.css('border-width'));
							width = $this.outerWidth() - leftPadding - rightPadding - border;
						}
					} else {
						width = $this.width();
					}
				}

				widths[index] = width;
			});
			return widths;
		};

		base.setWidth = function (widths, $clonedHeaders, $origHeaders) {
			$clonedHeaders.each(function (index) {
				var width = widths[index];
				$origHeaders.eq(index).css({
					'min-width': width,
					'max-width': width
				});
			});
		};

		base.resetWidth = function ($clonedHeaders, $origHeaders) {
			$clonedHeaders.each(function (index) {
				var $this = $(this);
				$origHeaders.eq(index).css({
					'min-width': $this.css('min-width'),
					'max-width': $this.css('max-width')
				});
			});
		};

		base.setOptions = function (options) {
			base.options = $.extend({}, defaults, options);
			base.$window = $(base.options.objWindow);
			base.$head = $(base.options.objHead);
			base.$document = $(base.options.objDocument);
			base.$scrollableArea = $(base.options.scrollableArea);
			base.isWindowScrolling = base.$scrollableArea[0] === base.$window[0];
		};

		base.updateOptions = function (options) {
			base.setOptions(options);
			// scrollableArea might have changed
			base.unbind();
			base.bind();
			base.updateWidth();
			base.toggleHeaders();
		};

		// Run initializer
		base.init();
	}

	// A plugin wrapper around the constructor,
	// preventing against multiple instantiations
	$.fn[name] = function ( options ) {
		return this.each(function () {
			var instance = $.data(this, 'plugin_' + name);
			if (instance) {
				if (typeof options === 'string') {
					instance[options].apply(instance);
				} else {
					instance.updateOptions(options);
				}
			} else if(options !== 'destroy') {
				$.data(this, 'plugin_' + name, new Plugin( this, options ));
			}
		});
	};

})(jQuery, window);
//! moment.js

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate (y) {
        var date;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            var args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays (ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays :
            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
            : (m) ? weekdays[m.day()] : weekdays;
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    var MS_PER_SECOND = 1000;
    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':   return months;
                case 'quarter': return months / 3;
                case 'year':    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asQuarters     = makeAs('Q');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asQuarters     = asQuarters;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.24.0';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.3';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `map`.
     *
     * @private
     * @param {Object} map The map to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned map.
     */
    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of `set`.
     *
     * @private
     * @param {Object} set The set to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned set.
     */
    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor);
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value, key) {
      return (key !== undefined && isPlainObject(value)) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length &&
        (typeof value == 'number' || reIsUint.test(value)) &&
        (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(args) {
      args.push(undefined, customDefaultsAssignIn);
      return apply(assignInWith, undefined, args);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    define(function() {
      return _;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

// Data Tables
/*! DataTables 1.10.11
 * ©2008-2015 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     DataTables
 * @description Paginate, search and order HTML tables
 * @version     1.10.11
 * @file        jquery.dataTables.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 * @copyright   Copyright 2008-2015 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/

(function( factory ) {
	"use strict";

	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				// CommonJS environments without a window global must pass a
				// root. This will give an error otherwise
				root = window;
			}

			if ( ! $ ) {
				$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window
					require('jquery') :
					require('jquery')( root );
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}
(function( $, window, document, undefined ) {
	"use strict";

	/**
	 * DataTables is a plug-in for the jQuery Javascript library. It is a highly
	 * flexible tool, based upon the foundations of progressive enhancement,
	 * which will add advanced interaction controls to any HTML table. For a
	 * full list of features please refer to
	 * [DataTables.net](href="http://datatables.net).
	 *
	 * Note that the `DataTable` object is not a global variable but is aliased
	 * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may
	 * be  accessed.
	 *
	 *  @class
	 *  @param {object} [init={}] Configuration object for DataTables. Options
	 *    are defined by {@link DataTable.defaults}
	 *  @requires jQuery 1.7+
	 *
	 *  @example
	 *    // Basic initialisation
	 *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
	 *
	 *  @example
	 *    // Initialisation with configuration options - in this case, disable
	 *    // pagination and sorting.
	 *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "paginate": false,
	 *        "sort": false
	 *      } );
	 *    } );
	 */
	var DataTable;

	
	/*
	 * It is useful to have variables which are scoped locally so only the
	 * DataTables functions can access them and they don't leak into global space.
	 * At the same time these functions are often useful over multiple files in the
	 * core and API, so we list, or at least document, all variables which are used
	 * by DataTables as private variables here. This also ensures that there is no
	 * clashing of variable names and that they can easily referenced for reuse.
	 */
	
	
	// Defined else where
	//  _selector_run
	//  _selector_opts
	//  _selector_first
	//  _selector_row_indexes
	
	var _ext; // DataTable.ext
	var _Api; // DataTable.Api
	var _api_register; // DataTable.Api.register
	var _api_registerPlural; // DataTable.Api.registerPlural
	
	var _re_dic = {};
	var _re_new_lines = /[\r\n]/g;
	var _re_html = /<.*?>/g;
	var _re_date_start = /^[\w\+\-]/;
	var _re_date_end = /[\w\+\-]$/;
	
	// Escape regular expression special characters
	var _re_escape_regex = new RegExp( '(\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-' ].join('|\\') + ')', 'g' );
	
	// http://en.wikipedia.org/wiki/Foreign_exchange_market
	// - \u20BD - Russian ruble.
	// - \u20a9 - South Korean Won
	// - \u20BA - Turkish Lira
	// - \u20B9 - Indian Rupee
	// - R - Brazil (R$) and South Africa
	// - fr - Swiss Franc
	// - kr - Swedish krona, Norwegian krone and Danish krone
	// - \u2009 is thin space and \u202F is narrow no-break space, both used in many
	//   standards as thousands separators.
	var _re_formatted_numeric = /[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi;
	
	
	var _empty = function ( d ) {
		return !d || d === true || d === '-' ? true : false;
	};
	
	
	var _intVal = function ( s ) {
		var integer = parseInt( s, 10 );
		return !isNaN(integer) && isFinite(s) ? integer : null;
	};
	
	// Convert from a formatted number with characters other than `.` as the
	// decimal place, to a Javascript number
	var _numToDecimal = function ( num, decimalPoint ) {
		// Cache created regular expressions for speed as this function is called often
		if ( ! _re_dic[ decimalPoint ] ) {
			_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );
		}
		return typeof num === 'string' && decimalPoint !== '.' ?
			num.replace( /\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :
			num;
	};
	
	
	var _isNumber = function ( d, decimalPoint, formatted ) {
		var strType = typeof d === 'string';
	
		// If empty return immediately so there must be a number if it is a
		// formatted string (this stops the string "k", or "kr", etc being detected
		// as a formatted number for currency
		if ( _empty( d ) ) {
			return true;
		}
	
		if ( decimalPoint && strType ) {
			d = _numToDecimal( d, decimalPoint );
		}
	
		if ( formatted && strType ) {
			d = d.replace( _re_formatted_numeric, '' );
		}
	
		return !isNaN( parseFloat(d) ) && isFinite( d );
	};
	
	
	// A string without HTML in it can be considered to be HTML still
	var _isHtml = function ( d ) {
		return _empty( d ) || typeof d === 'string';
	};
	
	
	var _htmlNumeric = function ( d, decimalPoint, formatted ) {
		if ( _empty( d ) ) {
			return true;
		}
	
		var html = _isHtml( d );
		return ! html ?
			null :
			_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?
				true :
				null;
	};
	
	
	var _pluck = function ( a, prop, prop2 ) {
		var out = [];
		var i=0, ien=a.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[i] && a[i][ prop ] ) {
					out.push( a[i][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				if ( a[i] ) {
					out.push( a[i][ prop ] );
				}
			}
		}
	
		return out;
	};
	
	
	// Basically the same as _pluck, but rather than looping over `a` we use `order`
	// as the indexes to pick from `a`
	var _pluck_order = function ( a, order, prop, prop2 )
	{
		var out = [];
		var i=0, ien=order.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[ order[i] ][ prop ] ) {
					out.push( a[ order[i] ][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				out.push( a[ order[i] ][ prop ] );
			}
		}
	
		return out;
	};
	
	
	var _range = function ( len, start )
	{
		var out = [];
		var end;
	
		if ( start === undefined ) {
			start = 0;
			end = len;
		}
		else {
			end = start;
			start = len;
		}
	
		for ( var i=start ; i<end ; i++ ) {
			out.push( i );
		}
	
		return out;
	};
	
	
	var _removeEmpty = function ( a )
	{
		var out = [];
	
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( a[i] ) { // careful - will remove all falsy values!
				out.push( a[i] );
			}
		}
	
		return out;
	};
	
	
	var _stripHtml = function ( d ) {
		return d.replace( _re_html, '' );
	};
	
	
	/**
	 * Find the unique elements in a source array.
	 *
	 * @param  {array} src Source array
	 * @return {array} Array of unique items
	 * @ignore
	 */
	var _unique = function ( src )
	{
		// A faster unique method is to use object keys to identify used values,
		// but this doesn't work with arrays or objects, which we must also
		// consider. See jsperf.com/compare-array-unique-versions/4 for more
		// information.
		var
			out = [],
			val,
			i, ien=src.length,
			j, k=0;
	
		again: for ( i=0 ; i<ien ; i++ ) {
			val = src[i];
	
			for ( j=0 ; j<k ; j++ ) {
				if ( out[j] === val ) {
					continue again;
				}
			}
	
			out.push( val );
			k++;
		}
	
		return out;
	};
	
	
	
	/**
	 * Create a mapping object that allows camel case parameters to be looked up
	 * for their Hungarian counterparts. The mapping is stored in a private
	 * parameter called `_hungarianMap` which can be accessed on the source object.
	 *  @param {object} o
	 *  @memberof DataTable#oApi
	 */
	function _fnHungarianMap ( o )
	{
		var
			hungarian = 'a aa ai ao as b fn i m o s ',
			match,
			newKey,
			map = {};
	
		$.each( o, function (key, val) {
			match = key.match(/^([^A-Z]+?)([A-Z])/);
	
			if ( match && hungarian.indexOf(match[1]+' ') !== -1 )
			{
				newKey = key.replace( match[0], match[2].toLowerCase() );
				map[ newKey ] = key;
	
				if ( match[1] === 'o' )
				{
					_fnHungarianMap( o[key] );
				}
			}
		} );
	
		o._hungarianMap = map;
	}
	
	
	/**
	 * Convert from camel case parameters to Hungarian, based on a Hungarian map
	 * created by _fnHungarianMap.
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 *  @memberof DataTable#oApi
	 */
	function _fnCamelToHungarian ( src, user, force )
	{
		if ( ! src._hungarianMap ) {
			_fnHungarianMap( src );
		}
	
		var hungarianKey;
	
		$.each( user, function (key, val) {
			hungarianKey = src._hungarianMap[ key ];
	
			if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )
			{
				// For objects, we need to buzz down into the object to copy parameters
				if ( hungarianKey.charAt(0) === 'o' )
				{
					// Copy the camelCase options over to the hungarian
					if ( ! user[ hungarianKey ] ) {
						user[ hungarianKey ] = {};
					}
					$.extend( true, user[hungarianKey], user[key] );
	
					_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );
				}
				else {
					user[hungarianKey] = user[ key ];
				}
			}
		} );
	}
	
	
	/**
	 * Language compatibility - when certain options are given, and others aren't, we
	 * need to duplicate the values over, in order to provide backwards compatibility
	 * with older language files.
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnLanguageCompat( lang )
	{
		var defaults = DataTable.defaults.oLanguage;
		var zeroRecords = lang.sZeroRecords;
	
		/* Backwards compatibility - if there is no sEmptyTable given, then use the same as
		 * sZeroRecords - assuming that is given.
		 */
		if ( ! lang.sEmptyTable && zeroRecords &&
			defaults.sEmptyTable === "No data available in table" )
		{
			_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );
		}
	
		/* Likewise with loading records */
		if ( ! lang.sLoadingRecords && zeroRecords &&
			defaults.sLoadingRecords === "Loading..." )
		{
			_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );
		}
	
		// Old parameter name of the thousands separator mapped onto the new
		if ( lang.sInfoThousands ) {
			lang.sThousands = lang.sInfoThousands;
		}
	
		var decimal = lang.sDecimal;
		if ( decimal ) {
			_addNumericSort( decimal );
		}
	}
	
	
	/**
	 * Map one parameter onto another
	 *  @param {object} o Object to map
	 *  @param {*} knew The new parameter name
	 *  @param {*} old The old parameter name
	 */
	var _fnCompatMap = function ( o, knew, old ) {
		if ( o[ knew ] !== undefined ) {
			o[ old ] = o[ knew ];
		}
	};
	
	
	/**
	 * Provide backwards compatibility for the main DT options. Note that the new
	 * options are mapped onto the old parameters, so this is an external interface
	 * change only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatOpts ( init )
	{
		_fnCompatMap( init, 'ordering',      'bSort' );
		_fnCompatMap( init, 'orderMulti',    'bSortMulti' );
		_fnCompatMap( init, 'orderClasses',  'bSortClasses' );
		_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );
		_fnCompatMap( init, 'order',         'aaSorting' );
		_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );
		_fnCompatMap( init, 'paging',        'bPaginate' );
		_fnCompatMap( init, 'pagingType',    'sPaginationType' );
		_fnCompatMap( init, 'pageLength',    'iDisplayLength' );
		_fnCompatMap( init, 'searching',     'bFilter' );
	
		// Boolean initialisation of x-scrolling
		if ( typeof init.sScrollX === 'boolean' ) {
			init.sScrollX = init.sScrollX ? '100%' : '';
		}
		if ( typeof init.scrollX === 'boolean' ) {
			init.scrollX = init.scrollX ? '100%' : '';
		}
	
		// Column search objects are in an array, so it needs to be converted
		// element by element
		var searchCols = init.aoSearchCols;
	
		if ( searchCols ) {
			for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {
				if ( searchCols[i] ) {
					_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );
				}
			}
		}
	}
	
	
	/**
	 * Provide backwards compatibility for column options. Note that the new options
	 * are mapped onto the old parameters, so this is an external interface change
	 * only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatCols ( init )
	{
		_fnCompatMap( init, 'orderable',     'bSortable' );
		_fnCompatMap( init, 'orderData',     'aDataSort' );
		_fnCompatMap( init, 'orderSequence', 'asSorting' );
		_fnCompatMap( init, 'orderDataType', 'sortDataType' );
	
		// orderData can be given as an integer
		var dataSort = init.aDataSort;
		if ( dataSort && ! $.isArray( dataSort ) ) {
			init.aDataSort = [ dataSort ];
		}
	}
	
	
	/**
	 * Browser feature detection for capabilities, quirks
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBrowserDetect( settings )
	{
		// We don't need to do this every time DataTables is constructed, the values
		// calculated are specific to the browser and OS configuration which we
		// don't expect to change between initialisations
		if ( ! DataTable.__browser ) {
			var browser = {};
			DataTable.__browser = browser;
	
			// Scrolling feature / quirks detection
			var n = $('<div/>')
				.css( {
					position: 'fixed',
					top: 0,
					left: 0,
					height: 1,
					width: 1,
					overflow: 'hidden'
				} )
				.append(
					$('<div/>')
						.css( {
							position: 'absolute',
							top: 1,
							left: 1,
							width: 100,
							overflow: 'scroll'
						} )
						.append(
							$('<div/>')
								.css( {
									width: '100%',
									height: 10
								} )
						)
				)
				.appendTo( 'body' );
	
			var outer = n.children();
			var inner = outer.children();
	
			// Numbers below, in order, are:
			// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth
			//
			// IE6 XP:                           100 100 100  83
			// IE7 Vista:                        100 100 100  83
			// IE 8+ Windows:                     83  83 100  83
			// Evergreen Windows:                 83  83 100  83
			// Evergreen Mac with scrollbars:     85  85 100  85
			// Evergreen Mac without scrollbars: 100 100 100 100
	
			// Get scrollbar width
			browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;
	
			// IE6/7 will oversize a width 100% element inside a scrolling element, to
			// include the width of the scrollbar, while other browsers ensure the inner
			// element is contained without forcing scrolling
			browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;
	
			// In rtl text layout, some browsers (most, but not all) will place the
			// scrollbar on the left, rather than the right.
			browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;
	
			// IE8- don't provide height and width for getBoundingClientRect
			browser.bBounding = n[0].getBoundingClientRect().width ? true : false;
	
			n.remove();
		}
	
		$.extend( settings.oBrowser, DataTable.__browser );
		settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
	}
	
	
	/**
	 * Array.prototype reduce[Right] method, used for browsers which don't support
	 * JS 1.6. Done this way to reduce code size, since we iterate either way
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnReduce ( that, fn, init, start, end, inc )
	{
		var
			i = start,
			value,
			isSet = false;
	
		if ( init !== undefined ) {
			value = init;
			isSet = true;
		}
	
		while ( i !== end ) {
			if ( ! that.hasOwnProperty(i) ) {
				continue;
			}
	
			value = isSet ?
				fn( value, that[i], i, that ) :
				that[i];
	
			isSet = true;
			i += inc;
		}
	
		return value;
	}
	
	/**
	 * Add a column to the list used for the table with default values
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nTh The th element for this column
	 *  @memberof DataTable#oApi
	 */
	function _fnAddColumn( oSettings, nTh )
	{
		// Add column to aoColumns array
		var oDefaults = DataTable.defaults.column;
		var iCol = oSettings.aoColumns.length;
		var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {
			"nTh": nTh ? nTh : document.createElement('th'),
			"sTitle":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',
			"aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
			"mData": oDefaults.mData ? oDefaults.mData : iCol,
			idx: iCol
		} );
		oSettings.aoColumns.push( oCol );
	
		// Add search object for column specific search. Note that the `searchCols[ iCol ]`
		// passed into extend can be undefined. This allows the user to give a default
		// with only some of the parameters defined, and also not give a default
		var searchCols = oSettings.aoPreSearchCols;
		searchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );
	
		// Use the default column options function to initialise classes etc
		_fnColumnOptions( oSettings, iCol, $(nTh).data() );
	}
	
	
	/**
	 * Apply options for a column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column index to consider
	 *  @param {object} oOptions object with sType, bVisible and bSearchable etc
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnOptions( oSettings, iCol, oOptions )
	{
		var oCol = oSettings.aoColumns[ iCol ];
		var oClasses = oSettings.oClasses;
		var th = $(oCol.nTh);
	
		// Try to get width information from the DOM. We can't get it from CSS
		// as we'd need to parse the CSS stylesheet. `width` option can override
		if ( ! oCol.sWidthOrig ) {
			// Width attribute
			oCol.sWidthOrig = th.attr('width') || null;
	
			// Style attribute
			var t = (th.attr('style') || '').match(/width:\s*(\d+[pxem%]+)/);
			if ( t ) {
				oCol.sWidthOrig = t[1];
			}
		}
	
		/* User specified column options */
		if ( oOptions !== undefined && oOptions !== null )
		{
			// Backwards compatibility
			_fnCompatCols( oOptions );
	
			// Map camel case parameters to their Hungarian counterparts
			_fnCamelToHungarian( DataTable.defaults.column, oOptions );
	
			/* Backwards compatibility for mDataProp */
			if ( oOptions.mDataProp !== undefined && !oOptions.mData )
			{
				oOptions.mData = oOptions.mDataProp;
			}
	
			if ( oOptions.sType )
			{
				oCol._sManualType = oOptions.sType;
			}
	
			// `class` is a reserved word in Javascript, so we need to provide
			// the ability to use a valid name for the camel case input
			if ( oOptions.className && ! oOptions.sClass )
			{
				oOptions.sClass = oOptions.className;
			}
	
			$.extend( oCol, oOptions );
			_fnMap( oCol, oOptions, "sWidth", "sWidthOrig" );
	
			/* iDataSort to be applied (backwards compatibility), but aDataSort will take
			 * priority if defined
			 */
			if ( oOptions.iDataSort !== undefined )
			{
				oCol.aDataSort = [ oOptions.iDataSort ];
			}
			_fnMap( oCol, oOptions, "aDataSort" );
		}
	
		/* Cache the data get and set functions for speed */
		var mDataSrc = oCol.mData;
		var mData = _fnGetObjectDataFn( mDataSrc );
		var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;
	
		var attrTest = function( src ) {
			return typeof src === 'string' && src.indexOf('@') !== -1;
		};
		oCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (
			attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)
		);
		oCol._setter = null;
	
		oCol.fnGetData = function (rowData, type, meta) {
			var innerData = mData( rowData, type, undefined, meta );
	
			return mRender && type ?
				mRender( innerData, type, rowData, meta ) :
				innerData;
		};
		oCol.fnSetData = function ( rowData, val, meta ) {
			return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );
		};
	
		// Indicate if DataTables should read DOM data as an object or array
		// Used in _fnGetRowElements
		if ( typeof mDataSrc !== 'number' ) {
			oSettings._rowReadObject = true;
		}
	
		/* Feature sorting overrides column specific when off */
		if ( !oSettings.oFeatures.bSort )
		{
			oCol.bSortable = false;
			th.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called
		}
	
		/* Check that the class assignment is correct for sorting */
		var bAsc = $.inArray('asc', oCol.asSorting) !== -1;
		var bDesc = $.inArray('desc', oCol.asSorting) !== -1;
		if ( !oCol.bSortable || (!bAsc && !bDesc) )
		{
			oCol.sSortingClass = oClasses.sSortableNone;
			oCol.sSortingClassJUI = "";
		}
		else if ( bAsc && !bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableAsc;
			oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;
		}
		else if ( !bAsc && bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableDesc;
			oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;
		}
		else
		{
			oCol.sSortingClass = oClasses.sSortable;
			oCol.sSortingClassJUI = oClasses.sSortJUI;
		}
	}
	
	
	/**
	 * Adjust the table column widths for new data. Note: you would probably want to
	 * do a redraw after calling this function!
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAdjustColumnSizing ( settings )
	{
		/* Not interested in doing column width calculation if auto-width is disabled */
		if ( settings.oFeatures.bAutoWidth !== false )
		{
			var columns = settings.aoColumns;
	
			_fnCalculateColumnWidths( settings );
			for ( var i=0 , iLen=columns.length ; i<iLen ; i++ )
			{
				columns[i].nTh.style.width = columns[i].sWidth;
			}
		}
	
		var scroll = settings.oScroll;
		if ( scroll.sY !== '' || scroll.sX !== '')
		{
			_fnScrollDraw( settings );
		}
	
		_fnCallbackFire( settings, null, 'column-sizing', [settings] );
	}
	
	
	/**
	 * Covert the index of a visible column to the index in the data array (take account
	 * of hidden columns)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iMatch Visible column index to lookup
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnVisibleToColumnIndex( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
	
		return typeof aiVis[iMatch] === 'number' ?
			aiVis[iMatch] :
			null;
	}
	
	
	/**
	 * Covert the index of an index in the data array and convert it to the visible
	 *   column index (take account of hidden columns)
	 *  @param {int} iMatch Column index to lookup
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnIndexToVisible( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
		var iPos = $.inArray( iMatch, aiVis );
	
		return iPos !== -1 ? iPos : null;
	}
	
	
	/**
	 * Get the number of visible columns
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the number of visible columns
	 *  @memberof DataTable#oApi
	 */
	function _fnVisbleColumns( oSettings )
	{
		return $( _pluck( oSettings.aoColumns, 'nTh' ) ).filter(':visible').length;
	}
	
	
	/**
	 * Get an array of column indexes that match a given property
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sParam Parameter in aoColumns to look for - typically
	 *    bVisible or bSearchable
	 *  @returns {array} Array of indexes with matched properties
	 *  @memberof DataTable#oApi
	 */
	function _fnGetColumns( oSettings, sParam )
	{
		var a = [];
	
		$.map( oSettings.aoColumns, function(val, i) {
			if ( val[sParam] ) {
				a.push( i );
			}
		} );
	
		return a;
	}
	
	
	/**
	 * Calculate the 'type' of a column
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnTypes ( settings )
	{
		var columns = settings.aoColumns;
		var data = settings.aoData;
		var types = DataTable.ext.type.detect;
		var i, ien, j, jen, k, ken;
		var col, cell, detectedType, cache;
	
		// For each column, spin over the 
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			col = columns[i];
			cache = [];
	
			if ( ! col.sType && col._sManualType ) {
				col.sType = col._sManualType;
			}
			else if ( ! col.sType ) {
				for ( j=0, jen=types.length ; j<jen ; j++ ) {
					for ( k=0, ken=data.length ; k<ken ; k++ ) {
						// Use a cache array so we only need to get the type data
						// from the formatter once (when using multiple detectors)
						if ( cache[k] === undefined ) {
							cache[k] = _fnGetCellData( settings, k, i, 'type' );
						}
	
						detectedType = types[j]( cache[k], settings );
	
						// If null, then this type can't apply to this column, so
						// rather than testing all cells, break out. There is an
						// exception for the last type which is `html`. We need to
						// scan all rows since it is possible to mix string and HTML
						// types
						if ( ! detectedType && j !== types.length-1 ) {
							break;
						}
	
						// Only a single match is needed for html type since it is
						// bottom of the pile and very similar to string
						if ( detectedType === 'html' ) {
							break;
						}
					}
	
					// Type is valid for all data points in the column - use this
					// type
					if ( detectedType ) {
						col.sType = detectedType;
						break;
					}
				}
	
				// Fall back - if no type was detected, always use string
				if ( ! col.sType ) {
					col.sType = 'string';
				}
			}
		}
	}
	
	
	/**
	 * Take the column definitions and static columns arrays and calculate how
	 * they relate to column indexes. The callback function will then apply the
	 * definition found for a column to a suitable configuration object.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
	 *  @param {array} aoCols The aoColumns array that defines columns individually
	 *  @param {function} fn Callback function - takes two parameters, the calculated
	 *    column index and the definition for that column.
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )
	{
		var i, iLen, j, jLen, k, kLen, def;
		var columns = oSettings.aoColumns;
	
		// Column definitions with aTargets
		if ( aoColDefs )
		{
			/* Loop over the definitions array - loop in reverse so first instance has priority */
			for ( i=aoColDefs.length-1 ; i>=0 ; i-- )
			{
				def = aoColDefs[i];
	
				/* Each definition can target multiple columns, as it is an array */
				var aTargets = def.targets !== undefined ?
					def.targets :
					def.aTargets;
	
				if ( ! $.isArray( aTargets ) )
				{
					aTargets = [ aTargets ];
				}
	
				for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )
				{
					if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )
					{
						/* Add columns that we don't yet know about */
						while( columns.length <= aTargets[j] )
						{
							_fnAddColumn( oSettings );
						}
	
						/* Integer, basic index */
						fn( aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )
					{
						/* Negative integer, right to left column counting */
						fn( columns.length+aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'string' )
					{
						/* Class name matching on TH element */
						for ( k=0, kLen=columns.length ; k<kLen ; k++ )
						{
							if ( aTargets[j] == "_all" ||
							     $(columns[k].nTh).hasClass( aTargets[j] ) )
							{
								fn( k, def );
							}
						}
					}
				}
			}
		}
	
		// Statically defined columns array
		if ( aoCols )
		{
			for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )
			{
				fn( i, aoCols[i] );
			}
		}
	}
	
	/**
	 * Add a data array to the table, creating DOM node etc. This is the parallel to
	 * _fnGatherData, but for adding rows from a Javascript source, rather than a
	 * DOM source.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aData data array to be added
	 *  @param {node} [nTr] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
	 *  @memberof DataTable#oApi
	 */
	function _fnAddData ( oSettings, aDataIn, nTr, anTds )
	{
		/* Create the object for storing information about this new row */
		var iRow = oSettings.aoData.length;
		var oData = $.extend( true, {}, DataTable.models.oRow, {
			src: nTr ? 'dom' : 'data',
			idx: iRow
		} );
	
		oData._aData = aDataIn;
		oSettings.aoData.push( oData );
	
		/* Create the cells */
		var nTd, sThisType;
		var columns = oSettings.aoColumns;
	
		// Invalidate the column types as the new data needs to be revalidated
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			columns[i].sType = null;
		}
	
		/* Add to the display array */
		oSettings.aiDisplayMaster.push( iRow );
	
		var id = oSettings.rowIdFn( aDataIn );
		if ( id !== undefined ) {
			oSettings.aIds[ id ] = oData;
		}
	
		/* Create the DOM information, or register it if already present */
		if ( nTr || ! oSettings.oFeatures.bDeferRender )
		{
			_fnCreateTr( oSettings, iRow, nTr, anTds );
		}
	
		return iRow;
	}
	
	
	/**
	 * Add one or more TR elements to the table. Generally we'd expect to
	 * use this for reading data from a DOM sourced table, but it could be
	 * used for an TR element. Note that if a TR is given, it is used (i.e.
	 * it is not cloned).
	 *  @param {object} settings dataTables settings object
	 *  @param {array|node|jQuery} trs The TR element(s) to add to the table
	 *  @returns {array} Array of indexes for the added rows
	 *  @memberof DataTable#oApi
	 */
	function _fnAddTr( settings, trs )
	{
		var row;
	
		// Allow an individual node to be passed in
		if ( ! (trs instanceof $) ) {
			trs = $(trs);
		}
	
		return trs.map( function (i, el) {
			row = _fnGetRowElements( settings, el );
			return _fnAddData( settings, row.data, el, row.cells );
		} );
	}
	
	
	/**
	 * Take a TR element and convert it to an index in aoData
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} n the TR element to find
	 *  @returns {int} index if the node is found, null if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToDataIndex( oSettings, n )
	{
		return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;
	}
	
	
	/**
	 * Take a TD element and convert it into a column data index (not the visible index)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow The row number the TD/TH can be found in
	 *  @param {node} n The TD/TH element to find
	 *  @returns {int} index if the node is found, -1 if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToColumnIndex( oSettings, iRow, n )
	{
		return $.inArray( n, oSettings.aoData[ iRow ].anCells );
	}
	
	
	/**
	 * Get the data for a given cell from the internal cache, taking into account data mapping
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {string} type data get type ('display', 'type' 'filter' 'sort')
	 *  @returns {*} Cell data
	 *  @memberof DataTable#oApi
	 */
	function _fnGetCellData( settings, rowIdx, colIdx, type )
	{
		var draw           = settings.iDraw;
		var col            = settings.aoColumns[colIdx];
		var rowData        = settings.aoData[rowIdx]._aData;
		var defaultContent = col.sDefaultContent;
		var cellData       = col.fnGetData( rowData, type, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		} );
	
		if ( cellData === undefined ) {
			if ( settings.iDrawError != draw && defaultContent === null ) {
				_fnLog( settings, 0, "Requested unknown parameter "+
					(typeof col.mData=='function' ? '{function}' : "'"+col.mData+"'")+
					" for row "+rowIdx+", column "+colIdx, 4 );
				settings.iDrawError = draw;
			}
			return defaultContent;
		}
	
		// When the data source is null and a specific data type is requested (i.e.
		// not the original data), we can use default column data
		if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {
			cellData = defaultContent;
		}
		else if ( typeof cellData === 'function' ) {
			// If the data source is a function, then we run it and use the return,
			// executing in the scope of the data object (for instances)
			return cellData.call( rowData );
		}
	
		if ( cellData === null && type == 'display' ) {
			return '';
		}
		return cellData;
	}
	
	
	/**
	 * Set the value for a specific cell, into the internal data cache
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {*} val Value to set
	 *  @memberof DataTable#oApi
	 */
	function _fnSetCellData( settings, rowIdx, colIdx, val )
	{
		var col     = settings.aoColumns[colIdx];
		var rowData = settings.aoData[rowIdx]._aData;
	
		col.fnSetData( rowData, val, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		}  );
	}
	
	
	// Private variable that is used to match action syntax in the data property object
	var __reArray = /\[.*?\]$/;
	var __reFn = /\(\)$/;
	
	/**
	 * Split string on periods, taking into account escaped periods
	 * @param  {string} str String to split
	 * @return {array} Split string
	 */
	function _fnSplitObjNotation( str )
	{
		return $.map( str.match(/(\\.|[^\.])+/g) || [''], function ( s ) {
			return s.replace(/\\./g, '.');
		} );
	}
	
	
	/**
	 * Return a function that can be used to get data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data get function
	 *  @memberof DataTable#oApi
	 */
	function _fnGetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Build an object of get functions, and wrap them in a single call */
			var o = {};
			$.each( mSource, function (key, val) {
				if ( val ) {
					o[key] = _fnGetObjectDataFn( val );
				}
			} );
	
			return function (data, type, row, meta) {
				var t = o[type] || o._;
				return t !== undefined ?
					t(data, type, row, meta) :
					data;
			};
		}
		else if ( mSource === null )
		{
			/* Give an empty string for rendering / sorting etc */
			return function (data) { // type, row and meta also passed, but not used
				return data;
			};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, type, row, meta) {
				return mSource( data, type, row, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* If there is a . in the source string then the data source is in a
			 * nested object so we loop over the data for each level to get the next
			 * level down. On each loop we test for undefined, and if found immediately
			 * return. This allows entire objects to be missing and sDefaultContent to
			 * be used if defined, rather than throwing an error
			 */
			var fetchData = function (data, type, src) {
				var arrayNotation, funcNotation, out, innerSrc;
	
				if ( src !== "" )
				{
					var a = _fnSplitObjNotation( src );
	
					for ( var i=0, iLen=a.length ; i<iLen ; i++ )
					{
						// Check if we are dealing with special notation
						arrayNotation = a[i].match(__reArray);
						funcNotation = a[i].match(__reFn);
	
						if ( arrayNotation )
						{
							// Array notation
							a[i] = a[i].replace(__reArray, '');
	
							// Condition allows simply [] to be passed in
							if ( a[i] !== "" ) {
								data = data[ a[i] ];
							}
							out = [];
	
							// Get the remainder of the nested object to get
							a.splice( 0, i+1 );
							innerSrc = a.join('.');
	
							// Traverse each entry in the array getting the properties requested
							if ( $.isArray( data ) ) {
								for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {
									out.push( fetchData( data[j], type, innerSrc ) );
								}
							}
	
							// If a string is given in between the array notation indicators, that
							// is used to join the strings together, otherwise an array is returned
							var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);
							data = (join==="") ? out : out.join(join);
	
							// The inner call to fetchData has already traversed through the remainder
							// of the source requested, so we exit from the loop
							break;
						}
						else if ( funcNotation )
						{
							// Function call
							a[i] = a[i].replace(__reFn, '');
							data = data[ a[i] ]();
							continue;
						}
	
						if ( data === null || data[ a[i] ] === undefined )
						{
							return undefined;
						}
						data = data[ a[i] ];
					}
				}
	
				return data;
			};
	
			return function (data, type) { // row and meta also passed, but not used
				return fetchData( data, type, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, type) { // row and meta also passed, but not used
				return data[mSource];
			};
		}
	}
	
	
	/**
	 * Return a function that can be used to set data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data set function
	 *  @memberof DataTable#oApi
	 */
	function _fnSetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Unlike get, only the underscore (global) option is used for for
			 * setting data since we don't know the type here. This is why an object
			 * option is not documented for `mData` (which is read/write), but it is
			 * for `mRender` which is read only.
			 */
			return _fnSetObjectDataFn( mSource._ );
		}
		else if ( mSource === null )
		{
			/* Nothing to do when the data source is null */
			return function () {};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, val, meta) {
				mSource( data, 'set', val, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* Like the get, we need to get data from a nested object */
			var setData = function (data, val, src) {
				var a = _fnSplitObjNotation( src ), b;
				var aLast = a[a.length-1];
				var arrayNotation, funcNotation, o, innerSrc;
	
				for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )
				{
					// Check if we are dealing with an array notation request
					arrayNotation = a[i].match(__reArray);
					funcNotation = a[i].match(__reFn);
	
					if ( arrayNotation )
					{
						a[i] = a[i].replace(__reArray, '');
						data[ a[i] ] = [];
	
						// Get the remainder of the nested object to set so we can recurse
						b = a.slice();
						b.splice( 0, i+1 );
						innerSrc = b.join('.');
	
						// Traverse each entry in the array setting the properties requested
						if ( $.isArray( val ) )
						{
							for ( var j=0, jLen=val.length ; j<jLen ; j++ )
							{
								o = {};
								setData( o, val[j], innerSrc );
								data[ a[i] ].push( o );
							}
						}
						else
						{
							// We've been asked to save data to an array, but it
							// isn't array data to be saved. Best that can be done
							// is to just save the value.
							data[ a[i] ] = val;
						}
	
						// The inner call to setData has already traversed through the remainder
						// of the source and has set the data, thus we can exit here
						return;
					}
					else if ( funcNotation )
					{
						// Function call
						a[i] = a[i].replace(__reFn, '');
						data = data[ a[i] ]( val );
					}
	
					// If the nested object doesn't currently exist - since we are
					// trying to set the value - create it
					if ( data[ a[i] ] === null || data[ a[i] ] === undefined )
					{
						data[ a[i] ] = {};
					}
					data = data[ a[i] ];
				}
	
				// Last item in the input - i.e, the actual set
				if ( aLast.match(__reFn ) )
				{
					// Function call
					data = data[ aLast.replace(__reFn, '') ]( val );
				}
				else
				{
					// If array notation is used, we just want to strip it and use the property name
					// and assign the value. If it isn't used, then we get the result we want anyway
					data[ aLast.replace(__reArray, '') ] = val;
				}
			};
	
			return function (data, val) { // meta is also passed in, but not used
				return setData( data, val, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, val) { // meta is also passed in, but not used
				data[mSource] = val;
			};
		}
	}
	
	
	/**
	 * Return an array with the full table data
	 *  @param {object} oSettings dataTables settings object
	 *  @returns array {array} aData Master data array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetDataMaster ( settings )
	{
		return _pluck( settings.aoData, '_aData' );
	}
	
	
	/**
	 * Nuke the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnClearTable( settings )
	{
		settings.aoData.length = 0;
		settings.aiDisplayMaster.length = 0;
		settings.aiDisplay.length = 0;
		settings.aIds = {};
	}
	
	
	 /**
	 * Take an array of integers (index array) and remove a target integer (value - not
	 * the key!)
	 *  @param {array} a Index array to target
	 *  @param {int} iTarget value to find
	 *  @memberof DataTable#oApi
	 */
	function _fnDeleteIndex( a, iTarget, splice )
	{
		var iTargetIndex = -1;
	
		for ( var i=0, iLen=a.length ; i<iLen ; i++ )
		{
			if ( a[i] == iTarget )
			{
				iTargetIndex = i;
			}
			else if ( a[i] > iTarget )
			{
				a[i]--;
			}
		}
	
		if ( iTargetIndex != -1 && splice === undefined )
		{
			a.splice( iTargetIndex, 1 );
		}
	}
	
	
	/**
	 * Mark cached data as invalid such that a re-read of the data will occur when
	 * the cached data is next requested. Also update from the data source object.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {int}    rowIdx   Row index to invalidate
	 * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'
	 *     or 'data'
	 * @param {int}    [colIdx] Column index to invalidate. If undefined the whole
	 *     row will be invalidated
	 * @memberof DataTable#oApi
	 *
	 * @todo For the modularisation of v1.11 this will need to become a callback, so
	 *   the sort and filter methods can subscribe to it. That will required
	 *   initialisation options for sorting, which is why it is not already baked in
	 */
	function _fnInvalidate( settings, rowIdx, src, colIdx )
	{
		var row = settings.aoData[ rowIdx ];
		var i, ien;
		var cellWrite = function ( cell, col ) {
			// This is very frustrating, but in IE if you just write directly
			// to innerHTML, and elements that are overwritten are GC'ed,
			// even if there is a reference to them elsewhere
			while ( cell.childNodes.length ) {
				cell.removeChild( cell.firstChild );
			}
	
			cell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );
		};
	
		// Are we reading last data from DOM or the data object?
		if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {
			// Read the data from the DOM
			row._aData = _fnGetRowElements(
					settings, row, colIdx, colIdx === undefined ? undefined : row._aData
				)
				.data;
		}
		else {
			// Reading from data object, update the DOM
			var cells = row.anCells;
	
			if ( cells ) {
				if ( colIdx !== undefined ) {
					cellWrite( cells[colIdx], colIdx );
				}
				else {
					for ( i=0, ien=cells.length ; i<ien ; i++ ) {
						cellWrite( cells[i], i );
					}
				}
			}
		}
	
		// For both row and cell invalidation, the cached data for sorting and
		// filtering is nulled out
		row._aSortData = null;
		row._aFilterData = null;
	
		// Invalidate the type for a specific column (if given) or all columns since
		// the data might have changed
		var cols = settings.aoColumns;
		if ( colIdx !== undefined ) {
			cols[ colIdx ].sType = null;
		}
		else {
			for ( i=0, ien=cols.length ; i<ien ; i++ ) {
				cols[i].sType = null;
			}
	
			// Update DataTables special `DT_*` attributes for the row
			_fnRowAttributes( settings, row );
		}
	}
	
	
	/**
	 * Build a data source object from an HTML row, reading the contents of the
	 * cells that are in the row.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {node|object} TR element from which to read data or existing row
	 *   object from which to re-read the data from the cells
	 * @param {int} [colIdx] Optional column index
	 * @param {array|object} [d] Data source object. If `colIdx` is given then this
	 *   parameter should also be given and will be used to write the data into.
	 *   Only the column in question will be written
	 * @returns {object} Object with two parameters: `data` the data read, in
	 *   document order, and `cells` and array of nodes (they can be useful to the
	 *   caller, so rather than needing a second traversal to get them, just return
	 *   them from here).
	 * @memberof DataTable#oApi
	 */
	function _fnGetRowElements( settings, row, colIdx, d )
	{
		var
			tds = [],
			td = row.firstChild,
			name, col, o, i=0, contents,
			columns = settings.aoColumns,
			objectRead = settings._rowReadObject;
	
		// Allow the data object to be passed in, or construct
		d = d !== undefined ?
			d :
			objectRead ?
				{} :
				[];
	
		var attr = function ( str, td  ) {
			if ( typeof str === 'string' ) {
				var idx = str.indexOf('@');
	
				if ( idx !== -1 ) {
					var attr = str.substring( idx+1 );
					var setter = _fnSetObjectDataFn( str );
					setter( d, td.getAttribute( attr ) );
				}
			}
		};
	
		// Read data from a cell and store into the data object
		var cellProcess = function ( cell ) {
			if ( colIdx === undefined || colIdx === i ) {
				col = columns[i];
				contents = $.trim(cell.innerHTML);
	
				if ( col && col._bAttrSrc ) {
					var setter = _fnSetObjectDataFn( col.mData._ );
					setter( d, contents );
	
					attr( col.mData.sort, cell );
					attr( col.mData.type, cell );
					attr( col.mData.filter, cell );
				}
				else {
					// Depending on the `data` option for the columns the data can
					// be read to either an object or an array.
					if ( objectRead ) {
						if ( ! col._setter ) {
							// Cache the setter function
							col._setter = _fnSetObjectDataFn( col.mData );
						}
						col._setter( d, contents );
					}
					else {
						d[i] = contents;
					}
				}
			}
	
			i++;
		};
	
		if ( td ) {
			// `tr` element was passed in
			while ( td ) {
				name = td.nodeName.toUpperCase();
	
				if ( name == "TD" || name == "TH" ) {
					cellProcess( td );
					tds.push( td );
				}
	
				td = td.nextSibling;
			}
		}
		else {
			// Existing row object passed in
			tds = row.anCells;
	
			for ( var j=0, jen=tds.length ; j<jen ; j++ ) {
				cellProcess( tds[j] );
			}
		}
	
		// Read the ID from the DOM if present
		var rowNode = row.firstChild ? row : row.nTr;
	
		if ( rowNode ) {
			var id = rowNode.getAttribute( 'id' );
	
			if ( id ) {
				_fnSetObjectDataFn( settings.rowId )( d, id );
			}
		}
	
		return {
			data: d,
			cells: tds
		};
	}
	/**
	 * Create a new TR element (and it's TD children) for a row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow Row to consider
	 *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @memberof DataTable#oApi
	 */
	function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )
	{
		var
			row = oSettings.aoData[iRow],
			rowData = row._aData,
			cells = [],
			nTr, nTd, oCol,
			i, iLen;
	
		if ( row.nTr === null )
		{
			nTr = nTrIn || document.createElement('tr');
	
			row.nTr = nTr;
			row.anCells = cells;
	
			/* Use a private property on the node to allow reserve mapping from the node
			 * to the aoData array for fast look up
			 */
			nTr._DT_RowIndex = iRow;
	
			/* Special parameters can be given by the data source to be used on the row */
			_fnRowAttributes( oSettings, row );
	
			/* Process each column */
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				oCol = oSettings.aoColumns[i];
	
				nTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );
				nTd._DT_CellIndex = {
					row: iRow,
					column: i
				};
				
				cells.push( nTd );
	
				// Need to create the HTML if new, or if a rendering function is defined
				if ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&
					 (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')
				) {
					nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );
				}
	
				/* Add user defined class */
				if ( oCol.sClass )
				{
					nTd.className += ' '+oCol.sClass;
				}
	
				// Visibility - add or remove as required
				if ( oCol.bVisible && ! nTrIn )
				{
					nTr.appendChild( nTd );
				}
				else if ( ! oCol.bVisible && nTrIn )
				{
					nTd.parentNode.removeChild( nTd );
				}
	
				if ( oCol.fnCreatedCell )
				{
					oCol.fnCreatedCell.call( oSettings.oInstance,
						nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i
					);
				}
			}
	
			_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );
		}
	
		// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved
		// and deployed
		row.nTr.setAttribute( 'role', 'row' );
	}
	
	
	/**
	 * Add attributes to a row based on the special `DT_*` parameters in a data
	 * source object.
	 *  @param {object} settings DataTables settings object
	 *  @param {object} DataTables row object for the row to be modified
	 *  @memberof DataTable#oApi
	 */
	function _fnRowAttributes( settings, row )
	{
		var tr = row.nTr;
		var data = row._aData;
	
		if ( tr ) {
			var id = settings.rowIdFn( data );
	
			if ( id ) {
				tr.id = id;
			}
	
			if ( data.DT_RowClass ) {
				// Remove any classes added by DT_RowClass before
				var a = data.DT_RowClass.split(' ');
				row.__rowc = row.__rowc ?
					_unique( row.__rowc.concat( a ) ) :
					a;
	
				$(tr)
					.removeClass( row.__rowc.join(' ') )
					.addClass( data.DT_RowClass );
			}
	
			if ( data.DT_RowAttr ) {
				$(tr).attr( data.DT_RowAttr );
			}
	
			if ( data.DT_RowData ) {
				$(tr).data( data.DT_RowData );
			}
		}
	}
	
	
	/**
	 * Create the HTML header for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildHead( oSettings )
	{
		var i, ien, cell, row, column;
		var thead = oSettings.nTHead;
		var tfoot = oSettings.nTFoot;
		var createHeader = $('th, td', thead).length === 0;
		var classes = oSettings.oClasses;
		var columns = oSettings.aoColumns;
	
		if ( createHeader ) {
			row = $('<tr/>').appendTo( thead );
		}
	
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			column = columns[i];
			cell = $( column.nTh ).addClass( column.sClass );
	
			if ( createHeader ) {
				cell.appendTo( row );
			}
	
			// 1.11 move into sorting
			if ( oSettings.oFeatures.bSort ) {
				cell.addClass( column.sSortingClass );
	
				if ( column.bSortable !== false ) {
					cell
						.attr( 'tabindex', oSettings.iTabIndex )
						.attr( 'aria-controls', oSettings.sTableId );
	
					_fnSortAttachListener( oSettings, column.nTh, i );
				}
			}
	
			if ( column.sTitle != cell[0].innerHTML ) {
				cell.html( column.sTitle );
			}
	
			_fnRenderer( oSettings, 'header' )(
				oSettings, cell, column, classes
			);
		}
	
		if ( createHeader ) {
			_fnDetectHeader( oSettings.aoHeader, thead );
		}
		
		/* ARIA role for the rows */
	 	$(thead).find('>tr').attr('role', 'row');
	
		/* Deal with the footer - add classes if required */
		$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );
		$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );
	
		// Cache the footer cells. Note that we only take the cells from the first
		// row in the footer. If there is more than one row the user wants to
		// interact with, they need to use the table().foot() method. Note also this
		// allows cells to be used for multiple columns using colspan
		if ( tfoot !== null ) {
			var cells = oSettings.aoFooter[0];
	
			for ( i=0, ien=cells.length ; i<ien ; i++ ) {
				column = columns[i];
				column.nTf = cells[i].cell;
	
				if ( column.sClass ) {
					$(column.nTf).addClass( column.sClass );
				}
			}
		}
	}
	
	
	/**
	 * Draw the header (or footer) element based on the column visibility states. The
	 * methodology here is to use the layout array from _fnDetectHeader, modified for
	 * the instantaneous column visibility, to construct the new layout. The grid is
	 * traversed over cell at a time in a rows x columns grid fashion, although each
	 * cell insert can cover multiple elements in the grid - which is tracks using the
	 * aApplied array. Cell inserts in the grid will only occur where there isn't
	 * already a cell in that position.
	 *  @param {object} oSettings dataTables settings object
	 *  @param array {objects} aoSource Layout array from _fnDetectHeader
	 *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
	 *  @memberof DataTable#oApi
	 */
	function _fnDrawHead( oSettings, aoSource, bIncludeHidden )
	{
		var i, iLen, j, jLen, k, kLen, n, nLocalTr;
		var aoLocal = [];
		var aApplied = [];
		var iColumns = oSettings.aoColumns.length;
		var iRowspan, iColspan;
	
		if ( ! aoSource )
		{
			return;
		}
	
		if (  bIncludeHidden === undefined )
		{
			bIncludeHidden = false;
		}
	
		/* Make a copy of the master layout array, but without the visible columns in it */
		for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )
		{
			aoLocal[i] = aoSource[i].slice();
			aoLocal[i].nTr = aoSource[i].nTr;
	
			/* Remove any columns which are currently hidden */
			for ( j=iColumns-1 ; j>=0 ; j-- )
			{
				if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )
				{
					aoLocal[i].splice( j, 1 );
				}
			}
	
			/* Prep the applied array - it needs an element for each row */
			aApplied.push( [] );
		}
	
		for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )
		{
			nLocalTr = aoLocal[i].nTr;
	
			/* All cells are going to be replaced, so empty out the row */
			if ( nLocalTr )
			{
				while( (n = nLocalTr.firstChild) )
				{
					nLocalTr.removeChild( n );
				}
			}
	
			for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )
			{
				iRowspan = 1;
				iColspan = 1;
	
				/* Check to see if there is already a cell (row/colspan) covering our target
				 * insert point. If there is, then there is nothing to do.
				 */
				if ( aApplied[i][j] === undefined )
				{
					nLocalTr.appendChild( aoLocal[i][j].cell );
					aApplied[i][j] = 1;
	
					/* Expand the cell to cover as many rows as needed */
					while ( aoLocal[i+iRowspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )
					{
						aApplied[i+iRowspan][j] = 1;
						iRowspan++;
					}
	
					/* Expand the cell to cover as many columns as needed */
					while ( aoLocal[i][j+iColspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )
					{
						/* Must update the applied array over the rows for the columns */
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aApplied[i+k][j+iColspan] = 1;
						}
						iColspan++;
					}
	
					/* Do the actual expansion in the DOM */
					$(aoLocal[i][j].cell)
						.attr('rowspan', iRowspan)
						.attr('colspan', iColspan);
				}
			}
		}
	}
	
	
	/**
	 * Insert the required TR nodes into the table for display
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnDraw( oSettings )
	{
		/* Provide a pre-callback function which can be used to cancel the draw is false is returned */
		var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );
		if ( $.inArray( false, aPreDraw ) !== -1 )
		{
			_fnProcessingDisplay( oSettings, false );
			return;
		}
	
		var i, iLen, n;
		var anRows = [];
		var iRowCount = 0;
		var asStripeClasses = oSettings.asStripeClasses;
		var iStripes = asStripeClasses.length;
		var iOpenRows = oSettings.aoOpenRows.length;
		var oLang = oSettings.oLanguage;
		var iInitDisplayStart = oSettings.iInitDisplayStart;
		var bServerSide = _fnDataSource( oSettings ) == 'ssp';
		var aiDisplay = oSettings.aiDisplay;
	
		oSettings.bDrawing = true;
	
		/* Check and see if we have an initial draw position from state saving */
		if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )
		{
			oSettings._iDisplayStart = bServerSide ?
				iInitDisplayStart :
				iInitDisplayStart >= oSettings.fnRecordsDisplay() ?
					0 :
					iInitDisplayStart;
	
			oSettings.iInitDisplayStart = -1;
		}
	
		var iDisplayStart = oSettings._iDisplayStart;
		var iDisplayEnd = oSettings.fnDisplayEnd();
	
		/* Server-side processing draw intercept */
		if ( oSettings.bDeferLoading )
		{
			oSettings.bDeferLoading = false;
			oSettings.iDraw++;
			_fnProcessingDisplay( oSettings, false );
		}
		else if ( !bServerSide )
		{
			oSettings.iDraw++;
		}
		else if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )
		{
			return;
		}
	
		if ( aiDisplay.length !== 0 )
		{
			var iStart = bServerSide ? 0 : iDisplayStart;
			var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;
	
			for ( var j=iStart ; j<iEnd ; j++ )
			{
				var iDataIndex = aiDisplay[j];
				var aoData = oSettings.aoData[ iDataIndex ];
				if ( aoData.nTr === null )
				{
					_fnCreateTr( oSettings, iDataIndex );
				}
	
				var nRow = aoData.nTr;
	
				/* Remove the old striping classes and then add the new one */
				if ( iStripes !== 0 )
				{
					var sStripe = asStripeClasses[ iRowCount % iStripes ];
					if ( aoData._sRowStripe != sStripe )
					{
						$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );
						aoData._sRowStripe = sStripe;
					}
				}
	
				// Row callback functions - might want to manipulate the row
				// iRowCount and j are not currently documented. Are they at all
				// useful?
				_fnCallbackFire( oSettings, 'aoRowCallback', null,
					[nRow, aoData._aData, iRowCount, j] );
	
				anRows.push( nRow );
				iRowCount++;
			}
		}
		else
		{
			/* Table is empty - create a row with an empty message in it */
			var sZero = oLang.sZeroRecords;
			if ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )
			{
				sZero = oLang.sLoadingRecords;
			}
			else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )
			{
				sZero = oLang.sEmptyTable;
			}
	
			anRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )
				.append( $('<td />', {
					'valign':  'top',
					'colSpan': _fnVisbleColumns( oSettings ),
					'class':   oSettings.oClasses.sRowEmpty
				} ).html( sZero ) )[0];
		}
	
		/* Header and footer callbacks */
		_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		var body = $(oSettings.nTBody);
	
		body.children().detach();
		body.append( $(anRows) );
	
		/* Call all required callback functions for the end of a draw */
		_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );
	
		/* Draw is complete, sorting and filtering must be as well */
		oSettings.bSorted = false;
		oSettings.bFiltered = false;
		oSettings.bDrawing = false;
	}
	
	
	/**
	 * Redraw the table - taking account of the various features which are enabled
	 *  @param {object} oSettings dataTables settings object
	 *  @param {boolean} [holdPosition] Keep the current paging position. By default
	 *    the paging is reset to the first page
	 *  @memberof DataTable#oApi
	 */
	function _fnReDraw( settings, holdPosition )
	{
		var
			features = settings.oFeatures,
			sort     = features.bSort,
			filter   = features.bFilter;
	
		if ( sort ) {
			_fnSort( settings );
		}
	
		if ( filter ) {
			_fnFilterComplete( settings, settings.oPreviousSearch );
		}
		else {
			// No filtering, so we want to just use the display master
			settings.aiDisplay = settings.aiDisplayMaster.slice();
		}
	
		if ( holdPosition !== true ) {
			settings._iDisplayStart = 0;
		}
	
		// Let any modules know about the draw hold position state (used by
		// scrolling internally)
		settings._drawHold = holdPosition;
	
		_fnDraw( settings );
	
		settings._drawHold = false;
	}
	
	
	/**
	 * Add the options to the page HTML for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAddOptionsHtml ( oSettings )
	{
		var classes = oSettings.oClasses;
		var table = $(oSettings.nTable);
		var holding = $('<div/>').insertBefore( table ); // Holding element for speed
		var features = oSettings.oFeatures;
	
		// All DataTables are wrapped in a div
		var insert = $('<div/>', {
			id:      oSettings.sTableId+'_wrapper',
			'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)
		} );
	
		oSettings.nHolding = holding[0];
		oSettings.nTableWrapper = insert[0];
		oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
	
		/* Loop over the user set positioning and place the elements as needed */
		var aDom = oSettings.sDom.split('');
		var featureNode, cOption, nNewNode, cNext, sAttr, j;
		for ( var i=0 ; i<aDom.length ; i++ )
		{
			featureNode = null;
			cOption = aDom[i];
	
			if ( cOption == '<' )
			{
				/* New container div */
				nNewNode = $('<div/>')[0];
	
				/* Check to see if we should append an id and/or a class name to the container */
				cNext = aDom[i+1];
				if ( cNext == "'" || cNext == '"' )
				{
					sAttr = "";
					j = 2;
					while ( aDom[i+j] != cNext )
					{
						sAttr += aDom[i+j];
						j++;
					}
	
					/* Replace jQuery UI constants @todo depreciated */
					if ( sAttr == "H" )
					{
						sAttr = classes.sJUIHeader;
					}
					else if ( sAttr == "F" )
					{
						sAttr = classes.sJUIFooter;
					}
	
					/* The attribute can be in the format of "#id.class", "#id" or "class" This logic
					 * breaks the string into parts and applies them as needed
					 */
					if ( sAttr.indexOf('.') != -1 )
					{
						var aSplit = sAttr.split('.');
						nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);
						nNewNode.className = aSplit[1];
					}
					else if ( sAttr.charAt(0) == "#" )
					{
						nNewNode.id = sAttr.substr(1, sAttr.length-1);
					}
					else
					{
						nNewNode.className = sAttr;
					}
	
					i += j; /* Move along the position array */
				}
	
				insert.append( nNewNode );
				insert = $(nNewNode);
			}
			else if ( cOption == '>' )
			{
				/* End container div */
				insert = insert.parent();
			}
			// @todo Move options into their own plugins?
			else if ( cOption == 'l' && features.bPaginate && features.bLengthChange )
			{
				/* Length */
				featureNode = _fnFeatureHtmlLength( oSettings );
			}
			else if ( cOption == 'f' && features.bFilter )
			{
				/* Filter */
				featureNode = _fnFeatureHtmlFilter( oSettings );
			}
			else if ( cOption == 'r' && features.bProcessing )
			{
				/* pRocessing */
				featureNode = _fnFeatureHtmlProcessing( oSettings );
			}
			else if ( cOption == 't' )
			{
				/* Table */
				featureNode = _fnFeatureHtmlTable( oSettings );
			}
			else if ( cOption ==  'i' && features.bInfo )
			{
				/* Info */
				featureNode = _fnFeatureHtmlInfo( oSettings );
			}
			else if ( cOption == 'p' && features.bPaginate )
			{
				/* Pagination */
				featureNode = _fnFeatureHtmlPaginate( oSettings );
			}
			else if ( DataTable.ext.feature.length !== 0 )
			{
				/* Plug-in features */
				var aoFeatures = DataTable.ext.feature;
				for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )
				{
					if ( cOption == aoFeatures[k].cFeature )
					{
						featureNode = aoFeatures[k].fnInit( oSettings );
						break;
					}
				}
			}
	
			/* Add to the 2D features array */
			if ( featureNode )
			{
				var aanFeatures = oSettings.aanFeatures;
	
				if ( ! aanFeatures[cOption] )
				{
					aanFeatures[cOption] = [];
				}
	
				aanFeatures[cOption].push( featureNode );
				insert.append( featureNode );
			}
		}
	
		/* Built our DOM structure - replace the holding div with what we want */
		holding.replaceWith( insert );
		oSettings.nHolding = null;
	}
	
	
	/**
	 * Use the DOM source to create up an array of header cells. The idea here is to
	 * create a layout grid (array) of rows x columns, which contains a reference
	 * to the cell that that point in the grid (regardless of col/rowspan), such that
	 * any column / row could be removed and the new grid constructed
	 *  @param array {object} aLayout Array to store the calculated layout in
	 *  @param {node} nThead The header/footer element for the table
	 *  @memberof DataTable#oApi
	 */
	function _fnDetectHeader ( aLayout, nThead )
	{
		var nTrs = $(nThead).children('tr');
		var nTr, nCell;
		var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
		var bUnique;
		var fnShiftCol = function ( a, i, j ) {
			var k = a[i];
	                while ( k[j] ) {
				j++;
			}
			return j;
		};
	
		aLayout.splice( 0, aLayout.length );
	
		/* We know how many rows there are in the layout - so prep it */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			aLayout.push( [] );
		}
	
		/* Calculate a layout array */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			nTr = nTrs[i];
			iColumn = 0;
	
			/* For every cell in the row... */
			nCell = nTr.firstChild;
			while ( nCell ) {
				if ( nCell.nodeName.toUpperCase() == "TD" ||
				     nCell.nodeName.toUpperCase() == "TH" )
				{
					/* Get the col and rowspan attributes from the DOM and sanitise them */
					iColspan = nCell.getAttribute('colspan') * 1;
					iRowspan = nCell.getAttribute('rowspan') * 1;
					iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;
					iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;
	
					/* There might be colspan cells already in this row, so shift our target
					 * accordingly
					 */
					iColShifted = fnShiftCol( aLayout, i, iColumn );
	
					/* Cache calculation for unique columns */
					bUnique = iColspan === 1 ? true : false;
	
					/* If there is col / rowspan, copy the information into the layout grid */
					for ( l=0 ; l<iColspan ; l++ )
					{
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aLayout[i+k][iColShifted+l] = {
								"cell": nCell,
								"unique": bUnique
							};
							aLayout[i+k].nTr = nTr;
						}
					}
				}
				nCell = nCell.nextSibling;
			}
		}
	}
	
	
	/**
	 * Get an array of unique th elements, one for each column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nHeader automatically detect the layout from this node - optional
	 *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
	 *  @returns array {node} aReturn list of unique th's
	 *  @memberof DataTable#oApi
	 */
	function _fnGetUniqueThs ( oSettings, nHeader, aLayout )
	{
		var aReturn = [];
		if ( !aLayout )
		{
			aLayout = oSettings.aoHeader;
			if ( nHeader )
			{
				aLayout = [];
				_fnDetectHeader( aLayout, nHeader );
			}
		}
	
		for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )
		{
			for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )
			{
				if ( aLayout[i][j].unique &&
					 (!aReturn[j] || !oSettings.bSortCellsTop) )
				{
					aReturn[j] = aLayout[i][j].cell;
				}
			}
		}
	
		return aReturn;
	}
	
	/**
	 * Create an Ajax call based on the table's settings, taking into account that
	 * parameters can have multiple forms, and backwards compatibility.
	 *
	 * @param {object} oSettings dataTables settings object
	 * @param {array} data Data to send to the server, required by
	 *     DataTables - may be augmented by developer callbacks
	 * @param {function} fn Callback function to run when data is obtained
	 */
	function _fnBuildAjax( oSettings, data, fn )
	{
		// Compatibility with 1.9-, allow fnServerData and event to manipulate
		_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );
	
		// Convert to object based for 1.10+ if using the old array scheme which can
		// come from server-side processing or serverParams
		if ( data && $.isArray(data) ) {
			var tmp = {};
			var rbracket = /(.*?)\[\]$/;
	
			$.each( data, function (key, val) {
				var match = val.name.match(rbracket);
	
				if ( match ) {
					// Support for arrays
					var name = match[0];
	
					if ( ! tmp[ name ] ) {
						tmp[ name ] = [];
					}
					tmp[ name ].push( val.value );
				}
				else {
					tmp[val.name] = val.value;
				}
			} );
			data = tmp;
		}
	
		var ajaxData;
		var ajax = oSettings.ajax;
		var instance = oSettings.oInstance;
		var callback = function ( json ) {
			_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );
			fn( json );
		};
	
		if ( $.isPlainObject( ajax ) && ajax.data )
		{
			ajaxData = ajax.data;
	
			var newData = $.isFunction( ajaxData ) ?
				ajaxData( data, oSettings ) :  // fn can manipulate data or return
				ajaxData;                      // an object object or array to merge
	
			// If the function returned something, use that alone
			data = $.isFunction( ajaxData ) && newData ?
				newData :
				$.extend( true, data, newData );
	
			// Remove the data property as we've resolved it already and don't want
			// jQuery to do it again (it is restored at the end of the function)
			delete ajax.data;
		}
	
		var baseAjax = {
			"data": data,
			"success": function (json) {
				var error = json.error || json.sError;
				if ( error ) {
					_fnLog( oSettings, 0, error );
				}
	
				oSettings.json = json;
				callback( json );
			},
			"dataType": "json",
			"cache": false,
			"type": oSettings.sServerMethod,
			"error": function (xhr, error, thrown) {
				var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );
	
				if ( $.inArray( true, ret ) === -1 ) {
					if ( error == "parsererror" ) {
						_fnLog( oSettings, 0, 'Invalid JSON response', 1 );
					}
					else if ( xhr.readyState === 4 ) {
						_fnLog( oSettings, 0, 'Ajax error', 7 );
					}
				}
	
				_fnProcessingDisplay( oSettings, false );
			}
		};
	
		// Store the data submitted for the API
		oSettings.oAjaxData = data;
	
		// Allow plug-ins and external processes to modify the data
		_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );
	
		if ( oSettings.fnServerData )
		{
			// DataTables 1.9- compatibility
			oSettings.fnServerData.call( instance,
				oSettings.sAjaxSource,
				$.map( data, function (val, key) { // Need to convert back to 1.9 trad format
					return { name: key, value: val };
				} ),
				callback,
				oSettings
			);
		}
		else if ( oSettings.sAjaxSource || typeof ajax === 'string' )
		{
			// DataTables 1.9- compatibility
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, {
				url: ajax || oSettings.sAjaxSource
			} ) );
		}
		else if ( $.isFunction( ajax ) )
		{
			// Is a function - let the caller define what needs to be done
			oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );
		}
		else
		{
			// Object to extend the base settings
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );
	
			// Restore for next time around
			ajax.data = ajaxData;
		}
	}
	
	
	/**
	 * Update the table using an Ajax call
	 *  @param {object} settings dataTables settings object
	 *  @returns {boolean} Block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdate( settings )
	{
		if ( settings.bAjaxDataGet ) {
			settings.iDraw++;
			_fnProcessingDisplay( settings, true );
	
			_fnBuildAjax(
				settings,
				_fnAjaxParameters( settings ),
				function(json) {
					_fnAjaxUpdateDraw( settings, json );
				}
			);
	
			return false;
		}
		return true;
	}
	
	
	/**
	 * Build up the parameters in an object needed for a server-side processing
	 * request. Note that this is basically done twice, is different ways - a modern
	 * method which is used by default in DataTables 1.10 which uses objects and
	 * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if
	 * the sAjaxSource option is used in the initialisation, or the legacyAjax
	 * option is set.
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {bool} block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxParameters( settings )
	{
		var
			columns = settings.aoColumns,
			columnCount = columns.length,
			features = settings.oFeatures,
			preSearch = settings.oPreviousSearch,
			preColSearch = settings.aoPreSearchCols,
			i, data = [], dataProp, column, columnSearch,
			sort = _fnSortFlatten( settings ),
			displayStart = settings._iDisplayStart,
			displayLength = features.bPaginate !== false ?
				settings._iDisplayLength :
				-1;
	
		var param = function ( name, value ) {
			data.push( { 'name': name, 'value': value } );
		};
	
		// DataTables 1.9- compatible method
		param( 'sEcho',          settings.iDraw );
		param( 'iColumns',       columnCount );
		param( 'sColumns',       _pluck( columns, 'sName' ).join(',') );
		param( 'iDisplayStart',  displayStart );
		param( 'iDisplayLength', displayLength );
	
		// DataTables 1.10+ method
		var d = {
			draw:    settings.iDraw,
			columns: [],
			order:   [],
			start:   displayStart,
			length:  displayLength,
			search:  {
				value: preSearch.sSearch,
				regex: preSearch.bRegex
			}
		};
	
		for ( i=0 ; i<columnCount ; i++ ) {
			column = columns[i];
			columnSearch = preColSearch[i];
			dataProp = typeof column.mData=="function" ? 'function' : column.mData ;
	
			d.columns.push( {
				data:       dataProp,
				name:       column.sName,
				searchable: column.bSearchable,
				orderable:  column.bSortable,
				search:     {
					value: columnSearch.sSearch,
					regex: columnSearch.bRegex
				}
			} );
	
			param( "mDataProp_"+i, dataProp );
	
			if ( features.bFilter ) {
				param( 'sSearch_'+i,     columnSearch.sSearch );
				param( 'bRegex_'+i,      columnSearch.bRegex );
				param( 'bSearchable_'+i, column.bSearchable );
			}
	
			if ( features.bSort ) {
				param( 'bSortable_'+i, column.bSortable );
			}
		}
	
		if ( features.bFilter ) {
			param( 'sSearch', preSearch.sSearch );
			param( 'bRegex', preSearch.bRegex );
		}
	
		if ( features.bSort ) {
			$.each( sort, function ( i, val ) {
				d.order.push( { column: val.col, dir: val.dir } );
	
				param( 'iSortCol_'+i, val.col );
				param( 'sSortDir_'+i, val.dir );
			} );
	
			param( 'iSortingCols', sort.length );
		}
	
		// If the legacy.ajax parameter is null, then we automatically decide which
		// form to use, based on sAjaxSource
		var legacy = DataTable.ext.legacy.ajax;
		if ( legacy === null ) {
			return settings.sAjaxSource ? data : d;
		}
	
		// Otherwise, if legacy has been specified then we use that to decide on the
		// form
		return legacy ? data : d;
	}
	
	
	/**
	 * Data the data from the server (nuking the old) and redraw the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} json json data return from the server.
	 *  @param {string} json.sEcho Tracking flag for DataTables to match requests
	 *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
	 *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
	 *  @param {array} json.aaData The data to display on this page
	 *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdateDraw ( settings, json )
	{
		// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.
		// Support both
		var compat = function ( old, modern ) {
			return json[old] !== undefined ? json[old] : json[modern];
		};
	
		var data = _fnAjaxDataSrc( settings, json );
		var draw            = compat( 'sEcho',                'draw' );
		var recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );
		var recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );
	
		if ( draw ) {
			// Protect against out of sequence returns
			if ( draw*1 < settings.iDraw ) {
				return;
			}
			settings.iDraw = draw * 1;
		}
	
		_fnClearTable( settings );
		settings._iRecordsTotal   = parseInt(recordsTotal, 10);
		settings._iRecordsDisplay = parseInt(recordsFiltered, 10);
	
		for ( var i=0, ien=data.length ; i<ien ; i++ ) {
			_fnAddData( settings, data[i] );
		}
		settings.aiDisplay = settings.aiDisplayMaster.slice();
	
		settings.bAjaxDataGet = false;
		_fnDraw( settings );
	
		if ( ! settings._bInitComplete ) {
			_fnInitComplete( settings, json );
		}
	
		settings.bAjaxDataGet = true;
		_fnProcessingDisplay( settings, false );
	}
	
	
	/**
	 * Get the data from the JSON data source to use for drawing a table. Using
	 * `_fnGetObjectDataFn` allows the data to be sourced from a property of the
	 * source object, or from a processing function.
	 *  @param {object} oSettings dataTables settings object
	 *  @param  {object} json Data source object / array from the server
	 *  @return {array} Array of data to use
	 */
	function _fnAjaxDataSrc ( oSettings, json )
	{
		var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?
			oSettings.ajax.dataSrc :
			oSettings.sAjaxDataProp; // Compatibility with 1.9-.
	
		// Compatibility with 1.9-. In order to read from aaData, check if the
		// default has been changed, if not, check for aaData
		if ( dataSrc === 'data' ) {
			return json.aaData || json[dataSrc];
		}
	
		return dataSrc !== "" ?
			_fnGetObjectDataFn( dataSrc )( json ) :
			json;
	}
	
	/**
	 * Generate the node required for filtering text
	 *  @returns {node} Filter control element
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlFilter ( settings )
	{
		var classes = settings.oClasses;
		var tableId = settings.sTableId;
		var language = settings.oLanguage;
		var previousSearch = settings.oPreviousSearch;
		var features = settings.aanFeatures;
		var input = '<input type="search" class="'+classes.sFilterInput+'"/>';
	
		var str = language.sSearch;
		str = str.match(/_INPUT_/) ?
			str.replace('_INPUT_', input) :
			str+input;
	
		var filter = $('<div/>', {
				'id': ! features.f ? tableId+'_filter' : null,
				'class': classes.sFilter
			} )
			.append( $('<label/>' ).append( str ) );
	
		var searchFn = function() {
			/* Update all other filter input elements for the new display */
			var n = features.f;
			var val = !this.value ? "" : this.value; // mental IE8 fix :-(
	
			/* Now do the filter */
			if ( val != previousSearch.sSearch ) {
				_fnFilterComplete( settings, {
					"sSearch": val,
					"bRegex": previousSearch.bRegex,
					"bSmart": previousSearch.bSmart ,
					"bCaseInsensitive": previousSearch.bCaseInsensitive
				} );
	
				// Need to redraw, without resorting
				settings._iDisplayStart = 0;
				_fnDraw( settings );
			}
		};
	
		var searchDelay = settings.searchDelay !== null ?
			settings.searchDelay :
			_fnDataSource( settings ) === 'ssp' ?
				400 :
				0;
	
		var jqFilter = $('input', filter)
			.val( previousSearch.sSearch )
			.attr( 'placeholder', language.sSearchPlaceholder )
			.bind(
				'keyup.DT search.DT input.DT paste.DT cut.DT',
				searchDelay ?
					_fnThrottle( searchFn, searchDelay ) :
					searchFn
			)
			.bind( 'keypress.DT', function(e) {
				/* Prevent form submission */
				if ( e.keyCode == 13 ) {
					return false;
				}
			} )
			.attr('aria-controls', tableId);
	
		// Update the input elements whenever the table is filtered
		$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {
			if ( settings === s ) {
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame...
				try {
					if ( jqFilter[0] !== document.activeElement ) {
						jqFilter.val( previousSearch.sSearch );
					}
				}
				catch ( e ) {}
			}
		} );
	
		return filter[0];
	}
	
	
	/**
	 * Filter the table using both the global filter and column based filtering
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oSearch search information
	 *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterComplete ( oSettings, oInput, iForce )
	{
		var oPrevSearch = oSettings.oPreviousSearch;
		var aoPrevSearch = oSettings.aoPreSearchCols;
		var fnSaveFilter = function ( oFilter ) {
			/* Save the filtering values */
			oPrevSearch.sSearch = oFilter.sSearch;
			oPrevSearch.bRegex = oFilter.bRegex;
			oPrevSearch.bSmart = oFilter.bSmart;
			oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
		};
		var fnRegex = function ( o ) {
			// Backwards compatibility with the bEscapeRegex option
			return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;
		};
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo As per sort - can this be moved into an event handler?
		_fnColumnTypes( oSettings );
	
		/* In server-side processing all filtering is done by the server, so no point hanging around here */
		if ( _fnDataSource( oSettings ) != 'ssp' )
		{
			/* Global filter */
			_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );
			fnSaveFilter( oInput );
	
			/* Now do the individual column filter */
			for ( var i=0 ; i<aoPrevSearch.length ; i++ )
			{
				_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),
					aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );
			}
	
			/* Custom filtering */
			_fnFilterCustom( oSettings );
		}
		else
		{
			fnSaveFilter( oInput );
		}
	
		/* Tell the draw function we have been filtering */
		oSettings.bFiltered = true;
		_fnCallbackFire( oSettings, null, 'search', [oSettings] );
	}
	
	
	/**
	 * Apply custom filtering functions
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCustom( settings )
	{
		var filters = DataTable.ext.search;
		var displayRows = settings.aiDisplay;
		var row, rowIdx;
	
		for ( var i=0, ien=filters.length ; i<ien ; i++ ) {
			var rows = [];
	
			// Loop over each row and see if it should be included
			for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {
				rowIdx = displayRows[ j ];
				row = settings.aoData[ rowIdx ];
	
				if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {
					rows.push( rowIdx );
				}
			}
	
			// So the array reference doesn't break set the results into the
			// existing array
			displayRows.length = 0;
			$.merge( displayRows, rows );
		}
	}
	
	
	/**
	 * Filter the table on a per-column basis
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sInput string to filter on
	 *  @param {int} iColumn column to filter
	 *  @param {bool} bRegex treat search string as a regular expression or not
	 *  @param {bool} bSmart use smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )
	{
		if ( searchStr === '' ) {
			return;
		}
	
		var data;
		var display = settings.aiDisplay;
		var rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );
	
		for ( var i=display.length-1 ; i>=0 ; i-- ) {
			data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];
	
			if ( ! rpSearch.test( data ) ) {
				display.splice( i, 1 );
			}
		}
	}
	
	
	/**
	 * Filter the data table based on user input and draw the table
	 *  @param {object} settings dataTables settings object
	 *  @param {string} input string to filter on
	 *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)
	 *  @param {bool} regex treat as a regular expression or not
	 *  @param {bool} smart perform smart filtering or not
	 *  @param {bool} caseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilter( settings, input, force, regex, smart, caseInsensitive )
	{
		var rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );
		var prevSearch = settings.oPreviousSearch.sSearch;
		var displayMaster = settings.aiDisplayMaster;
		var display, invalidated, i;
	
		// Need to take account of custom filtering functions - always filter
		if ( DataTable.ext.search.length !== 0 ) {
			force = true;
		}
	
		// Check if any of the rows were invalidated
		invalidated = _fnFilterData( settings );
	
		// If the input is blank - we just want the full data set
		if ( input.length <= 0 ) {
			settings.aiDisplay = displayMaster.slice();
		}
		else {
			// New search - start from the master array
			if ( invalidated ||
				 force ||
				 prevSearch.length > input.length ||
				 input.indexOf(prevSearch) !== 0 ||
				 settings.bSorted // On resort, the display master needs to be
				                  // re-filtered since indexes will have changed
			) {
				settings.aiDisplay = displayMaster.slice();
			}
	
			// Search the display array
			display = settings.aiDisplay;
	
			for ( i=display.length-1 ; i>=0 ; i-- ) {
				if ( ! rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {
					display.splice( i, 1 );
				}
			}
		}
	}
	
	
	/**
	 * Build a regular expression object suitable for searching a table
	 *  @param {string} sSearch string to search for
	 *  @param {bool} bRegex treat as a regular expression or not
	 *  @param {bool} bSmart perform smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
	 *  @returns {RegExp} constructed object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCreateSearch( search, regex, smart, caseInsensitive )
	{
		search = regex ?
			search :
			_fnEscapeRegex( search );
		
		if ( smart ) {
			/* For smart filtering we want to allow the search to work regardless of
			 * word order. We also want double quoted text to be preserved, so word
			 * order is important - a la google. So this is what we want to
			 * generate:
			 * 
			 * ^(?=.*?\bone\b)(?=.*?\btwo three\b)(?=.*?\bfour\b).*$
			 */
			var a = $.map( search.match( /"[^"]+"|[^ ]+/g ) || [''], function ( word ) {
				if ( word.charAt(0) === '"' ) {
					var m = word.match( /^"(.*)"$/ );
					word = m ? m[1] : word;
				}
	
				return word.replace('"', '');
			} );
	
			search = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';
		}
	
		return new RegExp( search, caseInsensitive ? 'i' : '' );
	}
	
	
	/**
	 * Escape a string such that it can be used in a regular expression
	 *  @param {string} sVal string to escape
	 *  @returns {string} escaped string
	 *  @memberof DataTable#oApi
	 */
	function _fnEscapeRegex ( sVal )
	{
		return sVal.replace( _re_escape_regex, '\\$1' );
	}
	
	
	
	var __filter_div = $('<div>')[0];
	var __filter_div_textContent = __filter_div.textContent !== undefined;
	
	// Update the filtering data for each row if needed (by invalidation or first run)
	function _fnFilterData ( settings )
	{
		var columns = settings.aoColumns;
		var column;
		var i, j, ien, jen, filterData, cellData, row;
		var fomatters = DataTable.ext.type.search;
		var wasInvalidated = false;
	
		for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aFilterData ) {
				filterData = [];
	
				for ( j=0, jen=columns.length ; j<jen ; j++ ) {
					column = columns[j];
	
					if ( column.bSearchable ) {
						cellData = _fnGetCellData( settings, i, j, 'filter' );
	
						if ( fomatters[ column.sType ] ) {
							cellData = fomatters[ column.sType ]( cellData );
						}
	
						// Search in DataTables 1.10 is string based. In 1.11 this
						// should be altered to also allow strict type checking.
						if ( cellData === null ) {
							cellData = '';
						}
	
						if ( typeof cellData !== 'string' && cellData.toString ) {
							cellData = cellData.toString();
						}
					}
					else {
						cellData = '';
					}
	
					// If it looks like there is an HTML entity in the string,
					// attempt to decode it so sorting works as expected. Note that
					// we could use a single line of jQuery to do this, but the DOM
					// method used here is much faster http://jsperf.com/html-decode
					if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {
						__filter_div.innerHTML = cellData;
						cellData = __filter_div_textContent ?
							__filter_div.textContent :
							__filter_div.innerText;
					}
	
					if ( cellData.replace ) {
						cellData = cellData.replace(/[\r\n]/g, '');
					}
	
					filterData.push( cellData );
				}
	
				row._aFilterData = filterData;
				row._sFilterRow = filterData.join('  ');
				wasInvalidated = true;
			}
		}
	
		return wasInvalidated;
	}
	
	
	/**
	 * Convert from the internal Hungarian notation to camelCase for external
	 * interaction
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToCamel ( obj )
	{
		return {
			search:          obj.sSearch,
			smart:           obj.bSmart,
			regex:           obj.bRegex,
			caseInsensitive: obj.bCaseInsensitive
		};
	}
	
	
	
	/**
	 * Convert from camelCase notation to the internal Hungarian. We could use the
	 * Hungarian convert function here, but this is cleaner
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToHung ( obj )
	{
		return {
			sSearch:          obj.search,
			bSmart:           obj.smart,
			bRegex:           obj.regex,
			bCaseInsensitive: obj.caseInsensitive
		};
	}
	
	/**
	 * Generate the node required for the info display
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Information element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlInfo ( settings )
	{
		var
			tid = settings.sTableId,
			nodes = settings.aanFeatures.i,
			n = $('<div/>', {
				'class': settings.oClasses.sInfo,
				'id': ! nodes ? tid+'_info' : null
			} );
	
		if ( ! nodes ) {
			// Update display on each draw
			settings.aoDrawCallback.push( {
				"fn": _fnUpdateInfo,
				"sName": "information"
			} );
	
			n
				.attr( 'role', 'status' )
				.attr( 'aria-live', 'polite' );
	
			// Table is described by our info div
			$(settings.nTable).attr( 'aria-describedby', tid+'_info' );
		}
	
		return n[0];
	}
	
	
	/**
	 * Update the information elements in the display
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnUpdateInfo ( settings )
	{
		/* Show information about the table */
		var nodes = settings.aanFeatures.i;
		if ( nodes.length === 0 ) {
			return;
		}
	
		var
			lang  = settings.oLanguage,
			start = settings._iDisplayStart+1,
			end   = settings.fnDisplayEnd(),
			max   = settings.fnRecordsTotal(),
			total = settings.fnRecordsDisplay(),
			out   = total ?
				lang.sInfo :
				lang.sInfoEmpty;
	
		if ( total !== max ) {
			/* Record set after filtering */
			out += ' ' + lang.sInfoFiltered;
		}
	
		// Convert the macros
		out += lang.sInfoPostFix;
		out = _fnInfoMacros( settings, out );
	
		var callback = lang.fnInfoCallback;
		if ( callback !== null ) {
			out = callback.call( settings.oInstance,
				settings, start, end, max, total, out
			);
		}
	
		$(nodes).html( out );
	}
	
	
	function _fnInfoMacros ( settings, str )
	{
		// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
		// internally
		var
			formatter  = settings.fnFormatNumber,
			start      = settings._iDisplayStart+1,
			len        = settings._iDisplayLength,
			vis        = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return str.
			replace(/_START_/g, formatter.call( settings, start ) ).
			replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).
			replace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).
			replace(/_TOTAL_/g, formatter.call( settings, vis ) ).
			replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).
			replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );
	}
	
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnInitialise ( settings )
	{
		var i, iLen, iAjaxStart=settings.iInitDisplayStart;
		var columns = settings.aoColumns, column;
		var features = settings.oFeatures;
		var deferLoading = settings.bDeferLoading; // value modified by the draw
	
		/* Ensure that the table data is fully initialised */
		if ( ! settings.bInitialised ) {
			setTimeout( function(){ _fnInitialise( settings ); }, 200 );
			return;
		}
	
		/* Show the display HTML options */
		_fnAddOptionsHtml( settings );
	
		/* Build and draw the header / footer for the table */
		_fnBuildHead( settings );
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		/* Okay to show that something is going on now */
		_fnProcessingDisplay( settings, true );
	
		/* Calculate sizes for columns */
		if ( features.bAutoWidth ) {
			_fnCalculateColumnWidths( settings );
		}
	
		for ( i=0, iLen=columns.length ; i<iLen ; i++ ) {
			column = columns[i];
	
			if ( column.sWidth ) {
				column.nTh.style.width = _fnStringToCss( column.sWidth );
			}
		}
	
		_fnCallbackFire( settings, null, 'preInit', [settings] );
	
		// If there is default sorting required - let's do it. The sort function
		// will do the drawing for us. Otherwise we draw the table regardless of the
		// Ajax source - this allows the table to look initialised for Ajax sourcing
		// data (show 'loading' message possibly)
		_fnReDraw( settings );
	
		// Server-side processing init complete is done by _fnAjaxUpdateDraw
		var dataSrc = _fnDataSource( settings );
		if ( dataSrc != 'ssp' || deferLoading ) {
			// if there is an ajax source load the data
			if ( dataSrc == 'ajax' ) {
				_fnBuildAjax( settings, [], function(json) {
					var aData = _fnAjaxDataSrc( settings, json );
	
					// Got the data - add it to the table
					for ( i=0 ; i<aData.length ; i++ ) {
						_fnAddData( settings, aData[i] );
					}
	
					// Reset the init display for cookie saving. We've already done
					// a filter, and therefore cleared it before. So we need to make
					// it appear 'fresh'
					settings.iInitDisplayStart = iAjaxStart;
	
					_fnReDraw( settings );
	
					_fnProcessingDisplay( settings, false );
					_fnInitComplete( settings, json );
				}, settings );
			}
			else {
				_fnProcessingDisplay( settings, false );
				_fnInitComplete( settings );
			}
		}
	}
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
	 *    with client-side processing (optional)
	 *  @memberof DataTable#oApi
	 */
	function _fnInitComplete ( settings, json )
	{
		settings._bInitComplete = true;
	
		// When data was added after the initialisation (data or Ajax) we need to
		// calculate the column sizing
		if ( json || settings.oInit.aaData ) {
			_fnAdjustColumnSizing( settings );
		}
	
		_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );
		_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );
	}
	
	
	function _fnLengthChange ( settings, val )
	{
		var len = parseInt( val, 10 );
		settings._iDisplayLength = len;
	
		_fnLengthOverflow( settings );
	
		// Fire length change event
		_fnCallbackFire( settings, null, 'length', [settings, len] );
	}
	
	
	/**
	 * Generate the node required for user display length changing
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Display length feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlLength ( settings )
	{
		var
			classes  = settings.oClasses,
			tableId  = settings.sTableId,
			menu     = settings.aLengthMenu,
			d2       = $.isArray( menu[0] ),
			lengths  = d2 ? menu[0] : menu,
			language = d2 ? menu[1] : menu;
	
		var select = $('<select/>', {
			'name':          tableId+'_length',
			'aria-controls': tableId,
			'class':         classes.sLengthSelect
		} );
	
		for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {
			select[0][ i ] = new Option( language[i], lengths[i] );
		}
	
		var div = $('<div><label/></div>').addClass( classes.sLength );
		if ( ! settings.aanFeatures.l ) {
			div[0].id = tableId+'_length';
		}
	
		div.children().append(
			settings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )
		);
	
		// Can't use `select` variable as user might provide their own and the
		// reference is broken by the use of outerHTML
		$('select', div)
			.val( settings._iDisplayLength )
			.bind( 'change.DT', function(e) {
				_fnLengthChange( settings, $(this).val() );
				_fnDraw( settings );
			} );
	
		// Update node value whenever anything changes the table's length
		$(settings.nTable).bind( 'length.dt.DT', function (e, s, len) {
			if ( settings === s ) {
				$('select', div).val( len );
			}
		} );
	
		return div[0];
	}
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Note that most of the paging logic is done in
	 * DataTable.ext.pager
	 */
	
	/**
	 * Generate the node required for default pagination
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Pagination feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlPaginate ( settings )
	{
		var
			type   = settings.sPaginationType,
			plugin = DataTable.ext.pager[ type ],
			modern = typeof plugin === 'function',
			redraw = function( settings ) {
				_fnDraw( settings );
			},
			node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],
			features = settings.aanFeatures;
	
		if ( ! modern ) {
			plugin.fnInit( settings, node, redraw );
		}
	
		/* Add a draw callback for the pagination on first instance, to update the paging display */
		if ( ! features.p )
		{
			node.id = settings.sTableId+'_paginate';
	
			settings.aoDrawCallback.push( {
				"fn": function( settings ) {
					if ( modern ) {
						var
							start      = settings._iDisplayStart,
							len        = settings._iDisplayLength,
							visRecords = settings.fnRecordsDisplay(),
							all        = len === -1,
							page = all ? 0 : Math.ceil( start / len ),
							pages = all ? 1 : Math.ceil( visRecords / len ),
							buttons = plugin(page, pages),
							i, ien;
	
						for ( i=0, ien=features.p.length ; i<ien ; i++ ) {
							_fnRenderer( settings, 'pageButton' )(
								settings, features.p[i], i, buttons, page, pages
							);
						}
					}
					else {
						plugin.fnUpdate( settings, redraw );
					}
				},
				"sName": "pagination"
			} );
		}
	
		return node;
	}
	
	
	/**
	 * Alter the display settings to change the page
	 *  @param {object} settings DataTables settings object
	 *  @param {string|int} action Paging action to take: "first", "previous",
	 *    "next" or "last" or page number to jump to (integer)
	 *  @param [bool] redraw Automatically draw the update or not
	 *  @returns {bool} true page has changed, false - no change
	 *  @memberof DataTable#oApi
	 */
	function _fnPageChange ( settings, action, redraw )
	{
		var
			start     = settings._iDisplayStart,
			len       = settings._iDisplayLength,
			records   = settings.fnRecordsDisplay();
	
		if ( records === 0 || len === -1 )
		{
			start = 0;
		}
		else if ( typeof action === "number" )
		{
			start = action * len;
	
			if ( start > records )
			{
				start = 0;
			}
		}
		else if ( action == "first" )
		{
			start = 0;
		}
		else if ( action == "previous" )
		{
			start = len >= 0 ?
				start - len :
				0;
	
			if ( start < 0 )
			{
			  start = 0;
			}
		}
		else if ( action == "next" )
		{
			if ( start + len < records )
			{
				start += len;
			}
		}
		else if ( action == "last" )
		{
			start = Math.floor( (records-1) / len) * len;
		}
		else
		{
			_fnLog( settings, 0, "Unknown paging action: "+action, 5 );
		}
	
		var changed = settings._iDisplayStart !== start;
		settings._iDisplayStart = start;
	
		if ( changed ) {
			_fnCallbackFire( settings, null, 'page', [settings] );
	
			if ( redraw ) {
				_fnDraw( settings );
			}
		}
	
		return changed;
	}
	
	
	
	/**
	 * Generate the node required for the processing node
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Processing element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlProcessing ( settings )
	{
		return $('<div/>', {
				'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,
				'class': settings.oClasses.sProcessing
			} )
			.html( settings.oLanguage.sProcessing )
			.insertBefore( settings.nTable )[0];
	}
	
	
	/**
	 * Display or hide the processing indicator
	 *  @param {object} settings dataTables settings object
	 *  @param {bool} show Show the processing indicator (true) or not (false)
	 *  @memberof DataTable#oApi
	 */
	function _fnProcessingDisplay ( settings, show )
	{
		if ( settings.oFeatures.bProcessing ) {
			$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );
		}
	
		_fnCallbackFire( settings, null, 'processing', [settings, show] );
	}
	
	/**
	 * Add any control elements for the table - specifically scrolling
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Node to add to the DOM
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlTable ( settings )
	{
		var table = $(settings.nTable);
	
		// Add the ARIA grid role to the table
		table.attr( 'role', 'grid' );
	
		// Scrolling from here on in
		var scroll = settings.oScroll;
	
		if ( scroll.sX === '' && scroll.sY === '' ) {
			return settings.nTable;
		}
	
		var scrollX = scroll.sX;
		var scrollY = scroll.sY;
		var classes = settings.oClasses;
		var caption = table.children('caption');
		var captionSide = caption.length ? caption[0]._captionSide : null;
		var headerClone = $( table[0].cloneNode(false) );
		var footerClone = $( table[0].cloneNode(false) );
		var footer = table.children('tfoot');
		var _div = '<div/>';
		var size = function ( s ) {
			return !s ? null : _fnStringToCss( s );
		};
	
		if ( ! footer.length ) {
			footer = null;
		}
	
		/*
		 * The HTML structure that we want to generate in this function is:
		 *  div - scroller
		 *    div - scroll head
		 *      div - scroll head inner
		 *        table - scroll head table
		 *          thead - thead
		 *    div - scroll body
		 *      table - table (master table)
		 *        thead - thead clone for sizing
		 *        tbody - tbody
		 *    div - scroll foot
		 *      div - scroll foot inner
		 *        table - scroll foot table
		 *          tfoot - tfoot
		 */
		var scroller = $( _div, { 'class': classes.sScrollWrapper } )
			.append(
				$(_div, { 'class': classes.sScrollHead } )
					.css( {
						overflow: 'hidden',
						position: 'relative',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollHeadInner } )
							.css( {
								'box-sizing': 'content-box',
								width: scroll.sXInner || '100%'
							} )
							.append(
								headerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'top' ? caption : null )
									.append(
										table.children('thead')
									)
							)
					)
			)
			.append(
				$(_div, { 'class': classes.sScrollBody } )
					.css( {
						position: 'relative',
						overflow: 'auto',
						width: size( scrollX )
					} )
					.append( table )
			);
	
		if ( footer ) {
			scroller.append(
				$(_div, { 'class': classes.sScrollFoot } )
					.css( {
						overflow: 'hidden',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollFootInner } )
							.append(
								footerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'bottom' ? caption : null )
									.append(
										table.children('tfoot')
									)
							)
					)
			);
		}
	
		var children = scroller.children();
		var scrollHead = children[0];
		var scrollBody = children[1];
		var scrollFoot = footer ? children[2] : null;
	
		// When the body is scrolled, then we also want to scroll the headers
		if ( scrollX ) {
			$(scrollBody).on( 'scroll.DT', function (e) {
				var scrollLeft = this.scrollLeft;
	
				scrollHead.scrollLeft = scrollLeft;
	
				if ( footer ) {
					scrollFoot.scrollLeft = scrollLeft;
				}
			} );
		}
	
		$(scrollBody).css(
			scrollY && scroll.bCollapse ? 'max-height' : 'height', 
			scrollY
		);
	
		settings.nScrollHead = scrollHead;
		settings.nScrollBody = scrollBody;
		settings.nScrollFoot = scrollFoot;
	
		// On redraw - align columns
		settings.aoDrawCallback.push( {
			"fn": _fnScrollDraw,
			"sName": "scrolling"
		} );
	
		return scroller[0];
	}
	
	
	
	/**
	 * Update the header, footer and body tables for resizing - i.e. column
	 * alignment.
	 *
	 * Welcome to the most horrible function DataTables. The process that this
	 * function follows is basically:
	 *   1. Re-create the table inside the scrolling div
	 *   2. Take live measurements from the DOM
	 *   3. Apply the measurements to align the columns
	 *   4. Clean up
	 *
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollDraw ( settings )
	{
		// Given that this is such a monster function, a lot of variables are use
		// to try and keep the minimised size as small as possible
		var
			scroll         = settings.oScroll,
			scrollX        = scroll.sX,
			scrollXInner   = scroll.sXInner,
			scrollY        = scroll.sY,
			barWidth       = scroll.iBarWidth,
			divHeader      = $(settings.nScrollHead),
			divHeaderStyle = divHeader[0].style,
			divHeaderInner = divHeader.children('div'),
			divHeaderInnerStyle = divHeaderInner[0].style,
			divHeaderTable = divHeaderInner.children('table'),
			divBodyEl      = settings.nScrollBody,
			divBody        = $(divBodyEl),
			divBodyStyle   = divBodyEl.style,
			divFooter      = $(settings.nScrollFoot),
			divFooterInner = divFooter.children('div'),
			divFooterTable = divFooterInner.children('table'),
			header         = $(settings.nTHead),
			table          = $(settings.nTable),
			tableEl        = table[0],
			tableStyle     = tableEl.style,
			footer         = settings.nTFoot ? $(settings.nTFoot) : null,
			browser        = settings.oBrowser,
			ie67           = browser.bScrollOversize,
			dtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),
			headerTrgEls, footerTrgEls,
			headerSrcEls, footerSrcEls,
			headerCopy, footerCopy,
			headerWidths=[], footerWidths=[],
			headerContent=[], footerContent=[],
			idx, correction, sanityWidth,
			zeroOut = function(nSizer) {
				var style = nSizer.style;
				style.paddingTop = "0";
				style.paddingBottom = "0";
				style.borderTopWidth = "0";
				style.borderBottomWidth = "0";
				style.height = 0;
			};
	
		// If the scrollbar visibility has changed from the last draw, we need to
		// adjust the column sizes as the table width will have changed to account
		// for the scrollbar
		var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
		
		if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {
			settings.scrollBarVis = scrollBarVis;
			_fnAdjustColumnSizing( settings );
			return; // adjust column sizing will call this function again
		}
		else {
			settings.scrollBarVis = scrollBarVis;
		}
	
		/*
		 * 1. Re-create the table inside the scrolling div
		 */
	
		// Remove the old minimised thead and tfoot elements in the inner table
		table.children('thead, tfoot').remove();
	
		if ( footer ) {
			footerCopy = footer.clone().prependTo( table );
			footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized
			footerSrcEls = footerCopy.find('tr');
		}
	
		// Clone the current header and footer elements and then place it into the inner table
		headerCopy = header.clone().prependTo( table );
		headerTrgEls = header.find('tr'); // original header is in its own table
		headerSrcEls = headerCopy.find('tr');
		headerCopy.find('th, td').removeAttr('tabindex');
	
	
		/*
		 * 2. Take live measurements from the DOM - do not alter the DOM itself!
		 */
	
		// Remove old sizing and apply the calculated column widths
		// Get the unique column headers in the newly created (cloned) header. We want to apply the
		// calculated sizes to this header
		if ( ! scrollX )
		{
			divBodyStyle.width = '100%';
			divHeader[0].style.width = '100%';
		}
	
		$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {
			idx = _fnVisibleToColumnIndex( settings, i );
			el.style.width = settings.aoColumns[idx].sWidth;
		} );
	
		if ( footer ) {
			_fnApplyToChildren( function(n) {
				n.style.width = "";
			}, footerSrcEls );
		}
	
		// Size the table as a whole
		sanityWidth = table.outerWidth();
		if ( scrollX === "" ) {
			// No x scrolling
			tableStyle.width = "100%";
	
			// IE7 will make the width of the table when 100% include the scrollbar
			// - which is shouldn't. When there is a scrollbar we need to take this
			// into account.
			if ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);
			}
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
		else if ( scrollXInner !== "" ) {
			// legacy x scroll inner has been given - use it
			tableStyle.width = _fnStringToCss(scrollXInner);
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
	
		// Hidden header should have zero height, so remove padding and borders. Then
		// set the width based on the real headers
	
		// Apply all styles in one pass
		_fnApplyToChildren( zeroOut, headerSrcEls );
	
		// Read all widths in next pass
		_fnApplyToChildren( function(nSizer) {
			headerContent.push( nSizer.innerHTML );
			headerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
		}, headerSrcEls );
	
		// Apply all widths in final pass
		_fnApplyToChildren( function(nToSize, i) {
			// Only apply widths to the DataTables detected header cells - this
			// prevents complex headers from having contradictory sizes applied
			if ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {
				nToSize.style.width = headerWidths[i];
			}
		}, headerTrgEls );
	
		$(headerSrcEls).height(0);
	
		/* Same again with the footer if we have one */
		if ( footer )
		{
			_fnApplyToChildren( zeroOut, footerSrcEls );
	
			_fnApplyToChildren( function(nSizer) {
				footerContent.push( nSizer.innerHTML );
				footerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
			}, footerSrcEls );
	
			_fnApplyToChildren( function(nToSize, i) {
				nToSize.style.width = footerWidths[i];
			}, footerTrgEls );
	
			$(footerSrcEls).height(0);
		}
	
	
		/*
		 * 3. Apply the measurements
		 */
	
		// "Hide" the header and footer that we used for the sizing. We need to keep
		// the content of the cell so that the width applied to the header and body
		// both match, but we want to hide it completely. We want to also fix their
		// width to what they currently are
		_fnApplyToChildren( function(nSizer, i) {
			nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+headerContent[i]+'</div>';
			nSizer.style.width = headerWidths[i];
		}, headerSrcEls );
	
		if ( footer )
		{
			_fnApplyToChildren( function(nSizer, i) {
				nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+footerContent[i]+'</div>';
				nSizer.style.width = footerWidths[i];
			}, footerSrcEls );
		}
	
		// Sanity check that the table is of a sensible width. If not then we are going to get
		// misalignment - try to prevent this by not allowing the table to shrink below its min width
		if ( table.outerWidth() < sanityWidth )
		{
			// The min width depends upon if we have a vertical scrollbar visible or not */
			correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")) ?
					sanityWidth+barWidth :
					sanityWidth;
	
			// IE6/7 are a law unto themselves...
			if ( ie67 && (divBodyEl.scrollHeight >
				divBodyEl.offsetHeight || divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( correction-barWidth );
			}
	
			// And give the user a warning that we've stopped the table getting too small
			if ( scrollX === "" || scrollXInner !== "" ) {
				_fnLog( settings, 1, 'Possible column misalignment', 6 );
			}
		}
		else
		{
			correction = '100%';
		}
	
		// Apply to the container elements
		divBodyStyle.width = _fnStringToCss( correction );
		divHeaderStyle.width = _fnStringToCss( correction );
	
		if ( footer ) {
			settings.nScrollFoot.style.width = _fnStringToCss( correction );
		}
	
	
		/*
		 * 4. Clean up
		 */
		if ( ! scrollY ) {
			/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
			 * the scrollbar height from the visible display, rather than adding it on. We need to
			 * set the height in order to sort this. Don't want to do it in any other browsers.
			 */
			if ( ie67 ) {
				divBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );
			}
		}
	
		/* Finally set the width's of the header and footer tables */
		var iOuterWidth = table.outerWidth();
		divHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );
		divHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );
	
		// Figure out if there are scrollbar present - if so then we need a the header and footer to
		// provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
		var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == "scroll";
		var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );
		divHeaderInnerStyle[ padding ] = bScrolling ? barWidth+"px" : "0px";
	
		if ( footer ) {
			divFooterTable[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style[padding] = bScrolling ? barWidth+"px" : "0px";
		}
	
		// Correct DOM ordering for colgroup - comes before the thead
		table.children('colgroup').insertBefore( table.children('thead') );
	
		/* Adjust the position of the header in case we loose the y-scrollbar */
		divBody.scroll();
	
		// If sorting or filtering has occurred, jump the scrolling back to the top
		// only if we aren't holding the position
		if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {
			divBodyEl.scrollTop = 0;
		}
	}
	
	
	
	/**
	 * Apply a given function to the display child nodes of an element array (typically
	 * TD children of TR rows
	 *  @param {function} fn Method to apply to the objects
	 *  @param array {nodes} an1 List of elements to look through for display children
	 *  @param array {nodes} an2 Another list (identical structure to the first) - optional
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyToChildren( fn, an1, an2 )
	{
		var index=0, i=0, iLen=an1.length;
		var nNode1, nNode2;
	
		while ( i < iLen ) {
			nNode1 = an1[i].firstChild;
			nNode2 = an2 ? an2[i].firstChild : null;
	
			while ( nNode1 ) {
				if ( nNode1.nodeType === 1 ) {
					if ( an2 ) {
						fn( nNode1, nNode2, index );
					}
					else {
						fn( nNode1, index );
					}
	
					index++;
				}
	
				nNode1 = nNode1.nextSibling;
				nNode2 = an2 ? nNode2.nextSibling : null;
			}
	
			i++;
		}
	}
	
	
	
	var __re_html_remove = /<.*?>/g;
	
	
	/**
	 * Calculate the width of columns for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnCalculateColumnWidths ( oSettings )
	{
		var
			table = oSettings.nTable,
			columns = oSettings.aoColumns,
			scroll = oSettings.oScroll,
			scrollY = scroll.sY,
			scrollX = scroll.sX,
			scrollXInner = scroll.sXInner,
			columnCount = columns.length,
			visibleColumns = _fnGetColumns( oSettings, 'bVisible' ),
			headerCells = $('th', oSettings.nTHead),
			tableWidthAttr = table.getAttribute('width'), // from DOM element
			tableContainer = table.parentNode,
			userInputs = false,
			i, column, columnIdx, width, outerWidth,
			browser = oSettings.oBrowser,
			ie67 = browser.bScrollOversize;
	
		var styleWidth = table.style.width;
		if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {
			tableWidthAttr = styleWidth;
		}
	
		/* Convert any user input sizes into pixel sizes */
		for ( i=0 ; i<visibleColumns.length ; i++ ) {
			column = columns[ visibleColumns[i] ];
	
			if ( column.sWidth !== null ) {
				column.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );
	
				userInputs = true;
			}
		}
	
		/* If the number of columns in the DOM equals the number that we have to
		 * process in DataTables, then we can use the offsets that are created by
		 * the web- browser. No custom sizes can be set in order for this to happen,
		 * nor scrolling used
		 */
		if ( ie67 || ! userInputs && ! scrollX && ! scrollY &&
		     columnCount == _fnVisbleColumns( oSettings ) &&
		     columnCount == headerCells.length
		) {
			for ( i=0 ; i<columnCount ; i++ ) {
				var colIdx = _fnVisibleToColumnIndex( oSettings, i );
	
				if ( colIdx !== null ) {
					columns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );
				}
			}
		}
		else
		{
			// Otherwise construct a single row, worst case, table with the widest
			// node in the data, assign any user defined widths, then insert it into
			// the DOM and allow the browser to do all the hard work of calculating
			// table widths
			var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table
				.css( 'visibility', 'hidden' )
				.removeAttr( 'id' );
	
			// Clean up the table body
			tmpTable.find('tbody tr').remove();
			var tr = $('<tr/>').appendTo( tmpTable.find('tbody') );
	
			// Clone the table header and footer - we can't use the header / footer
			// from the cloned table, since if scrolling is active, the table's
			// real header and footer are contained in different table tags
			tmpTable.find('thead, tfoot').remove();
			tmpTable
				.append( $(oSettings.nTHead).clone() )
				.append( $(oSettings.nTFoot).clone() );
	
			// Remove any assigned widths from the footer (from scrolling)
			tmpTable.find('tfoot th, tfoot td').css('width', '');
	
			// Apply custom sizing to the cloned header
			headerCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );
	
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				column = columns[ visibleColumns[i] ];
	
				headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?
					_fnStringToCss( column.sWidthOrig ) :
					'';
	
				// For scrollX we need to force the column width otherwise the
				// browser will collapse it. If this width is smaller than the
				// width the column requires, then it will have no effect
				if ( column.sWidthOrig && scrollX ) {
					$( headerCells[i] ).append( $('<div/>').css( {
						width: column.sWidthOrig,
						margin: 0,
						padding: 0,
						border: 0,
						height: 1
					} ) );
				}
			}
	
			// Find the widest cell for each column and put it into the table
			if ( oSettings.aoData.length ) {
				for ( i=0 ; i<visibleColumns.length ; i++ ) {
					columnIdx = visibleColumns[i];
					column = columns[ columnIdx ];
	
					$( _fnGetWidestNode( oSettings, columnIdx ) )
						.clone( false )
						.append( column.sContentPadding )
						.appendTo( tr );
				}
			}
	
			// Tidy the temporary table - remove name attributes so there aren't
			// duplicated in the dom (radio elements for example)
			$('[name]', tmpTable).removeAttr('name');
	
			// Table has been built, attach to the document so we can work with it.
			// A holding element is used, positioned at the top of the container
			// with minimal height, so it has no effect on if the container scrolls
			// or not. Otherwise it might trigger scrolling when it actually isn't
			// needed
			var holder = $('<div/>').css( scrollX || scrollY ?
					{
						position: 'absolute',
						top: 0,
						left: 0,
						height: 1,
						right: 0,
						overflow: 'hidden'
					} :
					{}
				)
				.append( tmpTable )
				.appendTo( tableContainer );
	
			// When scrolling (X or Y) we want to set the width of the table as 
			// appropriate. However, when not scrolling leave the table width as it
			// is. This results in slightly different, but I think correct behaviour
			if ( scrollX && scrollXInner ) {
				tmpTable.width( scrollXInner );
			}
			else if ( scrollX ) {
				tmpTable.css( 'width', 'auto' );
				tmpTable.removeAttr('width');
	
				// If there is no width attribute or style, then allow the table to
				// collapse
				if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {
					tmpTable.width( tableContainer.clientWidth );
				}
			}
			else if ( scrollY ) {
				tmpTable.width( tableContainer.clientWidth );
			}
			else if ( tableWidthAttr ) {
				tmpTable.width( tableWidthAttr );
			}
	
			// Get the width of each column in the constructed table - we need to
			// know the inner width (so it can be assigned to the other table's
			// cells) and the outer width so we can calculate the full width of the
			// table. This is safe since DataTables requires a unique cell for each
			// column, but if ever a header can span multiple columns, this will
			// need to be modified.
			var total = 0;
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				var cell = $(headerCells[i]);
				var border = cell.outerWidth() - cell.width();
	
				// Use getBounding... where possible (not IE8-) because it can give
				// sub-pixel accuracy, which we then want to round up!
				var bounding = browser.bBounding ?
					Math.ceil( headerCells[i].getBoundingClientRect().width ) :
					cell.outerWidth();
	
				// Total is tracked to remove any sub-pixel errors as the outerWidth
				// of the table might not equal the total given here (IE!).
				total += bounding;
	
				// Width for each column to use
				columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );
			}
	
			table.style.width = _fnStringToCss( total );
	
			// Finished with the table - ditch it
			holder.remove();
		}
	
		// If there is a width attr, we want to attach an event listener which
		// allows the table sizing to automatically adjust when the window is
		// resized. Use the width attr rather than CSS, since we can't know if the
		// CSS is a relative value or absolute - DOM read is always px.
		if ( tableWidthAttr ) {
			table.style.width = _fnStringToCss( tableWidthAttr );
		}
	
		if ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {
			var bindResize = function () {
				$(window).bind('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {
					_fnAdjustColumnSizing( oSettings );
				} ) );
			};
	
			// IE6/7 will crash if we bind a resize event handler on page load.
			// To be removed in 1.11 which drops IE6/7 support
			if ( ie67 ) {
				setTimeout( bindResize, 1000 );
			}
			else {
				bindResize();
			}
	
			oSettings._reszEvt = true;
		}
	}
	
	
	/**
	 * Throttle the calls to a function. Arguments and context are maintained for
	 * the throttled function
	 *  @param {function} fn Function to be called
	 *  @param {int} [freq=200] call frequency in mS
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#oApi
	 */
	function _fnThrottle( fn, freq ) {
		var
			frequency = freq !== undefined ? freq : 200,
			last,
			timer;
	
		return function () {
			var
				that = this,
				now  = +new Date(),
				args = arguments;
	
			if ( last && now < last + frequency ) {
				clearTimeout( timer );
	
				timer = setTimeout( function () {
					last = undefined;
					fn.apply( that, args );
				}, frequency );
			}
			else {
				last = now;
				fn.apply( that, args );
			}
		};
	}
	
	
	/**
	 * Convert a CSS unit width to pixels (e.g. 2em)
	 *  @param {string} width width to be converted
	 *  @param {node} parent parent to get the with for (required for relative widths) - optional
	 *  @returns {int} width in pixels
	 *  @memberof DataTable#oApi
	 */
	function _fnConvertToWidth ( width, parent )
	{
		if ( ! width ) {
			return 0;
		}
	
		var n = $('<div/>')
			.css( 'width', _fnStringToCss( width ) )
			.appendTo( parent || document.body );
	
		var val = n[0].offsetWidth;
		n.remove();
	
		return val;
	}
	
	
	/**
	 * Get the widest node
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {node} widest table node
	 *  @memberof DataTable#oApi
	 */
	function _fnGetWidestNode( settings, colIdx )
	{
		var idx = _fnGetMaxLenString( settings, colIdx );
		if ( idx < 0 ) {
			return null;
		}
	
		var data = settings.aoData[ idx ];
		return ! data.nTr ? // Might not have been created when deferred rendering
			$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :
			data.anCells[ colIdx ];
	}
	
	
	/**
	 * Get the maximum strlen for each data column
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {string} max string length for each column
	 *  @memberof DataTable#oApi
	 */
	function _fnGetMaxLenString( settings, colIdx )
	{
		var s, max=-1, maxIdx = -1;
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			s = _fnGetCellData( settings, i, colIdx, 'display' )+'';
			s = s.replace( __re_html_remove, '' );
			s = s.replace( /&nbsp;/g, ' ' );
	
			if ( s.length > max ) {
				max = s.length;
				maxIdx = i;
			}
		}
	
		return maxIdx;
	}
	
	
	/**
	 * Append a CSS unit (only if required) to a string
	 *  @param {string} value to css-ify
	 *  @returns {string} value with css unit
	 *  @memberof DataTable#oApi
	 */
	function _fnStringToCss( s )
	{
		if ( s === null ) {
			return '0px';
		}
	
		if ( typeof s == 'number' ) {
			return s < 0 ?
				'0px' :
				s+'px';
		}
	
		// Check it has a unit character already
		return s.match(/\d$/) ?
			s+'px' :
			s;
	}
	
	
	
	function _fnSortFlatten ( settings )
	{
		var
			i, iLen, k, kLen,
			aSort = [],
			aiOrig = [],
			aoColumns = settings.aoColumns,
			aDataSort, iCol, sType, srcCol,
			fixed = settings.aaSortingFixed,
			fixedObj = $.isPlainObject( fixed ),
			nestedSort = [],
			add = function ( a ) {
				if ( a.length && ! $.isArray( a[0] ) ) {
					// 1D array
					nestedSort.push( a );
				}
				else {
					// 2D array
					$.merge( nestedSort, a );
				}
			};
	
		// Build the sort array, with pre-fix and post-fix options if they have been
		// specified
		if ( $.isArray( fixed ) ) {
			add( fixed );
		}
	
		if ( fixedObj && fixed.pre ) {
			add( fixed.pre );
		}
	
		add( settings.aaSorting );
	
		if (fixedObj && fixed.post ) {
			add( fixed.post );
		}
	
		for ( i=0 ; i<nestedSort.length ; i++ )
		{
			srcCol = nestedSort[i][0];
			aDataSort = aoColumns[ srcCol ].aDataSort;
	
			for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )
			{
				iCol = aDataSort[k];
				sType = aoColumns[ iCol ].sType || 'string';
	
				if ( nestedSort[i]._idx === undefined ) {
					nestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );
				}
	
				aSort.push( {
					src:       srcCol,
					col:       iCol,
					dir:       nestedSort[i][1],
					index:     nestedSort[i]._idx,
					type:      sType,
					formatter: DataTable.ext.type.order[ sType+"-pre" ]
				} );
			}
		}
	
		return aSort;
	}
	
	/**
	 * Change the order of the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 *  @todo This really needs split up!
	 */
	function _fnSort ( oSettings )
	{
		var
			i, ien, iLen, j, jLen, k, kLen,
			sDataType, nTh,
			aiOrig = [],
			oExtSort = DataTable.ext.type.order,
			aoData = oSettings.aoData,
			aoColumns = oSettings.aoColumns,
			aDataSort, data, iCol, sType, oSort,
			formatters = 0,
			sortCol,
			displayMaster = oSettings.aiDisplayMaster,
			aSort;
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo Can this be moved into a 'data-ready' handler which is called when
		//   data is going to be used in the table?
		_fnColumnTypes( oSettings );
	
		aSort = _fnSortFlatten( oSettings );
	
		for ( i=0, ien=aSort.length ; i<ien ; i++ ) {
			sortCol = aSort[i];
	
			// Track if we can use the fast sort algorithm
			if ( sortCol.formatter ) {
				formatters++;
			}
	
			// Load the data needed for the sort, for each cell
			_fnSortData( oSettings, sortCol.col );
		}
	
		/* No sorting required if server-side or no sorting array */
		if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )
		{
			// Create a value - key array of the current row positions such that we can use their
			// current position during the sort, if values match, in order to perform stable sorting
			for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {
				aiOrig[ displayMaster[i] ] = i;
			}
	
			/* Do the sort - here we want multi-column sorting based on a given data source (column)
			 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
			 * follow on it's own, but this is what we want (example two column sorting):
			 *  fnLocalSorting = function(a,b){
			 *    var iTest;
			 *    iTest = oSort['string-asc']('data11', 'data12');
			 *      if (iTest !== 0)
			 *        return iTest;
			 *    iTest = oSort['numeric-desc']('data21', 'data22');
			 *    if (iTest !== 0)
			 *      return iTest;
			 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
			 *  }
			 * Basically we have a test for each sorting column, if the data in that column is equal,
			 * test the next column. If all columns match, then we use a numeric sort on the row
			 * positions in the original data array to provide a stable sort.
			 *
			 * Note - I know it seems excessive to have two sorting methods, but the first is around
			 * 15% faster, so the second is only maintained for backwards compatibility with sorting
			 * methods which do not have a pre-sort formatting function.
			 */
			if ( formatters === aSort.length ) {
				// All sort types have formatting functions
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, test, sort,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						test = x<y ? -1 : x>y ? 1 : 0;
						if ( test !== 0 ) {
							return sort.dir === 'asc' ? test : -test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
			else {
				// Depreciated - remove in 1.11 (providing a plug-in option)
				// Not all sort types have formatting methods, so we have to call their sorting
				// methods.
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, l, test, sort, fn,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						fn = oExtSort[ sort.type+"-"+sort.dir ] || oExtSort[ "string-"+sort.dir ];
						test = fn( x, y );
						if ( test !== 0 ) {
							return test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
		}
	
		/* Tell the draw function that we have sorted the data */
		oSettings.bSorted = true;
	}
	
	
	function _fnSortAria ( settings )
	{
		var label;
		var nextSort;
		var columns = settings.aoColumns;
		var aSort = _fnSortFlatten( settings );
		var oAria = settings.oLanguage.oAria;
	
		// ARIA attributes - need to loop all columns, to update all (removing old
		// attributes as needed)
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			var col = columns[i];
			var asSorting = col.asSorting;
			var sTitle = col.sTitle.replace( /<.*?>/g, "" );
			var th = col.nTh;
	
			// IE7 is throwing an error when setting these properties with jQuery's
			// attr() and removeAttr() methods...
			th.removeAttribute('aria-sort');
	
			/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
			if ( col.bSortable ) {
				if ( aSort.length > 0 && aSort[0].col == i ) {
					th.setAttribute('aria-sort', aSort[0].dir=="asc" ? "ascending" : "descending" );
					nextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];
				}
				else {
					nextSort = asSorting[0];
				}
	
				label = sTitle + ( nextSort === "asc" ?
					oAria.sSortAscending :
					oAria.sSortDescending
				);
			}
			else {
				label = sTitle;
			}
	
			th.setAttribute('aria-label', label);
		}
	}
	
	
	/**
	 * Function to run on user sort request
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {boolean} [append=false] Append the requested sort to the existing
	 *    sort if true (i.e. multi-column sort)
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortListener ( settings, colIdx, append, callback )
	{
		var col = settings.aoColumns[ colIdx ];
		var sorting = settings.aaSorting;
		var asSorting = col.asSorting;
		var nextSortIdx;
		var next = function ( a, overflow ) {
			var idx = a._idx;
			if ( idx === undefined ) {
				idx = $.inArray( a[1], asSorting );
			}
	
			return idx+1 < asSorting.length ?
				idx+1 :
				overflow ?
					null :
					0;
		};
	
		// Convert to 2D array if needed
		if ( typeof sorting[0] === 'number' ) {
			sorting = settings.aaSorting = [ sorting ];
		}
	
		// If appending the sort then we are multi-column sorting
		if ( append && settings.oFeatures.bSortMulti ) {
			// Are we already doing some kind of sort on this column?
			var sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );
	
			if ( sortIdx !== -1 ) {
				// Yes, modify the sort
				nextSortIdx = next( sorting[sortIdx], true );
	
				if ( nextSortIdx === null && sorting.length === 1 ) {
					nextSortIdx = 0; // can't remove sorting completely
				}
	
				if ( nextSortIdx === null ) {
					sorting.splice( sortIdx, 1 );
				}
				else {
					sorting[sortIdx][1] = asSorting[ nextSortIdx ];
					sorting[sortIdx]._idx = nextSortIdx;
				}
			}
			else {
				// No sort on this column yet
				sorting.push( [ colIdx, asSorting[0], 0 ] );
				sorting[sorting.length-1]._idx = 0;
			}
		}
		else if ( sorting.length && sorting[0][0] == colIdx ) {
			// Single column - already sorting on this column, modify the sort
			nextSortIdx = next( sorting[0] );
	
			sorting.length = 1;
			sorting[0][1] = asSorting[ nextSortIdx ];
			sorting[0]._idx = nextSortIdx;
		}
		else {
			// Single column - sort only on this column
			sorting.length = 0;
			sorting.push( [ colIdx, asSorting[0] ] );
			sorting[0]._idx = 0;
		}
	
		// Run the sort by calling a full redraw
		_fnReDraw( settings );
	
		// callback used for async user interaction
		if ( typeof callback == 'function' ) {
			callback( settings );
		}
	}
	
	
	/**
	 * Attach a sort handler (click) to a node
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortAttachListener ( settings, attachTo, colIdx, callback )
	{
		var col = settings.aoColumns[ colIdx ];
	
		_fnBindAction( attachTo, {}, function (e) {
			/* If the column is not sortable - don't to anything */
			if ( col.bSortable === false ) {
				return;
			}
	
			// If processing is enabled use a timeout to allow the processing
			// display to be shown - otherwise to it synchronously
			if ( settings.oFeatures.bProcessing ) {
				_fnProcessingDisplay( settings, true );
	
				setTimeout( function() {
					_fnSortListener( settings, colIdx, e.shiftKey, callback );
	
					// In server-side processing, the draw callback will remove the
					// processing display
					if ( _fnDataSource( settings ) !== 'ssp' ) {
						_fnProcessingDisplay( settings, false );
					}
				}, 0 );
			}
			else {
				_fnSortListener( settings, colIdx, e.shiftKey, callback );
			}
		} );
	}
	
	
	/**
	 * Set the sorting classes on table's body, Note: it is safe to call this function
	 * when bSort and bSortClasses are false
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSortingClasses( settings )
	{
		var oldSort = settings.aLastSort;
		var sortClass = settings.oClasses.sSortColumn;
		var sort = _fnSortFlatten( settings );
		var features = settings.oFeatures;
		var i, ien, colIdx;
	
		if ( features.bSort && features.bSortClasses ) {
			// Remove old sorting classes
			for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {
				colIdx = oldSort[i].src;
	
				// Remove column sorting
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.removeClass( sortClass + (i<2 ? i+1 : 3) );
			}
	
			// Add new column sorting
			for ( i=0, ien=sort.length ; i<ien ; i++ ) {
				colIdx = sort[i].src;
	
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.addClass( sortClass + (i<2 ? i+1 : 3) );
			}
		}
	
		settings.aLastSort = sort;
	}
	
	
	// Get the data to sort a column, be it from cache, fresh (populating the
	// cache), or from a sort formatter
	function _fnSortData( settings, idx )
	{
		// Custom sorting function - provided by the sort data type
		var column = settings.aoColumns[ idx ];
		var customSort = DataTable.ext.order[ column.sSortDataType ];
		var customData;
	
		if ( customSort ) {
			customData = customSort.call( settings.oInstance, settings, idx,
				_fnColumnIndexToVisible( settings, idx )
			);
		}
	
		// Use / populate cache
		var row, cellData;
		var formatter = DataTable.ext.type.order[ column.sType+"-pre" ];
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aSortData ) {
				row._aSortData = [];
			}
	
			if ( ! row._aSortData[idx] || customSort ) {
				cellData = customSort ?
					customData[i] : // If there was a custom sort function, use data from there
					_fnGetCellData( settings, i, idx, 'sort' );
	
				row._aSortData[ idx ] = formatter ?
					formatter( cellData ) :
					cellData;
			}
		}
	}
	
	
	
	/**
	 * Save the state of a table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSaveState ( settings )
	{
		if ( !settings.oFeatures.bStateSave || settings.bDestroying )
		{
			return;
		}
	
		/* Store the interesting variables */
		var state = {
			time:    +new Date(),
			start:   settings._iDisplayStart,
			length:  settings._iDisplayLength,
			order:   $.extend( true, [], settings.aaSorting ),
			search:  _fnSearchToCamel( settings.oPreviousSearch ),
			columns: $.map( settings.aoColumns, function ( col, i ) {
				return {
					visible: col.bVisible,
					search: _fnSearchToCamel( settings.aoPreSearchCols[i] )
				};
			} )
		};
	
		_fnCallbackFire( settings, "aoStateSaveParams", 'stateSaveParams', [settings, state] );
	
		settings.oSavedState = state;
		settings.fnStateSaveCallback.call( settings.oInstance, settings, state );
	}
	
	
	/**
	 * Attempt to load a saved table state
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oInit DataTables init object so we can override settings
	 *  @memberof DataTable#oApi
	 */
	function _fnLoadState ( settings, oInit )
	{
		var i, ien;
		var columns = settings.aoColumns;
	
		if ( ! settings.oFeatures.bStateSave ) {
			return;
		}
	
		var state = settings.fnStateLoadCallback.call( settings.oInstance, settings );
		if ( ! state || ! state.time ) {
			return;
		}
	
		/* Allow custom and plug-in manipulation functions to alter the saved data set and
		 * cancelling of loading by returning false
		 */
		var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state] );
		if ( $.inArray( false, abStateLoad ) !== -1 ) {
			return;
		}
	
		/* Reject old data */
		var duration = settings.iStateDuration;
		if ( duration > 0 && state.time < +new Date() - (duration*1000) ) {
			return;
		}
	
		// Number of columns have changed - all bets are off, no restore of settings
		if ( columns.length !== state.columns.length ) {
			return;
		}
	
		// Store the saved state so it might be accessed at any time
		settings.oLoadedState = $.extend( true, {}, state );
	
		// Restore key features - todo - for 1.11 this needs to be done by
		// subscribed events
		if ( state.start !== undefined ) {
			settings._iDisplayStart    = state.start;
			settings.iInitDisplayStart = state.start;
		}
		if ( state.length !== undefined ) {
			settings._iDisplayLength   = state.length;
		}
	
		// Order
		if ( state.order !== undefined ) {
			settings.aaSorting = [];
			$.each( state.order, function ( i, col ) {
				settings.aaSorting.push( col[0] >= columns.length ?
					[ 0, col[1] ] :
					col
				);
			} );
		}
	
		// Search
		if ( state.search !== undefined ) {
			$.extend( settings.oPreviousSearch, _fnSearchToHung( state.search ) );
		}
	
		// Columns
		for ( i=0, ien=state.columns.length ; i<ien ; i++ ) {
			var col = state.columns[i];
	
			// Visibility
			if ( col.visible !== undefined ) {
				columns[i].bVisible = col.visible;
			}
	
			// Search
			if ( col.search !== undefined ) {
				$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );
			}
		}
	
		_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, state] );
	}
	
	
	/**
	 * Return the settings object for a particular table
	 *  @param {node} table table we are using as a dataTable
	 *  @returns {object} Settings object - or null if not found
	 *  @memberof DataTable#oApi
	 */
	function _fnSettingsFromNode ( table )
	{
		var settings = DataTable.settings;
		var idx = $.inArray( table, _pluck( settings, 'nTable' ) );
	
		return idx !== -1 ?
			settings[ idx ] :
			null;
	}
	
	
	/**
	 * Log an error message
	 *  @param {object} settings dataTables settings object
	 *  @param {int} level log error messages, or display them to the user
	 *  @param {string} msg error message
	 *  @param {int} tn Technical note id to get more information about the error.
	 *  @memberof DataTable#oApi
	 */
	function _fnLog( settings, level, msg, tn )
	{
		msg = 'DataTables warning: '+
			(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;
	
		if ( tn ) {
			msg += '. For more information about this error, please see '+
			'http://datatables.net/tn/'+tn;
		}
	
		if ( ! level  ) {
			// Backwards compatibility pre 1.10
			var ext = DataTable.ext;
			var type = ext.sErrMode || ext.errMode;
	
			if ( settings ) {
				_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );
			}
	
			if ( type == 'alert' ) {
				alert( msg );
			}
			else if ( type == 'throw' ) {
				throw new Error(msg);
			}
			else if ( typeof type == 'function' ) {
				type( settings, tn, msg );
			}
		}
		else if ( window.console && console.log ) {
			console.log( msg );
		}
	}
	
	
	/**
	 * See if a property is defined on one object, if so assign it to the other object
	 *  @param {object} ret target object
	 *  @param {object} src source object
	 *  @param {string} name property
	 *  @param {string} [mappedName] name to map too - optional, name used if not given
	 *  @memberof DataTable#oApi
	 */
	function _fnMap( ret, src, name, mappedName )
	{
		if ( $.isArray( name ) ) {
			$.each( name, function (i, val) {
				if ( $.isArray( val ) ) {
					_fnMap( ret, src, val[0], val[1] );
				}
				else {
					_fnMap( ret, src, val );
				}
			} );
	
			return;
		}
	
		if ( mappedName === undefined ) {
			mappedName = name;
		}
	
		if ( src[name] !== undefined ) {
			ret[mappedName] = src[name];
		}
	}
	
	
	/**
	 * Extend objects - very similar to jQuery.extend, but deep copy objects, and
	 * shallow copy arrays. The reason we need to do this, is that we don't want to
	 * deep copy array init values (such as aaSorting) since the dev wouldn't be
	 * able to override them, but we do want to deep copy arrays.
	 *  @param {object} out Object to extend
	 *  @param {object} extender Object from which the properties will be applied to
	 *      out
	 *  @param {boolean} breakRefs If true, then arrays will be sliced to take an
	 *      independent copy with the exception of the `data` or `aaData` parameters
	 *      if they are present. This is so you can pass in a collection to
	 *      DataTables and have that used as your data source without breaking the
	 *      references
	 *  @returns {object} out Reference, just for convenience - out === the return.
	 *  @memberof DataTable#oApi
	 *  @todo This doesn't take account of arrays inside the deep copied objects.
	 */
	function _fnExtend( out, extender, breakRefs )
	{
		var val;
	
		for ( var prop in extender ) {
			if ( extender.hasOwnProperty(prop) ) {
				val = extender[prop];
	
				if ( $.isPlainObject( val ) ) {
					if ( ! $.isPlainObject( out[prop] ) ) {
						out[prop] = {};
					}
					$.extend( true, out[prop], val );
				}
				else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {
					out[prop] = val.slice();
				}
				else {
					out[prop] = val;
				}
			}
		}
	
		return out;
	}
	
	
	/**
	 * Bind an event handers to allow a click or return key to activate the callback.
	 * This is good for accessibility since a return on the keyboard will have the
	 * same effect as a click, if the element has focus.
	 *  @param {element} n Element to bind the action to
	 *  @param {object} oData Data object to pass to the triggered function
	 *  @param {function} fn Callback function for when the event is triggered
	 *  @memberof DataTable#oApi
	 */
	function _fnBindAction( n, oData, fn )
	{
		$(n)
			.bind( 'click.DT', oData, function (e) {
					n.blur(); // Remove focus outline for mouse users
					fn(e);
				} )
			.bind( 'keypress.DT', oData, function (e){
					if ( e.which === 13 ) {
						e.preventDefault();
						fn(e);
					}
				} )
			.bind( 'selectstart.DT', function () {
					/* Take the brutal approach to cancelling text selection */
					return false;
				} );
	}
	
	
	/**
	 * Register a callback function. Easily allows a callback function to be added to
	 * an array store of callback functions that can then all be called together.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sStore Name of the array storage for the callbacks in oSettings
	 *  @param {function} fn Function to be called back
	 *  @param {string} sName Identifying name for the callback (i.e. a label)
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackReg( oSettings, sStore, fn, sName )
	{
		if ( fn )
		{
			oSettings[sStore].push( {
				"fn": fn,
				"sName": sName
			} );
		}
	}
	
	
	/**
	 * Fire callback functions and trigger events. Note that the loop over the
	 * callback array store is done backwards! Further note that you do not want to
	 * fire off triggers in time sensitive applications (for example cell creation)
	 * as its slow.
	 *  @param {object} settings dataTables settings object
	 *  @param {string} callbackArr Name of the array storage for the callbacks in
	 *      oSettings
	 *  @param {string} eventName Name of the jQuery custom event to trigger. If
	 *      null no trigger is fired
	 *  @param {array} args Array of arguments to pass to the callback function /
	 *      trigger
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackFire( settings, callbackArr, eventName, args )
	{
		var ret = [];
	
		if ( callbackArr ) {
			ret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {
				return val.fn.apply( settings.oInstance, args );
			} );
		}
	
		if ( eventName !== null ) {
			var e = $.Event( eventName+'.dt' );
	
			$(settings.nTable).trigger( e, args );
	
			ret.push( e.result );
		}
	
		return ret;
	}
	
	
	function _fnLengthOverflow ( settings )
	{
		var
			start = settings._iDisplayStart,
			end = settings.fnDisplayEnd(),
			len = settings._iDisplayLength;
	
		/* If we have space to show extra rows (backing up from the end point - then do so */
		if ( start >= end )
		{
			start = end - len;
		}
	
		// Keep the start record on the current page
		start -= (start % len);
	
		if ( len === -1 || start < 0 )
		{
			start = 0;
		}
	
		settings._iDisplayStart = start;
	}
	
	
	function _fnRenderer( settings, type )
	{
		var renderer = settings.renderer;
		var host = DataTable.ext.renderer[type];
	
		if ( $.isPlainObject( renderer ) && renderer[type] ) {
			// Specific renderer for this type. If available use it, otherwise use
			// the default.
			return host[renderer[type]] || host._;
		}
		else if ( typeof renderer === 'string' ) {
			// Common renderer - if there is one available for this type use it,
			// otherwise use the default
			return host[renderer] || host._;
		}
	
		// Use the default
		return host._;
	}
	
	
	/**
	 * Detect the data source being used for the table. Used to simplify the code
	 * a little (ajax) and to make it compress a little smaller.
	 *
	 *  @param {object} settings dataTables settings object
	 *  @returns {string} Data source
	 *  @memberof DataTable#oApi
	 */
	function _fnDataSource ( settings )
	{
		if ( settings.oFeatures.bServerSide ) {
			return 'ssp';
		}
		else if ( settings.ajax || settings.sAjaxSource ) {
			return 'ajax';
		}
		return 'dom';
	}
	

	DataTable = function( options )
	{
		/**
		 * Perform a jQuery selector action on the table's TR elements (from the tbody) and
		 * return the resulting jQuery object.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
		 *    criterion ("applied") or all TR elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {object} jQuery object, filtered by the given selector.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"search": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
		 */
		this.$ = function ( sSelector, oOpts )
		{
			return this.api(true).$( sSelector, oOpts );
		};
		
		
		/**
		 * Almost identical to $ in operation, but in this case returns the data for the matched
		 * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
		 * rather than any descendants, so the data can be obtained for the row/cell. If matching
		 * rows are found, the data returned is the original data array/object that was used to
		 * create the row (or a generated array if from a DOM source).
		 *
		 * This method is often useful in-combination with $ where both functions are given the
		 * same parameters and the array indexes will match identically.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
		 *    criterion ("applied") or all elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the data in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {array} Data for the matched elements. If any elements, as a result of the
		 *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
		 *    entry in the array.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"search": "applied"});
		 *
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the search" );
		 *    } );
		 */
		this._ = function ( sSelector, oOpts )
		{
			return this.api(true).rows( sSelector, oOpts ).data();
		};
		
		
		/**
		 * Create a DataTables Api instance, with the currently selected tables for
		 * the Api's context.
		 * @param {boolean} [traditional=false] Set the API instance's context to be
		 *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was
		 *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),
		 *   or if all tables captured in the jQuery object should be used.
		 * @return {DataTables.Api}
		 */
		this.api = function ( traditional )
		{
			return traditional ?
				new _Api(
					_fnSettingsFromNode( this[ _ext.iApiIndex ] )
				) :
				new _Api( this );
		};
		
		
		/**
		 * Add a single new row or multiple rows of data to the table. Please note
		 * that this is suitable for client-side processing only - if you are using
		 * server-side processing (i.e. "bServerSide": true), then to add data, you
		 * must add it to the data source, i.e. the server-side, through an Ajax call.
		 *  @param {array|object} data The data to be added to the table. This can be:
		 *    <ul>
		 *      <li>1D array of data - add a single row with the data provided</li>
		 *      <li>2D array of arrays - add multiple rows in a single call</li>
		 *      <li>object - data object when using <i>mData</i></li>
		 *      <li>array of objects - multiple data objects when using <i>mData</i></li>
		 *    </ul>
		 *  @param {bool} [redraw=true] redraw the table or not
		 *  @returns {array} An array of integers, representing the list of indexes in
		 *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
		 *    the table.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Global var for counter
		 *    var giCount = 2;
		 *
		 *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
		 *
		 *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *
		 *      giCount++;
		 *    }
		 */
		this.fnAddData = function( data, redraw )
		{
			var api = this.api( true );
		
			/* Check if we want to add multiple rows or not */
			var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?
				api.rows.add( data ) :
				api.row.add( data );
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return rows.flatten().toArray();
		};
		
		
		/**
		 * This function will make DataTables recalculate the column sizes, based on the data
		 * contained in the table and the sizes applied to the columns (in the DOM, CSS or
		 * through the sWidth parameter). This can be useful when the width of the table's
		 * parent element changes (for example a window resize).
		 *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *
		 *      $(window).bind('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
		 */
		this.fnAdjustColumnSizing = function ( bRedraw )
		{
			var api = this.api( true ).columns.adjust();
			var settings = api.settings()[0];
			var scroll = settings.oScroll;
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw( false );
			}
			else if ( scroll.sX !== "" || scroll.sY !== "" ) {
				/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
				_fnScrollDraw( settings );
			}
		};
		
		
		/**
		 * Quickly and simply clear a table
		 *  @param {bool} [bRedraw=true] redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
		 */
		this.fnClearTable = function( bRedraw )
		{
			var api = this.api( true ).clear();
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
		};
		
		
		/**
		 * The exact opposite of 'opening' a row, this function will close any rows which
		 * are currently 'open'.
		 *  @param {node} nTr the table row to 'close'
		 *  @returns {int} 0 on success, or 1 if failed (can't find the row)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnClose = function( nTr )
		{
			this.api( true ).row( nTr ).child.hide();
		};
		
		
		/**
		 * Remove a row for the table
		 *  @param {mixed} target The index of the row from aoData to be deleted, or
		 *    the TR element you want to delete
		 *  @param {function|null} [callBack] Callback function
		 *  @param {bool} [redraw=true] Redraw the table or not
		 *  @returns {array} The row that was deleted
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
		 */
		this.fnDeleteRow = function( target, callback, redraw )
		{
			var api = this.api( true );
			var rows = api.rows( target );
			var settings = rows.settings()[0];
			var data = settings.aoData[ rows[0][0] ];
		
			rows.remove();
		
			if ( callback ) {
				callback.call( this, settings, data );
			}
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return data;
		};
		
		
		/**
		 * Restore the table to it's original state in the DOM by removing all of DataTables
		 * enhancements, alterations to the DOM structure of the table and event listeners.
		 *  @param {boolean} [remove=false] Completely remove the table from the DOM
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
		 */
		this.fnDestroy = function ( remove )
		{
			this.api( true ).destroy( remove );
		};
		
		
		/**
		 * Redraw the table
		 *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
		 */
		this.fnDraw = function( complete )
		{
			// Note that this isn't an exact match to the old call to _fnDraw - it takes
			// into account the new data, but can hold position.
			this.api( true ).draw( complete );
		};
		
		
		/**
		 * Filter the input based on data
		 *  @param {string} sInput String to filter the table on
		 *  @param {int|null} [iColumn] Column to limit filtering to
		 *  @param {bool} [bRegex=false] Treat as regular expression or not
		 *  @param {bool} [bSmart=true] Perform smart filtering or not
		 *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
		 *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
		 */
		this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )
		{
			var api = this.api( true );
		
			if ( iColumn === null || iColumn === undefined ) {
				api.search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
			else {
				api.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
		
			api.draw();
		};
		
		
		/**
		 * Get the data for the whole table, an individual row or an individual cell based on the
		 * provided parameters.
		 *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as
		 *    a TR node then the data source for the whole row will be returned. If given as a
		 *    TD/TH cell node then iCol will be automatically calculated and the data for the
		 *    cell returned. If given as an integer, then this is treated as the aoData internal
		 *    data index for the row (see fnGetPosition) and the data for that row used.
		 *  @param {int} [col] Optional column index that you want the data of.
		 *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
		 *    returned. If mRow is defined, just data for that row, and is iCol is
		 *    defined, only data for the designated cell is returned.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Row data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Individual cell data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
		 */
		this.fnGetData = function( src, col )
		{
			var api = this.api( true );
		
			if ( src !== undefined ) {
				var type = src.nodeName ? src.nodeName.toLowerCase() : '';
		
				return col !== undefined || type == 'td' || type == 'th' ?
					api.cell( src, col ).data() :
					api.row( src ).data() || null;
			}
		
			return api.data().toArray();
		};
		
		
		/**
		 * Get an array of the TR nodes that are used in the table's body. Note that you will
		 * typically want to use the '$' API method in preference to this as it is more
		 * flexible.
		 *  @param {int} [iRow] Optional row index for the TR element you want
		 *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
		 *    in the table's body, or iRow is defined, just the TR element requested.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
		 */
		this.fnGetNodes = function( iRow )
		{
			var api = this.api( true );
		
			return iRow !== undefined ?
				api.row( iRow ).node() :
				api.rows().nodes().flatten().toArray();
		};
		
		
		/**
		 * Get the array indexes of a particular cell from it's DOM element
		 * and column index including hidden columns
		 *  @param {node} node this can either be a TR, TD or TH in the table's body
		 *  @returns {int} If nNode is given as a TR, then a single index is returned, or
		 *    if given as a cell, an array of [row index, column index (visible),
		 *    column index (all)] is given.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnGetPosition = function( node )
		{
			var api = this.api( true );
			var nodeName = node.nodeName.toUpperCase();
		
			if ( nodeName == 'TR' ) {
				return api.row( node ).index();
			}
			else if ( nodeName == 'TD' || nodeName == 'TH' ) {
				var cell = api.cell( node ).index();
		
				return [
					cell.row,
					cell.columnVisible,
					cell.column
				];
			}
			return null;
		};
		
		
		/**
		 * Check to see if a row is 'open' or not.
		 *  @param {node} nTr the table row to check
		 *  @returns {boolean} true if the row is currently open, false otherwise
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnIsOpen = function( nTr )
		{
			return this.api( true ).row( nTr ).child.isShown();
		};
		
		
		/**
		 * This function will place a new row directly after a row which is currently
		 * on display on the page, with the HTML contents that is passed into the
		 * function. This can be used, for example, to ask for confirmation that a
		 * particular record should be deleted.
		 *  @param {node} nTr The table row to 'open'
		 *  @param {string|node|jQuery} mHtml The HTML to put into the row
		 *  @param {string} sClass Class to give the new TD cell
		 *  @returns {node} The row opened. Note that if the table row passed in as the
		 *    first parameter, is not found in the table, this method will silently
		 *    return.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnOpen = function( nTr, mHtml, sClass )
		{
			return this.api( true )
				.row( nTr )
				.child( mHtml, sClass )
				.show()
				.child()[0];
		};
		
		
		/**
		 * Change the pagination - provides the internal logic for pagination in a simple API
		 * function. With this function you can have a DataTables table go to the next,
		 * previous, first or last pages.
		 *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
		 *    or page number to jump to (integer), note that page 0 is the first page.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
		 */
		this.fnPageChange = function ( mAction, bRedraw )
		{
			var api = this.api( true ).page( mAction );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw(false);
			}
		};
		
		
		/**
		 * Show a particular column
		 *  @param {int} iCol The column whose display should be changed
		 *  @param {bool} bShow Show (true) or hide (false) the column
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
		 */
		this.fnSetColumnVis = function ( iCol, bShow, bRedraw )
		{
			var api = this.api( true ).column( iCol ).visible( bShow );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.columns.adjust().draw();
			}
		};
		
		
		/**
		 * Get the settings for a particular table for external manipulation
		 *  @returns {object} DataTables settings object. See
		 *    {@link DataTable.models.oSettings}
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
		 */
		this.fnSettings = function()
		{
			return _fnSettingsFromNode( this[_ext.iApiIndex] );
		};
		
		
		/**
		 * Sort the table by a particular column
		 *  @param {int} iCol the data index to sort on. Note that this will not match the
		 *    'display index' if you have hidden data entries
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
		 */
		this.fnSort = function( aaSort )
		{
			this.api( true ).order( aaSort ).draw();
		};
		
		
		/**
		 * Attach a sort listener to an element for a given column
		 *  @param {node} nNode the element to attach the sort listener to
		 *  @param {int} iColumn the column that a click on this node will sort on
		 *  @param {function} [fnCallback] callback function when sort is run
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
		 */
		this.fnSortListener = function( nNode, iColumn, fnCallback )
		{
			this.api( true ).order.listener( nNode, iColumn, fnCallback );
		};
		
		
		/**
		 * Update a table cell or row - this method will accept either a single value to
		 * update the cell with, an array of values with one element for each column or
		 * an object in the same format as the original data source. The function is
		 * self-referencing in order to make the multi column updates easier.
		 *  @param {object|array|string} mData Data to update the cell/row with
		 *  @param {node|int} mRow TR element you want to update or the aoData index
		 *  @param {int} [iColumn] The column to update, give as null or undefined to
		 *    update a whole row.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @param {bool} [bAction=true] Perform pre-draw actions or not
		 *  @returns {int} 0 on success, 1 on error
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row
		 *    } );
		 */
		this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )
		{
			var api = this.api( true );
		
			if ( iColumn === undefined || iColumn === null ) {
				api.row( mRow ).data( mData );
			}
			else {
				api.cell( mRow, iColumn ).data( mData );
			}
		
			if ( bAction === undefined || bAction ) {
				api.columns.adjust();
			}
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
			return 0;
		};
		
		
		/**
		 * Provide a common method for plug-ins to check the version of DataTables being used, in order
		 * to ensure compatibility.
		 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
		 *    formats "X" and "X.Y" are also acceptable.
		 *  @returns {boolean} true if this version of DataTables is greater or equal to the required
		 *    version, or false if this version of DataTales is not suitable
		 *  @method
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
		 */
		this.fnVersionCheck = _ext.fnVersionCheck;
		

		var _that = this;
		var emptyInit = options === undefined;
		var len = this.length;

		if ( emptyInit ) {
			options = {};
		}

		this.oApi = this.internal = _ext.internal;

		// Extend with old style plug-in API methods
		for ( var fn in DataTable.ext.internal ) {
			if ( fn ) {
				this[fn] = _fnExternApiFunc(fn);
			}
		}

		this.each(function() {
			// For each initialisation we want to give it a clean initialisation
			// object that can be bashed around
			var o = {};
			var oInit = len > 1 ? // optimisation for single table case
				_fnExtend( o, options, true ) :
				options;

			/*global oInit,_that,emptyInit*/
			var i=0, iLen, j, jLen, k, kLen;
			var sId = this.getAttribute( 'id' );
			var bInitHandedOff = false;
			var defaults = DataTable.defaults;
			var $this = $(this);
			
			
			/* Sanity check */
			if ( this.nodeName.toLowerCase() != 'table' )
			{
				_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );
				return;
			}
			
			/* Backwards compatibility for the defaults */
			_fnCompatOpts( defaults );
			_fnCompatCols( defaults.column );
			
			/* Convert the camel-case defaults to Hungarian */
			_fnCamelToHungarian( defaults, defaults, true );
			_fnCamelToHungarian( defaults.column, defaults.column, true );
			
			/* Setting up the initialisation object */
			_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );
			
			
			
			/* Check to see if we are re-initialising a table */
			var allSettings = DataTable.settings;
			for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )
			{
				var s = allSettings[i];
			
				/* Base check on table node */
				if ( s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this) )
				{
					var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
					var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;
			
					if ( emptyInit || bRetrieve )
					{
						return s.oInstance;
					}
					else if ( bDestroy )
					{
						s.oInstance.fnDestroy();
						break;
					}
					else
					{
						_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );
						return;
					}
				}
			
				/* If the element we are initialising has the same ID as a table which was previously
				 * initialised, but the table nodes don't match (from before) then we destroy the old
				 * instance by simply deleting it. This is under the assumption that the table has been
				 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
				 */
				if ( s.sTableId == this.id )
				{
					allSettings.splice( i, 1 );
					break;
				}
			}
			
			/* Ensure the table has an ID - required for accessibility */
			if ( sId === null || sId === "" )
			{
				sId = "DataTables_Table_"+(DataTable.ext._unique++);
				this.id = sId;
			}
			
			/* Create the settings object for this table and set some of the default parameters */
			var oSettings = $.extend( true, {}, DataTable.models.oSettings, {
				"sDestroyWidth": $this[0].style.width,
				"sInstance":     sId,
				"sTableId":      sId
			} );
			oSettings.nTable = this;
			oSettings.oApi   = _that.internal;
			oSettings.oInit  = oInit;
			
			allSettings.push( oSettings );
			
			// Need to add the instance after the instance after the settings object has been added
			// to the settings array, so we can self reference the table instance if more than one
			oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();
			
			// Backwards compatibility, before we apply all the defaults
			_fnCompatOpts( oInit );
			
			if ( oInit.oLanguage )
			{
				_fnLanguageCompat( oInit.oLanguage );
			}
			
			// If the length menu is given, but the init display length is not, use the length menu
			if ( oInit.aLengthMenu && ! oInit.iDisplayLength )
			{
				oInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?
					oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
			}
			
			// Apply the defaults and init options to make a single init object will all
			// options defined from defaults and instance options.
			oInit = _fnExtend( $.extend( true, {}, defaults ), oInit );
			
			
			// Map the initialisation options onto the settings object
			_fnMap( oSettings.oFeatures, oInit, [
				"bPaginate",
				"bLengthChange",
				"bFilter",
				"bSort",
				"bSortMulti",
				"bInfo",
				"bProcessing",
				"bAutoWidth",
				"bSortClasses",
				"bServerSide",
				"bDeferRender"
			] );
			_fnMap( oSettings, oInit, [
				"asStripeClasses",
				"ajax",
				"fnServerData",
				"fnFormatNumber",
				"sServerMethod",
				"aaSorting",
				"aaSortingFixed",
				"aLengthMenu",
				"sPaginationType",
				"sAjaxSource",
				"sAjaxDataProp",
				"iStateDuration",
				"sDom",
				"bSortCellsTop",
				"iTabIndex",
				"fnStateLoadCallback",
				"fnStateSaveCallback",
				"renderer",
				"searchDelay",
				"rowId",
				[ "iCookieDuration", "iStateDuration" ], // backwards compat
				[ "oSearch", "oPreviousSearch" ],
				[ "aoSearchCols", "aoPreSearchCols" ],
				[ "iDisplayLength", "_iDisplayLength" ],
				[ "bJQueryUI", "bJUI" ]
			] );
			_fnMap( oSettings.oScroll, oInit, [
				[ "sScrollX", "sX" ],
				[ "sScrollXInner", "sXInner" ],
				[ "sScrollY", "sY" ],
				[ "bScrollCollapse", "bCollapse" ]
			] );
			_fnMap( oSettings.oLanguage, oInit, "fnInfoCallback" );
			
			/* Callback functions which are array driven */
			_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );
			_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );
			_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );
			_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );
			_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );
			
			oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );
			
			/* Browser support detection */
			_fnBrowserDetect( oSettings );
			
			var oClasses = oSettings.oClasses;
			
			// @todo Remove in 1.11
			if ( oInit.bJQueryUI )
			{
				/* Use the JUI classes object for display. You could clone the oStdClasses object if
				 * you want to have multiple tables with multiple independent classes
				 */
				$.extend( oClasses, DataTable.ext.oJUIClasses, oInit.oClasses );
			
				if ( oInit.sDom === defaults.sDom && defaults.sDom === "lfrtip" )
				{
					/* Set the DOM to use a layout suitable for jQuery UI's theming */
					oSettings.sDom = '<"H"lfr>t<"F"ip>';
				}
			
				if ( ! oSettings.renderer ) {
					oSettings.renderer = 'jqueryui';
				}
				else if ( $.isPlainObject( oSettings.renderer ) && ! oSettings.renderer.header ) {
					oSettings.renderer.header = 'jqueryui';
				}
			}
			else
			{
				$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );
			}
			$this.addClass( oClasses.sTable );
			
			
			if ( oSettings.iInitDisplayStart === undefined )
			{
				/* Display start point, taking into account the save saving */
				oSettings.iInitDisplayStart = oInit.iDisplayStart;
				oSettings._iDisplayStart = oInit.iDisplayStart;
			}
			
			if ( oInit.iDeferLoading !== null )
			{
				oSettings.bDeferLoading = true;
				var tmp = $.isArray( oInit.iDeferLoading );
				oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
				oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
			}
			
			/* Language definitions */
			var oLanguage = oSettings.oLanguage;
			$.extend( true, oLanguage, oInit.oLanguage );
			
			if ( oLanguage.sUrl !== "" )
			{
				/* Get the language definitions from a file - because this Ajax call makes the language
				 * get async to the remainder of this function we use bInitHandedOff to indicate that
				 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
				 */
				$.ajax( {
					dataType: 'json',
					url: oLanguage.sUrl,
					success: function ( json ) {
						_fnLanguageCompat( json );
						_fnCamelToHungarian( defaults.oLanguage, json );
						$.extend( true, oLanguage, json );
						_fnInitialise( oSettings );
					},
					error: function () {
						// Error occurred loading language file, continue on as best we can
						_fnInitialise( oSettings );
					}
				} );
				bInitHandedOff = true;
			}
			
			/*
			 * Stripes
			 */
			if ( oInit.asStripeClasses === null )
			{
				oSettings.asStripeClasses =[
					oClasses.sStripeOdd,
					oClasses.sStripeEven
				];
			}
			
			/* Remove row stripe classes if they are already on the table row */
			var stripeClasses = oSettings.asStripeClasses;
			var rowOne = $this.children('tbody').find('tr').eq(0);
			if ( $.inArray( true, $.map( stripeClasses, function(el, i) {
				return rowOne.hasClass(el);
			} ) ) !== -1 ) {
				$('tbody tr', this).removeClass( stripeClasses.join(' ') );
				oSettings.asDestroyStripes = stripeClasses.slice();
			}
			
			/*
			 * Columns
			 * See if we should load columns automatically or use defined ones
			 */
			var anThs = [];
			var aoColumnsInit;
			var nThead = this.getElementsByTagName('thead');
			if ( nThead.length !== 0 )
			{
				_fnDetectHeader( oSettings.aoHeader, nThead[0] );
				anThs = _fnGetUniqueThs( oSettings );
			}
			
			/* If not given a column array, generate one with nulls */
			if ( oInit.aoColumns === null )
			{
				aoColumnsInit = [];
				for ( i=0, iLen=anThs.length ; i<iLen ; i++ )
				{
					aoColumnsInit.push( null );
				}
			}
			else
			{
				aoColumnsInit = oInit.aoColumns;
			}
			
			/* Add the columns */
			for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )
			{
				_fnAddColumn( oSettings, anThs ? anThs[i] : null );
			}
			
			/* Apply the column definitions */
			_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
				_fnColumnOptions( oSettings, iCol, oDef );
			} );
			
			/* HTML5 attribute detection - build an mData object automatically if the
			 * attributes are found
			 */
			if ( rowOne.length ) {
				var a = function ( cell, name ) {
					return cell.getAttribute( 'data-'+name ) !== null ? name : null;
				};
			
				$( rowOne[0] ).children('th, td').each( function (i, cell) {
					var col = oSettings.aoColumns[i];
			
					if ( col.mData === i ) {
						var sort = a( cell, 'sort' ) || a( cell, 'order' );
						var filter = a( cell, 'filter' ) || a( cell, 'search' );
			
						if ( sort !== null || filter !== null ) {
							col.mData = {
								_:      i+'.display',
								sort:   sort !== null   ? i+'.@data-'+sort   : undefined,
								type:   sort !== null   ? i+'.@data-'+sort   : undefined,
								filter: filter !== null ? i+'.@data-'+filter : undefined
							};
			
							_fnColumnOptions( oSettings, i );
						}
					}
				} );
			}
			
			var features = oSettings.oFeatures;
			
			/* Must be done after everything which can be overridden by the state saving! */
			if ( oInit.bStateSave )
			{
				features.bStateSave = true;
				_fnLoadState( oSettings, oInit );
				_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );
			}
			
			
			/*
			 * Sorting
			 * @todo For modularisation (1.11) this needs to do into a sort start up handler
			 */
			
			// If aaSorting is not defined, then we use the first indicator in asSorting
			// in case that has been altered, so the default sort reflects that option
			if ( oInit.aaSorting === undefined )
			{
				var sorting = oSettings.aaSorting;
				for ( i=0, iLen=sorting.length ; i<iLen ; i++ )
				{
					sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];
				}
			}
			
			/* Do a first pass on the sorting classes (allows any size changes to be taken into
			 * account, and also will apply sorting disabled classes if disabled
			 */
			_fnSortingClasses( oSettings );
			
			if ( features.bSort )
			{
				_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
					if ( oSettings.bSorted ) {
						var aSort = _fnSortFlatten( oSettings );
						var sortedColumns = {};
			
						$.each( aSort, function (i, val) {
							sortedColumns[ val.src ] = val.dir;
						} );
			
						_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );
						_fnSortAria( oSettings );
					}
				} );
			}
			
			_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
				if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {
					_fnSortingClasses( oSettings );
				}
			}, 'sc' );
			
			
			/*
			 * Final init
			 * Cache the header, body and footer as required, creating them if needed
			 */
			
			// Work around for Webkit bug 83867 - store the caption-side before removing from doc
			var captions = $this.children('caption').each( function () {
				this._captionSide = $this.css('caption-side');
			} );
			
			var thead = $this.children('thead');
			if ( thead.length === 0 )
			{
				thead = $('<thead/>').appendTo(this);
			}
			oSettings.nTHead = thead[0];
			
			var tbody = $this.children('tbody');
			if ( tbody.length === 0 )
			{
				tbody = $('<tbody/>').appendTo(this);
			}
			oSettings.nTBody = tbody[0];
			
			var tfoot = $this.children('tfoot');
			if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") )
			{
				// If we are a scrolling table, and no footer has been given, then we need to create
				// a tfoot element for the caption element to be appended to
				tfoot = $('<tfoot/>').appendTo(this);
			}
			
			if ( tfoot.length === 0 || tfoot.children().length === 0 ) {
				$this.addClass( oClasses.sNoFooter );
			}
			else if ( tfoot.length > 0 ) {
				oSettings.nTFoot = tfoot[0];
				_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );
			}
			
			/* Check if there is data passing into the constructor */
			if ( oInit.aaData )
			{
				for ( i=0 ; i<oInit.aaData.length ; i++ )
				{
					_fnAddData( oSettings, oInit.aaData[ i ] );
				}
			}
			else if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' )
			{
				/* Grab the data from the page - only do this when deferred loading or no Ajax
				 * source since there is no point in reading the DOM data if we are then going
				 * to replace it with Ajax data
				 */
				_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );
			}
			
			/* Copy the data index array */
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			
			/* Initialisation complete - table can be drawn */
			oSettings.bInitialised = true;
			
			/* Check if we need to initialise the table (it might not have been handed off to the
			 * language processor)
			 */
			if ( bInitHandedOff === false )
			{
				_fnInitialise( oSettings );
			}
		} );
		_that = null;
		return this;
	};

	
	
	/**
	 * Computed structure of the DataTables API, defined by the options passed to
	 * `DataTable.Api.register()` when building the API.
	 *
	 * The structure is built in order to speed creation and extension of the Api
	 * objects since the extensions are effectively pre-parsed.
	 *
	 * The array is an array of objects with the following structure, where this
	 * base array represents the Api prototype base:
	 *
	 *     [
	 *       {
	 *         name:      'data'                -- string   - Property name
	 *         val:       function () {},       -- function - Api method (or undefined if just an object
	 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	 *       },
	 *       {
	 *         name:     'row'
	 *         val:       {},
	 *         methodExt: [ ... ],
	 *         propExt:   [
	 *           {
	 *             name:      'data'
	 *             val:       function () {},
	 *             methodExt: [ ... ],
	 *             propExt:   [ ... ]
	 *           },
	 *           ...
	 *         ]
	 *       }
	 *     ]
	 *
	 * @type {Array}
	 * @ignore
	 */
	var __apiStruct = [];
	
	
	/**
	 * `Array.prototype` reference.
	 *
	 * @type object
	 * @ignore
	 */
	var __arrayProto = Array.prototype;
	
	
	/**
	 * Abstraction for `context` parameter of the `Api` constructor to allow it to
	 * take several different forms for ease of use.
	 *
	 * Each of the input parameter types will be converted to a DataTables settings
	 * object where possible.
	 *
	 * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
	 *   of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 *   * `DataTables.Api` - API instance
	 * @return {array|null} Matching DataTables settings objects. `null` or
	 *   `undefined` is returned if no matching DataTable is found.
	 * @ignore
	 */
	var _toSettings = function ( mixed )
	{
		var idx, jq;
		var settings = DataTable.settings;
		var tables = $.map( settings, function (el, i) {
			return el.nTable;
		} );
	
		if ( ! mixed ) {
			return [];
		}
		else if ( mixed.nTable && mixed.oApi ) {
			// DataTables settings object
			return [ mixed ];
		}
		else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {
			// Table node
			idx = $.inArray( mixed, tables );
			return idx !== -1 ? [ settings[idx] ] : null;
		}
		else if ( mixed && typeof mixed.settings === 'function' ) {
			return mixed.settings().toArray();
		}
		else if ( typeof mixed === 'string' ) {
			// jQuery selector
			jq = $(mixed);
		}
		else if ( mixed instanceof $ ) {
			// jQuery object (also DataTables instance)
			jq = mixed;
		}
	
		if ( jq ) {
			return jq.map( function(i) {
				idx = $.inArray( this, tables );
				return idx !== -1 ? settings[idx] : null;
			} ).toArray();
		}
	};
	
	
	/**
	 * DataTables API class - used to control and interface with  one or more
	 * DataTables enhanced tables.
	 *
	 * The API class is heavily based on jQuery, presenting a chainable interface
	 * that you can use to interact with tables. Each instance of the API class has
	 * a "context" - i.e. the tables that it will operate on. This could be a single
	 * table, all tables on a page or a sub-set thereof.
	 *
	 * Additionally the API is designed to allow you to easily work with the data in
	 * the tables, retrieving and manipulating it as required. This is done by
	 * presenting the API class as an array like interface. The contents of the
	 * array depend upon the actions requested by each method (for example
	 * `rows().nodes()` will return an array of nodes, while `rows().data()` will
	 * return an array of objects or arrays depending upon your table's
	 * configuration). The API object has a number of array like methods (`push`,
	 * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,
	 * `unique` etc) to assist your working with the data held in a table.
	 *
	 * Most methods (those which return an Api instance) are chainable, which means
	 * the return from a method call also has all of the methods available that the
	 * top level object had. For example, these two calls are equivalent:
	 *
	 *     // Not chained
	 *     api.row.add( {...} );
	 *     api.draw();
	 *
	 *     // Chained
	 *     api.row.add( {...} ).draw();
	 *
	 * @class DataTable.Api
	 * @param {array|object|string|jQuery} context DataTable identifier. This is
	 *   used to define which DataTables enhanced tables this API will operate on.
	 *   Can be one of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 * @param {array} [data] Data to initialise the Api instance with.
	 *
	 * @example
	 *   // Direct initialisation during DataTables construction
	 *   var api = $('#example').DataTable();
	 *
	 * @example
	 *   // Initialisation using a DataTables jQuery object
	 *   var api = $('#example').dataTable().api();
	 *
	 * @example
	 *   // Initialisation as a constructor
	 *   var api = new $.fn.DataTable.Api( 'table.dataTable' );
	 */
	_Api = function ( context, data )
	{
		if ( ! (this instanceof _Api) ) {
			return new _Api( context, data );
		}
	
		var settings = [];
		var ctxSettings = function ( o ) {
			var a = _toSettings( o );
			if ( a ) {
				settings = settings.concat( a );
			}
		};
	
		if ( $.isArray( context ) ) {
			for ( var i=0, ien=context.length ; i<ien ; i++ ) {
				ctxSettings( context[i] );
			}
		}
		else {
			ctxSettings( context );
		}
	
		// Remove duplicates
		this.context = _unique( settings );
	
		// Initial data
		if ( data ) {
			$.merge( this, data );
		}
	
		// selector
		this.selector = {
			rows: null,
			cols: null,
			opts: null
		};
	
		_Api.extend( this, this, __apiStruct );
	};
	
	DataTable.Api = _Api;
	
	// Don't destroy the existing prototype, just extend it. Required for jQuery 2's
	// isPlainObject.
	$.extend( _Api.prototype, {
		any: function ()
		{
			return this.count() !== 0;
		},
	
	
		concat:  __arrayProto.concat,
	
	
		context: [], // array of table settings objects
	
	
		count: function ()
		{
			return this.flatten().length;
		},
	
	
		each: function ( fn )
		{
			for ( var i=0, ien=this.length ; i<ien; i++ ) {
				fn.call( this, this[i], i, this );
			}
	
			return this;
		},
	
	
		eq: function ( idx )
		{
			var ctx = this.context;
	
			return ctx.length > idx ?
				new _Api( ctx[idx], this[idx] ) :
				null;
		},
	
	
		filter: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.filter ) {
				a = __arrayProto.filter.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					if ( fn.call( this, this[i], i, this ) ) {
						a.push( this[i] );
					}
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		flatten: function ()
		{
			var a = [];
			return new _Api( this.context, a.concat.apply( a, this.toArray() ) );
		},
	
	
		join:    __arrayProto.join,
	
	
		indexOf: __arrayProto.indexOf || function (obj, start)
		{
			for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {
				if ( this[i] === obj ) {
					return i;
				}
			}
			return -1;
		},
	
		iterator: function ( flatten, type, fn, alwaysNew ) {
			var
				a = [], ret,
				i, ien, j, jen,
				context = this.context,
				rows, items, item,
				selector = this.selector;
	
			// Argument shifting
			if ( typeof flatten === 'string' ) {
				alwaysNew = fn;
				fn = type;
				type = flatten;
				flatten = false;
			}
	
			for ( i=0, ien=context.length ; i<ien ; i++ ) {
				var apiInst = new _Api( context[i] );
	
				if ( type === 'table' ) {
					ret = fn.call( apiInst, context[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'columns' || type === 'rows' ) {
					// this has same length as context - one entry for each table
					ret = fn.call( apiInst, context[i], this[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {
					// columns and rows share the same structure.
					// 'this' is an array of column indexes for each context
					items = this[i];
	
					if ( type === 'column-rows' ) {
						rows = _selector_row_indexes( context[i], selector.opts );
					}
	
					for ( j=0, jen=items.length ; j<jen ; j++ ) {
						item = items[j];
	
						if ( type === 'cell' ) {
							ret = fn.call( apiInst, context[i], item.row, item.column, i, j );
						}
						else {
							ret = fn.call( apiInst, context[i], item, i, j, rows );
						}
	
						if ( ret !== undefined ) {
							a.push( ret );
						}
					}
				}
			}
	
			if ( a.length || alwaysNew ) {
				var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );
				var apiSelector = api.selector;
				apiSelector.rows = selector.rows;
				apiSelector.cols = selector.cols;
				apiSelector.opts = selector.opts;
				return api;
			}
			return this;
		},
	
	
		lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)
		{
			// Bit cheeky...
			return this.indexOf.apply( this.toArray.reverse(), arguments );
		},
	
	
		length:  0,
	
	
		map: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.map ) {
				a = __arrayProto.map.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					a.push( fn.call( this, this[i], i ) );
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		pluck: function ( prop )
		{
			return this.map( function ( el ) {
				return el[ prop ];
			} );
		},
	
		pop:     __arrayProto.pop,
	
	
		push:    __arrayProto.push,
	
	
		// Does not return an API instance
		reduce: __arrayProto.reduce || function ( fn, init )
		{
			return _fnReduce( this, fn, init, 0, this.length, 1 );
		},
	
	
		reduceRight: __arrayProto.reduceRight || function ( fn, init )
		{
			return _fnReduce( this, fn, init, this.length-1, -1, -1 );
		},
	
	
		reverse: __arrayProto.reverse,
	
	
		// Object with rows, columns and opts
		selector: null,
	
	
		shift:   __arrayProto.shift,
	
	
		sort:    __arrayProto.sort, // ? name - order?
	
	
		splice:  __arrayProto.splice,
	
	
		toArray: function ()
		{
			return __arrayProto.slice.call( this );
		},
	
	
		to$: function ()
		{
			return $( this );
		},
	
	
		toJQuery: function ()
		{
			return $( this );
		},
	
	
		unique: function ()
		{
			return new _Api( this.context, _unique(this) );
		},
	
	
		unshift: __arrayProto.unshift
	} );
	
	
	_Api.extend = function ( scope, obj, ext )
	{
		// Only extend API instances and static properties of the API
		if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {
			return;
		}
	
		var
			i, ien,
			j, jen,
			struct, inner,
			methodScoping = function ( scope, fn, struc ) {
				return function () {
					var ret = fn.apply( scope, arguments );
	
					// Method extension
					_Api.extend( ret, ret, struc.methodExt );
					return ret;
				};
			};
	
		for ( i=0, ien=ext.length ; i<ien ; i++ ) {
			struct = ext[i];
	
			// Value
			obj[ struct.name ] = typeof struct.val === 'function' ?
				methodScoping( scope, struct.val, struct ) :
				$.isPlainObject( struct.val ) ?
					{} :
					struct.val;
	
			obj[ struct.name ].__dt_wrapper = true;
	
			// Property extension
			_Api.extend( scope, obj[ struct.name ], struct.propExt );
		}
	};
	
	
	// @todo - Is there need for an augment function?
	// _Api.augment = function ( inst, name )
	// {
	// 	// Find src object in the structure from the name
	// 	var parts = name.split('.');
	
	// 	_Api.extend( inst, obj );
	// };
	
	
	//     [
	//       {
	//         name:      'data'                -- string   - Property name
	//         val:       function () {},       -- function - Api method (or undefined if just an object
	//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	//       },
	//       {
	//         name:     'row'
	//         val:       {},
	//         methodExt: [ ... ],
	//         propExt:   [
	//           {
	//             name:      'data'
	//             val:       function () {},
	//             methodExt: [ ... ],
	//             propExt:   [ ... ]
	//           },
	//           ...
	//         ]
	//       }
	//     ]
	
	_Api.register = _api_register = function ( name, val )
	{
		if ( $.isArray( name ) ) {
			for ( var j=0, jen=name.length ; j<jen ; j++ ) {
				_Api.register( name[j], val );
			}
			return;
		}
	
		var
			i, ien,
			heir = name.split('.'),
			struct = __apiStruct,
			key, method;
	
		var find = function ( src, name ) {
			for ( var i=0, ien=src.length ; i<ien ; i++ ) {
				if ( src[i].name === name ) {
					return src[i];
				}
			}
			return null;
		};
	
		for ( i=0, ien=heir.length ; i<ien ; i++ ) {
			method = heir[i].indexOf('()') !== -1;
			key = method ?
				heir[i].replace('()', '') :
				heir[i];
	
			var src = find( struct, key );
			if ( ! src ) {
				src = {
					name:      key,
					val:       {},
					methodExt: [],
					propExt:   []
				};
				struct.push( src );
			}
	
			if ( i === ien-1 ) {
				src.val = val;
			}
			else {
				struct = method ?
					src.methodExt :
					src.propExt;
			}
		}
	};
	
	
	_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {
		_Api.register( pluralName, val );
	
		_Api.register( singularName, function () {
			var ret = val.apply( this, arguments );
	
			if ( ret === this ) {
				// Returned item is the API instance that was passed in, return it
				return this;
			}
			else if ( ret instanceof _Api ) {
				// New API instance returned, want the value from the first item
				// in the returned array for the singular result.
				return ret.length ?
					$.isArray( ret[0] ) ?
						new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'
						ret[0] :
					undefined;
			}
	
			// Non-API return - just fire it back
			return ret;
		} );
	};
	
	
	/**
	 * Selector for HTML tables. Apply the given selector to the give array of
	 * DataTables settings objects.
	 *
	 * @param {string|integer} [selector] jQuery selector string or integer
	 * @param  {array} Array of DataTables settings objects to be filtered
	 * @return {array}
	 * @ignore
	 */
	var __table_selector = function ( selector, a )
	{
		// Integer is used to pick out a table by index
		if ( typeof selector === 'number' ) {
			return [ a[ selector ] ];
		}
	
		// Perform a jQuery selector on the table nodes
		var nodes = $.map( a, function (el, i) {
			return el.nTable;
		} );
	
		return $(nodes)
			.filter( selector )
			.map( function (i) {
				// Need to translate back from the table node to the settings
				var idx = $.inArray( this, nodes );
				return a[ idx ];
			} )
			.toArray();
	};
	
	
	
	/**
	 * Context selector for the API's context (i.e. the tables the API instance
	 * refers to.
	 *
	 * @name    DataTable.Api#tables
	 * @param {string|integer} [selector] Selector to pick which tables the iterator
	 *   should operate on. If not given, all tables in the current context are
	 *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to
	 *   select multiple tables or as an integer to select a single table.
	 * @returns {DataTable.Api} Returns a new API instance if a selector is given.
	 */
	_api_register( 'tables()', function ( selector ) {
		// A new instance is created if there was a selector specified
		return selector ?
			new _Api( __table_selector( selector, this.context ) ) :
			this;
	} );
	
	
	_api_register( 'table()', function ( selector ) {
		var tables = this.tables( selector );
		var ctx = tables.context;
	
		// Truncate to the first matched table
		return ctx.length ?
			new _Api( ctx[0] ) :
			tables;
	} );
	
	
	_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTable;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().body()', 'table().body()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTBody;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().header()', 'table().header()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTHead;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTFoot;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().containers()', 'table().container()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTableWrapper;
		}, 1 );
	} );
	
	
	
	/**
	 * Redraw the tables in the current context.
	 */
	_api_register( 'draw()', function ( paging ) {
		return this.iterator( 'table', function ( settings ) {
			if ( paging === 'page' ) {
				_fnDraw( settings );
			}
			else {
				if ( typeof paging === 'string' ) {
					paging = paging === 'full-hold' ?
						false :
						true;
				}
	
				_fnReDraw( settings, paging===false );
			}
		} );
	} );
	
	
	
	/**
	 * Get the current page index.
	 *
	 * @return {integer} Current page index (zero based)
	 *//**
	 * Set the current page.
	 *
	 * Note that if you attempt to show a page which does not exist, DataTables will
	 * not throw an error, but rather reset the paging.
	 *
	 * @param {integer|string} action The paging action to take. This can be one of:
	 *  * `integer` - The page index to jump to
	 *  * `string` - An action to take:
	 *    * `first` - Jump to first page.
	 *    * `next` - Jump to the next page
	 *    * `previous` - Jump to previous page
	 *    * `last` - Jump to the last page.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page()', function ( action ) {
		if ( action === undefined ) {
			return this.page.info().page; // not an expensive call
		}
	
		// else, have an action to take on all tables
		return this.iterator( 'table', function ( settings ) {
			_fnPageChange( settings, action );
		} );
	} );
	
	
	/**
	 * Paging information for the first table in the current context.
	 *
	 * If you require paging information for another table, use the `table()` method
	 * with a suitable selector.
	 *
	 * @return {object} Object with the following properties set:
	 *  * `page` - Current page index (zero based - i.e. the first page is `0`)
	 *  * `pages` - Total number of pages
	 *  * `start` - Display index for the first record shown on the current page
	 *  * `end` - Display index for the last record shown on the current page
	 *  * `length` - Display length (number of records). Note that generally `start
	 *    + length = end`, but this is not always true, for example if there are
	 *    only 2 records to show on the final page, with a length of 10.
	 *  * `recordsTotal` - Full data set length
	 *  * `recordsDisplay` - Data set length once the current filtering criterion
	 *    are applied.
	 */
	_api_register( 'page.info()', function ( action ) {
		if ( this.context.length === 0 ) {
			return undefined;
		}
	
		var
			settings   = this.context[0],
			start      = settings._iDisplayStart,
			len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
			visRecords = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return {
			"page":           all ? 0 : Math.floor( start / len ),
			"pages":          all ? 1 : Math.ceil( visRecords / len ),
			"start":          start,
			"end":            settings.fnDisplayEnd(),
			"length":         len,
			"recordsTotal":   settings.fnRecordsTotal(),
			"recordsDisplay": visRecords,
			"serverSide":     _fnDataSource( settings ) === 'ssp'
		};
	} );
	
	
	/**
	 * Get the current page length.
	 *
	 * @return {integer} Current page length. Note `-1` indicates that all records
	 *   are to be shown.
	 *//**
	 * Set the current page length.
	 *
	 * @param {integer} Page length to set. Use `-1` to show all records.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page.len()', function ( len ) {
		// Note that we can't call this function 'length()' because `length`
		// is a Javascript property of functions which defines how many arguments
		// the function expects.
		if ( len === undefined ) {
			return this.context.length !== 0 ?
				this.context[0]._iDisplayLength :
				undefined;
		}
	
		// else, set the page length
		return this.iterator( 'table', function ( settings ) {
			_fnLengthChange( settings, len );
		} );
	} );
	
	
	
	var __reload = function ( settings, holdPosition, callback ) {
		// Use the draw event to trigger a callback
		if ( callback ) {
			var api = new _Api( settings );
	
			api.one( 'draw', function () {
				callback( api.ajax.json() );
			} );
		}
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			_fnReDraw( settings, holdPosition );
		}
		else {
			_fnProcessingDisplay( settings, true );
	
			// Cancel an existing request
			var xhr = settings.jqXHR;
			if ( xhr && xhr.readyState !== 4 ) {
				xhr.abort();
			}
	
			// Trigger xhr
			_fnBuildAjax( settings, [], function( json ) {
				_fnClearTable( settings );
	
				var data = _fnAjaxDataSrc( settings, json );
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					_fnAddData( settings, data[i] );
				}
	
				_fnReDraw( settings, holdPosition );
				_fnProcessingDisplay( settings, false );
			} );
		}
	};
	
	
	/**
	 * Get the JSON response from the last Ajax request that DataTables made to the
	 * server. Note that this returns the JSON from the first table in the current
	 * context.
	 *
	 * @return {object} JSON received from the server.
	 */
	_api_register( 'ajax.json()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].json;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Get the data submitted in the last Ajax request
	 */
	_api_register( 'ajax.params()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].oAjaxData;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Reload tables from the Ajax data source. Note that this function will
	 * automatically re-draw the table when the remote data has been loaded.
	 *
	 * @param {boolean} [reset=true] Reset (default) or hold the current paging
	 *   position. A full re-sort and re-filter is performed when this method is
	 *   called, which is why the pagination reset is the default action.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.reload()', function ( callback, resetPaging ) {
		return this.iterator( 'table', function (settings) {
			__reload( settings, resetPaging===false, callback );
		} );
	} );
	
	
	/**
	 * Get the current Ajax URL. Note that this returns the URL from the first
	 * table in the current context.
	 *
	 * @return {string} Current Ajax source URL
	 *//**
	 * Set the Ajax URL. Note that this will set the URL for all tables in the
	 * current context.
	 *
	 * @param {string} url URL to set.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url()', function ( url ) {
		var ctx = this.context;
	
		if ( url === undefined ) {
			// get
			if ( ctx.length === 0 ) {
				return undefined;
			}
			ctx = ctx[0];
	
			return ctx.ajax ?
				$.isPlainObject( ctx.ajax ) ?
					ctx.ajax.url :
					ctx.ajax :
				ctx.sAjaxSource;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( $.isPlainObject( settings.ajax ) ) {
				settings.ajax.url = url;
			}
			else {
				settings.ajax = url;
			}
			// No need to consider sAjaxSource here since DataTables gives priority
			// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any
			// value of `sAjaxSource` redundant.
		} );
	} );
	
	
	/**
	 * Load data from the newly set Ajax URL. Note that this method is only
	 * available when `ajax.url()` is used to set a URL. Additionally, this method
	 * has the same effect as calling `ajax.reload()` but is provided for
	 * convenience when setting a new URL. Like `ajax.reload()` it will
	 * automatically redraw the table once the remote data has been loaded.
	 *
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {
		// Same as a reload, but makes sense to present it for easy access after a
		// url change
		return this.iterator( 'table', function ( ctx ) {
			__reload( ctx, resetPaging===false, callback );
		} );
	} );
	
	
	
	
	var _selector_run = function ( type, selector, selectFn, settings, opts )
	{
		var
			out = [], res,
			a, i, ien, j, jen,
			selectorType = typeof selector;
	
		// Can't just check for isArray here, as an API or jQuery instance might be
		// given with their array like look
		if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {
			selector = [ selector ];
		}
	
		for ( i=0, ien=selector.length ; i<ien ; i++ ) {
			a = selector[i] && selector[i].split ?
				selector[i].split(',') :
				[ selector[i] ];
	
			for ( j=0, jen=a.length ; j<jen ; j++ ) {
				res = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );
	
				if ( res && res.length ) {
					out = out.concat( res );
				}
			}
		}
	
		// selector extensions
		var ext = _ext.selector[ type ];
		if ( ext.length ) {
			for ( i=0, ien=ext.length ; i<ien ; i++ ) {
				out = ext[i]( settings, opts, out );
			}
		}
	
		return _unique( out );
	};
	
	
	var _selector_opts = function ( opts )
	{
		if ( ! opts ) {
			opts = {};
		}
	
		// Backwards compatibility for 1.9- which used the terminology filter rather
		// than search
		if ( opts.filter && opts.search === undefined ) {
			opts.search = opts.filter;
		}
	
		return $.extend( {
			search: 'none',
			order: 'current',
			page: 'all'
		}, opts );
	};
	
	
	var _selector_first = function ( inst )
	{
		// Reduce the API instance to the first item found
		for ( var i=0, ien=inst.length ; i<ien ; i++ ) {
			if ( inst[i].length > 0 ) {
				// Assign the first element to the first item in the instance
				// and truncate the instance and context
				inst[0] = inst[i];
				inst[0].length = 1;
				inst.length = 1;
				inst.context = [ inst.context[i] ];
	
				return inst;
			}
		}
	
		// Not found - return an empty instance
		inst.length = 0;
		return inst;
	};
	
	
	var _selector_row_indexes = function ( settings, opts )
	{
		var
			i, ien, tmp, a=[],
			displayFiltered = settings.aiDisplay,
			displayMaster = settings.aiDisplayMaster;
	
		var
			search = opts.search,  // none, applied, removed
			order  = opts.order,   // applied, current, index (original - compatibility with 1.9)
			page   = opts.page;    // all, current
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			// In server-side processing mode, most options are irrelevant since
			// rows not shown don't exist and the index order is the applied order
			// Removed is a special case - for consistency just return an empty
			// array
			return search === 'removed' ?
				[] :
				_range( 0, displayMaster.length );
		}
		else if ( page == 'current' ) {
			// Current page implies that order=current and fitler=applied, since it is
			// fairly senseless otherwise, regardless of what order and search actually
			// are
			for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {
				a.push( displayFiltered[i] );
			}
		}
		else if ( order == 'current' || order == 'applied' ) {
			a = search == 'none' ?
				displayMaster.slice() :                      // no search
				search == 'applied' ?
					displayFiltered.slice() :                // applied search
					$.map( displayMaster, function (el, i) { // removed search
						return $.inArray( el, displayFiltered ) === -1 ? el : null;
					} );
		}
		else if ( order == 'index' || order == 'original' ) {
			for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				if ( search == 'none' ) {
					a.push( i );
				}
				else { // applied | removed
					tmp = $.inArray( i, displayFiltered );
	
					if ((tmp === -1 && search == 'removed') ||
						(tmp >= 0   && search == 'applied') )
					{
						a.push( i );
					}
				}
			}
		}
	
		return a;
	};
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Rows
	 *
	 * {}          - no selector - use all available rows
	 * {integer}   - row aoData index
	 * {node}      - TR node
	 * {string}    - jQuery selector to apply to the TR elements
	 * {array}     - jQuery array of nodes, or simply an array of TR nodes
	 *
	 */
	
	
	var __row_selector = function ( settings, selector, opts )
	{
		var run = function ( sel ) {
			var selInt = _intVal( sel );
			var i, ien;
	
			// Short cut - selector is a number and no options provided (default is
			// all records, so no need to check if the index is in there, since it
			// must be - dev error if the index doesn't exist).
			if ( selInt !== null && ! opts ) {
				return [ selInt ];
			}
	
			var rows = _selector_row_indexes( settings, opts );
	
			if ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {
				// Selector - integer
				return [ selInt ];
			}
			else if ( ! sel ) {
				// Selector - none
				return rows;
			}
	
			// Selector - function
			if ( typeof sel === 'function' ) {
				return $.map( rows, function (idx) {
					var row = settings.aoData[ idx ];
					return sel( idx, row._aData, row.nTr ) ? idx : null;
				} );
			}
	
			// Get nodes in the order from the `rows` array with null values removed
			var nodes = _removeEmpty(
				_pluck_order( settings.aoData, rows, 'nTr' )
			);
	
			// Selector - node
			if ( sel.nodeName ) {
				if ( sel._DT_RowIndex !== undefined ) {
					return [ sel._DT_RowIndex ]; // Property added by DT for fast lookup
				}
				else if ( sel._DT_CellIndex ) {
					return [ sel._DT_CellIndex.row ];
				}
				else {
					var host = $(sel).closest('*[data-dt-row]');
					return host.length ?
						[ host.data('dt-row') ] :
						[];
				}
			}
	
			// ID selector. Want to always be able to select rows by id, regardless
			// of if the tr element has been created or not, so can't rely upon
			// jQuery here - hence a custom implementation. This does not match
			// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,
			// but to select it using a CSS selector engine (like Sizzle or
			// querySelect) it would need to need to be escaped for some characters.
			// DataTables simplifies this for row selectors since you can select
			// only a row. A # indicates an id any anything that follows is the id -
			// unescaped.
			if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {
				// get row index from id
				var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];
				if ( rowObj !== undefined ) {
					return [ rowObj.idx ];
				}
	
				// need to fall through to jQuery in case there is DOM id that
				// matches
			}
	
			// Selector - jQuery selector string, array of nodes or jQuery object/
			// As jQuery's .filter() allows jQuery objects to be passed in filter,
			// it also allows arrays, so this will cope with all three options
			return $(nodes)
				.filter( sel )
				.map( function () {
					return this._DT_RowIndex;
				} )
				.toArray();
		};
	
		return _selector_run( 'row', selector, run, settings, opts );
	};
	
	
	_api_register( 'rows()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __row_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in __row_selector?
		inst.selector.rows = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_register( 'rows().nodes()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return settings.aoData[ row ].nTr || undefined;
		}, 1 );
	} );
	
	_api_register( 'rows().data()', function () {
		return this.iterator( true, 'rows', function ( settings, rows ) {
			return _pluck_order( settings.aoData, rows, '_aData' );
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {
		return this.iterator( 'row', function ( settings, row ) {
			var r = settings.aoData[ row ];
			return type === 'search' ? r._aFilterData : r._aSortData;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {
		return this.iterator( 'row', function ( settings, row ) {
			_fnInvalidate( settings, row, src );
		} );
	} );
	
	_api_registerPlural( 'rows().indexes()', 'row().index()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return row;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {
		var a = [];
		var context = this.context;
	
		// `iterator` will drop undefined values, but in this case we want them
		for ( var i=0, ien=context.length ; i<ien ; i++ ) {
			for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {
				var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );
				a.push( (hash === true ? '#' : '' )+ id );
			}
		}
	
		return new _Api( context, a );
	} );
	
	_api_registerPlural( 'rows().remove()', 'row().remove()', function () {
		var that = this;
	
		this.iterator( 'row', function ( settings, row, thatIdx ) {
			var data = settings.aoData;
			var rowData = data[ row ];
			var i, ien, j, jen;
			var loopRow, loopCells;
	
			data.splice( row, 1 );
	
			// Update the cached indexes
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				loopRow = data[i];
				loopCells = loopRow.anCells;
	
				// Rows
				if ( loopRow.nTr !== null ) {
					loopRow.nTr._DT_RowIndex = i;
				}
	
				// Cells
				if ( loopCells !== null ) {
					for ( j=0, jen=loopCells.length ; j<jen ; j++ ) {
						loopCells[j]._DT_CellIndex.row = i;
					}
				}
			}
	
			// Delete from the display arrays
			_fnDeleteIndex( settings.aiDisplayMaster, row );
			_fnDeleteIndex( settings.aiDisplay, row );
			_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes
	
			// Check for an 'overflow' they case for displaying the table
			_fnLengthOverflow( settings );
	
			// Remove the row's ID reference if there is one
			var id = settings.rowIdFn( rowData._aData );
			if ( id !== undefined ) {
				delete settings.aIds[ id ];
			}
		} );
	
		this.iterator( 'table', function ( settings ) {
			for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				settings.aoData[i].idx = i;
			}
		} );
	
		return this;
	} );
	
	
	_api_register( 'rows.add()', function ( rows ) {
		var newRows = this.iterator( 'table', function ( settings ) {
				var row, i, ien;
				var out = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
						out.push( _fnAddTr( settings, row )[0] );
					}
					else {
						out.push( _fnAddData( settings, row ) );
					}
				}
	
				return out;
			}, 1 );
	
		// Return an Api.rows() extended instance, so rows().nodes() etc can be used
		var modRows = this.rows( -1 );
		modRows.pop();
		$.merge( modRows, newRows );
	
		return modRows;
	} );
	
	
	
	
	
	/**
	 *
	 */
	_api_register( 'row()', function ( selector, opts ) {
		return _selector_first( this.rows( selector, opts ) );
	} );
	
	
	_api_register( 'row().data()', function ( data ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// Get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._aData :
				undefined;
		}
	
		// Set
		ctx[0].aoData[ this[0] ]._aData = data;
	
		// Automatically invalidate
		_fnInvalidate( ctx[0], this[0], 'data' );
	
		return this;
	} );
	
	
	_api_register( 'row().node()', function () {
		var ctx = this.context;
	
		return ctx.length && this.length ?
			ctx[0].aoData[ this[0] ].nTr || null :
			null;
	} );
	
	
	_api_register( 'row.add()', function ( row ) {
		// Allow a jQuery object to be passed in - only a single row is added from
		// it though - the first element in the set
		if ( row instanceof $ && row.length ) {
			row = row[0];
		}
	
		var rows = this.iterator( 'table', function ( settings ) {
			if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
				return _fnAddTr( settings, row )[0];
			}
			return _fnAddData( settings, row );
		} );
	
		// Return an Api.rows() extended instance, with the newly added row selected
		return this.row( rows[0] );
	} );
	
	
	
	var __details_add = function ( ctx, row, data, klass )
	{
		// Convert to array of TR elements
		var rows = [];
		var addRow = function ( r, k ) {
			// Recursion to allow for arrays of jQuery objects
			if ( $.isArray( r ) || r instanceof $ ) {
				for ( var i=0, ien=r.length ; i<ien ; i++ ) {
					addRow( r[i], k );
				}
				return;
			}
	
			// If we get a TR element, then just add it directly - up to the dev
			// to add the correct number of columns etc
			if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {
				rows.push( r );
			}
			else {
				// Otherwise create a row with a wrapper
				var created = $('<tr><td/></tr>').addClass( k );
				$('td', created)
					.addClass( k )
					.html( r )
					[0].colSpan = _fnVisbleColumns( ctx );
	
				rows.push( created[0] );
			}
		};
	
		addRow( data, klass );
	
		if ( row._details ) {
			row._details.remove();
		}
	
		row._details = $(rows);
	
		// If the children were already shown, that state should be retained
		if ( row._detailsShow ) {
			row._details.insertAfter( row.nTr );
		}
	};
	
	
	var __details_remove = function ( api, idx )
	{
		var ctx = api.context;
	
		if ( ctx.length ) {
			var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];
	
			if ( row && row._details ) {
				row._details.remove();
	
				row._detailsShow = undefined;
				row._details = undefined;
			}
		}
	};
	
	
	var __details_display = function ( api, show ) {
		var ctx = api.context;
	
		if ( ctx.length && api.length ) {
			var row = ctx[0].aoData[ api[0] ];
	
			if ( row._details ) {
				row._detailsShow = show;
	
				if ( show ) {
					row._details.insertAfter( row.nTr );
				}
				else {
					row._details.detach();
				}
	
				__details_events( ctx[0] );
			}
		}
	};
	
	
	var __details_events = function ( settings )
	{
		var api = new _Api( settings );
		var namespace = '.dt.DT_details';
		var drawEvent = 'draw'+namespace;
		var colvisEvent = 'column-visibility'+namespace;
		var destroyEvent = 'destroy'+namespace;
		var data = settings.aoData;
	
		api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );
	
		if ( _pluck( data, '_details' ).length > 0 ) {
			// On each draw, insert the required elements into the document
			api.on( drawEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				api.rows( {page:'current'} ).eq(0).each( function (idx) {
					// Internal data grab
					var row = data[ idx ];
	
					if ( row._detailsShow ) {
						row._details.insertAfter( row.nTr );
					}
				} );
			} );
	
			// Column visibility change - update the colspan
			api.on( colvisEvent, function ( e, ctx, idx, vis ) {
				if ( settings !== ctx ) {
					return;
				}
	
				// Update the colspan for the details rows (note, only if it already has
				// a colspan)
				var row, visible = _fnVisbleColumns( ctx );
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					row = data[i];
	
					if ( row._details ) {
						row._details.children('td[colspan]').attr('colspan', visible );
					}
				}
			} );
	
			// Table destroyed - nuke any child rows
			api.on( destroyEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					if ( data[i]._details ) {
						__details_remove( api, i );
					}
				}
			} );
		}
	};
	
	// Strings for the method names to help minification
	var _emp = '';
	var _child_obj = _emp+'row().child';
	var _child_mth = _child_obj+'()';
	
	// data can be:
	//  tr
	//  string
	//  jQuery or array of any of the above
	_api_register( _child_mth, function ( data, klass ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._details :
				undefined;
		}
		else if ( data === true ) {
			// show
			this.child.show();
		}
		else if ( data === false ) {
			// remove
			__details_remove( this );
		}
		else if ( ctx.length && this.length ) {
			// set
			__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );
		}
	
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.show()',
		_child_mth+'.show()' // only when `child()` was called with parameters (without
	], function ( show ) {   // it returns an object and this method is not executed)
		__details_display( this, true );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.hide()',
		_child_mth+'.hide()' // only when `child()` was called with parameters (without
	], function () {         // it returns an object and this method is not executed)
		__details_display( this, false );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.remove()',
		_child_mth+'.remove()' // only when `child()` was called with parameters (without
	], function () {           // it returns an object and this method is not executed)
		__details_remove( this );
		return this;
	} );
	
	
	_api_register( _child_obj+'.isShown()', function () {
		var ctx = this.context;
	
		if ( ctx.length && this.length ) {
			// _detailsShown as false or undefined will fall through to return false
			return ctx[0].aoData[ this[0] ]._detailsShow || false;
		}
		return false;
	} );
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Columns
	 *
	 * {integer}           - column index (>=0 count from left, <0 count from right)
	 * "{integer}:visIdx"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)
	 * "{integer}:visible" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)
	 * "{string}:name"     - column name
	 * "{string}"          - jQuery selector on column header nodes
	 *
	 */
	
	// can be an array of these items, comma separated list, or an array of comma
	// separated lists
	
	var __re_column_selector = /^(.+):(name|visIdx|visible)$/;
	
	
	// r1 and r2 are redundant - but it means that the parameters match for the
	// iterator callback in columns().data()
	var __columnData = function ( settings, column, r1, r2, rows ) {
		var a = [];
		for ( var row=0, ien=rows.length ; row<ien ; row++ ) {
			a.push( _fnGetCellData( settings, rows[row], column ) );
		}
		return a;
	};
	
	
	var __column_selector = function ( settings, selector, opts )
	{
		var
			columns = settings.aoColumns,
			names = _pluck( columns, 'sName' ),
			nodes = _pluck( columns, 'nTh' );
	
		var run = function ( s ) {
			var selInt = _intVal( s );
	
			// Selector - all
			if ( s === '' ) {
				return _range( columns.length );
			}
			
			// Selector - index
			if ( selInt !== null ) {
				return [ selInt >= 0 ?
					selInt : // Count from left
					columns.length + selInt // Count from right (+ because its a negative value)
				];
			}
			
			// Selector = function
			if ( typeof s === 'function' ) {
				var rows = _selector_row_indexes( settings, opts );
	
				return $.map( columns, function (col, idx) {
					return s(
							idx,
							__columnData( settings, idx, 0, 0, rows ),
							nodes[ idx ]
						) ? idx : null;
				} );
			}
	
			// jQuery or string selector
			var match = typeof s === 'string' ?
				s.match( __re_column_selector ) :
				'';
	
			if ( match ) {
				switch( match[2] ) {
					case 'visIdx':
					case 'visible':
						var idx = parseInt( match[1], 10 );
						// Visible index given, convert to column index
						if ( idx < 0 ) {
							// Counting from the right
							var visColumns = $.map( columns, function (col,i) {
								return col.bVisible ? i : null;
							} );
							return [ visColumns[ visColumns.length + idx ] ];
						}
						// Counting from the left
						return [ _fnVisibleToColumnIndex( settings, idx ) ];
	
					case 'name':
						// match by name. `names` is column index complete and in order
						return $.map( names, function (name, i) {
							return name === match[1] ? i : null;
						} );
	
					default:
						return [];
				}
			}
	
			// Cell in the table body
			if ( s.nodeName && s._DT_CellIndex ) {
				return [ s._DT_CellIndex.column ];
			}
	
			// jQuery selector on the TH elements for the columns
			var jqResult = $( nodes )
				.filter( s )
				.map( function () {
					return $.inArray( this, nodes ); // `nodes` is column index complete and in order
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise a node which might have a `dt-column` data attribute, or be
			// a child or such an element
			var host = $(s).closest('*[data-dt-column]');
			return host.length ?
				[ host.data('dt-column') ] :
				[];
		};
	
		return _selector_run( 'column', selector, run, settings, opts );
	};
	
	
	var __setColumnVis = function ( settings, column, vis, recalc ) {
		var
			cols = settings.aoColumns,
			col  = cols[ column ],
			data = settings.aoData,
			row, cells, i, ien, tr;
	
		// Get
		if ( vis === undefined ) {
			return col.bVisible;
		}
	
		// Set
		// No change
		if ( col.bVisible === vis ) {
			return;
		}
	
		if ( vis ) {
			// Insert column
			// Need to decide if we should use appendChild or insertBefore
			var insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );
	
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				tr = data[i].nTr;
				cells = data[i].anCells;
	
				if ( tr ) {
					// insertBefore can act like appendChild if 2nd arg is null
					tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );
				}
			}
		}
		else {
			// Remove column
			$( _pluck( settings.aoData, 'anCells', column ) ).detach();
		}
	
		// Common actions
		col.bVisible = vis;
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		if ( recalc === undefined || recalc ) {
			// Automatically adjust column sizing
			_fnAdjustColumnSizing( settings );
		}
	
		_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, recalc] );
	
		_fnSaveState( settings );
	};
	
	
	_api_register( 'columns()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __column_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in _row_selector?
		inst.selector.cols = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTh;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTf;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().data()', 'column().data()', function () {
		return this.iterator( 'column-rows', __columnData, 1 );
	} );
	
	_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].mData;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows,
				type === 'search' ? '_aFilterData' : '_aSortData', column
			);
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows, 'anCells', column ) ;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {
		return this.iterator( 'column', function ( settings, column ) {
			if ( vis === undefined ) {
				return settings.aoColumns[ column ].bVisible;
			} // else
			__setColumnVis( settings, column, vis, calc );
		} );
	} );
	
	_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {
		return this.iterator( 'column', function ( settings, column ) {
			return type === 'visible' ?
				_fnColumnIndexToVisible( settings, column ) :
				column;
		}, 1 );
	} );
	
	_api_register( 'columns.adjust()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnAdjustColumnSizing( settings );
		}, 1 );
	} );
	
	_api_register( 'column.index()', function ( type, idx ) {
		if ( this.context.length !== 0 ) {
			var ctx = this.context[0];
	
			if ( type === 'fromVisible' || type === 'toData' ) {
				return _fnVisibleToColumnIndex( ctx, idx );
			}
			else if ( type === 'fromData' || type === 'toVisible' ) {
				return _fnColumnIndexToVisible( ctx, idx );
			}
		}
	} );
	
	_api_register( 'column()', function ( selector, opts ) {
		return _selector_first( this.columns( selector, opts ) );
	} );
	
	
	
	
	var __cell_selector = function ( settings, selector, opts )
	{
		var data = settings.aoData;
		var rows = _selector_row_indexes( settings, opts );
		var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );
		var allCells = $( [].concat.apply([], cells) );
		var row;
		var columns = settings.aoColumns.length;
		var a, i, ien, j, o, host;
	
		var run = function ( s ) {
			var fnSelector = typeof s === 'function';
	
			if ( s === null || s === undefined || fnSelector ) {
				// All cells and function selectors
				a = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					for ( j=0 ; j<columns ; j++ ) {
						o = {
							row: row,
							column: j
						};
	
						if ( fnSelector ) {
							// Selector - function
							host = data[ row ];
	
							if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {
								a.push( o );
							}
						}
						else {
							// Selector - all
							a.push( o );
						}
					}
				}
	
				return a;
			}
			
			// Selector - index
			if ( $.isPlainObject( s ) ) {
				return [s];
			}
	
			// Selector - jQuery filtered cells
			var jqResult = allCells
				.filter( s )
				.map( function (i, el) {
					return { // use a new object, in case someone changes the values
						row:    el._DT_CellIndex.row,
						column: el._DT_CellIndex.column
	 				};
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise the selector is a node, and there is one last option - the
			// element might be a child of an element which has dt-row and dt-column
			// data attributes
			host = $(s).closest('*[data-dt-row]');
			return host.length ?
				[ {
					row: host.data('dt-row'),
					column: host.data('dt-column')
				} ] :
				[];
		};
	
		return _selector_run( 'cell', selector, run, settings, opts );
	};
	
	
	
	
	_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {
		// Argument shifting
		if ( $.isPlainObject( rowSelector ) ) {
			// Indexes
			if ( rowSelector.row === undefined ) {
				// Selector options in first parameter
				opts = rowSelector;
				rowSelector = null;
			}
			else {
				// Cell index objects in first parameter
				opts = columnSelector;
				columnSelector = null;
			}
		}
		if ( $.isPlainObject( columnSelector ) ) {
			opts = columnSelector;
			columnSelector = null;
		}
	
		// Cell selector
		if ( columnSelector === null || columnSelector === undefined ) {
			return this.iterator( 'table', function ( settings ) {
				return __cell_selector( settings, rowSelector, _selector_opts( opts ) );
			} );
		}
	
		// Row + column selector
		var columns = this.columns( columnSelector, opts );
		var rows = this.rows( rowSelector, opts );
		var a, i, ien, j, jen;
	
		var cells = this.iterator( 'table', function ( settings, idx ) {
			a = [];
	
			for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {
				for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {
					a.push( {
						row:    rows[idx][i],
						column: columns[idx][j]
					} );
				}
			}
	
			return a;
		}, 1 );
	
		$.extend( cells.selector, {
			cols: columnSelector,
			rows: rowSelector,
			opts: opts
		} );
	
		return cells;
	} );
	
	
	_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			var data = settings.aoData[ row ];
	
			return data && data.anCells ?
				data.anCells[ column ] :
				undefined;
		}, 1 );
	} );
	
	
	_api_register( 'cells().data()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {
		type = type === 'search' ? '_aFilterData' : '_aSortData';
	
		return this.iterator( 'cell', function ( settings, row, column ) {
			return settings.aoData[ row ][ type ][ column ];
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column, type );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return {
				row: row,
				column: column,
				columnVisible: _fnColumnIndexToVisible( settings, column )
			};
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			_fnInvalidate( settings, row, src, column );
		} );
	} );
	
	
	
	_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {
		return _selector_first( this.cells( rowSelector, columnSelector, opts ) );
	} );
	
	
	_api_register( 'cell().data()', function ( data ) {
		var ctx = this.context;
		var cell = this[0];
	
		if ( data === undefined ) {
			// Get
			return ctx.length && cell.length ?
				_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :
				undefined;
		}
	
		// Set
		_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );
		_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );
	
		return this;
	} );
	
	
	
	/**
	 * Get current ordering (sorting) that has been applied to the table.
	 *
	 * @returns {array} 2D array containing the sorting information for the first
	 *   table in the current context. Each element in the parent array represents
	 *   a column being sorted upon (i.e. multi-sorting with two columns would have
	 *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
	 *   the column index that the sorting condition applies to, the second is the
	 *   direction of the sort (`desc` or `asc`) and, optionally, the third is the
	 *   index of the sorting order from the `column.sorting` initialisation array.
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {integer} order Column index to sort upon.
	 * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 1D array of sorting information to be applied.
	 * @param {array} [...] Optional additional sorting conditions
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 2D array of sorting information to be applied.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order()', function ( order, dir ) {
		var ctx = this.context;
	
		if ( order === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].aaSorting :
				undefined;
		}
	
		// set
		if ( typeof order === 'number' ) {
			// Simple column / direction passed in
			order = [ [ order, dir ] ];
		}
		else if ( ! $.isArray( order[0] ) ) {
			// Arguments passed in (list of 1D arrays)
			order = Array.prototype.slice.call( arguments );
		}
		// otherwise a 2D array was passed in
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSorting = order.slice();
		} );
	} );
	
	
	/**
	 * Attach a sort listener to an element for a given column
	 *
	 * @param {node|jQuery|string} node Identifier for the element(s) to attach the
	 *   listener to. This can take the form of a single DOM node, a jQuery
	 *   collection of nodes or a jQuery selector which will identify the node(s).
	 * @param {integer} column the column that a click on this node will sort on
	 * @param {function} [callback] callback function when sort is run
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order.listener()', function ( node, column, callback ) {
		return this.iterator( 'table', function ( settings ) {
			_fnSortAttachListener( settings, node, column, callback );
		} );
	} );
	
	
	_api_register( 'order.fixed()', function ( set ) {
		if ( ! set ) {
			var ctx = this.context;
			var fixed = ctx.length ?
				ctx[0].aaSortingFixed :
				undefined;
	
			return $.isArray( fixed ) ?
				{ pre: fixed } :
				fixed;
		}
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSortingFixed = $.extend( true, {}, set );
		} );
	} );
	
	
	// Order by the selected column(s)
	_api_register( [
		'columns().order()',
		'column().order()'
	], function ( dir ) {
		var that = this;
	
		return this.iterator( 'table', function ( settings, i ) {
			var sort = [];
	
			$.each( that[i], function (j, col) {
				sort.push( [ col, dir ] );
			} );
	
			settings.aaSorting = sort;
		} );
	} );
	
	
	
	_api_register( 'search()', function ( input, regex, smart, caseInsen ) {
		var ctx = this.context;
	
		if ( input === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].oPreviousSearch.sSearch :
				undefined;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( ! settings.oFeatures.bFilter ) {
				return;
			}
	
			_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {
				"sSearch": input+"",
				"bRegex":  regex === null ? false : regex,
				"bSmart":  smart === null ? true  : smart,
				"bCaseInsensitive": caseInsen === null ? true : caseInsen
			} ), 1 );
		} );
	} );
	
	
	_api_registerPlural(
		'columns().search()',
		'column().search()',
		function ( input, regex, smart, caseInsen ) {
			return this.iterator( 'column', function ( settings, column ) {
				var preSearch = settings.aoPreSearchCols;
	
				if ( input === undefined ) {
					// get
					return preSearch[ column ].sSearch;
				}
	
				// set
				if ( ! settings.oFeatures.bFilter ) {
					return;
				}
	
				$.extend( preSearch[ column ], {
					"sSearch": input+"",
					"bRegex":  regex === null ? false : regex,
					"bSmart":  smart === null ? true  : smart,
					"bCaseInsensitive": caseInsen === null ? true : caseInsen
				} );
	
				_fnFilterComplete( settings, settings.oPreviousSearch, 1 );
			} );
		}
	);
	
	/*
	 * State API methods
	 */
	
	_api_register( 'state()', function () {
		return this.context.length ?
			this.context[0].oSavedState :
			null;
	} );
	
	
	_api_register( 'state.clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			// Save an empty object
			settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );
		} );
	} );
	
	
	_api_register( 'state.loaded()', function () {
		return this.context.length ?
			this.context[0].oLoadedState :
			null;
	} );
	
	
	_api_register( 'state.save()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnSaveState( settings );
		} );
	} );
	
	
	
	/**
	 * Provide a common method for plug-ins to check the version of DataTables being
	 * used, in order to ensure compatibility.
	 *
	 *  @param {string} version Version string to check for, in the format "X.Y.Z".
	 *    Note that the formats "X" and "X.Y" are also acceptable.
	 *  @returns {boolean} true if this version of DataTables is greater or equal to
	 *    the required version, or false if this version of DataTales is not
	 *    suitable
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );
	 */
	DataTable.versionCheck = DataTable.fnVersionCheck = function( version )
	{
		var aThis = DataTable.version.split('.');
		var aThat = version.split('.');
		var iThis, iThat;
	
		for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {
			iThis = parseInt( aThis[i], 10 ) || 0;
			iThat = parseInt( aThat[i], 10 ) || 0;
	
			// Parts are the same, keep comparing
			if (iThis === iThat) {
				continue;
			}
	
			// Parts are different, return immediately
			return iThis > iThat;
		}
	
		return true;
	};
	
	
	/**
	 * Check if a `<table>` node is a DataTable table already or not.
	 *
	 *  @param {node|jquery|string} table Table node, jQuery object or jQuery
	 *      selector for the table to test. Note that if more than more than one
	 *      table is passed on, only the first will be checked
	 *  @returns {boolean} true the table given is a DataTable, or false otherwise
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {
	 *      $('#example').dataTable();
	 *    }
	 */
	DataTable.isDataTable = DataTable.fnIsDataTable = function ( table )
	{
		var t = $(table).get(0);
		var is = false;
	
		$.each( DataTable.settings, function (i, o) {
			var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;
			var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;
	
			if ( o.nTable === t || head === t || foot === t ) {
				is = true;
			}
		} );
	
		return is;
	};
	
	
	/**
	 * Get all DataTable tables that have been initialised - optionally you can
	 * select to get only currently visible tables.
	 *
	 *  @param {boolean} [visible=false] Flag to indicate if you want all (default)
	 *    or visible tables only.
	 *  @returns {array} Array of `table` nodes (not DataTable instances) which are
	 *    DataTables
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    $.each( $.fn.dataTable.tables(true), function () {
	 *      $(table).DataTable().columns.adjust();
	 *    } );
	 */
	DataTable.tables = DataTable.fnTables = function ( visible )
	{
		var api = false;
	
		if ( $.isPlainObject( visible ) ) {
			api = visible.api;
			visible = visible.visible;
		}
	
		var a = $.map( DataTable.settings, function (o) {
			if ( !visible || (visible && $(o.nTable).is(':visible')) ) {
				return o.nTable;
			}
		} );
	
		return api ?
			new _Api( a ) :
			a;
	};
	
	
	/**
	 * DataTables utility methods
	 * 
	 * This namespace provides helper methods that DataTables uses internally to
	 * create a DataTable, but which are not exclusively used only for DataTables.
	 * These methods can be used by extension authors to save the duplication of
	 * code.
	 *
	 *  @namespace
	 */
	DataTable.util = {
		/**
		 * Throttle the calls to a function. Arguments and context are maintained
		 * for the throttled function.
		 *
		 * @param {function} fn Function to be called
		 * @param {integer} freq Call frequency in mS
		 * @return {function} Wrapped function
		 */
		throttle: _fnThrottle,
	
	
		/**
		 * Escape a string such that it can be used in a regular expression
		 *
		 *  @param {string} sVal string to escape
		 *  @returns {string} escaped string
		 */
		escapeRegex: _fnEscapeRegex
	};
	
	
	/**
	 * Convert from camel case parameters to Hungarian notation. This is made public
	 * for the extensions to provide the same ability as DataTables core to accept
	 * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase
	 * parameters.
	 *
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 */
	DataTable.camelToHungarian = _fnCamelToHungarian;
	
	
	
	/**
	 *
	 */
	_api_register( '$()', function ( selector, opts ) {
		var
			rows   = this.rows( opts ).nodes(), // Get all rows
			jqRows = $(rows);
	
		return $( [].concat(
			jqRows.filter( selector ).toArray(),
			jqRows.find( selector ).toArray()
		) );
	} );
	
	
	// jQuery functions to operate on the tables
	$.each( [ 'on', 'one', 'off' ], function (i, key) {
		_api_register( key+'()', function ( /* event, handler */ ) {
			var args = Array.prototype.slice.call(arguments);
	
			// Add the `dt` namespace automatically if it isn't already present
			if ( ! args[0].match(/\.dt\b/) ) {
				args[0] += '.dt';
			}
	
			var inst = $( this.tables().nodes() );
			inst[key].apply( inst, args );
			return this;
		} );
	} );
	
	
	_api_register( 'clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnClearTable( settings );
		} );
	} );
	
	
	_api_register( 'settings()', function () {
		return new _Api( this.context, this.context );
	} );
	
	
	_api_register( 'init()', function () {
		var ctx = this.context;
		return ctx.length ? ctx[0].oInit : null;
	} );
	
	
	_api_register( 'data()', function () {
		return this.iterator( 'table', function ( settings ) {
			return _pluck( settings.aoData, '_aData' );
		} ).flatten();
	} );
	
	
	_api_register( 'destroy()', function ( remove ) {
		remove = remove || false;
	
		return this.iterator( 'table', function ( settings ) {
			var orig      = settings.nTableWrapper.parentNode;
			var classes   = settings.oClasses;
			var table     = settings.nTable;
			var tbody     = settings.nTBody;
			var thead     = settings.nTHead;
			var tfoot     = settings.nTFoot;
			var jqTable   = $(table);
			var jqTbody   = $(tbody);
			var jqWrapper = $(settings.nTableWrapper);
			var rows      = $.map( settings.aoData, function (r) { return r.nTr; } );
			var i, ien;
	
			// Flag to note that the table is currently being destroyed - no action
			// should be taken
			settings.bDestroying = true;
	
			// Fire off the destroy callbacks for plug-ins etc
			_fnCallbackFire( settings, "aoDestroyCallback", "destroy", [settings] );
	
			// If not being removed from the document, make all columns visible
			if ( ! remove ) {
				new _Api( settings ).columns().visible( true );
			}
	
			// Blitz all `DT` namespaced events (these are internal events, the
			// lowercase, `dt` events are user subscribed and they are responsible
			// for removing them
			jqWrapper.unbind('.DT').find(':not(tbody *)').unbind('.DT');
			$(window).unbind('.DT-'+settings.sInstance);
	
			// When scrolling we had to break the table up - restore it
			if ( table != thead.parentNode ) {
				jqTable.children('thead').detach();
				jqTable.append( thead );
			}
	
			if ( tfoot && table != tfoot.parentNode ) {
				jqTable.children('tfoot').detach();
				jqTable.append( tfoot );
			}
	
			settings.aaSorting = [];
			settings.aaSortingFixed = [];
			_fnSortingClasses( settings );
	
			$( rows ).removeClass( settings.asStripeClasses.join(' ') );
	
			$('th, td', thead).removeClass( classes.sSortable+' '+
				classes.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone
			);
	
			if ( settings.bJUI ) {
				$('th span.'+classes.sSortIcon+ ', td span.'+classes.sSortIcon, thead).detach();
				$('th, td', thead).each( function () {
					var wrapper = $('div.'+classes.sSortJUIWrapper, this);
					$(this).append( wrapper.contents() );
					wrapper.detach();
				} );
			}
	
			// Add the TR elements back into the table in their original order
			jqTbody.children().detach();
			jqTbody.append( rows );
	
			// Remove the DataTables generated nodes, events and classes
			var removedMethod = remove ? 'remove' : 'detach';
			jqTable[ removedMethod ]();
			jqWrapper[ removedMethod ]();
	
			// If we need to reattach the table to the document
			if ( ! remove && orig ) {
				// insertBefore acts like appendChild if !arg[1]
				orig.insertBefore( table, settings.nTableReinsertBefore );
	
				// Restore the width of the original table - was read from the style property,
				// so we can restore directly to that
				jqTable
					.css( 'width', settings.sDestroyWidth )
					.removeClass( classes.sTable );
	
				// If the were originally stripe classes - then we add them back here.
				// Note this is not fool proof (for example if not all rows had stripe
				// classes - but it's a good effort without getting carried away
				ien = settings.asDestroyStripes.length;
	
				if ( ien ) {
					jqTbody.children().each( function (i) {
						$(this).addClass( settings.asDestroyStripes[i % ien] );
					} );
				}
			}
	
			/* Remove the settings object from the settings array */
			var idx = $.inArray( settings, DataTable.settings );
			if ( idx !== -1 ) {
				DataTable.settings.splice( idx, 1 );
			}
		} );
	} );
	
	
	// Add the `every()` method for rows, columns and cells in a compact form
	$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {
		_api_register( type+'s().every()', function ( fn ) {
			var opts = this.selector.opts;
			var api = this;
	
			return this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {
				// Rows and columns:
				//  arg1 - index
				//  arg2 - table counter
				//  arg3 - loop counter
				//  arg4 - undefined
				// Cells:
				//  arg1 - row index
				//  arg2 - column index
				//  arg3 - table counter
				//  arg4 - loop counter
				fn.call(
					api[ type ](
						arg1,
						type==='cell' ? arg2 : opts,
						type==='cell' ? opts : undefined
					),
					arg1, arg2, arg3, arg4
				);
			} );
		} );
	} );
	
	
	// i18n method for extensions to be able to use the language object from the
	// DataTable
	_api_register( 'i18n()', function ( token, def, plural ) {
		var ctx = this.context[0];
		var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );
	
		if ( resolved === undefined ) {
			resolved = def;
		}
	
		if ( plural !== undefined && $.isPlainObject( resolved ) ) {
			resolved = resolved[ plural ] !== undefined ?
				resolved[ plural ] :
				resolved._;
		}
	
		return resolved.replace( '%d', plural ); // nb: plural might be undefined,
	} );
	/**
	 * Version string for plug-ins to check compatibility. Allowed format is
	 * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used
	 * only for non-release builds. See http://semver.org/ for more information.
	 *  @member
	 *  @type string
	 *  @default Version number
	 */
	DataTable.version = "1.10.11";

	/**
	 * Private data store, containing all of the settings objects that are
	 * created for the tables on a given page.
	 *
	 * Note that the `DataTable.settings` object is aliased to
	 * `jQuery.fn.dataTableExt` through which it may be accessed and
	 * manipulated, or `jQuery.fn.dataTable.settings`.
	 *  @member
	 *  @type array
	 *  @default []
	 *  @private
	 */
	DataTable.settings = [];

	/**
	 * Object models container, for the various models that DataTables has
	 * available to it. These models define the objects that are used to hold
	 * the active state and configuration of the table.
	 *  @namespace
	 */
	DataTable.models = {};
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * search information for the global filter and individual column filters.
	 *  @namespace
	 */
	DataTable.models.oSearch = {
		/**
		 * Flag to indicate if the filtering should be case insensitive or not
		 *  @type boolean
		 *  @default true
		 */
		"bCaseInsensitive": true,
	
		/**
		 * Applied search term
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sSearch": "",
	
		/**
		 * Flag to indicate if the search term should be interpreted as a
		 * regular expression (true) or not (false) and therefore and special
		 * regex characters escaped.
		 *  @type boolean
		 *  @default false
		 */
		"bRegex": false,
	
		/**
		 * Flag to indicate if DataTables is to use its smart filtering or not.
		 *  @type boolean
		 *  @default true
		 */
		"bSmart": true
	};
	
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * each individual row. This is the object format used for the settings
	 * aoData array.
	 *  @namespace
	 */
	DataTable.models.oRow = {
		/**
		 * TR element for the row
		 *  @type node
		 *  @default null
		 */
		"nTr": null,
	
		/**
		 * Array of TD elements for each row. This is null until the row has been
		 * created.
		 *  @type array nodes
		 *  @default []
		 */
		"anCells": null,
	
		/**
		 * Data object from the original data source for the row. This is either
		 * an array if using the traditional form of DataTables, or an object if
		 * using mData options. The exact type will depend on the passed in
		 * data from the data source, or will be an array if using DOM a data
		 * source.
		 *  @type array|object
		 *  @default []
		 */
		"_aData": [],
	
		/**
		 * Sorting data cache - this array is ostensibly the same length as the
		 * number of columns (although each index is generated only as it is
		 * needed), and holds the data that is used for sorting each column in the
		 * row. We do this cache generation at the start of the sort in order that
		 * the formatting of the sort data need be done only once for each cell
		 * per sort. This array should not be read from or written to by anything
		 * other than the master sorting methods.
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aSortData": null,
	
		/**
		 * Per cell filtering data cache. As per the sort data cache, used to
		 * increase the performance of the filtering in DataTables
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aFilterData": null,
	
		/**
		 * Filtering data cache. This is the same as the cell filtering cache, but
		 * in this case a string rather than an array. This is easily computed with
		 * a join on `_aFilterData`, but is provided as a cache so the join isn't
		 * needed on every search (memory traded for performance)
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_sFilterRow": null,
	
		/**
		 * Cache of the class name that DataTables has applied to the row, so we
		 * can quickly look at this variable rather than needing to do a DOM check
		 * on className for the nTr property.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *  @private
		 */
		"_sRowStripe": "",
	
		/**
		 * Denote if the original data source was from the DOM, or the data source
		 * object. This is used for invalidating data, so DataTables can
		 * automatically read data from the original source, unless uninstructed
		 * otherwise.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"src": null,
	
		/**
		 * Index in the aoData array. This saves an indexOf lookup when we have the
		 * object, but want to know the index
		 *  @type integer
		 *  @default -1
		 *  @private
		 */
		"idx": -1
	};
	
	
	/**
	 * Template object for the column information object in DataTables. This object
	 * is held in the settings aoColumns array and contains all the information that
	 * DataTables needs about each individual column.
	 *
	 * Note that this object is related to {@link DataTable.defaults.column}
	 * but this one is the internal data store for DataTables's cache of columns.
	 * It should NOT be manipulated outside of DataTables. Any configuration should
	 * be done through the initialisation options.
	 *  @namespace
	 */
	DataTable.models.oColumn = {
		/**
		 * Column index. This could be worked out on-the-fly with $.inArray, but it
		 * is faster to just hold it as a variable
		 *  @type integer
		 *  @default null
		 */
		"idx": null,
	
		/**
		 * A list of the columns that sorting should occur on when this column
		 * is sorted. That this property is an array allows multi-column sorting
		 * to be defined for a column (for example first name / last name columns
		 * would benefit from this). The values are integers pointing to the
		 * columns to be sorted on (typically it will be a single integer pointing
		 * at itself, but that doesn't need to be the case).
		 *  @type array
		 */
		"aDataSort": null,
	
		/**
		 * Define the sorting directions that are applied to the column, in sequence
		 * as the column is repeatedly sorted upon - i.e. the first value is used
		 * as the sorting direction when the column if first sorted (clicked on).
		 * Sort it again (click again) and it will move on to the next index.
		 * Repeat until loop.
		 *  @type array
		 */
		"asSorting": null,
	
		/**
		 * Flag to indicate if the column is searchable, and thus should be included
		 * in the filtering or not.
		 *  @type boolean
		 */
		"bSearchable": null,
	
		/**
		 * Flag to indicate if the column is sortable or not.
		 *  @type boolean
		 */
		"bSortable": null,
	
		/**
		 * Flag to indicate if the column is currently visible in the table or not
		 *  @type boolean
		 */
		"bVisible": null,
	
		/**
		 * Store for manual type assignment using the `column.type` option. This
		 * is held in store so we can manipulate the column's `sType` property.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"_sManualType": null,
	
		/**
		 * Flag to indicate if HTML5 data attributes should be used as the data
		 * source for filtering or sorting. True is either are.
		 *  @type boolean
		 *  @default false
		 *  @private
		 */
		"_bAttrSrc": false,
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} nTd The TD node that has been created
		 *  @param {*} sData The Data for the cell
		 *  @param {array|object} oData The data for the whole row
		 *  @param {int} iRow The row index for the aoData data store
		 *  @default null
		 */
		"fnCreatedCell": null,
	
		/**
		 * Function to get data from a cell in a column. You should <b>never</b>
		 * access data directly through _aData internally in DataTables - always use
		 * the method attached to this property. It allows mData to function as
		 * required. This function is automatically assigned by the column
		 * initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {string} sSpecific The specific data type you want to get -
		 *    'display', 'type' 'filter' 'sort'
		 *  @returns {*} The data for the cell from the given row's data
		 *  @default null
		 */
		"fnGetData": null,
	
		/**
		 * Function to set data for a cell in the column. You should <b>never</b>
		 * set the data directly to _aData internally in DataTables - always use
		 * this method. It allows mData to function as required. This function
		 * is automatically assigned by the column initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {*} sValue Value to set
		 *  @default null
		 */
		"fnSetData": null,
	
		/**
		 * Property to read the value for the cells in the column from the data
		 * source array / object. If null, then the default content is used, if a
		 * function is given then the return from the function is used.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mData": null,
	
		/**
		 * Partner property to mData which is used (only when defined) to get
		 * the data - i.e. it is basically the same as mData, but without the
		 * 'set' option, and also the data fed to it is the result from mData.
		 * This is the rendering method to match the data method of mData.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mRender": null,
	
		/**
		 * Unique header TH/TD element for this column - this is what the sorting
		 * listener is attached to (if sorting is enabled.)
		 *  @type node
		 *  @default null
		 */
		"nTh": null,
	
		/**
		 * Unique footer TH/TD element for this column (if there is one). Not used
		 * in DataTables as such, but can be used for plug-ins to reference the
		 * footer for each column.
		 *  @type node
		 *  @default null
		 */
		"nTf": null,
	
		/**
		 * The class to apply to all TD elements in the table's TBODY for the column
		 *  @type string
		 *  @default null
		 */
		"sClass": null,
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 *  @type string
		 */
		"sContentPadding": null,
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because mData
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 */
		"sDefaultContent": null,
	
		/**
		 * Name for the column, allowing reference to the column by name as well as
		 * by index (needs a lookup to work by name).
		 *  @type string
		 */
		"sName": null,
	
		/**
		 * Custom sorting data type - defines which of the available plug-ins in
		 * afnSortData the custom sorting will use - if any is defined.
		 *  @type string
		 *  @default std
		 */
		"sSortDataType": 'std',
	
		/**
		 * Class to be applied to the header element when sorting on this column
		 *  @type string
		 *  @default null
		 */
		"sSortingClass": null,
	
		/**
		 * Class to be applied to the header element when sorting on this column -
		 * when jQuery UI theming is used.
		 *  @type string
		 *  @default null
		 */
		"sSortingClassJUI": null,
	
		/**
		 * Title of the column - what is seen in the TH element (nTh).
		 *  @type string
		 */
		"sTitle": null,
	
		/**
		 * Column sorting and filtering type
		 *  @type string
		 *  @default null
		 */
		"sType": null,
	
		/**
		 * Width of the column
		 *  @type string
		 *  @default null
		 */
		"sWidth": null,
	
		/**
		 * Width of the column when it was first "encountered"
		 *  @type string
		 *  @default null
		 */
		"sWidthOrig": null
	};
	
	
	/*
	 * Developer note: The properties of the object below are given in Hungarian
	 * notation, that was used as the interface for DataTables prior to v1.10, however
	 * from v1.10 onwards the primary interface is camel case. In order to avoid
	 * breaking backwards compatibility utterly with this change, the Hungarian
	 * version is still, internally the primary interface, but is is not documented
	 * - hence the @name tags in each doc comment. This allows a Javascript function
	 * to create a map from Hungarian notation to camel case (going the other direction
	 * would require each property to be listed, which would at around 3K to the size
	 * of DataTables, while this method is about a 0.5K hit.
	 *
	 * Ultimately this does pave the way for Hungarian notation to be dropped
	 * completely, but that is a massive amount of work and will break current
	 * installs (therefore is on-hold until v2).
	 */
	
	/**
	 * Initialisation options that can be given to DataTables at initialisation
	 * time.
	 *  @namespace
	 */
	DataTable.defaults = {
		/**
		 * An array of data to use for the table, passed in at initialisation which
		 * will be used in preference to any data which is already in the DOM. This is
		 * particularly useful for constructing tables purely in Javascript, for
		 * example with a custom Ajax call.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.data
		 *
		 *  @example
		 *    // Using a 2D array data source
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine" },
		 *          { "title": "Browser" },
		 *          { "title": "Platform" },
		 *          { "title": "Version" },
		 *          { "title": "Grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using an array of objects as a data source (`data`)
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine",   "data": "engine" },
		 *          { "title": "Browser",  "data": "browser" },
		 *          { "title": "Platform", "data": "platform" },
		 *          { "title": "Version",  "data": "version" },
		 *          { "title": "Grade",    "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"aaData": null,
	
	
		/**
		 * If ordering is enabled, then DataTables will perform a first pass sort on
		 * initialisation. You can define which column(s) the sort is performed
		 * upon, and the sorting direction, with this variable. The `sorting` array
		 * should contain an array for each column to be sorted initially containing
		 * the column's index and a direction string ('asc' or 'desc').
		 *  @type array
		 *  @default [[0,'asc']]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.order
		 *
		 *  @example
		 *    // Sort by 3rd column first, and then 4th column
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
		 *
		 *    // No initial sorting
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": []
		 *      } );
		 *    } );
		 */
		"aaSorting": [[0,'asc']],
	
	
		/**
		 * This parameter is basically identical to the `sorting` parameter, but
		 * cannot be overridden by user interaction with the table. What this means
		 * is that you could have a column (visible or hidden) which the sorting
		 * will always be forced on first - any sorting after that (from the user)
		 * will then be performed as required. This can be useful for grouping rows
		 * together.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.orderFixed
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderFixed": [[0,'asc']]
		 *      } );
		 *    } )
		 */
		"aaSortingFixed": [],
	
	
		/**
		 * DataTables can be instructed to load data to display in the table from a
		 * Ajax source. This option defines how that Ajax call is made and where to.
		 *
		 * The `ajax` property has three different modes of operation, depending on
		 * how it is defined. These are:
		 *
		 * * `string` - Set the URL from where the data should be loaded from.
		 * * `object` - Define properties for `jQuery.ajax`.
		 * * `function` - Custom data get function
		 *
		 * `string`
		 * --------
		 *
		 * As a string, the `ajax` property simply defines the URL from which
		 * DataTables will load data.
		 *
		 * `object`
		 * --------
		 *
		 * As an object, the parameters in the object are passed to
		 * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control
		 * of the Ajax request. DataTables has a number of default parameters which
		 * you can override using this option. Please refer to the jQuery
		 * documentation for a full description of the options available, although
		 * the following parameters provide additional options in DataTables or
		 * require special consideration:
		 *
		 * * `data` - As with jQuery, `data` can be provided as an object, but it
		 *   can also be used as a function to manipulate the data DataTables sends
		 *   to the server. The function takes a single parameter, an object of
		 *   parameters with the values that DataTables has readied for sending. An
		 *   object may be returned which will be merged into the DataTables
		 *   defaults, or you can add the items to the object that was passed in and
		 *   not return anything from the function. This supersedes `fnServerParams`
		 *   from DataTables 1.9-.
		 *
		 * * `dataSrc` - By default DataTables will look for the property `data` (or
		 *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
		 *   from an Ajax source or for server-side processing - this parameter
		 *   allows that property to be changed. You can use Javascript dotted
		 *   object notation to get a data source for multiple levels of nesting, or
		 *   it my be used as a function. As a function it takes a single parameter,
		 *   the JSON returned from the server, which can be manipulated as
		 *   required, with the returned value being that used by DataTables as the
		 *   data source for the table. This supersedes `sAjaxDataProp` from
		 *   DataTables 1.9-.
		 *
		 * * `success` - Should not be overridden it is used internally in
		 *   DataTables. To manipulate / transform the data returned by the server
		 *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
		 *
		 * `function`
		 * ----------
		 *
		 * As a function, making the Ajax call is left up to yourself allowing
		 * complete control of the Ajax request. Indeed, if desired, a method other
		 * than Ajax could be used to obtain the required data, such as Web storage
		 * or an AIR database.
		 *
		 * The function is given four parameters and no return is required. The
		 * parameters are:
		 *
		 * 1. _object_ - Data to send to the server
		 * 2. _function_ - Callback function that must be executed when the required
		 *    data has been obtained. That data should be passed into the callback
		 *    as the only parameter
		 * 3. _object_ - DataTables settings object for the table
		 *
		 * Note that this supersedes `fnServerData` from DataTables 1.9-.
		 *
		 *  @type string|object|function
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.ajax
		 *  @since 1.10.0
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax.
		 *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).
		 *   $('#example').dataTable( {
		 *     "ajax": "data.json"
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to change
		 *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": "tableData"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to read data
		 *   // from a plain array rather than an array in an object
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": ""
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Manipulate the data returned from the server - add a link to data
		 *   // (note this can, should, be done using `render` for the column - this
		 *   // is just a simple example of how the data can be manipulated).
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": function ( json ) {
		 *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {
		 *           json[i][0] = '<a href="/message/'+json[i][0]+'>View message</a>';
		 *         }
		 *         return json;
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Add data to the request
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "data": function ( d ) {
		 *         return {
		 *           "extra_search": $('#extra').val()
		 *         };
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Send request as POST
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "type": "POST"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get the data from localStorage (could interface with a form for
		 *   // adding, editing and removing rows).
		 *   $('#example').dataTable( {
		 *     "ajax": function (data, callback, settings) {
		 *       callback(
		 *         JSON.parse( localStorage.getItem('dataTablesData') )
		 *       );
		 *     }
		 *   } );
		 */
		"ajax": null,
	
	
		/**
		 * This parameter allows you to readily specify the entries in the length drop
		 * down menu that DataTables shows when pagination is enabled. It can be
		 * either a 1D array of options which will be used for both the displayed
		 * option and the value, or a 2D array which will use the array in the first
		 * position as the value, and the array in the second position as the
		 * displayed options (useful for language strings such as 'All').
		 *
		 * Note that the `pageLength` property will be automatically set to the
		 * first value given in this array, unless `pageLength` is also provided.
		 *  @type array
		 *  @default [ 10, 25, 50, 100 ]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.lengthMenu
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
		 */
		"aLengthMenu": [ 10, 25, 50, 100 ],
	
	
		/**
		 * The `columns` option in the initialisation parameter allows you to define
		 * details about the way individual columns behave. For a full list of
		 * column options that can be set, please see
		 * {@link DataTable.defaults.column}. Note that if you use `columns` to
		 * define your columns, you must have an entry in the array for every single
		 * column that you have in your table (these can be null if you don't which
		 * to specify any options).
		 *  @member
		 *
		 *  @name DataTable.defaults.column
		 */
		"aoColumns": null,
	
		/**
		 * Very similar to `columns`, `columnDefs` allows you to target a specific
		 * column, multiple columns, or all columns, using the `targets` property of
		 * each object in the array. This allows great flexibility when creating
		 * tables, as the `columnDefs` arrays can be of any length, targeting the
		 * columns you specifically want. `columnDefs` may use any of the column
		 * options available: {@link DataTable.defaults.column}, but it _must_
		 * have `targets` defined in each object in the array. Values in the `targets`
		 * array may be:
		 *   <ul>
		 *     <li>a string - class name will be matched on the TH for the column</li>
		 *     <li>0 or a positive integer - column index counting from the left</li>
		 *     <li>a negative integer - column index counting from the right</li>
		 *     <li>the string "_all" - all columns (i.e. assign a default)</li>
		 *   </ul>
		 *  @member
		 *
		 *  @name DataTable.defaults.columnDefs
		 */
		"aoColumnDefs": null,
	
	
		/**
		 * Basically the same as `search`, this parameter defines the individual column
		 * filtering state at initialisation time. The array must be of the same size
		 * as the number of columns, and each element be an object with the parameters
		 * `search` and `escapeRegex` (the latter is optional). 'null' is also
		 * accepted and the default will be used.
		 *  @type array
		 *  @default []
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.searchCols
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchCols": [
		 *          null,
		 *          { "search": "My filter" },
		 *          null,
		 *          { "search": "^[0-9]", "escapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
		 */
		"aoSearchCols": [],
	
	
		/**
		 * An array of CSS classes that should be applied to displayed rows. This
		 * array may be of any length, and DataTables will apply each class
		 * sequentially, looping when required.
		 *  @type array
		 *  @default null <i>Will take the values determined by the `oClasses.stripe*`
		 *    options</i>
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.stripeClasses
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
		 */
		"asStripeClasses": null,
	
	
		/**
		 * Enable or disable automatic column width calculation. This can be disabled
		 * as an optimisation (it takes some time to calculate the widths) if the
		 * tables widths are passed in using `columns`.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.autoWidth
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "autoWidth": false
		 *      } );
		 *    } );
		 */
		"bAutoWidth": true,
	
	
		/**
		 * Deferred rendering can provide DataTables with a huge speed boost when you
		 * are using an Ajax or JS data source for the table. This option, when set to
		 * true, will cause DataTables to defer the creation of the table elements for
		 * each row until they are needed for a draw - saving a significant amount of
		 * time.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.deferRender
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajax": "sources/arrays.txt",
		 *        "deferRender": true
		 *      } );
		 *    } );
		 */
		"bDeferRender": false,
	
	
		/**
		 * Replace a DataTable which matches the given selector and replace it with
		 * one which has the properties of the new initialisation object passed. If no
		 * table matches the selector, then the new DataTable will be constructed as
		 * per normal.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.destroy
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "srollY": "200px",
		 *        "paginate": false
		 *      } );
		 *
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "filter": false,
		 *        "destroy": true
		 *      } );
		 *    } );
		 */
		"bDestroy": false,
	
	
		/**
		 * Enable or disable filtering of data. Filtering in DataTables is "smart" in
		 * that it allows the end user to input multiple words (space separated) and
		 * will match a row containing those words, even if not in the order that was
		 * specified (this allow matching across multiple columns). Note that if you
		 * wish to use filtering in DataTables this must remain 'true' - to remove the
		 * default filtering input box and retain filtering abilities, please use
		 * {@link DataTable.defaults.dom}.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.searching
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "searching": false
		 *      } );
		 *    } );
		 */
		"bFilter": true,
	
	
		/**
		 * Enable or disable the table information display. This shows information
		 * about the data that is currently visible on the page, including information
		 * about filtered data if that action is being performed.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.info
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "info": false
		 *      } );
		 *    } );
		 */
		"bInfo": true,
	
	
		/**
		 * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some
		 * slightly different and additional mark-up from what DataTables has
		 * traditionally used).
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.jQueryUI
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "jQueryUI": true
		 *      } );
		 *    } );
		 */
		"bJQueryUI": false,
	
	
		/**
		 * Allows the end user to select the size of a formatted page from a select
		 * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.lengthChange
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "lengthChange": false
		 *      } );
		 *    } );
		 */
		"bLengthChange": true,
	
	
		/**
		 * Enable or disable pagination.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.paging
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "paging": false
		 *      } );
		 *    } );
		 */
		"bPaginate": true,
	
	
		/**
		 * Enable or disable the display of a 'processing' indicator when the table is
		 * being processed (e.g. a sort). This is particularly useful for tables with
		 * large amounts of data where it can take a noticeable amount of time to sort
		 * the entries.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.processing
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "processing": true
		 *      } );
		 *    } );
		 */
		"bProcessing": false,
	
	
		/**
		 * Retrieve the DataTables object for the given selector. Note that if the
		 * table has already been initialised, this parameter will cause DataTables
		 * to simply return the object that has already been set up - it will not take
		 * account of any changes you might have made to the initialisation object
		 * passed to DataTables (setting this parameter to true is an acknowledgement
		 * that you understand this). `destroy` can be used to reinitialise a table if
		 * you need.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.retrieve
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
		 *
		 *    function initTable ()
		 *    {
		 *      return $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false,
		 *        "retrieve": true
		 *      } );
		 *    }
		 *
		 *    function tableActions ()
		 *    {
		 *      var table = initTable();
		 *      // perform API operations with oTable
		 *    }
		 */
		"bRetrieve": false,
	
	
		/**
		 * When vertical (y) scrolling is enabled, DataTables will force the height of
		 * the table's viewport to the given height at all times (useful for layout).
		 * However, this can look odd when filtering data down to a small data set,
		 * and the footer is left "floating" further down. This parameter (when
		 * enabled) will cause DataTables to collapse the table's viewport down when
		 * the result set will fit within the given Y height.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollCollapse
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"bScrollCollapse": false,
	
	
		/**
		 * Configure DataTables to use server-side processing. Note that the
		 * `ajax` parameter must also be given in order to give DataTables a
		 * source to obtain the required data for each draw.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverSide
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "xhr.php"
		 *      } );
		 *    } );
		 */
		"bServerSide": false,
	
	
		/**
		 * Enable or disable sorting of columns. Sorting of individual columns can be
		 * disabled by the `sortable` option for each column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.ordering
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "ordering": false
		 *      } );
		 *    } );
		 */
		"bSort": true,
	
	
		/**
		 * Enable or display DataTables' ability to sort multiple columns at the
		 * same time (activated by shift-click by the user).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderMulti
		 *
		 *  @example
		 *    // Disable multiple column sorting ability
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderMulti": false
		 *      } );
		 *    } );
		 */
		"bSortMulti": true,
	
	
		/**
		 * Allows control over whether DataTables should use the top (true) unique
		 * cell that is found for a single column, or the bottom (false - default).
		 * This is useful when using complex headers.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderCellsTop
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderCellsTop": true
		 *      } );
		 *    } );
		 */
		"bSortCellsTop": false,
	
	
		/**
		 * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
		 * `sorting\_3` to the columns which are currently being sorted on. This is
		 * presented as a feature switch as it can increase processing time (while
		 * classes are removed and added) so for large data sets you might want to
		 * turn this off.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.orderClasses
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderClasses": false
		 *      } );
		 *    } );
		 */
		"bSortClasses": true,
	
	
		/**
		 * Enable or disable state saving. When enabled HTML5 `localStorage` will be
		 * used to save table display information such as pagination information,
		 * display length, filtering and sorting. As such when the end user reloads
		 * the page the display display will match what thy had previously set up.
		 *
		 * Due to the use of `localStorage` the default state saving is not supported
		 * in IE6 or 7. If state saving is required in those browsers, use
		 * `stateSaveCallback` to provide a storage solution such as cookies.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.stateSave
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "stateSave": true
		 *      } );
		 *    } );
		 */
		"bStateSave": false,
	
	
		/**
		 * This function is called when a TR element is created (and all TD child
		 * elements have been inserted), or registered if using a DOM source, allowing
		 * manipulation of the TR element (adding classes etc).
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} dataIndex The index of this row in the internal aoData array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.createdRow
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "createdRow": function( row, data, dataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" )
		 *          {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnCreatedRow": null,
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify any aspect you want about the created DOM.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.drawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "drawCallback": function( settings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnDrawCallback": null,
	
	
		/**
		 * Identical to fnHeaderCallback() but for the table footer this function
		 * allows you to modify the table footer on every 'draw' event.
		 *  @type function
		 *  @param {node} foot "TR" element for the footer
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.footerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "footerCallback": function( tfoot, data, start, end, display ) {
		 *          tfoot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+start;
		 *        }
		 *      } );
		 *    } )
		 */
		"fnFooterCallback": null,
	
	
		/**
		 * When rendering large numbers in the information element for the table
		 * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
		 * to have a comma separator for the 'thousands' units (e.g. 1 million is
		 * rendered as "1,000,000") to help readability for the end user. This
		 * function will override the default method DataTables uses.
		 *  @type function
		 *  @member
		 *  @param {int} toFormat number to be formatted
		 *  @returns {string} formatted string for DataTables to show the number
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.formatNumber
		 *
		 *  @example
		 *    // Format a number using a single quote for the separator (note that
		 *    // this can also be done with the language.thousands option)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "formatNumber": function ( toFormat ) {
		 *          return toFormat.toString().replace(
		 *            /\B(?=(\d{3})+(?!\d))/g, "'"
		 *          );
		 *        };
		 *      } );
		 *    } );
		 */
		"fnFormatNumber": function ( toFormat ) {
			return toFormat.toString().replace(
				/\B(?=(\d{3})+(?!\d))/g,
				this.oLanguage.sThousands
			);
		},
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify the header row. This can be used to calculate and
		 * display useful information about the table.
		 *  @type function
		 *  @param {node} head "TR" element for the header
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.headerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fheaderCallback": function( head, data, start, end, display ) {
		 *          head.getElementsByTagName('th')[0].innerHTML = "Displaying "+(end-start)+" records";
		 *        }
		 *      } );
		 *    } )
		 */
		"fnHeaderCallback": null,
	
	
		/**
		 * The information element can be used to convey information about the current
		 * state of the table. Although the internationalisation options presented by
		 * DataTables are quite capable of dealing with most customisations, there may
		 * be times where you wish to customise the string further. This callback
		 * allows you to do exactly that.
		 *  @type function
		 *  @param {object} oSettings DataTables settings object
		 *  @param {int} start Starting position in data for the draw
		 *  @param {int} end End position in data for the draw
		 *  @param {int} max Total number of rows in the table (regardless of
		 *    filtering)
		 *  @param {int} total Total number of rows in the data set, after filtering
		 *  @param {string} pre The string that DataTables has formatted using it's
		 *    own rules
		 *  @returns {string} The string to be displayed in the information element.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.infoCallback
		 *
		 *  @example
		 *    $('#example').dataTable( {
		 *      "infoCallback": function( settings, start, end, max, total, pre ) {
		 *        return start +" to "+ end;
		 *      }
		 *    } );
		 */
		"fnInfoCallback": null,
	
	
		/**
		 * Called when the table has been initialised. Normally DataTables will
		 * initialise sequentially and there will be no need for this function,
		 * however, this does not hold true when using external language information
		 * since that is obtained using an async XHR call.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} json The JSON object request from the server - only
		 *    present if client-side Ajax sourced data is used
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.initComplete
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "initComplete": function(settings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
		 */
		"fnInitComplete": null,
	
	
		/**
		 * Called at the very start of each table draw and can be used to cancel the
		 * draw by returning false, any other return (including undefined) results in
		 * the full draw occurring).
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @returns {boolean} False will cancel the draw, anything else (including no
		 *    return) will allow it to complete.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.preDrawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "preDrawCallback": function( settings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnPreDrawCallback": null,
	
	
		/**
		 * This function allows you to 'post process' each row after it have been
		 * generated for each table draw, but before it is rendered on screen. This
		 * function might be used for setting the row class name etc.
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} displayIndex The display index for the current table draw
		 *  @param {int} displayIndexFull The index of the data in the full list of
		 *    rows (after filtering)
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.rowCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "rowCallback": function( row, data, displayIndex, displayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" ) {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnRowCallback": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * This parameter allows you to override the default function which obtains
		 * the data from the server so something more suitable for your application.
		 * For example you could use POST data, or pull information from a Gears or
		 * AIR database.
		 *  @type function
		 *  @member
		 *  @param {string} source HTTP source to obtain the data from (`ajax`)
		 *  @param {array} data A key/value pair object containing the data to send
		 *    to the server
		 *  @param {function} callback to be called on completion of the data get
		 *    process that will draw the data on the page.
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverData
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerData": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 *  It is often useful to send extra data to the server when making an Ajax
		 * request - for example custom filtering information, and this callback
		 * function makes it trivial to send extra information to the server. The
		 * passed in parameter is the data set that has been constructed by
		 * DataTables, and you can add to this or modify it as you require.
		 *  @type function
		 *  @param {array} data Data array (array of objects which are name/value
		 *    pairs) that has been constructed by DataTables and will be sent to the
		 *    server. In the case of Ajax sourced data with server-side processing
		 *    this will be an empty array, for server-side processing there will be a
		 *    significant number of parameters!
		 *  @returns {undefined} Ensure that you modify the data array passed in,
		 *    as this is passed by reference.
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverParams
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerParams": null,
	
	
		/**
		 * Load the table state. With this function you can define from where, and how, the
		 * state of a table is loaded. By default DataTables will load from `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @return {object} The DataTables state object to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadCallback": function (settings) {
		 *          var o;
		 *
		 *          // Send an Ajax request to the server to get the data. Note that
		 *          // this is a synchronous request.
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "async": false,
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              o = json;
		 *            }
		 *          } );
		 *
		 *          return o;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadCallback": function ( settings ) {
			try {
				return JSON.parse(
					(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
						'DataTables_'+settings.sInstance+'_'+location.pathname
					)
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the saved state prior to loading that state.
		 * This callback is called when the table is loading state from the stored data, but
		 * prior to the settings object being modified by the saved state. Note that for
		 * plug-in authors, you should use the `stateLoadParams` event to load parameters for
		 * a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that is to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never loaded
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Disallow state loading by returning false
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadParams": null,
	
	
		/**
		 * Callback that is called when the state has been loaded from the state saving method
		 * and the DataTables settings object has been modified as a result of the loaded state.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that was loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoaded
		 *
		 *  @example
		 *    // Show an alert with the filtering value that was saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoaded": function (settings, data) {
		 *          alert( 'Saved filter was: '+data.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoaded": null,
	
	
		/**
		 * Save the table state. This function allows you to define where and how the state
		 * information for the table is stored By default DataTables will use `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveCallback": function (settings, data) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": data,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveCallback": function ( settings, data ) {
			try {
				(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
					'DataTables_'+settings.sInstance+'_'+location.pathname,
					JSON.stringify( data )
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the state to be saved. Called when the table
		 * has changed state a new state save is required. This method allows modification of
		 * the state saving object prior to actually doing the save, including addition or
		 * other state properties or modification. Note that for plug-in authors, you should
		 * use the `stateSaveParams` event to save parameters for a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveParams": null,
	
	
		/**
		 * Duration for which the saved state information is considered valid. After this period
		 * has elapsed the state will be returned to the default.
		 * Value is given in seconds.
		 *  @type int
		 *  @default 7200 <i>(2 hours)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.stateDuration
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
		 */
		"iStateDuration": 7200,
	
	
		/**
		 * When enabled DataTables will not make a request to the server for the first
		 * page draw - rather it will use the data already on the page (no sorting etc
		 * will be applied to it), thus saving on an XHR at load time. `deferLoading`
		 * is used to indicate that deferred loading is required, but it is also used
		 * to tell DataTables how many records there are in the full table (allowing
		 * the information element and pagination to be displayed correctly). In the case
		 * where a filtering is applied to the table on initial load, this can be
		 * indicated by giving the parameter as an array, where the first element is
		 * the number of records available after filtering and the second element is the
		 * number of records without filtering (allowing the table information element
		 * to be shown correctly).
		 *  @type int | array
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.deferLoading
		 *
		 *  @example
		 *    // 57 records available in the table, no filtering applied
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": 57
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // 57 records after filtering, 100 without filtering (an initial filter applied)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": [ 57, 100 ],
		 *        "search": {
		 *          "search": "my_filter"
		 *        }
		 *      } );
		 *    } );
		 */
		"iDeferLoading": null,
	
	
		/**
		 * Number of rows to display on a single page when using pagination. If
		 * feature enabled (`lengthChange`) then the end user will be able to override
		 * this to a custom setting using a pop-up menu.
		 *  @type int
		 *  @default 10
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pageLength
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pageLength": 50
		 *      } );
		 *    } )
		 */
		"iDisplayLength": 10,
	
	
		/**
		 * Define the starting point for data display when using DataTables with
		 * pagination. Note that this parameter is the number of records, rather than
		 * the page number, so if you have 10 records per page and want to start on
		 * the third page, it should be "20".
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.displayStart
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayStart": 20
		 *      } );
		 *    } )
		 */
		"iDisplayStart": 0,
	
	
		/**
		 * By default DataTables allows keyboard navigation of the table (sorting, paging,
		 * and filtering) by adding a `tabindex` attribute to the required elements. This
		 * allows you to tab through the controls and press the enter key to activate them.
		 * The tabindex is default 0, meaning that the tab follows the flow of the document.
		 * You can overrule this using this parameter if you wish. Use a value of -1 to
		 * disable built-in keyboard navigation.
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.tabIndex
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "tabIndex": 1
		 *      } );
		 *    } );
		 */
		"iTabIndex": 0,
	
	
		/**
		 * Classes that DataTables assigns to the various components and features
		 * that it adds to the HTML table. This allows classes to be configured
		 * during initialisation in addition to through the static
		 * {@link DataTable.ext.oStdClasses} object).
		 *  @namespace
		 *  @name DataTable.defaults.classes
		 */
		"oClasses": {},
	
	
		/**
		 * All strings that DataTables uses in the user interface that it creates
		 * are defined in this object, allowing you to modified them individually or
		 * completely replace them all as required.
		 *  @namespace
		 *  @name DataTable.defaults.language
		 */
		"oLanguage": {
			/**
			 * Strings that are used for WAI-ARIA labels and controls only (these are not
			 * actually visible on the page, but will be read by screenreaders, and thus
			 * must be internationalised as well).
			 *  @namespace
			 *  @name DataTable.defaults.language.aria
			 */
			"oAria": {
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted ascending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortAscending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortAscending": ": activate to sort column ascending",
	
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted descending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortDescending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortDescending": ": activate to sort column descending"
			},
	
			/**
			 * Pagination string used by DataTables for the built-in pagination
			 * control types.
			 *  @namespace
			 *  @name DataTable.defaults.language.paginate
			 */
			"oPaginate": {
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the first page.
				 *  @type string
				 *  @default First
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.first
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "first": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sFirst": "First",
	
	
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the last page.
				 *  @type string
				 *  @default Last
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.last
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "last": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sLast": "Last",
	
	
				/**
				 * Text to use for the 'next' pagination button (to take the user to the
				 * next page).
				 *  @type string
				 *  @default Next
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.next
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "next": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sNext": "Next",
	
	
				/**
				 * Text to use for the 'previous' pagination button (to take the user to
				 * the previous page).
				 *  @type string
				 *  @default Previous
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.previous
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "previous": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sPrevious": "Previous"
			},
	
			/**
			 * This string is shown in preference to `zeroRecords` when the table is
			 * empty of data (regardless of filtering). Note that this is an optional
			 * parameter - if it is not given, the value of `zeroRecords` will be used
			 * instead (either the default or given value).
			 *  @type string
			 *  @default No data available in table
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.emptyTable
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "emptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sEmptyTable": "No data available in table",
	
	
			/**
			 * This string gives information to the end user about the information
			 * that is current on display on the page. The following tokens can be
			 * used in the string and will be dynamically replaced as the table
			 * display updates. This tokens can be placed anywhere in the string, or
			 * removed as needed by the language requires:
			 *
			 * * `\_START\_` - Display index of the first record on the current page
			 * * `\_END\_` - Display index of the last record on the current page
			 * * `\_TOTAL\_` - Number of records in the table after filtering
			 * * `\_MAX\_` - Number of records in the table without filtering
			 * * `\_PAGE\_` - Current page number
			 * * `\_PAGES\_` - Total number of pages of data in the table
			 *
			 *  @type string
			 *  @default Showing _START_ to _END_ of _TOTAL_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.info
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "info": "Showing page _PAGE_ of _PAGES_"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
	
	
			/**
			 * Display information string for when the table is empty. Typically the
			 * format of this string should match `info`.
			 *  @type string
			 *  @default Showing 0 to 0 of 0 entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoEmpty
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoEmpty": "Showing 0 to 0 of 0 entries",
	
	
			/**
			 * When a user filters the information in a table, this string is appended
			 * to the information (`info`) to give an idea of how strong the filtering
			 * is. The variable _MAX_ is dynamically updated.
			 *  @type string
			 *  @default (filtered from _MAX_ total entries)
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoFiltered
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoFiltered": "(filtered from _MAX_ total entries)",
	
	
			/**
			 * If can be useful to append extra information to the info string at times,
			 * and this variable does exactly that. This information will be appended to
			 * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
			 * being used) at all times.
			 *  @type string
			 *  @default <i>Empty string</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoPostFix
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoPostFix": "",
	
	
			/**
			 * This decimal place operator is a little different from the other
			 * language options since DataTables doesn't output floating point
			 * numbers, so it won't ever use this for display of a number. Rather,
			 * what this parameter does is modify the sort methods of the table so
			 * that numbers which are in a format which has a character other than
			 * a period (`.`) as a decimal place will be sorted numerically.
			 *
			 * Note that numbers with different decimal places cannot be shown in
			 * the same table and still be sortable, the table must be consistent.
			 * However, multiple different tables on the page can use different
			 * decimal place characters.
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.decimal
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "decimal": ","
			 *          "thousands": "."
			 *        }
			 *      } );
			 *    } );
			 */
			"sDecimal": "",
	
	
			/**
			 * DataTables has a build in number formatter (`formatNumber`) which is
			 * used to format large numbers that are used in the table information.
			 * By default a comma is used, but this can be trivially changed to any
			 * character you wish with this parameter.
			 *  @type string
			 *  @default ,
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.thousands
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "thousands": "'"
			 *        }
			 *      } );
			 *    } );
			 */
			"sThousands": ",",
	
	
			/**
			 * Detail the action that will be taken when the drop down menu for the
			 * pagination length option is changed. The '_MENU_' variable is replaced
			 * with a default select list of 10, 25, 50 and 100, and can be replaced
			 * with a custom select box if required.
			 *  @type string
			 *  @default Show _MENU_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.lengthMenu
			 *
			 *  @example
			 *    // Language change only
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Language and options change
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
			 */
			"sLengthMenu": "Show _MENU_ entries",
	
	
			/**
			 * When using Ajax sourced data and during the first draw when DataTables is
			 * gathering the data, this message is shown in an empty row in the table to
			 * indicate to the end user the the data is being loaded. Note that this
			 * parameter is not used when loading data by server-side processing, just
			 * Ajax sourced data with client-side processing.
			 *  @type string
			 *  @default Loading...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.loadingRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "loadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
			 */
			"sLoadingRecords": "Loading...",
	
	
			/**
			 * Text which is displayed when the table is processing a user action
			 * (usually a sort command or similar).
			 *  @type string
			 *  @default Processing...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.processing
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "processing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
			 */
			"sProcessing": "Processing...",
	
	
			/**
			 * Details the actions that will be taken when the user types into the
			 * filtering input text box. The variable "_INPUT_", if used in the string,
			 * is replaced with the HTML text box for the filtering input allowing
			 * control over where it appears in the string. If "_INPUT_" is not given
			 * then the input box is appended to the string automatically.
			 *  @type string
			 *  @default Search:
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.search
			 *
			 *  @example
			 *    // Input text box will be appended at the end automatically
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Filter records:"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Specify where the filter should appear
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sSearch": "Search:",
	
	
			/**
			 * Assign a `placeholder` attribute to the search `input` element
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.searchPlaceholder
			 */
			"sSearchPlaceholder": "",
	
	
			/**
			 * All of the language information can be stored in a file on the
			 * server-side, which DataTables will look up if this parameter is passed.
			 * It must store the URL of the language file, which is in a JSON format,
			 * and the object has the same properties as the oLanguage object in the
			 * initialiser object (i.e. the above parameters). Please refer to one of
			 * the example language files to see how this works in action.
			 *  @type string
			 *  @default <i>Empty string - i.e. disabled</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.url
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "url": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
			 */
			"sUrl": "",
	
	
			/**
			 * Text shown inside the table records when the is no information to be
			 * displayed after filtering. `emptyTable` is shown when there is simply no
			 * information in the table at all (regardless of filtering).
			 *  @type string
			 *  @default No matching records found
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.zeroRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "zeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
			 */
			"sZeroRecords": "No matching records found"
		},
	
	
		/**
		 * This parameter allows you to have define the global filtering state at
		 * initialisation time. As an object the `search` parameter must be
		 * defined, but all other parameters are optional. When `regex` is true,
		 * the search string will be treated as a regular expression, when false
		 * (default) it will be treated as a straight string. When `smart`
		 * DataTables will use it's smart filtering methods (to word match at
		 * any point in the data), when false this will not be done.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.search
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "search": {"search": "Initial search"}
		 *      } );
		 *    } )
		 */
		"oSearch": $.extend( {}, DataTable.models.oSearch ),
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * By default DataTables will look for the property `data` (or `aaData` for
		 * compatibility with DataTables 1.9-) when obtaining data from an Ajax
		 * source or for server-side processing - this parameter allows that
		 * property to be changed. You can use Javascript dotted object notation to
		 * get a data source for multiple levels of nesting.
		 *  @type string
		 *  @default data
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxDataProp
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxDataProp": "data",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * You can instruct DataTables to load data from an external
		 * source using this parameter (use aData if you want to pass data in you
		 * already have). Simply provide a url a JSON object can be obtained from.
		 *  @type string
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxSource
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxSource": null,
	
	
		/**
		 * This initialisation variable allows you to specify exactly where in the
		 * DOM you want DataTables to inject the various controls it adds to the page
		 * (for example you might want the pagination controls at the top of the
		 * table). DIV elements (with or without a custom class) can also be added to
		 * aid styling. The follow syntax is used:
		 *   <ul>
		 *     <li>The following options are allowed:
		 *       <ul>
		 *         <li>'l' - Length changing</li>
		 *         <li>'f' - Filtering input</li>
		 *         <li>'t' - The table!</li>
		 *         <li>'i' - Information</li>
		 *         <li>'p' - Pagination</li>
		 *         <li>'r' - pRocessing</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following constants are allowed:
		 *       <ul>
		 *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
		 *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following syntax is expected:
		 *       <ul>
		 *         <li>'&lt;' and '&gt;' - div elements</li>
		 *         <li>'&lt;"class" and '&gt;' - div with a class</li>
		 *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
		 *       </ul>
		 *     </li>
		 *     <li>Examples:
		 *       <ul>
		 *         <li>'&lt;"wrapper"flipt&gt;'</li>
		 *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
		 *       </ul>
		 *     </li>
		 *   </ul>
		 *  @type string
		 *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>
		 *    <"H"lfr>t<"F"ip> <i>(when `jQueryUI` is true)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.dom
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "dom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
		 */
		"sDom": "lfrtip",
	
	
		/**
		 * Search delay option. This will throttle full table searches that use the
		 * DataTables provided search input element (it does not effect calls to
		 * `dt-api search()`, providing a delay before the search is made.
		 *  @type integer
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.searchDelay
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchDelay": 200
		 *      } );
		 *    } )
		 */
		"searchDelay": null,
	
	
		/**
		 * DataTables features four different built-in options for the buttons to
		 * display for pagination control:
		 *
		 * * `simple` - 'Previous' and 'Next' buttons only
		 * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
		 * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
		 * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus
		 *   page numbers
		 *  
		 * Further methods can be added using {@link DataTable.ext.oPagination}.
		 *  @type string
		 *  @default simple_numbers
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pagingType
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pagingType": "full_numbers"
		 *      } );
		 *    } )
		 */
		"sPaginationType": "simple_numbers",
	
	
		/**
		 * Enable horizontal scrolling. When a table is too wide to fit into a
		 * certain layout, or you have a large number of columns in the table, you
		 * can enable x-scrolling to show the table in a viewport, which can be
		 * scrolled. This property can be `true` which will allow the table to
		 * scroll horizontally when needed, or any CSS unit, or a number (in which
		 * case it will be treated as a pixel measurement). Setting as simply `true`
		 * is recommended.
		 *  @type boolean|string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollX
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": true,
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"sScrollX": "",
	
	
		/**
		 * This property can be used to force a DataTable to use more width than it
		 * might otherwise do when x-scrolling is enabled. For example if you have a
		 * table which requires to be well spaced, this parameter is useful for
		 * "over-sizing" the table, and thus forcing scrolling. This property can by
		 * any CSS unit, or a number (in which case it will be treated as a pixel
		 * measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollXInner
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollXInner": "110%"
		 *      } );
		 *    } );
		 */
		"sScrollXInner": "",
	
	
		/**
		 * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
		 * to the given height, and enable scrolling for any data which overflows the
		 * current viewport. This can be used as an alternative to paging to display
		 * a lot of data in a small area (although paging and scrolling can both be
		 * enabled at the same time). This property can be any CSS unit, or a number
		 * (in which case it will be treated as a pixel measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollY
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false
		 *      } );
		 *    } );
		 */
		"sScrollY": "",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * Set the HTTP method that is used to make the Ajax call for server-side
		 * processing or Ajax sourced data.
		 *  @type string
		 *  @default GET
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverMethod
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sServerMethod": "GET",
	
	
		/**
		 * DataTables makes use of renderers when displaying HTML elements for
		 * a table. These renderers can be added or modified by plug-ins to
		 * generate suitable mark-up for a site. For example the Bootstrap
		 * integration plug-in for DataTables uses a paging button renderer to
		 * display pagination buttons in the mark-up required by Bootstrap.
		 *
		 * For further information about the renderers available see
		 * DataTable.ext.renderer
		 *  @type string|object
		 *  @default null
		 *
		 *  @name DataTable.defaults.renderer
		 *
		 */
		"renderer": null,
	
	
		/**
		 * Set the data property name that DataTables should use to get a row's id
		 * to set as the `id` property in the node.
		 *  @type string
		 *  @default DT_RowId
		 *
		 *  @name DataTable.defaults.rowId
		 */
		"rowId": "DT_RowId"
	};
	
	_fnHungarianMap( DataTable.defaults );
	
	
	
	/*
	 * Developer note - See note in model.defaults.js about the use of Hungarian
	 * notation and camel case.
	 */
	
	/**
	 * Column options that can be given to DataTables at initialisation time.
	 *  @namespace
	 */
	DataTable.defaults.column = {
		/**
		 * Define which column(s) an order will occur on for this column. This
		 * allows a column's ordering to take multiple columns into account when
		 * doing a sort or use the data from a different column. For example first
		 * name / last name columns make sense to do a multi-column sort over the
		 * two columns.
		 *  @type array|int
		 *  @default null <i>Takes the value of the column index automatically</i>
		 *
		 *  @name DataTable.defaults.column.orderData
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderData": [ 0, 1 ], "targets": [ 0 ] },
		 *          { "orderData": [ 1, 0 ], "targets": [ 1 ] },
		 *          { "orderData": 2, "targets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderData": [ 0, 1 ] },
		 *          { "orderData": [ 1, 0 ] },
		 *          { "orderData": 2 },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"aDataSort": null,
		"iDataSort": -1,
	
	
		/**
		 * You can control the default ordering direction, and even alter the
		 * behaviour of the sort handler (i.e. only allow ascending ordering etc)
		 * using this parameter.
		 *  @type array
		 *  @default [ 'asc', 'desc' ]
		 *
		 *  @name DataTable.defaults.column.orderSequence
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderSequence": [ "asc" ], "targets": [ 1 ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ], "targets": [ 2 ] },
		 *          { "orderSequence": [ "desc" ], "targets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          { "orderSequence": [ "asc" ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ] },
		 *          { "orderSequence": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"asSorting": [ 'asc', 'desc' ],
	
	
		/**
		 * Enable or disable filtering on the data in this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.searchable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "searchable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "searchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSearchable": true,
	
	
		/**
		 * Enable or disable ordering on this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.orderable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSortable": true,
	
	
		/**
		 * Enable or disable the display of this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.visible
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "visible": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "visible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bVisible": true,
	
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} td The TD node that has been created
		 *  @param {*} cellData The Data for the cell
		 *  @param {array|object} rowData The data for the whole row
		 *  @param {int} row The row index for the aoData data store
		 *  @param {int} col The column index for aoColumns
		 *
		 *  @name DataTable.defaults.column.createdCell
		 *  @dtopt Columns
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [3],
		 *          "createdCell": function (td, cellData, rowData, row, col) {
		 *            if ( cellData == "1.7" ) {
		 *              $(td).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
		 */
		"fnCreatedCell": null,
	
	
		/**
		 * This parameter has been replaced by `data` in DataTables to ensure naming
		 * consistency. `dataProp` can still be used, as there is backwards
		 * compatibility in DataTables for this option, but it is strongly
		 * recommended that you use `data` in preference to `dataProp`.
		 *  @name DataTable.defaults.column.dataProp
		 */
	
	
		/**
		 * This property can be used to read data from any data source property,
		 * including deeply nested objects / properties. `data` can be given in a
		 * number of different ways which effect its behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object. Note that
		 *      function notation is recommended for use in `render` rather than
		 *      `data` as it is much simpler to use as a renderer.
		 * * `null` - use the original data source for the row rather than plucking
		 *   data directly from it. This action has effects on two other
		 *   initialisation options:
		 *    * `defaultContent` - When null is given as the `data` option and
		 *      `defaultContent` is specified for the column, the value defined by
		 *      `defaultContent` will be used for the cell.
		 *    * `render` - When null is used for the `data` option and the `render`
		 *      option is specified for the column, the whole data source for the
		 *      row is used for the renderer.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * `{array|object}` The data source for the row
		 *      * `{string}` The type call data requested - this will be 'set' when
		 *        setting data or 'filter', 'display', 'type', 'sort' or undefined
		 *        when gathering data. Note that when `undefined` is given for the
		 *        type DataTables expects to get the raw data for the object back<
		 *      * `{*}` Data to set when the second parameter is 'set'.
		 *    * Return:
		 *      * The return value from the function is not required when 'set' is
		 *        the type of call, but otherwise the return is what will be used
		 *        for the data requested.
		 *
		 * Note that `data` is a getter and setter option. If you just require
		 * formatting of data for output, you will likely want to use `render` which
		 * is simply a getter and thus simpler to use.
		 *
		 * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
		 * name change reflects the flexibility of this property and is consistent
		 * with the naming of mRender. If 'mDataProp' is given, then it will still
		 * be used by DataTables, as it automatically maps the old name to the new
		 * if required.
		 *
		 *  @type string|int|function|null
		 *  @default null <i>Use automatically calculated column index</i>
		 *
		 *  @name DataTable.defaults.column.data
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Read table data from objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {value},
		 *    //      "version": {value},
		 *    //      "grade": {value}
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/objects.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform" },
		 *          { "data": "version" },
		 *          { "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Read information from deeply nested objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {
		 *    //         "inner": {value}
		 *    //      },
		 *    //      "details": [
		 *    //         {value}, {value}
		 *    //      ]
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform.inner" },
		 *          { "data": "platform.details.0" },
		 *          { "data": "platform.details.1" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `data` as a function to provide different information for
		 *    // sorting, filtering and display. In this case, currency (price)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed dislay and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using default content
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null,
		 *          "defaultContent": "Click to edit"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using array notation - outputting a list from an array
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "name[, ]"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 */
		"mData": null,
	
	
		/**
		 * This property is the rendering partner to `data` and it is suggested that
		 * when you want to manipulate data for display (including filtering,
		 * sorting etc) without altering the underlying data for the table, use this
		 * property. `render` can be considered to be the the read only companion to
		 * `data` which is read / write (then as such more complex). Like `data`
		 * this option can be given in a number of different ways to effect its
		 * behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object.
		 * * `object` - use different data for the different data types requested by
		 *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
		 *   of the object is the data type the property refers to and the value can
		 *   defined using an integer, string or function using the same rules as
		 *   `render` normally does. Note that an `_` option _must_ be specified.
		 *   This is the default value to use if you haven't specified a value for
		 *   the data type requested by DataTables.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * {array|object} The data source for the row (based on `data`)
		 *      * {string} The type call data requested - this will be 'filter',
		 *        'display', 'type' or 'sort'.
		 *      * {array|object} The full data source for the row (not based on
		 *        `data`)
		 *    * Return:
		 *      * The return value from the function is what will be used for the
		 *        data requested.
		 *
		 *  @type string|int|function|object|null
		 *  @default null Use the data source value.
		 *
		 *  @name DataTable.defaults.column.render
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Create a comma separated list from an array of objects
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          {
		 *            "data": "platform",
		 *            "render": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Execute a function to obtain data
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": "browserName()"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // As an object, extracting different data for the different types
		 *    // This would be used with a data source such as:
		 *    //   { "phone": 5552368, "phone_filter": "5552368 555-2368", "phone_display": "555-2368" }
		 *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`
		 *    // (which has both forms) is used for filtering for if a user inputs either format, while
		 *    // the formatted phone number is the one that is shown in the table.
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": {
		 *            "_": "phone",
		 *            "filter": "phone_filter",
		 *            "display": "phone_display"
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Use as a function to create a link from the data source
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "download_link",
		 *          "render": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 */
		"mRender": null,
	
	
		/**
		 * Change the cell type created for the column - either TD cells or TH cells. This
		 * can be useful as TH cells have semantic meaning in the table body, allowing them
		 * to act as a header for a row (you may wish to add scope='row' to the TH elements).
		 *  @type string
		 *  @default td
		 *
		 *  @name DataTable.defaults.column.cellType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Make the first column use TH cells
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "cellType": "th"
		 *        } ]
		 *      } );
		 *    } );
		 */
		"sCellType": "td",
	
	
		/**
		 * Class to give to each cell in this column.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.class
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "class": "my_class", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "class": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sClass": "",
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 * Generally you shouldn't need this!
		 *  @type string
		 *  @default <i>Empty string<i>
		 *
		 *  @name DataTable.defaults.column.contentPadding
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "contentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sContentPadding": "",
	
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because `data`
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 *
		 *  @name DataTable.defaults.column.defaultContent
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit",
		 *            "targets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sDefaultContent": null,
	
	
		/**
		 * This parameter is only used in DataTables' server-side processing. It can
		 * be exceptionally useful to know what columns are being displayed on the
		 * client side, and to map these to database fields. When defined, the names
		 * also allow DataTables to reorder information from the server if it comes
		 * back in an unexpected order (i.e. if you switch your columns around on the
		 * client-side, your server-side code does not also need updating).
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.name
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "name": "engine", "targets": [ 0 ] },
		 *          { "name": "browser", "targets": [ 1 ] },
		 *          { "name": "platform", "targets": [ 2 ] },
		 *          { "name": "version", "targets": [ 3 ] },
		 *          { "name": "grade", "targets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "name": "engine" },
		 *          { "name": "browser" },
		 *          { "name": "platform" },
		 *          { "name": "version" },
		 *          { "name": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sName": "",
	
	
		/**
		 * Defines a data source type for the ordering which can be used to read
		 * real-time information from the table (updating the internally cached
		 * version) prior to ordering. This allows ordering to occur on user
		 * editable elements such as form inputs.
		 *  @type string
		 *  @default std
		 *
		 *  @name DataTable.defaults.column.orderDataType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderDataType": "dom-text", "targets": [ 2, 3 ] },
		 *          { "type": "numeric", "targets": [ 3 ] },
		 *          { "orderDataType": "dom-select", "targets": [ 4 ] },
		 *          { "orderDataType": "dom-checkbox", "targets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          { "orderDataType": "dom-text" },
		 *          { "orderDataType": "dom-text", "type": "numeric" },
		 *          { "orderDataType": "dom-select" },
		 *          { "orderDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sSortDataType": "std",
	
	
		/**
		 * The title of this column.
		 *  @type string
		 *  @default null <i>Derived from the 'TH' value for this column in the
		 *    original HTML table.</i>
		 *
		 *  @name DataTable.defaults.column.title
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "title": "My column title", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "title": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sTitle": null,
	
	
		/**
		 * The type allows you to specify how the data for this column will be
		 * ordered. Four types (string, numeric, date and html (which will strip
		 * HTML tags before ordering)) are currently available. Note that only date
		 * formats understood by Javascript's Date() object will be accepted as type
		 * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
		 * 'numeric', 'date' or 'html' (by default). Further types can be adding
		 * through plug-ins.
		 *  @type string
		 *  @default null <i>Auto-detected from raw data</i>
		 *
		 *  @name DataTable.defaults.column.type
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "type": "html", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "type": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sType": null,
	
	
		/**
		 * Defining the width of the column, this parameter may take any CSS value
		 * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
		 * been given a specific width through this interface ensuring that the table
		 * remains readable.
		 *  @type string
		 *  @default null <i>Automatic</i>
		 *
		 *  @name DataTable.defaults.column.width
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "width": "20%", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "width": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sWidth": null
	};
	
	_fnHungarianMap( DataTable.defaults.column );
	
	
	
	/**
	 * DataTables settings object - this holds all the information needed for a
	 * given table, including configuration, data and current application of the
	 * table options. DataTables does not have a single instance for each DataTable
	 * with the settings attached to that instance, but rather instances of the
	 * DataTable "class" are created on-the-fly as needed (typically by a
	 * $().dataTable() call) and the settings object is then applied to that
	 * instance.
	 *
	 * Note that this object is related to {@link DataTable.defaults} but this
	 * one is the internal data store for DataTables's cache of columns. It should
	 * NOT be manipulated outside of DataTables. Any configuration should be done
	 * through the initialisation options.
	 *  @namespace
	 *  @todo Really should attach the settings object to individual instances so we
	 *    don't need to create new instances on each $().dataTable() call (if the
	 *    table already exists). It would also save passing oSettings around and
	 *    into every single function. However, this is a very significant
	 *    architecture change for DataTables and will almost certainly break
	 *    backwards compatibility with older installations. This is something that
	 *    will be done in 2.0.
	 */
	DataTable.models.oSettings = {
		/**
		 * Primary features of DataTables and their enablement state.
		 *  @namespace
		 */
		"oFeatures": {
	
			/**
			 * Flag to say if DataTables should automatically try to calculate the
			 * optimum table and columns widths (true) or not (false).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bAutoWidth": null,
	
			/**
			 * Delay the creation of TR and TD elements until they are actually
			 * needed by a driven page draw. This can give a significant speed
			 * increase for Ajax source and Javascript source data, but makes no
			 * difference at all fro DOM and server-side processing tables.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bDeferRender": null,
	
			/**
			 * Enable filtering on the table or not. Note that if this is disabled
			 * then there is no filtering at all on the table, including fnFilter.
			 * To just remove the filtering input use sDom and remove the 'f' option.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bFilter": null,
	
			/**
			 * Table information element (the 'Showing x of y records' div) enable
			 * flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bInfo": null,
	
			/**
			 * Present a user control allowing the end user to change the page size
			 * when pagination is enabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bLengthChange": null,
	
			/**
			 * Pagination enabled or not. Note that if this is disabled then length
			 * changing must also be disabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bPaginate": null,
	
			/**
			 * Processing indicator enable flag whenever DataTables is enacting a
			 * user request - typically an Ajax request for server-side processing.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bProcessing": null,
	
			/**
			 * Server-side processing enabled flag - when enabled DataTables will
			 * get all data from the server for every draw - there is no filtering,
			 * sorting or paging done on the client-side.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bServerSide": null,
	
			/**
			 * Sorting enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSort": null,
	
			/**
			 * Multi-column sorting
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortMulti": null,
	
			/**
			 * Apply a class to the columns which are being sorted to provide a
			 * visual highlight or not. This can slow things down when enabled since
			 * there is a lot of DOM interaction.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortClasses": null,
	
			/**
			 * State saving enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bStateSave": null
		},
	
	
		/**
		 * Scrolling settings for a table.
		 *  @namespace
		 */
		"oScroll": {
			/**
			 * When the table is shorter in height than sScrollY, collapse the
			 * table container down to the height of the table (when true).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bCollapse": null,
	
			/**
			 * Width of the scrollbar for the web-browser's platform. Calculated
			 * during table initialisation.
			 *  @type int
			 *  @default 0
			 */
			"iBarWidth": 0,
	
			/**
			 * Viewport width for horizontal scrolling. Horizontal scrolling is
			 * disabled if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sX": null,
	
			/**
			 * Width to expand the table to when using x-scrolling. Typically you
			 * should not need to use this.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 *  @deprecated
			 */
			"sXInner": null,
	
			/**
			 * Viewport height for vertical scrolling. Vertical scrolling is disabled
			 * if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sY": null
		},
	
		/**
		 * Language information for the table.
		 *  @namespace
		 *  @extends DataTable.defaults.oLanguage
		 */
		"oLanguage": {
			/**
			 * Information callback function. See
			 * {@link DataTable.defaults.fnInfoCallback}
			 *  @type function
			 *  @default null
			 */
			"fnInfoCallback": null
		},
	
		/**
		 * Browser support parameters
		 *  @namespace
		 */
		"oBrowser": {
			/**
			 * Indicate if the browser incorrectly calculates width:100% inside a
			 * scrolling element (IE6/7)
			 *  @type boolean
			 *  @default false
			 */
			"bScrollOversize": false,
	
			/**
			 * Determine if the vertical scrollbar is on the right or left of the
			 * scrolling container - needed for rtl language layout, although not
			 * all browsers move the scrollbar (Safari).
			 *  @type boolean
			 *  @default false
			 */
			"bScrollbarLeft": false,
	
			/**
			 * Flag for if `getBoundingClientRect` is fully supported or not
			 *  @type boolean
			 *  @default false
			 */
			"bBounding": false,
	
			/**
			 * Browser scrollbar width
			 *  @type integer
			 *  @default 0
			 */
			"barWidth": 0
		},
	
	
		"ajax": null,
	
	
		/**
		 * Array referencing the nodes which are used for the features. The
		 * parameters of this object match what is allowed by sDom - i.e.
		 *   <ul>
		 *     <li>'l' - Length changing</li>
		 *     <li>'f' - Filtering input</li>
		 *     <li>'t' - The table!</li>
		 *     <li>'i' - Information</li>
		 *     <li>'p' - Pagination</li>
		 *     <li>'r' - pRocessing</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aanFeatures": [],
	
		/**
		 * Store data information - see {@link DataTable.models.oRow} for detailed
		 * information.
		 *  @type array
		 *  @default []
		 */
		"aoData": [],
	
		/**
		 * Array of indexes which are in the current display (after filtering etc)
		 *  @type array
		 *  @default []
		 */
		"aiDisplay": [],
	
		/**
		 * Array of indexes for display - no filtering
		 *  @type array
		 *  @default []
		 */
		"aiDisplayMaster": [],
	
		/**
		 * Map of row ids to data indexes
		 *  @type object
		 *  @default {}
		 */
		"aIds": {},
	
		/**
		 * Store information about each column that is in use
		 *  @type array
		 *  @default []
		 */
		"aoColumns": [],
	
		/**
		 * Store information about the table's header
		 *  @type array
		 *  @default []
		 */
		"aoHeader": [],
	
		/**
		 * Store information about the table's footer
		 *  @type array
		 *  @default []
		 */
		"aoFooter": [],
	
		/**
		 * Store the applied global search information in case we want to force a
		 * research or compare the old search to a new one.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 */
		"oPreviousSearch": {},
	
		/**
		 * Store the applied search for each column - see
		 * {@link DataTable.models.oSearch} for the format that is used for the
		 * filtering information for each column.
		 *  @type array
		 *  @default []
		 */
		"aoPreSearchCols": [],
	
		/**
		 * Sorting that is applied to the table. Note that the inner arrays are
		 * used in the following manner:
		 * <ul>
		 *   <li>Index 0 - column number</li>
		 *   <li>Index 1 - current sorting direction</li>
		 * </ul>
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @todo These inner arrays should really be objects
		 */
		"aaSorting": null,
	
		/**
		 * Sorting that is always applied to the table (i.e. prefixed in front of
		 * aaSorting).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aaSortingFixed": [],
	
		/**
		 * Classes to use for the striping of a table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"asStripeClasses": null,
	
		/**
		 * If restoring a table - we should restore its striping classes as well
		 *  @type array
		 *  @default []
		 */
		"asDestroyStripes": [],
	
		/**
		 * If restoring a table - we should restore its width
		 *  @type int
		 *  @default 0
		 */
		"sDestroyWidth": 0,
	
		/**
		 * Callback functions array for every time a row is inserted (i.e. on a draw).
		 *  @type array
		 *  @default []
		 */
		"aoRowCallback": [],
	
		/**
		 * Callback functions for the header on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoHeaderCallback": [],
	
		/**
		 * Callback function for the footer on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoFooterCallback": [],
	
		/**
		 * Array of callback functions for draw callback functions
		 *  @type array
		 *  @default []
		 */
		"aoDrawCallback": [],
	
		/**
		 * Array of callback functions for row created function
		 *  @type array
		 *  @default []
		 */
		"aoRowCreatedCallback": [],
	
		/**
		 * Callback functions for just before the table is redrawn. A return of
		 * false will be used to cancel the draw.
		 *  @type array
		 *  @default []
		 */
		"aoPreDrawCallback": [],
	
		/**
		 * Callback functions for when the table has been initialised.
		 *  @type array
		 *  @default []
		 */
		"aoInitComplete": [],
	
	
		/**
		 * Callbacks for modifying the settings to be stored for state saving, prior to
		 * saving state.
		 *  @type array
		 *  @default []
		 */
		"aoStateSaveParams": [],
	
		/**
		 * Callbacks for modifying the settings that have been stored for state saving
		 * prior to using the stored values to restore the state.
		 *  @type array
		 *  @default []
		 */
		"aoStateLoadParams": [],
	
		/**
		 * Callbacks for operating on the settings object once the saved state has been
		 * loaded
		 *  @type array
		 *  @default []
		 */
		"aoStateLoaded": [],
	
		/**
		 * Cache the table ID for quick access
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sTableId": "",
	
		/**
		 * The TABLE node for the main table
		 *  @type node
		 *  @default null
		 */
		"nTable": null,
	
		/**
		 * Permanent ref to the thead element
		 *  @type node
		 *  @default null
		 */
		"nTHead": null,
	
		/**
		 * Permanent ref to the tfoot element - if it exists
		 *  @type node
		 *  @default null
		 */
		"nTFoot": null,
	
		/**
		 * Permanent ref to the tbody element
		 *  @type node
		 *  @default null
		 */
		"nTBody": null,
	
		/**
		 * Cache the wrapper node (contains all DataTables controlled elements)
		 *  @type node
		 *  @default null
		 */
		"nTableWrapper": null,
	
		/**
		 * Indicate if when using server-side processing the loading of data
		 * should be deferred until the second draw.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 *  @default false
		 */
		"bDeferLoading": false,
	
		/**
		 * Indicate if all required information has been read in
		 *  @type boolean
		 *  @default false
		 */
		"bInitialised": false,
	
		/**
		 * Information about open rows. Each object in the array has the parameters
		 * 'nTr' and 'nParent'
		 *  @type array
		 *  @default []
		 */
		"aoOpenRows": [],
	
		/**
		 * Dictate the positioning of DataTables' control elements - see
		 * {@link DataTable.model.oInit.sDom}.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sDom": null,
	
		/**
		 * Search delay (in mS)
		 *  @type integer
		 *  @default null
		 */
		"searchDelay": null,
	
		/**
		 * Which type of pagination should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default two_button
		 */
		"sPaginationType": "two_button",
	
		/**
		 * The state duration (for `stateSave`) in seconds.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type int
		 *  @default 0
		 */
		"iStateDuration": 0,
	
		/**
		 * Array of callback functions for state saving. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the JSON string to save that has been thus far created. Returns
		 *       a JSON string to be inserted into a json object
		 *       (i.e. '"param": [ 0, 1, 2]')</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateSave": [],
	
		/**
		 * Array of callback functions for state loading. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the object stored. May return false to cancel state loading</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateLoad": [],
	
		/**
		 * State that was saved. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oSavedState": null,
	
		/**
		 * State that was loaded. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oLoadedState": null,
	
		/**
		 * Source url for AJAX data for the table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sAjaxSource": null,
	
		/**
		 * Property from a given object from which to read the table data from. This
		 * can be an empty string (when not server-side processing), in which case
		 * it is  assumed an an array is given directly.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sAjaxDataProp": null,
	
		/**
		 * Note if draw should be blocked while getting data
		 *  @type boolean
		 *  @default true
		 */
		"bAjaxDataGet": true,
	
		/**
		 * The last jQuery XHR object that was used for server-side data gathering.
		 * This can be used for working with the XHR information in one of the
		 * callbacks
		 *  @type object
		 *  @default null
		 */
		"jqXHR": null,
	
		/**
		 * JSON returned from the server in the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"json": undefined,
	
		/**
		 * Data submitted as part of the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"oAjaxData": undefined,
	
		/**
		 * Function to get the server-side data.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnServerData": null,
	
		/**
		 * Functions which are called prior to sending an Ajax request so extra
		 * parameters can easily be sent to the server
		 *  @type array
		 *  @default []
		 */
		"aoServerParams": [],
	
		/**
		 * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
		 * required).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sServerMethod": null,
	
		/**
		 * Format numbers for display.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnFormatNumber": null,
	
		/**
		 * List of options that can be used for the user selectable length menu.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aLengthMenu": null,
	
		/**
		 * Counter for the draws that the table does. Also used as a tracker for
		 * server-side processing
		 *  @type int
		 *  @default 0
		 */
		"iDraw": 0,
	
		/**
		 * Indicate if a redraw is being done - useful for Ajax
		 *  @type boolean
		 *  @default false
		 */
		"bDrawing": false,
	
		/**
		 * Draw index (iDraw) of the last error when parsing the returned data
		 *  @type int
		 *  @default -1
		 */
		"iDrawError": -1,
	
		/**
		 * Paging display length
		 *  @type int
		 *  @default 10
		 */
		"_iDisplayLength": 10,
	
		/**
		 * Paging start point - aiDisplay index
		 *  @type int
		 *  @default 0
		 */
		"_iDisplayStart": 0,
	
		/**
		 * Server-side processing - number of records in the result set
		 * (i.e. before filtering), Use fnRecordsTotal rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type int
		 *  @default 0
		 *  @private
		 */
		"_iRecordsTotal": 0,
	
		/**
		 * Server-side processing - number of records in the current display set
		 * (i.e. after filtering). Use fnRecordsDisplay rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type boolean
		 *  @default 0
		 *  @private
		 */
		"_iRecordsDisplay": 0,
	
		/**
		 * Flag to indicate if jQuery UI marking and classes should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bJUI": null,
	
		/**
		 * The classes to use for the table
		 *  @type object
		 *  @default {}
		 */
		"oClasses": {},
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if filtering has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bFiltered": false,
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if sorting has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bSorted": false,
	
		/**
		 * Indicate that if multiple rows are in the header and there is more than
		 * one unique cell per column, if the top one (true) or bottom one (false)
		 * should be used for sorting / title by DataTables.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bSortCellsTop": null,
	
		/**
		 * Initialisation object that is used for the table
		 *  @type object
		 *  @default null
		 */
		"oInit": null,
	
		/**
		 * Destroy callback functions - for plug-ins to attach themselves to the
		 * destroy so they can clean up markup and events.
		 *  @type array
		 *  @default []
		 */
		"aoDestroyCallback": [],
	
	
		/**
		 * Get the number of records in the current record set, before filtering
		 *  @type function
		 */
		"fnRecordsTotal": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsTotal * 1 :
				this.aiDisplayMaster.length;
		},
	
		/**
		 * Get the number of records in the current record set, after filtering
		 *  @type function
		 */
		"fnRecordsDisplay": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsDisplay * 1 :
				this.aiDisplay.length;
		},
	
		/**
		 * Get the display end point - aiDisplay index
		 *  @type function
		 */
		"fnDisplayEnd": function ()
		{
			var
				len      = this._iDisplayLength,
				start    = this._iDisplayStart,
				calc     = start + len,
				records  = this.aiDisplay.length,
				features = this.oFeatures,
				paginate = features.bPaginate;
	
			if ( features.bServerSide ) {
				return paginate === false || len === -1 ?
					start + records :
					Math.min( start+len, this._iRecordsDisplay );
			}
			else {
				return ! paginate || calc>records || len===-1 ?
					records :
					calc;
			}
		},
	
		/**
		 * The DataTables object for this table
		 *  @type object
		 *  @default null
		 */
		"oInstance": null,
	
		/**
		 * Unique identifier for each instance of the DataTables object. If there
		 * is an ID on the table node, then it takes that value, otherwise an
		 * incrementing internal counter is used.
		 *  @type string
		 *  @default null
		 */
		"sInstance": null,
	
		/**
		 * tabindex attribute value that is added to DataTables control elements, allowing
		 * keyboard navigation of the table and its controls.
		 */
		"iTabIndex": 0,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollHead": null,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollFoot": null,
	
		/**
		 * Last applied sort
		 *  @type array
		 *  @default []
		 */
		"aLastSort": [],
	
		/**
		 * Stored plug-in instances
		 *  @type object
		 *  @default {}
		 */
		"oPlugins": {},
	
		/**
		 * Function used to get a row's id from the row's data
		 *  @type function
		 *  @default null
		 */
		"rowIdFn": null,
	
		/**
		 * Data location where to store a row's id
		 *  @type string
		 *  @default null
		 */
		"rowId": null
	};

	/**
	 * Extension object for DataTables that is used to provide all extension
	 * options.
	 *
	 * Note that the `DataTable.ext` object is available through
	 * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is
	 * also aliased to `jQuery.fn.dataTableExt` for historic reasons.
	 *  @namespace
	 *  @extends DataTable.models.ext
	 */
	
	
	/**
	 * DataTables extensions
	 * 
	 * This namespace acts as a collection area for plug-ins that can be used to
	 * extend DataTables capabilities. Indeed many of the build in methods
	 * use this method to provide their own capabilities (sorting methods for
	 * example).
	 *
	 * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy
	 * reasons
	 *
	 *  @namespace
	 */
	DataTable.ext = _ext = {
		/**
		 * Buttons. For use with the Buttons extension for DataTables. This is
		 * defined here so other extensions can define buttons regardless of load
		 * order. It is _not_ used by DataTables core.
		 *
		 *  @type object
		 *  @default {}
		 */
		buttons: {},
	
	
		/**
		 * Element class names
		 *
		 *  @type object
		 *  @default {}
		 */
		classes: {},
	
	
		/**
		 * DataTables build type (expanded by the download builder)
		 *
		 *  @type string
		 */
		builder: "-source-",
	
	
		/**
		 * Error reporting.
		 * 
		 * How should DataTables report an error. Can take the value 'alert',
		 * 'throw', 'none' or a function.
		 *
		 *  @type string|function
		 *  @default alert
		 */
		errMode: "alert",
	
	
		/**
		 * Feature plug-ins.
		 * 
		 * This is an array of objects which describe the feature plug-ins that are
		 * available to DataTables. These feature plug-ins are then available for
		 * use through the `dom` initialisation option.
		 * 
		 * Each feature plug-in is described by an object which must have the
		 * following properties:
		 * 
		 * * `fnInit` - function that is used to initialise the plug-in,
		 * * `cFeature` - a character so the feature can be enabled by the `dom`
		 *   instillation option. This is case sensitive.
		 *
		 * The `fnInit` function has the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 *
		 * And the following return is expected:
		 * 
		 * * {node|null} The element which contains your feature. Note that the
		 *   return may also be void if your plug-in does not require to inject any
		 *   DOM elements into DataTables control (`dom`) - for example this might
		 *   be useful when developing a plug-in which allows table control via
		 *   keyboard entry
		 *
		 *  @type array
		 *
		 *  @example
		 *    $.fn.dataTable.ext.features.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T"
		 *    } );
		 */
		feature: [],
	
	
		/**
		 * Row searching.
		 * 
		 * This method of searching is complimentary to the default type based
		 * searching, and a lot more comprehensive as it allows you complete control
		 * over the searching logic. Each element in this array is a function
		 * (parameters described below) that is called for every row in the table,
		 * and your logic decides if it should be included in the searching data set
		 * or not.
		 *
		 * Searching functions have the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{array|object}` Data for the row to be processed (same as the
		 *    original format that was passed in as the data source, or an array
		 *    from a DOM data source
		 * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
		 *    can be useful to retrieve the `TR` element if you need DOM interaction.
		 *
		 * And the following return is expected:
		 *
		 * * {boolean} Include the row in the searched result set (true) or not
		 *   (false)
		 *
		 * Note that as with the main search ability in DataTables, technically this
		 * is "filtering", since it is subtractive. However, for consistency in
		 * naming we call it searching here.
		 *
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // The following example shows custom search being applied to the
		 *    // fourth column (i.e. the data[3] index) based on two input values
		 *    // from the end-user, matching the data in a certain range.
		 *    $.fn.dataTable.ext.search.push(
		 *      function( settings, data, dataIndex ) {
		 *        var min = document.getElementById('min').value * 1;
		 *        var max = document.getElementById('max').value * 1;
		 *        var version = data[3] == "-" ? 0 : data[3]*1;
		 *
		 *        if ( min == "" && max == "" ) {
		 *          return true;
		 *        }
		 *        else if ( min == "" && version < max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && "" == max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && version < max ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
		 *    );
		 */
		search: [],
	
	
		/**
		 * Selector extensions
		 *
		 * The `selector` option can be used to extend the options available for the
		 * selector modifier options (`selector-modifier` object data type) that
		 * each of the three built in selector types offer (row, column and cell +
		 * their plural counterparts). For example the Select extension uses this
		 * mechanism to provide an option to select only rows, columns and cells
		 * that have been marked as selected by the end user (`{selected: true}`),
		 * which can be used in conjunction with the existing built in selector
		 * options.
		 *
		 * Each property is an array to which functions can be pushed. The functions
		 * take three attributes:
		 *
		 * * Settings object for the host table
		 * * Options object (`selector-modifier` object type)
		 * * Array of selected item indexes
		 *
		 * The return is an array of the resulting item indexes after the custom
		 * selector has been applied.
		 *
		 *  @type object
		 */
		selector: {
			cell: [],
			column: [],
			row: []
		},
	
	
		/**
		 * Internal functions, exposed for used in plug-ins.
		 * 
		 * Please note that you should not need to use the internal methods for
		 * anything other than a plug-in (and even then, try to avoid if possible).
		 * The internal function may change between releases.
		 *
		 *  @type object
		 *  @default {}
		 */
		internal: {},
	
	
		/**
		 * Legacy configuration options. Enable and disable legacy options that
		 * are available in DataTables.
		 *
		 *  @type object
		 */
		legacy: {
			/**
			 * Enable / disable DataTables 1.9 compatible server-side processing
			 * requests
			 *
			 *  @type boolean
			 *  @default null
			 */
			ajax: null
		},
	
	
		/**
		 * Pagination plug-in methods.
		 * 
		 * Each entry in this object is a function and defines which buttons should
		 * be shown by the pagination rendering method that is used for the table:
		 * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
		 * buttons are displayed in the document, while the functions here tell it
		 * what buttons to display. This is done by returning an array of button
		 * descriptions (what each button will do).
		 *
		 * Pagination types (the four built in options and any additional plug-in
		 * options defined here) can be used through the `paginationType`
		 * initialisation parameter.
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{int} page` The current page index
		 * 2. `{int} pages` The number of pages in the table
		 *
		 * Each function is expected to return an array where each element of the
		 * array can be one of:
		 *
		 * * `first` - Jump to first page when activated
		 * * `last` - Jump to last page when activated
		 * * `previous` - Show previous page when activated
		 * * `next` - Show next page when activated
		 * * `{int}` - Show page of the index given
		 * * `{array}` - A nested array containing the above elements to add a
		 *   containing 'DIV' element (might be useful for styling).
		 *
		 * Note that DataTables v1.9- used this object slightly differently whereby
		 * an object with two functions would be defined for each plug-in. That
		 * ability is still supported by DataTables 1.10+ to provide backwards
		 * compatibility, but this option of use is now decremented and no longer
		 * documented in DataTables 1.10+.
		 *
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    // Show previous, next and current page buttons only
		 *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
		 *      return [ 'previous', page, 'next' ];
		 *    };
		 */
		pager: {},
	
	
		renderer: {
			pageButton: {},
			header: {}
		},
	
	
		/**
		 * Ordering plug-ins - custom data source
		 * 
		 * The extension options for ordering of data available here is complimentary
		 * to the default type based ordering that DataTables typically uses. It
		 * allows much greater control over the the data that is being used to
		 * order a column, but is necessarily therefore more complex.
		 * 
		 * This type of ordering is useful if you want to do ordering based on data
		 * live from the DOM (for example the contents of an 'input' element) rather
		 * than just the static string that DataTables knows of.
		 * 
		 * The way these plug-ins work is that you create an array of the values you
		 * wish to be ordering for the column in question and then return that
		 * array. The data in the array much be in the index order of the rows in
		 * the table (not the currently ordering order!). Which order data gathering
		 * function is run here depends on the `dt-init columns.orderDataType`
		 * parameter that is used for the column (if any).
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{int}` Target column index
		 *
		 * Each function is expected to return an array:
		 *
		 * * `{array}` Data for the column to be ordering upon
		 *
		 *  @type array
		 *
		 *  @example
		 *    // Ordering using `input` node values
		 *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
		 *    {
		 *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
		 *        return $('input', td).val();
		 *      } );
		 *    }
		 */
		order: {},
	
	
		/**
		 * Type based plug-ins.
		 *
		 * Each column in DataTables has a type assigned to it, either by automatic
		 * detection or by direct assignment using the `type` option for the column.
		 * The type of a column will effect how it is ordering and search (plug-ins
		 * can also make use of the column type if required).
		 *
		 * @namespace
		 */
		type: {
			/**
			 * Type detection functions.
			 *
			 * The functions defined in this object are used to automatically detect
			 * a column's type, making initialisation of DataTables super easy, even
			 * when complex data is in the table.
			 *
			 * The functions defined take two parameters:
			 *
		     *  1. `{*}` Data from the column cell to be analysed
		     *  2. `{settings}` DataTables settings object. This can be used to
		     *     perform context specific type detection - for example detection
		     *     based on language settings such as using a comma for a decimal
		     *     place. Generally speaking the options from the settings will not
		     *     be required
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Data type detected, or null if unknown (and thus
			 *   pass it on to the other type detection functions.
			 *
			 *  @type array
			 *
			 *  @example
			 *    // Currency type detection plug-in:
			 *    $.fn.dataTable.ext.type.detect.push(
			 *      function ( data, settings ) {
			 *        // Check the numeric part
			 *        if ( ! $.isNumeric( data.substring(1) ) ) {
			 *          return null;
			 *        }
			 *
			 *        // Check prefixed by currency
			 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
			 *          return 'currency';
			 *        }
			 *        return null;
			 *      }
			 *    );
			 */
			detect: [],
	
	
			/**
			 * Type based search formatting.
			 *
			 * The type based searching functions can be used to pre-format the
			 * data to be search on. For example, it can be used to strip HTML
			 * tags or to de-format telephone numbers for numeric only searching.
			 *
			 * Note that is a search is not defined for a column of a given type,
			 * no search formatting will be performed.
			 * 
			 * Pre-processing of searching data plug-ins - When you assign the sType
			 * for a column (or have it automatically detected for you by DataTables
			 * or a type detection plug-in), you will typically be using this for
			 * custom sorting, but it can also be used to provide custom searching
			 * by allowing you to pre-processing the data and returning the data in
			 * the format that should be searched upon. This is done by adding
			 * functions this object with a parameter name which matches the sType
			 * for that target column. This is the corollary of <i>afnSortData</i>
			 * for searching data.
			 *
			 * The functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for searching
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Formatted string that will be used for the searching.
			 *
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
			 *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
			 *    }
			 */
			search: {},
	
	
			/**
			 * Type based ordering.
			 *
			 * The column type tells DataTables what ordering to apply to the table
			 * when a column is sorted upon. The order for each type that is defined,
			 * is defined by the functions available in this object.
			 *
			 * Each ordering option can be described by three properties added to
			 * this object:
			 *
			 * * `{type}-pre` - Pre-formatting function
			 * * `{type}-asc` - Ascending order function
			 * * `{type}-desc` - Descending order function
			 *
			 * All three can be used together, only `{type}-pre` or only
			 * `{type}-asc` and `{type}-desc` together. It is generally recommended
			 * that only `{type}-pre` is used, as this provides the optimal
			 * implementation in terms of speed, although the others are provided
			 * for compatibility with existing Javascript sort functions.
			 *
			 * `{type}-pre`: Functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for ordering
			 *
			 * And return:
			 *
			 * * `{*}` Data to be sorted upon
			 *
			 * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
			 * functions, taking two parameters:
			 *
		     *  1. `{*}` Data to compare to the second parameter
		     *  2. `{*}` Data to compare to the first parameter
			 *
			 * And returning:
			 *
			 * * `{*}` Ordering match: <0 if first parameter should be sorted lower
			 *   than the second parameter, ===0 if the two parameters are equal and
			 *   >0 if the first parameter should be sorted height than the second
			 *   parameter.
			 * 
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    // Numeric ordering of formatted numbers with a pre-formatter
			 *    $.extend( $.fn.dataTable.ext.type.order, {
			 *      "string-pre": function(x) {
			 *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
			 *        return parseFloat( a );
			 *      }
			 *    } );
			 *
			 *  @example
			 *    // Case-sensitive string ordering, with no pre-formatting method
			 *    $.extend( $.fn.dataTable.ext.order, {
			 *      "string-case-asc": function(x,y) {
			 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
			 *      },
			 *      "string-case-desc": function(x,y) {
			 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
			 *      }
			 *    } );
			 */
			order: {}
		},
	
		/**
		 * Unique DataTables instance counter
		 *
		 * @type int
		 * @private
		 */
		_unique: 0,
	
	
		//
		// Depreciated
		// The following properties are retained for backwards compatiblity only.
		// The should not be used in new projects and will be removed in a future
		// version
		//
	
		/**
		 * Version check function.
		 *  @type function
		 *  @depreciated Since 1.10
		 */
		fnVersionCheck: DataTable.fnVersionCheck,
	
	
		/**
		 * Index for what 'this' index API functions should use
		 *  @type int
		 *  @deprecated Since v1.10
		 */
		iApiIndex: 0,
	
	
		/**
		 * jQuery UI class container
		 *  @type object
		 *  @deprecated Since v1.10
		 */
		oJUIClasses: {},
	
	
		/**
		 * Software version
		 *  @type string
		 *  @deprecated Since v1.10
		 */
		sVersion: DataTable.version
	};
	
	
	//
	// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts
	//
	$.extend( _ext, {
		afnFiltering: _ext.search,
		aTypes:       _ext.type.detect,
		ofnSearch:    _ext.type.search,
		oSort:        _ext.type.order,
		afnSortData:  _ext.order,
		aoFeatures:   _ext.feature,
		oApi:         _ext.internal,
		oStdClasses:  _ext.classes,
		oPagination:  _ext.pager
	} );
	
	
	$.extend( DataTable.ext.classes, {
		"sTable": "dataTable",
		"sNoFooter": "no-footer",
	
		/* Paging buttons */
		"sPageButton": "paginate_button",
		"sPageButtonActive": "current",
		"sPageButtonDisabled": "disabled",
	
		/* Striping classes */
		"sStripeOdd": "odd",
		"sStripeEven": "even",
	
		/* Empty row */
		"sRowEmpty": "dataTables_empty",
	
		/* Features */
		"sWrapper": "dataTables_wrapper",
		"sFilter": "dataTables_filter",
		"sInfo": "dataTables_info",
		"sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
		"sLength": "dataTables_length",
		"sProcessing": "dataTables_processing",
	
		/* Sorting */
		"sSortAsc": "sorting_asc",
		"sSortDesc": "sorting_desc",
		"sSortable": "sorting", /* Sortable in both directions */
		"sSortableAsc": "sorting_asc_disabled",
		"sSortableDesc": "sorting_desc_disabled",
		"sSortableNone": "sorting_disabled",
		"sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */
	
		/* Filtering */
		"sFilterInput": "",
	
		/* Page length */
		"sLengthSelect": "",
	
		/* Scrolling */
		"sScrollWrapper": "dataTables_scroll",
		"sScrollHead": "dataTables_scrollHead",
		"sScrollHeadInner": "dataTables_scrollHeadInner",
		"sScrollBody": "dataTables_scrollBody",
		"sScrollFoot": "dataTables_scrollFoot",
		"sScrollFootInner": "dataTables_scrollFootInner",
	
		/* Misc */
		"sHeaderTH": "",
		"sFooterTH": "",
	
		// Deprecated
		"sSortJUIAsc": "",
		"sSortJUIDesc": "",
		"sSortJUI": "",
		"sSortJUIAscAllowed": "",
		"sSortJUIDescAllowed": "",
		"sSortJUIWrapper": "",
		"sSortIcon": "",
		"sJUIHeader": "",
		"sJUIFooter": ""
	} );
	
	
	(function() {
	
	// Reused strings for better compression. Closure compiler appears to have a
	// weird edge case where it is trying to expand strings rather than use the
	// variable version. This results in about 200 bytes being added, for very
	// little preference benefit since it this run on script load only.
	var _empty = '';
	_empty = '';
	
	var _stateDefault = _empty + 'ui-state-default';
	var _sortIcon     = _empty + 'css_right ui-icon ui-icon-';
	var _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';
	
	$.extend( DataTable.ext.oJUIClasses, DataTable.ext.classes, {
		/* Full numbers paging buttons */
		"sPageButton":         "fg-button ui-button "+_stateDefault,
		"sPageButtonActive":   "ui-state-disabled",
		"sPageButtonDisabled": "ui-state-disabled",
	
		/* Features */
		"sPaging": "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi "+
			"ui-buttonset-multi paging_", /* Note that the type is postfixed */
	
		/* Sorting */
		"sSortAsc":            _stateDefault+" sorting_asc",
		"sSortDesc":           _stateDefault+" sorting_desc",
		"sSortable":           _stateDefault+" sorting",
		"sSortableAsc":        _stateDefault+" sorting_asc_disabled",
		"sSortableDesc":       _stateDefault+" sorting_desc_disabled",
		"sSortableNone":       _stateDefault+" sorting_disabled",
		"sSortJUIAsc":         _sortIcon+"triangle-1-n",
		"sSortJUIDesc":        _sortIcon+"triangle-1-s",
		"sSortJUI":            _sortIcon+"carat-2-n-s",
		"sSortJUIAscAllowed":  _sortIcon+"carat-1-n",
		"sSortJUIDescAllowed": _sortIcon+"carat-1-s",
		"sSortJUIWrapper":     "DataTables_sort_wrapper",
		"sSortIcon":           "DataTables_sort_icon",
	
		/* Scrolling */
		"sScrollHead": "dataTables_scrollHead "+_stateDefault,
		"sScrollFoot": "dataTables_scrollFoot "+_stateDefault,
	
		/* Misc */
		"sHeaderTH":  _stateDefault,
		"sFooterTH":  _stateDefault,
		"sJUIHeader": _headerFooter+" ui-corner-tl ui-corner-tr",
		"sJUIFooter": _headerFooter+" ui-corner-bl ui-corner-br"
	} );
	
	}());
	
	
	
	var extPagination = DataTable.ext.pager;
	
	function _numbers ( page, pages ) {
		var
			numbers = [],
			buttons = extPagination.numbers_length,
			half = Math.floor( buttons / 2 ),
			i = 1;
	
		if ( pages <= buttons ) {
			numbers = _range( 0, pages );
		}
		else if ( page <= half ) {
			numbers = _range( 0, buttons-2 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
		}
		else if ( page >= pages - 1 - half ) {
			numbers = _range( pages-(buttons-2), pages );
			numbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6
			numbers.splice( 0, 0, 0 );
		}
		else {
			numbers = _range( page-half+2, page+half-1 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
			numbers.splice( 0, 0, 'ellipsis' );
			numbers.splice( 0, 0, 0 );
		}
	
		numbers.DT_el = 'span';
		return numbers;
	}
	
	
	$.extend( extPagination, {
		simple: function ( page, pages ) {
			return [ 'previous', 'next' ];
		},
	
		full: function ( page, pages ) {
			return [  'first', 'previous', 'next', 'last' ];
		},
	
		numbers: function ( page, pages ) {
			return [ _numbers(page, pages) ];
		},
	
		simple_numbers: function ( page, pages ) {
			return [ 'previous', _numbers(page, pages), 'next' ];
		},
	
		full_numbers: function ( page, pages ) {
			return [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];
		},
	
		// For testing and plug-ins to use
		_numbers: _numbers,
	
		// Number of number buttons (including ellipsis) to show. _Must be odd!_
		numbers_length: 7
	} );
	
	
	$.extend( true, DataTable.ext.renderer, {
		pageButton: {
			_: function ( settings, host, idx, buttons, page, pages ) {
				var classes = settings.oClasses;
				var lang = settings.oLanguage.oPaginate;
				var aria = settings.oLanguage.oAria.paginate || {};
				var btnDisplay, btnClass, counter=0;
	
				var attach = function( container, buttons ) {
					var i, ien, node, button;
					var clickHandler = function ( e ) {
						_fnPageChange( settings, e.data.action, true );
					};
	
					for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
						button = buttons[i];
	
						if ( $.isArray( button ) ) {
							var inner = $( '<'+(button.DT_el || 'div')+'/>' )
								.appendTo( container );
							attach( inner, button );
						}
						else {
							btnDisplay = null;
							btnClass = '';
	
							switch ( button ) {
								case 'ellipsis':
									container.append('<span class="ellipsis">&#x2026;</span>');
									break;
	
								case 'first':
									btnDisplay = lang.sFirst;
									btnClass = button + (page > 0 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'previous':
									btnDisplay = lang.sPrevious;
									btnClass = button + (page > 0 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'next':
									btnDisplay = lang.sNext;
									btnClass = button + (page < pages-1 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'last':
									btnDisplay = lang.sLast;
									btnClass = button + (page < pages-1 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								default:
									btnDisplay = button + 1;
									btnClass = page === button ?
										classes.sPageButtonActive : '';
									break;
							}
	
							if ( btnDisplay !== null ) {
								node = $('<a>', {
										'class': classes.sPageButton+' '+btnClass,
										'aria-controls': settings.sTableId,
										'aria-label': aria[ button ],
										'data-dt-idx': counter,
										'tabindex': settings.iTabIndex,
										'id': idx === 0 && typeof button === 'string' ?
											settings.sTableId +'_'+ button :
											null
									} )
									.html( btnDisplay )
									.appendTo( container );
	
								_fnBindAction(
									node, {action: button}, clickHandler
								);
	
								counter++;
							}
						}
					}
				};
	
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame. Try / catch the error. Not good for
				// accessibility, but neither are frames.
				var activeEl;
	
				try {
					// Because this approach is destroying and recreating the paging
					// elements, focus is lost on the select button which is bad for
					// accessibility. So we want to restore focus once the draw has
					// completed
					activeEl = $(host).find(document.activeElement).data('dt-idx');
				}
				catch (e) {}
	
				attach( $(host).empty(), buttons );
	
				if ( activeEl ) {
					$(host).find( '[data-dt-idx='+activeEl+']' ).focus();
				}
			}
		}
	} );
	
	
	
	// Built in type detection. See model.ext.aTypes for information about
	// what is required from this methods.
	$.extend( DataTable.ext.type.detect, [
		// Plain numbers - first since V8 detects some plain numbers as dates
		// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal ) ? 'num'+decimal : null;
		},
	
		// Dates (only those recognised by the browser's Date.parse)
		function ( d, settings )
		{
			// V8 will remove any unknown characters at the start and end of the
			// expression, leading to false matches such as `$245.12` or `10%` being
			// a valid date. See forum thread 18941 for detail.
			if ( d && !(d instanceof Date) && ( ! _re_date_start.test(d) || ! _re_date_end.test(d) ) ) {
				return null;
			}
			var parsed = Date.parse(d);
			return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;
		},
	
		// Formatted numbers
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;
		},
	
		// HTML numeric
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;
		},
	
		// HTML numeric, formatted
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;
		},
	
		// HTML (this is strict checking - there must be html)
		function ( d, settings )
		{
			return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?
				'html' : null;
		}
	] );
	
	
	
	// Filter formatting functions. See model.ext.ofnSearch for information about
	// what is required from these methods.
	// 
	// Note that additional search methods are added for the html numbers and
	// html formatted numbers by `_addNumericSort()` when we know what the decimal
	// place is
	
	
	$.extend( DataTable.ext.type.search, {
		html: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data
						.replace( _re_new_lines, " " )
						.replace( _re_html, "" ) :
					'';
		},
	
		string: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data.replace( _re_new_lines, " " ) :
					data;
		}
	} );
	
	
	
	var __numericReplace = function ( d, decimalPlace, re1, re2 ) {
		if ( d !== 0 && (!d || d === '-') ) {
			return -Infinity;
		}
	
		// If a decimal place other than `.` is used, it needs to be given to the
		// function so we can detect it and replace with a `.` which is the only
		// decimal place Javascript recognises - it is not locale aware.
		if ( decimalPlace ) {
			d = _numToDecimal( d, decimalPlace );
		}
	
		if ( d.replace ) {
			if ( re1 ) {
				d = d.replace( re1, '' );
			}
	
			if ( re2 ) {
				d = d.replace( re2, '' );
			}
		}
	
		return d * 1;
	};
	
	
	// Add the numeric 'deformatting' functions for sorting and search. This is done
	// in a function to provide an easy ability for the language options to add
	// additional methods if a non-period decimal place is used.
	function _addNumericSort ( decimalPlace ) {
		$.each(
			{
				// Plain numbers
				"num": function ( d ) {
					return __numericReplace( d, decimalPlace );
				},
	
				// Formatted numbers
				"num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_formatted_numeric );
				},
	
				// HTML numeric
				"html-num": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html );
				},
	
				// HTML numeric, formatted
				"html-num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );
				}
			},
			function ( key, fn ) {
				// Add the ordering method
				_ext.type.order[ key+decimalPlace+'-pre' ] = fn;
	
				// For HTML types add a search formatter that will strip the HTML
				if ( key.match(/^html\-/) ) {
					_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;
				}
			}
		);
	}
	
	
	// Default sort methods
	$.extend( _ext.type.order, {
		// Dates
		"date-pre": function ( d ) {
			return Date.parse( d ) || 0;
		},
	
		// html
		"html-pre": function ( a ) {
			return _empty(a) ?
				'' :
				a.replace ?
					a.replace( /<.*?>/g, "" ).toLowerCase() :
					a+'';
		},
	
		// string
		"string-pre": function ( a ) {
			// This is a little complex, but faster than always calling toString,
			// http://jsperf.com/tostring-v-check
			return _empty(a) ?
				'' :
				typeof a === 'string' ?
					a.toLowerCase() :
					! a.toString ?
						'' :
						a.toString();
		},
	
		// string-asc and -desc are retained only for compatibility with the old
		// sort methods
		"string-asc": function ( x, y ) {
			return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		},
	
		"string-desc": function ( x, y ) {
			return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		}
	} );
	
	
	// Numeric sorting types - order doesn't matter here
	_addNumericSort( '' );
	
	
	$.extend( true, DataTable.ext.renderer, {
		header: {
			_: function ( settings, cell, column, classes ) {
				// No additional mark-up required
				// Attach a sort listener to update on sort - note that using the
				// `DT` namespace will allow the event to be removed automatically
				// on destroy, while the `dt` namespaced event is the one we are
				// listening for
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) { // need to check this this is the host
						return;               // table, not a nested one
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass(
							column.sSortingClass +' '+
							classes.sSortAsc +' '+
							classes.sSortDesc
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
				} );
			},
	
			jqueryui: function ( settings, cell, column, classes ) {
				$('<div/>')
					.addClass( classes.sSortJUIWrapper )
					.append( cell.contents() )
					.append( $('<span/>')
						.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )
					)
					.appendTo( cell );
	
				// Attach a sort listener to update on sort
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) {
						return;
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass( classes.sSortAsc +" "+classes.sSortDesc )
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
	
					cell
						.find( 'span.'+classes.sSortIcon )
						.removeClass(
							classes.sSortJUIAsc +" "+
							classes.sSortJUIDesc +" "+
							classes.sSortJUI +" "+
							classes.sSortJUIAscAllowed +" "+
							classes.sSortJUIDescAllowed
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortJUIDesc :
								column.sSortingClassJUI
						);
				} );
			}
		}
	} );
	
	/*
	 * Public helper functions. These aren't used internally by DataTables, or
	 * called by any of the options passed into DataTables, but they can be used
	 * externally by developers working with DataTables. They are helper functions
	 * to make working with DataTables a little bit easier.
	 */
	
	var __htmlEscapeEntities = function ( d ) {
		return typeof d === 'string' ?
			d.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;') :
			d;
	};
	
	/**
	 * Helpers for `columns.render`.
	 *
	 * The options defined here can be used with the `columns.render` initialisation
	 * option to provide a display renderer. The following functions are defined:
	 *
	 * * `number` - Will format numeric data (defined by `columns.data`) for
	 *   display, retaining the original unformatted data for sorting and filtering.
	 *   It takes 5 parameters:
	 *   * `string` - Thousands grouping separator
	 *   * `string` - Decimal point indicator
	 *   * `integer` - Number of decimal points to show
	 *   * `string` (optional) - Prefix.
	 *   * `string` (optional) - Postfix (/suffix).
	 * * `text` - Escape HTML to help prevent XSS attacks. It has no optional
	 *   parameters.
	 *
	 * @example
	 *   // Column definition using the number renderer
	 *   {
	 *     data: "salary",
	 *     render: $.fn.dataTable.render.number( '\'', '.', 0, '$' )
	 *   }
	 *
	 * @namespace
	 */
	DataTable.render = {
		number: function ( thousands, decimal, precision, prefix, postfix ) {
			return {
				display: function ( d ) {
					if ( typeof d !== 'number' && typeof d !== 'string' ) {
						return d;
					}
	
					var negative = d < 0 ? '-' : '';
					var flo = parseFloat( d );
	
					// If NaN then there isn't much formatting that we can do - just
					// return immediately, escaping any HTML (this was supposed to
					// be a number after all)
					if ( isNaN( flo ) ) {
						return __htmlEscapeEntities( d );
					}
	
					d = Math.abs( flo );
	
					var intPart = parseInt( d, 10 );
					var floatPart = precision ?
						decimal+(d - intPart).toFixed( precision ).substring( 2 ):
						'';
	
					return negative + (prefix||'') +
						intPart.toString().replace(
							/\B(?=(\d{3})+(?!\d))/g, thousands
						) +
						floatPart +
						(postfix||'');
				}
			};
		},
	
		text: function () {
			return {
				display: __htmlEscapeEntities
			};
		}
	};
	
	
	/*
	 * This is really a good bit rubbish this method of exposing the internal methods
	 * publicly... - To be fixed in 2.0 using methods on the prototype
	 */
	
	
	/**
	 * Create a wrapper function for exporting an internal functions to an external API.
	 *  @param {string} fn API function name
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#internal
	 */
	function _fnExternApiFunc (fn)
	{
		return function() {
			var args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(
				Array.prototype.slice.call(arguments)
			);
			return DataTable.ext.internal[fn].apply( this, args );
		};
	}
	
	
	/**
	 * Reference to internal functions for use by plug-in developers. Note that
	 * these methods are references to internal functions and are considered to be
	 * private. If you use these methods, be aware that they are liable to change
	 * between versions.
	 *  @namespace
	 */
	$.extend( DataTable.ext.internal, {
		_fnExternApiFunc: _fnExternApiFunc,
		_fnBuildAjax: _fnBuildAjax,
		_fnAjaxUpdate: _fnAjaxUpdate,
		_fnAjaxParameters: _fnAjaxParameters,
		_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,
		_fnAjaxDataSrc: _fnAjaxDataSrc,
		_fnAddColumn: _fnAddColumn,
		_fnColumnOptions: _fnColumnOptions,
		_fnAdjustColumnSizing: _fnAdjustColumnSizing,
		_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,
		_fnColumnIndexToVisible: _fnColumnIndexToVisible,
		_fnVisbleColumns: _fnVisbleColumns,
		_fnGetColumns: _fnGetColumns,
		_fnColumnTypes: _fnColumnTypes,
		_fnApplyColumnDefs: _fnApplyColumnDefs,
		_fnHungarianMap: _fnHungarianMap,
		_fnCamelToHungarian: _fnCamelToHungarian,
		_fnLanguageCompat: _fnLanguageCompat,
		_fnBrowserDetect: _fnBrowserDetect,
		_fnAddData: _fnAddData,
		_fnAddTr: _fnAddTr,
		_fnNodeToDataIndex: _fnNodeToDataIndex,
		_fnNodeToColumnIndex: _fnNodeToColumnIndex,
		_fnGetCellData: _fnGetCellData,
		_fnSetCellData: _fnSetCellData,
		_fnSplitObjNotation: _fnSplitObjNotation,
		_fnGetObjectDataFn: _fnGetObjectDataFn,
		_fnSetObjectDataFn: _fnSetObjectDataFn,
		_fnGetDataMaster: _fnGetDataMaster,
		_fnClearTable: _fnClearTable,
		_fnDeleteIndex: _fnDeleteIndex,
		_fnInvalidate: _fnInvalidate,
		_fnGetRowElements: _fnGetRowElements,
		_fnCreateTr: _fnCreateTr,
		_fnBuildHead: _fnBuildHead,
		_fnDrawHead: _fnDrawHead,
		_fnDraw: _fnDraw,
		_fnReDraw: _fnReDraw,
		_fnAddOptionsHtml: _fnAddOptionsHtml,
		_fnDetectHeader: _fnDetectHeader,
		_fnGetUniqueThs: _fnGetUniqueThs,
		_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,
		_fnFilterComplete: _fnFilterComplete,
		_fnFilterCustom: _fnFilterCustom,
		_fnFilterColumn: _fnFilterColumn,
		_fnFilter: _fnFilter,
		_fnFilterCreateSearch: _fnFilterCreateSearch,
		_fnEscapeRegex: _fnEscapeRegex,
		_fnFilterData: _fnFilterData,
		_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,
		_fnUpdateInfo: _fnUpdateInfo,
		_fnInfoMacros: _fnInfoMacros,
		_fnInitialise: _fnInitialise,
		_fnInitComplete: _fnInitComplete,
		_fnLengthChange: _fnLengthChange,
		_fnFeatureHtmlLength: _fnFeatureHtmlLength,
		_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,
		_fnPageChange: _fnPageChange,
		_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,
		_fnProcessingDisplay: _fnProcessingDisplay,
		_fnFeatureHtmlTable: _fnFeatureHtmlTable,
		_fnScrollDraw: _fnScrollDraw,
		_fnApplyToChildren: _fnApplyToChildren,
		_fnCalculateColumnWidths: _fnCalculateColumnWidths,
		_fnThrottle: _fnThrottle,
		_fnConvertToWidth: _fnConvertToWidth,
		_fnGetWidestNode: _fnGetWidestNode,
		_fnGetMaxLenString: _fnGetMaxLenString,
		_fnStringToCss: _fnStringToCss,
		_fnSortFlatten: _fnSortFlatten,
		_fnSort: _fnSort,
		_fnSortAria: _fnSortAria,
		_fnSortListener: _fnSortListener,
		_fnSortAttachListener: _fnSortAttachListener,
		_fnSortingClasses: _fnSortingClasses,
		_fnSortData: _fnSortData,
		_fnSaveState: _fnSaveState,
		_fnLoadState: _fnLoadState,
		_fnSettingsFromNode: _fnSettingsFromNode,
		_fnLog: _fnLog,
		_fnMap: _fnMap,
		_fnBindAction: _fnBindAction,
		_fnCallbackReg: _fnCallbackReg,
		_fnCallbackFire: _fnCallbackFire,
		_fnLengthOverflow: _fnLengthOverflow,
		_fnRenderer: _fnRenderer,
		_fnDataSource: _fnDataSource,
		_fnRowAttributes: _fnRowAttributes,
		_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant
		                                // in 1.10, so this dead-end function is
		                                // added to prevent errors
	} );
	

	// jQuery access
	$.fn.dataTable = DataTable;

	// Provide access to the host jQuery object (circular reference)
	DataTable.$ = $;

	// Legacy aliases
	$.fn.dataTableSettings = DataTable.settings;
	$.fn.dataTableExt = DataTable.ext;

	// With a capital `D` we return a DataTables API instance rather than a
	// jQuery object
	$.fn.DataTable = function ( opts ) {
		return $(this).dataTable( opts ).api();
	};

	// All properties that are available to $.fn.dataTable should also be
	// available on $.fn.DataTable
	$.each( DataTable, function ( prop, val ) {
		$.fn.DataTable[ prop ] = val;
	} );


	// Information about events fired by DataTables - for documentation.
	/**
	 * Draw event, fired whenever the table is redrawn on the page, at the same
	 * point as fnDrawCallback. This may be useful for binding events or
	 * performing calculations when the table is altered at all.
	 *  @name DataTable#draw.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Search event, fired when the searching applied to the table (using the
	 * built-in global search, or column filters) is altered.
	 *  @name DataTable#search.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page change event, fired when the paging of the table is altered.
	 *  @name DataTable#page.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Order event, fired when the ordering applied to the table is altered.
	 *  @name DataTable#order.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * DataTables initialisation complete event, fired when the table is fully
	 * drawn, including Ajax data loaded, if Ajax data is required.
	 *  @name DataTable#init.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The JSON object request from the server - only
	 *    present if client-side Ajax sourced data is used</li></ol>
	 */

	/**
	 * State save event, fired when the table has changed state a new state save
	 * is required. This event allows modification of the state saving object
	 * prior to actually doing the save, including addition or other state
	 * properties (for plug-ins) or modification of a DataTables core property.
	 *  @name DataTable#stateSaveParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The state information to be saved
	 */

	/**
	 * State load event, fired when the table is loading state from the stored
	 * data, but prior to the settings object being modified by the saved state
	 * - allowing modification of the saved state is required or loading of
	 * state for a plug-in.
	 *  @name DataTable#stateLoadParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * State loaded event, fired when state has been loaded from stored data and
	 * the settings object has been modified by the loaded data.
	 *  @name DataTable#stateLoaded.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * Processing event, fired when DataTables is doing some kind of processing
	 * (be it, order, searcg or anything else). It can be used to indicate to
	 * the end user that there is something happening, or that something has
	 * finished.
	 *  @name DataTable#processing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {boolean} bShow Flag for if DataTables is doing processing or not
	 */

	/**
	 * Ajax (XHR) event, fired whenever an Ajax request is completed from a
	 * request to made to the server for new data. This event is called before
	 * DataTables processed the returned data, so it can also be used to pre-
	 * process the data returned from the server, if needed.
	 *
	 * Note that this trigger is called in `fnServerData`, if you override
	 * `fnServerData` and which to use this event, you need to trigger it in you
	 * success function.
	 *  @name DataTable#xhr.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {object} json JSON returned from the server
	 *
	 *  @example
	 *     // Use a custom property returned from the server in another DOM element
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       $('#status').html( json.status );
	 *     } );
	 *
	 *  @example
	 *     // Pre-process the data returned from the server
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {
	 *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;
	 *       }
	 *       // Note no return - manipulate the data directly in the JSON object.
	 *     } );
	 */

	/**
	 * Destroy event, fired when the DataTable is destroyed by calling fnDestroy
	 * or passing the bDestroy:true parameter in the initialisation object. This
	 * can be used to remove bound events, added DOM nodes, etc.
	 *  @name DataTable#destroy.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page length change event, fired when number of records to show on each
	 * page (the length) is changed.
	 *  @name DataTable#length.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {integer} len New length
	 */

	/**
	 * Column sizing has changed.
	 *  @name DataTable#column-sizing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Column visibility has changed.
	 *  @name DataTable#column-visibility.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {int} column Column index
	 *  @param {bool} vis `false` if column now hidden, or `true` if visible
	 */

	return $.fn.dataTable;
}));
/*! Responsive 2.0.2
 * 2014-2016 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     Responsive
 * @description Responsive tables plug-in for DataTables
 * @version     2.0.2
 * @file        dataTables.responsive.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 * @copyright   Copyright 2014-2016 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license/mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */
(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/**
 * Responsive is a plug-in for the DataTables library that makes use of
 * DataTables' ability to change the visibility of columns, changing the
 * visibility of columns so the displayed columns fit into the table container.
 * The end result is that complex tables will be dynamically adjusted to fit
 * into the viewport, be it on a desktop, tablet or mobile browser.
 *
 * Responsive for DataTables has two modes of operation, which can used
 * individually or combined:
 *
 * * Class name based control - columns assigned class names that match the
 *   breakpoint logic can be shown / hidden as required for each breakpoint.
 * * Automatic control - columns are automatically hidden when there is no
 *   room left to display them. Columns removed from the right.
 *
 * In additional to column visibility control, Responsive also has built into
 * options to use DataTables' child row display to show / hide the information
 * from the table that has been hidden. There are also two modes of operation
 * for this child row display:
 *
 * * Inline - when the control element that the user can use to show / hide
 *   child rows is displayed inside the first column of the table.
 * * Column - where a whole column is dedicated to be the show / hide control.
 *
 * Initialisation of Responsive is performed by:
 *
 * * Adding the class `responsive` or `dt-responsive` to the table. In this case
 *   Responsive will automatically be initialised with the default configuration
 *   options when the DataTable is created.
 * * Using the `responsive` option in the DataTables configuration options. This
 *   can also be used to specify the configuration options, or simply set to
 *   `true` to use the defaults.
 *
 *  @class
 *  @param {object} settings DataTables settings object for the host table
 *  @param {object} [opts] Configuration options
 *  @requires jQuery 1.7+
 *  @requires DataTables 1.10.3+
 *
 *  @example
 *      $('#example').DataTable( {
 *        responsive: true
 *      } );
 *    } );
 */
var Responsive = function ( settings, opts ) {
	// Sanity check that we are using DataTables 1.10 or newer
	if ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.3' ) ) {
		throw 'DataTables Responsive requires DataTables 1.10.3 or newer';
	}

	this.s = {
		dt: new DataTable.Api( settings ),
		columns: [],
		current: []
	};

	// Check if responsive has already been initialised on this table
	if ( this.s.dt.settings()[0].responsive ) {
		return;
	}

	// details is an object, but for simplicity the user can give it as a string
	// or a boolean
	if ( opts && typeof opts.details === 'string' ) {
		opts.details = { type: opts.details };
	}
	else if ( opts && opts.details === false ) {
		opts.details = { type: false };
	}
	else if ( opts && opts.details === true ) {
		opts.details = { type: 'inline' };
	}

	this.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );
	settings.responsive = this;
	this._constructor();
};

$.extend( Responsive.prototype, {
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Constructor
	 */

	/**
	 * Initialise the Responsive instance
	 *
	 * @private
	 */
	_constructor: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var dtPrivateSettings = dt.settings()[0];
		var oldWindowWidth = $(window).width();

		dt.settings()[0]._responsive = this;

		// Use DataTables' throttle function to avoid processor thrashing on
		// resize
		$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {
			// iOS has a bug whereby resize can fire when only scrolling
			// See: http://stackoverflow.com/questions/8898412
			var width = $(window).width();

			if ( width !== oldWindowWidth ) {
				that._resize();
				oldWindowWidth = width;
			}
		} ) );

		// DataTables doesn't currently trigger an event when a row is added, so
		// we need to hook into its private API to enforce the hidden rows when
		// new data is added
		dtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {
			if ( $.inArray( false, that.s.current ) !== -1 ) {
				$('td, th', tr).each( function ( i ) {
					var idx = dt.column.index( 'toData', i );

					if ( that.s.current[idx] === false ) {
						$(this).css('display', 'none');
					}
				} );
			}
		} );

		// Destroy event handler
		dt.on( 'destroy.dtr', function () {
			dt.off( '.dtr' );
			$( dt.table().body() ).off( '.dtr' );
			$(window).off( 'resize.dtr orientationchange.dtr' );

			// Restore the columns that we've hidden
			$.each( that.s.current, function ( i, val ) {
				if ( val === false ) {
					that._setColumnVis( i, true );
				}
			} );
		} );

		// Reorder the breakpoints array here in case they have been added out
		// of order
		this.c.breakpoints.sort( function (a, b) {
			return a.width < b.width ? 1 :
				a.width > b.width ? -1 : 0;
		} );

		this._classLogic();
		this._resizeAuto();

		// Details handler
		var details = this.c.details;

		if ( details.type !== false ) {
			that._detailsInit();

			// DataTables will trigger this event on every column it shows and
			// hides individually
			dt.on( 'column-visibility.dtr', function (e, ctx, col, vis) {
				that._classLogic();
				that._resizeAuto();
				that._resize();
			} );

			// Redraw the details box on each draw which will happen if the data
			// has changed. This is used until DataTables implements a native
			// `updated` event for rows
			dt.on( 'draw.dtr', function () {
				that._redrawChildren();
			} );

			$(dt.table().node()).addClass( 'dtr-'+details.type );
		}

		dt.on( 'column-reorder.dtr', function (e, settings, details) {
			that._classLogic();
			that._resizeAuto();
			that._resize();
		} );

		// Change in column sizes means we need to calc
		dt.on( 'column-sizing.dtr', function () {
			that._resize();
		});

		dt.on( 'init.dtr', function (e, settings, details) {
			that._resizeAuto();
			that._resize();

			// If columns were hidden, then DataTables needs to adjust the
			// column sizing
			if ( $.inArray( false, that.s.current ) ) {
				dt.columns.adjust();
			}
		} );

		// First pass - draw the table for the current viewport size
		this._resize();
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Private methods
	 */

	/**
	 * Calculate the visibility for the columns in a table for a given
	 * breakpoint. The result is pre-determined based on the class logic if
	 * class names are used to control all columns, but the width of the table
	 * is also used if there are columns which are to be automatically shown
	 * and hidden.
	 *
	 * @param  {string} breakpoint Breakpoint name to use for the calculation
	 * @return {array} Array of boolean values initiating the visibility of each
	 *   column.
	 *  @private
	 */
	_columnsVisiblity: function ( breakpoint )
	{
		var dt = this.s.dt;
		var columns = this.s.columns;
		var i, ien;

		// Create an array that defines the column ordering based first on the
		// column's priority, and secondly the column index. This allows the
		// columns to be removed from the right if the priority matches
		var order = columns
			.map( function ( col, idx ) {
				return {
					columnIdx: idx,
					priority: col.priority
				};
			} )
			.sort( function ( a, b ) {
				if ( a.priority !== b.priority ) {
					return a.priority - b.priority;
				}
				return a.columnIdx - b.columnIdx;
			} );

		// Class logic - determine which columns are in this breakpoint based
		// on the classes. If no class control (i.e. `auto`) then `-` is used
		// to indicate this to the rest of the function
		var display = $.map( columns, function ( col ) {
			return col.auto && col.minWidth === null ?
				false :
				col.auto === true ?
					'-' :
					$.inArray( breakpoint, col.includeIn ) !== -1;
		} );

		// Auto column control - first pass: how much width is taken by the
		// ones that must be included from the non-auto columns
		var requiredWidth = 0;
		for ( i=0, ien=display.length ; i<ien ; i++ ) {
			if ( display[i] === true ) {
				requiredWidth += columns[i].minWidth;
			}
		}

		// Second pass, use up any remaining width for other columns. For
		// scrolling tables we need to subtract the width of the scrollbar. It
		// may not be requires which makes this sub-optimal, but it would
		// require another full redraw to make complete use of those extra few
		// pixels
		var scrolling = dt.settings()[0].oScroll;
		var bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;
		var widthAvailable = dt.table().container().offsetWidth - bar;
		var usedWidth = widthAvailable - requiredWidth;

		// Control column needs to always be included. This makes it sub-
		// optimal in terms of using the available with, but to stop layout
		// thrashing or overflow. Also we need to account for the control column
		// width first so we know how much width is available for the other
		// columns, since the control column might not be the first one shown
		for ( i=0, ien=display.length ; i<ien ; i++ ) {
			if ( columns[i].control ) {
				usedWidth -= columns[i].minWidth;
			}
		}

		// Allow columns to be shown (counting by priority and then right to
		// left) until we run out of room
		var empty = false;
		for ( i=0, ien=order.length ; i<ien ; i++ ) {
			var colIdx = order[i].columnIdx;

			if ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {
				// Once we've found a column that won't fit we don't let any
				// others display either, or columns might disappear in the
				// middle of the table
				if ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {
					empty = true;
					display[colIdx] = false;
				}
				else {
					display[colIdx] = true;
				}

				usedWidth -= columns[colIdx].minWidth;
			}
		}

		// Determine if the 'control' column should be shown (if there is one).
		// This is the case when there is a hidden column (that is not the
		// control column). The two loops look inefficient here, but they are
		// trivial and will fly through. We need to know the outcome from the
		// first , before the action in the second can be taken
		var showControl = false;

		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( ! columns[i].control && ! columns[i].never && ! display[i] ) {
				showControl = true;
				break;
			}
		}

		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( columns[i].control ) {
				display[i] = showControl;
			}
		}

		// Finally we need to make sure that there is at least one column that
		// is visible
		if ( $.inArray( true, display ) === -1 ) {
			display[0] = true;
		}

		return display;
	},


	/**
	 * Create the internal `columns` array with information about the columns
	 * for the table. This includes determining which breakpoints the column
	 * will appear in, based upon class names in the column, which makes up the
	 * vast majority of this method.
	 *
	 * @private
	 */
	_classLogic: function ()
	{
		var that = this;
		var calc = {};
		var breakpoints = this.c.breakpoints;
		var dt = this.s.dt;
		var columns = dt.columns().eq(0).map( function (i) {
			var column = this.column(i);
			var className = column.header().className;
			var priority = dt.settings()[0].aoColumns[i].responsivePriority;

			if ( priority === undefined ) {
				var dataPriority = $(column.header()).data('priority');

				priority = dataPriority !== undefined ?
					dataPriority * 1 :
					10000;
			}

			return {
				className: className,
				includeIn: [],
				auto:      false,
				control:   false,
				never:     className.match(/\bnever\b/) ? true : false,
				priority:  priority
			};
		} );

		// Simply add a breakpoint to `includeIn` array, ensuring that there are
		// no duplicates
		var add = function ( colIdx, name ) {
			var includeIn = columns[ colIdx ].includeIn;

			if ( $.inArray( name, includeIn ) === -1 ) {
				includeIn.push( name );
			}
		};

		var column = function ( colIdx, name, operator, matched ) {
			var size, i, ien;

			if ( ! operator ) {
				columns[ colIdx ].includeIn.push( name );
			}
			else if ( operator === 'max-' ) {
				// Add this breakpoint and all smaller
				size = that._find( name ).width;

				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].width <= size ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
			else if ( operator === 'min-' ) {
				// Add this breakpoint and all larger
				size = that._find( name ).width;

				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].width >= size ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
			else if ( operator === 'not-' ) {
				// Add all but this breakpoint
				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].name.indexOf( matched ) === -1 ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
		};

		// Loop over each column and determine if it has a responsive control
		// class
		columns.each( function ( col, i ) {
			var classNames = col.className.split(' ');
			var hasClass = false;

			// Split the class name up so multiple rules can be applied if needed
			for ( var k=0, ken=classNames.length ; k<ken ; k++ ) {
				var className = $.trim( classNames[k] );

				if ( className === 'all' ) {
					// Include in all
					hasClass = true;
					col.includeIn = $.map( breakpoints, function (a) {
						return a.name;
					} );
					return;
				}
				else if ( className === 'none' || col.never ) {
					// Include in none (default) and no auto
					hasClass = true;
					return;
				}
				else if ( className === 'control' ) {
					// Special column that is only visible, when one of the other
					// columns is hidden. This is used for the details control
					hasClass = true;
					col.control = true;
					return;
				}

				$.each( breakpoints, function ( j, breakpoint ) {
					// Does this column have a class that matches this breakpoint?
					var brokenPoint = breakpoint.name.split('-');
					var re = new RegExp( '(min\\-|max\\-|not\\-)?('+brokenPoint[0]+')(\\-[_a-zA-Z0-9])?' );
					var match = className.match( re );

					if ( match ) {
						hasClass = true;

						if ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {
							// Class name matches breakpoint name fully
							column( i, breakpoint.name, match[1], match[2]+match[3] );
						}
						else if ( match[2] === brokenPoint[0] && ! match[3] ) {
							// Class name matched primary breakpoint name with no qualifier
							column( i, breakpoint.name, match[1], match[2] );
						}
					}
				} );
			}

			// If there was no control class, then automatic sizing is used
			if ( ! hasClass ) {
				col.auto = true;
			}
		} );

		this.s.columns = columns;
	},


	/**
	 * Show the details for the child row
	 *
	 * @param  {DataTables.Api} row    API instance for the row
	 * @param  {boolean}        update Update flag
	 * @private
	 */
	_detailsDisplay: function ( row, update )
	{
		var that = this;
		var dt = this.s.dt;
		var details = this.c.details;

		if ( details && details.type ) {
			var res = details.display( row, update, function () {
				return details.renderer(
					dt, row[0], that._detailsObj(row[0])
				);
			} );

			if ( res === true || res === false ) {
				$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );
			}
		}
	},


	/**
	 * Initialisation for the details handler
	 *
	 * @private
	 */
	_detailsInit: function ()
	{
		var that    = this;
		var dt      = this.s.dt;
		var details = this.c.details;

		// The inline type always uses the first child as the target
		if ( details.type === 'inline' ) {
			details.target = 'td:first-child, th:first-child';
		}

		// Keyboard accessibility
		dt.on( 'draw.dtr', function () {
			that._tabIndexes();
		} );
		that._tabIndexes(); // Initial draw has already happened

		$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {
			if ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {
				$(this).click();
			}
		} );

		// type.target can be a string jQuery selector or a column index
		var target   = details.target;
		var selector = typeof target === 'string' ? target : 'td, th';

		// Click handler to show / hide the details rows when they are available
		$( dt.table().body() )
			.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {
				// If the table is not collapsed (i.e. there is no hidden columns)
				// then take no action
				if ( ! $(dt.table().node()).hasClass('collapsed' ) ) {
					return;
				}

				// Check that the row is actually a DataTable's controlled node
				if ( ! dt.row( $(this).closest('tr') ).length ) {
					return;
				}

				// For column index, we determine if we should act or not in the
				// handler - otherwise it is already okay
				if ( typeof target === 'number' ) {
					var targetIdx = target < 0 ?
						dt.columns().eq(0).length + target :
						target;

					if ( dt.cell( this ).index().column !== targetIdx ) {
						return;
					}
				}

				// $().closest() includes itself in its check
				var row = dt.row( $(this).closest('tr') );

				// Check event type to do an action
				if ( e.type === 'click' ) {
					// The renderer is given as a function so the caller can execute it
					// only when they need (i.e. if hiding there is no point is running
					// the renderer)
					that._detailsDisplay( row, false );
				}
				else if ( e.type === 'mousedown' ) {
					// For mouse users, prevent the focus ring from showing
					$(this).css('outline', 'none');
				}
				else if ( e.type === 'mouseup' ) {
					// And then re-allow at the end of the click
					$(this).blur().css('outline', '');
				}
			} );
	},


	/**
	 * Get the details to pass to a renderer for a row
	 * @param  {int} rowIdx Row index
	 * @private
	 */
	_detailsObj: function ( rowIdx )
	{
		var that = this;
		var dt = this.s.dt;

		return $.map( this.s.columns, function( col, i ) {
			if ( col.never ) {
				return;
			}

			return {
				title:       dt.settings()[0].aoColumns[ i ].sTitle,
				data:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),
				hidden:      dt.column( i ).visible() && !that.s.current[ i ],
				columnIndex: i,
				rowIndex:    rowIdx
			};
		} );
	},


	/**
	 * Find a breakpoint object from a name
	 *
	 * @param  {string} name Breakpoint name to find
	 * @return {object}      Breakpoint description object
	 * @private
	 */
	_find: function ( name )
	{
		var breakpoints = this.c.breakpoints;

		for ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {
			if ( breakpoints[i].name === name ) {
				return breakpoints[i];
			}
		}
	},


	/**
	 * Re-create the contents of the child rows as the display has changed in
	 * some way.
	 *
	 * @private
	 */
	_redrawChildren: function ()
	{
		var that = this;
		var dt = this.s.dt;

		dt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {
			var row = dt.row( idx );

			that._detailsDisplay( dt.row( idx ), true );
		} );
	},


	/**
	 * Alter the table display for a resized viewport. This involves first
	 * determining what breakpoint the window currently is in, getting the
	 * column visibilities to apply and then setting them.
	 *
	 * @private
	 */
	_resize: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var width = $(window).width();
		var breakpoints = this.c.breakpoints;
		var breakpoint = breakpoints[0].name;
		var columns = this.s.columns;
		var i, ien;
		var oldVis = this.s.current.slice();

		// Determine what breakpoint we are currently at
		for ( i=breakpoints.length-1 ; i>=0 ; i-- ) {
			if ( width <= breakpoints[i].width ) {
				breakpoint = breakpoints[i].name;
				break;
			}
		}
		
		// Show the columns for that break point
		var columnsVis = this._columnsVisiblity( breakpoint );
		this.s.current = columnsVis;

		// Set the class before the column visibility is changed so event
		// listeners know what the state is. Need to determine if there are
		// any columns that are not visible but can be shown
		var collapsedClass = false;
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control ) {
				collapsedClass = true;
				break;
			}
		}

		$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );

		var changed = false;

		dt.columns().eq(0).each( function ( colIdx, i ) {
			if ( columnsVis[i] !== oldVis[i] ) {
				changed = true;
				that._setColumnVis( colIdx, columnsVis[i] );
			}
		} );

		if ( changed ) {
			this._redrawChildren();

			// Inform listeners of the change
			$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );
		}
	},


	/**
	 * Determine the width of each column in the table so the auto column hiding
	 * has that information to work with. This method is never going to be 100%
	 * perfect since column widths can change slightly per page, but without
	 * seriously compromising performance this is quite effective.
	 *
	 * @private
	 */
	_resizeAuto: function ()
	{
		var dt = this.s.dt;
		var columns = this.s.columns;

		// Are we allowed to do auto sizing?
		if ( ! this.c.auto ) {
			return;
		}

		// Are there any columns that actually need auto-sizing, or do they all
		// have classes defined
		if ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {
			return;
		}

		// Clone the table with the current data in it
		var tableWidth   = dt.table().node().offsetWidth;
		var columnWidths = dt.columns;
		var clonedTable  = dt.table().node().cloneNode( false );
		var clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );
		var clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8

		// Header
		var headerCells = dt.columns()
			.header()
			.filter( function (idx) {
				return dt.column(idx).visible();
			} )
			.to$()
			.clone( false )
			.css( 'display', 'table-cell' );

		// Body rows - we don't need to take account of DataTables' column
		// visibility since we implement our own here (hence the `display` set)
		$(clonedBody)
			.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )
			.find( 'th, td' ).css( 'display', '' );

		// Footer
		var footer = dt.table().footer();
		if ( footer ) {
			var clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );
			var footerCells = dt.columns()
				.header()
				.filter( function (idx) {
					return dt.column(idx).visible();
				} )
				.to$()
				.clone( false )
				.css( 'display', 'table-cell' );

			$('<tr/>')
				.append( footerCells )
				.appendTo( clonedFooter );
		}

		$('<tr/>')
			.append( headerCells )
			.appendTo( clonedHeader );

		// In the inline case extra padding is applied to the first column to
		// give space for the show / hide icon. We need to use this in the
		// calculation
		if ( this.c.details.type === 'inline' ) {
			$(clonedTable).addClass( 'dtr-inline collapsed' );
		}

		var inserted = $('<div/>')
			.css( {
				width: 1,
				height: 1,
				overflow: 'hidden'
			} )
			.append( clonedTable );

		inserted.insertBefore( dt.table().node() );

		// The cloned header now contains the smallest that each column can be
		headerCells.each( function (i) {
			var idx = dt.column.index( 'fromVisible', i );
			columns[ idx ].minWidth =  this.offsetWidth || 0;
		} );

		inserted.remove();
	},

	/**
	 * Set a column's visibility.
	 *
	 * We don't use DataTables' column visibility controls in order to ensure
	 * that column visibility can Responsive can no-exist. Since only IE8+ is
	 * supported (and all evergreen browsers of course) the control of the
	 * display attribute works well.
	 *
	 * @param {integer} col      Column index
	 * @param {boolean} showHide Show or hide (true or false)
	 * @private
	 */
	_setColumnVis: function ( col, showHide )
	{
		var dt = this.s.dt;
		var display = showHide ? '' : 'none'; // empty string will remove the attr

		$( dt.column( col ).header() ).css( 'display', display );
		$( dt.column( col ).footer() ).css( 'display', display );
		dt.column( col ).nodes().to$().css( 'display', display );
	},


	/**
	 * Update the cell tab indexes for keyboard accessibility. This is called on
	 * every table draw - that is potentially inefficient, but also the least
	 * complex option given that column visibility can change on the fly. Its a
	 * shame user-focus was removed from CSS 3 UI, as it would have solved this
	 * issue with a single CSS statement.
	 *
	 * @private
	 */
	_tabIndexes: function ()
	{
		var dt = this.s.dt;
		var cells = dt.cells( { page: 'current' } ).nodes().to$();
		var ctx = dt.settings()[0];
		var target = this.c.details.target;

		cells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );

		var selector = typeof target === 'number' ?
			':eq('+target+')' :
			target;

		$( selector, dt.rows( { page: 'current' } ).nodes() )
			.attr( 'tabIndex', ctx.iTabIndex )
			.data( 'dtr-keyboard', 1 );
	}
} );


/**
 * List of default breakpoints. Each item in the array is an object with two
 * properties:
 *
 * * `name` - the breakpoint name.
 * * `width` - the breakpoint width
 *
 * @name Responsive.breakpoints
 * @static
 */
Responsive.breakpoints = [
	{ name: 'desktop',  width: Infinity },
	{ name: 'tablet-l', width: 1024 },
	{ name: 'tablet-p', width: 768 },
	{ name: 'mobile-l', width: 480 },
	{ name: 'mobile-p', width: 320 }
];


/**
 * Display methods - functions which define how the hidden data should be shown
 * in the table.
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.display = {
	childRow: function ( row, update, render ) {
		if ( update ) {
			if ( $(row.node()).hasClass('parent') ) {
				row.child( render(), 'child' ).show();

				return true;
			}
		}
		else {
			if ( ! row.child.isShown()  ) {
				row.child( render(), 'child' ).show();
				$( row.node() ).addClass( 'parent' );

				return true;
			}
			else {
				row.child( false );
				$( row.node() ).removeClass( 'parent' );

				return false;
			}
		}
	},

	childRowImmediate: function ( row, update, render ) {
		if ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {
			// User interaction and the row is show, or nothing to show
			row.child( false );
			$( row.node() ).removeClass( 'parent' );

			return false;
		}
		else {
			// Display
			row.child( render(), 'child' ).show();
			$( row.node() ).addClass( 'parent' );

			return true;
		}
	},

	// This is a wrapper so the modal options for Bootstrap and jQuery UI can
	// have options passed into them. This specific one doesn't need to be a
	// function but it is for consistency in the `modal` name
	modal: function ( options ) {
		return function ( row, update, render ) {
			if ( ! update ) {
				// Show a modal
				var close = function () {
					modal.remove(); // will tidy events for us
					$(document).off( 'keypress.dtr' );
				};

				var modal = $('<div class="dtr-modal"/>')
					.append( $('<div class="dtr-modal-display"/>')
						.append( $('<div class="dtr-modal-content"/>')
							.append( render() )
						)
						.append( $('<div class="dtr-modal-close">&times;</div>' )
							.click( function () {
								close();
							} )
						)
					)
					.append( $('<div class="dtr-modal-background"/>')
						.click( function () {
							close();
						} )
					)
					.appendTo( 'body' );

				$(document).on( 'keyup.dtr', function (e) {
					if ( e.keyCode === 27 ) {
						e.stopPropagation();

						close();
					}
				} );
			}
			else {
				$('div.dtr-modal-content')
					.empty()
					.append( render() );
			}

			if ( options && options.header ) {
				$('div.dtr-modal-content').prepend(
					'<h2>'+options.header( row )+'</h2>'
				);
			}
		};
	}
};


/**
 * Responsive default settings for initialisation
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.defaults = {
	/**
	 * List of breakpoints for the instance. Note that this means that each
	 * instance can have its own breakpoints. Additionally, the breakpoints
	 * cannot be changed once an instance has been creased.
	 *
	 * @type {Array}
	 * @default Takes the value of `Responsive.breakpoints`
	 */
	breakpoints: Responsive.breakpoints,

	/**
	 * Enable / disable auto hiding calculations. It can help to increase
	 * performance slightly if you disable this option, but all columns would
	 * need to have breakpoint classes assigned to them
	 *
	 * @type {Boolean}
	 * @default  `true`
	 */
	auto: true,

	/**
	 * Details control. If given as a string value, the `type` property of the
	 * default object is set to that value, and the defaults used for the rest
	 * of the object - this is for ease of implementation.
	 *
	 * The object consists of the following properties:
	 *
	 * * `display` - A function that is used to show and hide the hidden details
	 * * `renderer` - function that is called for display of the child row data.
	 *   The default function will show the data from the hidden columns
	 * * `target` - Used as the selector for what objects to attach the child
	 *   open / close to
	 * * `type` - `false` to disable the details display, `inline` or `column`
	 *   for the two control types
	 *
	 * @type {Object|string}
	 */
	details: {
		display: Responsive.display.childRow,

		renderer: function ( api, rowIdx, columns ) {
			var data = $.map( columns, function ( col, i ) {
				return col.hidden ?
					'<li data-dtr-index="'+col.columnIndex+'" data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
						'<span class="dtr-title">'+
							col.title+
						'</span> '+
						'<span class="dtr-data">'+
							col.data+
						'</span>'+
					'</li>' :
					'';
			} ).join('');

			return data ?
				$('<ul data-dtr-index="'+rowIdx+'"/>').append( data ) :
				false;
		},

		target: 0,

		type: 'inline'
	},

	/**
	 * Orthogonal data request option. This is used to define the data type
	 * requested when Responsive gets the data to show in the child row.
	 *
	 * @type {String}
	 */
	orthogonal: 'display'
};


/*
 * API
 */
var Api = $.fn.dataTable.Api;

// Doesn't do anything - work around for a bug in DT... Not documented
Api.register( 'responsive()', function () {
	return this;
} );

Api.register( 'responsive.index()', function ( li ) {
	li = $(li);

	return {
		column: li.data('dtr-index'),
		row:    li.parent().data('dtr-index')
	};
} );

Api.register( 'responsive.rebuild()', function () {
	return this.iterator( 'table', function ( ctx ) {
		if ( ctx._responsive ) {
			ctx._responsive._classLogic();
		}
	} );
} );

Api.register( 'responsive.recalc()', function () {
	return this.iterator( 'table', function ( ctx ) {
		if ( ctx._responsive ) {
			ctx._responsive._resizeAuto();
			ctx._responsive._resize();
		}
	} );
} );

Api.register( 'responsive.hasHidden()', function () {
	var ctx = this.context[0];

	return ctx._responsive ?
		$.inArray( false, ctx._responsive.s.current ) !== -1 :
		false;
} );


/**
 * Version information
 *
 * @name Responsive.version
 * @static
 */
Responsive.version = '2.0.2';


$.fn.dataTable.Responsive = Responsive;
$.fn.DataTable.Responsive = Responsive;

// Attach a listener to the document which listens for DataTables initialisation
// events so we can automatically initialise
$(document).on( 'preInit.dt.dtr', function (e, settings, json) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	if ( $(settings.nTable).hasClass( 'responsive' ) ||
		 $(settings.nTable).hasClass( 'dt-responsive' ) ||
		 settings.oInit.responsive ||
		 DataTable.defaults.responsive
	) {
		var init = settings.oInit.responsive;

		if ( init !== false ) {
			new Responsive( settings, $.isPlainObject( init ) ? init : {}  );
		}
	}
} );


return Responsive;
}));
/*! FixedHeader 3.1.5
 * ©2009-2018 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     FixedHeader
 * @description Fix a table's header or footer, so it is always visible while
 *              scrolling
 * @version     3.1.5
 * @file        dataTables.fixedHeader.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 * @copyright   Copyright 2009-2018 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license/mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var _instCounter = 0;

var FixedHeader = function ( dt, config ) {
	// Sanity check - you just know it will happen
	if ( ! (this instanceof FixedHeader) ) {
		throw "FixedHeader must be initialised with the 'new' keyword.";
	}

	// Allow a boolean true for defaults
	if ( config === true ) {
		config = {};
	}

	dt = new DataTable.Api( dt );

	this.c = $.extend( true, {}, FixedHeader.defaults, config );

	this.s = {
		dt: dt,
		position: {
			theadTop: 0,
			tbodyTop: 0,
			tfootTop: 0,
			tfootBottom: 0,
			width: 0,
			left: 0,
			tfootHeight: 0,
			theadHeight: 0,
			windowHeight: $(window).height(),
			visible: true
		},
		headerMode: null,
		footerMode: null,
		autoWidth: dt.settings()[0].oFeatures.bAutoWidth,
		namespace: '.dtfc'+(_instCounter++),
		scrollLeft: {
			header: -1,
			footer: -1
		},
		enable: true
	};

	this.dom = {
		floatingHeader: null,
		thead: $(dt.table().header()),
		tbody: $(dt.table().body()),
		tfoot: $(dt.table().footer()),
		header: {
			host: null,
			floating: null,
			placeholder: null
		},
		footer: {
			host: null,
			floating: null,
			placeholder: null
		}
	};

	this.dom.header.host = this.dom.thead.parent();
	this.dom.footer.host = this.dom.tfoot.parent();

	var dtSettings = dt.settings()[0];
	if ( dtSettings._fixedHeader ) {
		throw "FixedHeader already initialised on table "+dtSettings.nTable.id;
	}

	dtSettings._fixedHeader = this;

	this._constructor();
};


/*
 * Variable: FixedHeader
 * Purpose:  Prototype for FixedHeader
 * Scope:    global
 */
$.extend( FixedHeader.prototype, {
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * API methods
	 */
	
	/**
	 * Enable / disable the fixed elements
	 *
	 * @param  {boolean} enable `true` to enable, `false` to disable
	 */
	enable: function ( enable )
	{
		this.s.enable = enable;

		if ( this.c.header ) {
			this._modeChange( 'in-place', 'header', true );
		}

		if ( this.c.footer && this.dom.tfoot.length ) {
			this._modeChange( 'in-place', 'footer', true );
		}

		this.update();
	},
	
	/**
	 * Set header offset 
	 *
	 * @param  {int} new value for headerOffset
	 */
	headerOffset: function ( offset )
	{
		if ( offset !== undefined ) {
			this.c.headerOffset = offset;
			this.update();
		}

		return this.c.headerOffset;
	},
	
	/**
	 * Set footer offset
	 *
	 * @param  {int} new value for footerOffset
	 */
	footerOffset: function ( offset )
	{
		if ( offset !== undefined ) {
			this.c.footerOffset = offset;
			this.update();
		}

		return this.c.footerOffset;
	},

	
	/**
	 * Recalculate the position of the fixed elements and force them into place
	 */
	update: function ()
	{
		this._positions();
		this._scroll( true );
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Constructor
	 */
	
	/**
	 * FixedHeader constructor - adding the required event listeners and
	 * simple initialisation
	 *
	 * @private
	 */
	_constructor: function ()
	{
		var that = this;
		var dt = this.s.dt;

		$(window)
			.on( 'scroll'+this.s.namespace, function () {
				that._scroll();
			} )
			.on( 'resize'+this.s.namespace, DataTable.util.throttle( function () {
				that.s.position.windowHeight = $(window).height();
				that.update();
			}, 50 ) );

		var autoHeader = $('.fh-fixedHeader');
		if ( ! this.c.headerOffset && autoHeader.length ) {
			this.c.headerOffset = autoHeader.outerHeight();
		}

		var autoFooter = $('.fh-fixedFooter');
		if ( ! this.c.footerOffset && autoFooter.length ) {
			this.c.footerOffset = autoFooter.outerHeight();
		}

		dt.on( 'column-reorder.dt.dtfc column-visibility.dt.dtfc draw.dt.dtfc column-sizing.dt.dtfc responsive-display.dt.dtfc', function () {
			that.update();
		} );

		dt.on( 'destroy.dtfc', function () {
			if ( that.c.header ) {
				that._modeChange( 'in-place', 'header', true );
			}

			if ( that.c.footer && that.dom.tfoot.length ) {
				that._modeChange( 'in-place', 'footer', true );
			}

			dt.off( '.dtfc' );
			$(window).off( that.s.namespace );
		} );

		this._positions();
		this._scroll();
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Private methods
	 */

	/**
	 * Clone a fixed item to act as a place holder for the original element
	 * which is moved into a clone of the table element, and moved around the
	 * document to give the fixed effect.
	 *
	 * @param  {string}  item  'header' or 'footer'
	 * @param  {boolean} force Force the clone to happen, or allow automatic
	 *   decision (reuse existing if available)
	 * @private
	 */
	_clone: function ( item, force )
	{
		var dt = this.s.dt;
		var itemDom = this.dom[ item ];
		var itemElement = item === 'header' ?
			this.dom.thead :
			this.dom.tfoot;

		if ( ! force && itemDom.floating ) {
			// existing floating element - reuse it
			itemDom.floating.removeClass( 'fixedHeader-floating fixedHeader-locked' );
		}
		else {
			if ( itemDom.floating ) {
				itemDom.placeholder.remove();
				this._unsize( item );
				itemDom.floating.children().detach();
				itemDom.floating.remove();
			}

			itemDom.floating = $( dt.table().node().cloneNode( false ) )
				.css( 'table-layout', 'fixed' )
				.attr( 'aria-hidden', 'true' )
				.removeAttr( 'id' )
				.append( itemElement )
				.appendTo( 'body' );

			// Insert a fake thead/tfoot into the DataTable to stop it jumping around
			itemDom.placeholder = itemElement.clone( false )
			itemDom.placeholder
				.find( '*[id]' )
				.removeAttr( 'id' );

			itemDom.host.prepend( itemDom.placeholder );

			// Clone widths
			this._matchWidths( itemDom.placeholder, itemDom.floating );
		}
	},

	/**
	 * Copy widths from the cells in one element to another. This is required
	 * for the footer as the footer in the main table takes its sizes from the
	 * header columns. That isn't present in the footer so to have it still
	 * align correctly, the sizes need to be copied over. It is also required
	 * for the header when auto width is not enabled
	 *
	 * @param  {jQuery} from Copy widths from
	 * @param  {jQuery} to   Copy widths to
	 * @private
	 */
	_matchWidths: function ( from, to ) {
		var get = function ( name ) {
			return $(name, from)
				.map( function () {
					return $(this).width();
				} ).toArray();
		};

		var set = function ( name, toWidths ) {
			$(name, to).each( function ( i ) {
				$(this).css( {
					width: toWidths[i],
					minWidth: toWidths[i]
				} );
			} );
		};

		var thWidths = get( 'th' );
		var tdWidths = get( 'td' );

		set( 'th', thWidths );
		set( 'td', tdWidths );
	},

	/**
	 * Remove assigned widths from the cells in an element. This is required
	 * when inserting the footer back into the main table so the size is defined
	 * by the header columns and also when auto width is disabled in the
	 * DataTable.
	 *
	 * @param  {string} item The `header` or `footer`
	 * @private
	 */
	_unsize: function ( item ) {
		var el = this.dom[ item ].floating;

		if ( el && (item === 'footer' || (item === 'header' && ! this.s.autoWidth)) ) {
			$('th, td', el).css( {
				width: '',
				minWidth: ''
			} );
		}
		else if ( el && item === 'header' ) {
			$('th, td', el).css( 'min-width', '' );
		}
	},

	/**
	 * Reposition the floating elements to take account of horizontal page
	 * scroll
	 *
	 * @param  {string} item       The `header` or `footer`
	 * @param  {int}    scrollLeft Document scrollLeft
	 * @private
	 */
	_horizontal: function ( item, scrollLeft )
	{
		var itemDom = this.dom[ item ];
		var position = this.s.position;
		var lastScrollLeft = this.s.scrollLeft;

		if ( itemDom.floating && lastScrollLeft[ item ] !== scrollLeft ) {
			itemDom.floating.css( 'left', position.left - scrollLeft );

			lastScrollLeft[ item ] = scrollLeft;
		}
	},

	/**
	 * Change from one display mode to another. Each fixed item can be in one
	 * of:
	 *
	 * * `in-place` - In the main DataTable
	 * * `in` - Floating over the DataTable
	 * * `below` - (Header only) Fixed to the bottom of the table body
	 * * `above` - (Footer only) Fixed to the top of the table body
	 * 
	 * @param  {string}  mode        Mode that the item should be shown in
	 * @param  {string}  item        'header' or 'footer'
	 * @param  {boolean} forceChange Force a redraw of the mode, even if already
	 *     in that mode.
	 * @private
	 */
	_modeChange: function ( mode, item, forceChange )
	{
		var dt = this.s.dt;
		var itemDom = this.dom[ item ];
		var position = this.s.position;

		// Record focus. Browser's will cause input elements to loose focus if
		// they are inserted else where in the doc
		var tablePart = this.dom[ item==='footer' ? 'tfoot' : 'thead' ];
		var focus = $.contains( tablePart[0], document.activeElement ) ?
			document.activeElement :
			null;
		
		if ( focus ) {
			focus.blur();
		}

		if ( mode === 'in-place' ) {
			// Insert the header back into the table's real header
			if ( itemDom.placeholder ) {
				itemDom.placeholder.remove();
				itemDom.placeholder = null;
			}

			this._unsize( item );

			if ( item === 'header' ) {
				itemDom.host.prepend( tablePart );
			}
			else {
				itemDom.host.append( tablePart );
			}

			if ( itemDom.floating ) {
				itemDom.floating.remove();
				itemDom.floating = null;
			}
		}
		else if ( mode === 'in' ) {
			// Remove the header from the read header and insert into a fixed
			// positioned floating table clone
			this._clone( item, forceChange );

			itemDom.floating
				.addClass( 'fixedHeader-floating' )
				.css( item === 'header' ? 'top' : 'bottom', this.c[item+'Offset'] )
				.css( 'left', position.left+'px' )
				.css( 'width', position.width+'px' );

			if ( item === 'footer' ) {
				itemDom.floating.css( 'top', '' );
			}
		}
		else if ( mode === 'below' ) { // only used for the header
			// Fix the position of the floating header at base of the table body
			this._clone( item, forceChange );

			itemDom.floating
				.addClass( 'fixedHeader-locked' )
				.css( 'top', position.tfootTop - position.theadHeight )
				.css( 'left', position.left+'px' )
				.css( 'width', position.width+'px' );
		}
		else if ( mode === 'above' ) { // only used for the footer
			// Fix the position of the floating footer at top of the table body
			this._clone( item, forceChange );

			itemDom.floating
				.addClass( 'fixedHeader-locked' )
				.css( 'top', position.tbodyTop )
				.css( 'left', position.left+'px' )
				.css( 'width', position.width+'px' );
		}

		// Restore focus if it was lost
		if ( focus && focus !== document.activeElement ) {
			setTimeout( function () {
				focus.focus();
			}, 10 );
		}

		this.s.scrollLeft.header = -1;
		this.s.scrollLeft.footer = -1;
		this.s[item+'Mode'] = mode;
	},

	/**
	 * Cache the positional information that is required for the mode
	 * calculations that FixedHeader performs.
	 *
	 * @private
	 */
	_positions: function ()
	{
		var dt = this.s.dt;
		var table = dt.table();
		var position = this.s.position;
		var dom = this.dom;
		var tableNode = $(table.node());

		// Need to use the header and footer that are in the main table,
		// regardless of if they are clones, since they hold the positions we
		// want to measure from
		var thead = tableNode.children('thead');
		var tfoot = tableNode.children('tfoot');
		var tbody = dom.tbody;

		position.visible = tableNode.is(':visible');
		position.width = tableNode.outerWidth();
		position.left = tableNode.offset().left;
		position.theadTop = thead.offset().top;
		position.tbodyTop = tbody.offset().top;
		position.theadHeight = position.tbodyTop - position.theadTop;

		if ( tfoot.length ) {
			position.tfootTop = tfoot.offset().top;
			position.tfootBottom = position.tfootTop + tfoot.outerHeight();
			position.tfootHeight = position.tfootBottom - position.tfootTop;
		}
		else {
			position.tfootTop = position.tbodyTop + tbody.outerHeight();
			position.tfootBottom = position.tfootTop;
			position.tfootHeight = position.tfootTop;
		}
	},


	/**
	 * Mode calculation - determine what mode the fixed items should be placed
	 * into.
	 *
	 * @param  {boolean} forceChange Force a redraw of the mode, even if already
	 *     in that mode.
	 * @private
	 */
	_scroll: function ( forceChange )
	{
		var windowTop = $(document).scrollTop();
		var windowLeft = $(document).scrollLeft();
		var position = this.s.position;
		var headerMode, footerMode;

		if ( ! this.s.enable ) {
			return;
		}

		if ( this.c.header ) {
			if ( ! position.visible || windowTop <= position.theadTop - this.c.headerOffset ) {
				headerMode = 'in-place';
			}
			else if ( windowTop <= position.tfootTop - position.theadHeight - this.c.headerOffset ) {
				headerMode = 'in';
			}
			else {
				headerMode = 'below';
			}

			if ( forceChange || headerMode !== this.s.headerMode ) {
				this._modeChange( headerMode, 'header', forceChange );
			}

			this._horizontal( 'header', windowLeft );
		}

		if ( this.c.footer && this.dom.tfoot.length ) {
			if ( ! position.visible || windowTop + position.windowHeight >= position.tfootBottom + this.c.footerOffset ) {
				footerMode = 'in-place';
			}
			else if ( position.windowHeight + windowTop > position.tbodyTop + position.tfootHeight + this.c.footerOffset ) {
				footerMode = 'in';
			}
			else {
				footerMode = 'above';
			}

			if ( forceChange || footerMode !== this.s.footerMode ) {
				this._modeChange( footerMode, 'footer', forceChange );
			}

			this._horizontal( 'footer', windowLeft );
		}
	}
} );


/**
 * Version
 * @type {String}
 * @static
 */
FixedHeader.version = "3.1.5";

/**
 * Defaults
 * @type {Object}
 * @static
 */
FixedHeader.defaults = {
	header: true,
	footer: false,
	headerOffset: 0,
	footerOffset: 0
};


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables interfaces
 */

// Attach for constructor access
$.fn.dataTable.FixedHeader = FixedHeader;
$.fn.DataTable.FixedHeader = FixedHeader;


// DataTables creation - check if the FixedHeader option has been defined on the
// table and if so, initialise
$(document).on( 'init.dt.dtfh', function (e, settings, json) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	var init = settings.oInit.fixedHeader;
	var defaults = DataTable.defaults.fixedHeader;

	if ( (init || defaults) && ! settings._fixedHeader ) {
		var opts = $.extend( {}, defaults, init );

		if ( init !== false ) {
			new FixedHeader( settings, opts );
		}
	}
} );

// DataTables API methods
DataTable.Api.register( 'fixedHeader()', function () {} );

DataTable.Api.register( 'fixedHeader.adjust()', function () {
	return this.iterator( 'table', function ( ctx ) {
		var fh = ctx._fixedHeader;

		if ( fh ) {
			fh.update();
		}
	} );
} );

DataTable.Api.register( 'fixedHeader.enable()', function ( flag ) {
	return this.iterator( 'table', function ( ctx ) {
		var fh = ctx._fixedHeader;

		flag = ( flag !== undefined ? flag : true );
		if ( fh && flag !== fh.s.enable ) {
			fh.enable( flag );
		}
	} );
} );

DataTable.Api.register( 'fixedHeader.disable()', function ( ) {
	return this.iterator( 'table', function ( ctx ) {
		var fh = ctx._fixedHeader;

		if ( fh && fh.s.enable ) {
			fh.enable( false );
		}
	} );
} );

$.each( ['header', 'footer'], function ( i, el ) {
	DataTable.Api.register( 'fixedHeader.'+el+'Offset()', function ( offset ) {
		var ctx = this.context;

		if ( offset === undefined ) {
			return ctx.length && ctx[0]._fixedHeader ?
				ctx[0]._fixedHeader[el +'Offset']() :
				undefined;
		}

		return this.iterator( 'table', function ( ctx ) {
			var fh = ctx._fixedHeader;

			if ( fh ) {
				fh[ el +'Offset' ]( offset );
			}
		} );
	} );
} );


return FixedHeader;
}));
/**
 * This function will restore the order in which data was read into a DataTable
 * (for example from an HTML source). Although you can set `dt-api order()` to
 * be an empty array (`[]`) in order to prevent sorting during initialisation,
 * it can sometimes be useful to restore the original order after sorting has
 * already occurred - which is exactly what this function does.
 *
 * @name order.neutral()
 * @summary Change ordering of the table to its data load order
 * @author [Allan Jardine](http://datatables.net)
 * @requires DataTables 1.10+
 *
 * @returns {DataTables.Api} DataTables API instance
 *
 * @example
 *    // Return table to the loaded data order
 *    table.order.neutral().draw();
 */

$.fn.dataTable.Api.register( 'order.neutral()', function () {
	return this.iterator( 'table', function ( s ) {
		s.aaSorting.length = 0;
		s.aiDisplay.sort( function (a,b) {
			return a-b;
		} );
		s.aiDisplayMaster.sort( function (a,b) {
			return a-b;
		} );
	} );
} );

// Dirty Forms
/*!
Dirty Forms jQuery Plugin | v2.0.0 | github.com/snikch/jquery.dirtyforms
(c) 2010-2015 Mal Curtis
License MIT
*/

/*<iife_head>*/
// Support for UMD: https://github.com/umdjs/umd/blob/master/jqueryPluginCommonjs.js
// See: http://blog.npmjs.org/post/112712169830/making-your-jquery-plugin-work-better-with-npm for details.
(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery', 'window', 'document'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // Node/CommonJS
        module.exports = factory(require('jquery'), window, document);
    } else {
        // Browser globals
        factory(jQuery, window, document);
    }
}(function ($, window, document, undefined) {
    /*</iife_head>*/
    // Can't use ECMAScript 5's strict mode because several apps 
    // including ASP.NET trace the stack via arguments.caller.callee 
    // and Firefox dies if you try to trace through "use strict" call chains. 
    // See jQuery issue (#13335)
    // Support: Firefox 18+
    //"use strict";

    if (!$.fn.on) {
        // Patch jQuery 1.4.2 - 1.7 with an on function (that uses delegate).
        $.fn.on = function (events, selector, data, handler) {
            return this.delegate(selector, events, data, handler);
        };
    }

    $.fn.dirtyForms = function (method) {
        // Method calling logic
        if (methods[method]) {
            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || !method) {
            return methods.init.apply(this, arguments);
        } else {
            $.error('Method ' + method + ' does not exist on jQuery.dirtyForms');
        }
    };

    // Public Element methods ( $('form').dirtyForms('methodName', args) )
    var methods = {
        init: function (options) {
            var data = {};

            if (!state.initialized) {
                // Override any default options
                $.extend(true, $.DirtyForms, options);

                $(document).trigger('bind.dirtyforms', [events]);
                events.bind(window, document, data);

                state.initialized = true;
            }

            this.filter('form').not(':dirtylistening').each(function () {
                var $form = $(this);
                dirtylog('Adding form ' + $form.attr('id') + ' to forms to watch');

                // Store original values of the fields
                $form.find($.DirtyForms.fieldSelector).each(function () {
                    storeOriginalValue($(this));
                });

                $form.trigger('scan.dirtyforms');
                events.bindForm($form, data);
            });
            return this;
        },
        // Returns true if any of the selected elements or their children are dirty
        isDirty: function (excludeHelpers) {
            var ignoreSelector = getIgnoreSelector(),
                dirtyClass = $.DirtyForms.dirtyClass,
                isDirty = false;

            this.each(function (index) {
                var $node = $(this),
                    ignored = isFieldIgnored($node, ignoreSelector);

                if ($node.hasClass(dirtyClass) && !ignored) {
                    isDirty = true;
                    // Exit out of the .each() function
                    return false;
                }

                // Check any descendant nodes (if this is a container element)
                $node.find('.' + dirtyClass).each(function () {
                    if (!isFieldIgnored($(this), ignoreSelector)) {
                        isDirty = true;
                        // Exit out of the .each() function
                        return false;
                    }
                });
                // Exit out of the .each() function
                if (isDirty) return false;

                if (!ignored && !excludeHelpers) {
                    // Test helpers for this node.
                    $.each($.DirtyForms.helpers, function (i, helper) {
                        if (helper.isDirty && helper.isDirty($node, index)) {
                            isDirty = true;
                            // Exit out of the .each() function
                            return false;
                        }
                    });

                    // Exit out of the .each() function
                    if (isDirty) return false;
                }
            });

            return isDirty;
        },
        // Marks the element(s) and any helpers within the element not dirty.
        // If all of the fields in a form are marked not dirty, the form itself will be marked not dirty even
        // if it is not included in the selector. Also resets original values to the current state - 
        // essentially "forgetting" the node or its descendants are dirty.
        setClean: function (excludeIgnored, excludeHelpers) {
            dirtylog('setClean called');

            var doSetClean = function () {
                var $field = $(this);

                // Reset by storing the original value again
                storeOriginalValue($field);

                // Remove the dirty class
                setDirtyStatus($field, false);
            };

            elementsInRange(this, $.DirtyForms.fieldSelector, excludeIgnored)
                .each(doSetClean)
                .parents('form').trigger('setclean.dirtyforms', [excludeIgnored]);

            if (excludeHelpers) return this;
            return fireHelperMethod(this, 'setClean', excludeIgnored, getIgnoreSelector());
        },
        // Scans the selected elements and descendants for any new fields and stores their original values.
        // Ignores any original values that had been set previously. Also resets the dirty status of all fields
        // whose ignore status has changed since the last scan.
        rescan: function (excludeIgnored, excludeHelpers) {
            dirtylog('rescan called');

            var doRescan = function () {
                var $field = $(this);

                // Skip previously added fields
                if (!hasOriginalValue($field)) {
                    // Store the original value
                    storeOriginalValue($field);
                }

                // Set the dirty status
                setDirtyStatus($field, isFieldDirty($field));
            };

            elementsInRange(this, $.DirtyForms.fieldSelector, excludeIgnored)
                .each(doRescan)
                .parents('form').trigger('rescan.dirtyforms', [excludeIgnored]);

            if (excludeHelpers) return this;
            return fireHelperMethod(this, 'rescan', excludeIgnored, getIgnoreSelector());
        }
    };

    // Custom selectors $('form:dirty')
    $.extend($.expr[":"], {
        dirty: function (element) {
            var $element = $(element);
            return $element.hasClass($.DirtyForms.dirtyClass) && !$element.is(':dirtyignored');
        },
        dirtylistening: function (element) {
            return $(element).hasClass($.DirtyForms.listeningClass);
        },
        dirtyignored: function (element) {
            return isFieldIgnored($(element), false);
        }
    });

    // Public General Plugin properties and methods $.DirtyForms
    $.DirtyForms = {
        message: "You've made changes on this page which aren't saved. If you leave you will lose these changes.",
        dirtyClass: 'dirty',
        listeningClass: 'dirtylisten',
        ignoreClass: 'dirtyignore',
        ignoreSelector: '',
        // exclude all HTML 4 except checkbox, option, text and password, but include HTML 5 except search
        fieldSelector: "input:not([type='button'],[type='image'],[type='submit']," +
            "[type='reset'],[type='file'],[type='search']),select,textarea",
        /*<log>*/
        debug: false,
        dirtylog: function (msg) {
            dirtylog(msg);
        },
        /*</log>*/
        helpers: [],
        dialog: false
    };

    // Private State Management
    var state = {
        initialized: false,
        formStash: false,
        dialogStash: false,
        deciding: false,
        decidingEvent: false
    };

    // Dialog Decision Management
    var choice;

    var bindKeys = function (ev) {
        if (ev.data.bindEscKey && ev.which == 27 || ev.data.bindEnterKey && ev.which == 13) {
            return doCommit(ev, false);
        }
    };

    var bindDialog = function (choice) {
        var staySelector = choice.staySelector,
            proceedSelector = choice.proceedSelector;

        if (staySelector !== '') {
            $(staySelector).unbind('click', doCommit)
                             .click(doCommit);
        }
        if (proceedSelector !== '') {
            $(proceedSelector).unbind('click', doProceed)
                               .click(doProceed);
        }
        if (choice.bindEscKey || choice.bindEnterKey) {
            $(document).unbind('keydown', bindKeys)
                       .keydown(choice, bindKeys);
        }
    };

    var callDialogClose = function (proceeding, unstashing) {
        if ($.isFunction($.DirtyForms.dialog.close)) {
            dirtylog('Calling dialog close');
            $.DirtyForms.dialog.close(proceeding, unstashing);
        }
    };

    var doProceed = function (ev) {
        return doCommit(ev, true);
    };

    var doCommit = function (ev, proceeding) {
        if (!state.deciding) return;
        ev.preventDefault();

        if (proceeding === true) {
            var refireEvent = state.decidingEvent;
            $(document).trigger('proceed.dirtyforms', [refireEvent]);
            events.clearUnload(); // fix for chrome/safari
            callDialogClose(proceeding, false);
            refire(refireEvent);
        } else {
            $(document).trigger('stay.dirtyforms');
            var isUnstashing = $.DirtyForms.dialog !== false && state.dialogStash !== false && $.isFunction($.DirtyForms.dialog.unstash);
            callDialogClose(proceeding, isUnstashing);
            if (isUnstashing) {
                dirtylog('Refiring the dialog with stashed content');
                $.DirtyForms.dialog.unstash(state.dialogStash, ev);
            }
            $(document).trigger('afterstay.dirtyforms');
        }

        state.deciding = state.decidingEvent = state.dialogStash = state.formStash = false;
        return false;
    };

    // Event management
    var events = {
        bind: function (window, document, data) {
            $(window).bind('beforeunload', data, events.onBeforeUnload);
            $(document).on('click', 'a:not([target="_blank"])', data, events.onAnchorClick)
                       .on('submit', 'form', data, events.onSubmit);
        },
        bindForm: function ($form, data) {
            var dirtyForms = $.DirtyForms;

            // Test whether we are dealing with IE < 10
            var isIE8_9 = ('onpropertychange' in document.createElement('input'));
            var inputEvents = 'change input' + (isIE8_9 ? ' keyup selectionchange cut paste' : '');
            $form.addClass(dirtyForms.listeningClass)
                 .on('focus keydown', dirtyForms.fieldSelector, data, events.onFocus)
                 .on(inputEvents, dirtyForms.fieldSelector, data, events.onFieldChange)
                 .bind('reset', data, events.onReset);
        },
        // For any fields added after the form was initialized, store the value when focused.
        onFocus: function (ev) {
            var $field = $(ev.target);
            if (!hasOriginalValue($field)) {
                storeOriginalValue($field);
            }
        },
        onFieldChange: function (ev) {
            var $field = $(ev.target);
            if (ev.type !== 'change') {
                delay(function () { setFieldStatus($field); }, 100);
            } else {
                setFieldStatus($field);
            }
        },
        onReset: function (ev) {
            var $form = $(ev.target).closest('form');
            // Need a delay here because reset is called before the state of the form is reset.
            setTimeout(function () { $form.dirtyForms('setClean'); }, 100);
        },
        onAnchorClick: function (ev) {
            bindFn(ev);
        },
        onSubmit: function (ev) {
            bindFn(ev);
        },
        onBeforeUnload: function (ev) {
            var result = bindFn(ev);

            if (result && state.doubleunloadfix !== true) {
                dirtylog('Before unload will be called, resetting');
                state.deciding = false;
            }

            state.doubleunloadfix = true;
            setTimeout(function () { state.doubleunloadfix = false; }, 200);

            // Only return the result if it is a string, otherwise don't return anything.
            if (typeof result === 'string') {
                // For IE and Firefox prior to version 4, set the returnValue.
                ev.returnValue = result;
                return result;
            }
        },
        onRefireClick: function (ev) {
            var event = new $.Event('click');
            $(ev.target).trigger(event);
            if (!event.isDefaultPrevented()) {
                events.onRefireAnchorClick(ev);
            }
        },
        onRefireAnchorClick: function (ev) {
            var href = $(ev.target).closest('a[href]').attr('href');
            if (href !== undefined) {
                dirtylog('Sending location to ' + href);
                window.location.href = href;
            }
        },
        clearUnload: function () {
            // I'd like to just be able to unbind this but there seems
            // to be a bug in jQuery which doesn't unbind onbeforeunload
            dirtylog('Clearing the beforeunload event');
            $(window).unbind('beforeunload', events.onBeforeUnload);
            window.onbeforeunload = null;
            $(document).trigger('beforeunload.dirtyforms');
        }
    };

    var elementsInRange = function ($this, selector, excludeIgnored) {
        var $elements = $this.filter(selector).add($this.find(selector));
        if (excludeIgnored) {
            $elements = $elements.not(':dirtyignored');
        }
        return $elements;
    };

    var fireHelperMethod = function ($this, method, excludeIgnored, ignoreSelector) {
        return $this.each(function (index) {
            var $node = $(this);

            if (!excludeIgnored || !isFieldIgnored($node, ignoreSelector)) {
                $.each($.DirtyForms.helpers, function (i, helper) {
                    if (helper[method]) { helper[method]($node, index, excludeIgnored); }
                });
            }
        });
    };

    var getFieldValue = function ($field) {
        var value;
        if ($field.is('select')) {
            value = '';
            $field.find('option').each(function () {
                var $option = $(this);
                if ($option.is(':selected')) {
                    if (value.length > 0) { value += ','; }
                    value += $option.val();
                }
            });
        } else if ($field.is(":checkbox,:radio")) {
            value = $field.is(':checked');
        } else {
            value = $field.val();
        }

        return value;
    };

    var storeOriginalValue = function ($field) {
        dirtylog('Storing original value for ' + $field.attr('name'));
        $field.data('df-orig', getFieldValue($field));
        var isEmpty = ($field.data('df-orig') === undefined);
        $field.data('df-empty', isEmpty);
    };

    var hasOriginalValue = function ($field) {
        return ($field.data('df-orig') !== undefined || $field.data('df-empty') === true);
    };

    var getIgnoreSelector = function () {
        var dirtyForms = $.DirtyForms,
            result = dirtyForms.ignoreSelector;
        $.each(dirtyForms.helpers, function (key, obj) {
            if ('ignoreSelector' in obj) {
                if (result.length > 0) { result += ','; }
                result += obj.ignoreSelector;
            }
        });
        return result;
    };

    var isFieldIgnored = function ($field, ignoreSelector) {
        if (!ignoreSelector) {
            ignoreSelector = getIgnoreSelector();
        }
        return $field.is(ignoreSelector) || $field.closest('.' + $.DirtyForms.ignoreClass).length > 0;
    };

    var isFieldDirty = function ($field, ignoreSelector) {
        if (!hasOriginalValue($field) || isFieldIgnored($field, ignoreSelector)) return false;
        return (getFieldValue($field) != $field.data('df-orig'));
    };

    var setFieldStatus = function ($field, ignoreSelector) {
        if (isFieldIgnored($field, ignoreSelector)) return;

        // Option groups are a special case because they change more than the current element.
        if ($field.is(':radio[name]')) {
            var name = $field.attr('name'),
                $form = $field.parents('form');

            $form.find(":radio[name='" + name + "']").each(function () {
                var $radio = $(this);
                setDirtyStatus($radio, isFieldDirty($radio, ignoreSelector));
            });
        } else {
            setDirtyStatus($field, isFieldDirty($field, ignoreSelector));
        }
    };

    var setDirtyStatus = function ($field, isDirty) {
        dirtylog('Setting dirty status to ' + isDirty + ' on field ' + $field.attr('id'));
        var dirtyClass = $.DirtyForms.dirtyClass,
            $form = $field.parents('form');

        // Mark the field dirty/clean
        $field.toggleClass(dirtyClass, isDirty);
        var changed = (isDirty !== ($form.hasClass(dirtyClass) && $form.find(':dirty').length === 0));

        if (changed) {
            dirtylog('Setting dirty status to ' + isDirty + ' on form ' + $form.attr('id'));
            $form.toggleClass(dirtyClass, isDirty);

            if (isDirty) $form.trigger('dirty.dirtyforms');
            if (!isDirty) $form.trigger('clean.dirtyforms');
        }
    };

    // A delay to keep the key events from slowing down when changing the dirty status on the fly.
    var delay = (function () {
        var timer = 0;
        return function (callback, ms) {
            clearTimeout(timer);
            timer = setTimeout(callback, ms);
        };
    })();

    var bindFn = function (ev) {
        var $element = $(ev.target),
            eventType = ev.type,
            dirtyForms = $.DirtyForms;
        dirtylog('Entering: Leaving Event fired, type: ' + eventType + ', element: ' + ev.target + ', class: ' + $element.attr('class') + ' and id: ' + ev.target.id);

        // Important: Do this check before calling events.clearUnload()
        if (ev.isDefaultPrevented()) {
            dirtylog('Leaving: Event has been stopped elsewhere');
            return false;
        }

        if (eventType == 'beforeunload' && state.doubleunloadfix) {
            dirtylog('Skip this unload, Firefox bug triggers the unload event multiple times');
            state.doubleunloadfix = false;
            return false;
        }

        if ($element.is(':dirtyignored')) {
            dirtylog('Leaving: Element has ignore class or a descendant of an ignored element');
            events.clearUnload();
            return false;
        }

        if (state.deciding) {
            dirtylog('Leaving: Already in the deciding process');
            return false;
        }

        if (!$('form:dirtylistening').dirtyForms('isDirty')) {
            dirtylog('Leaving: Not dirty');
            events.clearUnload();
            return false;
        }

        if (eventType == 'submit' && $element.dirtyForms('isDirty')) {
            dirtylog('Leaving: Form submitted is a dirty form');
            events.clearUnload();
            return true;
        }

        // Callback for page access in current state
        $(document).trigger('defer.dirtyforms');

        if (eventType == 'beforeunload') {
            dirtylog('Returning to beforeunload browser handler with: ' + dirtyForms.message);
            return dirtyForms.message;
        }
        if (!dirtyForms.dialog) return;

        // Using the GUI dialog...
        ev.preventDefault();
        ev.stopImmediatePropagation();

        dirtylog('Setting deciding active');
        state.deciding = true;
        state.decidingEvent = ev;

        // Stash the dialog (with a form). This is done so it can be shown again via unstash().
        if ($.isFunction(dirtyForms.dialog.stash)) {
            dirtylog('Stashing dialog content');
            state.dialogStash = dirtyForms.dialog.stash();
            dirtylog('Dialog Stash: ' + state.dialogStash);
        }

        // Stash the form from the dialog. This is done so we can fire events on it if the user makes a proceed choice.
        var stashSelector = dirtyForms.dialog.stashSelector;
        if (typeof stashSelector === 'string' && $element.is('form') && $element.parents(stashSelector).length > 0) {
            dirtylog('Stashing form');
            state.formStash = $element.clone(true).hide();
        } else {
            state.formStash = false;
        }

        dirtylog('Deferring to the dialog');

        // Create a new choice object
        choice = {
            proceed: false,
            commit: function (ev) {
                return doCommit(ev, choice.proceed);
            },
            bindEscKey: true,
            bindEnterKey: false,
            proceedSelector: '',
            staySelector: ''
        };

        dirtyForms.dialog.open(choice, dirtyForms.message, dirtyForms.ignoreClass);
        bindDialog(choice);
    };

    var refire = function (ev) {
        if (ev.type === 'click') {
            dirtylog("Refiring click event");
            events.onRefireClick(ev);
        } else {
            dirtylog("Refiring " + ev.type + " event on " + ev.target);
            var target;
            if (state.formStash) {
                dirtylog('Appending stashed form to body');
                target = state.formStash;
                $('body').append(target);
            }
            else {
                target = $(ev.target).closest('form');
            }
            target.trigger(ev.type);
        }
    };

    /*<log>*/
    var dirtylog = function (msg) {
        if (!$.DirtyForms.debug) return;
        var hasFirebug = 'console' in window && 'firebug' in window.console,
            hasConsoleLog = 'console' in window && 'log' in window.console;
        msg = '[DirtyForms] ' + msg;
        if (hasFirebug) {
            console.log(msg);
        } else if (hasConsoleLog) {
            window.console.log(msg);
        } else {
            alert(msg);
        }
    };
    /*</log>*/

    /*<iife_foot>*/
}));
/*</iife_foot>*/
/*!
Bootstrap modal dialog (for jQuery Dirty Forms) | v2.0.0 | github.com/snikch/jquery.dirtyforms
(c) 2015 Shad Storhaug
License MIT
*/

/*<iife_head>*/
// Support for UMD: https://github.com/umdjs/umd/blob/master/jqueryPluginCommonjs.js
// See: http://blog.npmjs.org/post/112712169830/making-your-jquery-plugin-work-better-with-npm for details.
(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery', 'window', 'document'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // Node/CommonJS
        module.exports = factory(require('jquery'), window, document);
    } else {
        // Browser globals
        factory(jQuery, window, document);
    }
}(function ($, window, document, undefined) {
    /*</iife_head>*/
    // Can't use ECMAScript 5's strict mode because several apps 
    // including ASP.NET trace the stack via arguments.caller.callee 
    // and Firefox dies if you try to trace through "use strict" call chains. 
    // See jQuery issue (#13335)
    // Support: Firefox 18+
    //"use strict";

    var exclamationGlyphicon = '<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> ';

    $.DirtyForms.dialog = {
        // Custom properties and methods to allow overriding (may differ per dialog)
        title: exclamationGlyphicon + 'Are you sure you want to do that?',
        proceedButtonClass: 'dirty-proceed',
        proceedButtonText: 'Leave This Page',
        stayButtonClass: 'dirty-stay',
        stayButtonText: 'Stay Here',
        dialogID: 'dirty-dialog',
        titleID: 'dirty-title',
        messageClass: 'dirty-message',
        preMessageText: '',
        postMessageText: '',
        replaceText: true,

        // Typical Dirty Forms Properties and Methods
        open: function (choice, message) {
            // Look for a pre-existing element with the dialogID.
            var $dialog = $('#' + this.dialogID);

            // If the user already added a dialog with this ID, skip doing it here
            if ($dialog.length === 0) {
                // NOTE: Buttons don't have the ignore class because Bootstrap 3 isn't compatible
                // with old versions of jQuery that don't properly cancel the click events.
                $dialog =
                    $('<div id="' + this.dialogID + '" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="' + this.titleID + '">' +
                        '<div class="modal-dialog" role="document">' +
                            '<div class="modal-content panel-danger">' +
                                '<div class="modal-header panel-heading">' +
                                    '<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
                                    '<h3 class="modal-title" id="' + this.titleID + '"></h3>' +
                                '</div>' +
                                '<div class="modal-body panel-body ' + this.messageClass + '"></div>' +
                                '<div class="modal-footer panel-footer">' +
                                    '<button type="button" class="' + this.proceedButtonClass + ' btn btn-danger" data-dismiss="modal"></button>' +
                                    '<button type="button" class="' + this.stayButtonClass + ' btn btn-default" data-dismiss="modal"></button>' +
                                '</div>' +
                            '</div>' +
                        '</div>' +
                    '</div>');

                // Append to the body so we can capture DOM events.
                // Flag the dialog for later removal.
                $('body').append($dialog)
                         .data('df-dialog-appended', true);
            }

            if (this.replaceText) {
                // Replace the text in the dialog (whether it is external or not).
                $dialog.find('#' + this.titleID).html(this.title);
                $dialog.find('.' + this.messageClass).html(this.preMessageText + message + this.postMessageText);
                $dialog.find('.' + this.proceedButtonClass).html(this.proceedButtonText);
                $dialog.find('.' + this.stayButtonClass).html(this.stayButtonText);
            }

            // Bind the events
            choice.bindEscKey = false;

            var onContinueClick = function () {
                choice.proceed = $.DirtyForms.choiceContinue = true;
            };
            var onHidden = function (e) {
                var commit = choice.isDF1 ? $.DirtyForms.choiceCommit : choice.commit;
                commit(e);
                if ($('body').data('df-dialog-appended') === true) {
                    $dialog.remove();
                }
            };
            // NOTE: Bootstrap 3 requires jQuery 1.9, so we can use on and off here.
            $dialog.find('.' + this.proceedButtonClass).off('click', onContinueClick).on('click', onContinueClick);
            $dialog.off('hidden.bs.modal', onHidden).on('hidden.bs.modal', onHidden);

            // Show the dialog
            $dialog.modal({ show: true });
        },

        // Support for Dirty Forms < 2.0
        fire: function (message, title) {
            this.title = exclamationGlyphicon + title;
            this.open({ isDF1: true }, message);
        },

        // Support for Dirty Forms < 1.2
        bind: function () {
        },
        stash: function () {
            return false;
        },
        refire: function () {
            return false;
        },
        selector: 'no-op',
    };

    /*<iife_foot>*/
}));
/*</iife_foot>*/

// sortElements (jQuery.fn.sortElements)
/**
 * jQuery.fn.sortElements
 * --------------
 * @author James Padolsey (http://james.padolsey.com)
 * @version 0.11
 * @updated 18-MAR-2010
 * --------------
 * @param Function comparator:
 *   Exactly the same behaviour as [1,2,3].sort(comparator)
 *   
 * @param Function getSortable
 *   A function that should return the element that is
 *   to be sorted. The comparator will run on the
 *   current collection, but you may want the actual
 *   resulting sort to occur on a parent or another
 *   associated element.
 *   
 *   E.g. $('td').sortElements(comparator, function(){
 *      return this.parentNode; 
 *   })
 *   
 *   The <td>'s parent (<tr>) will be sorted instead
 *   of the <td> itself.
 */
jQuery.fn.sortElements = (function(){
    
    var sort = [].sort;
    
    return function(comparator, getSortable) {
        
        getSortable = getSortable || function(){return this;};
        
        var placements = this.map(function(){
            
            var sortElement = getSortable.call(this),
                parentNode = sortElement.parentNode,
                
                // Since the element itself will change position, we have
                // to have some way of storing it's original position in
                // the DOM. The easiest way is to have a 'flag' node:
                nextSibling = parentNode.insertBefore(
                    document.createTextNode(''),
                    sortElement.nextSibling
                );
            
            return function() {
                
                if (parentNode === this) {
                    throw new Error(
                        "You can't sort elements if any one is a descendant of another."
                    );
                }
                
                // Insert before flag:
                parentNode.insertBefore(this, nextSibling);
                // Remove flag:
                parentNode.removeChild(nextSibling);
                
            };
            
        });
       
        return sort.call(this, comparator).each(function(i){
            placements[i].call(getSortable.call(this));
        });
        
    };
    
})();

// Bootstrap Select
(function ($) {
  'use strict';

  //<editor-fold desc="Shims">
  if (!String.prototype.includes) {
    (function () {
      'use strict'; // needed to support `apply`/`call` with `undefined`/`null`
      var toString = {}.toString;
      var defineProperty = (function () {
        // IE 8 only supports `Object.defineProperty` on DOM elements
        try {
          var object = {};
          var $defineProperty = Object.defineProperty;
          var result = $defineProperty(object, object, object) && $defineProperty;
        } catch (error) {
        }
        return result;
      }());
      var indexOf = ''.indexOf;
      var includes = function (search) {
        if (this == null) {
          throw new TypeError();
        }
        var string = String(this);
        if (search && toString.call(search) == '[object RegExp]') {
          throw new TypeError();
        }
        var stringLength = string.length;
        var searchString = String(search);
        var searchLength = searchString.length;
        var position = arguments.length > 1 ? arguments[1] : undefined;
        // `ToInteger`
        var pos = position ? Number(position) : 0;
        if (pos != pos) { // better `isNaN`
          pos = 0;
        }
        var start = Math.min(Math.max(pos, 0), stringLength);
        // Avoid the `indexOf` call if no match is possible
        if (searchLength + start > stringLength) {
          return false;
        }
        return indexOf.call(string, searchString, pos) != -1;
      };
      if (defineProperty) {
        defineProperty(String.prototype, 'includes', {
          'value': includes,
          'configurable': true,
          'writable': true
        });
      } else {
        String.prototype.includes = includes;
      }
    }());
  }

  if (!String.prototype.startsWith) {
    (function () {
      'use strict'; // needed to support `apply`/`call` with `undefined`/`null`
      var defineProperty = (function () {
        // IE 8 only supports `Object.defineProperty` on DOM elements
        try {
          var object = {};
          var $defineProperty = Object.defineProperty;
          var result = $defineProperty(object, object, object) && $defineProperty;
        } catch (error) {
        }
        return result;
      }());
      var toString = {}.toString;
      var startsWith = function (search) {
        if (this == null) {
          throw new TypeError();
        }
        var string = String(this);
        if (search && toString.call(search) == '[object RegExp]') {
          throw new TypeError();
        }
        var stringLength = string.length;
        var searchString = String(search);
        var searchLength = searchString.length;
        var position = arguments.length > 1 ? arguments[1] : undefined;
        // `ToInteger`
        var pos = position ? Number(position) : 0;
        if (pos != pos) { // better `isNaN`
          pos = 0;
        }
        var start = Math.min(Math.max(pos, 0), stringLength);
        // Avoid the `indexOf` call if no match is possible
        if (searchLength + start > stringLength) {
          return false;
        }
        var index = -1;
        while (++index < searchLength) {
          if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {
            return false;
          }
        }
        return true;
      };
      if (defineProperty) {
        defineProperty(String.prototype, 'startsWith', {
          'value': startsWith,
          'configurable': true,
          'writable': true
        });
      } else {
        String.prototype.startsWith = startsWith;
      }
    }());
  }

  if (!Object.keys) {
    Object.keys = function (
      o, // object
      k, // key
      r  // result array
      ){
      // initialize object and result
      r=[];
      // iterate over object keys
      for (k in o)
          // fill result array with non-prototypical keys
        r.hasOwnProperty.call(o, k) && r.push(k);
      // return result
      return r;
    };
  }

  $.fn.triggerNative = function (eventName) {
    var el = this[0],
        event;

    if (el.dispatchEvent) {
      if (typeof Event === 'function') {
        // For modern browsers
        event = new Event(eventName, {
          bubbles: true
        });
      } else {
        // For IE since it doesn't support Event constructor
        event = document.createEvent('Event');
        event.initEvent(eventName, true, false);
      }

      el.dispatchEvent(event);
    } else {
      if (el.fireEvent) {
        event = document.createEventObject();
        event.eventType = eventName;
        el.fireEvent('on' + eventName, event);
      }

      this.trigger(eventName);
    }
  };
  //</editor-fold>

  // Case insensitive contains search
  $.expr[':'].icontains = function (obj, index, meta) {
    var $obj = $(obj);
    var haystack = ($obj.data('tokens') || $obj.text()).toUpperCase();
    return haystack.includes(meta[3].toUpperCase());
  };

  // Case insensitive begins search
  $.expr[':'].ibegins = function (obj, index, meta) {
    var $obj = $(obj);
    var haystack = ($obj.data('tokens') || $obj.text()).toUpperCase();
    return haystack.startsWith(meta[3].toUpperCase());
  };

  // Case and accent insensitive contains search
  $.expr[':'].aicontains = function (obj, index, meta) {
    var $obj = $(obj);
    var haystack = ($obj.data('tokens') || $obj.data('normalizedText') || $obj.text()).toUpperCase();
    return haystack.includes(meta[3].toUpperCase());
  };

  // Case and accent insensitive begins search
  $.expr[':'].aibegins = function (obj, index, meta) {
    var $obj = $(obj);
    var haystack = ($obj.data('tokens') || $obj.data('normalizedText') || $obj.text()).toUpperCase();
    return haystack.startsWith(meta[3].toUpperCase());
  };

  /**
   * Remove all diatrics from the given text.
   * @access private
   * @param {String} text
   * @returns {String}
   */
  function normalizeToBase(text) {
    var rExps = [
      {re: /[\xC0-\xC6]/g, ch: "A"},
      {re: /[\xE0-\xE6]/g, ch: "a"},
      {re: /[\xC8-\xCB]/g, ch: "E"},
      {re: /[\xE8-\xEB]/g, ch: "e"},
      {re: /[\xCC-\xCF]/g, ch: "I"},
      {re: /[\xEC-\xEF]/g, ch: "i"},
      {re: /[\xD2-\xD6]/g, ch: "O"},
      {re: /[\xF2-\xF6]/g, ch: "o"},
      {re: /[\xD9-\xDC]/g, ch: "U"},
      {re: /[\xF9-\xFC]/g, ch: "u"},
      {re: /[\xC7-\xE7]/g, ch: "c"},
      {re: /[\xD1]/g, ch: "N"},
      {re: /[\xF1]/g, ch: "n"}
    ];
    $.each(rExps, function () {
      text = text.replace(this.re, this.ch);
    });
    return text;
  }


  function htmlEscape(html) {
    var escapeMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;',
      '`': '&#x60;'
    };
    var source = '(?:' + Object.keys(escapeMap).join('|') + ')',
        testRegexp = new RegExp(source),
        replaceRegexp = new RegExp(source, 'g'),
        string = html == null ? '' : '' + html;
    return testRegexp.test(string) ? string.replace(replaceRegexp, function (match) {
      return escapeMap[match];
    }) : string;
  }

  var Selectpicker = function (element, options, e) {
    if (e) {
      e.stopPropagation();
      e.preventDefault();
    }

    this.$element = $(element);
    this.$newElement = null;
    this.$button = null;
    this.$menu = null;
    this.$lis = null;
    this.options = options;

    // If we have no title yet, try to pull it from the html title attribute (jQuery doesnt' pick it up as it's not a
    // data-attribute)
    if (this.options.title === null) {
      this.options.title = this.$element.attr('title');
    }

    //Expose public methods
    this.val = Selectpicker.prototype.val;
    this.render = Selectpicker.prototype.render;
    this.refresh = Selectpicker.prototype.refresh;
    this.setStyle = Selectpicker.prototype.setStyle;
    this.selectAll = Selectpicker.prototype.selectAll;
    this.deselectAll = Selectpicker.prototype.deselectAll;
    this.destroy = Selectpicker.prototype.destroy;
    this.remove = Selectpicker.prototype.remove;
    this.show = Selectpicker.prototype.show;
    this.hide = Selectpicker.prototype.hide;

    this.init();
  };

  Selectpicker.VERSION = '1.10.0';

  // part of this is duplicated in i18n/defaults-en_US.js. Make sure to update both.
  Selectpicker.DEFAULTS = {
    noneSelectedText: 'Nothing selected',
    noneResultsText: 'No results matched {0}',
    countSelectedText: function (numSelected, numTotal) {
      return (numSelected == 1) ? "{0} item selected" : "{0} items selected";
    },
    maxOptionsText: function (numAll, numGroup) {
      return [
        (numAll == 1) ? 'Limit reached ({n} item max)' : 'Limit reached ({n} items max)',
        (numGroup == 1) ? 'Group limit reached ({n} item max)' : 'Group limit reached ({n} items max)'
      ];
    },
    selectAllText: 'Select All',
    deselectAllText: 'Deselect All',
    doneButton: false,
    doneButtonText: 'Close',
    multipleSeparator: ', ',
    styleBase: 'btn',
    style: 'btn-default',
    size: 'auto',
    title: null,
    selectedTextFormat: 'values',
    width: false,
    container: false,
    hideDisabled: false,
    showSubtext: false,
    showIcon: true,
    showContent: true,
    dropupAuto: true,
    header: false,
    liveSearch: false,
    liveSearchPlaceholder: null,
    liveSearchNormalize: false,
    liveSearchStyle: 'contains',
    actionsBox: false,
    iconBase: 'glyphicon',
    tickIcon: 'glyphicon-ok',
    showTick: false,
    template: {
      caret: '<span class="caret"></span>'
    },
    maxOptions: false,
    mobile: false,
    selectOnTab: false,
    dropdownAlignRight: false
  };

  Selectpicker.prototype = {

    constructor: Selectpicker,

    init: function () {
      var that = this,
          id = this.$element.attr('id');

      this.$element.addClass('bs-select-hidden');

      // store originalIndex (key) and newIndex (value) in this.liObj for fast accessibility
      // allows us to do this.$lis.eq(that.liObj[index]) instead of this.$lis.filter('[data-original-index="' + index + '"]')
      this.liObj = {};
      this.multiple = this.$element.prop('multiple');
      this.autofocus = this.$element.prop('autofocus');
      this.$newElement = this.createView();
      this.$element
        .after(this.$newElement)
        .appendTo(this.$newElement);
      this.$button = this.$newElement.children('button');
      this.$menu = this.$newElement.children('.dropdown-menu');
      this.$menuInner = this.$menu.children('.inner');
      this.$searchbox = this.$menu.find('input');

      this.$element.removeClass('bs-select-hidden');

      if (this.options.dropdownAlignRight)
        this.$menu.addClass('dropdown-menu-right');

      if (typeof id !== 'undefined') {
        this.$button.attr('data-id', id);
        $('label[for="' + id + '"]').click(function (e) {
          e.preventDefault();
          that.$button.focus();
        });
      }

      this.checkDisabled();
      this.clickListener();
      if (this.options.liveSearch) this.liveSearchListener();
      this.render();
      this.setStyle();
      this.setWidth();
      if (this.options.container) this.selectPosition();
      this.$menu.data('this', this);
      this.$newElement.data('this', this);
      if (this.options.mobile) this.mobile();

      this.$newElement.on({
        'hide.bs.dropdown': function (e) {
          that.$element.trigger('hide.bs.select', e);
        },
        'hidden.bs.dropdown': function (e) {
          that.$element.trigger('hidden.bs.select', e);
        },
        'show.bs.dropdown': function (e) {
          that.$element.trigger('show.bs.select', e);
        },
        'shown.bs.dropdown': function (e) {
          that.$element.trigger('shown.bs.select', e);
        }
      });

      if (that.$element[0].hasAttribute('required')) {
        this.$element.on('invalid', function () {
          that.$button
            .addClass('bs-invalid')
            .focus();
          
          that.$element.on({
            'focus.bs.select': function () {
              that.$button.focus();
              that.$element.off('focus.bs.select');
            },
            'shown.bs.select': function () {
              that.$element
                .val(that.$element.val()) // set the value to hide the validation message in Chrome when menu is opened
                .off('shown.bs.select');
            },
            'rendered.bs.select': function () {
              // if select is no longer invalid, remove the bs-invalid class
              if (this.validity.valid) that.$button.removeClass('bs-invalid');
              that.$element.off('rendered.bs.select');
            }
          });
          
        });
      }

      setTimeout(function () {
        that.$element.trigger('loaded.bs.select');
      });
    },

    createDropdown: function () {
      // Options
      // If we are multiple or showTick option is set, then add the show-tick class
      var showTick = (this.multiple || this.options.showTick) ? ' show-tick' : '',
          inputGroup = this.$element.parent().hasClass('input-group') ? ' input-group-btn' : '',
          autofocus = this.autofocus ? ' autofocus' : '';
      // Elements
      var header = this.options.header ? '<div class="popover-title"><button type="button" class="close" aria-hidden="true">&times;</button>' + this.options.header + '</div>' : '';
      var searchbox = this.options.liveSearch ?
      '<div class="bs-searchbox">' +
      '<input type="text" class="form-control" autocomplete="off"' +
      (null === this.options.liveSearchPlaceholder ? '' : ' placeholder="' + htmlEscape(this.options.liveSearchPlaceholder) + '"') + '>' +
      '</div>'
          : '';
      var actionsbox = this.multiple && this.options.actionsBox ?
      '<div class="bs-actionsbox">' +
      '<div class="btn-group btn-group-sm btn-block">' +
      '<button type="button" class="actions-btn bs-select-all btn btn-default">' +
      this.options.selectAllText +
      '</button>' +
      '<button type="button" class="actions-btn bs-deselect-all btn btn-default">' +
      this.options.deselectAllText +
      '</button>' +
      '</div>' +
      '</div>'
          : '';
      var donebutton = this.multiple && this.options.doneButton ?
      '<div class="bs-donebutton">' +
      '<div class="btn-group btn-block">' +
      '<button type="button" class="btn btn-sm btn-default">' +
      this.options.doneButtonText +
      '</button>' +
      '</div>' +
      '</div>'
          : '';
      var drop =
          '<div class="btn-group bootstrap-select' + showTick + inputGroup + '">' +
          '<button type="button" class="' + this.options.styleBase + ' dropdown-toggle" data-toggle="dropdown"' + autofocus + '>' +
          '<span class="filter-option pull-left"></span>&nbsp;' +
          '<span class="bs-caret">' +
          this.options.template.caret +
          '</span>' +
          '</button>' +
          '<div class="dropdown-menu open">' +
          header +
          searchbox +
          actionsbox +
          '<ul class="dropdown-menu inner" role="menu">' +
          '</ul>' +
          donebutton +
          '</div>' +
          '</div>';

      return $(drop);
    },

    createView: function () {
      var $drop = this.createDropdown(),
          li = this.createLi();

      $drop.find('ul')[0].innerHTML = li;
      return $drop;
    },

    reloadLi: function () {
      //Remove all children.
      this.destroyLi();
      //Re build
      var li = this.createLi();
      this.$menuInner[0].innerHTML = li;
    },

    destroyLi: function () {
      this.$menu.find('li').remove();
    },

    createLi: function () {
      var that = this,
          _li = [],
          optID = 0,
          titleOption = document.createElement('option'),
          liIndex = -1; // increment liIndex whenever a new <li> element is created to ensure liObj is correct

      // Helper functions
      /**
       * @param content
       * @param [index]
       * @param [classes]
       * @param [optgroup]
       * @returns {string}
       */
      var generateLI = function (content, index, classes, optgroup) {
        return '<li' +
            ((typeof classes !== 'undefined' & '' !== classes) ? ' class="' + classes + '"' : '') +
            ((typeof index !== 'undefined' & null !== index) ? ' data-original-index="' + index + '"' : '') +
            ((typeof optgroup !== 'undefined' & null !== optgroup) ? 'data-optgroup="' + optgroup + '"' : '') +
            '>' + content + '</li>';
      };

      /**
       * @param text
       * @param [classes]
       * @param [inline]
       * @param [tokens]
       * @returns {string}
       */
      var generateA = function (text, classes, inline, tokens) {
        return '<a tabindex="0"' +
            (typeof classes !== 'undefined' ? ' class="' + classes + '"' : '') +
            (typeof inline !== 'undefined' ? ' style="' + inline + '"' : '') +
            (that.options.liveSearchNormalize ? ' data-normalized-text="' + normalizeToBase(htmlEscape(text)) + '"' : '') +
            (typeof tokens !== 'undefined' || tokens !== null ? ' data-tokens="' + tokens + '"' : '') +
            '>' + text +
            '<span class="' + that.options.iconBase + ' ' + that.options.tickIcon + ' check-mark"></span>' +
            '</a>';
      };

      if (this.options.title && !this.multiple) {
        // this option doesn't create a new <li> element, but does add a new option, so liIndex is decreased
        // since liObj is recalculated on every refresh, liIndex needs to be decreased even if the titleOption is already appended
        liIndex--;

        if (!this.$element.find('.bs-title-option').length) {
          // Use native JS to prepend option (faster)
          var element = this.$element[0];
          titleOption.className = 'bs-title-option';
          titleOption.appendChild(document.createTextNode(this.options.title));
          titleOption.value = '';
          element.insertBefore(titleOption, element.firstChild);
          // Check if selected attribute is already set on an option. If not, select the titleOption option.
          if ($(element.options[element.selectedIndex]).attr('selected') === undefined) titleOption.selected = true;
        }
      }

      this.$element.find('option').each(function (index) {
        var $this = $(this);

        liIndex++;

        if ($this.hasClass('bs-title-option')) return;

        // Get the class and text for the option
        var optionClass = this.className || '',
            inline = this.style.cssText,
            text = $this.data('content') ? $this.data('content') : $this.html(),
            tokens = $this.data('tokens') ? $this.data('tokens') : null,
            subtext = typeof $this.data('subtext') !== 'undefined' ? '<small class="text-muted">' + $this.data('subtext') + '</small>' : '',
            icon = typeof $this.data('icon') !== 'undefined' ? '<span class="' + that.options.iconBase + ' ' + $this.data('icon') + '"></span> ' : '',
            isOptgroup = this.parentNode.tagName === 'OPTGROUP',
            isDisabled = this.disabled || (isOptgroup && this.parentNode.disabled);

        if (icon !== '' && isDisabled) {
          icon = '<span>' + icon + '</span>';
        }

        if (that.options.hideDisabled && isDisabled && !isOptgroup) {
          liIndex--;
          return;
        }

        if (!$this.data('content')) {
          // Prepend any icon and append any subtext to the main text.
          text = icon + '<span class="text">' + text + subtext + '</span>';
        }

        if (isOptgroup && $this.data('divider') !== true) {
          var optGroupClass = ' ' + this.parentNode.className || '';

          if ($this.index() === 0) { // Is it the first option of the optgroup?
            optID += 1;

            // Get the opt group label
            var label = this.parentNode.label,
                labelSubtext = typeof $this.parent().data('subtext') !== 'undefined' ? '<small class="text-muted">' + $this.parent().data('subtext') + '</small>' : '',
                labelIcon = $this.parent().data('icon') ? '<span class="' + that.options.iconBase + ' ' + $this.parent().data('icon') + '"></span> ' : '';

            label = labelIcon + '<span class="text">' + label + labelSubtext + '</span>';

            if (index !== 0 && _li.length > 0) { // Is it NOT the first option of the select && are there elements in the dropdown?
              liIndex++;
              _li.push(generateLI('', null, 'divider', optID + 'div'));
            }
            liIndex++;
            _li.push(generateLI(label, null, 'dropdown-header' + optGroupClass, optID));
          }

          if (that.options.hideDisabled && isDisabled) {
            liIndex--;
            return;
          }

          _li.push(generateLI(generateA(text, 'opt ' + optionClass + optGroupClass, inline, tokens), index, '', optID));
        } else if ($this.data('divider') === true) {
          _li.push(generateLI('', index, 'divider'));
        } else if ($this.data('hidden') === true) {
          _li.push(generateLI(generateA(text, optionClass, inline, tokens), index, 'hidden is-hidden'));
        } else {
          if (this.previousElementSibling && this.previousElementSibling.tagName === 'OPTGROUP') {
            liIndex++;
            _li.push(generateLI('', null, 'divider', optID + 'div'));
          }
          _li.push(generateLI(generateA(text, optionClass, inline, tokens), index));
        }

        that.liObj[index] = liIndex;
      });

      //If we are not multiple, we don't have a selected item, and we don't have a title, select the first element so something is set in the button
      if (!this.multiple && this.$element.find('option:selected').length === 0 && !this.options.title) {
        this.$element.find('option').eq(0).prop('selected', true).attr('selected', 'selected');
      }

      return _li.join('');
    },

    findLis: function () {
      if (this.$lis == null) this.$lis = this.$menu.find('li');
      return this.$lis;
    },

    /**
     * @param [updateLi] defaults to true
     */
    render: function (updateLi) {
      var that = this,
          notDisabled;

      //Update the LI to match the SELECT
      if (updateLi !== false) {
        this.$element.find('option').each(function (index) {
          var $lis = that.findLis().eq(that.liObj[index]);

          that.setDisabled(index, this.disabled || this.parentNode.tagName === 'OPTGROUP' && this.parentNode.disabled, $lis);
          that.setSelected(index, this.selected, $lis);
        });
      }

      this.tabIndex();

      var selectedItems = this.$element.find('option').map(function () {
        if (this.selected) {
          if (that.options.hideDisabled && (this.disabled || this.parentNode.tagName === 'OPTGROUP' && this.parentNode.disabled)) return;

          var $this = $(this),
              icon = $this.data('icon') && that.options.showIcon ? '<i class="' + that.options.iconBase + ' ' + $this.data('icon') + '"></i> ' : '',
              subtext;

          if (that.options.showSubtext && $this.data('subtext') && !that.multiple) {
            subtext = ' <small class="text-muted">' + $this.data('subtext') + '</small>';
          } else {
            subtext = '';
          }
          if (typeof $this.attr('title') !== 'undefined') {
            return $this.attr('title');
          } else if ($this.data('content') && that.options.showContent) {
            return $this.data('content');
          } else {
            return icon + $this.html() + subtext;
          }
        }
      }).toArray();

      //Fixes issue in IE10 occurring when no default option is selected and at least one option is disabled
      //Convert all the values into a comma delimited string
      var title = !this.multiple ? selectedItems[0] : selectedItems.join(this.options.multipleSeparator);

      //If this is multi select, and the selectText type is count, the show 1 of 2 selected etc..
      if (this.multiple && this.options.selectedTextFormat.indexOf('count') > -1) {
        var max = this.options.selectedTextFormat.split('>');
        if ((max.length > 1 && selectedItems.length > max[1]) || (max.length == 1 && selectedItems.length >= 2)) {
          notDisabled = this.options.hideDisabled ? ', [disabled]' : '';
          var totalCount = this.$element.find('option').not('[data-divider="true"], [data-hidden="true"]' + notDisabled).length,
              tr8nText = (typeof this.options.countSelectedText === 'function') ? this.options.countSelectedText(selectedItems.length, totalCount) : this.options.countSelectedText;
          title = tr8nText.replace('{0}', selectedItems.length.toString()).replace('{1}', totalCount.toString());
        }
      }

      if (this.options.title == undefined) {
        this.options.title = this.$element.attr('title');
      }

      if (this.options.selectedTextFormat == 'static') {
        title = this.options.title;
      }

      //If we dont have a title, then use the default, or if nothing is set at all, use the not selected text
      if (!title) {
        title = typeof this.options.title !== 'undefined' ? this.options.title : this.options.noneSelectedText;
      }

      //strip all html-tags and trim the result
      this.$button.attr('title', $.trim(title.replace(/<[^>]*>?/g, '')));
      this.$button.children('.filter-option').html(title);

      this.$element.trigger('rendered.bs.select');
    },

    /**
     * @param [style]
     * @param [status]
     */
    setStyle: function (style, status) {
      if (this.$element.attr('class')) {
        this.$newElement.addClass(this.$element.attr('class').replace(/selectpicker|mobile-device|bs-select-hidden|validate\[.*\]/gi, ''));
      }

      var buttonClass = style ? style : this.options.style;

      if (status == 'add') {
        this.$button.addClass(buttonClass);
      } else if (status == 'remove') {
        this.$button.removeClass(buttonClass);
      } else {
        this.$button.removeClass(this.options.style);
        this.$button.addClass(buttonClass);
      }
    },

    liHeight: function (refresh) {
      if (!refresh && (this.options.size === false || this.sizeInfo)) return;

      var newElement = document.createElement('div'),
          menu = document.createElement('div'),
          menuInner = document.createElement('ul'),
          divider = document.createElement('li'),
          li = document.createElement('li'),
          a = document.createElement('a'),
          text = document.createElement('span'),
          header = this.options.header && this.$menu.find('.popover-title').length > 0 ? this.$menu.find('.popover-title')[0].cloneNode(true) : null,
          search = this.options.liveSearch ? document.createElement('div') : null,
          actions = this.options.actionsBox && this.multiple && this.$menu.find('.bs-actionsbox').length > 0 ? this.$menu.find('.bs-actionsbox')[0].cloneNode(true) : null,
          doneButton = this.options.doneButton && this.multiple && this.$menu.find('.bs-donebutton').length > 0 ? this.$menu.find('.bs-donebutton')[0].cloneNode(true) : null;

      text.className = 'text';
      newElement.className = this.$menu[0].parentNode.className + ' open';
      menu.className = 'dropdown-menu open';
      menuInner.className = 'dropdown-menu inner';
      divider.className = 'divider';

      text.appendChild(document.createTextNode('Inner text'));
      a.appendChild(text);
      li.appendChild(a);
      menuInner.appendChild(li);
      menuInner.appendChild(divider);
      if (header) menu.appendChild(header);
      if (search) {
        // create a span instead of input as creating an input element is slower
        var input = document.createElement('span');
        search.className = 'bs-searchbox';
        input.className = 'form-control';
        search.appendChild(input);
        menu.appendChild(search);
      }
      if (actions) menu.appendChild(actions);
      menu.appendChild(menuInner);
      if (doneButton) menu.appendChild(doneButton);
      newElement.appendChild(menu);

      document.body.appendChild(newElement);

      var liHeight = a.offsetHeight,
          headerHeight = header ? header.offsetHeight : 0,
          searchHeight = search ? search.offsetHeight : 0,
          actionsHeight = actions ? actions.offsetHeight : 0,
          doneButtonHeight = doneButton ? doneButton.offsetHeight : 0,
          dividerHeight = $(divider).outerHeight(true),
          // fall back to jQuery if getComputedStyle is not supported
          menuStyle = typeof getComputedStyle === 'function' ? getComputedStyle(menu) : false,
          $menu = menuStyle ? null : $(menu),
          menuPadding = parseInt(menuStyle ? menuStyle.paddingTop : $menu.css('paddingTop')) +
                        parseInt(menuStyle ? menuStyle.paddingBottom : $menu.css('paddingBottom')) +
                        parseInt(menuStyle ? menuStyle.borderTopWidth : $menu.css('borderTopWidth')) +
                        parseInt(menuStyle ? menuStyle.borderBottomWidth : $menu.css('borderBottomWidth')),
          menuExtras =  menuPadding +
                        parseInt(menuStyle ? menuStyle.marginTop : $menu.css('marginTop')) +
                        parseInt(menuStyle ? menuStyle.marginBottom : $menu.css('marginBottom')) + 2;

      document.body.removeChild(newElement);

      this.sizeInfo = {
        liHeight: liHeight,
        headerHeight: headerHeight,
        searchHeight: searchHeight,
        actionsHeight: actionsHeight,
        doneButtonHeight: doneButtonHeight,
        dividerHeight: dividerHeight,
        menuPadding: menuPadding,
        menuExtras: menuExtras
      };
    },

    setSize: function () {
      this.findLis();
      this.liHeight();

      if (this.options.header) this.$menu.css('padding-top', 0);
      if (this.options.size === false) return;

      var that = this,
          $menu = this.$menu,
          $menuInner = this.$menuInner,
          $window = $(window),
          selectHeight = this.$newElement[0].offsetHeight,
          liHeight = this.sizeInfo['liHeight'],
          headerHeight = this.sizeInfo['headerHeight'],
          searchHeight = this.sizeInfo['searchHeight'],
          actionsHeight = this.sizeInfo['actionsHeight'],
          doneButtonHeight = this.sizeInfo['doneButtonHeight'],
          divHeight = this.sizeInfo['dividerHeight'],
          menuPadding = this.sizeInfo['menuPadding'],
          menuExtras = this.sizeInfo['menuExtras'],
          notDisabled = this.options.hideDisabled ? '.disabled' : '',
          menuHeight,
          getHeight,
          selectOffsetTop,
          selectOffsetBot,
          posVert = function () {
            selectOffsetTop = that.$newElement.offset().top - $window.scrollTop();
            selectOffsetBot = $window.height() - selectOffsetTop - selectHeight;
          };

      posVert();

      if (this.options.size === 'auto') {
        var getSize = function () {
          var minHeight,
              hasClass = function (className, include) {
                return function (element) {
                    if (include) {
                        return (element.classList ? element.classList.contains(className) : $(element).hasClass(className));
                    } else {
                        return !(element.classList ? element.classList.contains(className) : $(element).hasClass(className));
                    }
                };
              },
              lis = that.$menuInner[0].getElementsByTagName('li'),
              lisVisible = Array.prototype.filter ? Array.prototype.filter.call(lis, hasClass('hidden', false)) : that.$lis.not('.hidden'),
              optGroup = Array.prototype.filter ? Array.prototype.filter.call(lisVisible, hasClass('dropdown-header', true)) : lisVisible.filter('.dropdown-header');

          posVert();
          menuHeight = selectOffsetBot - menuExtras;

          if (that.options.container) {
            if (!$menu.data('height')) $menu.data('height', $menu.height());
            getHeight = $menu.data('height');
          } else {
            getHeight = $menu.height();
          }

          if (that.options.dropupAuto) {
            that.$newElement.toggleClass('dropup', selectOffsetTop > selectOffsetBot && (menuHeight - menuExtras) < getHeight);
          }
          if (that.$newElement.hasClass('dropup')) {
            menuHeight = selectOffsetTop - menuExtras;
          }

          if ((lisVisible.length + optGroup.length) > 3) {
            minHeight = liHeight * 3 + menuExtras - 2;
          } else {
            minHeight = 0;
          }

          $menu.css({
            'max-height': menuHeight + 'px',
            'overflow': 'hidden',
            'min-height': minHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight + 'px'
          });
          $menuInner.css({
            'max-height': menuHeight - headerHeight - searchHeight - actionsHeight - doneButtonHeight - menuPadding + 'px',
            'overflow-y': 'auto',
            'min-height': Math.max(minHeight - menuPadding, 0) + 'px'
          });
        };
        getSize();
        this.$searchbox.off('input.getSize propertychange.getSize').on('input.getSize propertychange.getSize', getSize);
        $window.off('resize.getSize scroll.getSize').on('resize.getSize scroll.getSize', getSize);
      } else if (this.options.size && this.options.size != 'auto' && this.$lis.not(notDisabled).length > this.options.size) {
        var optIndex = this.$lis.not('.divider').not(notDisabled).children().slice(0, this.options.size).last().parent().index(),
            divLength = this.$lis.slice(0, optIndex + 1).filter('.divider').length;
        menuHeight = liHeight * this.options.size + divLength * divHeight + menuPadding;

        if (that.options.container) {
          if (!$menu.data('height')) $menu.data('height', $menu.height());
          getHeight = $menu.data('height');
        } else {
          getHeight = $menu.height();
        }

        if (that.options.dropupAuto) {
          //noinspection JSUnusedAssignment
          this.$newElement.toggleClass('dropup', selectOffsetTop > selectOffsetBot && (menuHeight - menuExtras) < getHeight);
        }
        $menu.css({
          'max-height': menuHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight + 'px',
          'overflow': 'hidden',
          'min-height': ''
        });
        $menuInner.css({
          'max-height': menuHeight - menuPadding + 'px',
          'overflow-y': 'auto',
          'min-height': ''
        });
      }
    },

    setWidth: function () {
      if (this.options.width === 'auto') {
        this.$menu.css('min-width', '0');

        // Get correct width if element is hidden
        var $selectClone = this.$menu.parent().clone().appendTo('body'),
            $selectClone2 = this.options.container ? this.$newElement.clone().appendTo('body') : $selectClone,
            ulWidth = $selectClone.children('.dropdown-menu').outerWidth(),
            btnWidth = $selectClone2.css('width', 'auto').children('button').outerWidth();

        $selectClone.remove();
        $selectClone2.remove();

        // Set width to whatever's larger, button title or longest option
        this.$newElement.css('width', Math.max(ulWidth, btnWidth) + 'px');
      } else if (this.options.width === 'fit') {
        // Remove inline min-width so width can be changed from 'auto'
        this.$menu.css('min-width', '');
        this.$newElement.css('width', '').addClass('fit-width');
      } else if (this.options.width) {
        // Remove inline min-width so width can be changed from 'auto'
        this.$menu.css('min-width', '');
        this.$newElement.css('width', this.options.width);
      } else {
        // Remove inline min-width/width so width can be changed
        this.$menu.css('min-width', '');
        this.$newElement.css('width', '');
      }
      // Remove fit-width class if width is changed programmatically
      if (this.$newElement.hasClass('fit-width') && this.options.width !== 'fit') {
        this.$newElement.removeClass('fit-width');
      }
    },

    selectPosition: function () {
      this.$bsContainer = $('<div class="bs-container" />');

      var that = this,
          pos,
          actualHeight,
          getPlacement = function ($element) {
            that.$bsContainer.addClass($element.attr('class').replace(/form-control|fit-width/gi, '')).toggleClass('dropup', $element.hasClass('dropup'));
            pos = $element.offset();
            actualHeight = $element.hasClass('dropup') ? 0 : $element[0].offsetHeight;
            that.$bsContainer.css({
              'top': pos.top + actualHeight,
              'left': pos.left,
              'width': $element[0].offsetWidth
            });
          };

      this.$button.on('click', function () {
        var $this = $(this);

        if (that.isDisabled()) {
          return;
        }

        getPlacement(that.$newElement);

        that.$bsContainer
          .appendTo(that.options.container)
          .toggleClass('open', !$this.hasClass('open'))
          .append(that.$menu);
      });

      $(window).on('resize scroll', function () {
        getPlacement(that.$newElement);
      });

      this.$element.on('hide.bs.select', function () {
        that.$menu.data('height', that.$menu.height());
        that.$bsContainer.detach();
      });
    },

    setSelected: function (index, selected, $lis) {
      if (!$lis) {
        $lis = this.findLis().eq(this.liObj[index]);
      }

      $lis.toggleClass('selected', selected);
    },

    setDisabled: function (index, disabled, $lis) {
      if (!$lis) {
        $lis = this.findLis().eq(this.liObj[index]);
      }

      if (disabled) {
        $lis.addClass('disabled').children('a').attr('href', '#').attr('tabindex', -1);
      } else {
        $lis.removeClass('disabled').children('a').removeAttr('href').attr('tabindex', 0);
      }
    },

    isDisabled: function () {
      return this.$element[0].disabled;
    },

    checkDisabled: function () {
      var that = this;

      if (this.isDisabled()) {
        this.$newElement.addClass('disabled');
        this.$button.addClass('disabled').attr('tabindex', -1);
      } else {
        if (this.$button.hasClass('disabled')) {
          this.$newElement.removeClass('disabled');
          this.$button.removeClass('disabled');
        }

        if (this.$button.attr('tabindex') == -1 && !this.$element.data('tabindex')) {
          this.$button.removeAttr('tabindex');
        }
      }

      this.$button.click(function () {
        return !that.isDisabled();
      });
    },

    tabIndex: function () {
      if (this.$element.data('tabindex') !== this.$element.attr('tabindex') && 
        (this.$element.attr('tabindex') !== -98 && this.$element.attr('tabindex') !== '-98')) {
        this.$element.data('tabindex', this.$element.attr('tabindex'));
        this.$button.attr('tabindex', this.$element.data('tabindex'));
      }
      
      this.$element.attr('tabindex', -98);
    },

    clickListener: function () {
      var that = this,
          $document = $(document);

      this.$newElement.on('touchstart.dropdown', '.dropdown-menu', function (e) {
        e.stopPropagation();
      });

      $document.data('spaceSelect', false);

      this.$button.on('keyup', function (e) {
        if (/(32)/.test(e.keyCode.toString(10)) && $document.data('spaceSelect')) {
            e.preventDefault();
            $document.data('spaceSelect', false);
        }
      });

      this.$button.on('click', function () {
        that.setSize();
      });

      this.$element.on('shown.bs.select', function () {
        if (!that.options.liveSearch && !that.multiple) {
          that.$menuInner.find('.selected a').focus();
        } else if (!that.multiple) {
          var selectedIndex = that.liObj[that.$element[0].selectedIndex];

          if (typeof selectedIndex !== 'number' || that.options.size === false) return;

          // scroll to selected option
          var offset = that.$lis.eq(selectedIndex)[0].offsetTop - that.$menuInner[0].offsetTop;
          offset = offset - that.$menuInner[0].offsetHeight/2 + that.sizeInfo.liHeight/2;
          that.$menuInner[0].scrollTop = offset;
        }
      });

      this.$menuInner.on('click', 'li a', function (e) {
        var $this = $(this),
            clickedIndex = $this.parent().data('originalIndex'),
            prevValue = that.$element.val(),
            prevIndex = that.$element.prop('selectedIndex');

        // Don't close on multi choice menu
        if (that.multiple) {
          e.stopPropagation();
        }

        e.preventDefault();

        //Don't run if we have been disabled
        if (!that.isDisabled() && !$this.parent().hasClass('disabled')) {
          var $options = that.$element.find('option'),
              $option = $options.eq(clickedIndex),
              state = $option.prop('selected'),
              $optgroup = $option.parent('optgroup'),
              maxOptions = that.options.maxOptions,
              maxOptionsGrp = $optgroup.data('maxOptions') || false;

          if (!that.multiple) { // Deselect all others if not multi select box
            $options.prop('selected', false);
            $option.prop('selected', true);
            that.$menuInner.find('.selected').removeClass('selected');
            that.setSelected(clickedIndex, true);
          } else { // Toggle the one we have chosen if we are multi select.
            $option.prop('selected', !state);
            that.setSelected(clickedIndex, !state);
            $this.blur();

            if (maxOptions !== false || maxOptionsGrp !== false) {
              var maxReached = maxOptions < $options.filter(':selected').length,
                  maxReachedGrp = maxOptionsGrp < $optgroup.find('option:selected').length;

              if ((maxOptions && maxReached) || (maxOptionsGrp && maxReachedGrp)) {
                if (maxOptions && maxOptions == 1) {
                  $options.prop('selected', false);
                  $option.prop('selected', true);
                  that.$menuInner.find('.selected').removeClass('selected');
                  that.setSelected(clickedIndex, true);
                } else if (maxOptionsGrp && maxOptionsGrp == 1) {
                  $optgroup.find('option:selected').prop('selected', false);
                  $option.prop('selected', true);
                  var optgroupID = $this.parent().data('optgroup');
                  that.$menuInner.find('[data-optgroup="' + optgroupID + '"]').removeClass('selected');
                  that.setSelected(clickedIndex, true);
                } else {
                  var maxOptionsArr = (typeof that.options.maxOptionsText === 'function') ?
                          that.options.maxOptionsText(maxOptions, maxOptionsGrp) : that.options.maxOptionsText,
                      maxTxt = maxOptionsArr[0].replace('{n}', maxOptions),
                      maxTxtGrp = maxOptionsArr[1].replace('{n}', maxOptionsGrp),
                      $notify = $('<div class="notify"></div>');
                  // If {var} is set in array, replace it
                  /** @deprecated */
                  if (maxOptionsArr[2]) {
                    maxTxt = maxTxt.replace('{var}', maxOptionsArr[2][maxOptions > 1 ? 0 : 1]);
                    maxTxtGrp = maxTxtGrp.replace('{var}', maxOptionsArr[2][maxOptionsGrp > 1 ? 0 : 1]);
                  }

                  $option.prop('selected', false);

                  that.$menu.append($notify);

                  if (maxOptions && maxReached) {
                    $notify.append($('<div>' + maxTxt + '</div>'));
                    that.$element.trigger('maxReached.bs.select');
                  }

                  if (maxOptionsGrp && maxReachedGrp) {
                    $notify.append($('<div>' + maxTxtGrp + '</div>'));
                    that.$element.trigger('maxReachedGrp.bs.select');
                  }

                  setTimeout(function () {
                    that.setSelected(clickedIndex, false);
                  }, 10);

                  $notify.delay(750).fadeOut(300, function () {
                    $(this).remove();
                  });
                }
              }
            }
          }

          if (!that.multiple) {
            that.$button.focus();
          } else if (that.options.liveSearch) {
            that.$searchbox.focus();
          }

          // Trigger select 'change'
          if ((prevValue != that.$element.val() && that.multiple) || (prevIndex != that.$element.prop('selectedIndex') && !that.multiple)) {
            // $option.prop('selected') is current option state (selected/unselected). state is previous option state.
            that.$element
              .trigger('changed.bs.select', [clickedIndex, $option.prop('selected'), state])
              .triggerNative('change');
          }
        }
      });

      this.$menu.on('click', 'li.disabled a, .popover-title, .popover-title :not(.close)', function (e) {
        if (e.currentTarget == this) {
          e.preventDefault();
          e.stopPropagation();
          if (that.options.liveSearch && !$(e.target).hasClass('close')) {
            that.$searchbox.focus();
          } else {
            that.$button.focus();
          }
        }
      });

      this.$menuInner.on('click', '.divider, .dropdown-header', function (e) {
        e.preventDefault();
        e.stopPropagation();
        if (that.options.liveSearch) {
          that.$searchbox.focus();
        } else {
          that.$button.focus();
        }
      });

      this.$menu.on('click', '.popover-title .close', function () {
        that.$button.click();
      });

      this.$searchbox.on('click', function (e) {
        e.stopPropagation();
      });

      this.$menu.on('click', '.actions-btn', function (e) {
        if (that.options.liveSearch) {
          that.$searchbox.focus();
        } else {
          that.$button.focus();
        }

        e.preventDefault();
        e.stopPropagation();

        if ($(this).hasClass('bs-select-all')) {
          that.selectAll();
        } else {
          that.deselectAll();
        }
      });

      this.$element.change(function () {
        that.render(false);
      });
    },

    liveSearchListener: function () {
      var that = this,
          $no_results = $('<li class="no-results"></li>');

      this.$button.on('click.dropdown.data-api touchstart.dropdown.data-api', function () {
        that.$menuInner.find('.active').removeClass('active');
        if (!!that.$searchbox.val()) {
          that.$searchbox.val('');
          that.$lis.not('.is-hidden').removeClass('hidden');
          if (!!$no_results.parent().length) $no_results.remove();
        }
        if (!that.multiple) that.$menuInner.find('.selected').addClass('active');
        setTimeout(function () {
          that.$searchbox.focus();
        }, 10);
      });

      this.$searchbox.on('click.dropdown.data-api focus.dropdown.data-api touchend.dropdown.data-api', function (e) {
        e.stopPropagation();
      });

      this.$searchbox.on('input propertychange', function () {
        if (that.$searchbox.val()) {
          var $searchBase = that.$lis.not('.is-hidden').removeClass('hidden').children('a');
          if (that.options.liveSearchNormalize) {
            $searchBase = $searchBase.not(':a' + that._searchStyle() + '("' + normalizeToBase(that.$searchbox.val()) + '")');
          } else {
            $searchBase = $searchBase.not(':' + that._searchStyle() + '("' + that.$searchbox.val() + '")');
          }
          $searchBase.parent().addClass('hidden');

          that.$lis.filter('.dropdown-header').each(function () {
            var $this = $(this),
                optgroup = $this.data('optgroup');

            if (that.$lis.filter('[data-optgroup=' + optgroup + ']').not($this).not('.hidden').length === 0) {
              $this.addClass('hidden');
              that.$lis.filter('[data-optgroup=' + optgroup + 'div]').addClass('hidden');
            }
          });

          var $lisVisible = that.$lis.not('.hidden');

          // hide divider if first or last visible, or if followed by another divider
          $lisVisible.each(function (index) {
            var $this = $(this);

            if ($this.hasClass('divider') && (
              $this.index() === $lisVisible.first().index() ||
              $this.index() === $lisVisible.last().index() ||
              $lisVisible.eq(index + 1).hasClass('divider'))) {
              $this.addClass('hidden');
            }
          });

          if (!that.$lis.not('.hidden, .no-results').length) {
            if (!!$no_results.parent().length) {
              $no_results.remove();
            }
            $no_results.html(that.options.noneResultsText.replace('{0}', '"' + htmlEscape(that.$searchbox.val()) + '"')).show();
            that.$menuInner.append($no_results);
          } else if (!!$no_results.parent().length) {
            $no_results.remove();
          }
        } else {
          that.$lis.not('.is-hidden').removeClass('hidden');
          if (!!$no_results.parent().length) {
            $no_results.remove();
          }
        }

        that.$lis.filter('.active').removeClass('active');
        if (that.$searchbox.val()) that.$lis.not('.hidden, .divider, .dropdown-header').eq(0).addClass('active').children('a').focus();
        $(this).focus();
      });
    },

    _searchStyle: function () {
      var styles = {
        begins: 'ibegins',
        startsWith: 'ibegins'
      };

      return styles[this.options.liveSearchStyle] || 'icontains';
    },

    val: function (value) {
      if (typeof value !== 'undefined') {
        this.$element.val(value);
        this.render();

        return this.$element;
      } else {
        return this.$element.val();
      }
    },

    changeAll: function (status) {
      if (typeof status === 'undefined') status = true;

      this.findLis();

      var $options = this.$element.find('option'),
          $lisVisible = this.$lis.not('.divider, .dropdown-header, .disabled, .hidden').toggleClass('selected', status),
          lisVisLen = $lisVisible.length,
          selectedOptions = [];

      for (var i = 0; i < lisVisLen; i++) {
        var origIndex = $lisVisible[i].getAttribute('data-original-index');
        selectedOptions[selectedOptions.length] = $options.eq(origIndex)[0];
      }

      $(selectedOptions).prop('selected', status);

      this.render(false);

      this.$element
        .trigger('changed.bs.select')
        .triggerNative('change');
    },

    selectAll: function () {
      return this.changeAll(true);
    },

    deselectAll: function () {
      return this.changeAll(false);
    },

    toggle: function (e) {
      e = e || window.event;
      
      if (e) e.stopPropagation();

      this.$button.trigger('click');
    },

    keydown: function (e) {
      var $this = $(this),
          $parent = $this.is('input') ? $this.parent().parent() : $this.parent(),
          $items,
          that = $parent.data('this'),
          index,
          next,
          first,
          last,
          prev,
          nextPrev,
          prevIndex,
          isActive,
          selector = ':not(.disabled, .hidden, .dropdown-header, .divider)',
          keyCodeMap = {
            32: ' ',
            48: '0',
            49: '1',
            50: '2',
            51: '3',
            52: '4',
            53: '5',
            54: '6',
            55: '7',
            56: '8',
            57: '9',
            59: ';',
            65: 'a',
            66: 'b',
            67: 'c',
            68: 'd',
            69: 'e',
            70: 'f',
            71: 'g',
            72: 'h',
            73: 'i',
            74: 'j',
            75: 'k',
            76: 'l',
            77: 'm',
            78: 'n',
            79: 'o',
            80: 'p',
            81: 'q',
            82: 'r',
            83: 's',
            84: 't',
            85: 'u',
            86: 'v',
            87: 'w',
            88: 'x',
            89: 'y',
            90: 'z',
            96: '0',
            97: '1',
            98: '2',
            99: '3',
            100: '4',
            101: '5',
            102: '6',
            103: '7',
            104: '8',
            105: '9'
          };

      if (that.options.liveSearch) $parent = $this.parent().parent();

      if (that.options.container) $parent = that.$menu;

      $items = $('[role=menu] li', $parent);

      isActive = that.$newElement.hasClass('open');

      if (!isActive && (e.keyCode >= 48 && e.keyCode <= 57 || e.keyCode >= 96 && e.keyCode <= 105 || e.keyCode >= 65 && e.keyCode <= 90)) {
        if (!that.options.container) {
          that.setSize();
          that.$menu.parent().addClass('open');
          isActive = true;
        } else {
          that.$button.trigger('click');
        }
        that.$searchbox.focus();
      }

      if (that.options.liveSearch) {
        if (/(^9$|27)/.test(e.keyCode.toString(10)) && isActive && that.$menu.find('.active').length === 0) {
          e.preventDefault();
          that.$menu.parent().removeClass('open');
          if (that.options.container) that.$newElement.removeClass('open');
          that.$button.focus();
        }
        // $items contains li elements when liveSearch is enabled
        $items = $('[role=menu] li' + selector, $parent);
        if (!$this.val() && !/(38|40)/.test(e.keyCode.toString(10))) {
          if ($items.filter('.active').length === 0) {
            $items = that.$menuInner.find('li');
            if (that.options.liveSearchNormalize) {
              $items = $items.filter(':a' + that._searchStyle() + '(' + normalizeToBase(keyCodeMap[e.keyCode]) + ')');
            } else {
              $items = $items.filter(':' + that._searchStyle() + '(' + keyCodeMap[e.keyCode] + ')');
            }
          }
        }
      }

      if (!$items.length) return;

      if (/(38|40)/.test(e.keyCode.toString(10))) {
        index = $items.index($items.find('a').filter(':focus').parent());
        first = $items.filter(selector).first().index();
        last = $items.filter(selector).last().index();
        next = $items.eq(index).nextAll(selector).eq(0).index();
        prev = $items.eq(index).prevAll(selector).eq(0).index();
        nextPrev = $items.eq(next).prevAll(selector).eq(0).index();

        if (that.options.liveSearch) {
          $items.each(function (i) {
            if (!$(this).hasClass('disabled')) {
              $(this).data('index', i);
            }
          });
          index = $items.index($items.filter('.active'));
          first = $items.first().data('index');
          last = $items.last().data('index');
          next = $items.eq(index).nextAll().eq(0).data('index');
          prev = $items.eq(index).prevAll().eq(0).data('index');
          nextPrev = $items.eq(next).prevAll().eq(0).data('index');
        }

        prevIndex = $this.data('prevIndex');

        if (e.keyCode == 38) {
          if (that.options.liveSearch) index--;
          if (index != nextPrev && index > prev) index = prev;
          if (index < first) index = first;
          if (index == prevIndex) index = last;
        } else if (e.keyCode == 40) {
          if (that.options.liveSearch) index++;
          if (index == -1) index = 0;
          if (index != nextPrev && index < next) index = next;
          if (index > last) index = last;
          if (index == prevIndex) index = first;
        }

        $this.data('prevIndex', index);

        if (!that.options.liveSearch) {
          $items.eq(index).children('a').focus();
        } else {
          e.preventDefault();
          if (!$this.hasClass('dropdown-toggle')) {
            $items.removeClass('active').eq(index).addClass('active').children('a').focus();
            $this.focus();
          }
        }

      } else if (!$this.is('input')) {
        var keyIndex = [],
            count,
            prevKey;

        $items.each(function () {
          if (!$(this).hasClass('disabled')) {
            if ($.trim($(this).children('a').text().toLowerCase()).substring(0, 1) == keyCodeMap[e.keyCode]) {
              keyIndex.push($(this).index());
            }
          }
        });

        count = $(document).data('keycount');
        count++;
        $(document).data('keycount', count);

        prevKey = $.trim($(':focus').text().toLowerCase()).substring(0, 1);

        if (prevKey != keyCodeMap[e.keyCode]) {
          count = 1;
          $(document).data('keycount', count);
        } else if (count >= keyIndex.length) {
          $(document).data('keycount', 0);
          if (count > keyIndex.length) count = 1;
        }

        $items.eq(keyIndex[count - 1]).children('a').focus();
      }

      // Select focused option if "Enter", "Spacebar" or "Tab" (when selectOnTab is true) are pressed inside the menu.
      if ((/(13|32)/.test(e.keyCode.toString(10)) || (/(^9$)/.test(e.keyCode.toString(10)) && that.options.selectOnTab)) && isActive) {
        if (!/(32)/.test(e.keyCode.toString(10))) e.preventDefault();
        if (!that.options.liveSearch) {
          var elem = $(':focus');
          elem.click();
          // Bring back focus for multiselects
          elem.focus();
          // Prevent screen from scrolling if the user hit the spacebar
          e.preventDefault();
          // Fixes spacebar selection of dropdown items in FF & IE
          $(document).data('spaceSelect', true);
        } else if (!/(32)/.test(e.keyCode.toString(10))) {
          that.$menuInner.find('.active a').click();
          $this.focus();
        }
        $(document).data('keycount', 0);
      }

      if ((/(^9$|27)/.test(e.keyCode.toString(10)) && isActive && (that.multiple || that.options.liveSearch)) || (/(27)/.test(e.keyCode.toString(10)) && !isActive)) {
        that.$menu.parent().removeClass('open');
        if (that.options.container) that.$newElement.removeClass('open');
        that.$button.focus();
      }
    },

    mobile: function () {
      this.$element.addClass('mobile-device');
    },

    refresh: function () {
      this.$lis = null;
      this.liObj = {};
      this.reloadLi();
      this.render();
      this.checkDisabled();
      this.liHeight(true);
      this.setStyle();
      this.setWidth();
      if (this.$lis) this.$searchbox.trigger('propertychange');

      this.$element.trigger('refreshed.bs.select');
    },

    hide: function () {
      this.$newElement.hide();
    },

    show: function () {
      this.$newElement.show();
    },

    remove: function () {
      this.$newElement.remove();
      this.$element.remove();
    },

    destroy: function () {
        this.$newElement.before(this.$element).remove();

        if (this.$bsContainer) {
            this.$bsContainer.remove();
        } else {
            this.$menu.remove();
        }

        this.$element
          .off('.bs.select')
          .removeData('selectpicker')
          .removeClass('bs-select-hidden selectpicker');
    }
  };

  // SELECTPICKER PLUGIN DEFINITION
  // ==============================
  function Plugin(option, event) {
    // get the args of the outer function..
    var args = arguments;
    // The arguments of the function are explicitly re-defined from the argument list, because the shift causes them
    // to get lost/corrupted in android 2.3 and IE9 #715 #775
    var _option = option,
        _event = event;
    [].shift.apply(args);

    var value;
    var chain = this.each(function () {
      var $this = $(this);
      if ($this.is('select')) {
        var data = $this.data('selectpicker'),
            options = typeof _option == 'object' && _option;

        if (!data) {
          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);
          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);
          $this.data('selectpicker', (data = new Selectpicker(this, config, _event)));
        } else if (options) {
          for (var i in options) {
            if (options.hasOwnProperty(i)) {
              data.options[i] = options[i];
            }
          }
        }

        if (typeof _option == 'string') {
          if (data[_option] instanceof Function) {
            value = data[_option].apply(data, args);
          } else {
            value = data.options[_option];
          }
        }
      }
    });

    if (typeof value !== 'undefined') {
      //noinspection JSUnusedAssignment
      return value;
    } else {
      return chain;
    }
  }

  var old = $.fn.selectpicker;
  $.fn.selectpicker = Plugin;
  $.fn.selectpicker.Constructor = Selectpicker;

  // SELECTPICKER NO CONFLICT
  // ========================
  $.fn.selectpicker.noConflict = function () {
    $.fn.selectpicker = old;
    return this;
  };

  $(document)
      .data('keycount', 0)
      .on('keydown.bs.select', '.bootstrap-select [data-toggle=dropdown], .bootstrap-select [role="menu"], .bs-searchbox input', Selectpicker.prototype.keydown)
      .on('focusin.modal', '.bootstrap-select [data-toggle=dropdown], .bootstrap-select [role="menu"], .bs-searchbox input', function (e) {
        e.stopPropagation();
      });

  // SELECTPICKER DATA-API
  // =====================
  $(window).on('load.bs.select.data-api', function () {
    $('.selectpicker').each(function () {
      var $selectpicker = $(this);
      Plugin.call($selectpicker, $selectpicker.data());
    })
  });
})(jQuery);

// FormValidation.io
/*!
 * FormValidation (http://formvalidation.io)
 * The best jQuery plugin to validate form fields. Support Bootstrap, Foundation, Pure, SemanticUI, UIKit and custom frameworks
 *
 * @version     v0.7.1, built on 2016-02-01 12:00:57 AM
 * @author      https://twitter.com/formvalidation
 * @copyright   (c) 2013 - 2016 Nguyen Huu Phuoc
 * @license     http://formvalidation.io/license/
 */
// Register the namespace
window.FormValidation = {
    AddOn:     {},  // Add-ons
    Framework: {},  // Supported frameworks
    I18n:      {},  // i18n
    Validator: {}   // Available validators
};

if (typeof jQuery === 'undefined') {
    throw new Error('FormValidation requires jQuery');
}

(function($) {
    var version = $.fn.jquery.split(' ')[0].split('.');
    if ((+version[0] < 2 && +version[1] < 9) || (+version[0] === 1 && +version[1] === 9 && +version[2] < 1)) {
        throw new Error('FormValidation requires jQuery version 1.9.1 or higher');
    }
}(jQuery));

(function($) {
    // TODO: Remove backward compatibility
    /**
     * Constructor
     *
     * @param {jQuery|String} form The form element or selector
     * @param {Object} options The options
     * @param {String} [namespace] The optional namespace which is used for data-{namespace}-xxx attributes and internal data.
     * Currently, it's used to support backward version
     * @constructor
     */
    FormValidation.Base = function(form, options, namespace) {
        this.$form      = $(form);
        this.options    = $.extend({}, $.fn.formValidation.DEFAULT_OPTIONS, options);
        this._namespace = namespace || 'fv';

        this.$invalidFields = $([]);    // Array of invalid fields
        this.$submitButton  = null;     // The submit button which is clicked to submit form
        this.$hiddenButton  = null;

        // Validating status
        this.STATUS_NOT_VALIDATED = 'NOT_VALIDATED';
        this.STATUS_VALIDATING    = 'VALIDATING';
        this.STATUS_INVALID       = 'INVALID';
        this.STATUS_VALID         = 'VALID';
        this.STATUS_IGNORED       = 'IGNORED';

        // Default message
        this.DEFAULT_MESSAGE      = $.fn.formValidation.DEFAULT_MESSAGE;

        // Determine the event that is fired when user change the field value
        // Most modern browsers supports input event except IE 7, 8.
        // IE 9 supports input event but the event is still not fired if I press the backspace key.
        // Get IE version
        // https://gist.github.com/padolsey/527683/#comment-7595
        this._ieVersion = (function() {
            var v = 3, div = document.createElement('div'), a = div.all || [];
            while (div.innerHTML = '<!--[if gt IE '+(++v)+']><br><![endif]-->', a[0]) {}
            return v > 4 ? v : document.documentMode;
        }());

        var el = document.createElement('div');
        this._changeEvent = (this._ieVersion === 9 || !('oninput' in el)) ? 'keyup' : 'input';

        // The flag to indicate that the form is ready to submit when a remote/callback validator returns
        this._submitIfValid = null;

        // Field elements
        this._cacheFields = {};

        this._init();
    };

    FormValidation.Base.prototype = {
        constructor: FormValidation.Base,

        /**
         * Check if the number of characters of field value exceed the threshold or not
         *
         * @param {jQuery} $field The field element
         * @returns {Boolean}
         */
        _exceedThreshold: function($field) {
            var ns        = this._namespace,
                field     = $field.attr('data-' + ns + '-field'),
                threshold = this.options.fields[field].threshold || this.options.threshold;
            if (!threshold) {
                return true;
            }
            var cannotType = $.inArray($field.attr('type'), ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'reset', 'submit']) !== -1;
            return (cannotType || $field.val().length >= threshold);
        },

        /**
         * Init form
         */
        _init: function() {
            var that    = this,
                ns      = this._namespace,
                options = {
                    addOns:         {},
                    autoFocus:      this.$form.attr('data-' + ns + '-autofocus'),
                    button: {
                        selector: this.$form.attr('data-' + ns + '-button-selector') || this.$form.attr('data-' + ns + '-submitbuttons'), // Support backward
                        disabled: this.$form.attr('data-' + ns + '-button-disabled')
                    },
                    control: {
                        valid:   this.$form.attr('data-' + ns + '-control-valid'),
                        invalid: this.$form.attr('data-' + ns + '-control-invalid')
                    },
                    err: {
                        clazz:     this.$form.attr('data-' + ns + '-err-clazz'),
                        container: this.$form.attr('data-' + ns + '-err-container') || this.$form.attr('data-' + ns + '-container'), // Support backward
                        parent:    this.$form.attr('data-' + ns + '-err-parent')
                    },
                    events: {
                        formInit:         this.$form.attr('data-' + ns + '-events-form-init'),
                        formPreValidate:  this.$form.attr('data-' + ns + '-events-form-prevalidate'),
                        formError:        this.$form.attr('data-' + ns + '-events-form-error'),
                        formReset:        this.$form.attr('data-' + ns + '-events-form-reset'),
                        formSuccess:      this.$form.attr('data-' + ns + '-events-form-success'),
                        fieldAdded:       this.$form.attr('data-' + ns + '-events-field-added'),
                        fieldRemoved:     this.$form.attr('data-' + ns + '-events-field-removed'),
                        fieldInit:        this.$form.attr('data-' + ns + '-events-field-init'),
                        fieldError:       this.$form.attr('data-' + ns + '-events-field-error'),
                        fieldReset:       this.$form.attr('data-' + ns + '-events-field-reset'),
                        fieldSuccess:     this.$form.attr('data-' + ns + '-events-field-success'),
                        fieldStatus:      this.$form.attr('data-' + ns + '-events-field-status'),
                        localeChanged:    this.$form.attr('data-' + ns + '-events-locale-changed'),
                        validatorError:   this.$form.attr('data-' + ns + '-events-validator-error'),
                        validatorSuccess: this.$form.attr('data-' + ns + '-events-validator-success'),
                        validatorIgnored: this.$form.attr('data-' + ns + '-events-validator-ignored')
                    },
                    excluded:      this.$form.attr('data-' + ns + '-excluded'),
                    icon: {
                        valid:      this.$form.attr('data-' + ns + '-icon-valid')      || this.$form.attr('data-' + ns + '-feedbackicons-valid'),      // Support backward
                        invalid:    this.$form.attr('data-' + ns + '-icon-invalid')    || this.$form.attr('data-' + ns + '-feedbackicons-invalid'),    // Support backward
                        validating: this.$form.attr('data-' + ns + '-icon-validating') || this.$form.attr('data-' + ns + '-feedbackicons-validating'), // Support backward
                        feedback:   this.$form.attr('data-' + ns + '-icon-feedback')
                    },
                    live:          this.$form.attr('data-' + ns + '-live'),
                    locale:        this.$form.attr('data-' + ns + '-locale'),
                    message:       this.$form.attr('data-' + ns + '-message'),
                    onPreValidate: this.$form.attr('data-' + ns + '-onprevalidate'),
                    onError:       this.$form.attr('data-' + ns + '-onerror'),
                    onReset:       this.$form.attr('data-' + ns + '-onreset'),
                    onSuccess:     this.$form.attr('data-' + ns + '-onsuccess'),
                    row: {
                        selector: this.$form.attr('data-' + ns + '-row-selector') || this.$form.attr('data-' + ns + '-group'), // Support backward
                        valid:    this.$form.attr('data-' + ns + '-row-valid'),
                        invalid:  this.$form.attr('data-' + ns + '-row-invalid'),
                        feedback: this.$form.attr('data-' + ns + '-row-feedback')
                    },
                    threshold:     this.$form.attr('data-' + ns + '-threshold'),
                    trigger:       this.$form.attr('data-' + ns + '-trigger'),
                    verbose:       this.$form.attr('data-' + ns + '-verbose'),
                    fields:        {}
                };

            this.$form
                // Disable client side validation in HTML 5
                .attr('novalidate', 'novalidate')
                .addClass(this.options.elementClass)
                // Disable the default submission first
                .on('submit.' + ns, function(e) {
                    e.preventDefault();
                    that.validate();
                })
                .on('click.' + ns, this.options.button.selector, function() {
                    that.$submitButton  = $(this);
                    // The user just click the submit button
                    that._submitIfValid = true;
                });

            if (this.options.declarative === true || this.options.declarative === 'true') {
                // Find all fields which have either "name" or "data-{namespace}-field" attribute
                this.$form
                    .find('[name], [data-' + ns + '-field]')
                    .each(function() {
                        var $field = $(this),
                            field  = $field.attr('name') || $field.attr('data-' + ns + '-field'),
                            opts   = that._parseOptions($field);
                        if (opts) {
                            $field.attr('data-' + ns + '-field', field);
                            options.fields[field] = $.extend({}, opts, options.fields[field]);
                        }
                    });
            }

            this.options = $.extend(true, this.options, options);

            // Normalize the err.parent option
            if ('string' === typeof this.options.err.parent) {
                this.options.err.parent = new RegExp(this.options.err.parent);
            }

            // Support backward
            if (this.options.container) {
                this.options.err.container = this.options.container;
                delete this.options.container;
            }
            if (this.options.feedbackIcons) {
                this.options.icon = $.extend(true, this.options.icon, this.options.feedbackIcons);
                delete this.options.feedbackIcons;
            }
            if (this.options.group) {
                this.options.row.selector = this.options.group;
                delete this.options.group;
            }
            if (this.options.submitButtons) {
                this.options.button.selector = this.options.submitButtons;
                delete this.options.submitButtons;
            }

            // If the locale is not found, reset it to default one
            if (!FormValidation.I18n[this.options.locale]) {
                this.options.locale = $.fn.formValidation.DEFAULT_OPTIONS.locale;
            }

            // Parse the add-on options from HTML attributes
            if (this.options.declarative === true || this.options.declarative === 'true') {
                this.options = $.extend(true, this.options, { addOns: this._parseAddOnOptions() });
            }

            // When pressing Enter on any field in the form, the first submit button will do its job.
            // The form then will be submitted.
            // I create a first hidden submit button
            this.$hiddenButton = $('<button/>')
                                    .attr('type', 'submit')
                                    .prependTo(this.$form)
                                    .addClass('fv-hidden-submit')
                                    .css({ display: 'none', width: 0, height: 0 });

            this.$form
                .on('click.' +  this._namespace, '[type="submit"]', function(e) {
                    // #746: Check if the button click handler returns false
                    if (!e.isDefaultPrevented()) {
                        var $target = $(e.target),
                            // The button might contain HTML tag
                            $button = $target.is('[type="submit"]') ? $target.eq(0) : $target.parent('[type="submit"]').eq(0);

                        // Don't perform validation when clicking on the submit button/input which
                        // aren't defined by the 'button.selector' option
                        if (that.options.button.selector && !$button.is(that.options.button.selector) && !$button.is(that.$hiddenButton)) {
                            that.$form.off('submit.' + that._namespace).submit();
                        }
                    }
                });

            for (var field in this.options.fields) {
                this._initField(field);
            }

            // Init the add-ons
            for (var addOn in this.options.addOns) {
                if ('function' === typeof FormValidation.AddOn[addOn].init) {
                    FormValidation.AddOn[addOn].init(this, this.options.addOns[addOn]);
                }
            }

            this.$form.trigger($.Event(this.options.events.formInit), {
                bv: this,   // Support backward
                fv: this,
                options: this.options
            });

            // Prepare the events
            if (this.options.onPreValidate) {
                this.$form.on(this.options.events.formPreValidate, function(e) {
                    FormValidation.Helper.call(that.options.onPreValidate, [e]);
                });
            }
            if (this.options.onSuccess) {
                this.$form.on(this.options.events.formSuccess, function(e) {
                    FormValidation.Helper.call(that.options.onSuccess, [e]);
                });
            }
            if (this.options.onError) {
                this.$form.on(this.options.events.formError, function(e) {
                    FormValidation.Helper.call(that.options.onError, [e]);
                });
            }
            if (this.options.onReset) {
                this.$form.on(this.options.events.formReset, function(e) {
                    FormValidation.Helper.call(that.options.onReset, [e]);
                });
            }
        },

        /**
         * Init field
         *
         * @param {String|jQuery} field The field name or field element
         */
        _initField: function(field) {
            var ns     = this._namespace,
                fields = $([]);
            switch (typeof field) {
                case 'object':
                    fields = field;
                    field  = field.attr('data-' + ns + '-field');
                    break;
                case 'string':
                    fields = this.getFieldElements(field);
                    fields.attr('data-' + ns + '-field', field);
                    break;
                default:
                    break;
            }

            // We don't need to validate non-existing fields
            if (fields.length === 0) {
                return;
            }

            if (this.options.fields[field] === null || this.options.fields[field].validators === null) {
                return;
            }

            var validators = this.options.fields[field].validators,
                validatorName,
                alias;
            for (validatorName in validators) {
                alias = validators[validatorName].alias || validatorName;
                if (!FormValidation.Validator[alias]) {
                    delete this.options.fields[field].validators[validatorName];
                }
            }
            if (this.options.fields[field].enabled === null) {
                this.options.fields[field].enabled = true;
            }

            var that      = this,
                total     = fields.length,
                type      = fields.attr('type'),
                updateAll = (total === 1) || ('radio' === type) || ('checkbox' === type),
                trigger   = this._getFieldTrigger(fields.eq(0)),
                clazz     = this.options.err.clazz.split(' ').join('.'),
                events    = $.map(trigger, function(item) {
                    return item + '.update.' + ns;
                }).join(' ');

            for (var i = 0; i < total; i++) {
                var $field    = fields.eq(i),
                    row       = this.options.fields[field].row || this.options.row.selector,
                    $parent   = $field.closest(row),
                    // Allow user to indicate where the error messages are shown
                    // Support backward
                    container = ('function' === typeof (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container))
                                ? (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container).call(this, $field, this)
                                : (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container),
                    $message  = (container && container !== 'tooltip' && container !== 'popover') ? $(container) : this._getMessageContainer($field, row);

                if (container && container !== 'tooltip' && container !== 'popover') {
                    $message.addClass(this.options.err.clazz);
                }

                // Remove all error messages and feedback icons
                $message.find('.' + clazz + '[data-' + ns + '-validator][data-' + ns + '-for="' + field + '"]').remove();
                $parent.find('i[data-' + ns + '-icon-for="' + field + '"]').remove();

                // Whenever the user change the field value, mark it as not validated yet
                $field.off(events).on(events, function() {
                    that.updateStatus($(this), that.STATUS_NOT_VALIDATED);
                });

                // Create help block elements for showing the error messages
                $field.data(ns + '.messages', $message);
                for (validatorName in validators) {
                    $field.data(ns + '.result.' + validatorName, this.STATUS_NOT_VALIDATED);

                    if (!updateAll || i === total - 1) {
                        $('<small/>')
                            .css('display', 'none')
                            .addClass(this.options.err.clazz)
                            .attr('data-' + ns + '-validator', validatorName)
                            .attr('data-' + ns + '-for', field)
                            .attr('data-' + ns + '-result', this.STATUS_NOT_VALIDATED)
                            .html(this._getMessage(field, validatorName))
                            .appendTo($message);
                            // .appendTo($message.find('label').length?$message.find('label') : $message);
                    }

                    // Init the validator
                    alias = validators[validatorName].alias || validatorName;
                    if ('function' === typeof FormValidation.Validator[alias].init) {
                        FormValidation.Validator[alias].init(this, $field, this.options.fields[field].validators[validatorName], validatorName);
                    }
                }

                // Prepare the feedback icons
                if (this.options.fields[field].icon !== false && this.options.fields[field].icon !== 'false'
                    && this.options.icon
                    && this.options.icon.valid && this.options.icon.invalid && this.options.icon.validating
                    && (!updateAll || i === total - 1))
                {
                    // $parent.removeClass(this.options.row.valid).removeClass(this.options.row.invalid).addClass(this.options.row.feedback);
                    // Keep error messages which are populated from back-end
                    $parent.addClass(this.options.row.feedback);
                    var $icon = $('<i/>')
                                    .css('display', 'none')
                                    .addClass(this.options.icon.feedback)
                                    .attr('data-' + ns + '-icon-for', field)
                                    .insertBefore($field);

                    // Store the icon as a data of field element
                    (!updateAll ? $field : fields).data(ns + '.icon', $icon);

                    if ('tooltip' === container || 'popover' === container) {
                        (!updateAll ? $field : fields)
                            .on(this.options.events.fieldError, function() {
                                $parent.addClass('fv-has-tooltip');
                            })
                            .on(this.options.events.fieldSuccess, function() {
                                $parent.removeClass('fv-has-tooltip');
                            });

                        $field
                            // Show tooltip/popover message when field gets focus
                            .off('focus.container.' + ns)
                            .on('focus.container.' + ns, function() {
                                that._showTooltip($(this), container);
                            })
                            // and hide them when losing focus
                            .off('blur.container.' + ns)
                            .on('blur.container.' + ns, function() {
                                that._hideTooltip($(this), container);
                            });
                    }

                    if ('string' === typeof this.options.fields[field].icon && this.options.fields[field].icon !== 'true') {
                        $icon.appendTo($(this.options.fields[field].icon));
                    } else {
                        this._fixIcon($field, $icon);
                    }
                }
            }

            // Sort the validators by priority
            var sortedByPriority = [];
            for (validatorName in validators) {
                alias = validators[validatorName].alias || validatorName;

                // Determine the priority
                validators[validatorName].priority = parseInt(validators[validatorName].priority
                                                            || FormValidation.Validator[alias].priority
                                                            || 1, 10);
                sortedByPriority.push({
                    validator: validatorName,
                    priority: validators[validatorName].priority
                });
            }
            sortedByPriority = sortedByPriority.sort(function(a, b) {
                return a.priority - b.priority;
            });

            // Prepare the events
            fields
                .data(ns + '.validators', sortedByPriority)
                .on(this.options.events.fieldSuccess, function(e, data) {
                    var onSuccess = that.getOptions(data.field, null, 'onSuccess');
                    if (onSuccess) {
                        FormValidation.Helper.call(onSuccess, [e, data]);
                    }
                })
                .on(this.options.events.fieldError, function(e, data) {
                    var onError = that.getOptions(data.field, null, 'onError');
                    if (onError) {
                        FormValidation.Helper.call(onError, [e, data]);
                    }
                })
                .on(this.options.events.fieldReset, function(e, data) {
                    var onReset = that.getOptions(data.field, null, 'onReset');
                    if (onReset) {
                        FormValidation.Helper.call(onReset, [e, data]);
                    }
                })
                .on(this.options.events.fieldStatus, function(e, data) {
                    var onStatus = that.getOptions(data.field, null, 'onStatus');
                    if (onStatus) {
                        FormValidation.Helper.call(onStatus, [e, data]);
                    }
                })
                .on(this.options.events.validatorError, function(e, data) {
                    var onError = that.getOptions(data.field, data.validator, 'onError');
                    if (onError) {
                        FormValidation.Helper.call(onError, [e, data]);
                    }
                })
                .on(this.options.events.validatorIgnored, function(e, data) {
                    var onIgnored = that.getOptions(data.field, data.validator, 'onIgnored');
                    if (onIgnored) {
                        FormValidation.Helper.call(onIgnored, [e, data]);
                    }
                })
                .on(this.options.events.validatorSuccess, function(e, data) {
                    var onSuccess = that.getOptions(data.field, data.validator, 'onSuccess');
                    if (onSuccess) {
                        FormValidation.Helper.call(onSuccess, [e, data]);
                    }
                });

            // Set live mode
            this.onLiveChange(fields, 'live', function() {
                if (that._exceedThreshold($(this))) {
                    that.validateField($(this));
                }
            });

            fields.trigger($.Event(this.options.events.fieldInit), {
                bv: this,   // Support backward
                fv: this,
                field: field,
                element: fields
            });
        },

        /**
         * Check if the field is excluded.
         * Returning true means that the field will not be validated
         *
         * @param {jQuery} $field The field element
         * @returns {Boolean}
         */
        _isExcluded: function($field) {
            var ns           = this._namespace,
                excludedAttr = $field.attr('data-' + ns + '-excluded'),
                // I still need to check the 'name' attribute while initializing the field
                field        = $field.attr('data-' + ns + '-field') || $field.attr('name');

            switch (true) {
                case (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'true' || this.options.fields[field].excluded === true)):
                case (excludedAttr === 'true'):
                case (excludedAttr === ''):
                    return true;

                case (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'false' || this.options.fields[field].excluded === false)):
                case (excludedAttr === 'false'):
                    return false;

                case (!!field && this.options.fields && this.options.fields[field] && 'function' === typeof this.options.fields[field].excluded):
                    return this.options.fields[field].excluded.call(this, $field, this);

                case (!!field && this.options.fields && this.options.fields[field] && 'string' === typeof this.options.fields[field].excluded):
                case (excludedAttr):
                    return FormValidation.Helper.call(this.options.fields[field].excluded, [$field, this]);

                default:
                    if (this.options.excluded) {
                        // Convert to array first
                        if ('string' === typeof this.options.excluded) {
                            this.options.excluded = $.map(this.options.excluded.split(','), function(item) {
                                // Trim the spaces
                                return $.trim(item);
                            });
                        }

                        var length = this.options.excluded.length;
                        for (var i = 0; i < length; i++) {
                            if (('string' === typeof this.options.excluded[i] && $field.is(this.options.excluded[i]))
                                || ('function' === typeof this.options.excluded[i] && this.options.excluded[i].call(this, $field, this) === true))
                            {
                                return true;
                            }
                        }
                    }
                    return false;
            }
        },

        /**
         * Get a field changed trigger event
         *
         * @param {jQuery} $field The field element
         * @returns {String[]} The event names triggered on field change
         */
        _getFieldTrigger: function($field) {
            var ns      = this._namespace,
                trigger = $field.data(ns + '.trigger');
            if (trigger) {
                return trigger;
            }

            // IE10/11 auto fires input event of elements using the placeholder attribute
            // https://connect.microsoft.com/IE/feedback/details/856700/
            var type  = $field.attr('type'),
                name  = $field.attr('data-' + ns + '-field'),
                event = ('radio' === type || 'checkbox' === type || 'file' === type || 'SELECT' === $field.get(0).tagName)
                        ? 'change'
                        : (this._ieVersion >= 10 && $field.attr('placeholder') ? 'keyup' : this._changeEvent);
            trigger   = ((this.options.fields[name] ? this.options.fields[name].trigger : null) || this.options.trigger || event).split(' ');

            // Since the trigger data is used many times, I need to cache it to use later
            $field.data(ns + '.trigger', trigger);

            return trigger;
        },

        /**
         * Get the error message for given field and validator
         *
         * @param {String} field The field name
         * @param {String} validatorName The validator name
         * @returns {String}
         */
        _getMessage: function(field, validatorName) {
            if (!this.options.fields[field] || !this.options.fields[field].validators) {
                return '';
            }
            var validators = this.options.fields[field].validators,
                alias      = (validators[validatorName] && validators[validatorName].alias) ? validators[validatorName].alias : validatorName;
            if (!FormValidation.Validator[alias]) {
                return '';
            }

            switch (true) {
                case !!validators[validatorName].message:
                    return validators[validatorName].message;
                case !!this.options.fields[field].message:
                    return this.options.fields[field].message;
                case !!this.options.message:
                    return this.options.message;
                case (!!FormValidation.I18n[this.options.locale] && !!FormValidation.I18n[this.options.locale][alias] && !!FormValidation.I18n[this.options.locale][alias]['default']):
                    return FormValidation.I18n[this.options.locale][alias]['default'];
                default:
                    return this.DEFAULT_MESSAGE;
            }
        },

        /**
         * Get the element to place the error messages
         *
         * @param {jQuery} $field The field element
         * @param {String} row
         * @returns {jQuery}
         */
        _getMessageContainer: function($field, row) {
            if (!this.options.err.parent) {
                throw new Error('The err.parent option is not defined');
            }

            var $parent = $field.parent();
            if ($parent.is(row)) {
                return $parent;
            }

            var cssClasses = $parent.attr('class');
            if (!cssClasses) {
                return this._getMessageContainer($parent, row);
            }

            if (this.options.err.parent.test(cssClasses)) {
                return $parent;
            }

            return this._getMessageContainer($parent, row);
        },

        /**
         * Parse the add-on options from HTML attributes
         *
         * @returns {Object}
         */
        _parseAddOnOptions: function() {
            var ns     = this._namespace,
                names  = this.$form.attr('data-' + ns + '-addons'),
                addOns = this.options.addOns || {};

            if (names) {
                names = names.replace(/\s/g, '').split(',');
                for (var i = 0; i < names.length; i++) {
                    if (!addOns[names[i]]) {
                        addOns[names[i]] = {};
                    }
                }
            }

            // Try to parse each add-on options
            var addOn, attrMap, attr, option;
            for (addOn in addOns) {
                if (!FormValidation.AddOn[addOn]) {
                    // Add-on is not found
                    delete addOns[addOn];
                    continue;
                }

                attrMap = FormValidation.AddOn[addOn].html5Attributes;
                if (attrMap) {
                    for (attr in attrMap) {
                        option = this.$form.attr('data-' + ns + '-addons-' + addOn.toLowerCase() + '-' + attr.toLowerCase());
                        if (option) {
                            addOns[addOn][attrMap[attr]] = option;
                        }
                    }
                }
            }

            return addOns;
        },

        /**
         * Parse the validator options from HTML attributes
         *
         * @param {jQuery} $field The field element
         * @returns {Object}
         */
        _parseOptions: function($field) {
            var ns           = this._namespace,
                field        = $field.attr('name') || $field.attr('data-' + ns + '-field'),
                validators   = {},
                aliasAttr    = new RegExp('^data-' + ns + '-([a-z]+)-alias$'),
                validatorSet = $.extend({}, FormValidation.Validator),
                validator,
                v,          // Validator name
                attrName,
                enabled,
                optionName,
                optionAttrName,
                optionValue,
                html5AttrName,
                html5AttrMap;

            // Determine whether the alias validator is used by checking the data-fv-validator-alias attribute
            $.each($field.get(0).attributes, function(i, attribute) {
                if (attribute.value && aliasAttr.test(attribute.name)) {
                    v = attribute.name.split('-')[2];
                    if (validatorSet[attribute.value]) {
                        validatorSet[v]       = validatorSet[attribute.value];
                        validatorSet[v].alias = attribute.value;
                    }
                }
            });

            for (v in validatorSet) {
                validator    = validatorSet[v];
                attrName     = 'data-' + ns + '-' + v.toLowerCase(),
                enabled      = $field.attr(attrName) + '';
                html5AttrMap = ('function' === typeof validator.enableByHtml5) ? validator.enableByHtml5($field) : null;

                if ((html5AttrMap && enabled !== 'false')
                    || (html5AttrMap !== true && ('' === enabled || 'true' === enabled || attrName === enabled.toLowerCase())))
                {
                    // Try to parse the options via attributes
                    validator.html5Attributes = $.extend({}, {
                                                    message: 'message',
                                                    onerror: 'onError',
                                                    onreset: 'onReset',
                                                    onsuccess: 'onSuccess',
                                                    priority: 'priority',
                                                    transformer: 'transformer'
                                                }, validator.html5Attributes);
                    validators[v] = $.extend({}, html5AttrMap === true ? {} : html5AttrMap, validators[v]);
                    if (validator.alias) {
                        validators[v].alias = validator.alias;
                    }

                    for (html5AttrName in validator.html5Attributes) {
                        optionName     = validator.html5Attributes[html5AttrName];
                        optionAttrName = 'data-' + ns + '-' + v.toLowerCase() + '-' + html5AttrName;
                        optionValue    = $field.attr(optionAttrName);
                        if (optionValue) {
                            if ('true' === optionValue || optionAttrName === optionValue.toLowerCase()) {
                                optionValue = true;
                            } else if ('false' === optionValue) {
                                optionValue = false;
                            }
                            validators[v][optionName] = optionValue;
                        }
                    }
                }
            }

            var opts = {
                    autoFocus:   $field.attr('data-' + ns + '-autofocus'),
                    err:         $field.attr('data-' + ns + '-err-container') || $field.attr('data-' + ns + '-container'), // Support backward
                    enabled:     $field.attr('data-' + ns + '-enabled'),
                    excluded:    $field.attr('data-' + ns + '-excluded'),
                    icon:        $field.attr('data-' + ns + '-icon') || $field.attr('data-' + ns + '-feedbackicons') || (this.options.fields && this.options.fields[field] ? this.options.fields[field].feedbackIcons : null), // Support backward
                    message:     $field.attr('data-' + ns + '-message'),
                    onError:     $field.attr('data-' + ns + '-onerror'),
                    onReset:     $field.attr('data-' + ns + '-onreset'),
                    onStatus:    $field.attr('data-' + ns + '-onstatus'),
                    onSuccess:   $field.attr('data-' + ns + '-onsuccess'),
                    row:         $field.attr('data-' + ns + '-row') || $field.attr('data-' + ns + '-group') || (this.options.fields && this.options.fields[field] ? this.options.fields[field].group : null), // Support backward
                    selector:    $field.attr('data-' + ns + '-selector'),
                    threshold:   $field.attr('data-' + ns + '-threshold'),
                    transformer: $field.attr('data-' + ns + '-transformer'),
                    trigger:     $field.attr('data-' + ns + '-trigger'),
                    verbose:     $field.attr('data-' + ns + '-verbose'),
                    validators:  validators
                },
                emptyOptions    = $.isEmptyObject(opts),        // Check if the field options are set using HTML attributes
                emptyValidators = $.isEmptyObject(validators);  // Check if the field validators are set using HTML attributes

            if (!emptyValidators || (!emptyOptions && this.options.fields && this.options.fields[field])) {
                //opts.validators = validators;
                return opts;
            } else {
                return null;
            }
        },

        /**
         * Called when all validations are completed
         */
        _submit: function() {
            var isValid = this.isValid();
            if (isValid === null) {
                return;
            }

            var eventType = isValid ? this.options.events.formSuccess : this.options.events.formError,
                e         = $.Event(eventType);

            this.$form.trigger(e);

            // Call default handler
            // Check if whether the submit button is clicked
            if (this.$submitButton) {
                isValid ? this._onSuccess(e) : this._onError(e);
            }
        },

        // ~~~~~~
        // Events
        // ~~~~~~

        /**
         * The default handler of error.form.fv event.
         * It will be called when there is a invalid field
         *
         * @param {jQuery.Event} e The jQuery event object
         */
        _onError: function(e) {
            if (e.isDefaultPrevented()) {
                return;
            }

            if ('submitted' === this.options.live) {
                // Enable live mode
                this.options.live = 'enabled';

                var that = this;
                for (var field in this.options.fields) {
                    (function(f) {
                        var fields  = that.getFieldElements(f);
                        if (fields.length) {
                            that.onLiveChange(fields, 'live', function() {
                                if (that._exceedThreshold($(this))) {
                                    that.validateField($(this));
                                }
                            });
                        }
                    })(field);
                }
            }

            // Determined the first invalid field which will be focused on automatically
            var ns = this._namespace;
            for (var i = 0; i < this.$invalidFields.length; i++) {
                var $field    = this.$invalidFields.eq(i),
                    autoFocus = this.isOptionEnabled($field.attr('data-' + ns + '-field'), 'autoFocus');
                if (autoFocus) {
                    // Focus the field
                    $field.focus();
                    break;
                }
            }
        },

        /**
         * Called after validating a field element
         *
         * @param {jQuery} $field The field element
         * @param {String} [validatorName] The validator name
         */
        _onFieldValidated: function($field, validatorName) {
            var ns            = this._namespace,
                field         = $field.attr('data-' + ns + '-field'),
                validators    = this.options.fields[field].validators,
                counter       = {},
                numValidators = 0,
                data          = {
                    bv: this,   // Support backward
                    fv: this,
                    field: field,
                    element: $field,
                    validator: validatorName,
                    result: $field.data(ns + '.response.' + validatorName)
                };

            // Trigger an event after given validator completes
            if (validatorName) {
                switch ($field.data(ns + '.result.' + validatorName)) {
                    case this.STATUS_INVALID:
                        $field.trigger($.Event(this.options.events.validatorError), data);
                        break;
                    case this.STATUS_VALID:
                        $field.trigger($.Event(this.options.events.validatorSuccess), data);
                        break;
                    case this.STATUS_IGNORED:
                        $field.trigger($.Event(this.options.events.validatorIgnored), data);
                        break;
                    default:
                        break;
                }
            }

            counter[this.STATUS_NOT_VALIDATED] = 0;
            counter[this.STATUS_VALIDATING]    = 0;
            counter[this.STATUS_INVALID]       = 0;
            counter[this.STATUS_VALID]         = 0;
            counter[this.STATUS_IGNORED]       = 0;

            for (var v in validators) {
                if (validators[v].enabled === false) {
                    continue;
                }

                numValidators++;
                var result = $field.data(ns + '.result.' + v);
                if (result) {
                    counter[result]++;
                }
            }

            // The sum of valid fields now also include ignored fields
            if (counter[this.STATUS_VALID] + counter[this.STATUS_IGNORED] === numValidators) {
                // Remove from the list of invalid fields
                this.$invalidFields = this.$invalidFields.not($field);

                $field.trigger($.Event(this.options.events.fieldSuccess), data);
            }
            // If all validators are completed and there is at least one validator which doesn't pass
            else if ((counter[this.STATUS_NOT_VALIDATED] === 0 || !this.isOptionEnabled(field, 'verbose')) && counter[this.STATUS_VALIDATING] === 0 && counter[this.STATUS_INVALID] > 0) {
                // Add to the list of invalid fields
                this.$invalidFields = this.$invalidFields.add($field);

                $field.trigger($.Event(this.options.events.fieldError), data);
            }
        },

        /**
         * The default handler of success.form.fv event.
         * It will be called when all the fields are valid
         *
         * @param {jQuery.Event} e The jQuery event object
         */
        _onSuccess: function(e) {
            if (e.isDefaultPrevented()) {
                return;
            }

            // Submit the form
            this.disableSubmitButtons(true).defaultSubmit();
        },

        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        // Abstract methods
        // Need to be implemented by sub-class that supports specific framework
        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        /**
         * Specific framework might need to adjust the icon position
         *
         * @param {jQuery} $field The field element
         * @param {jQuery} $icon The icon element
         */
        _fixIcon: function($field, $icon) {
        },

        /**
         * Create a tooltip or popover
         * It will be shown when focusing on the field
         *
         * @param {jQuery} $field The field element
         * @param {String} message The message
         * @param {String} type Can be 'tooltip' or 'popover'
         */
        _createTooltip: function($field, message, type) {
        },

        /**
         * Destroy the tooltip or popover
         *
         * @param {jQuery} $field The field element
         * @param {String} type Can be 'tooltip' or 'popover'
         */
        _destroyTooltip: function($field, type) {
        },

        /**
         * Hide a tooltip or popover
         *
         * @param {jQuery} $field The field element
         * @param {String} type Can be 'tooltip' or 'popover'
         */
        _hideTooltip: function($field, type) {
        },

        /**
         * Show a tooltip or popover
         *
         * @param {jQuery} $field The field element
         * @param {String} type Can be 'tooltip' or 'popover'
         */
        _showTooltip: function($field, type) {
        },

        // ~~~~~~~~~~~~~~
        // Public methods
        // ~~~~~~~~~~~~~~

        /**
         * Submit the form using default submission.
         * It also does not perform any validations when submitting the form
         */
        defaultSubmit: function() {
            var ns = this._namespace;
            if (this.$submitButton) {
                // Create hidden input to send the submit buttons
                $('<input/>')
                    .attr({
                        'type': 'hidden',
                        name: this.$submitButton.attr('name')
                    })
                    .attr('data-' + ns + '-submit-hidden', '')
                    .val(this.$submitButton.val())
                    .appendTo(this.$form);
            }

            // Submit form
            this.$form.off('submit.' + ns).submit();
        },

        /**
         * Disable/enable submit buttons
         *
         * @param {Boolean} disabled Can be true or false
         * @returns {FormValidation.Base}
         */
        disableSubmitButtons: function(disabled) {
            if (!disabled) {
                this.$form
                    .find(this.options.button.selector)
                        .removeAttr('disabled')
                        .removeClass(this.options.button.disabled);
            } else if (this.options.live !== 'disabled') {
                // Don't disable if the live validating mode is disabled
                this.$form
                    .find(this.options.button.selector)
                        .attr('disabled', 'disabled')
                        .addClass(this.options.button.disabled);
            }

            return this;
        },

        /**
         * Retrieve the field elements by given name
         *
         * @param {String} field The field name
         * @returns {null|jQuery[]}
         */
        getFieldElements: function(field) {
            if (!this._cacheFields[field]) {
                if (this.options.fields[field] && this.options.fields[field].selector) {
                    // Look for the field inside the form first
                    var f = this.$form.find(this.options.fields[field].selector);
                    // If not found, search in entire document
                    this._cacheFields[field] = f.length ? f : $(this.options.fields[field].selector);
                } else {
                    this._cacheFields[field] = this.$form.find('[name="' + field + '"]');
                }
            }

            return this._cacheFields[field];
        },

        /**
         * Get the field value after applying transformer
         *
         * @param {String|jQuery} field The field name or field element
         * @param {String} validatorName The validator name
         * @returns {String}
         */
        getFieldValue: function(field, validatorName) {
            var $field, ns = this._namespace;
            if ('string' === typeof field) {
                $field = this.getFieldElements(field);
                if ($field.length === 0) {
                    return null;
                }
            } else {
                $field = field;
                field  = $field.attr('data-' + ns + '-field');
            }

            if (!field || !this.options.fields[field]) {
                return $field.val();
            }

            var transformer = (this.options.fields[field].validators && this.options.fields[field].validators[validatorName]
                                ? this.options.fields[field].validators[validatorName].transformer : null)
                                || this.options.fields[field].transformer;
            return transformer ? FormValidation.Helper.call(transformer, [$field, validatorName, this]) : $field.val();
        },

        /**
         * Get the namespace
         *
         * @returns {String}
         */
        getNamespace: function() {
            return this._namespace;
        },

        /**
         * Get the field options
         *
         * @param {String|jQuery} [field] The field name or field element. If it is not set, the method returns the form options
         * @param {String} [validator] The name of validator. It null, the method returns form options
         * @param {String} [option] The option name
         * @return {String|Object}
         */
        getOptions: function(field, validator, option) {
            var ns = this._namespace;
            if (!field) {
                return option ? this.options[option] : this.options;
            }
            if ('object' === typeof field) {
                field = field.attr('data-' + ns + '-field');
            }
            if (!this.options.fields[field]) {
                return null;
            }

            var options = this.options.fields[field];
            if (!validator) {
                return option ? options[option] : options;
            }
            if (!options.validators || !options.validators[validator]) {
                return null;
            }

            return option ? options.validators[validator][option] : options.validators[validator];
        },

        /**
         * Get the validating result of field
         *
         * @param {String|jQuery} field The field name or field element
         * @param {String} validatorName The validator name
         * @returns {String} The status. Can be 'NOT_VALIDATED', 'VALIDATING', 'INVALID', 'VALID' or 'IGNORED'
         */
        getStatus: function(field, validatorName) {
            var ns = this._namespace;
            switch (typeof field) {
                case 'object':
                    return field.data(ns + '.result.' + validatorName);
                case 'string':
                /* falls through */
                default:
                    return this.getFieldElements(field).eq(0).data(ns + '.result.' + validatorName);
            }
        },

        /**
         * Check whether or not a field option is enabled
         *
         * @param {String} field The field name
         * @param {String} option The option name, "verbose", "autoFocus", for example
         * @returns {Boolean}
         */
        isOptionEnabled: function(field, option) {
            if (this.options.fields[field] && (this.options.fields[field][option] === 'true' || this.options.fields[field][option] === true)) {
                return true;
            }
            if (this.options.fields[field] && (this.options.fields[field][option] === 'false' || this.options.fields[field][option] === false)) {
                return false;
            }
            return this.options[option] === 'true' || this.options[option] === true;
        },

        /**
         * Check the form validity
         *
         * @returns {Boolean|null} Returns one of three values
         * - true, if all fields are valid
         * - false, if there is one invalid field
         * - null, if there is at least one field which is not validated yet or being validated
         */
        isValid: function() {
            for (var field in this.options.fields) {
                var isValidField = this.isValidField(field);
                if (isValidField === null) {
                    return null;
                }
                if (isValidField === false) {
                    return false;
                }
            }

            return true;
        },

        /**
         * Check if all fields inside a given container are valid.
         * It's useful when working with a wizard-like such as tab, collapse
         *
         * @param {String|jQuery} container The container selector or element
         * @returns {Boolean|null} Returns one of three values
         * - true, if all fields inside the container are valid
         * - false, if there is one invalid field inside the container
         * - null, if the container consists of at least one field which is not validated yet or being validated
         */
        isValidContainer: function(container) {
            var that       = this,
                ns         = this._namespace,
                fields     = [],
                $container = ('string' === typeof container) ? $(container) : container;
            if ($container.length === 0) {
                return true;
            }

            $container.find('[data-' + ns + '-field]').each(function() {
                var $field = $(this);
                if (!that._isExcluded($field)) {
                    fields.push($field);
                }
            });

            var total = fields.length,
                clazz = this.options.err.clazz.split(' ').join('.');
            for (var i = 0; i < total; i++) {
                var $f      = fields[i],
                    field   = $f.attr('data-' + ns + '-field'),
                    $errors = $f.data(ns + '.messages')
                                .find('.' + clazz + '[data-' + ns + '-validator][data-' + ns + '-for="' + field + '"]');

                if (this.options.fields && this.options.fields[field]
                    && (this.options.fields[field].enabled === 'false' || this.options.fields[field].enabled === false))
                {
                    continue;
                }

                if ($errors.filter('[data-' + ns + '-result="' + this.STATUS_INVALID + '"]').length > 0) {
                    return false;
                }

                // If the field is not validated
                if ($errors.filter('[data-' + ns + '-result="' + this.STATUS_NOT_VALIDATED + '"]').length > 0
                    || $errors.filter('[data-' + ns + '-result="' + this.STATUS_VALIDATING + '"]').length > 0)
                {
                    return null;
                }
            }

            return true;
        },

        /**
         * Check if the field is valid or not
         *
         * @param {String|jQuery} field The field name or field element
         * @returns {Boolean|null} Returns one of three values
         * - true, if the field passes all validators
         * - false, if the field doesn't pass any validator
         * - null, if there is at least one validator which isn't validated yet or being validated
         */
        isValidField: function(field) {
            var ns     = this._namespace,
                fields = $([]);
            switch (typeof field) {
                case 'object':
                    fields = field;
                    field  = field.attr('data-' + ns + '-field');
                    break;
                case 'string':
                    fields = this.getFieldElements(field);
                    break;
                default:
                    break;
            }
            if (fields.length === 0 || !this.options.fields[field]
                || this.options.fields[field].enabled === 'false' || this.options.fields[field].enabled === false)
            {
                return true;
            }

            var type  = fields.attr('type'),
                total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,
                $field, validatorName, status;
            for (var i = 0; i < total; i++) {
                $field = fields.eq(i);
                if (this._isExcluded($field)) {
                    continue;
                }

                for (validatorName in this.options.fields[field].validators) {
                    if (this.options.fields[field].validators[validatorName].enabled === false) {
                        continue;
                    }

                    status = $field.data(ns + '.result.' + validatorName);
                    if (status === this.STATUS_VALIDATING || status === this.STATUS_NOT_VALIDATED) {
                        return null;
                    } else if (status === this.STATUS_INVALID) {
                        return false;
                    }
                }
            }

            return true;
        },

        /**
         * Detach a handler function for a field live change event
         *
         * @param {jQuery[]} $fields The field elements
         * @param {String} namespace The event namespace
         * @returns {FormValidation.Base}
         */
        offLiveChange: function($fields, namespace) {
            if ($fields === null || $fields.length === 0) {
                return this;
            }

            var ns      = this._namespace,
                trigger = this._getFieldTrigger($fields.eq(0)),
                events  = $.map(trigger, function(item) {
                    return item + '.' + namespace + '.' + ns;
                }).join(' ');

            $fields.off(events);
            return this;
        },

        /**
         * Attach a handler function for a field live change event
         *
         * @param {jQuery[]} $fields The field elements
         * @param {String} namespace The event namespace
         * @param {Function} handler The handler function
         * @returns {FormValidation.Base}
         */
        onLiveChange: function($fields, namespace, handler) {
            if ($fields === null || $fields.length === 0) {
                return this;
            }

            var ns      = this._namespace,
                trigger = this._getFieldTrigger($fields.eq(0)),
                events  = $.map(trigger, function(item) {
                    return item + '.' + namespace + '.' + ns;
                }).join(' ');

            switch (this.options.live) {
                case 'submitted':
                    break;
                case 'disabled':
                    $fields.off(events);
                    break;
                case 'enabled':
                /* falls through */
                default:
                    $fields.off(events).on(events, function(e) {
                        handler.apply(this, arguments);
                    });
                    break;
            }

            return this;
        },

        /**
         * Update the error message
         *
         * @param {String|jQuery} field The field name or field element
         * @param {String} validator The validator name
         * @param {String} message The message
         * @returns {FormValidation.Base}
         */
        updateMessage: function(field, validator, message) {
            var ns      = this._namespace,
                $fields = $([]);
            switch (typeof field) {
                case 'object':
                    $fields = field;
                    field   = field.attr('data-' + ns + '-field');
                    break;
                case 'string':
                    $fields = this.getFieldElements(field);
                    break;
                default:
                    break;
            }

            var clazz = this.options.err.clazz.split(' ').join('.');
            $fields.each(function() {
                $(this)
                    .data(ns + '.messages')
                    .find('.' + clazz + '[data-' + ns + '-validator="' + validator + '"][data-' + ns + '-for="' + field + '"]').html(message);
            });

            return this;
        },

        /**
         * Update all validating results of field
         *
         * @param {String|jQuery} field The field name or field element
         * @param {String} status The status. Can be 'NOT_VALIDATED', 'VALIDATING', 'INVALID', 'VALID' or 'IGNORED'
         * @param {String} [validatorName] The validator name. If null, the method updates validity result for all validators
         * @returns {FormValidation.Base}
         */
        updateStatus: function(field, status, validatorName) {
            var ns     = this._namespace,
                fields = $([]);
            switch (typeof field) {
                case 'object':
                    fields = field;
                    field  = field.attr('data-' + ns + '-field');
                    break;
                case 'string':
                    fields = this.getFieldElements(field);
                    break;
                default:
                    break;
            }

            if (!field || !this.options.fields[field]) {
                return this;
            }

            if (status === this.STATUS_NOT_VALIDATED) {
                // Reset the flag
                // To prevent the form from doing submit when a deferred validator returns true while typing
                this._submitIfValid = false;
            }

            var that  = this,
                type  = fields.attr('type'),
                row   = this.options.fields[field].row || this.options.row.selector,
                total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,
                clazz = this.options.err.clazz.split(' ').join('.');

            for (var i = 0; i < total; i++) {
                var $field       = fields.eq(i);
                if (this._isExcluded($field)) {
                    continue;
                }

                var $parent      = $field.closest(row),
                    $message     = $field.data(ns + '.messages'),
                    $allErrors   = $message.find('.' + clazz + '[data-' + ns + '-validator][data-' + ns + '-for="' + field + '"]'),
                    $errors      = validatorName ? $allErrors.filter('[data-' + ns + '-validator="' + validatorName + '"]') : $allErrors,
                    $icon        = $field.data(ns + '.icon'),
                    // Support backward
                    container    = ('function' === typeof (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container))
                                    ? (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container).call(this, $field, this)
                                    : (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container),
                    isValidField = null,
                    isValidating,
                    isNotValidated;

                // Update status
                if (validatorName) {
                    $field.data(ns + '.result.' + validatorName, status);
                } else {
                    for (var v in this.options.fields[field].validators) {
                        $field.data(ns + '.result.' + v, status);
                    }
                }

                // Show/hide error elements and feedback icons
                $errors.attr('data-' + ns + '-result', status);

                switch (status) {
                    case this.STATUS_VALIDATING:
                        isValidField = null;
                        this.disableSubmitButtons(true);
                        $field.removeClass(this.options.control.valid).removeClass(this.options.control.invalid);
                        $parent.removeClass(this.options.row.valid).removeClass(this.options.row.invalid);
                        if ($icon) {
                            $icon.removeClass(this.options.icon.valid).removeClass(this.options.icon.invalid).addClass(this.options.icon.validating).show();
                        }
                        break;

                    case this.STATUS_INVALID:
                        isValidField = false;
                        this.disableSubmitButtons(true);
                        $field.removeClass(this.options.control.valid).addClass(this.options.control.invalid);
                        $parent.removeClass(this.options.row.valid).addClass(this.options.row.invalid);
                        if ($icon) {
                            $icon.removeClass(this.options.icon.valid).removeClass(this.options.icon.validating).addClass(this.options.icon.invalid).show();
                        }
                        break;

                    case this.STATUS_IGNORED:       // Treat ignored fields like they are valid with some specialties
                    case this.STATUS_VALID:
                        isValidating   = ($allErrors.filter('[data-' + ns + '-result="' + this.STATUS_VALIDATING +'"]').length > 0);
                        isNotValidated = ($allErrors.filter('[data-' + ns + '-result="' + this.STATUS_NOT_VALIDATED +'"]').length > 0);

                        var numIgnored = $allErrors.filter('[data-' + ns + '-result="' + this.STATUS_IGNORED +'"]').length;

                        // If the field is valid (passes all validators)
                        isValidField   = (isValidating || isNotValidated)     // There are some validators that have not done
                                        ? null
                                        // All validators are completed
                                        : ($allErrors.filter('[data-' + ns + '-result="' + this.STATUS_VALID +'"]').length + numIgnored === $allErrors.length);

                        $field.removeClass(this.options.control.valid).removeClass(this.options.control.invalid);

                        if (isValidField === true) {
                            this.disableSubmitButtons(this.isValid() === false);
                            if (status === this.STATUS_VALID) {
                                $field.addClass(this.options.control.valid);
                            }
                        } else if (isValidField === false) {
                            this.disableSubmitButtons(true);
                            if (status === this.STATUS_VALID) {
                                $field.addClass(this.options.control.invalid);
                            }
                        }

                        if ($icon) {
                            $icon.removeClass(this.options.icon.invalid).removeClass(this.options.icon.validating).removeClass(this.options.icon.valid);
                            if (status === this.STATUS_VALID || numIgnored !== $allErrors.length) {
                                $icon.addClass(isValidating
                                                ? this.options.icon.validating
                                                : (isValidField === null ? '' : (isValidField ? this.options.icon.valid : this.options.icon.invalid)))
                                     .show();
                            }
                        }

                        var isValidContainer = this.isValidContainer($parent);
                        if (isValidContainer !== null) {
                            $parent.removeClass(this.options.row.valid).removeClass(this.options.row.invalid);
                            if (status === this.STATUS_VALID || numIgnored !== $allErrors.length) {
                                $parent.addClass(isValidContainer ? this.options.row.valid : this.options.row.invalid);
                            }
                        }
                        break;

                    case this.STATUS_NOT_VALIDATED:
                    /* falls through */
                    default:
                        isValidField = null;
                        this.disableSubmitButtons(false);
                        $field.removeClass(this.options.control.valid).removeClass(this.options.control.invalid);
                        $parent.removeClass(this.options.row.valid).removeClass(this.options.row.invalid);
                        if ($icon) {
                            $icon.removeClass(this.options.icon.valid).removeClass(this.options.icon.invalid).removeClass(this.options.icon.validating).hide();
                        }
                        break;
                }

                if ($icon && ('tooltip' === container || 'popover' === container)) {
                    (isValidField === false)
                        // Only show the first error message
                        ? this._createTooltip($field, $allErrors.filter('[data-' + ns + '-result="' + that.STATUS_INVALID + '"]').eq(0).html(), container)
                        : this._destroyTooltip($field, container);
                } else {
                    (status === this.STATUS_INVALID) ? $errors.show() : $errors.hide();
                }

                // Trigger an event
                $field.trigger($.Event(this.options.events.fieldStatus), {
                    bv: this,   // Support backward
                    fv: this,
                    field: field,
                    element: $field,
                    status: status
                });
                this._onFieldValidated($field, validatorName);
            }

            return this;
        },

        /**
         * Validate the form
         *
         * @returns {FormValidation.Base}
         */
        validate: function() {
            if ($.isEmptyObject(this.options.fields)) {
                this._submit();
                return this;
            }
            this.$form.trigger($.Event(this.options.events.formPreValidate));

            this.disableSubmitButtons(true);
            this._submitIfValid = false;
            for (var field in this.options.fields) {
                this.validateField(field);
            }

            this._submit();
            this._submitIfValid = true;

            return this;
        },

        /**
         * Validate given field
         *
         * @param {String|jQuery} field The field name or field element
         * @returns {FormValidation.Base}
         */
        validateField: function(field) {
            var ns     = this._namespace,
                fields = $([]);
            switch (typeof field) {
                case 'object':
                    fields = field;
                    field  = field.attr('data-' + ns + '-field');
                    break;
                case 'string':
                    fields = this.getFieldElements(field);
                    break;
                default:
                    break;
            }

            if (fields.length === 0 || !this.options.fields[field]
                || this.options.fields[field].enabled === 'false' || this.options.fields[field].enabled === false)
            {
                return this;
            }

            var that       = this,
                type       = fields.attr('type'),
                total      = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,
                updateAll  = ('radio' === type || 'checkbox' === type),
                validators = this.options.fields[field].validators,
                verbose    = this.isOptionEnabled(field, 'verbose'),
                validatorName,
                alias,
                validateResult;

            for (var i = 0; i < total; i++) {
                var $field = fields.eq(i);
                if (this._isExcluded($field)) {
                    continue;
                }

                var stop             = false,
                    sortedByPriority = $field.data(ns + '.validators'),
                    numValidators    = sortedByPriority.length;

                for (var j = 0; j < numValidators; j++) {
                    validatorName = sortedByPriority[j].validator;
                    if ($field.data(ns + '.dfs.' + validatorName)) {
                        $field.data(ns + '.dfs.' + validatorName).reject();
                    }
                    if (stop) {
                        break;
                    }

                    // Don't validate field if it is already done
                    var result = $field.data(ns + '.result.' + validatorName);
                    if (result === this.STATUS_VALID || result === this.STATUS_INVALID) {
                        this._onFieldValidated($field, validatorName);
                        continue;
                    } else if (validators[validatorName].enabled === false) {
                        // Changed in v0.6.2:
                        // When the field validator is disabled, it should be treated as STATUS_IGNORED instead of STATUS_VALID
                        // By doing that, the field with only disabled and ignored validators will not have success/error class
                        this.updateStatus(updateAll ? field : $field, this.STATUS_IGNORED, validatorName);
                        continue;
                    }

                    $field.data(ns + '.result.' + validatorName, this.STATUS_VALIDATING);

                    // Check whether or not the validator is just an alias of another
                    alias          = validators[validatorName].alias || validatorName;
                    validateResult = FormValidation.Validator[alias].validate(this, $field, validators[validatorName], validatorName);

                    // validateResult can be a $.Deferred object ...
                    if ('object' === typeof validateResult && validateResult.resolve) {
                        this.updateStatus(updateAll ? field : $field, this.STATUS_VALIDATING, validatorName);
                        $field.data(ns + '.dfs.' + validatorName, validateResult);

                        validateResult.done(function($f, v, response) {
                            // v is validator name
                            $f.removeData(ns + '.dfs.' + v).data(ns + '.response.' + v, response);
                            if (response.message) {
                                that.updateMessage($f, v, response.message);
                            }

                            that.updateStatus(updateAll ? $f.attr('data-' + ns + '-field') : $f,
                                              response.valid === true ? that.STATUS_VALID : (response.valid === false ? that.STATUS_INVALID : that.STATUS_IGNORED),
                                              v);

                            if (response.valid && that._submitIfValid === true) {
                                // If a remote validator returns true and the form is ready to submit, then do it
                                that._submit();
                            } else if (response.valid === false && !verbose) {
                                stop = true;
                            }
                        });
                    }
                    // ... or object { valid: true/false/null, message: 'dynamic message', otherKey: value, ... }
                    else if ('object' === typeof validateResult && validateResult.valid !== undefined) {
                        $field.data(ns + '.response.' + validatorName, validateResult);
                        if (validateResult.message) {
                            this.updateMessage(updateAll ? field : $field, validatorName, validateResult.message);
                        }
                        this.updateStatus(updateAll ? field : $field,
                                          validateResult.valid === true ? this.STATUS_VALID : (validateResult.valid === false ? this.STATUS_INVALID : this.STATUS_IGNORED),
                                          validatorName);
                        if (validateResult.valid === false && !verbose) {
                            break;
                        }
                    }
                    // ... or a boolean value
                    else if ('boolean' === typeof validateResult) {
                        $field.data(ns + '.response.' + validatorName, validateResult);
                        this.updateStatus(updateAll ? field : $field, validateResult ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);
                        if (!validateResult && !verbose) {
                            break;
                        }
                    }
                    // ... or null
                    // to indicate that the field should be ignored for current validator
                    else if (null === validateResult) {
                        $field.data(ns + '.response.' + validatorName, validateResult);
                        this.updateStatus(updateAll ? field : $field, this.STATUS_IGNORED, validatorName);
                    }
                }
            }

            return this;
        },

        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        // Useful APIs which aren't used internally
        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        /**
         * Add a new field
         *
         * @param {String|jQuery} field The field name or field element
         * @param {Object} [options] The validator rules
         * @returns {FormValidation.Base}
         */
        addField: function(field, options) {
            var ns     = this._namespace,
                fields = $([]);
            switch (typeof field) {
                case 'object':
                    fields = field;
                    field  = field.attr('data-' + ns + '-field') || field.attr('name');
                    break;
                case 'string':
                    delete this._cacheFields[field];
                    fields = this.getFieldElements(field);
                    break;
                default:
                    break;
            }

            fields.attr('data-' + ns + '-field', field);

            var type  = fields.attr('type'),
                total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;

            for (var i = 0; i < total; i++) {
                var $field = fields.eq(i);

                // Try to parse the options from HTML attributes
                var opts = this._parseOptions($field);
                opts = (opts === null) ? options : $.extend(true, opts, options);

                this.options.fields[field] = $.extend(true, this.options.fields[field], opts);

                // Update the cache
                this._cacheFields[field] = this._cacheFields[field] ? this._cacheFields[field].add($field) : $field;

                // Init the element
                this._initField(('checkbox' === type || 'radio' === type) ? field : $field);
            }

            this.disableSubmitButtons(false);
            // Trigger an event
            this.$form.trigger($.Event(this.options.events.fieldAdded), {
                field: field,
                element: fields,
                options: this.options.fields[field]
            });

            return this;
        },

        /**
         * Destroy the plugin
         * It will remove all error messages, feedback icons and turn off the events
         */
        destroy: function() {
            var ns = this._namespace, i, field, fields, $field, validator, $icon, row, alias;

            // Destroy the validators first
            for (field in this.options.fields) {
                fields = this.getFieldElements(field);
                for (i = 0; i < fields.length; i++) {
                    $field = fields.eq(i);
                    for (validator in this.options.fields[field].validators) {
                        if ($field.data(ns + '.dfs.' + validator)) {
                            $field.data(ns + '.dfs.' + validator).reject();
                        }
                        $field.removeData(ns + '.result.' + validator)
                              .removeData(ns + '.response.' + validator)
                              .removeData(ns + '.dfs.' + validator);

                        // Destroy the validator
                        alias = this.options.fields[field].validators[validator].alias || validator;
                        if ('function' === typeof FormValidation.Validator[alias].destroy) {
                            FormValidation.Validator[alias].destroy(this, $field, this.options.fields[field].validators[validator], validator);
                        }
                    }
                }
            }

            // Remove messages and icons
            var clazz = this.options.err.clazz.split(' ').join('.');
            for (field in this.options.fields) {
                fields = this.getFieldElements(field);
                row    = this.options.fields[field].row || this.options.row.selector;
                for (i = 0; i < fields.length; i++) {
                    $field = fields.eq(i);
                    $field
                        // Remove all error messages
                        .data(ns + '.messages')
                            .find('.' + clazz + '[data-' + ns + '-validator][data-' + ns + '-for="' + field + '"]').remove().end()
                            .end()
                        .removeData(ns + '.messages')
                        .removeData(ns + '.validators')
                        // Remove feedback classes
                        .closest(row)
                            .removeClass(this.options.row.valid)
                            .removeClass(this.options.row.invalid)
                            .removeClass(this.options.row.feedback)
                            .end()
                        // Turn off events
                        .off('.' + ns)
                        .removeAttr('data-' + ns + '-field');

                    // Remove feedback icons, tooltip/popover container
                    // Support backward
                    var container = ('function' === typeof (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container))
                                    ? (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container).call(this, $field, this)
                                    : (this.options.fields[field].container || this.options.fields[field].err || this.options.err.container);
                    if ('tooltip' === container || 'popover' === container) {
                        this._destroyTooltip($field, container);
                    }

                    $icon = $field.data(ns + '.icon');
                    if ($icon) {
                        $icon.remove();
                    }
                    $field.removeData(ns + '.icon')
                          // It's safe to remove trigger data here, because it might be used when destroying the validator
                          .removeData(ns + '.trigger');
                }
            }

            // Destroy the add-ons
            for (var addOn in this.options.addOns) {
                if ('function' === typeof FormValidation.AddOn[addOn].destroy) {
                    FormValidation.AddOn[addOn].destroy(this, this.options.addOns[addOn]);
                }
            }

            this.disableSubmitButtons(false);   // Enable submit buttons
            this.$hiddenButton.remove();        // Remove the hidden button

            this.$form
                .removeClass(this.options.elementClass)
                .off('.' + ns)
                .removeData('bootstrapValidator')   // Support backward
                .removeData('formValidation')
                // Remove generated hidden elements
                .find('[data-' + ns + '-submit-hidden]').remove().end()
                .find('[type="submit"]')
                    .off('click.' + ns);
        },

        /**
         * Enable/Disable all validators to given field
         *
         * @param {String} field The field name
         * @param {Boolean} enabled Enable/Disable field validators
         * @param {String} [validatorName] The validator name. If null, all validators will be enabled/disabled
         * @returns {FormValidation.Base}
         */
        enableFieldValidators: function(field, enabled, validatorName) {
            var validators = this.options.fields[field].validators;

            // Enable/disable particular validator
            if (validatorName
                && validators
                && validators[validatorName] && validators[validatorName].enabled !== enabled)
            {
                this.options.fields[field].validators[validatorName].enabled = enabled;
                this.updateStatus(field, this.STATUS_NOT_VALIDATED, validatorName);
            }
            // Enable/disable all validators
            else if (!validatorName && this.options.fields[field].enabled !== enabled) {
                this.options.fields[field].enabled = enabled;
                for (var v in validators) {
                    this.enableFieldValidators(field, enabled, v);
                }
            }

            return this;
        },

        /**
         * Some validators have option which its value is dynamic.
         * For example, the zipCode validator has the country option which might be changed dynamically by a select element.
         *
         * @param {jQuery|String} field The field name or element
         * @param {String|Function} option The option which can be determined by:
         * - a string
         * - name of field which defines the value
         * - name of function which returns the value
         * - a function returns the value
         *
         * The callback function has the format of
         *      callback: function(value, validator, $field) {
         *          // value is the value of field
         *          // validator is the BootstrapValidator instance
         *          // $field is the field element
         *      }
         *
         * @returns {String}
         */
        getDynamicOption: function(field, option) {
            var $field = ('string' === typeof field) ? this.getFieldElements(field) : field,
                value  = $field.val();

            // Option can be determined by
            // ... a function
            if ('function' === typeof option) {
                return FormValidation.Helper.call(option, [value, this, $field]);
            }
            // ... value of other field
            else if ('string' === typeof option) {
                var $f = this.getFieldElements(option);
                if ($f.length) {
                    return $f.val();
                }
                // ... return value of callback
                else {
                    return FormValidation.Helper.call(option, [value, this, $field]) || option;
                }
            }

            return null;
        },

        /**
         * Get the form element
         *
         * @returns {jQuery}
         */
        getForm: function() {
            return this.$form;
        },

        /**
         * Get the list of invalid fields
         *
         * @returns {jQuery[]}
         */
        getInvalidFields: function() {
            return this.$invalidFields;
        },

        /**
         * Get the current locale
         *
         * @return {String}
         */
        getLocale: function() {
            return this.options.locale;
        },

        /**
         * Get the error messages
         *
         * @param {String|jQuery} [field] The field name or field element
         * If the field is not defined, the method returns all error messages of all fields
         * @param {String} [validator] The name of validator
         * If the validator is not defined, the method returns error messages of all validators
         * @returns {String[]}
         */
        getMessages: function(field, validator) {
            var that     = this,
                ns       = this._namespace,
                messages = [],
                $fields  = $([]);

            switch (true) {
                case (field && 'object' === typeof field):
                    $fields = field;
                    break;
                case (field && 'string' === typeof field):
                    var f = this.getFieldElements(field);
                    if (f.length > 0) {
                        var type = f.attr('type');
                        $fields = ('radio' === type || 'checkbox' === type) ? f.eq(0) : f;
                    }
                    break;
                default:
                    $fields = this.$invalidFields;
                    break;
            }

            var filter = validator ? '[data-' + ns + '-validator="' + validator + '"]' : '',
                clazz  = this.options.err.clazz.split(' ').join('.');
            $fields.each(function() {
                messages = messages.concat(
                    $(this)
                        .data(ns + '.messages')
                        .find('.' + clazz + '[data-' + ns + '-for="' + $(this).attr('data-' + ns + '-field') + '"][data-' + ns + '-result="' + that.STATUS_INVALID + '"]' + filter)
                        .map(function() {
                            var v = $(this).attr('data-' + ns + '-validator'),
                                f = $(this).attr('data-' + ns + '-for');
                            return (that.options.fields[f].validators[v].enabled === false) ? '' : $(this).html();
                        })
                        .get()
                );
            });

            return messages;
        },

        /**
         * Returns the clicked submit button
         *
         * @returns {jQuery}
         */
        getSubmitButton: function() {
            return this.$submitButton;
        },

        /**
         * Remove a given field
         *
         * @param {String|jQuery} field The field name or field element
         * @returns {FormValidation.Base}
         */
        removeField: function(field) {
            var ns     = this._namespace,
                fields = $([]);
            switch (typeof field) {
                case 'object':
                    fields = field;
                    field  = field.attr('data-' + ns + '-field') || field.attr('name');
                    fields.attr('data-' + ns + '-field', field);
                    break;
                case 'string':
                    fields = this.getFieldElements(field);
                    break;
                default:
                    break;
            }

            if (fields.length === 0) {
                return this;
            }

            var type  = fields.attr('type'),
                total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;

            for (var i = 0; i < total; i++) {
                var $field = fields.eq(i);

                // Remove from the list of invalid fields
                this.$invalidFields = this.$invalidFields.not($field);

                // Update the cache
                this._cacheFields[field] = this._cacheFields[field].not($field);
            }

            if (!this._cacheFields[field] || this._cacheFields[field].length === 0) {
                delete this.options.fields[field];
            }
            if ('checkbox' === type || 'radio' === type) {
                this._initField(field);
            }

            this.disableSubmitButtons(false);
            // Trigger an event
            this.$form.trigger($.Event(this.options.events.fieldRemoved), {
                field: field,
                element: fields
            });

            return this;
        },

        /**
         * Reset given field
         *
         * @param {String|jQuery} field The field name or field element
         * @param {Boolean} [resetValue] If true, the method resets field value to empty or remove checked/selected attribute (for radio/checkbox)
         * @returns {FormValidation.Base}
         */
        resetField: function(field, resetValue) {
            var ns      = this._namespace,
                $fields = $([]);
            switch (typeof field) {
                case 'object':
                    $fields = field;
                    field   = field.attr('data-' + ns + '-field');
                    break;
                case 'string':
                    $fields = this.getFieldElements(field);
                    break;
                default:
                    break;
            }

            var i     = 0,
                total = $fields.length;
            if (this.options.fields[field]) {
                for (i = 0; i < total; i++) {
                    for (var validator in this.options.fields[field].validators) {
                        $fields.eq(i).removeData(ns + '.dfs.' + validator);
                    }
                }
            }

            if (resetValue) {
                var type = $fields.attr('type');
                ('radio' === type || 'checkbox' === type) ? $fields.prop('checked', false).removeAttr('selected') : $fields.val('');
            }

            // Mark field as not validated yet
            this.updateStatus(field, this.STATUS_NOT_VALIDATED);

            for (i = 0; i < total; i++) {
                $fields.eq(i).trigger($.Event(this.options.events.fieldReset), {
                    fv: this,
                    field: field,
                    element: $fields.eq(i),
                    resetValue: resetValue
                });
            }

            return this;
        },

        /**
         * Reset the form
         *
         * @param {Boolean} [resetValue] If true, the method resets field value to empty or remove checked/selected attribute (for radio/checkbox)
         * @returns {FormValidation.Base}
         */
        resetForm: function(resetValue) {
            for (var field in this.options.fields) {
                this.resetField(field, resetValue);
            }

            this.$invalidFields = $([]);
            this.$submitButton  = null;

            // Enable submit buttons
            this.disableSubmitButtons(false);

            this.$form.trigger($.Event(this.options.events.formReset), {
                fv: this,
                resetValue: resetValue
            });

            return this;
        },

        /**
         * Revalidate given field
         * It's used when you need to revalidate the field which its value is updated by other plugin
         *
         * @param {String|jQuery} field The field name of field element
         * @returns {FormValidation.Base}
         */
        revalidateField: function(field) {
            this.updateStatus(field, this.STATUS_NOT_VALIDATED)
                .validateField(field);

            return this;
        },

        /**
         * Set the locale
         *
         * @param {String} locale The locale in format of countrycode_LANGUAGECODE
         * @returns {FormValidation.Base}
         */
        setLocale: function(locale) {
            this.options.locale = locale;
            this.$form.trigger($.Event(this.options.events.localeChanged), {
                locale: locale,
                bv: this,   // Support backward
                fv: this
            });

            return this;
        },

        /**
         * Update the option of a specific validator
         *
         * @param {String|jQuery} field The field name or field element
         * @param {String} validator The validator name
         * @param {String} option The option name
         * @param {String} value The value to set
         * @returns {FormValidation.Base}
         */
        updateOption: function(field, validator, option, value) {
            var ns = this._namespace;
            if ('object' === typeof field) {
                field = field.attr('data-' + ns + '-field');
            }
            if (this.options.fields[field] && this.options.fields[field].validators[validator]) {
                this.options.fields[field].validators[validator][option] = value;
                this.updateStatus(field, this.STATUS_NOT_VALIDATED, validator);
            }

            return this;
        },

        /**
         * Validate given container
         * It can be used with isValidContainer() when you want to work with wizard form
         *
         * @param {String|jQuery} container The container selector or element
         * @returns {FormValidation.Base}
         */
        validateContainer: function(container) {
            var that       = this,
                ns         = this._namespace,
                fields     = [],
                $container = ('string' === typeof container) ? $(container) : container;
            if ($container.length === 0) {
                return this;
            }

            $container.find('[data-' + ns + '-field]').each(function() {
                var $field = $(this);
                if (!that._isExcluded($field)) {
                    fields.push($field);
                }
            });

            var total = fields.length;
            for (var i = 0; i < total; i++) {
                this.validateField(fields[i]);
            }

            return this;
        }
    };

    // Plugin definition
    $.fn.formValidation = function(option) {
        var params = arguments;
        return this.each(function() {
            var $this   = $(this),
                data    = $this.data('formValidation'),
                options = 'object' === typeof option && option;
            if (!data) {
                var framework = (options.framework || $this.attr('data-fv-framework') || 'bootstrap').toLowerCase(),
                    clazz     = framework.substr(0, 1).toUpperCase() + framework.substr(1);

                if (typeof FormValidation.Framework[clazz] === 'undefined') {
                    throw new Error('The class FormValidation.Framework.' + clazz + ' is not implemented');
                }

                data = new FormValidation.Framework[clazz](this, options);
                $this.addClass('fv-form-' + framework)
                     .data('formValidation', data);
            }

            // Allow to call plugin method
            if ('string' === typeof option) {
                data[option].apply(data, Array.prototype.slice.call(params, 1));
            }
        });
    };

    $.fn.formValidation.Constructor = FormValidation.Base;

    // Default message
    $.fn.formValidation.DEFAULT_MESSAGE = 'This value is not valid';

    // The default options sorted in alphabetical order
    $.fn.formValidation.DEFAULT_OPTIONS = {
        // The first invalid field will be focused automatically
        autoFocus: true,

        // Support declarative usage (setting options via HTML 5 attributes)
        // Setting to false can improve the performance
        declarative: true,

        // The form CSS class
        elementClass: 'fv-form',

        // Use custom event name to avoid window.onerror being invoked by jQuery
        // See #630
        events: {
            // Support backward
            formInit: 'init.form.fv',
            formPreValidate: 'prevalidate.form.fv',
            formError: 'err.form.fv',
            formReset: 'rst.form.fv',
            formSuccess: 'success.form.fv',
            fieldAdded: 'added.field.fv',
            fieldRemoved: 'removed.field.fv',
            fieldInit: 'init.field.fv',
            fieldError: 'err.field.fv',
            fieldReset: 'rst.field.fv',
            fieldSuccess: 'success.field.fv',
            fieldStatus: 'status.field.fv',
            localeChanged: 'changed.locale.fv',
            validatorError: 'err.validator.fv',
            validatorSuccess: 'success.validator.fv',
            validatorIgnored: 'ignored.validator.fv'
        },

        // Indicate fields which won't be validated
        // By default, the plugin will not validate the following kind of fields:
        // - disabled
        // - hidden
        // - invisible
        //
        // The setting consists of jQuery filters. Accept 3 formats:
        // - A string. Use a comma to separate filter
        // - An array. Each element is a filter
        // - An array. Each element can be a callback function
        //      function($field, validator) {
        //          $field is jQuery object representing the field element
        //          validator is the BootstrapValidator instance
        //          return true or false;
        //      }
        //
        // The 3 following settings are equivalent:
        //
        // 1) ':disabled, :hidden, :not(:visible)'
        // 2) [':disabled', ':hidden', ':not(:visible)']
        // 3) [':disabled', ':hidden', function($field) {
        //        return !$field.is(':visible');
        //    }]
        excluded: [':disabled', ':hidden', ':not(:visible)'],

        // Map the field name with validator rules
        fields: null,

        // Live validating option
        // Can be one of 3 values:
        // - enabled: The plugin validates fields as soon as they are changed
        // - disabled: Disable the live validating. The error messages are only shown after the form is submitted
        // - submitted: The live validating is enabled after the form is submitted
        live: 'enabled',

        // Locale in the format of languagecode_COUNTRYCODE
        locale: 'en_US',

        // Default invalid message
        message: null,

        // The field will not be live validated if its length is less than this number of characters
        threshold: null,

        // Whether to be verbose when validating a field or not.
        // Possible values:
        // - true:  when a field has multiple validators, all of them will be checked, and respectively - if errors occur in
        //          multiple validators, all of them will be displayed to the user
        // - false: when a field has multiple validators, validation for this field will be terminated upon the first encountered error.
        //          Thus, only the very first error message related to this field will be displayed to the user
        verbose: true,

        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        // These options mostly are overridden by specific framework
        // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        button: {
            // The submit buttons selector
            // These buttons will be disabled to prevent the valid form from multiple submissions
            // Don't perform validation when clicking on the submit button/input which have formnovalidate attribute
            selector: '[type="submit"]:not([formnovalidate])',

            // The disabled class
            disabled: ''
        },

        control: {
            // The CSS class for valid control
            valid: '',

            // The CSS class for invalid control
            invalid: ''
        },

        err: {
            // The CSS class of each message element
            clazz: '',

            // The error messages container. It can be:
            // - 'tooltip' if you want to use Bootstrap tooltip to show error messages
            // - 'popover' if you want to use Bootstrap popover to show error messages
            // - a CSS selector indicating the container
            // In the first two cases, since the tooltip/popover should be small enough, the plugin only shows only one error message
            // You also can define the message container for particular field
            container: null,

            // Used to determine where the messages are placed
            parent: null
        },

        // Shows ok/error/loading icons based on the field validity.
        icon: {
            valid: null,
            invalid: null,
            validating: null,
            feedback: ''
        },

        row: {
            // The CSS selector for indicating the element consists of the field
            // You should adjust this option if your form group consists of many fields which not all of them need to be validated
            selector: null,
            valid: '',
            invalid: '',
            feedback: ''
        }
    };
}(jQuery));
;(function($) {
    // Helper methods, which can be used in validator class
    FormValidation.Helper = {
        /**
         * Execute a callback function
         *
         * @param {String|Function} functionName Can be
         * - name of global function
         * - name of namespace function (such as A.B.C)
         * - a function
         * @param {Array} args The callback arguments
         */
        call: function(functionName, args) {
            if ('function' === typeof functionName) {
                return functionName.apply(this, args);
            } else if ('string' === typeof functionName) {
                if ('()' === functionName.substring(functionName.length - 2)) {
                    functionName = functionName.substring(0, functionName.length - 2);
                }
                var ns      = functionName.split('.'),
                    func    = ns.pop(),
                    context = window;
                for (var i = 0; i < ns.length; i++) {
                    context = context[ns[i]];
                }

                return (typeof context[func] === 'undefined') ? null : context[func].apply(this, args);
            }
        },

        /**
         * Validate a date
         *
         * @param {Number} year The full year in 4 digits
         * @param {Number} month The month number
         * @param {Number} day The day number
         * @param {Boolean} [notInFuture] If true, the date must not be in the future
         * @returns {Boolean}
         */
        date: function(year, month, day, notInFuture) {
            if (isNaN(year) || isNaN(month) || isNaN(day)) {
                return false;
            }
            if (day.length > 2 || month.length > 2 || year.length > 4) {
                return false;
            }

            day   = parseInt(day, 10);
            month = parseInt(month, 10);
            year  = parseInt(year, 10);

            if (year < 1000 || year > 9999 || month <= 0 || month > 12) {
                return false;
            }
            var numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            // Update the number of days in Feb of leap year
            if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {
                numDays[1] = 29;
            }

            // Check the day
            if (day <= 0 || day > numDays[month - 1]) {
                return false;
            }

            if (notInFuture === true) {
                var currentDate  = new Date(),
                    currentYear  = currentDate.getFullYear(),
                    currentMonth = currentDate.getMonth(),
                    currentDay   = currentDate.getDate();
                return (year < currentYear
                || (year === currentYear && month - 1 < currentMonth)
                || (year === currentYear && month - 1 === currentMonth && day < currentDay));
            }

            return true;
        },

        /**
         * Format a string
         * It's used to format the error message
         * format('The field must between %s and %s', [10, 20]) = 'The field must between 10 and 20'
         *
         * @param {String} message
         * @param {Array} parameters
         * @returns {String}
         */
        format: function(message, parameters) {
            if (!$.isArray(parameters)) {
                parameters = [parameters];
            }

            for (var i in parameters) {
                message = message.replace('%s', parameters[i]);
            }

            return message;
        },

        /**
         * Implement Luhn validation algorithm
         * Credit to https://gist.github.com/ShirtlessKirk/2134376
         *
         * @see http://en.wikipedia.org/wiki/Luhn
         * @param {String} value
         * @returns {Boolean}
         */
        luhn: function(value) {
            var length  = value.length,
                mul     = 0,
                prodArr = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],
                sum     = 0;

            while (length--) {
                sum += prodArr[mul][parseInt(value.charAt(length), 10)];
                mul ^= 1;
            }

            return (sum % 10 === 0 && sum > 0);
        },

        /**
         * Implement modulus 11, 10 (ISO 7064) algorithm
         *
         * @param {String} value
         * @returns {Boolean}
         */
        mod11And10: function(value) {
            var check  = 5,
                length = value.length;
            for (var i = 0; i < length; i++) {
                check = (((check || 10) * 2) % 11 + parseInt(value.charAt(i), 10)) % 10;
            }
            return (check === 1);
        },

        /**
         * Implements Mod 37, 36 (ISO 7064) algorithm
         * Usages:
         * mod37And36('A12425GABC1234002M')
         * mod37And36('002006673085', '0123456789')
         *
         * @param {String} value
         * @param {String} [alphabet]
         * @returns {Boolean}
         */
        mod37And36: function(value, alphabet) {
            alphabet = alphabet || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
            var modulus = alphabet.length,
                length  = value.length,
                check   = Math.floor(modulus / 2);
            for (var i = 0; i < length; i++) {
                check = (((check || modulus) * 2) % (modulus + 1) + alphabet.indexOf(value.charAt(i))) % modulus;
            }
            return (check === 1);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            base64: {
                'default': 'Please enter a valid base 64 encoded'
            }
        }
    });

    FormValidation.Validator.base64 = {
        /**
         * Return true if the input value is a base 64 encoded string.
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            between: {
                'default': 'Please enter a value between %s and %s',
                notInclusive: 'Please enter a value between %s and %s strictly'
            }
        }
    });

    FormValidation.Validator.between = {
        html5Attributes: {
            message: 'message',
            min: 'min',
            max: 'max',
            inclusive: 'inclusive'
        },

        enableByHtml5: function($field) {
            if ('range' === $field.attr('type')) {
                return {
                    min: $field.attr('min'),
                    max: $field.attr('max')
                };
            }

            return false;
        },

        /**
         * Return true if the input value is between (strictly or not) two given numbers
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - min
         * - max
         *
         * The min, max keys define the number which the field value compares to. min, max can be
         *      - A number
         *      - Name of field which its value defines the number
         *      - Name of callback function that returns the number
         *      - A callback function that returns the number
         *
         * - inclusive [optional]: Can be true or false. Default is true
         * - message: The invalid message
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

			value = this._format(value);

            var locale   = validator.getLocale(),
                min      = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),
                max      = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max),
                minValue = this._format(min),
                maxValue = this._format(max);

			return (options.inclusive === true || options.inclusive === undefined)
                    ? {
                        valid: $.isNumeric(value) && parseFloat(value) >= minValue && parseFloat(value) <= maxValue,
                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].between['default'], [min, max])
                    }
                    : {
                        valid: $.isNumeric(value) && parseFloat(value) > minValue && parseFloat(value) < maxValue,
                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].between.notInclusive, [min, max])
                    };
        },

        _format: function(value) {
            return (value + '').replace(',', '.');
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            bic: {
                'default': 'Please enter a valid BIC number'
            }
        }
    });

    FormValidation.Validator.bic = {
        /**
         * Validate an Business Identifier Code (BIC), also known as ISO 9362, SWIFT-BIC, SWIFT ID or SWIFT code
         *
         * For more information see http://en.wikipedia.org/wiki/ISO_9362
         *
         * @todo The 5 and 6 characters are an ISO 3166-1 country code, this could also be validated
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }
            return /^[a-zA-Z]{6}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$/.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.Validator.blank = {
        /**
         * Placeholder validator that can be used to display a custom validation message
         * returned from the server
         * Example:
         *
         * (1) a "blank" validator is applied to an input field.
         * (2) data is entered via the UI that is unable to be validated client-side.
         * (3) server returns a 400 with JSON data that contains the field that failed
         *     validation and an associated message.
         * (4) ajax 400 call handler does the following:
         *
         *      fv.updateMessage(field, 'blank', errorMessage);
         *      fv.updateStatus(field, 'INVALID', 'blank');
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            return true;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            callback: {
                'default': 'Please enter a valid value'
            }
        }
    });

    FormValidation.Validator.callback = {
        priority: 999,

        html5Attributes: {
            message: 'message',
            callback: 'callback'
        },

        /**
         * Return result from the callback method
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - callback: The callback method that passes parameters:
         *      callback: function(fieldValue, validator, $field) {
         *          // fieldValue is the value of field
         *          // validator is instance of FormValidation.Base
         *          // $field is the field element
         *      }
         * - message: The invalid message
         * @returns {Deferred}
         */
        validate: function(validator, $field, options, validatorName) {
            var value  = validator.getFieldValue($field, validatorName),
                dfd    = new $.Deferred(),
                result = { valid: true };

            if (options.callback) {
                var response = FormValidation.Helper.call(options.callback, [value, validator, $field]);
                result = ('boolean' === typeof response || null === response) ? { valid: response } : response;
            }

            dfd.resolve($field, validatorName, result);
            return dfd;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            choice: {
                'default': 'Please enter a valid value',
                less: 'Please choose %s options at minimum',
                more: 'Please choose %s options at maximum',
                between: 'Please choose %s - %s options'
            }
        }
    });

    FormValidation.Validator.choice = {
        html5Attributes: {
            message: 'message',
            min: 'min',
            max: 'max'
        },

        /**
         * Check if the number of checked boxes are less or more than a given number
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of following keys:
         * - min
         * - max
         *
         * At least one of two keys is required
         * The min, max keys define the number which the field value compares to. min, max can be
         *      - A number
         *      - Name of field which its value defines the number
         *      - Name of callback function that returns the number
         *      - A callback function that returns the number
         *
         * - message: The invalid message
         * @returns {Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var locale     = validator.getLocale(),
                ns         = validator.getNamespace(),
                numChoices = $field.is('select')
                            ? validator.getFieldElements($field.attr('data-' + ns + '-field')).find('option').filter(':selected').length
                            : validator.getFieldElements($field.attr('data-' + ns + '-field')).filter(':checked').length,
                min        = options.min ? ($.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min)) : null,
                max        = options.max ? ($.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max)) : null,
                isValid    = true,
                message    = options.message || FormValidation.I18n[locale].choice['default'];

            if ((min && numChoices < parseInt(min, 10)) || (max && numChoices > parseInt(max, 10))) {
                isValid = false;
            }

            switch (true) {
                case (!!min && !!max):
                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].choice.between, [parseInt(min, 10), parseInt(max, 10)]);
                    break;

                case (!!min):
                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].choice.less, parseInt(min, 10));
                    break;

                case (!!max):
                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].choice.more, parseInt(max, 10));
                    break;

                default:
                    break;
            }

            return { valid: isValid, message: message };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            color: {
                'default': 'Please enter a valid color'
            }
        }
    });

    FormValidation.Validator.color = {
        html5Attributes: {
            message: 'message',
            type: 'type'
        },

        enableByHtml5: function($field) {
            return ('color' === $field.attr('type'));
        },

        SUPPORTED_TYPES: [
            'hex', 'rgb', 'rgba', 'hsl', 'hsla', 'keyword'
        ],

        KEYWORD_COLORS: [
            // Colors start with A
            'aliceblue', 'antiquewhite', 'aqua', 'aquamarine', 'azure',
            // B
            'beige', 'bisque', 'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown', 'burlywood',
            // C
            'cadetblue', 'chartreuse', 'chocolate', 'coral', 'cornflowerblue', 'cornsilk', 'crimson', 'cyan',
            // D
            'darkblue', 'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey', 'darkkhaki', 'darkmagenta',
            'darkolivegreen', 'darkorange', 'darkorchid', 'darkred', 'darksalmon', 'darkseagreen', 'darkslateblue',
            'darkslategray', 'darkslategrey', 'darkturquoise', 'darkviolet', 'deeppink', 'deepskyblue', 'dimgray',
            'dimgrey', 'dodgerblue',
            // F
            'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',
            // G
            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green', 'greenyellow', 'grey',
            // H
            'honeydew', 'hotpink',
            // I
            'indianred', 'indigo', 'ivory',
            // K
            'khaki',
            // L
            'lavender', 'lavenderblush', 'lawngreen', 'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',
            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey', 'lightpink', 'lightsalmon', 'lightseagreen',
            'lightskyblue', 'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow', 'lime', 'limegreen',
            'linen',
            // M
            'magenta', 'maroon', 'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple', 'mediumseagreen',
            'mediumslateblue', 'mediumspringgreen', 'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',
            'mistyrose', 'moccasin',
            // N
            'navajowhite', 'navy',
            // O
            'oldlace', 'olive', 'olivedrab', 'orange', 'orangered', 'orchid',
            // P
            'palegoldenrod', 'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip', 'peachpuff', 'peru', 'pink',
            'plum', 'powderblue', 'purple',
            // R
            'red', 'rosybrown', 'royalblue',
            // S
            'saddlebrown', 'salmon', 'sandybrown', 'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',
            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue',
            // T
            'tan', 'teal', 'thistle', 'tomato', 'transparent', 'turquoise',
            // V
            'violet',
            // W
            'wheat', 'white', 'whitesmoke',
            // Y
            'yellow', 'yellowgreen'
        ],

        /**
         * Return true if the input value is a valid color
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * - type: The array of valid color types
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // Only accept 6 hex character values due to the HTML 5 spec
            // See http://www.w3.org/TR/html-markup/input.color.html#input.color.attrs.value
            if (this.enableByHtml5($field)) {
                return /^#[0-9A-F]{6}$/i.test(value);
            }

            var types = options.type || this.SUPPORTED_TYPES;
            if (!$.isArray(types)) {
                types = types.replace(/s/g, '').split(',');
            }

            var method,
                type,
                isValid = false;

            for (var i = 0; i < types.length; i++) {
                type    = types[i];
                method  = '_' + type.toLowerCase();
                isValid = isValid || this[method](value);
                if (isValid) {
                    return true;
                }
            }

            return false;
        },

        _hex: function(value) {
            return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);
        },

        _hsl: function(value) {
            return /^hsl\((\s*(-?\d+)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*)\)$/.test(value);
        },

        _hsla: function(value) {
            return /^hsla\((\s*(-?\d+)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*,){2}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/.test(value);
        },

        _keyword: function(value) {
            return $.inArray(value, this.KEYWORD_COLORS) >= 0;
        },

        _rgb: function(value) {
            var regexInteger = /^rgb\((\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*,){2}(\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*)\)$/,
                regexPercent = /^rgb\((\s*(\b(0?\d{1,2}|100)\b%)\s*,){2}(\s*(\b(0?\d{1,2}|100)\b%)\s*)\)$/;
            return regexInteger.test(value) || regexPercent.test(value);
        },

        _rgba: function(value) {
            var regexInteger = /^rgba\((\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*,){3}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/,
                regexPercent = /^rgba\((\s*(\b(0?\d{1,2}|100)\b%)\s*,){3}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/;
            return regexInteger.test(value) || regexPercent.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            creditCard: {
                'default': 'Please enter a valid credit card number'
            }
        }
    });

    FormValidation.Validator.creditCard = {
        /**
         * Return true if the input value is valid credit card number
         * Based on https://gist.github.com/DiegoSalazar/4075533
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} [options] Can consist of the following key:
         * - message: The invalid message
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // Accept only digits, dashes or spaces
            if (/[^0-9-\s]+/.test(value)) {
                return false;
            }
            value = value.replace(/\D/g, '');

            if (!FormValidation.Helper.luhn(value)) {
                return false;
            }

            // Validate the card number based on prefix (IIN ranges) and length
            var cards = {
                AMERICAN_EXPRESS: {
                    length: [15],
                    prefix: ['34', '37']
                },
                DINERS_CLUB: {
                    length: [14],
                    prefix: ['300', '301', '302', '303', '304', '305', '36']
                },
                DINERS_CLUB_US: {
                    length: [16],
                    prefix: ['54', '55']
                },
                DISCOVER: {
                    length: [16],
                    prefix: ['6011', '622126', '622127', '622128', '622129', '62213',
                             '62214', '62215', '62216', '62217', '62218', '62219',
                             '6222', '6223', '6224', '6225', '6226', '6227', '6228',
                             '62290', '62291', '622920', '622921', '622922', '622923',
                             '622924', '622925', '644', '645', '646', '647', '648',
                             '649', '65']
                },
                JCB: {
                    length: [16],
                    prefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']
                },
                LASER: {
                    length: [16, 17, 18, 19],
                    prefix: ['6304', '6706', '6771', '6709']
                },
                MAESTRO: {
                    length: [12, 13, 14, 15, 16, 17, 18, 19],
                    prefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']
                },
                MASTERCARD: {
                    length: [16],
                    prefix: ['51', '52', '53', '54', '55']
                },
                SOLO: {
                    length: [16, 18, 19],
                    prefix: ['6334', '6767']
                },
                UNIONPAY: {
                    length: [16, 17, 18, 19],
                    prefix: ['622126', '622127', '622128', '622129', '62213', '62214',
                             '62215', '62216', '62217', '62218', '62219', '6222', '6223',
                             '6224', '6225', '6226', '6227', '6228', '62290', '62291',
                             '622920', '622921', '622922', '622923', '622924', '622925']
                },
                VISA: {
                    length: [16],
                    prefix: ['4']
                }
            };

            var type, i;
            for (type in cards) {
                for (i in cards[type].prefix) {
                    if (value.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i]     // Check the prefix
                        && $.inArray(value.length, cards[type].length) !== -1)                      // and length
                    {
                        return {
                            valid: true,
                            type: type
                        };
                    }
                }
            }

            return false;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            cusip: {
                'default': 'Please enter a valid CUSIP number'
            }
        }
    });

    FormValidation.Validator.cusip = {
        /**
         * Validate a CUSIP number
         *
         * @see http://en.wikipedia.org/wiki/CUSIP
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} [options] Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            value = value.toUpperCase();
            if (!/^[0-9A-Z]{9}$/.test(value)) {
                return false;
            }

            var converted = $.map(value.split(''), function(item) {
                                var code = item.charCodeAt(0);
                                return (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))
                                            // Replace A, B, C, ..., Z with 10, 11, ..., 35
                                            ? (code - 'A'.charCodeAt(0) + 10)
                                            : item;
                            }),
                length    = converted.length,
                sum       = 0;
            for (var i = 0; i < length - 1; i++) {
                var num = parseInt(converted[i], 10);
                if (i % 2 !== 0) {
                    num *= 2;
                }
                if (num > 9) {
                    num -= 9;
                }
                sum += num;
            }

            sum = (10 - (sum % 10)) % 10;
            return sum === parseInt(converted[length - 1], 10);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            cvv: {
                'default': 'Please enter a valid CVV number'
            }
        }
    });

    FormValidation.Validator.cvv = {
        html5Attributes: {
            message: 'message',
            ccfield: 'creditCardField'
        },

        /**
         * Bind the validator on the live change of the credit card field
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - creditCardField: The credit card number field
         */
        init: function(validator, $field, options, validatorName) {
            if (options.creditCardField) {
                var creditCardField = validator.getFieldElements(options.creditCardField);
                validator.onLiveChange(creditCardField, 'live_' + validatorName, function() {
                    var status = validator.getStatus($field, validatorName);
                    if (status !== validator.STATUS_NOT_VALIDATED) {
                        validator.revalidateField($field);
                    }
                });
            }
        },

        /**
         * Unbind the validator on the live change of the credit card field
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - creditCardField: The credit card number field
         */
        destroy: function(validator, $field, options, validatorName) {
            if (options.creditCardField) {
                var creditCardField = validator.getFieldElements(options.creditCardField);
                validator.offLiveChange(creditCardField, 'live_' + validatorName);
            }
        },

        /**
         * Return true if the input value is a valid CVV number.
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - creditCardField: The credit card number field. It can be null
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            if (!/^[0-9]{3,4}$/.test(value)) {
                return false;
            }

            if (!options.creditCardField) {
                return true;
            }

            // Get the credit card number
            var creditCard = validator.getFieldElements(options.creditCardField).val();
            if (creditCard === '') {
                return true;
            }

            creditCard = creditCard.replace(/\D/g, '');

            // Supported credit card types
            var cards = {
                AMERICAN_EXPRESS: {
                    length: [15],
                    prefix: ['34', '37']
                },
                DINERS_CLUB: {
                    length: [14],
                    prefix: ['300', '301', '302', '303', '304', '305', '36']
                },
                DINERS_CLUB_US: {
                    length: [16],
                    prefix: ['54', '55']
                },
                DISCOVER: {
                    length: [16],
                    prefix: ['6011', '622126', '622127', '622128', '622129', '62213',
                             '62214', '62215', '62216', '62217', '62218', '62219',
                             '6222', '6223', '6224', '6225', '6226', '6227', '6228',
                             '62290', '62291', '622920', '622921', '622922', '622923',
                             '622924', '622925', '644', '645', '646', '647', '648',
                             '649', '65']
                },
                JCB: {
                    length: [16],
                    prefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']
                },
                LASER: {
                    length: [16, 17, 18, 19],
                    prefix: ['6304', '6706', '6771', '6709']
                },
                MAESTRO: {
                    length: [12, 13, 14, 15, 16, 17, 18, 19],
                    prefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']
                },
                MASTERCARD: {
                    length: [16],
                    prefix: ['51', '52', '53', '54', '55']
                },
                SOLO: {
                    length: [16, 18, 19],
                    prefix: ['6334', '6767']
                },
                UNIONPAY: {
                    length: [16, 17, 18, 19],
                    prefix: ['622126', '622127', '622128', '622129', '62213', '62214',
                             '62215', '62216', '62217', '62218', '62219', '6222', '6223',
                             '6224', '6225', '6226', '6227', '6228', '62290', '62291',
                             '622920', '622921', '622922', '622923', '622924', '622925']
                },
                VISA: {
                    length: [16],
                    prefix: ['4']
                }
            };
            var type, i, creditCardType = null;
            for (type in cards) {
                for (i in cards[type].prefix) {
                    if (creditCard.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i]    // Check the prefix
                        && $.inArray(creditCard.length, cards[type].length) !== -1)                     // and length
                    {
                        creditCardType = type;
                        break;
                    }
                }
            }

            return (creditCardType === null)
                        ? false
                        : (('AMERICAN_EXPRESS' === creditCardType) ? (value.length === 4) : (value.length === 3));
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            date: {
                'default': 'Please enter a valid date',
                min: 'Please enter a date after %s',
                max: 'Please enter a date before %s',
                range: 'Please enter a date in the range %s - %s'
            }
        }
    });

    FormValidation.Validator.date = {
        html5Attributes: {
            message: 'message',
            format: 'format',
            min: 'min',
            max: 'max',
            separator: 'separator'
        },

        /**
         * Return true if the input value is valid date
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * - min: the minimum date
         * - max: the maximum date
         * - separator: Use to separate the date, month, and year.
         * By default, it is /
         * - format: The date format. Default is MM/DD/YYYY
         * The format can be:
         *
         * i) date: Consist of DD, MM, YYYY parts which are separated by the separator option
         * ii) date and time:
         * The time can consist of h, m, s parts which are separated by :
         * ii) date, time and A (indicating AM or PM)
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            options.format = options.format || 'MM/DD/YYYY';

            // #683: Force the format to YYYY-MM-DD as the default browser behaviour when using type="date" attribute
            if ($field.attr('type') === 'date') {
                options.format = 'YYYY-MM-DD';
            }

            var locale     = validator.getLocale(),
                message    = options.message || FormValidation.I18n[locale].date['default'],
                formats    = options.format.split(' '),
                dateFormat = formats[0],
                timeFormat = (formats.length > 1) ? formats[1] : null,
                amOrPm     = (formats.length > 2) ? formats[2] : null,
                sections   = value.split(' '),
                date       = sections[0],
                time       = (sections.length > 1) ? sections[1] : null;

            if (formats.length !== sections.length) {
                return {
                    valid: false,
                    message: message
                };
            }

            // Determine the separator
            var separator = options.separator;
            if (!separator) {
                separator = (date.indexOf('/') !== -1)
                            ? '/'
                            : ((date.indexOf('-') !== -1) ? '-' : ((date.indexOf('.') !== -1) ? '.' : null));
            }
            if (separator === null || date.indexOf(separator) === -1) {
                return {
                    valid: false,
                    message: message
                };
            }

            // Determine the date
            date       = date.split(separator);
            dateFormat = dateFormat.split(separator);
            if (date.length !== dateFormat.length) {
                return {
                    valid: false,
                    message: message
                };
            }

            var year  = date[$.inArray('YYYY', dateFormat)],
                month = date[$.inArray('MM', dateFormat)],
                day   = date[$.inArray('DD', dateFormat)];

            if (!year || !month || !day || year.length !== 4) {
                return {
                    valid: false,
                    message: message
                };
            }

            // Determine the time
            var minutes = null, hours = null, seconds = null;
            if (timeFormat) {
                timeFormat = timeFormat.split(':');
                time       = time.split(':');

                if (timeFormat.length !== time.length) {
                    return {
                        valid: false,
                        message: message
                    };
                }

                hours   = time.length > 0 ? time[0] : null;
                minutes = time.length > 1 ? time[1] : null;
                seconds = time.length > 2 ? time[2] : null;

                if (hours === '' || minutes === '' || seconds === '') {
                    return {
                        valid: false,
                        message: message
                    };
                }

                // Validate seconds
                if (seconds) {
                    if (isNaN(seconds) || seconds.length > 2) {
                        return {
                            valid: false,
                            message: message
                        };
                    }
                    seconds = parseInt(seconds, 10);
                    if (seconds < 0 || seconds > 60) {
                        return {
                            valid: false,
                            message: message
                        };
                    }
                }

                // Validate hours
                if (hours) {
                    if (isNaN(hours) || hours.length > 2) {
                        return {
                            valid: false,
                            message: message
                        };
                    }
                    hours = parseInt(hours, 10);
                    if (hours < 0 || hours >= 24 || (amOrPm && hours > 12)) {
                        return {
                            valid: false,
                            message: message
                        };
                    }
                }

                // Validate minutes
                if (minutes) {
                    if (isNaN(minutes) || minutes.length > 2) {
                        return {
                            valid: false,
                            message: message
                        };
                    }
                    minutes = parseInt(minutes, 10);
                    if (minutes < 0 || minutes > 59) {
                        return {
                            valid: false,
                            message: message
                        };
                    }
                }
            }

            // Validate day, month, and year
            var valid     = FormValidation.Helper.date(year, month, day),
                min       = null,
                max       = null,
                minOption = options.min,
                maxOption = options.max;

            if (minOption) {
                min = (minOption instanceof Date)
                    ? minOption
                    : (this._parseDate(minOption, dateFormat, separator) ||
                       this._parseDate(validator.getDynamicOption($field, minOption), dateFormat, separator));

                // In order to avoid displaying a date string like "Mon Dec 08 2014 19:14:12 GMT+0000 (WET)"
                minOption = this._formatDate(min, options.format);
            }

            if (maxOption) {
                max = (maxOption instanceof Date)
                    ? maxOption
                    : (this._parseDate(maxOption, dateFormat, separator) ||
                       this._parseDate(validator.getDynamicOption($field, maxOption), dateFormat, separator));

                // In order to avoid displaying a date string like "Mon Dec 08 2014 19:14:12 GMT+0000 (WET)"
                maxOption = this._formatDate(max, options.format);
            }

            date = new Date(year, month -1, day, hours, minutes, seconds);

            switch (true) {
                case (minOption && !maxOption && valid):
                    valid   = date.getTime() >= min.getTime();
                    message = options.message || FormValidation.Helper.format(FormValidation.I18n[locale].date.min, minOption);
                    break;

                case (maxOption && !minOption && valid):
                    valid   = date.getTime() <= max.getTime();
                    message = options.message || FormValidation.Helper.format(FormValidation.I18n[locale].date.max, maxOption);
                    break;

                case (maxOption && minOption && valid):
                    valid   = date.getTime() <= max.getTime() && date.getTime() >= min.getTime();
                    message = options.message || FormValidation.Helper.format(FormValidation.I18n[locale].date.range, [minOption, maxOption]);
                    break;

                default:
                    break;
            }

            return {
                valid: valid,
                date: date,
                message: message
            };
        },

        /**
         * Return a date object after parsing the date string
         *
         * @param {Date|String} date   The date string to parse
         * @param {String} format The date format
         * The format can be:
         *   - date: Consist of DD, MM, YYYY parts which are separated by the separator option
         *   - date and time:
         *     The time can consist of h, m, s parts which are separated by :
         * @param {String} separator The separator used to separate the date, month, and year
         * @returns {Date}
         */
        _parseDate: function(date, format, separator) {
            if (date instanceof Date) {
                return date;
            }
            if (typeof date !== 'string') {
                return null;
            }

            // Ensure that the format must consist of year, month and day patterns
            var yearIndex   = $.inArray('YYYY', format),
                monthIndex  = $.inArray('MM', format),
                dayIndex    = $.inArray('DD', format);
            if (yearIndex === -1 || monthIndex === -1 || dayIndex === -1) {
                return null;
            }

            var minutes     = 0, hours = 0, seconds = 0,
                sections    = date.split(' '),
                dateSection = sections[0].split(separator);
            if (dateSection.length < 3) {
                return null;
            }

            if (sections.length > 1) {
                var timeSection = sections[1].split(':');
                hours   = timeSection.length > 0 ? timeSection[0] : null;
                minutes = timeSection.length > 1 ? timeSection[1] : null;
                seconds = timeSection.length > 2 ? timeSection[2] : null;
            }

            return new Date(dateSection[yearIndex], dateSection[monthIndex] - 1, dateSection[dayIndex],
                            hours, minutes, seconds);
        },

        /**
         * Format date
         *
         * @param {Date} date The date object to format
         * @param {String} format The date format
         * The format can consist of the following tokens:
         *      d       Day of the month without leading zeros (1 through 31)
         *      dd      Day of the month with leading zeros (01 through 31)
         *      m       Month without leading zeros (1 through 12)
         *      mm      Month with leading zeros (01 through 12)
         *      yy      Last two digits of year (for example: 14)
         *      yyyy    Full four digits of year (for example: 2014)
         *      h       Hours without leading zeros (1 through 12)
         *      hh      Hours with leading zeros (01 through 12)
         *      H       Hours without leading zeros (0 through 23)
         *      HH      Hours with leading zeros (00 through 23)
         *      M       Minutes without leading zeros (0 through 59)
         *      MM      Minutes with leading zeros (00 through 59)
         *      s       Seconds without leading zeros (0 through 59)
         *      ss      Seconds with leading zeros (00 through 59)
         * @returns {String}
         */
        _formatDate: function(date, format) {
            format = format
                        .replace(/Y/g, 'y')
                        .replace(/M/g, 'm')
                        .replace(/D/g, 'd')
                        .replace(/:m/g, ':M')
                        .replace(/:mm/g, ':MM')
                        .replace(/:S/, ':s')
                        .replace(/:SS/, ':ss');

            var replacer = {
                d: function(date) {
                    return date.getDate();
                },
                dd: function(date) {
                    var d = date.getDate();
                    return (d < 10) ? '0' + d : d;
                },
                m: function(date) {
                    return date.getMonth() + 1;
                },
                mm: function(date) {
                    var m = date.getMonth() + 1;
                    return m < 10 ? '0' + m : m;
                },
                yy: function(date) {
                    return ('' + date.getFullYear()).substr(2);
                },
                yyyy: function(date) {
                    return date.getFullYear();
                },
                h: function(date) {
                    return date.getHours() % 12 || 12;
                },
                hh: function(date) {
                    var h = date.getHours() % 12 || 12;
                    return h < 10 ? '0' + h : h;
                },
                H: function(date) {
                    return date.getHours();
                },
                HH: function(date) {
                    var H = date.getHours();
                    return H < 10 ? '0' + H : H;
                },
                M: function(date) {
                    return date.getMinutes();
                },
                MM: function(date) {
                    var M = date.getMinutes();
                    return M < 10 ? '0' + M : M;
                },
                s: function(date) {
                    return date.getSeconds();
                },
                ss: function(date) {
                    var s = date.getSeconds();
                    return s < 10 ? '0' + s : s;
                }
            };

            return format.replace(/d{1,4}|m{1,4}|yy(?:yy)?|([HhMs])\1?|"[^"]*"|'[^']*'/g, function(match) {
                return replacer[match] ? replacer[match](date) : match.slice(1, match.length - 1);
            });
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            different: {
                'default': 'Please enter a different value'
            }
        }
    });

    FormValidation.Validator.different = {
        html5Attributes: {
            message: 'message',
            field: 'field'
        },

        /**
         * Bind the validator on the live change of the field to compare with current one
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - field: The name of field that will be used to compare with current one
         */
        init: function(validator, $field, options, validatorName) {
            var fields = options.field.split(',');
            for (var i = 0; i < fields.length; i++) {
                var compareWith = validator.getFieldElements($.trim(fields[i]));
                validator.onLiveChange(compareWith, 'live_' + validatorName, function() {
                    var status = validator.getStatus($field, validatorName);
                    if (status !== validator.STATUS_NOT_VALIDATED) {
                        validator.revalidateField($field);
                    }
                });
            }
        },

        /**
         * Unbind the validator on the live change of the field to compare with current one
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - field: The name of field that will be used to compare with current one
         */
        destroy: function(validator, $field, options, validatorName) {
            var fields = options.field.split(',');
            for (var i = 0; i < fields.length; i++) {
                var compareWith = validator.getFieldElements($.trim(fields[i]));
                validator.offLiveChange(compareWith, 'live_' + validatorName);
            }
        },

        /**
         * Return true if the input value is different with given field's value
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - field: The name of field that will be used to compare with current one
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var fields  = options.field.split(','),
                isValid = true;

            for (var i = 0; i < fields.length; i++) {
                var compareWith = validator.getFieldElements($.trim(fields[i]));
                if (compareWith == null || compareWith.length === 0) {
                    continue;
                }

                var compareValue = validator.getFieldValue(compareWith, validatorName);
                if (value === compareValue) {
                    isValid = false;
                } else if (compareValue !== '') {
                    validator.updateStatus(compareWith, validator.STATUS_VALID, validatorName);
                }
            }

            return isValid;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            digits: {
                'default': 'Please enter only digits'
            }
        }
    });

    FormValidation.Validator.digits = {
        /**
         * Return true if the input value contains digits only
         *
         * @param {FormValidation.Base} validator Validate plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} [options]
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            return /^\d+$/.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            ean: {
                'default': 'Please enter a valid EAN number'
            }
        }
    });

    FormValidation.Validator.ean = {
        /**
         * Validate EAN (International Article Number)
         *
         * @see http://en.wikipedia.org/wiki/European_Article_Number
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            if (!/^(\d{8}|\d{12}|\d{13})$/.test(value)) {
                return false;
            }

            var length = value.length,
                sum    = 0,
                weight = (length === 8) ? [3, 1] : [1, 3];
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i % 2];
            }
            sum = (10 - sum % 10) % 10;
            return (sum + '' === value.charAt(length - 1));
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            ein: {
                'default': 'Please enter a valid EIN number'
            }
        }
    });

    FormValidation.Validator.ein = {
        // The first two digits are called campus
        // See http://en.wikipedia.org/wiki/Employer_Identification_Number
        // http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes
        CAMPUS: {
            ANDOVER: ['10', '12'],
            ATLANTA: ['60', '67'],
            AUSTIN: ['50', '53'],
            BROOKHAVEN: ['01', '02', '03', '04', '05', '06', '11', '13', '14', '16', '21', '22', '23', '25', '34', '51', '52', '54', '55', '56', '57', '58', '59', '65'],
            CINCINNATI: ['30', '32', '35', '36', '37', '38', '61'],
            FRESNO: ['15', '24'],
            KANSAS_CITY: ['40', '44'],
            MEMPHIS: ['94', '95'],
            OGDEN: ['80', '90'],
            PHILADELPHIA: ['33', '39', '41', '42', '43', '48', '62', '63', '64', '66', '68', '71', '72', '73', '74', '75', '76', '77', '81', '82', '83', '84', '85', '86', '87', '88', '91', '92', '93', '98', '99'],
            INTERNET: ['20', '26', '27', '45', '46', '47'],
            SMALL_BUSINESS_ADMINISTRATION: ['31']
        },

        /**
         * Validate EIN (Employer Identification Number) which is also known as
         * Federal Employer Identification Number (FEIN) or Federal Tax Identification Number
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Object|Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            if (!/^[0-9]{2}-?[0-9]{7}$/.test(value)) {
                return false;
            }
            // Check the first two digits
            var campus = value.substr(0, 2) + '';
            for (var key in this.CAMPUS) {
                if ($.inArray(campus, this.CAMPUS[key]) !== -1) {
                    return {
                        valid: true,
                        campus: key
                    };
                }
            }

            return false;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            emailAddress: {
                'default': 'Please enter a valid email address'
            }
        }
    });

    FormValidation.Validator.emailAddress = {
        html5Attributes: {
            message: 'message',
            multiple: 'multiple',
            separator: 'separator'
        },

        enableByHtml5: function($field) {
            return ('email' === $field.attr('type'));
        },

        /**
         * Return true if and only if the input value is a valid email address
         *
         * @param {FormValidation.Base} validator Validate plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} [options]
         * - multiple: Allow multiple email addresses, separated by a comma or semicolon; default is false.
         * - separator: Regex for character or characters expected as separator between addresses; default is comma /[,;]/, i.e. comma or semicolon.
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // Email address regular expression
            // http://stackoverflow.com/questions/46155/validate-email-address-in-javascript
            var emailRegExp   = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
                allowMultiple = options.multiple === true || options.multiple === 'true';

            if (allowMultiple) {
                var separator = options.separator || /[,;]/,
                    addresses = this._splitEmailAddresses(value, separator);

                for (var i = 0; i < addresses.length; i++) {
                    if (!emailRegExp.test(addresses[i])) {
                        return false;
                    }
                }

                return true;
            } else {
                return emailRegExp.test(value);
            }
        },

        _splitEmailAddresses: function(emailAddresses, separator) {
            var quotedFragments     = emailAddresses.split(/"/),
                quotedFragmentCount = quotedFragments.length,
                emailAddressArray   = [],
                nextEmailAddress    = '';

            for (var i = 0; i < quotedFragmentCount; i++) {
                if (i % 2 === 0) {
                    var splitEmailAddressFragments     = quotedFragments[i].split(separator),
                        splitEmailAddressFragmentCount = splitEmailAddressFragments.length;

                    if (splitEmailAddressFragmentCount === 1) {
                        nextEmailAddress += splitEmailAddressFragments[0];
                    } else {
                        emailAddressArray.push(nextEmailAddress + splitEmailAddressFragments[0]);

                        for (var j = 1; j < splitEmailAddressFragmentCount - 1; j++) {
                            emailAddressArray.push(splitEmailAddressFragments[j]);
                        }
                        nextEmailAddress = splitEmailAddressFragments[splitEmailAddressFragmentCount - 1];
                    }
                } else {
                    nextEmailAddress += '"' + quotedFragments[i];
                    if (i < quotedFragmentCount - 1) {
                        nextEmailAddress += '"';
                    }
                }
            }

            emailAddressArray.push(nextEmailAddress);
            return emailAddressArray;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            file: {
                'default': 'Please choose a valid file'
            }
        }
    });

    FormValidation.Validator.file = {
        html5Attributes: {
            extension: 'extension',
            maxfiles: 'maxFiles',
            minfiles: 'minFiles',
            maxsize: 'maxSize',
            minsize: 'minSize',
            maxtotalsize: 'maxTotalSize',
            mintotalsize: 'minTotalSize',
            message: 'message',
            type: 'type'
        },

        /**
         * Validate upload file. Use HTML 5 API if the browser supports
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - extension: The allowed extensions, separated by a comma
         * - maxFiles: The maximum number of files
         * - minFiles: The minimum number of files
         * - maxSize: The maximum size in bytes
         * - minSize: The minimum size in bytes
         * - maxTotalSize: The maximum size in bytes for all files
         * - minTotalSize: The minimum size in bytes for all files
         * - message: The invalid message
         * - type: The allowed MIME type, separated by a comma
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var ext,
                extensions = options.extension ? options.extension.toLowerCase().split(',') : null,
                types      = options.type      ? options.type.toLowerCase().split(',')      : null,
                html5      = (window.File && window.FileList && window.FileReader);

            if (html5) {
                // Get FileList instance
                var files     = $field.get(0).files,
                    total     = files.length,
                    totalSize = 0;

                if ((options.maxFiles && total > parseInt(options.maxFiles, 10))        // Check the maxFiles
                    || (options.minFiles && total < parseInt(options.minFiles, 10)))    // Check the minFiles
                {
                    return false;
                }

                for (var i = 0; i < total; i++) {
                    totalSize += files[i].size;
                    ext        = files[i].name.substr(files[i].name.lastIndexOf('.') + 1);

                    if ((options.minSize && files[i].size < parseInt(options.minSize, 10))                      // Check the minSize
                        || (options.maxSize && files[i].size > parseInt(options.maxSize, 10))                   // Check the maxSize
                        || (extensions && $.inArray(ext.toLowerCase(), extensions) === -1)                      // Check file extension
                        || (files[i].type && types && $.inArray(files[i].type.toLowerCase(), types) === -1))    // Check file type
                    {
                        return false;
                    }
                }

                if ((options.maxTotalSize && totalSize > parseInt(options.maxTotalSize, 10))        // Check the maxTotalSize
                    || (options.minTotalSize && totalSize < parseInt(options.minTotalSize, 10)))    // Check the minTotalSize
                {
                    return false;
                }
            } else {
                // Check file extension
                ext = value.substr(value.lastIndexOf('.') + 1);
                if (extensions && $.inArray(ext.toLowerCase(), extensions) === -1) {
                    return false;
                }
            }

            return true;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            greaterThan: {
                'default': 'Please enter a value greater than or equal to %s',
                notInclusive: 'Please enter a value greater than %s'
            }
        }
    });

    FormValidation.Validator.greaterThan = {
        html5Attributes: {
            message: 'message',
            value: 'value',
            inclusive: 'inclusive'
        },

        enableByHtml5: function($field) {
            var type = $field.attr('type'),
                min  = $field.attr('min');
            if (min && type !== 'date') {
                return {
                    value: min
                };
            }

            return false;
        },

        /**
         * Return true if the input value is greater than or equals to given number
         *
         * @param {FormValidation.Base} validator Validate plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - value: Define the number to compare with. It can be
         *      - A number
         *      - Name of field which its value defines the number
         *      - Name of callback function that returns the number
         *      - A callback function that returns the number
         *
         * - inclusive [optional]: Can be true or false. Default is true
         * - message: The invalid message
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            value = this._format(value);

            var locale         = validator.getLocale(),
                compareTo      = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value),
                compareToValue = this._format(compareTo);

			return (options.inclusive === true || options.inclusive === undefined)
                    ? {
                        valid: $.isNumeric(value) && parseFloat(value) >= compareToValue,
                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].greaterThan['default'], compareTo)
                    }
                    : {
                        valid: $.isNumeric(value) && parseFloat(value) > compareToValue,
                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].greaterThan.notInclusive, compareTo)
                    };
        },

        _format: function(value) {
            return (value + '').replace(',', '.');
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            grid: {
                'default': 'Please enter a valid GRId number'
            }
        }
    });

    FormValidation.Validator.grid = {
        /**
         * Validate GRId (Global Release Identifier)
         *
         * @see http://en.wikipedia.org/wiki/Global_Release_Identifier
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            value = value.toUpperCase();
            if (!/^[GRID:]*([0-9A-Z]{2})[-\s]*([0-9A-Z]{5})[-\s]*([0-9A-Z]{10})[-\s]*([0-9A-Z]{1})$/g.test(value)) {
                return false;
            }
            value = value.replace(/\s/g, '').replace(/-/g, '');
            if ('GRID:' === value.substr(0, 5)) {
                value = value.substr(5);
            }
            return FormValidation.Helper.mod37And36(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            hex: {
                'default': 'Please enter a valid hexadecimal number'
            }
        }
    });

    FormValidation.Validator.hex = {
        /**
         * Return true if and only if the input value is a valid hexadecimal number
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            return /^[0-9a-fA-F]+$/.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            iban: {
                'default': 'Please enter a valid IBAN number',
                country: 'Please enter a valid IBAN number in %s',
                countries: {
                    AD: 'Andorra',
                    AE: 'United Arab Emirates',
                    AL: 'Albania',
                    AO: 'Angola',
                    AT: 'Austria',
                    AZ: 'Azerbaijan',
                    BA: 'Bosnia and Herzegovina',
                    BE: 'Belgium',
                    BF: 'Burkina Faso',
                    BG: 'Bulgaria',
                    BH: 'Bahrain',
                    BI: 'Burundi',
                    BJ: 'Benin',
                    BR: 'Brazil',
                    CH: 'Switzerland',
                    CI: 'Ivory Coast',
                    CM: 'Cameroon',
                    CR: 'Costa Rica',
                    CV: 'Cape Verde',
                    CY: 'Cyprus',
                    CZ: 'Czech Republic',
                    DE: 'Germany',
                    DK: 'Denmark',
                    DO: 'Dominican Republic',
                    DZ: 'Algeria',
                    EE: 'Estonia',
                    ES: 'Spain',
                    FI: 'Finland',
                    FO: 'Faroe Islands',
                    FR: 'France',
                    GB: 'United Kingdom',
                    GE: 'Georgia',
                    GI: 'Gibraltar',
                    GL: 'Greenland',
                    GR: 'Greece',
                    GT: 'Guatemala',
                    HR: 'Croatia',
                    HU: 'Hungary',
                    IE: 'Ireland',
                    IL: 'Israel',
                    IR: 'Iran',
                    IS: 'Iceland',
                    IT: 'Italy',
                    JO: 'Jordan',
                    KW: 'Kuwait',
                    KZ: 'Kazakhstan',
                    LB: 'Lebanon',
                    LI: 'Liechtenstein',
                    LT: 'Lithuania',
                    LU: 'Luxembourg',
                    LV: 'Latvia',
                    MC: 'Monaco',
                    MD: 'Moldova',
                    ME: 'Montenegro',
                    MG: 'Madagascar',
                    MK: 'Macedonia',
                    ML: 'Mali',
                    MR: 'Mauritania',
                    MT: 'Malta',
                    MU: 'Mauritius',
                    MZ: 'Mozambique',
                    NL: 'Netherlands',
                    NO: 'Norway',
                    PK: 'Pakistan',
                    PL: 'Poland',
                    PS: 'Palestine',
                    PT: 'Portugal',
                    QA: 'Qatar',
                    RO: 'Romania',
                    RS: 'Serbia',
                    SA: 'Saudi Arabia',
                    SE: 'Sweden',
                    SI: 'Slovenia',
                    SK: 'Slovakia',
                    SM: 'San Marino',
                    SN: 'Senegal',
                    TL: 'East Timor',
                    TN: 'Tunisia',
                    TR: 'Turkey',
                    VG: 'Virgin Islands, British',
                    XK: 'Republic of Kosovo'
                }
            }
        }
    });

    FormValidation.Validator.iban = {
        html5Attributes: {
            message: 'message',
            country: 'country',
            sepa: 'sepa'
        },

        // http://www.swift.com/dsp/resources/documents/IBAN_Registry.pdf
        // http://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country
        REGEX: {
            AD: 'AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}',                       // Andorra
            AE: 'AE[0-9]{2}[0-9]{3}[0-9]{16}',                                  // United Arab Emirates
            AL: 'AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}',                               // Albania
            AO: 'AO[0-9]{2}[0-9]{21}',                                          // Angola
            AT: 'AT[0-9]{2}[0-9]{5}[0-9]{11}',                                  // Austria
            AZ: 'AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}',                               // Azerbaijan
            BA: 'BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}',                   // Bosnia and Herzegovina
            BE: 'BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}',                           // Belgium
            BF: 'BF[0-9]{2}[0-9]{23}',                                          // Burkina Faso
            BG: 'BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}',                // Bulgaria
            BH: 'BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}',                               // Bahrain
            BI: 'BI[0-9]{2}[0-9]{12}',                                          // Burundi
            BJ: 'BJ[0-9]{2}[A-Z]{1}[0-9]{23}',                                  // Benin
            BR: 'BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]',             // Brazil
            CH: 'CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                               // Switzerland
            CI: 'CI[0-9]{2}[A-Z]{1}[0-9]{23}',                                  // Ivory Coast
            CM: 'CM[0-9]{2}[0-9]{23}',                                          // Cameroon
            CR: 'CR[0-9]{2}[0-9]{3}[0-9]{14}',                                  // Costa Rica
            CV: 'CV[0-9]{2}[0-9]{21}',                                          // Cape Verde
            CY: 'CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}',                       // Cyprus
            CZ: 'CZ[0-9]{2}[0-9]{20}',                                          // Czech Republic
            DE: 'DE[0-9]{2}[0-9]{8}[0-9]{10}',                                  // Germany
            DK: 'DK[0-9]{2}[0-9]{14}',                                          // Denmark
            DO: 'DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}',                               // Dominican Republic
            DZ: 'DZ[0-9]{2}[0-9]{20}',                                          // Algeria
            EE: 'EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}',                  // Estonia
            ES: 'ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}',          // Spain
            FI: 'FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}',                           // Finland
            FO: 'FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                           // Faroe Islands
            FR: 'FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',               // France
            GB: 'GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                           // United Kingdom
            GE: 'GE[0-9]{2}[A-Z]{2}[0-9]{16}',                                  // Georgia
            GI: 'GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}',                               // Gibraltar
            GL: 'GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                           // Greenland
            GR: 'GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}',                       // Greece
            GT: 'GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}',                            // Guatemala
            HR: 'HR[0-9]{2}[0-9]{7}[0-9]{10}',                                  // Croatia
            HU: 'HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}',          // Hungary
            IE: 'IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                           // Ireland
            IL: 'IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}',                          // Israel
            IR: 'IR[0-9]{2}[0-9]{22}',                                          // Iran
            IS: 'IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}',                  // Iceland
            IT: 'IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',               // Italy
            JO: 'JO[0-9]{2}[A-Z]{4}[0-9]{4}[0]{8}[A-Z0-9]{10}',                 // Jordan
            KW: 'KW[0-9]{2}[A-Z]{4}[0-9]{22}',                                  // Kuwait
            KZ: 'KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                               // Kazakhstan
            LB: 'LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}',                               // Lebanon
            LI: 'LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                               // Liechtenstein
            LT: 'LT[0-9]{2}[0-9]{5}[0-9]{11}',                                  // Lithuania
            LU: 'LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                               // Luxembourg
            LV: 'LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}',                               // Latvia
            MC: 'MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',               // Monaco
            MD: 'MD[0-9]{2}[A-Z0-9]{20}',                                       // Moldova
            ME: 'ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                          // Montenegro
            MG: 'MG[0-9]{2}[0-9]{23}',                                          // Madagascar
            MK: 'MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}',                       // Macedonia
            ML: 'ML[0-9]{2}[A-Z]{1}[0-9]{23}',                                  // Mali
            MR: 'MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}',                        // Mauritania
            MT: 'MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}',                       // Malta
            MU: 'MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}',  // Mauritius
            MZ: 'MZ[0-9]{2}[0-9]{21}',                                          // Mozambique
            NL: 'NL[0-9]{2}[A-Z]{4}[0-9]{10}',                                  // Netherlands
            NO: 'NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}',                           // Norway
            PK: 'PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                               // Pakistan
            PL: 'PL[0-9]{2}[0-9]{8}[0-9]{16}',                                  // Poland
            PS: 'PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                               // Palestinian
            PT: 'PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}',                  // Portugal
            QA: 'QA[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                               // Qatar
            RO: 'RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                               // Romania
            RS: 'RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                          // Serbia
            SA: 'SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}',                               // Saudi Arabia
            SE: 'SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}',                          // Sweden
            SI: 'SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}',                           // Slovenia
            SK: 'SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}',                          // Slovakia
            SM: 'SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',               // San Marino
            SN: 'SN[0-9]{2}[A-Z]{1}[0-9]{23}',                                  // Senegal
            TL: 'TL38[0-9]{3}[0-9]{14}[0-9]{2}',                                // East Timor
            TN: 'TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                        // Tunisia
            TR: 'TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}',                    // Turkey
            VG: 'VG[0-9]{2}[A-Z]{4}[0-9]{16}',                                  // Virgin Islands, British
            XK: 'XK[0-9]{2}[0-9]{4}[0-9]{10}[0-9]{2}'                           // Republic of Kosovo
        },

        // List of SEPA country codes
        SEPA_COUNTRIES: [
            'AT', 'BE', 'BG', 'CH', 'CY', 'CZ', 'DE', 'DK', 'EE', 'ES',
            'FI', 'FR', 'GB', 'GI', 'GR', 'HR', 'HU', 'IE', 'IS', 'IT',
            'LI', 'LT', 'LU', 'LV', 'MC', 'MT', 'NL', 'NO', 'PL', 'PT',
            'RO', 'SE', 'SI', 'SK', 'SM'
        ],

        /**
         * Validate an International Bank Account Number (IBAN)
         * To test it, take the sample IBAN from
         * http://www.nordea.com/Our+services/International+products+and+services/Cash+Management/IBAN+countries/908462.html
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * - country: The ISO 3166-1 country code. It can be
         *      - A country code
         *      - Name of field which its value defines the country code
         *      - Name of callback function that returns the country code
         *      - A callback function that returns the country code
         * - sepa: Set it to true (false) to indicate that the IBAN number must be (not be) from SEPA countries
         * By default, this option is not defined
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            value = value.replace(/[^a-zA-Z0-9]/g, '').toUpperCase();
            var country = options.country;
            if (!country) {
                country = value.substr(0, 2);
            } else if (typeof country !== 'string' || !this.REGEX[country]) {
                // Determine the country code
                country = validator.getDynamicOption($field, country);
            }

            var locale = validator.getLocale();
            if (!this.REGEX[country]) {
                return false;
            }

            // Check whether or not the sepa option is enabled
            if (typeof options.sepa !== undefined) {
                var isSepaCountry = $.inArray(country, this.SEPA_COUNTRIES) !== -1;
                if (((options.sepa === 'true' || options.sepa === true) && !isSepaCountry)
                    || ((options.sepa === 'false' || options.sepa === false) && isSepaCountry))
                {
                    return false;
                }
            }

            if (!(new RegExp('^' + this.REGEX[country] + '$')).test(value)) {
                return {
                    valid: false,
                    message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].iban.country, FormValidation.I18n[locale].iban.countries[country])
                };
            }

            value = value.substr(4) + value.substr(0, 4);
            value = $.map(value.split(''), function(n) {
                var code = n.charCodeAt(0);
                return (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))
                        // Replace A, B, C, ..., Z with 10, 11, ..., 35
                        ? (code - 'A'.charCodeAt(0) + 10)
                        : n;
            });
            value = value.join('');

            var temp   = parseInt(value.substr(0, 1), 10),
                length = value.length;
            for (var i = 1; i < length; ++i) {
                temp = (temp * 10 + parseInt(value.substr(i, 1), 10)) % 97;
            }

            return {
                valid: (temp === 1),
                message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].iban.country, FormValidation.I18n[locale].iban.countries[country])
            };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            id: {
                'default': 'Please enter a valid identification number',
                country: 'Please enter a valid identification number in %s',
                countries: {
                    BA: 'Bosnia and Herzegovina',
                    BG: 'Bulgaria',
                    BR: 'Brazil',
                    CH: 'Switzerland',
                    CL: 'Chile',
                    CN: 'China',
                    CZ: 'Czech Republic',
                    DK: 'Denmark',
                    EE: 'Estonia',
                    ES: 'Spain',
                    FI: 'Finland',
                    HR: 'Croatia',
                    IE: 'Ireland',
                    IS: 'Iceland',
                    LT: 'Lithuania',
                    LV: 'Latvia',
                    ME: 'Montenegro',
                    MK: 'Macedonia',
                    NL: 'Netherlands',
                    PL: 'Poland',
                    RO: 'Romania',
                    RS: 'Serbia',
                    SE: 'Sweden',
                    SI: 'Slovenia',
                    SK: 'Slovakia',
                    SM: 'San Marino',
                    TH: 'Thailand',
                    TR: 'Turkey',
                    ZA: 'South Africa'
                }
            }
        }
    });

    FormValidation.Validator.id = {
        html5Attributes: {
            message: 'message',
            country: 'country'
        },

        // Supported country codes
        COUNTRY_CODES: [
            'BA', 'BG', 'BR', 'CH', 'CL', 'CN', 'CZ', 'DK', 'EE', 'ES', 'FI', 'HR', 'IE', 'IS', 'LT', 'LV', 'ME', 'MK', 'NL',
            'PL', 'RO', 'RS', 'SE', 'SI', 'SK', 'SM', 'TH', 'TR', 'ZA'
        ],

        /**
         * Validate identification number in different countries
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * - country: The ISO 3166-1 country code. It can be
         *      - One of country code defined in COUNTRY_CODES
         *      - Name of field which its value defines the country code
         *      - Name of callback function that returns the country code
         *      - A callback function that returns the country code
         * @returns {Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var locale  = validator.getLocale(),
                country = options.country;
            if (!country) {
                country = value.substr(0, 2);
            } else if (typeof country !== 'string' || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {
                // Determine the country code
                country = validator.getDynamicOption($field, country);
            }

            if ($.inArray(country, this.COUNTRY_CODES) === -1) {
                return true;
            }

            var method = ['_', country.toLowerCase()].join(''),
                result = this[method](value);
            result         = (result === true || result === false) ? { valid: result } : result;
            result.message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].id.country, FormValidation.I18n[locale].id.countries[country.toUpperCase()]);

            return result;
        },

        /**
         * Validate Unique Master Citizen Number which uses in
         * - Bosnia and Herzegovina (country code: BA)
         * - Macedonia (MK)
         * - Montenegro (ME)
         * - Serbia (RS)
         * - Slovenia (SI)
         *
         * @see http://en.wikipedia.org/wiki/Unique_Master_Citizen_Number
         * @param {String} value The ID
         * @param {String} countryCode The ISO country code, can be BA, MK, ME, RS, SI
         * @returns {Boolean}
         */
        _validateJMBG: function(value, countryCode) {
            if (!/^\d{13}$/.test(value)) {
                return false;
            }
            var day   = parseInt(value.substr(0, 2), 10),
                month = parseInt(value.substr(2, 2), 10),
                year  = parseInt(value.substr(4, 3), 10),
                rr    = parseInt(value.substr(7, 2), 10),
                k     = parseInt(value.substr(12, 1), 10);

            // Validate date of birth
            // FIXME: Validate the year of birth
            if (day > 31 || month > 12) {
                return false;
            }

            // Validate checksum
            var sum = 0;
            for (var i = 0; i < 6; i++) {
                sum += (7 - i) * (parseInt(value.charAt(i), 10) + parseInt(value.charAt(i + 6), 10));
            }
            sum = 11 - sum % 11;
            if (sum === 10 || sum === 11) {
                sum = 0;
            }
            if (sum !== k) {
                return false;
            }

            // Validate political region
            // rr is the political region of birth, which can be in ranges:
            // 10-19: Bosnia and Herzegovina
            // 20-29: Montenegro
            // 30-39: Croatia (not used anymore)
            // 41-49: Macedonia
            // 50-59: Slovenia (only 50 is used)
            // 70-79: Central Serbia
            // 80-89: Serbian province of Vojvodina
            // 90-99: Kosovo
            switch (countryCode.toUpperCase()) {
                case 'BA':
                    return (10 <= rr && rr <= 19);
                case 'MK':
                    return (41 <= rr && rr <= 49);
                case 'ME':
                    return (20 <= rr && rr <= 29);
                case 'RS':
                    return (70 <= rr && rr <= 99);
                case 'SI':
                    return (50 <= rr && rr <= 59);
                default:
                    return true;
            }
        },

        _ba: function(value) {
            return this._validateJMBG(value, 'BA');
        },
        _mk: function(value) {
            return this._validateJMBG(value, 'MK');
        },
        _me: function(value) {
            return this._validateJMBG(value, 'ME');
        },
        _rs: function(value) {
            return this._validateJMBG(value, 'RS');
        },

        /**
         * Examples: 0101006500006
         */
        _si: function(value) {
            return this._validateJMBG(value, 'SI');
        },

        /**
         * Validate Bulgarian national identification number (EGN)
         *
         * @see http://en.wikipedia.org/wiki/Uniform_civil_number
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _bg: function(value) {
            if (!/^\d{10}$/.test(value) && !/^\d{6}\s\d{3}\s\d{1}$/.test(value)) {
                return false;
            }
            value = value.replace(/\s/g, '');
            // Check the birth date
            var year  = parseInt(value.substr(0, 2), 10) + 1900,
                month = parseInt(value.substr(2, 2), 10),
                day   = parseInt(value.substr(4, 2), 10);
            if (month > 40) {
                year += 100;
                month -= 40;
            } else if (month > 20) {
                year -= 100;
                month -= 20;
            }

            if (!FormValidation.Helper.date(year, month, day)) {
                return false;
            }

            var sum    = 0,
                weight = [2, 4, 8, 5, 10, 9, 7, 3, 6];
            for (var i = 0; i < 9; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = (sum % 11) % 10;
            return (sum + '' === value.substr(9, 1));
        },

        /**
         * Validate Brazilian national identification number (CPF)
         *
         * @see http://en.wikipedia.org/wiki/Cadastro_de_Pessoas_F%C3%ADsicas
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _br: function(value) {
            value = value.replace(/\D/g, '');

            if (!/^\d{11}$/.test(value) || /^1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}$/.test(value)) {
                return false;
            }

            var d1 = 0;
            for (var i = 0; i < 9; i++) {
                d1 += (10 - i) * parseInt(value.charAt(i), 10);
            }
            d1 = 11 - d1 % 11;
            if (d1 === 10 || d1 === 11) {
                d1 = 0;
            }
            if (d1 + '' !== value.charAt(9)) {
                return false;
            }

            var d2 = 0;
            for (i = 0; i < 10; i++) {
                d2 += (11 - i) * parseInt(value.charAt(i), 10);
            }
            d2 = 11 - d2 % 11;
            if (d2 === 10 || d2 === 11) {
                d2 = 0;
            }

            return (d2 + '' === value.charAt(10));
        },

        /**
         * Validate Swiss Social Security Number (AHV-Nr/No AVS)
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number#Switzerland
         * @see http://www.bsv.admin.ch/themen/ahv/00011/02185/index.html?lang=de
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _ch: function(value) {
            if (!/^756[\.]{0,1}[0-9]{4}[\.]{0,1}[0-9]{4}[\.]{0,1}[0-9]{2}$/.test(value)) {
                return false;
            }
            value = value.replace(/\D/g, '').substr(3);
            var length = value.length,
                sum    = 0,
                weight = (length === 8) ? [3, 1] : [1, 3];
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i % 2];
            }
            sum = 10 - sum % 10;
            return (sum + '' === value.charAt(length - 1));
        },

        /**
         * Validate Chilean national identification number (RUN/RUT)
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number#Chile
         * @see https://palena.sii.cl/cvc/dte/ee_empresas_emisoras.html for samples
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _cl: function(value) {
            if (!/^\d{7,8}[-]{0,1}[0-9K]$/i.test(value)) {
                return false;
            }
            value = value.replace(/\-/g, '');
            while (value.length < 9) {
                value = '0' + value;
            }
            var sum    = 0,
                weight = [3, 2, 7, 6, 5, 4, 3, 2];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum === 11) {
                sum = 0;
            } else if (sum === 10) {
                sum = 'K';
            }
            return sum + '' === value.charAt(8).toUpperCase();
        },

        /**
         * Validate Chinese citizen identification number
         *
         * Rules:
         * - For current 18-digit system (since 1st Oct 1999, defined by GB11643—1999 national standard):
         *     - Digit 0-5: Must be a valid administrative division code of China PR.
         *     - Digit 6-13: Must be a valid YYYYMMDD date of birth. A future date is tolerated.
         *     - Digit 14-16: Order code, any integer.
         *     - Digit 17: An ISO 7064:1983, MOD 11-2 checksum.
         *       Both upper/lower case of X are tolerated.
         * - For deprecated 15-digit system:
         *     - Digit 0-5: Must be a valid administrative division code of China PR.
         *     - Digit 6-11: Must be a valid YYMMDD date of birth, indicating the year of 19XX.
         *     - Digit 12-14: Order code, any integer.
         * Lists of valid administrative division codes of China PR can be seen here:
         * <http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/>
         * Published and maintained by National Bureau of Statistics of China PR.
         * NOTE: Current and deprecated codes MUST BOTH be considered valid.
         * Many Chinese citizens born in once existed administrative divisions!
         *
         * @see http://en.wikipedia.org/wiki/Resident_Identity_Card#Identity_card_number
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _cn: function(value) {
            // Basic format check (18 or 15 digits, considering X in checksum)
            value = value.trim();
            if (!/^\d{15}$/.test(value) && !/^\d{17}[\dXx]{1}$/.test(value)) {
                return false;
            }

            // Check China PR Administrative division code
            var adminDivisionCodes = {
                11: {
                    0: [0],
                    1: [[0, 9], [11, 17]],
                    2: [0, 28, 29]
                },
                12: {
                    0: [0],
                    1: [[0, 16]],
                    2: [0, 21, 23, 25]
                },
                13: {
                    0: [0],
                    1: [[0, 5], 7, 8, 21, [23, 33], [81, 85]],
                    2: [[0, 5], [7, 9], [23, 25], 27, 29, 30, 81, 83],
                    3: [[0, 4], [21, 24]],
                    4: [[0, 4], 6, 21, [23, 35], 81],
                    5: [[0, 3], [21, 35], 81, 82],
                    6: [[0, 4], [21, 38], [81, 84]],
                    7: [[0, 3], 5, 6, [21, 33]],
                    8: [[0, 4], [21, 28]],
                    9: [[0, 3], [21, 30], [81, 84]],
                    10: [[0, 3], [22, 26], 28, 81, 82],
                    11: [[0, 2], [21, 28], 81, 82]
                },
                14: {
                    0: [0],
                    1: [0, 1, [5, 10], [21, 23], 81],
                    2: [[0, 3], 11, 12, [21, 27]],
                    3: [[0, 3], 11, 21, 22],
                    4: [[0, 2], 11, 21, [23, 31], 81],
                    5: [[0, 2], 21, 22, 24, 25, 81],
                    6: [[0, 3], [21, 24]],
                    7: [[0, 2], [21, 29], 81],
                    8: [[0, 2], [21, 30], 81, 82],
                    9: [[0, 2], [21, 32], 81],
                    10: [[0, 2], [21, 34], 81, 82],
                    11: [[0, 2], [21, 30], 81, 82],
                    23: [[0, 3], 22, 23, [25, 30], 32, 33]
                },
                15: {
                    0: [0],
                    1: [[0, 5], [21, 25]],
                    2: [[0, 7], [21, 23]],
                    3: [[0, 4]],
                    4: [[0, 4], [21, 26], [28, 30]],
                    5: [[0, 2], [21, 26], 81],
                    6: [[0, 2], [21, 27]],
                    7: [[0, 3], [21, 27], [81, 85]],
                    8: [[0, 2], [21, 26]],
                    9: [[0, 2], [21, 29], 81],
                    22: [[0, 2], [21, 24]],
                    25: [[0, 2], [22, 31]],
                    26: [[0, 2], [24, 27], [29, 32], 34],
                    28: [0, 1, [22, 27]],
                    29: [0, [21, 23]]
                },
                21: {
                    0: [0],
                    1: [[0, 6], [11, 14], [22, 24], 81],
                    2: [[0, 4], [11, 13], 24, [81, 83]],
                    3: [[0, 4], 11, 21, 23, 81],
                    4: [[0, 4], 11, [21, 23]],
                    5: [[0, 5], 21, 22],
                    6: [[0, 4], 24, 81, 82],
                    7: [[0, 3], 11, 26, 27, 81, 82],
                    8: [[0, 4], 11, 81, 82],
                    9: [[0, 5], 11, 21, 22],
                    10: [[0, 5], 11, 21, 81],
                    11: [[0, 3], 21, 22],
                    12: [[0, 2], 4, 21, 23, 24, 81, 82],
                    13: [[0, 3], 21, 22, 24, 81, 82],
                    14: [[0, 4], 21, 22, 81]
                },
                22: {
                    0: [0],
                    1: [[0, 6], 12, 22, [81, 83]],
                    2: [[0, 4], 11, 21, [81, 84]],
                    3: [[0, 3], 22, 23, 81, 82],
                    4: [[0, 3], 21, 22],
                    5: [[0, 3], 21, 23, 24, 81, 82],
                    6: [[0, 2], 4, 5, [21, 23], 25, 81],
                    7: [[0, 2], [21, 24], 81],
                    8: [[0, 2], 21, 22, 81, 82],
                    24: [[0, 6], 24, 26]
                },
                23: {
                    0: [0],
                    1: [[0, 12], 21, [23, 29], [81, 84]],
                    2: [[0, 8], 21, [23, 25], 27, [29, 31], 81],
                    3: [[0, 7], 21, 81, 82],
                    4: [[0, 7], 21, 22],
                    5: [[0, 3], 5, 6, [21, 24]],
                    6: [[0, 6], [21, 24]],
                    7: [[0, 16], 22, 81],
                    8: [[0, 5], 11, 22, 26, 28, 33, 81, 82],
                    9: [[0, 4], 21],
                    10: [[0, 5], 24, 25, 81, [83, 85]],
                    11: [[0, 2], 21, 23, 24, 81, 82],
                    12: [[0, 2], [21, 26], [81, 83]],
                    27: [[0, 4], [21, 23]]
                },
                31: {
                    0: [0],
                    1: [0, 1, [3, 10], [12, 20]],
                    2: [0, 30]
                },
                32: {
                    0: [0],
                    1: [[0, 7], 11, [13, 18], 24, 25],
                    2: [[0, 6], 11, 81, 82],
                    3: [[0, 5], 11, 12, [21, 24], 81, 82],
                    4: [[0, 2], 4, 5, 11, 12, 81, 82],
                    5: [[0, 9], [81, 85]],
                    6: [[0, 2], 11, 12, 21, 23, [81, 84]],
                    7: [0, 1, 3, 5, 6, [21, 24]],
                    8: [[0, 4], 11, 26, [29, 31]],
                    9: [[0, 3], [21, 25], 28, 81, 82],
                    10: [[0, 3], 11, 12, 23, 81, 84, 88],
                    11: [[0, 2], 11, 12, [81, 83]],
                    12: [[0, 4], [81, 84]],
                    13: [[0, 2], 11, [21, 24]]
                },
                33: {
                    0: [0],
                    1: [[0, 6], [8, 10], 22, 27, 82, 83, 85],
                    2: [0, 1, [3, 6], 11, 12, 25, 26, [81, 83]],
                    3: [[0, 4], 22, 24, [26, 29], 81, 82],
                    4: [[0, 2], 11, 21, 24, [81, 83]],
                    5: [[0, 3], [21, 23]],
                    6: [[0, 2], 21, 24, [81, 83]],
                    7: [[0, 3], 23, 26, 27, [81, 84]],
                    8: [[0, 3], 22, 24, 25, 81],
                    9: [[0, 3], 21, 22],
                    10: [[0, 4], [21, 24], 81, 82],
                    11: [[0, 2], [21, 27], 81]
                },
                34: {
                    0: [0],
                    1: [[0, 4], 11, [21, 24], 81],
                    2: [[0, 4], 7, 8, [21, 23], 25],
                    3: [[0, 4], 11, [21, 23]],
                    4: [[0, 6], 21],
                    5: [[0, 4], 6, [21, 23]],
                    6: [[0, 4], 21],
                    7: [[0, 3], 11, 21],
                    8: [[0, 3], 11, [22, 28], 81],
                    10: [[0, 4], [21, 24]],
                    11: [[0, 3], 22, [24, 26], 81, 82],
                    12: [[0, 4], 21, 22, 25, 26, 82],
                    13: [[0, 2], [21, 24]],
                    14: [[0, 2], [21, 24]],
                    15: [[0, 3], [21, 25]],
                    16: [[0, 2], [21, 23]],
                    17: [[0, 2], [21, 23]],
                    18: [[0, 2], [21, 25], 81]
                },
                35: {
                    0: [0],
                    1: [[0, 5], 11, [21, 25], 28, 81, 82],
                    2: [[0, 6], [11, 13]],
                    3: [[0, 5], 22],
                    4: [[0, 3], 21, [23, 30], 81],
                    5: [[0, 5], 21, [24, 27], [81, 83]],
                    6: [[0, 3], [22, 29], 81],
                    7: [[0, 2], [21, 25], [81, 84]],
                    8: [[0, 2], [21, 25], 81],
                    9: [[0, 2], [21, 26], 81, 82]
                },
                36: {
                    0: [0],
                    1: [[0, 5], 11, [21, 24]],
                    2: [[0, 3], 22, 81],
                    3: [[0, 2], 13, [21, 23]],
                    4: [[0, 3], 21, [23, 30], 81, 82],
                    5: [[0, 2], 21],
                    6: [[0, 2], 22, 81],
                    7: [[0, 2], [21, 35], 81, 82],
                    8: [[0, 3], [21, 30], 81],
                    9: [[0, 2], [21, 26], [81, 83]],
                    10: [[0, 2], [21, 30]],
                    11: [[0, 2], [21, 30], 81]
                },
                37: {
                    0: [0],
                    1: [[0, 5], 12, 13, [24, 26], 81],
                    2: [[0, 3], 5, [11, 14], [81, 85]],
                    3: [[0, 6], [21, 23]],
                    4: [[0, 6], 81],
                    5: [[0, 3], [21, 23]],
                    6: [[0, 2], [11, 13], 34, [81, 87]],
                    7: [[0, 5], 24, 25, [81, 86]],
                    8: [[0, 2], 11, [26, 32], [81, 83]],
                    9: [[0, 3], 11, 21, 23, 82, 83],
                    10: [[0, 2], [81, 83]],
                    11: [[0, 3], 21, 22],
                    12: [[0, 3]],
                    13: [[0, 2], 11, 12, [21, 29]],
                    14: [[0, 2], [21, 28], 81, 82],
                    15: [[0, 2], [21, 26], 81],
                    16: [[0, 2], [21, 26]],
                    17: [[0, 2], [21, 28]]
                },
                41: {
                    0: [0],
                    1: [[0, 6], 8, 22, [81, 85]],
                    2: [[0, 5], 11, [21, 25]],
                    3: [[0, 7], 11, [22, 29], 81],
                    4: [[0, 4], 11, [21, 23], 25, 81, 82],
                    5: [[0, 3], 5, 6, 22, 23, 26, 27, 81],
                    6: [[0, 3], 11, 21, 22],
                    7: [[0, 4], 11, 21, [24, 28], 81, 82],
                    8: [[0, 4], 11, [21, 23], 25, [81, 83]],
                    9: [[0, 2], 22, 23, [26, 28]],
                    10: [[0, 2], [23, 25], 81, 82],
                    11: [[0, 4], [21, 23]],
                    12: [[0, 2], 21, 22, 24, 81, 82],
                    13: [[0, 3], [21, 30], 81],
                    14: [[0, 3], [21, 26], 81],
                    15: [[0, 3], [21, 28]],
                    16: [[0, 2], [21, 28], 81],
                    17: [[0, 2], [21, 29]],
                    90: [0, 1]
                },
                42: {
                    0: [0],
                    1: [[0, 7], [11, 17]],
                    2: [[0, 5], 22, 81],
                    3: [[0, 3], [21, 25], 81],
                    5: [[0, 6], [25, 29], [81, 83]],
                    6: [[0, 2], 6, 7, [24, 26], [82, 84]],
                    7: [[0, 4]],
                    8: [[0, 2], 4, 21, 22, 81],
                    9: [[0, 2], [21, 23], 81, 82, 84],
                    10: [[0, 3], [22, 24], 81, 83, 87],
                    11: [[0, 2], [21, 27], 81, 82],
                    12: [[0, 2], [21, 24], 81],
                    13: [[0, 3], 21, 81],
                    28: [[0, 2], 22, 23, [25, 28]],
                    90: [0, [4, 6], 21]
                },
                43: {
                    0: [0],
                    1: [[0, 5], 11, 12, 21, 22, 24, 81],
                    2: [[0, 4], 11, 21, [23, 25], 81],
                    3: [[0, 2], 4, 21, 81, 82],
                    4: [0, 1, [5, 8], 12, [21, 24], 26, 81, 82],
                    5: [[0, 3], 11, [21, 25], [27, 29], 81],
                    6: [[0, 3], 11, 21, 23, 24, 26, 81, 82],
                    7: [[0, 3], [21, 26], 81],
                    8: [[0, 2], 11, 21, 22],
                    9: [[0, 3], [21, 23], 81],
                    10: [[0, 3], [21, 28], 81],
                    11: [[0, 3], [21, 29]],
                    12: [[0, 2], [21, 30], 81],
                    13: [[0, 2], 21, 22, 81, 82],
                    31: [0, 1, [22, 27], 30]
                },
                44: {
                    0: [0],
                    1: [[0, 7], [11, 16], 83, 84],
                    2: [[0, 5], 21, 22, 24, 29, 32, 33, 81, 82],
                    3: [0, 1, [3, 8]],
                    4: [[0, 4]],
                    5: [0, 1, [6, 15], 23, 82, 83],
                    6: [0, 1, [4, 8]],
                    7: [0, 1, [3, 5], 81, [83, 85]],
                    8: [[0, 4], 11, 23, 25, [81, 83]],
                    9: [[0, 3], 23, [81, 83]],
                    12: [[0, 3], [23, 26], 83, 84],
                    13: [[0, 3], [22, 24], 81],
                    14: [[0, 2], [21, 24], 26, 27, 81],
                    15: [[0, 2], 21, 23, 81],
                    16: [[0, 2], [21, 25]],
                    17: [[0, 2], 21, 23, 81],
                    18: [[0, 3], 21, 23, [25, 27], 81, 82],
                    19: [0],
                    20: [0],
                    51: [[0, 3], 21, 22],
                    52: [[0, 3], 21, 22, 24, 81],
                    53: [[0, 2], [21, 23], 81]
                },
                45: {
                    0: [0],
                    1: [[0, 9], [21, 27]],
                    2: [[0, 5], [21, 26]],
                    3: [[0, 5], 11, 12, [21, 32]],
                    4: [0, 1, [3, 6], 11, [21, 23], 81],
                    5: [[0, 3], 12, 21],
                    6: [[0, 3], 21, 81],
                    7: [[0, 3], 21, 22],
                    8: [[0, 4], 21, 81],
                    9: [[0, 3], [21, 24], 81],
                    10: [[0, 2], [21, 31]],
                    11: [[0, 2], [21, 23]],
                    12: [[0, 2], [21, 29], 81],
                    13: [[0, 2], [21, 24], 81],
                    14: [[0, 2], [21, 25], 81]
                },
                46: {
                    0: [0],
                    1: [0, 1, [5, 8]],
                    2: [0, 1],
                    3: [0, [21, 23]],
                    90: [[0, 3], [5, 7], [21, 39]]
                },
                50: {
                    0: [0],
                    1: [[0, 19]],
                    2: [0, [22, 38], [40, 43]],
                    3: [0, [81, 84]]
                },
                51: {
                    0: [0],
                    1: [0, 1, [4, 8], [12, 15], [21, 24], 29, 31, 32, [81, 84]],
                    3: [[0, 4], 11, 21, 22],
                    4: [[0, 3], 11, 21, 22],
                    5: [[0, 4], 21, 22, 24, 25],
                    6: [0, 1, 3, 23, 26, [81, 83]],
                    7: [0, 1, 3, 4, [22, 27], 81],
                    8: [[0, 2], 11, 12, [21, 24]],
                    9: [[0, 4], [21, 23]],
                    10: [[0, 2], 11, 24, 25, 28],
                    11: [[0, 2], [11, 13], 23, 24, 26, 29, 32, 33, 81],
                    13: [[0, 4], [21, 25], 81],
                    14: [[0, 2], [21, 25]],
                    15: [[0, 3], [21, 29]],
                    16: [[0, 3], [21, 23], 81],
                    17: [[0, 3], [21, 25], 81],
                    18: [[0, 3], [21, 27]],
                    19: [[0, 3], [21, 23]],
                    20: [[0, 2], 21, 22, 81],
                    32: [0, [21, 33]],
                    33: [0, [21, 38]],
                    34: [0, 1, [22, 37]]
                },
                52: {
                    0: [0],
                    1: [[0, 3], [11, 15], [21, 23], 81],
                    2: [0, 1, 3, 21, 22],
                    3: [[0, 3], [21, 30], 81, 82],
                    4: [[0, 2], [21, 25]],
                    5: [[0, 2], [21, 27]],
                    6: [[0, 3], [21, 28]],
                    22: [0, 1, [22, 30]],
                    23: [0, 1, [22, 28]],
                    24: [0, 1, [22, 28]],
                    26: [0, 1, [22, 36]],
                    27: [[0, 2], 22, 23, [25, 32]]
                },
                53: {
                    0: [0],
                    1: [[0, 3], [11, 14], 21, 22, [24, 29], 81],
                    3: [[0, 2], [21, 26], 28, 81],
                    4: [[0, 2], [21, 28]],
                    5: [[0, 2], [21, 24]],
                    6: [[0, 2], [21, 30]],
                    7: [[0, 2], [21, 24]],
                    8: [[0, 2], [21, 29]],
                    9: [[0, 2], [21, 27]],
                    23: [0, 1, [22, 29], 31],
                    25: [[0, 4], [22, 32]],
                    26: [0, 1, [21, 28]],
                    27: [0, 1, [22, 30]], 28: [0, 1, 22, 23],
                    29: [0, 1, [22, 32]],
                    31: [0, 2, 3, [22, 24]],
                    34: [0, [21, 23]],
                    33: [0, 21, [23, 25]],
                    35: [0, [21, 28]]
                },
                54: {
                    0: [0],
                    1: [[0, 2], [21, 27]],
                    21: [0, [21, 29], 32, 33],
                    22: [0, [21, 29], [31, 33]],
                    23: [0, 1, [22, 38]],
                    24: [0, [21, 31]],
                    25: [0, [21, 27]],
                    26: [0, [21, 27]]
                },
                61: {
                    0: [0],
                    1: [[0, 4], [11, 16], 22, [24, 26]],
                    2: [[0, 4], 22],
                    3: [[0, 4], [21, 24], [26, 31]],
                    4: [[0, 4], [22, 31], 81],
                    5: [[0, 2], [21, 28], 81, 82],
                    6: [[0, 2], [21, 32]],
                    7: [[0, 2], [21, 30]],
                    8: [[0, 2], [21, 31]],
                    9: [[0, 2], [21, 29]],
                    10: [[0, 2], [21, 26]]
                },
                62: {
                    0: [0],
                    1: [[0, 5], 11, [21, 23]],
                    2: [0, 1],
                    3: [[0, 2], 21],
                    4: [[0, 3], [21, 23]],
                    5: [[0, 3], [21, 25]],
                    6: [[0, 2], [21, 23]],
                    7: [[0, 2], [21, 25]],
                    8: [[0, 2], [21, 26]],
                    9: [[0, 2], [21, 24], 81, 82],
                    10: [[0, 2], [21, 27]],
                    11: [[0, 2], [21, 26]],
                    12: [[0, 2], [21, 28]],
                    24: [0, 21, [24, 29]],
                    26: [0, 21, [23, 30]],
                    29: [0, 1, [21, 27]],
                    30: [0, 1, [21, 27]]
                },
                63: {
                    0: [0],
                    1: [[0, 5], [21, 23]],
                    2: [0, 2, [21, 25]],
                    21: [0, [21, 23], [26, 28]],
                    22: [0, [21, 24]],
                    23: [0, [21, 24]],
                    25: [0, [21, 25]],
                    26: [0, [21, 26]],
                    27: [0, 1, [21, 26]],
                    28: [[0, 2], [21, 23]]
                },
                64: {
                    0: [0],
                    1: [0, 1, [4, 6], 21, 22, 81],
                    2: [[0, 3], 5, [21, 23]],
                    3: [[0, 3], [21, 24], 81],
                    4: [[0, 2], [21, 25]],
                    5: [[0, 2], 21, 22]
                },
                65: {
                    0: [0],
                    1: [[0, 9], 21],
                    2: [[0, 5]],
                    21: [0, 1, 22, 23],
                    22: [0, 1, 22, 23],
                    23: [[0, 3], [23, 25], 27, 28],
                    28: [0, 1, [22, 29]],
                    29: [0, 1, [22, 29]],
                    30: [0, 1, [22, 24]], 31: [0, 1, [21, 31]],
                    32: [0, 1, [21, 27]],
                    40: [0, 2, 3, [21, 28]],
                    42: [[0, 2], 21, [23, 26]],
                    43: [0, 1, [21, 26]],
                    90: [[0, 4]], 27: [[0, 2], 22, 23]
                },
                71: { 0: [0] },
                81: { 0: [0] },
                82: { 0: [0] }
            };

            var provincial  = parseInt(value.substr(0, 2), 10),
                prefectural = parseInt(value.substr(2, 2), 10),
                county      = parseInt(value.substr(4, 2), 10);

            if (!adminDivisionCodes[provincial] || !adminDivisionCodes[provincial][prefectural]) {
                return false;
            }
            var inRange  = false,
                rangeDef = adminDivisionCodes[provincial][prefectural];
            for (var i = 0; i < rangeDef.length; i++) {
                if (($.isArray(rangeDef[i]) && rangeDef[i][0] <= county && county <= rangeDef[i][1])
                    || (!$.isArray(rangeDef[i]) && county === rangeDef[i]))
                {
                    inRange = true;
                    break;
                }
            }

            if (!inRange) {
                return false;
            }

            // Check date of birth
            var dob;
            if (value.length === 18) {
                dob = value.substr(6, 8);
            } else /* length == 15 */ {
                dob = '19' + value.substr(6, 6);
            }
            var year  = parseInt(dob.substr(0, 4), 10),
                month = parseInt(dob.substr(4, 2), 10),
                day   = parseInt(dob.substr(6, 2), 10);
            if (!FormValidation.Helper.date(year, month, day)) {
                return false;
            }

            // Check checksum (18-digit system only)
            if (value.length === 18) {
                var sum    = 0,
                    weight = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
                for (i = 0; i < 17; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = (12 - (sum % 11)) % 11;
                var checksum = (value.charAt(17).toUpperCase() !== 'X') ? parseInt(value.charAt(17), 10) : 10;
                return checksum === sum;
            }

            return true;
        },

        /**
         * Validate Czech national identification number (RC)
         *
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _cz: function(value) {
            if (!/^\d{9,10}$/.test(value)) {
                return false;
            }
            var year  = 1900 + parseInt(value.substr(0, 2), 10),
                month = parseInt(value.substr(2, 2), 10) % 50 % 20,
                day   = parseInt(value.substr(4, 2), 10);
            if (value.length === 9) {
                if (year >= 1980) {
                    year -= 100;
                }
                if (year > 1953) {
                    return false;
                }
            } else if (year < 1954) {
                year += 100;
            }

            if (!FormValidation.Helper.date(year, month, day)) {
                return false;
            }

            // Check that the birth date is not in the future
            if (value.length === 10) {
                var check = parseInt(value.substr(0, 9), 10) % 11;
                if (year < 1985) {
                    check = check % 10;
                }
                return (check + '' === value.substr(9, 1));
            }

            return true;
        },

        /**
         * Validate Danish Personal Identification number (CPR)
         *
         * @see https://en.wikipedia.org/wiki/Personal_identification_number_(Denmark)
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _dk: function(value) {
            if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {
                return false;
            }
            value = value.replace(/-/g, '');
            var day   = parseInt(value.substr(0, 2), 10),
                month = parseInt(value.substr(2, 2), 10),
                year  = parseInt(value.substr(4, 2), 10);

            switch (true) {
                case ('5678'.indexOf(value.charAt(6)) !== -1 && year >= 58):
                    year += 1800;
                    break;
                case ('0123'.indexOf(value.charAt(6)) !== -1):
                case ('49'.indexOf(value.charAt(6)) !== -1 && year >= 37):
                    year += 1900;
                    break;
                default:
                    year += 2000;
                    break;
            }

            return FormValidation.Helper.date(year, month, day);
        },

        /**
         * Validate Estonian Personal Identification Code (isikukood)
         *
         * @see http://et.wikipedia.org/wiki/Isikukood
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _ee: function(value) {
            // Use the same format as Lithuanian Personal Code
            return this._lt(value);
        },

        /**
         * Validate Spanish personal identity code (DNI)
         * Support DNI (for Spanish citizens), NIE (for foreign people) and CIF (for legal entities)
         *
         * @see https://en.wikipedia.org/wiki/National_identification_number#Spain
         * @param {String} value The ID
         * @returns {Boolean|Object}
         */
        _es: function(value) {
            var isDNI = /^[0-9]{8}[-]{0,1}[A-HJ-NP-TV-Z]$/.test(value),
                isNIE = /^[XYZ][-]{0,1}[0-9]{7}[-]{0,1}[A-HJ-NP-TV-Z]$/.test(value),
                isCIF = /^[A-HNPQS][-]{0,1}[0-9]{7}[-]{0,1}[0-9A-J]$/.test(value);
            if (!isDNI && !isNIE && !isCIF) {
                return false;
            }

            value = value.replace(/-/g, '');
            var check, type, isValid = true;
            if (isDNI || isNIE) {
                type = 'DNI';
                var index = 'XYZ'.indexOf(value.charAt(0));
                if (index !== -1) {
                    // It is NIE number
                    value = index + value.substr(1) + '';
                    type  = 'NIE';
                }

                check = parseInt(value.substr(0, 8), 10);
                check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];
                return {
                    valid: (check === value.substr(8, 1)),
                    type: type
                };
            } else {
                check = value.substr(1, 7);
                type  = 'CIF';
                var letter  = value[0],
                    control = value.substr(-1),
                    sum     = 0;

                // The digits in the even positions are added to the sum directly.
                // The ones in the odd positions are multiplied by 2 and then added to the sum.
                // If the result of multiplying by 2 is 10 or higher, add the two digits
                // together and add that to the sum instead
                for (var i = 0; i < check.length; i++) {
                    if (i % 2 !== 0) {
                        sum += parseInt(check[i], 10);
                    } else {
                        var tmp = '' + (parseInt(check[i], 10) * 2);
                        sum += parseInt(tmp[0], 10);
                        if (tmp.length === 2) {
                            sum += parseInt(tmp[1], 10);
                        }
                    }
                }

                // The control digit is calculated from the last digit of the sum.
                // If that last digit is not 0, subtract it from 10
                var lastDigit = sum - (Math.floor(sum / 10) * 10);
                if (lastDigit !== 0) {
                    lastDigit = 10 - lastDigit;
                }

                if ('KQS'.indexOf(letter) !== -1) {
                    // If the CIF starts with a K, Q or S, the control digit must be a letter
                    isValid = (control === 'JABCDEFGHI'[lastDigit]);
                } else if ('ABEH'.indexOf(letter) !== -1) {
                    // If it starts with A, B, E or H, it has to be a number
                    isValid = (control === ('' + lastDigit));
                } else {
                    // In any other case, it doesn't matter
                    isValid = (control === ('' + lastDigit) || control === 'JABCDEFGHI'[lastDigit]);
                }

                return {
                    valid: isValid,
                    type: type
                };
            }
        },

        /**
         * Validate Finnish Personal Identity Code (HETU)
         *
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _fi: function(value) {
            if (!/^[0-9]{6}[-+A][0-9]{3}[0-9ABCDEFHJKLMNPRSTUVWXY]$/.test(value)) {
                return false;
            }
            var day       = parseInt(value.substr(0, 2), 10),
                month     = parseInt(value.substr(2, 2), 10),
                year      = parseInt(value.substr(4, 2), 10),
                centuries = {
                    '+': 1800,
                    '-': 1900,
                    'A': 2000
                };
            year = centuries[value.charAt(6)] + year;

            if (!FormValidation.Helper.date(year, month, day)) {
                return false;
            }

            var individual = parseInt(value.substr(7, 3), 10);
            if (individual < 2) {
                return false;
            }
            var n = value.substr(0, 6) + value.substr(7, 3) + '';
            n = parseInt(n, 10);
            return '0123456789ABCDEFHJKLMNPRSTUVWXY'.charAt(n % 31) === value.charAt(10);
        },

        /**
         * Validate Croatian personal identification number (OIB)
         *
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _hr: function(value) {
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }
            return FormValidation.Helper.mod11And10(value);
        },

        /**
         * Validate Irish Personal Public Service Number (PPS)
         *
         * @see https://en.wikipedia.org/wiki/Personal_Public_Service_Number
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _ie: function(value) {
            if (!/^\d{7}[A-W][AHWTX]?$/.test(value)) {
                return false;
            }

            var getCheckDigit = function(value) {
                while (value.length < 7) {
                    value = '0' + value;
                }
                var alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',
                    sum      = 0;
                for (var i = 0; i < 7; i++) {
                    sum += parseInt(value.charAt(i), 10) * (8 - i);
                }
                sum += 9 * alphabet.indexOf(value.substr(7));
                return alphabet[sum % 23];
            };

            // 2013 format
            if (value.length === 9 && ('A' === value.charAt(8) || 'H' === value.charAt(8))) {
                return value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + '');
            }
            // The old format
            else {
                return value.charAt(7) === getCheckDigit(value.substr(0, 7));
            }
        },

        /**
         * Validate Iceland national identification number (Kennitala)
         *
         *  @see http://en.wikipedia.org/wiki/Kennitala
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _is: function(value) {
            if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {
                return false;
            }
            value = value.replace(/-/g, '');
            var day     = parseInt(value.substr(0, 2), 10),
                month   = parseInt(value.substr(2, 2), 10),
                year    = parseInt(value.substr(4, 2), 10),
                century = parseInt(value.charAt(9), 10);

            year = (century === 9) ? (1900 + year) : ((20 + century) * 100 + year);
            if (!FormValidation.Helper.date(year, month, day, true)) {
                return false;
            }
            // Validate the check digit
            var sum    = 0,
                weight = [3, 2, 7, 6, 5, 4, 3, 2];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            return (sum + '' === value.charAt(8));
        },

        /**
         * Validate Lithuanian Personal Code (Asmens kodas)
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number#Lithuania
         * @see http://www.adomas.org/midi2007/pcode.html
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _lt: function(value) {
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }
            var gender  = parseInt(value.charAt(0), 10),
                year    = parseInt(value.substr(1, 2), 10),
                month   = parseInt(value.substr(3, 2), 10),
                day     = parseInt(value.substr(5, 2), 10),
                century = (gender % 2 === 0) ? (17 + gender / 2) : (17 + (gender + 1) / 2);
            year = century * 100 + year;
            if (!FormValidation.Helper.date(year, month, day, true)) {
                return false;
            }

            // Validate the check digit
            var sum    = 0,
                weight = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1];
            for (var i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11;
            if (sum !== 10) {
                return sum + '' === value.charAt(10);
            }

            // Re-calculate the check digit
            sum    = 0;
            weight = [3, 4, 5, 6, 7, 8, 9, 1, 2, 3];
            for (i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11;
            if (sum === 10) {
                sum = 0;
            }
            return (sum + '' === value.charAt(10));
        },

        /**
         * Validate Latvian Personal Code (Personas kods)
         *
         * @see http://laacz.lv/2006/11/25/pk-parbaudes-algoritms/
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _lv: function(value) {
            if (!/^[0-9]{6}[-]{0,1}[0-9]{5}$/.test(value)) {
                return false;
            }
            value = value.replace(/\D/g, '');
            // Check birth date
            var day   = parseInt(value.substr(0, 2), 10),
                month = parseInt(value.substr(2, 2), 10),
                year  = parseInt(value.substr(4, 2), 10);
            year = year + 1800 + parseInt(value.charAt(6), 10) * 100;

            if (!FormValidation.Helper.date(year, month, day, true)) {
                return false;
            }

            // Check personal code
            var sum    = 0,
                weight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];
            for (var i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = (sum + 1) % 11 % 10;
            return (sum + '' === value.charAt(10));
        },

        /**
         * Validate Dutch national identification number (BSN)
         *
         * @see https://nl.wikipedia.org/wiki/Burgerservicenummer
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _nl: function(value) {
            if (value.length < 8) {
                return false;
            }

            if (value.length === 8) {
                value = '0' + value;
            }
            if (!/^[0-9]{4}[.]{0,1}[0-9]{2}[.]{0,1}[0-9]{3}$/.test(value)) {
                return false;
            }
            value = value.replace(/\./g, '');
            if (parseInt(value, 10) === 0) {
                return false;
            }
            var sum    = 0,
                length = value.length;
            for (var i = 0; i < length - 1; i++) {
                sum += (9 - i) * parseInt(value.charAt(i), 10);
            }
            sum = sum % 11;
            if (sum === 10) {
                sum = 0;
            }
            return (sum + '' === value.charAt(length - 1));
        },

        /**
         * Validate Poland citizen number (PESEL)
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number#Poland
         * @see http://en.wikipedia.org/wiki/PESEL
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _pl: function(value) {
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                length = value.length,
                weight = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3, 7];

            for (var i = 0; i < length - 1; i++) {
                sum += weight[i] * parseInt(value.charAt(i), 10);
            }
            sum = sum % 10;
            if (sum === 0) {
                sum = 10;
            }
            sum = 10 - sum;

            return (sum + '' === value.charAt(length - 1));
        },

        /**
         * Validate Romanian numerical personal code (CNP)
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number#Romania
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _ro: function(value) {
            if (!/^[0-9]{13}$/.test(value)) {
                return false;
            }
            var gender = parseInt(value.charAt(0), 10);
            if (gender === 0 || gender === 7 || gender === 8) {
                return false;
            }

            // Determine the date of birth
            var year      = parseInt(value.substr(1, 2), 10),
                month     = parseInt(value.substr(3, 2), 10),
                day       = parseInt(value.substr(5, 2), 10),
                // The year of date is determined base on the gender
                centuries = {
                    '1': 1900,  // Male born between 1900 and 1999
                    '2': 1900,  // Female born between 1900 and 1999
                    '3': 1800,  // Male born between 1800 and 1899
                    '4': 1800,  // Female born between 1800 and 1899
                    '5': 2000,  // Male born after 2000
                    '6': 2000   // Female born after 2000
                };
            if (day > 31 && month > 12) {
                return false;
            }
            if (gender !== 9) {
                year = centuries[gender + ''] + year;
                if (!FormValidation.Helper.date(year, month, day)) {
                    return false;
                }
            }

            // Validate the check digit
            var sum    = 0,
                weight = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9],
                length = value.length;
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11;
            if (sum === 10) {
                sum = 1;
            }
            return (sum + '' === value.charAt(length - 1));
        },

        /**
         * Validate Swedish personal identity number (personnummer)
         *
         * @see http://en.wikipedia.org/wiki/Personal_identity_number_(Sweden)
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _se: function(value) {
            if (!/^[0-9]{10}$/.test(value) && !/^[0-9]{6}[-|+][0-9]{4}$/.test(value)) {
                return false;
            }
            value = value.replace(/[^0-9]/g, '');

            var year  = parseInt(value.substr(0, 2), 10) + 1900,
                month = parseInt(value.substr(2, 2), 10),
                day   = parseInt(value.substr(4, 2), 10);
            if (!FormValidation.Helper.date(year, month, day)) {
                return false;
            }

            // Validate the last check digit
            return FormValidation.Helper.luhn(value);
        },

        /**
         * Validate Slovak national identifier number (RC)
         *
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _sk: function(value) {
            // Slovakia uses the same format as Czech Republic
            return this._cz(value);
        },

        /**
         * Validate San Marino citizen number
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number#San_Marino
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _sm: function(value) {
            return /^\d{5}$/.test(value);
        },

        /**
         * Validate Thailand citizen number
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number#Thailand
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _th: function(value) {
            if (value.length !== 13) {
                return false;
            }

            var sum = 0;
            for (var i = 0; i < 12; i++) {
                sum += parseInt(value.charAt(i), 10) * (13 - i);
            }

            return (11 - sum % 11) % 10 === parseInt(value.charAt(12), 10);
        },

        /**
         * Validate Turkish Identification Number
         *
         * @see https://en.wikipedia.org/wiki/Turkish_Identification_Number
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _tr: function(value) {
            if (value.length !== 11) {
                return false;
            }

            var sum = 0;
            for (var i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10);
            }

            return (sum % 10) === parseInt(value.charAt(10), 10);
        },

        /**
         * Validate South African ID
         *
         * @see http://en.wikipedia.org/wiki/National_identification_number#South_Africa
         * @param {String} value The ID
         * @returns {Boolean}
         */
        _za: function(value) {
            if (!/^[0-9]{10}[0|1][8|9][0-9]$/.test(value)) {
                return false;
            }
            var year        = parseInt(value.substr(0, 2), 10),
                currentYear = new Date().getFullYear() % 100,
                month       = parseInt(value.substr(2, 2), 10),
                day         = parseInt(value.substr(4, 2), 10);
            year = (year >= currentYear) ? (year + 1900) : (year + 2000);

            if (!FormValidation.Helper.date(year, month, day)) {
                return false;
            }

            // Validate the last check digit
            return FormValidation.Helper.luhn(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            identical: {
                'default': 'Please enter the same value'
            }
        }
    });

    FormValidation.Validator.identical = {
        html5Attributes: {
            message: 'message',
            field: 'field'
        },

        /**
         * Bind the validator on the live change of the field to compare with current one
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - field: The name of field that will be used to compare with current one
         */
        init: function(validator, $field, options, validatorName) {
            var compareWith = validator.getFieldElements(options.field);
            validator.onLiveChange(compareWith, 'live_' + validatorName, function() {
                var status = validator.getStatus($field, validatorName);
                if (status !== validator.STATUS_NOT_VALIDATED) {
                    validator.revalidateField($field);
                }
            });
        },

        /**
         * Unbind the validator on the live change of the field to compare with current one
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - field: The name of field that will be used to compare with current one
         */
        destroy: function(validator, $field, options, validatorName) {
            var compareWith = validator.getFieldElements(options.field);
            validator.offLiveChange(compareWith, 'live_' + validatorName);
        },

        /**
         * Check if input value equals to value of particular one
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - field: The name of field that will be used to compare with current one
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value       = validator.getFieldValue($field, validatorName),
                compareWith = validator.getFieldElements(options.field);
            if (compareWith === null || compareWith.length === 0) {
                return true;
            }

            var compareValue = validator.getFieldValue(compareWith, validatorName);
            if (value === compareValue) {
                validator.updateStatus(compareWith, validator.STATUS_VALID, validatorName);
                return true;
            }

            return false;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            imei: {
                'default': 'Please enter a valid IMEI number'
            }
        }
    });

    FormValidation.Validator.imei = {
        /**
         * Validate IMEI (International Mobile Station Equipment Identity)
         *
         * @see http://en.wikipedia.org/wiki/International_Mobile_Station_Equipment_Identity
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            switch (true) {
                case /^\d{15}$/.test(value):
                case /^\d{2}-\d{6}-\d{6}-\d{1}$/.test(value):
                case /^\d{2}\s\d{6}\s\d{6}\s\d{1}$/.test(value):
                    value = value.replace(/[^0-9]/g, '');
                    return FormValidation.Helper.luhn(value);

                case /^\d{14}$/.test(value):
                case /^\d{16}$/.test(value):
                case /^\d{2}-\d{6}-\d{6}(|-\d{2})$/.test(value):
                case /^\d{2}\s\d{6}\s\d{6}(|\s\d{2})$/.test(value):
                    return true;

                default:
                    return false;
            }
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            imo: {
                'default': 'Please enter a valid IMO number'
            }
        }
    });

    FormValidation.Validator.imo = {
        /**
         * Validate IMO (International Maritime Organization)
         *
         * @see http://en.wikipedia.org/wiki/IMO_Number
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            if (!/^IMO \d{7}$/i.test(value)) {
                return false;
            }

            // Grab just the digits
            var sum    = 0,
                digits = value.replace(/^.*(\d{7})$/, '$1');
            for (var i = 6; i >= 1; i--) {
                sum += (digits.slice((6 - i), -i) * (i + 1));
            }

            return sum % 10 === parseInt(digits.charAt(6), 10);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            integer: {
                'default': 'Please enter a valid number'
            }
        }
    });

    FormValidation.Validator.integer = {
        html5Attributes: {
            message: 'message',
            thousandsseparator: 'thousandsSeparator',
            decimalseparator: 'decimalSeparator'
        },

        enableByHtml5: function($field) {
            return ('number' === $field.attr('type')) && ($field.attr('step') === undefined || $field.attr('step') % 1 === 0);
        },

        /**
         * Return true if the input value is an integer
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following key:
         * - message: The invalid message
         * - thousandsSeparator: The thousands separator. It's empty by default
         * - decimalSeparator: The decimal separator. It's '.' by default
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            if (this.enableByHtml5($field) && $field.get(0).validity && $field.get(0).validity.badInput === true) {
                return false;
            }

            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var decimalSeparator   = options.decimalSeparator   || '.',
                thousandsSeparator = options.thousandsSeparator || '';
            decimalSeparator       = (decimalSeparator   === '.') ? '\\.' : decimalSeparator;
            thousandsSeparator     = (thousandsSeparator === '.') ? '\\.' : thousandsSeparator;

            var testRegexp         = new RegExp('^-?[0-9]{1,3}(' + thousandsSeparator + '[0-9]{3})*(' + decimalSeparator + '[0-9]+)?$'),
                thousandsReplacer  = new RegExp(thousandsSeparator, 'g');

            if (!testRegexp.test(value)) {
                return false;
            }

            // Replace thousands separator with blank
            if (thousandsSeparator) {
                value = value.replace(thousandsReplacer, '');
            }
            // Replace decimal separator with a dot
            if (decimalSeparator) {
                value = value.replace(decimalSeparator, '.');
            }

            if (isNaN(value) || !isFinite(value)) {
                return false;
            }
            // TODO: Use Number.isInteger() if available
            value = parseFloat(value);
            return Math.floor(value) === value;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            ip: {
                'default': 'Please enter a valid IP address',
                ipv4: 'Please enter a valid IPv4 address',
                ipv6: 'Please enter a valid IPv6 address'
            }
        }
    });

    FormValidation.Validator.ip = {
        html5Attributes: {
            message: 'message',
            ipv4: 'ipv4',
            ipv6: 'ipv6'
        },

        /**
         * Return true if the input value is a IP address.
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - ipv4: Enable IPv4 validator, default to true
         * - ipv6: Enable IPv6 validator, default to true
         * - message: The invalid message
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }
            options = $.extend({}, { ipv4: true, ipv6: true }, options);

            var locale    = validator.getLocale(),
                ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,
                ipv6Regex = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,
                valid     = false,
                message;

            switch (true) {
                case (options.ipv4 && !options.ipv6):
                    valid   = ipv4Regex.test(value);
                    message = options.message || FormValidation.I18n[locale].ip.ipv4;
                    break;

                case (!options.ipv4 && options.ipv6):
                    valid   = ipv6Regex.test(value);
                    message = options.message || FormValidation.I18n[locale].ip.ipv6;
                    break;

                case (options.ipv4 && options.ipv6):
                /* falls through */
                default:
                    valid   = ipv4Regex.test(value) || ipv6Regex.test(value);
                    message = options.message || FormValidation.I18n[locale].ip['default'];
                    break;
            }

            return {
                valid: valid,
                message: message
            };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            isbn: {
                'default': 'Please enter a valid ISBN number'
            }
        }
    });

    FormValidation.Validator.isbn = {
        /**
         * Return true if the input value is a valid ISBN 10 or ISBN 13 number
         *
         * @see http://en.wikipedia.org/wiki/International_Standard_Book_Number
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} [options] Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // http://en.wikipedia.org/wiki/International_Standard_Book_Number#Overview
            // Groups are separated by a hyphen or a space
            var type;
            switch (true) {
                case /^\d{9}[\dX]$/.test(value):
                case (value.length === 13 && /^(\d+)-(\d+)-(\d+)-([\dX])$/.test(value)):
                case (value.length === 13 && /^(\d+)\s(\d+)\s(\d+)\s([\dX])$/.test(value)):
                    type = 'ISBN10';
                    break;
                case /^(978|979)\d{9}[\dX]$/.test(value):
                case (value.length === 17 && /^(978|979)-(\d+)-(\d+)-(\d+)-([\dX])$/.test(value)):
                case (value.length === 17 && /^(978|979)\s(\d+)\s(\d+)\s(\d+)\s([\dX])$/.test(value)):
                    type = 'ISBN13';
                    break;
                default:
                    return false;
            }

            // Replace all special characters except digits and X
            value = value.replace(/[^0-9X]/gi, '');
            var chars  = value.split(''),
                length = chars.length,
                sum    = 0,
                i,
                checksum;

            switch (type) {
                case 'ISBN10':
                    sum = 0;
                    for (i = 0; i < length - 1; i++) {
                        sum += parseInt(chars[i], 10) * (10 - i);
                    }
                    checksum = 11 - (sum % 11);
                    if (checksum === 11) {
                        checksum = 0;
                    } else if (checksum === 10) {
                        checksum = 'X';
                    }
                    return {
                        type: type,
                        valid: (checksum + '' === chars[length - 1])
                    };

                case 'ISBN13':
                    sum = 0;
                    for (i = 0; i < length - 1; i++) {
                        sum += ((i % 2 === 0) ? parseInt(chars[i], 10) : (parseInt(chars[i], 10) * 3));
                    }
                    checksum = 10 - (sum % 10);
                    if (checksum === 10) {
                        checksum = '0';
                    }
                    return {
                        type: type,
                        valid: (checksum + '' === chars[length - 1])
                    };

                default:
                    return false;
            }
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            isin: {
                'default': 'Please enter a valid ISIN number'
            }
        }
    });

    FormValidation.Validator.isin = {
        // Available country codes
        // See http://isin.net/country-codes/
        COUNTRY_CODES: 'AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW',

        /**
         * Validate an ISIN (International Securities Identification Number)
         *
         * @see http://en.wikipedia.org/wiki/International_Securities_Identifying_Number
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            value = value.toUpperCase();
            var regex = new RegExp('^(' + this.COUNTRY_CODES + ')[0-9A-Z]{10}$');
            if (!regex.test(value)) {
                return false;
            }

            var converted = '',
                length    = value.length;
            // Convert letters to number
            for (var i = 0; i < length - 1; i++) {
                var c = value.charCodeAt(i);
                converted += ((c > 57) ? (c - 55).toString() : value.charAt(i));
            }

            var digits = '',
                n      = converted.length,
                group  = (n % 2 !== 0) ? 0 : 1;
            for (i = 0; i < n; i++) {
                digits += (parseInt(converted[i], 10) * ((i % 2) === group ? 2 : 1) + '');
            }

            var sum = 0;
            for (i = 0; i < digits.length; i++) {
                sum += parseInt(digits.charAt(i), 10);
            }
            sum = (10 - (sum % 10)) % 10;
            return sum + '' === value.charAt(length - 1);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            ismn: {
                'default': 'Please enter a valid ISMN number'
            }
        }
    });

    FormValidation.Validator.ismn = {
        /**
         * Validate ISMN (International Standard Music Number)
         *
         * @see http://en.wikipedia.org/wiki/International_Standard_Music_Number
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // Groups are separated by a hyphen or a space
            var type;
            switch (true) {
                case /^M\d{9}$/.test(value):
                case /^M-\d{4}-\d{4}-\d{1}$/.test(value):
                case /^M\s\d{4}\s\d{4}\s\d{1}$/.test(value):
                    type = 'ISMN10';
                    break;
                case /^9790\d{9}$/.test(value):
                case /^979-0-\d{4}-\d{4}-\d{1}$/.test(value):
                case /^979\s0\s\d{4}\s\d{4}\s\d{1}$/.test(value):
                    type = 'ISMN13';
                    break;
                default:
                    return false;
            }

            if ('ISMN10' === type) {
                value = '9790' + value.substr(1);
            }

            // Replace all special characters except digits
            value = value.replace(/[^0-9]/gi, '');
            var length = value.length,
                sum    = 0,
                weight = [1, 3];
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i % 2];
            }
            sum = 10 - sum % 10;
            return {
                type: type,
                valid: (sum + '' === value.charAt(length - 1))
            };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            issn: {
                'default': 'Please enter a valid ISSN number'
            }
        }
    });

    FormValidation.Validator.issn = {
        /**
         * Validate ISSN (International Standard Serial Number)
         *
         * @see http://en.wikipedia.org/wiki/International_Standard_Serial_Number
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // Groups are separated by a hyphen or a space
            if (!/^\d{4}\-\d{3}[\dX]$/.test(value)) {
                return false;
            }

            // Replace all special characters except digits and X
            value = value.replace(/[^0-9X]/gi, '');
            var chars  = value.split(''),
                length = chars.length,
                sum    = 0;

            if (chars[7] === 'X') {
                chars[7] = 10;
            }
            for (var i = 0; i < length; i++) {
                sum += parseInt(chars[i], 10) * (8 - i);
            }
            return (sum % 11 === 0);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            lessThan: {
                'default': 'Please enter a value less than or equal to %s',
                notInclusive: 'Please enter a value less than %s'
            }
        }
    });

    FormValidation.Validator.lessThan = {
        html5Attributes: {
            message: 'message',
            value: 'value',
            inclusive: 'inclusive'
        },

        enableByHtml5: function($field) {
            var type = $field.attr('type'),
                max  = $field.attr('max');
            if (max && type !== 'date') {
                return {
                    value: max
                };
            }

            return false;
        },

        /**
         * Return true if the input value is less than or equal to given number
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - value: The number used to compare to. It can be
         *      - A number
         *      - Name of field which its value defines the number
         *      - Name of callback function that returns the number
         *      - A callback function that returns the number
         *
         * - inclusive [optional]: Can be true or false. Default is true
         * - message: The invalid message
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

			value = this._format(value);

            var locale         = validator.getLocale(),
                compareTo      = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value),
                compareToValue = this._format(compareTo);

            return (options.inclusive === true || options.inclusive === undefined)
                    ? {
                        valid: $.isNumeric(value) && parseFloat(value) <= compareToValue,
                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].lessThan['default'], compareTo)
                    }
                    : {
                        valid: $.isNumeric(value) && parseFloat(value) < compareToValue,
                        message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].lessThan.notInclusive, compareTo)
                    };
        },

        _format: function(value) {
            return (value + '').replace(',', '.');
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            mac: {
                'default': 'Please enter a valid MAC address'
            }
        }
    });

    FormValidation.Validator.mac = {
        /**
         * Return true if the input value is a MAC address.
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            return /^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/.test(value) || /^([0-9A-Fa-f]{4}\.){2}([0-9A-Fa-f]{4})$/.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            meid: {
                'default': 'Please enter a valid MEID number'
            }
        }
    });

    FormValidation.Validator.meid = {
        /**
         * Validate MEID (Mobile Equipment Identifier)
         *
         * @see http://en.wikipedia.org/wiki/Mobile_equipment_identifier
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            switch (true) {
                // 14 digit hex representation (no check digit)
                case /^[0-9A-F]{15}$/i.test(value):
                // 14 digit hex representation + dashes or spaces (no check digit)
                case /^[0-9A-F]{2}[- ][0-9A-F]{6}[- ][0-9A-F]{6}[- ][0-9A-F]$/i.test(value):
                // 18 digit decimal representation (no check digit)
                case /^\d{19}$/.test(value):
                // 18 digit decimal representation + dashes or spaces (no check digit)
                case /^\d{5}[- ]\d{5}[- ]\d{4}[- ]\d{4}[- ]\d$/.test(value):
                    // Grab the check digit
                    var cd = value.charAt(value.length - 1);

                    // Strip any non-hex chars
                    value = value.replace(/[- ]/g, '');

                    // If it's all digits, luhn base 10 is used
                    if (value.match(/^\d*$/i)) {
                        return FormValidation.Helper.luhn(value);
                    }

                    // Strip the check digit
                    value = value.slice(0, -1);

                    // Get every other char, and double it
                    var cdCalc = '';
                    for (var i = 1; i <= 13; i += 2) {
                        cdCalc += (parseInt(value.charAt(i), 16) * 2).toString(16);
                    }

                    // Get the sum of each char in the string
                    var sum = 0;
                    for (i = 0; i < cdCalc.length; i++) {
                        sum += parseInt(cdCalc.charAt(i), 16);
                    }

                    // If the last digit of the calc is 0, the check digit is 0
                    return (sum % 10 === 0)
                            ? (cd === '0')
                            // Subtract it from the next highest 10s number (64 goes to 70) and subtract the sum
                            // Double it and turn it into a hex char
                            : (cd === ((Math.floor((sum + 10) / 10) * 10 - sum) * 2).toString(16));

                // 14 digit hex representation (no check digit)
                case /^[0-9A-F]{14}$/i.test(value):
                // 14 digit hex representation + dashes or spaces (no check digit)
                case /^[0-9A-F]{2}[- ][0-9A-F]{6}[- ][0-9A-F]{6}$/i.test(value):
                // 18 digit decimal representation (no check digit)
                case /^\d{18}$/.test(value):
                // 18 digit decimal representation + dashes or spaces (no check digit)
                case /^\d{5}[- ]\d{5}[- ]\d{4}[- ]\d{4}$/.test(value):
                    return true;

                default:
                    return false;
            }
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            notEmpty: {
                'default': 'Please enter a value'
            }
        }
    });

    FormValidation.Validator.notEmpty = {
        enableByHtml5: function($field) {
            var required = $field.attr('required') + '';
            return ('required' === required || 'true' === required);
        },

        /**
         * Check if input value is empty or not
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var type = $field.attr('type');
            if ('radio' === type || 'checkbox' === type) {
                var ns = validator.getNamespace();
                return validator
                            .getFieldElements($field.attr('data-' + ns + '-field'))
                            .filter(':checked')
                            .length > 0;
            }

            if ('number' === type && $field.get(0).validity && $field.get(0).validity.badInput === true) {
                return true;
            }

            var value = validator.getFieldValue($field, validatorName);
            return $.trim(value) !== '';
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            numeric: {
                'default': 'Please enter a valid float number'
            }
        }
    });

    FormValidation.Validator.numeric = {
        html5Attributes: {
            message: 'message',
            separator: 'separator',     // deprecated
            thousandsseparator: 'thousandsSeparator',
            decimalseparator: 'decimalSeparator'
        },

        enableByHtml5: function($field) {
            return ('number' === $field.attr('type')) && ($field.attr('step') !== undefined) && ($field.attr('step') % 1 !== 0);
        },

        /**
         * Validate decimal number
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * - thousandsSeparator: The thousands separator. It's empty by default
         * - separator, decimalSeparator: The decimal separator. It's '.' by default
         * The separator option is deprecated and should be replaced with decimalSeparator
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            if (this.enableByHtml5($field) && $field.get(0).validity && $field.get(0).validity.badInput === true) {
                return false;
            }

            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var decimalSeparator   = options.separator || options.decimalSeparator || '.',
                thousandsSeparator = options.thousandsSeparator || '';

            // Support preceding zero numbers such as .5, -.5
            if (value.substr(0, 1) === decimalSeparator) {
                value = '0' + decimalSeparator + value.substr(1);
            } else if (value.substr(0, 2) === '-' + decimalSeparator) {
                value = '-0' + decimalSeparator + value.substr(2);
            }

            decimalSeparator   = (decimalSeparator   === '.') ? '\\.' : decimalSeparator;
            thousandsSeparator = (thousandsSeparator === '.') ? '\\.' : thousandsSeparator;

            var testRegexp         = new RegExp('^-?[0-9]{1,3}(' + thousandsSeparator + '[0-9]{3})*(' + decimalSeparator + '[0-9]+)?$'),
                thousandsReplacer  = new RegExp(thousandsSeparator, 'g');

            if (!testRegexp.test(value)) {
                return false;
            }

            // Replace thousands separator with blank
            if (thousandsSeparator) {
                value = value.replace(thousandsReplacer, '');
            }
            // Replace decimal separator with a dot
            if (decimalSeparator) {
                value = value.replace(decimalSeparator, '.');
            }

            return !isNaN(parseFloat(value)) && isFinite(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            phone: {
                'default': 'Please enter a valid phone number',
                country: 'Please enter a valid phone number in %s',
                countries: {
                    AE: 'United Arab Emirates',
                    BG: 'Bulgaria',
                    BR: 'Brazil',
                    CN: 'China',
                    CZ: 'Czech Republic',
                    DE: 'Germany',
                    DK: 'Denmark',
                    ES: 'Spain',
                    FR: 'France',
                    GB: 'United Kingdom',
                    IN: 'India',
                    MA: 'Morocco',
                    NL: 'Netherlands',
                    PK: 'Pakistan',
                    RO: 'Romania',
                    RU: 'Russia',
                    SK: 'Slovakia',
                    TH: 'Thailand',
                    US: 'USA',
                    VE: 'Venezuela'
                }
            }
        }
    });

    FormValidation.Validator.phone = {
        html5Attributes: {
            message: 'message',
            country: 'country'
        },

        // The supported countries
        COUNTRY_CODES: ['AE', 'BG', 'BR', 'CN', 'CZ', 'DE', 'DK', 'ES', 'FR', 'GB', 'IN', 'MA', 'NL', 'PK', 'RO', 'RU', 'SK', 'TH', 'US', 'VE'],

        /**
         * Return true if the input value contains a valid phone number for the country
         * selected in the options
         *
         * @param {FormValidation.Base} validator Validate plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * - country: The ISO-3166 country code. It can be
         *      - A country code
         *      - Name of field which its value defines the country code
         *      - Name of callback function that returns the country code
         *      - A callback function that returns the country code
         *
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var locale  = validator.getLocale(),
                country = options.country;
            if (typeof country !== 'string' || $.inArray(country, this.COUNTRY_CODES) === -1) {
                // Try to determine the country
                country = validator.getDynamicOption($field, country);
            }

            if (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {
                return true;
            }

            var isValid = true;
            switch (country.toUpperCase()) {
                case 'AE':
                    // http://regexr.com/39tak
                    value   = $.trim(value);
                    isValid = (/^(((\+|00)?971[\s\.-]?(\(0\)[\s\.-]?)?|0)(\(5(0|2|5|6)\)|5(0|2|5|6)|2|3|4|6|7|9)|60)([\s\.-]?[0-9]){7}$/).test(value);
                    break;

                case 'BG':
                    // https://regex101.com/r/yE6vN4/1
                    // See http://en.wikipedia.org/wiki/Telephone_numbers_in_Bulgaria
                    value   = value.replace(/\+|\s|-|\/|\(|\)/gi,'');
                    isValid = (/^(0|359|00)(((700|900)[0-9]{5}|((800)[0-9]{5}|(800)[0-9]{4}))|(87|88|89)([0-9]{7})|((2[0-9]{7})|(([3-9][0-9])(([0-9]{6})|([0-9]{5})))))$/).test(value);
                    break;

                case 'BR':
                    // http://regexr.com/399m1
                    value   = $.trim(value);
                    isValid = (/^(([\d]{4}[-.\s]{1}[\d]{2,3}[-.\s]{1}[\d]{2}[-.\s]{1}[\d]{2})|([\d]{4}[-.\s]{1}[\d]{3}[-.\s]{1}[\d]{4})|((\(?\+?[0-9]{2}\)?\s?)?(\(?\d{2}\)?\s?)?\d{4,5}[-.\s]?\d{4}))$/).test(value);
                    break;

                case 'CN':
                    // http://regexr.com/39dq4
                    value   = $.trim(value);
                    isValid = (/^((00|\+)?(86(?:-| )))?((\d{11})|(\d{3}[- ]{1}\d{4}[- ]{1}\d{4})|((\d{2,4}[- ]){1}(\d{7,8}|(\d{3,4}[- ]{1}\d{4}))([- ]{1}\d{1,4})?))$/).test(value);
                    break;

                case 'CZ':
                    // http://regexr.com/39hhl
                    isValid = /^(((00)([- ]?)|\+)(420)([- ]?))?((\d{3})([- ]?)){2}(\d{3})$/.test(value);
                    break;

                case 'DE':
                    // http://regexr.com/39pkg
                    value   = $.trim(value);
                    isValid = (/^(((((((00|\+)49[ \-/]?)|0)[1-9][0-9]{1,4})[ \-/]?)|((((00|\+)49\()|\(0)[1-9][0-9]{1,4}\)[ \-/]?))[0-9]{1,7}([ \-/]?[0-9]{1,5})?)$/).test(value);
                    break;

                case 'DK':
                    // Mathing DK phone numbers with country code in 1 of 3 formats and an
                    // 8 digit phone number not starting with a 0 or 1. Can have 1 space
                    // between each character except inside the country code.
                    // http://regex101.com/r/sS8fO4/1
                    value   = $.trim(value);
                    isValid = (/^(\+45|0045|\(45\))?\s?[2-9](\s?\d){7}$/).test(value);
                    break;

                case 'ES':
                    // http://regex101.com/r/rB9mA9/1
                    // Telephone numbers in Spain go like this:
                    //     9: Landline phones and special prefixes.
                    //     6, 7: Mobile phones.
                    //     5: VoIP lines.
                    //     8: Premium-rate services.
                    // There are also special 5-digit and 3-digit numbers, but
                    // maybe it would be overkill to include them all.
                    value   = $.trim(value);
                    isValid = (/^(?:(?:(?:\+|00)34\D?))?(?:5|6|7|8|9)(?:\d\D?){8}$/).test(value);
                    break;

                case 'FR':
                    // http://regexr.com/39a2p
                    value   = $.trim(value);
                    isValid = (/^(?:(?:(?:\+|00)33[ ]?(?:\(0\)[ ]?)?)|0){1}[1-9]{1}([ .-]?)(?:\d{2}\1?){3}\d{2}$/).test(value);
                    break;

            	case 'GB':
                    // http://aa-asterisk.org.uk/index.php/Regular_Expressions_for_Validating_and_Formatting_GB_Telephone_Numbers#Match_GB_telephone_number_in_any_format
                    // http://regexr.com/38uhv
                    value   = $.trim(value);
                    isValid = (/^\(?(?:(?:0(?:0|11)\)?[\s-]?\(?|\+)44\)?[\s-]?\(?(?:0\)?[\s-]?\(?)?|0)(?:\d{2}\)?[\s-]?\d{4}[\s-]?\d{4}|\d{3}\)?[\s-]?\d{3}[\s-]?\d{3,4}|\d{4}\)?[\s-]?(?:\d{5}|\d{3}[\s-]?\d{3})|\d{5}\)?[\s-]?\d{4,5}|8(?:00[\s-]?11[\s-]?11|45[\s-]?46[\s-]?4\d))(?:(?:[\s-]?(?:x|ext\.?\s?|\#)\d+)?)$/).test(value);
                    break;

                case 'IN':
                    // http://stackoverflow.com/questions/18351553/regular-expression-validation-for-indian-phone-number-and-mobile-number
                    // http://regex101.com/r/qL6eZ5/1
                    // May begin with +91. Supports mobile and land line numbers
                    value   = $.trim(value);
                    isValid = (/((\+?)((0[ -]+)*|(91 )*)(\d{12}|\d{10}))|\d{5}([- ]*)\d{6}/).test(value);
                    break;

                case 'MA':
                    // http://en.wikipedia.org/wiki/Telephone_numbers_in_Morocco
                    // http://regexr.com/399n8
                    value   = $.trim(value);
                    isValid = (/^(?:(?:(?:\+|00)212[\s]?(?:[\s]?\(0\)[\s]?)?)|0){1}(?:5[\s.-]?[2-3]|6[\s.-]?[13-9]){1}[0-9]{1}(?:[\s.-]?\d{2}){3}$/).test(value);
                    break;

                case 'NL':
                    // http://en.wikipedia.org/wiki/Telephone_numbers_in_the_Netherlands
                    // http://regexr.com/3aevr
                    value   = $.trim(value);
                    isValid = (/^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)[1-9]((\s|\s?\-\s?)?[0-9])((\s|\s?-\s?)?[0-9])((\s|\s?-\s?)?[0-9])\s?[0-9]\s?[0-9]\s?[0-9]\s?[0-9]\s?[0-9]$/gm).test(value);
                    break;

                case 'PK':
                    // http://regex101.com/r/yH8aV9/2
                    value   = $.trim(value);
                    isValid = (/^0?3[0-9]{2}[0-9]{7}$/).test(value);
                    break;

                case 'RO':
                    // All mobile network and land line
                    // http://regexr.com/39fv1
                    isValid = (/^(\+4|)?(07[0-8]{1}[0-9]{1}|02[0-9]{2}|03[0-9]{2}){1}?(\s|\.|\-)?([0-9]{3}(\s|\.|\-|)){2}$/g).test(value);
                    break;

                case 'RU':
                    // http://regex101.com/r/gW7yT5/5
                    isValid = (/^((8|\+7|007)[\-\.\/ ]?)?([\(\/\.]?\d{3}[\)\/\.]?[\-\.\/ ]?)?[\d\-\.\/ ]{7,10}$/g).test(value);
                    break;

                case 'SK':
                    // http://regexr.com/3a95f
                    isValid = /^(((00)([- ]?)|\+)(421)([- ]?))?((\d{3})([- ]?)){2}(\d{3})$/.test(value);
                    break;

                case 'TH':
                    // http://regex101.com/r/vM5mZ4/2
                    isValid = (/^0\(?([6|8-9]{2})*-([0-9]{3})*-([0-9]{4})$/).test(value);
                    break;

                case 'VE':
                    // http://regex101.com/r/eM2yY0/6
                    value   = $.trim(value);
                    isValid = (/^0(?:2(?:12|4[0-9]|5[1-9]|6[0-9]|7[0-8]|8[1-35-8]|9[1-5]|3[45789])|4(?:1[246]|2[46]))\d{7}$/).test(value);
                    break;

                case 'US':
                /* falls through */
                default:
                    // Make sure US phone numbers have 10 digits
                    // May start with 1, +1, or 1-; should discard
                    // Area code may be delimited with (), & sections may be delimited with . or -
                    // http://regexr.com/38mqi
                    isValid = (/^(?:(1\-?)|(\+1 ?))?\(?\d{3}\)?\s?[\-\.]?\d{3}[\-\.]?\d{4}$/).test(value);
                    break;
            }

            return {
                valid: isValid,
                message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].phone.country, FormValidation.I18n[locale].phone.countries[country])
            };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            promise: {
                'default': 'Please enter a valid value'
            }
        }
    });

    FormValidation.Validator.promise = {
        priority: 999,

        html5Attributes: {
            message: 'message',
            promise: 'promise'
        },

        /**
         * Return result from a jQuery's Deferred object
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - promise: The method that passes parameters:
         *      promise: function(fieldValue, validator, $field) {
         *          // fieldValue is the value of field
         *          // validator is instance of FormValidation.Base
         *          // $field is the field element
         *
         *          var dfd = new $.Deferred();
         *
         *          // Do something ...
         *
         *          // Resolve when particular task is done
         *          dfd.resolve({
         *              valid: true or false,       // Required
         *              message: 'Other message',   // Optional
         *              key: value                  // You can attach more data to reuse later
         *          });
         *
         *          // You can reject if there's error
         *          dfd.reject({
         *              message: 'Other message',   // Optional
         *              key: value                  // You can attach more data to reuse later
         *          });
         *
         *          return dfd.promise();
         *      }
         * - message: The invalid message
         * @returns {Deferred}
         */
        validate: function(validator, $field, options, validatorName) {
            var value   = validator.getFieldValue($field, validatorName),
                dfd     = new $.Deferred(),
                promise = FormValidation.Helper.call(options.promise, [value, validator, $field]);

            promise
                .done(function(result) {
                    dfd.resolve($field, validatorName, result);
                })
                .fail(function(result) {
                    result = result || {};
                    result.valid = false;
                    dfd.resolve($field, validatorName, result);
                });

            return dfd;
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            regexp: {
                'default': 'Please enter a value matching the pattern'
            }
        }
    });

    FormValidation.Validator.regexp = {
        html5Attributes: {
            message: 'message',
            flags: 'flags',
            regexp: 'regexp'
        },

        enableByHtml5: function($field) {
            var pattern = $field.attr('pattern');
            if (pattern) {
                return {
                    regexp: pattern
                };
            }

            return false;
        },

        /**
         * Check if the element value matches given regular expression
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of the following key:
         * - regexp: The regular expression you need to check
         * - flags: If specified, flags can have any combination of Javascript regular expression flags such as:
         *      g: global match
         *      i: ignore case
         *      m: multiple line
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var regexp = ('string' === typeof options.regexp)
                        ? (options.flags ? new RegExp(options.regexp, options.flags) : new RegExp(options.regexp))
                        : options.regexp;
            return regexp.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            remote: {
                'default': 'Please enter a valid value'
            }
        }
    });

    FormValidation.Validator.remote = {
        priority: 1000,

        html5Attributes: {
            async: 'async',
            crossdomain: 'crossDomain',
            data: 'data',
            datatype: 'dataType',
            delay: 'delay',
            message: 'message',
            name: 'name',
            type: 'type',
            url: 'url',
            validkey: 'validKey'
        },

        /**
         * Destroy the timer when destroying the FormValidation (using validator.destroy() method)
         */
        destroy: function(validator, $field, options, validatorName) {
            var ns    = validator.getNamespace(),
                timer = $field.data(ns + '.' + validatorName + '.timer');
            if (timer) {
                clearTimeout(timer);
                $field.removeData(ns + '.' + validatorName + '.timer');
            }
        },

        /**
         * Request a remote server to check the input value
         *
         * @param {FormValidation.Base} validator Plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - async {Boolean} [optional] Indicate the Ajax request will be asynchronous or not. It's true by default
         * - crossDomain {Boolean} [optional]
         * - data {Object|Function} [optional]: By default, it will take the value
         *  {
         *      <fieldName>: <fieldValue>
         *  }
         * - dataType {String} [optional]: The type of data which is returned by remote server.
         * It can be json (default), text, script
         * - delay {Number} [optional]
         * - headers {String[]} [optional]: Additional headers
         * - message {String} [optional]: The invalid message
         * - name {String} [optional]: Override the field name for the request.
         * - type {String} [optional] Can be GET or POST (default)
         * - url {String|Function}
         * - validKey {String} [optional]: The valid key. It's "valid" by default
         * This is useful when connecting to external remote server or APIs provided by 3rd parties
         * @returns {Deferred}
         */
        validate: function(validator, $field, options, validatorName) {
            var ns    = validator.getNamespace(),
                value = validator.getFieldValue($field, validatorName),
                dfd   = new $.Deferred();
            if (value === '') {
                dfd.resolve($field, validatorName, { valid: true });
                return dfd;
            }
            var name     = $field.attr('data-' + ns + '-field'),
                data     = options.data || {},
                url      = options.url,
                validKey = options.validKey || 'valid';

            // Support dynamic data
            if ('function' === typeof data) {
                data = data.call(this, validator, $field, value);
            }

            // Parse string data from HTML5 attribute
            if ('string' === typeof data) {
                data = JSON.parse(data);
            }

            // Support dynamic url
            if ('function' === typeof url) {
                url = url.call(this, validator, $field, value);
            }

            data[options.name || name] = value;

            var ajaxOptions = {
                async: options.async === null || options.async === true || options.async === 'true',
                data: data,
                dataType: options.dataType || 'json',
                headers: options.headers || {},
                type: options.type || 'GET',
                url: url
            };
            if (options.crossDomain !== null) {
                ajaxOptions.crossDomain = (options.crossDomain === true || options.crossDomain === 'true');
            }

            function runCallback() {
                var xhr = $.ajax(ajaxOptions);

                xhr
                    .success(function(response) {
                        response.valid = (response[validKey] === true || response[validKey] === 'true')
                                        ? true
                                        : (response[validKey] === false || response[validKey] === 'false' ? false : null);
                        dfd.resolve($field, validatorName, response);
                    })
                    .error(function(response) {
                        dfd.resolve($field, validatorName, {
                            valid: false
                        });
                    });

                dfd.fail(function() {
                    xhr.abort();
                });

                return dfd;
            }

            if (options.delay) {
                // Since the form might have multiple fields with the same name
                // I have to attach the timer to the field element
                if ($field.data(ns + '.' + validatorName + '.timer')) {
                    clearTimeout($field.data(ns + '.' + validatorName + '.timer'));
                }

                $field.data(ns + '.' + validatorName + '.timer', setTimeout(runCallback, options.delay));
                return dfd;
            } else {
                return runCallback();
            }
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            rtn: {
                'default': 'Please enter a valid RTN number'
            }
        }
    });

    FormValidation.Validator.rtn = {
        /**
         * Validate a RTN (Routing transit number)
         *
         * @see http://en.wikipedia.org/wiki/Routing_transit_number
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            if (!/^\d{9}$/.test(value)) {
                return false;
            }

            var sum = 0;
            for (var i = 0; i < value.length; i += 3) {
                sum += parseInt(value.charAt(i),     10) * 3
                    +  parseInt(value.charAt(i + 1), 10) * 7
                    +  parseInt(value.charAt(i + 2), 10);
            }
            return (sum !== 0 && sum % 10 === 0);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            sedol: {
                'default': 'Please enter a valid SEDOL number'
            }
        }
    });

    FormValidation.Validator.sedol = {
        /**
         * Validate a SEDOL (Stock Exchange Daily Official List)
         *
         * @see http://en.wikipedia.org/wiki/SEDOL
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            value = value.toUpperCase();
            if (!/^[0-9A-Z]{7}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                weight = [1, 3, 1, 7, 3, 9, 1],
                length = value.length;
            for (var i = 0; i < length - 1; i++) {
	            sum += weight[i] * parseInt(value.charAt(i), 36);
	        }
	        sum = (10 - sum % 10) % 10;
            return sum + '' === value.charAt(length - 1);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
		'en_US': {
			siren: {
				'default': 'Please enter a valid SIREN number'
			}
		}
    });

	FormValidation.Validator.siren = {
		/**
		 * Check if a string is a siren number
		 *
		 * @param {FormValidation.Base} validator The validator plugin instance
		 * @param {jQuery} $field Field element
		 * @param {Object} options Consist of key:
         * - message: The invalid message
		 * @returns {Boolean}
		 */
		validate: function(validator, $field, options, validatorName) {
			var value = validator.getFieldValue($field, validatorName);
			if (value === '') {
				return true;
			}

            if (!/^\d{9}$/.test(value)) {
                return false;
            }
            return FormValidation.Helper.luhn(value);
		}
	};
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
		'en_US': {
			siret: {
				'default': 'Please enter a valid SIRET number'
			}
		}
    });

	FormValidation.Validator.siret = {
        /**
         * Check if a string is a siret number
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * @returns {Boolean}
         */
		validate: function(validator, $field, options, validatorName) {
			var value = validator.getFieldValue($field, validatorName);
			if (value === '') {
				return true;
			}

			var sum    = 0,
                length = value.length,
                tmp;
			for (var i = 0; i < length; i++) {
                tmp = parseInt(value.charAt(i), 10);
				if ((i % 2) === 0) {
					tmp = tmp * 2;
					if (tmp > 9) {
						tmp -= 9;
					}
				}
				sum += tmp;
			}
			return (sum % 10 === 0);
		}
	};
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            step: {
                'default': 'Please enter a valid step of %s'
            }
        }
    });

    FormValidation.Validator.step = {
        html5Attributes: {
            message: 'message',
            base: 'baseValue',
            step: 'step'
        },

        /**
         * Return true if the input value is valid step one
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Can consist of the following keys:
         * - baseValue: The base value
         * - step: The step
         * - message: The invalid message
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            options = $.extend({}, { baseValue: 0, step: 1 }, options);
            value   = parseFloat(value);
            if (!$.isNumeric(value)) {
                return false;
            }

            var round = function(x, precision) {
                    var m = Math.pow(10, precision);
                    x = x * m;
                    var sign   = (x > 0) | -(x < 0),
                        isHalf = (x % 1 === 0.5 * sign);
                    if (isHalf) {
                        return (Math.floor(x) + (sign > 0)) / m;
                    } else {
                        return Math.round(x) / m;
                    }
                },
                floatMod = function(x, y) {
                    if (y === 0.0) {
                        return 1.0;
                    }
                    var dotX      = (x + '').split('.'),
                        dotY      = (y + '').split('.'),
                        precision = ((dotX.length === 1) ? 0 : dotX[1].length) + ((dotY.length === 1) ? 0 : dotY[1].length);
                    return round(x - y * Math.floor(x / y), precision);
                };

            var locale = validator.getLocale(),
                mod    = floatMod(value - options.baseValue, options.step);
            return {
                valid: mod === 0.0 || mod === options.step,
                message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].step['default'], [options.step])
            };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            stringCase: {
                'default': 'Please enter only lowercase characters',
                upper: 'Please enter only uppercase characters'
            }
        }
    });

    FormValidation.Validator.stringCase = {
        html5Attributes: {
            message: 'message',
            'case': 'case'
        },

        /**
         * Check if a string is a lower or upper case one
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * - case: Can be 'lower' (default) or 'upper'
         * @returns {Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var locale     = validator.getLocale(),
                stringCase = (options['case'] || 'lower').toLowerCase();
            return {
                valid: ('upper' === stringCase) ? value === value.toUpperCase() : value === value.toLowerCase(),
                message: options.message || (('upper' === stringCase) ? FormValidation.I18n[locale].stringCase.upper : FormValidation.I18n[locale].stringCase['default'])
            };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            stringLength: {
                'default': 'Please enter a value with valid length',
                less: 'Please enter less than %s characters',
                more: 'Please enter more than %s characters',
                between: 'Please enter value between %s and %s characters long'
            }
        }
    });

    FormValidation.Validator.stringLength = {
        html5Attributes: {
            message: 'message',
            min: 'min',
            max: 'max',
            trim: 'trim',
            utf8bytes: 'utf8Bytes'
        },

        enableByHtml5: function($field) {
            var options   = {},
                maxLength = $field.attr('maxlength'),
                minLength = $field.attr('minlength');
            if (maxLength) {
                options.max = parseInt(maxLength, 10);
            }
            if (minLength) {
                options.min = parseInt(minLength, 10);
            }

            return $.isEmptyObject(options) ? false : options;
        },

        /**
         * Check if the length of element value is less or more than given number
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consists of following keys:
         * - min
         * - max
         * At least one of two keys is required
         * The min, max keys define the number which the field value compares to. min, max can be
         *      - A number
         *      - Name of field which its value defines the number
         *      - Name of callback function that returns the number
         *      - A callback function that returns the number
         *
         * - message: The invalid message
         * - trim: Indicate the length will be calculated after trimming the value or not. It is false, by default
         * - utf8bytes: Evaluate string length in UTF-8 bytes, default to false
         * @returns {Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (options.trim === true || options.trim === 'true') {
                value = $.trim(value);
            }

            if (value === '') {
                return true;
            }

            var locale     = validator.getLocale(),
                min        = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),
                max        = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max),
                // Credit to http://stackoverflow.com/a/23329386 (@lovasoa) for UTF-8 byte length code
                utf8Length = function(str) {
                                 var s = str.length;
                                 for (var i = str.length - 1; i >= 0; i--) {
                                     var code = str.charCodeAt(i);
                                     if (code > 0x7f && code <= 0x7ff) {
                                         s++;
                                     } else if (code > 0x7ff && code <= 0xffff) {
                                         s += 2;
                                     }
                                     if (code >= 0xDC00 && code <= 0xDFFF) {
                                         i--;
                                     }
                                 }
                                 return s;
                             },
                length     = options.utf8Bytes ? utf8Length(value) : value.length,
                isValid    = true,
                message    = options.message || FormValidation.I18n[locale].stringLength['default'];

            if ((min && length < parseInt(min, 10)) || (max && length > parseInt(max, 10))) {
                isValid = false;
            }

            switch (true) {
                case (!!min && !!max):
                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].stringLength.between, [parseInt(min, 10), parseInt(max, 10)]);
                    break;

                case (!!min):
                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].stringLength.more, parseInt(min, 10) - 1);
                    break;

                case (!!max):
                    message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].stringLength.less, parseInt(max, 10) + 1);
                    break;

                default:
                    break;
            }

            return {
                valid: isValid,
                message: message
            };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            uri: {
                'default': 'Please enter a valid URI'
            }
        }
    });

    FormValidation.Validator.uri = {
        html5Attributes: {
            message: 'message',
            allowlocal: 'allowLocal',
            allowemptyprotocol: 'allowEmptyProtocol',
            protocol: 'protocol'
        },

        enableByHtml5: function($field) {
            return ('url' === $field.attr('type'));
        },

        /**
         * Return true if the input value is a valid URL
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options
         * - message: The error message
         * - allowLocal: Allow the private and local network IP. Default to false
         * - allowEmptyProtocol: Allow the URI without protocol. Default to false
         * - protocol: The protocols, separated by a comma. Default to "http, https, ftp"
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // Credit to https://gist.github.com/dperini/729294
            //
            // Regular Expression for URL validation
            //
            // Author: Diego Perini
            // Updated: 2010/12/05
            //
            // the regular expression composed & commented
            // could be easily tweaked for RFC compliance,
            // it was expressly modified to fit & satisfy
            // these test for an URL shortener:
            //
            //   http://mathiasbynens.be/demo/url-regex
            //
            // Notes on possible differences from a standard/generic validation:
            //
            // - utf-8 char class take in consideration the full Unicode range
            // - TLDs are mandatory unless `allowLocal` is true
            // - protocols have been restricted to ftp, http and https only as requested
            //
            // Changes:
            //
            // - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255
            //   first and last IP address of each class is considered invalid
            //   (since they are broadcast/network addresses)
            //
            // - Added exclusion of private, reserved and/or local networks ranges
            //   unless `allowLocal` is true
            //
            // - Added possibility of choosing a custom protocol
            //
            // - Add option to validate without protocol
            //
            var allowLocal         = options.allowLocal === true || options.allowLocal === 'true',
                allowEmptyProtocol = options.allowEmptyProtocol === true || options.allowEmptyProtocol === 'true',
                protocol           = (options.protocol || 'http, https, ftp').split(',').join('|').replace(/\s/g, ''),
                urlExp             = new RegExp(
                    "^" +
                    // protocol identifier
                    "(?:(?:" + protocol + ")://)" +
                    // allow empty protocol
                    (allowEmptyProtocol ? '?' : '') +
                    // user:pass authentication
                    "(?:\\S+(?::\\S*)?@)?" +
                    "(?:" +
                    // IP address exclusion
                    // private & local networks
                    (allowLocal
                        ? ''
                        : ("(?!(?:10|127)(?:\\.\\d{1,3}){3})" +
                           "(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})" +
                           "(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})")) +
                    // IP address dotted notation octets
                    // excludes loopback network 0.0.0.0
                    // excludes reserved space >= 224.0.0.0
                    // excludes network & broadcast addresses
                    // (first & last IP address of each class)
                    "(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])" +
                    "(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}" +
                    "(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))" +
                    "|" +
                    // host name
                    "(?:(?:[a-z\\u00a1-\\uffff0-9]-?)*[a-z\\u00a1-\\uffff0-9]+)" +
                    // domain name
                    "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-?)*[a-z\\u00a1-\\uffff0-9])*" +
                    // TLD identifier
                    "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))" +
                    // Allow intranet sites (no TLD) if `allowLocal` is true
                    (allowLocal ? '?' : '') +
                    ")" +
                    // port number
                    "(?::\\d{2,5})?" +
                    // resource path
                    "(?:/[^\\s]*)?" +
                    "$", "i"
                );

            return urlExp.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            uuid: {
                'default': 'Please enter a valid UUID number',
                version: 'Please enter a valid UUID version %s number'
            }
        }
    });

    FormValidation.Validator.uuid = {
        html5Attributes: {
            message: 'message',
            version: 'version'
        },

        /**
         * Return true if and only if the input value is a valid UUID string
         *
         * @see http://en.wikipedia.org/wiki/Universally_unique_identifier
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * - version: Can be 3, 4, 5, null
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // See the format at http://en.wikipedia.org/wiki/Universally_unique_identifier#Variants_and_versions
            var locale   = validator.getLocale(),
                patterns = {
                    '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
                    '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
                    '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
                    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
                },
                version = options.version ? (options.version + '') : 'all';
            return {
                valid: (null === patterns[version]) ? true : patterns[version].test(value),
                message: options.version
                            ? FormValidation.Helper.format(options.message || FormValidation.I18n[locale].uuid.version, options.version)
                            : (options.message || FormValidation.I18n[locale].uuid['default'])
            };
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            vat: {
                'default': 'Please enter a valid VAT number',
                country: 'Please enter a valid VAT number in %s',
                countries: {
                    AT: 'Austria',
                    BE: 'Belgium',
                    BG: 'Bulgaria',
                    BR: 'Brazil',
                    CH: 'Switzerland',
                    CY: 'Cyprus',
                    CZ: 'Czech Republic',
                    DE: 'Germany',
                    DK: 'Denmark',
                    EE: 'Estonia',
                    ES: 'Spain',
                    FI: 'Finland',
                    FR: 'France',
                    GB: 'United Kingdom',
                    GR: 'Greek',
                    EL: 'Greek',
                    HU: 'Hungary',
                    HR: 'Croatia',
                    IE: 'Ireland',
                    IS: 'Iceland',
                    IT: 'Italy',
                    LT: 'Lithuania',
                    LU: 'Luxembourg',
                    LV: 'Latvia',
                    MT: 'Malta',
                    NL: 'Netherlands',
                    NO: 'Norway',
                    PL: 'Poland',
                    PT: 'Portugal',
                    RO: 'Romania',
                    RU: 'Russia',
                    RS: 'Serbia',
                    SE: 'Sweden',
                    SI: 'Slovenia',
                    SK: 'Slovakia',
                    VE: 'Venezuela',
                    ZA: 'South Africa'
                }
            }
        }
    });

    FormValidation.Validator.vat = {
        html5Attributes: {
            message: 'message',
            country: 'country'
        },

        // Supported country codes
        COUNTRY_CODES: [
            'AT', 'BE', 'BG', 'BR', 'CH', 'CY', 'CZ', 'DE', 'DK', 'EE', 'EL', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU',
            'IE', 'IS', 'IT', 'LT', 'LU', 'LV', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'RU', 'RS', 'SE', 'SK', 'SI', 'VE',
            'ZA'
        ],

        /**
         * Validate an European VAT number
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * - country: The ISO 3166-1 country code. It can be
         *      - One of country code defined in COUNTRY_CODES
         *      - Name of field which its value defines the country code
         *      - Name of callback function that returns the country code
         *      - A callback function that returns the country code
         * @returns {Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            var locale  = validator.getLocale(),
                country = options.country;
            if (!country) {
                country = value.substr(0, 2);
            } else if (typeof country !== 'string' || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {
                // Determine the country code
                country = validator.getDynamicOption($field, country);
            }

            if ($.inArray(country, this.COUNTRY_CODES) === -1) {
                return true;
            }

            var method  = ['_', country.toLowerCase()].join(''),
                result = this[method](value);
            result         = (result === true || result === false) ? { valid: result } : result;
            result.message = FormValidation.Helper.format(options.message || FormValidation.I18n[locale].vat.country, FormValidation.I18n[locale].vat.countries[country.toUpperCase()]);

            return result;
        },

        // VAT validators

        /**
         * Validate Austrian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _at: function(value) {
            if (/^ATU[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^U[0-9]{8}$/.test(value)) {
                return false;
            }

            value = value.substr(1);
            var sum    = 0,
                weight = [1, 2, 1, 2, 1, 2, 1],
                temp   = 0;
            for (var i = 0; i < 7; i++) {
                temp = parseInt(value.charAt(i), 10) * weight[i];
                if (temp > 9) {
                    temp = Math.floor(temp / 10) + temp % 10;
                }
                sum += temp;
            }

            sum = 10 - (sum + 4) % 10;
            if (sum === 10) {
                sum = 0;
            }

            return (sum + '' === value.substr(7, 1));
        },

        /**
         * Validate Belgian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _be: function(value) {
            if (/^BE[0]{0,1}[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0]{0,1}[0-9]{9}$/.test(value)) {
                return false;
            }

            if (value.length === 9) {
                value = '0' + value;
            }
            if (value.substr(1, 1) === '0') {
                return false;
            }

            var sum = parseInt(value.substr(0, 8), 10) + parseInt(value.substr(8, 2), 10);
            return (sum % 97 === 0);
        },

        /**
         * Validate Bulgarian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _bg: function(value) {
            if (/^BG[0-9]{9,10}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9,10}$/.test(value)) {
                return false;
            }

            var sum = 0, i = 0;

            // Legal entities
            if (value.length === 9) {
                for (i = 0; i < 8; i++) {
                    sum += parseInt(value.charAt(i), 10) * (i + 1);
                }
                sum = sum % 11;
                if (sum === 10) {
                    sum = 0;
                    for (i = 0; i < 8; i++) {
                        sum += parseInt(value.charAt(i), 10) * (i + 3);
                    }
                }
                sum = sum % 10;
                return (sum + '' === value.substr(8));
            }
            // Physical persons, foreigners and others
            else if (value.length === 10) {
                // Validate Bulgarian national identification numbers
                var egn = function(value) {
                        // Check the birth date
                        var year  = parseInt(value.substr(0, 2), 10) + 1900,
                            month = parseInt(value.substr(2, 2), 10),
                            day   = parseInt(value.substr(4, 2), 10);
                        if (month > 40) {
                            year += 100;
                            month -= 40;
                        } else if (month > 20) {
                            year -= 100;
                            month -= 20;
                        }

                        if (!FormValidation.Helper.date(year, month, day)) {
                            return false;
                        }

                        var sum    = 0,
                            weight = [2, 4, 8, 5, 10, 9, 7, 3, 6];
                        for (var i = 0; i < 9; i++) {
                            sum += parseInt(value.charAt(i), 10) * weight[i];
                        }
                        sum = (sum % 11) % 10;
                        return (sum + '' === value.substr(9, 1));
                    },
                    // Validate Bulgarian personal number of a foreigner
                    pnf = function(value) {
                        var sum    = 0,
                            weight = [21, 19, 17, 13, 11, 9, 7, 3, 1];
                        for (var i = 0; i < 9; i++) {
                            sum += parseInt(value.charAt(i), 10) * weight[i];
                        }
                        sum = sum % 10;
                        return (sum + '' === value.substr(9, 1));
                    },
                    // Finally, consider it as a VAT number
                    vat = function(value) {
                        var sum    = 0,
                            weight = [4, 3, 2, 7, 6, 5, 4, 3, 2];
                        for (var i = 0; i < 9; i++) {
                            sum += parseInt(value.charAt(i), 10) * weight[i];
                        }
                        sum = 11 - sum % 11;
                        if (sum === 10) {
                            return false;
                        }
                        if (sum === 11) {
                            sum = 0;
                        }
                        return (sum + '' === value.substr(9, 1));
                    };
                return (egn(value) || pnf(value) || vat(value));
            }

            return false;
        },

        /**
         * Validate Brazilian VAT number (CNPJ)
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _br: function(value) {
            if (value === '') {
                return true;
            }
            var cnpj = value.replace(/[^\d]+/g, '');
            if (cnpj === '' || cnpj.length !== 14) {
                return false;
            }

            // Remove invalids CNPJs
            if (cnpj === '00000000000000' || cnpj === '11111111111111' || cnpj === '22222222222222' ||
                cnpj === '33333333333333' || cnpj === '44444444444444' || cnpj === '55555555555555' ||
                cnpj === '66666666666666' || cnpj === '77777777777777' || cnpj === '88888888888888' ||
                cnpj === '99999999999999')
            {
                return false;
            }

            // Validate verification digits
            var length  = cnpj.length - 2,
                numbers = cnpj.substring(0, length),
                digits  = cnpj.substring(length),
                sum     = 0,
                pos     = length - 7;

            for (var i = length; i >= 1; i--) {
                sum += parseInt(numbers.charAt(length - i), 10) * pos--;
                if (pos < 2) {
                    pos = 9;
                }
            }

            var result = sum % 11 < 2 ? 0 : 11 - sum % 11;
            if (result !== parseInt(digits.charAt(0), 10)) {
                return false;
            }

            length  = length + 1;
            numbers = cnpj.substring(0, length);
            sum     = 0;
            pos     = length - 7;
            for (i = length; i >= 1; i--) {
                sum += parseInt(numbers.charAt(length - i), 10) * pos--;
                if (pos < 2) {
                    pos = 9;
                }
            }

            result = sum % 11 < 2 ? 0 : 11 - sum % 11;
            return (result === parseInt(digits.charAt(1), 10));
        },

        /**
         * Validate Swiss VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _ch: function(value) {
            if (/^CHE[0-9]{9}(MWST)?$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^E[0-9]{9}(MWST)?$/.test(value)) {
                return false;
            }

            value = value.substr(1);
            var sum    = 0,
                weight = [5, 4, 3, 2, 7, 6, 5, 4];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            sum = 11 - sum % 11;
            if (sum === 10) {
                return false;
            }
            if (sum === 11) {
                sum = 0;
            }

            return (sum + '' === value.substr(8, 1));
        },

        /**
         * Validate Cypriot VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _cy: function(value) {
            if (/^CY[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {
                return false;
            }

            // Do not allow to start with "12"
            if (value.substr(0, 2) === '12') {
                return false;
            }

            // Extract the next digit and multiply by the counter.
            var sum         = 0,
                translation = {
                    '0': 1,  '1': 0,  '2': 5,  '3': 7,  '4': 9,
                    '5': 13, '6': 15, '7': 17, '8': 19, '9': 21
                };
            for (var i = 0; i < 8; i++) {
                var temp = parseInt(value.charAt(i), 10);
                if (i % 2 === 0) {
                    temp = translation[temp + ''];
                }
                sum += temp;
            }

            sum = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[sum % 26];
            return (sum + '' === value.substr(8, 1));
        },

        /**
         * Validate Czech Republic VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _cz: function(value) {
            if (/^CZ[0-9]{8,10}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8,10}$/.test(value)) {
                return false;
            }

            var sum = 0,
                i   = 0;
            if (value.length === 8) {
                // Do not allow to start with '9'
                if (value.charAt(0) + '' === '9') {
                    return false;
                }

                sum = 0;
                for (i = 0; i < 7; i++) {
                    sum += parseInt(value.charAt(i), 10) * (8 - i);
                }
                sum = 11 - sum % 11;
                if (sum === 10) {
                    sum = 0;
                }
                if (sum === 11) {
                    sum = 1;
                }

                return (sum + '' === value.substr(7, 1));
            } else if (value.length === 9 && (value.charAt(0) + '' === '6')) {
                sum = 0;
                // Skip the first (which is 6)
                for (i = 0; i < 7; i++) {
                    sum += parseInt(value.charAt(i + 1), 10) * (8 - i);
                }
                sum = 11 - sum % 11;
                if (sum === 10) {
                    sum = 0;
                }
                if (sum === 11) {
                    sum = 1;
                }
                sum = [8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10][sum - 1];
                return (sum + '' === value.substr(8, 1));
            } else if (value.length === 9 || value.length === 10) {
                // Validate Czech birth number (Rodné číslo), which is also national identifier
                var year  = 1900 + parseInt(value.substr(0, 2), 10),
                    month = parseInt(value.substr(2, 2), 10) % 50 % 20,
                    day   = parseInt(value.substr(4, 2), 10);
                if (value.length === 9) {
                    if (year >= 1980) {
                        year -= 100;
                    }
                    if (year > 1953) {
                        return false;
                    }
                } else if (year < 1954) {
                    year += 100;
                }

                if (!FormValidation.Helper.date(year, month, day)) {
                    return false;
                }

                // Check that the birth date is not in the future
                if (value.length === 10) {
                    var check = parseInt(value.substr(0, 9), 10) % 11;
                    if (year < 1985) {
                        check = check % 10;
                    }
                    return (check + '' === value.substr(9, 1));
                }

                return true;
            }

            return false;
        },

        /**
         * Validate German VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _de: function(value) {
            if (/^DE[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }

            return FormValidation.Helper.mod11And10(value);
        },

        /**
         * Validate Danish VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _dk: function(value) {
            if (/^DK[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                weight = [2, 7, 6, 5, 4, 3, 2, 1];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            return (sum % 11 === 0);
        },

        /**
         * Validate Estonian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _ee: function(value) {
            if (/^EE[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                weight = [3, 7, 1, 3, 7, 1, 3, 7, 1];
            for (var i = 0; i < 9; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            return (sum % 10 === 0);
        },

        /**
         * Validate Spanish VAT number (NIF - Número de Identificación Fiscal)
         * Can be:
         * i) DNI (Documento nacional de identidad), for Spaniards
         * ii) NIE (Número de Identificación de Extranjeros), for foreigners
         * iii) CIF (Certificado de Identificación Fiscal), for legal entities and others
         *
         * @param {String} value VAT number
         * @returns {Boolean|Object}
         */
        _es: function(value) {
            if (/^ES[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {
                return false;
            }

            var dni = function(value) {
                    var check = parseInt(value.substr(0, 8), 10);
                    check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];
                    return (check + '' === value.substr(8, 1));
                },
                nie = function(value) {
                    var check = ['XYZ'.indexOf(value.charAt(0)), value.substr(1)].join('');
                    check = parseInt(check, 10);
                    check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];
                    return (check + '' === value.substr(8, 1));
                },
                cif = function(value) {
                    var first = value.charAt(0), check;
                    if ('KLM'.indexOf(first) !== -1) {
                        // K: Spanish younger than 14 year old
                        // L: Spanish living outside Spain without DNI
                        // M: Granted the tax to foreigners who have no NIE
                        check = parseInt(value.substr(1, 8), 10);
                        check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];
                        return (check + '' === value.substr(8, 1));
                    } else if ('ABCDEFGHJNPQRSUVW'.indexOf(first) !== -1) {
                        var sum    = 0,
                            weight = [2, 1, 2, 1, 2, 1, 2],
                            temp   = 0;

                        for (var i = 0; i < 7; i++) {
                            temp = parseInt(value.charAt(i + 1), 10) * weight[i];
                            if (temp > 9) {
                                temp = Math.floor(temp / 10) + temp % 10;
                            }
                            sum += temp;
                        }
                        sum = 10 - sum % 10;
                        if (sum === 10) {
                            sum = 0;
                        }
                        return (sum + '' === value.substr(8, 1) || 'JABCDEFGHI'[sum] === value.substr(8, 1));
                    }

                    return false;
                };

            var first = value.charAt(0);
            if (/^[0-9]$/.test(first)) {
                return {
                    valid: dni(value),
                    type: 'DNI'
                };
            } else if (/^[XYZ]$/.test(first)) {
                return {
                    valid: nie(value),
                    type: 'NIE'
                };
            } else {
                return {
                    valid: cif(value),
                    type: 'CIF'
                };
            }
        },

        /**
         * Validate Finnish VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _fi: function(value) {
            if (/^FI[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                weight = [7, 9, 10, 5, 8, 4, 2, 1];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            return (sum % 11 === 0);
        },

        /**
         * Validate French VAT number (TVA - taxe sur la valeur ajoutée)
         * It's constructed by a SIREN number, prefixed by two characters.
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _fr: function(value) {
            if (/^FR[0-9A-Z]{2}[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9A-Z]{2}[0-9]{9}$/.test(value)) {
                return false;
            }

            if (!FormValidation.Helper.luhn(value.substr(2))) {
                return false;
            }

            if (/^[0-9]{2}$/.test(value.substr(0, 2))) {
                // First two characters are digits
                return value.substr(0, 2) === (parseInt(value.substr(2) + '12', 10) % 97 + '');
            } else {
                // The first characters cann't be O and I
                var alphabet = '0123456789ABCDEFGHJKLMNPQRSTUVWXYZ',
                    check;
                // First one is digit
                if (/^[0-9]{1}$/.test(value.charAt(0))) {
                    check = alphabet.indexOf(value.charAt(0)) * 24 + alphabet.indexOf(value.charAt(1)) - 10;
                } else {
                    check = alphabet.indexOf(value.charAt(0)) * 34 + alphabet.indexOf(value.charAt(1)) - 100;
                }
                return ((parseInt(value.substr(2), 10) + 1 + Math.floor(check / 11)) % 11) === (check % 11);
            }
        },

        /**
         * Validate United Kingdom VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _gb: function(value) {
            if (/^GB[0-9]{9}$/.test(value)             /* Standard */
                || /^GB[0-9]{12}$/.test(value)         /* Branches */
                || /^GBGD[0-9]{3}$/.test(value)        /* Government department */
                || /^GBHA[0-9]{3}$/.test(value)        /* Health authority */
                || /^GB(GD|HA)8888[0-9]{5}$/.test(value))
            {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)
                && !/^[0-9]{12}$/.test(value)
                && !/^GD[0-9]{3}$/.test(value)
                && !/^HA[0-9]{3}$/.test(value)
                && !/^(GD|HA)8888[0-9]{5}$/.test(value))
            {
                return false;
            }

            var length = value.length;
            if (length === 5) {
                var firstTwo  = value.substr(0, 2),
                    lastThree = parseInt(value.substr(2), 10);
                return ('GD' === firstTwo && lastThree < 500) || ('HA' === firstTwo && lastThree >= 500);
            } else if (length === 11 && ('GD8888' === value.substr(0, 6) || 'HA8888' === value.substr(0, 6))) {
                if (('GD' === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) >= 500)
                    || ('HA' === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) < 500))
                {
                    return false;
                }
                return (parseInt(value.substr(6, 3), 10) % 97 === parseInt(value.substr(9, 2), 10));
            } else if (length === 9 || length === 12) {
                var sum    = 0,
                    weight = [8, 7, 6, 5, 4, 3, 2, 10, 1];
                for (var i = 0; i < 9; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = sum % 97;

                if (parseInt(value.substr(0, 3), 10) >= 100) {
                    return (sum === 0 || sum === 42 || sum === 55);
                } else {
                    return (sum === 0);
                }
            }

            return true;
        },

        /**
         * Validate Greek VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _gr: function(value) {
            if (/^(GR|EL)[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }

            if (value.length === 8) {
                value = '0' + value;
            }

            var sum    = 0,
                weight = [256, 128, 64, 32, 16, 8, 4, 2];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = (sum % 11) % 10;

            return (sum + '' === value.substr(8, 1));
        },

        // EL is traditionally prefix of Greek VAT numbers
        _el: function(value) {
            return this._gr(value);
        },

        /**
         * Validate Hungarian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _hu: function(value) {
            if (/^HU[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                weight = [9, 7, 3, 1, 9, 7, 3, 1];

            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            return (sum % 10 === 0);
        },

        /**
         * Validate Croatian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _hr: function(value) {
            if (/^HR[0-9]{11}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }

            return FormValidation.Helper.mod11And10(value);
        },

        /**
         * Validate Irish VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _ie: function(value) {
            if (/^IE[0-9]{1}[0-9A-Z\*\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{1}[0-9A-Z\*\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {
                return false;
            }

            var getCheckDigit = function(value) {
                while (value.length < 7) {
                    value = '0' + value;
                }
                var alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',
                    sum      = 0;
                for (var i = 0; i < 7; i++) {
                    sum += parseInt(value.charAt(i), 10) * (8 - i);
                }
                sum += 9 * alphabet.indexOf(value.substr(7));
                return alphabet[sum % 23];
            };

            // The first 7 characters are digits
            if (/^[0-9]+$/.test(value.substr(0, 7))) {
                // New system
                return value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + '');
            } else if ('ABCDEFGHIJKLMNOPQRSTUVWXYZ+*'.indexOf(value.charAt(1)) !== -1) {
                // Old system
                return value.charAt(7) === getCheckDigit(value.substr(2, 5) + value.substr(0, 1) + '');
            }

            return true;
        },

        /**
         * Validate Icelandic VAT (VSK) number
         *
         * @params {String} value VAT number
         * @returns {Boolean}
         */
        _is: function(value) {
            if (/^IS[0-9]{5,6}$/.test(value)) {
                value = value.substr(2);
            }
            return /^[0-9]{5,6}$/.test(value);
        },

        /**
         * Validate Italian VAT number, which consists of 11 digits.
         * - First 7 digits are a company identifier
         * - Next 3 are the province of residence
         * - The last one is a check digit
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _it: function(value) {
            if (/^IT[0-9]{11}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }

            if (parseInt(value.substr(0, 7), 10) === 0) {
                return false;
            }

            var lastThree = parseInt(value.substr(7, 3), 10);
            if ((lastThree < 1) || (lastThree > 201) && lastThree !== 999 && lastThree !== 888) {
                return false;
            }

            return FormValidation.Helper.luhn(value);
        },

        /**
         * Validate Lithuanian VAT number
         * It can be:
         * - 9 digits, for legal entities
         * - 12 digits, for temporarily registered taxpayers
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _lt: function(value) {
            if (/^LT([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {
                return false;
            }

            var length = value.length,
                sum    = 0,
                i;
            for (i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * (1 + i % 9);
            }
            var check = sum % 11;
            if (check === 10) {
                sum = 0;
                for (i = 0; i < length - 1; i++) {
                    sum += parseInt(value.charAt(i), 10) * (1 + (i + 2) % 9);
                }
            }
            check = check % 11 % 10;
            return (check + '' === value.charAt(length - 1));
        },

        /**
         * Validate Luxembourg VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _lu: function(value) {
            if (/^LU[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }

            return ((parseInt(value.substr(0, 6), 10) % 89) + '' === value.substr(6, 2));
        },

        /**
         * Validate Latvian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _lv: function(value) {
            if (/^LV[0-9]{11}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }

            var first  = parseInt(value.charAt(0), 10),
                sum    = 0,
                weight = [],
                i,
                length = value.length;
            if (first > 3) {
                // Legal entity
                sum    = 0;
                weight = [9, 1, 4, 8, 3, 10, 2, 5, 7, 6, 1];
                for (i = 0; i < length; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = sum % 11;
                return (sum === 3);
            } else {
                // Check birth date
                var day   = parseInt(value.substr(0, 2), 10),
                    month = parseInt(value.substr(2, 2), 10),
                    year  = parseInt(value.substr(4, 2), 10);
                year = year + 1800 + parseInt(value.charAt(6), 10) * 100;

                if (!FormValidation.Helper.date(year, month, day)) {
                    return false;
                }

                // Check personal code
                sum    = 0;
                weight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];
                for (i = 0; i < length - 1; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = (sum + 1) % 11 % 10;
                return (sum + '' === value.charAt(length - 1));
            }
        },

        /**
         * Validate Maltese VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _mt: function(value) {
            if (/^MT[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                weight = [3, 4, 6, 7, 8, 9, 10, 1];

            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            return (sum % 37 === 0);
        },

        /**
         * Validate Dutch VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _nl: function(value) {
            if (/^NL[0-9]{9}B[0-9]{2}$/.test(value)) {
               value = value.substr(2);
            }
            if (!/^[0-9]{9}B[0-9]{2}$/.test(value)) {
               return false;
            }

            var sum    = 0,
                weight = [9, 8, 7, 6, 5, 4, 3, 2];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            sum = sum % 11;
            if (sum > 9) {
                sum = 0;
            }
            return (sum + '' === value.substr(8, 1));
        },

        /**
         * Validate Norwegian VAT number
         *
         * @see http://www.brreg.no/english/coordination/number.html
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _no: function(value) {
            if (/^NO[0-9]{9}$/.test(value)) {
               value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
               return false;
            }

            var sum    = 0,
                weight = [3, 2, 7, 6, 5, 4, 3, 2];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            sum = 11 - sum % 11;
            if (sum === 11) {
                sum = 0;
            }
            return (sum + '' === value.substr(8, 1));
        },

        /**
         * Validate Polish VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _pl: function(value) {
            if (/^PL[0-9]{10}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{10}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                weight = [6, 5, 7, 2, 3, 4, 5, 6, 7, -1];

            for (var i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            return (sum % 11 === 0);
        },

        /**
         * Validate Portuguese VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _pt: function(value) {
            if (/^PT[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }

            var sum    = 0,
                weight = [9, 8, 7, 6, 5, 4, 3, 2];

            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum > 9) {
                sum = 0;
            }
            return (sum + '' === value.substr(8, 1));
        },

        /**
         * Validate Romanian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _ro: function(value) {
            if (/^RO[1-9][0-9]{1,9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[1-9][0-9]{1,9}$/.test(value)) {
                return false;
            }

            var length = value.length,
                weight = [7, 5, 3, 2, 1, 7, 5, 3, 2].slice(10 - length),
                sum    = 0;
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }

            sum = (10 * sum) % 11 % 10;
            return (sum + '' === value.substr(length - 1, 1));
        },

        /**
         * Validate Russian VAT number (Taxpayer Identification Number - INN)
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _ru: function(value) {
            if (/^RU([0-9]{10}|[0-9]{12})$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^([0-9]{10}|[0-9]{12})$/.test(value)) {
                return false;
            }

            var i = 0;
            if (value.length === 10) {
                var sum    = 0,
                    weight = [2, 4, 10, 3, 5, 9, 4, 6, 8, 0];
                for (i = 0; i < 10; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = sum % 11;
                if (sum > 9) {
                    sum = sum % 10;
                }

                return (sum + '' === value.substr(9, 1));
            } else if (value.length === 12) {
                var sum1    = 0,
                    weight1 = [7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0],
                    sum2    = 0,
                    weight2 = [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0];

                for (i = 0; i < 11; i++) {
                    sum1 += parseInt(value.charAt(i), 10) * weight1[i];
                    sum2 += parseInt(value.charAt(i), 10) * weight2[i];
                }
                sum1 = sum1 % 11;
                if (sum1 > 9) {
                    sum1 = sum1 % 10;
                }
                sum2 = sum2 % 11;
                if (sum2 > 9) {
                    sum2 = sum2 % 10;
                }

                return (sum1 + '' === value.substr(10, 1) && sum2 + '' === value.substr(11, 1));
            }

            return false;
        },

        /**
         * Validate Serbian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _rs: function(value) {
            if (/^RS[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }

            var sum  = 10,
                temp = 0;
            for (var i = 0; i < 8; i++) {
                temp = (parseInt(value.charAt(i), 10) + sum) % 10;
                if (temp === 0) {
                    temp = 10;
                }
                sum = (2 * temp) % 11;
            }

            return ((sum + parseInt(value.substr(8, 1), 10)) % 10 === 1);
        },

        /**
         * Validate Swedish VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _se: function(value) {
            if (/^SE[0-9]{10}01$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{10}01$/.test(value)) {
                return false;
            }

            value = value.substr(0, 10);
            return FormValidation.Helper.luhn(value);
        },

        /**
         * Validate Slovenian VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _si: function(value) {
            // The Slovenian VAT numbers don't start with zero
            var res = value.match(/^(SI)?([1-9][0-9]{7})$/);
            if (!res) {
                return false;
            }
            if (res[1]) {
                value = value.substr(2);
            }

            var sum    = 0,
                weight = [8, 7, 6, 5, 4, 3, 2];

            for (var i = 0; i < 7; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum === 10) {
                sum = 0;
            }
            return (sum + '' === value.substr(7, 1));
        },

        /**
         * Validate Slovak VAT number
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _sk: function(value) {
            if (/^SK[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {
                return false;
            }

            return (parseInt(value, 10) % 11 === 0);
        },

        /**
         * Validate Venezuelan VAT number (RIF)
         *
         * @param {String} value VAT number
         * @returns {Boolean}
         */
        _ve: function(value) {
            if (/^VE[VEJPG][0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[VEJPG][0-9]{9}$/.test(value)) {
                return false;
            }

            var types  = {
                    'V': 4,
                    'E': 8,
                    'J': 12,
                    'P': 16,
                    'G': 20
                },
                sum    = types[value.charAt(0)],
                weight = [3, 2, 7, 6, 5, 4, 3, 2];

            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i + 1), 10) * weight[i];
            }

            sum = 11 - sum % 11;
            if (sum === 11 || sum === 10) {
                sum = 0;
            }
            return (sum + '' === value.substr(9, 1));
        },

        /**
         * Validate South African VAT number
         *
         * @params {String} value VAT number
         * @returns {Boolean}
         */
         _za: function(value) {
            if (/^ZA4[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }

            return /^4[0-9]{9}$/.test(value);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            vin: {
                'default': 'Please enter a valid VIN number'
            }
        }
    });

    FormValidation.Validator.vin = {
        /**
         * Validate an US VIN (Vehicle Identification Number)
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * @returns {Boolean}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '') {
                return true;
            }

            // Don't accept I, O, Q characters
            if (!/^[a-hj-npr-z0-9]{8}[0-9xX][a-hj-npr-z0-9]{8}$/i.test(value)) {
                return false;
            }

            value = value.toUpperCase();
            var chars   = {
                    A: 1,   B: 2,   C: 3,   D: 4,   E: 5,   F: 6,   G: 7,   H: 8,
                    J: 1,   K: 2,   L: 3,   M: 4,   N: 5,           P: 7,           R: 9,
                            S: 2,   T: 3,   U: 4,   V: 5,   W: 6,   X: 7,   Y: 8,   Z: 9,
                    '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '0': 0
                },
                weights = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],
                sum     = 0,
                length  = value.length;
            for (var i = 0; i < length; i++) {
                sum += chars[value.charAt(i) + ''] * weights[i];
            }

            var reminder = sum % 11;
            if (reminder === 10) {
                reminder = 'X';
            }

            return (reminder + '') === value.charAt(8);
        }
    };
}(jQuery));
;(function($) {
    FormValidation.I18n = $.extend(true, FormValidation.I18n || {}, {
        'en_US': {
            zipCode: {
                'default': 'Please enter a valid postal code',
                country: 'Please enter a valid postal code in %s',
                countries: {
                    AT: 'Austria',
                    BG: 'Bulgaria',
                    BR: 'Brazil',
                    CA: 'Canada',
                    CH: 'Switzerland',
                    CZ: 'Czech Republic',
                    DE: 'Germany',
                    DK: 'Denmark',
                    ES: 'Spain',
                    FR: 'France',
                    GB: 'United Kingdom',
                    IE: 'Ireland',
                    IN: 'India',
                    IT: 'Italy',
                    MA: 'Morocco',
                    NL: 'Netherlands',
                    PL: 'Poland',
                    PT: 'Portugal',
                    RO: 'Romania',
                    RU: 'Russia',
                    SE: 'Sweden',
                    SG: 'Singapore',
                    SK: 'Slovakia',
                    US: 'USA'
                }
            }
        }
    });

    FormValidation.Validator.zipCode = {
        html5Attributes: {
            message: 'message',
            country: 'country'
        },

        COUNTRY_CODES: ['AT', 'BG', 'BR', 'CA', 'CH', 'CZ', 'DE', 'DK', 'ES', 'FR', 'GB', 'IE', 'IN', 'IT', 'MA', 'NL', 'PL', 'PT', 'RO', 'RU', 'SE', 'SG', 'SK', 'US'],

        /**
         * Return true if and only if the input value is a valid country zip code
         *
         * @param {FormValidation.Base} validator The validator plugin instance
         * @param {jQuery} $field Field element
         * @param {Object} options Consist of key:
         * - message: The invalid message
         * - country: The country
         *
         * The country can be defined by:
         * - An ISO 3166 country code
         * - Name of field which its value defines the country code
         * - Name of callback function that returns the country code
         * - A callback function that returns the country code
         *
         *  callback: function(value, validator, $field) {
         *      // value is the value of field
         *      // validator is the FormValidation.Base instance
         *      // $field is jQuery element representing the field
         *  }
         *
         * @returns {Boolean|Object}
         */
        validate: function(validator, $field, options, validatorName) {
            var value = validator.getFieldValue($field, validatorName);
            if (value === '' || !options.country) {
                return true;
            }

            var locale  = validator.getLocale(),
                country = options.country;
            if (typeof country !== 'string' || $.inArray(country, this.COUNTRY_CODES) === -1) {
                // Try to determine the country
                country = validator.getDynamicOption($field, country);
            }

            if (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {
                return true;
            }

            var isValid = false;
            country = country.toUpperCase();
            switch (country) {
                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Austria
                case 'AT':
                    isValid = /^([1-9]{1})(\d{3})$/.test(value);
                    break;

                case 'BG':
                    isValid = /^([1-9]{1}[0-9]{3})$/.test($.trim(value));
                    break;

                case 'BR':
                    isValid = /^(\d{2})([\.]?)(\d{3})([\-]?)(\d{3})$/.test(value);
                    break;

                case 'CA':
                    isValid = /^(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}\s?[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}[0-9]{1}$/i.test(value);
                    break;

                case 'CH':
                    isValid = /^([1-9]{1})(\d{3})$/.test(value);
                    break;

                case 'CZ':
                    // Test: http://regexr.com/39hhr
                    isValid = /^(\d{3})([ ]?)(\d{2})$/.test(value);
                    break;

                // http://stackoverflow.com/questions/7926687/regular-expression-german-zip-codes
                case 'DE':
                    isValid = /^(?!01000|99999)(0[1-9]\d{3}|[1-9]\d{4})$/.test(value);
                    break;

                case 'DK':
                    isValid = /^(DK(-|\s)?)?\d{4}$/i.test(value);
                    break;

                // Zip codes in Spain go from 01XXX to 52XXX.
                // Test: http://refiddle.com/1ufo
                case 'ES':
                    isValid = /^(?:0[1-9]|[1-4][0-9]|5[0-2])\d{3}$/.test(value);
                    break;

                // http://en.wikipedia.org/wiki/Postal_codes_in_France
                case 'FR':
                    isValid = /^[0-9]{5}$/i.test(value);
                    break;

                case 'GB':
                    isValid = this._gb(value);
                    break;

                // Indian PIN (Postal Index Number) validation
                // http://en.wikipedia.org/wiki/Postal_Index_Number
                // Test: http://regex101.com/r/kV0vH3/1
                case 'IN':
                    isValid = /^\d{3}\s?\d{3}$/.test(value);
                    break;

                // http://www.eircode.ie/docs/default-source/Common/prepare-your-business-for-eircode---published-v2.pdf?sfvrsn=2
                // Test: http://refiddle.com/1kpl
                case 'IE':
                    isValid = /^(D6W|[ACDEFHKNPRTVWXY]\d{2})\s[0-9ACDEFHKNPRTVWXY]{4}$/.test(value);
                    break;

                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Italy
                case 'IT':
                    isValid = /^(I-|IT-)?\d{5}$/i.test(value);
                    break;

                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Morocco
                case 'MA':
                    isValid = /^[1-9][0-9]{4}$/i.test(value);
                    break;

                // http://en.wikipedia.org/wiki/Postal_codes_in_the_Netherlands
                case 'NL':
                    isValid = /^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i.test(value);
                    break;

                // http://en.wikipedia.org/wiki/List_of_postal_codes_in_Poland
                case 'PL':
                    isValid = /^[0-9]{2}\-[0-9]{3}$/.test(value);
                    break;

                // Test: http://refiddle.com/1l2t
                case 'PT':
                    isValid = /^[1-9]\d{3}-\d{3}$/.test(value);
                    break;

                case 'RO':
                    isValid = /^(0[1-8]{1}|[1-9]{1}[0-5]{1})?[0-9]{4}$/i.test(value);
                    break;

                case 'RU':
                    isValid = /^[0-9]{6}$/i.test(value);
                    break;

                case 'SE':
                    isValid = /^(S-)?\d{3}\s?\d{2}$/i.test(value);
                    break;

                case 'SG':
                    isValid = /^([0][1-9]|[1-6][0-9]|[7]([0-3]|[5-9])|[8][0-2])(\d{4})$/i.test(value);
                    break;

                case 'SK':
                    // Test: http://regexr.com/39hhr
                    isValid = /^(\d{3})([ ]?)(\d{2})$/.test(value);
                    break;

                case 'US':
                /* falls through */
                default:
                    isValid = /^\d{4,5}([\-]?\d{4})?$/.test(value);
                    break;
            }

            return {
                valid: isValid,
                message: FormValidation.Helper.format(options.message || FormValidation.I18n[locale].zipCode.country, FormValidation.I18n[locale].zipCode.countries[country])
            };
        },

        /**
         * Validate United Kingdom postcode
         *
         * @see http://en.wikipedia.org/wiki/Postcodes_in_the_United_Kingdom
         * @param {String} value The postcode
         * @returns {Boolean}
         */
        _gb: function(value) {
            var firstChar  = '[ABCDEFGHIJKLMNOPRSTUWYZ]',     // Does not accept QVX
                secondChar = '[ABCDEFGHKLMNOPQRSTUVWXY]',     // Does not accept IJZ
                thirdChar  = '[ABCDEFGHJKPMNRSTUVWXY]',
                fourthChar = '[ABEHMNPRVWXY]',
                fifthChar  = '[ABDEFGHJLNPQRSTUWXYZ]',
                regexps    = [
                    // AN NAA, ANN NAA, AAN NAA, AANN NAA format
                    new RegExp('^(' + firstChar + '{1}' + secondChar + '?[0-9]{1,2})(\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),
                    // ANA NAA
                    new RegExp('^(' + firstChar + '{1}[0-9]{1}' + thirdChar + '{1})(\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),
                    // AANA NAA
                    new RegExp('^(' + firstChar + '{1}' + secondChar + '{1}?[0-9]{1}' + fourthChar + '{1})(\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),

                    new RegExp('^(BF1)(\\s*)([0-6]{1}[ABDEFGHJLNPQRST]{1}[ABDEFGHJLNPQRSTUWZYZ]{1})$', 'i'),        // BFPO postcodes
                    /^(GIR)(\s*)(0AA)$/i,                       // Special postcode GIR 0AA
                    /^(BFPO)(\s*)([0-9]{1,4})$/i,               // Standard BFPO numbers
                    /^(BFPO)(\s*)(c\/o\s*[0-9]{1,3})$/i,        // c/o BFPO numbers
                    /^([A-Z]{4})(\s*)(1ZZ)$/i,                  // Overseas Territories
                    /^(AI-2640)$/i                              // Anguilla
                ];
            for (var i = 0; i < regexps.length; i++) {
                if (regexps[i].test(value)) {
                    return true;
                }
            }

            return false;
        }
    };
}(jQuery));
/*!
 * FormValidation (http://formvalidation.io)
 * The best jQuery plugin to validate form fields. Support Bootstrap, Foundation, Pure, SemanticUI, UIKit and custom frameworks
 *
 * @version     v0.7.1, built on 2016-02-01 12:00:57 AM
 * @author      https://twitter.com/formvalidation
 * @copyright   (c) 2013 - 2016 Nguyen Huu Phuoc
 * @license     http://formvalidation.io/license/
 */
/**
 * This class supports validating Bootstrap form (http://getbootstrap.com/)
 */
(function($) {
    FormValidation.Framework.Bootstrap = function(element, options, namespace) {
        options = $.extend(true, {
            button: {
                selector: '[type="submit"]:not([formnovalidate])',
                // The class of disabled button
                // http://getbootstrap.com/css/#buttons-disabled
                disabled: 'disabled'
            },
            err: {
                // http://getbootstrap.com/css/#forms-help-text
                clazz: 'help-block',
                parent: '^(.*)col-(xs|sm|md|lg)-(offset-){0,1}[0-9]+(.*)$'
            },
            // This feature requires Bootstrap v3.1.0 or later (http://getbootstrap.com/css/#forms-control-validation).
            // Since Bootstrap doesn't provide any methods to know its version, this option cannot be on/off automatically.
            // In other word, to use this feature you have to upgrade your Bootstrap to v3.1.0 or later.
            //
            // Examples:
            // - Use Glyphicons icons:
            //  icon: {
            //      valid: 'glyphicon glyphicon-ok',
            //      invalid: 'glyphicon glyphicon-remove',
            //      validating: 'glyphicon glyphicon-refresh',
            //      feedback: 'form-control-feedback'
            //  }
            // - Use FontAwesome icons:
            //  icon: {
            //      valid: 'fa fa-check',
            //      invalid: 'fa fa-times',
            //      validating: 'fa fa-refresh',
            //      feedback: 'form-control-feedback'
            //  }
            icon: {
                valid: null,
                invalid: null,
                validating: null,
                feedback: 'form-control-feedback'
            },
            row: {
                // By default, each field is placed inside the <div class="form-group"></div>
                // http://getbootstrap.com/css/#forms
                selector: '.form-group',
                valid: 'has-success',
                invalid: 'has-error',
                feedback: 'has-feedback'
            }
        }, options);

        FormValidation.Base.apply(this, [element, options, namespace]);
    };

    FormValidation.Framework.Bootstrap.prototype = $.extend({}, FormValidation.Base.prototype, {
        /**
         * Specific framework might need to adjust the icon position
         *
         * @param {jQuery} $field The field element
         * @param {jQuery} $icon The icon element
         */
        _fixIcon: function($field, $icon) {
            var ns      = this._namespace,
                type    = $field.attr('type'),
                field   = $field.attr('data-' + ns + '-field'),
                row     = this.options.fields[field].row || this.options.row.selector,
                $parent = $field.closest(row);

            // Place it after the container of checkbox/radio
            // so when clicking the icon, it doesn't effect to the checkbox/radio element
            if ('checkbox' === type || 'radio' === type) {
                var $fieldParent = $field.parent();
                if ($fieldParent.hasClass(type)) {
                    $icon.insertAfter($fieldParent);
                } else if ($fieldParent.parent().hasClass(type)) {
                    $icon.insertAfter($fieldParent.parent());
                }
            }

            // The feedback icon does not render correctly if there is no label
            // https://github.com/twbs/bootstrap/issues/12873
            if ($parent.find('label').length === 0) {
                $icon.addClass('fv-icon-no-label');
            }
            // Fix feedback icons in input-group
            if ($parent.find('.input-group').length !== 0) {
                $icon.addClass('fv-bootstrap-icon-input-group')
                     .insertAfter($parent.find('.input-group').eq(0));
            }
        },

        /**
         * Create a tooltip or popover
         * It will be shown when focusing on the field
         *
         * @param {jQuery} $field The field element
         * @param {String} message The message
         * @param {String} type Can be 'tooltip' or 'popover'
         */
        _createTooltip: function($field, message, type) {
            var ns    = this._namespace,
                $icon = $field.data(ns + '.icon');
            if ($icon) {
                switch (type) {
                    case 'popover':
                        $icon
                            .css({
                                'cursor': 'pointer',
                                'pointer-events': 'auto'
                            })
                            .popover('destroy')
                            .popover({
                                container: 'body',
                                content: message,
                                html: true,
                                placement: 'auto top',
                                trigger: 'hover click'
                            });
                        break;

                    case 'tooltip':
                    /* falls through */
                    default:
                        $icon
                            .css({
                                'cursor': 'pointer',
                                'pointer-events': 'auto'
                            })
                            .tooltip('destroy')
                            .tooltip({
                                container: 'body',
                                html: true,
                                placement: 'auto top',
                                title: message
                            });
                        break;
                }
            }
        },

        /**
         * Destroy the tooltip or popover
         *
         * @param {jQuery} $field The field element
         * @param {String} type Can be 'tooltip' or 'popover'
         */
        _destroyTooltip: function($field, type) {
            var ns    = this._namespace,
                $icon = $field.data(ns + '.icon');
            if ($icon) {
                switch (type) {
                    case 'popover':
                        $icon
                            .css({
                                'cursor': '',
                                'pointer-events': 'none'
                            })
                            .popover('destroy');
                        break;

                    case 'tooltip':
                    /* falls through */
                    default:
                        $icon
                            .css({
                                'cursor': '',
                                'pointer-events': 'none'
                            })
                            .tooltip('destroy');
                        break;
                }
            }
        },

        /**
         * Hide a tooltip or popover
         *
         * @param {jQuery} $field The field element
         * @param {String} type Can be 'tooltip' or 'popover'
         */
        _hideTooltip: function($field, type) {
            var ns    = this._namespace,
                $icon = $field.data(ns + '.icon');
            if ($icon) {
                switch (type) {
                    case 'popover':
                        $icon.popover('hide');
                        break;

                    case 'tooltip':
                    /* falls through */
                    default:
                        $icon.tooltip('hide');
                        break;
                }
            }
        },

        /**
         * Show a tooltip or popover
         *
         * @param {jQuery} $field The field element
         * @param {String} type Can be 'tooltip' or 'popover'
         */
        _showTooltip: function($field, type) {
            var ns    = this._namespace,
                $icon = $field.data(ns + '.icon');
            if ($icon) {
                switch (type) {
                    case 'popover':
                        $icon.popover('show');
                        break;

                    case 'tooltip':
                    /* falls through */
                    default:
                        $icon.tooltip('show');
                        break;
                }
            }
        }
    });

    /**
     * Plugin definition
     * Support backward
     * @deprecated It will be removed soon. Instead of using $(form).bootstrapValidator(), use
     *  $(form).formValidation({
     *      framework: 'bootstrap'  // It's equivalent to use data-fv-framework="bootstrap" for <form>
     *  });
     */
    $.fn.bootstrapValidator = function(option) {
        var params = arguments;
        return this.each(function() {
            var $this   = $(this),
                data    = $this.data('formValidation') || $this.data('bootstrapValidator'),
                options = 'object' === typeof option && option;
            if (!data) {
                data = new FormValidation.Framework.Bootstrap(this, $.extend({}, {
                    events: {
                        // Support backward
                        formInit: 'init.form.bv',
                        formPreValidate: 'prevalidate.form.bv',
                        formError: 'error.form.bv',
                        formSuccess: 'success.form.bv',
                        fieldAdded: 'added.field.bv',
                        fieldRemoved: 'removed.field.bv',
                        fieldInit: 'init.field.bv',
                        fieldError: 'error.field.bv',
                        fieldSuccess: 'success.field.bv',
                        fieldStatus: 'status.field.bv',
                        localeChanged: 'changed.locale.bv',
                        validatorError: 'error.validator.bv',
                        validatorSuccess: 'success.validator.bv'
                    }
                }, options), 'bv');

                $this.addClass('fv-form-bootstrap')
                     .data('formValidation', data)
                     .data('bootstrapValidator', data);
            }

            // Allow to call plugin method
            if ('string' === typeof option) {
                data[option].apply(data, Array.prototype.slice.call(params, 1));
            }
        });
    };

    $.fn.bootstrapValidator.Constructor = FormValidation.Framework.Bootstrap;
}(jQuery));

// Datetime Moment
/**
 * This plug-in for DataTables represents the ultimate option in extensibility
 * for sorting date / time strings correctly. It uses
 * [Moment.js](http://momentjs.com) to create automatic type detection and
 * sorting plug-ins for DataTables based on a given format. This way, DataTables
 * will automatically detect your temporal information and sort it correctly.
 *
 * For usage instructions, please see the DataTables blog
 * post that [introduces it](//datatables.net/blog/2014-12-18).
 *
 * @name Ultimate Date / Time sorting
 * @summary Sort date and time in any format using Moment.js
 * @author [Allan Jardine](//datatables.net)
 * @depends DataTables 1.10+, Moment.js 1.7+
 *
 * @example
 *    $.fn.dataTable.moment( 'HH:mm MMM D, YY' );
 *    $.fn.dataTable.moment( 'dddd, MMMM Do, YYYY' );
 *
 *    $('#example').DataTable();
 */

(function (factory) {
	if (typeof define === "function" && define.amd) {
		define(["jquery", "moment", "datatables"], factory);
	} else {
		factory(jQuery, moment);
	}
}(function ($, moment) {

$.fn.dataTable.moment = function ( format, locale ) {
	var types = $.fn.dataTable.ext.type;

	// Add type detection
	types.detect.unshift( function ( d ) {
		// Strip HTML tags if possible
		if ( d && d.replace ) {
			d = d.replace(/<.*?>/g, '');
		}

		// Null and empty values are acceptable
		if ( d === '' || d === null ) {
			return 'moment-'+format;
		}

		return moment( d, format, locale, true ).isValid() ?
			'moment-'+format :
			null;
	} );

	// Add sorting method - use an integer for the sorting
	types.order[ 'moment-'+format+'-pre' ] = function ( d ) {
		if ( d && d.replace ) {
			d = d.replace(/<.*?>/g, '');
		}
		return d === '' || d === null ?
			-Infinity :
			parseInt( moment( d, format, locale, true ).format( 'x' ), 10 );
	};
};

}));

// Datetime Picker
/*! version : 4.17.47
 =========================================================
 bootstrap-datetimejs
 https://github.com/Eonasdan/bootstrap-datetimepicker
 Copyright (c) 2015 Jonathan Peterson
 =========================================================
 */
/*
 The MIT License (MIT)

 Copyright (c) 2015 Jonathan Peterson

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
/*global define:false */
/*global exports:false */
/*global require:false */
/*global jQuery:false */
/*global moment:false */
(function (factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        // AMD is used - Register as an anonymous module.
        define(['jquery', 'moment'], factory);
    } else if (typeof exports === 'object') {
        module.exports = factory(require('jquery'), require('moment'));
    } else {
        // Neither AMD nor CommonJS used. Use global variables.
        if (typeof jQuery === 'undefined') {
            throw 'bootstrap-datetimepicker requires jQuery to be loaded first';
        }
        if (typeof moment === 'undefined') {
            throw 'bootstrap-datetimepicker requires Moment.js to be loaded first';
        }
        factory(jQuery, moment);
    }
}(function ($, moment) {
    'use strict';
    if (!moment) {
        throw new Error('bootstrap-datetimepicker requires Moment.js to be loaded first');
    }

    var dateTimePicker = function (element, options) {
        var picker = {},
            date,
            viewDate,
            unset = true,
            input,
            component = false,
            widget = false,
            use24Hours,
            minViewModeNumber = 0,
            actualFormat,
            parseFormats,
            currentViewMode,
            datePickerModes = [
                {
                    clsName: 'days',
                    navFnc: 'M',
                    navStep: 1
                },
                {
                    clsName: 'months',
                    navFnc: 'y',
                    navStep: 1
                },
                {
                    clsName: 'years',
                    navFnc: 'y',
                    navStep: 10
                },
                {
                    clsName: 'decades',
                    navFnc: 'y',
                    navStep: 100
                }
            ],
            viewModes = ['days', 'months', 'years', 'decades'],
            verticalModes = ['top', 'bottom', 'auto'],
            horizontalModes = ['left', 'right', 'auto'],
            toolbarPlacements = ['default', 'top', 'bottom'],
            keyMap = {
                'up': 38,
                38: 'up',
                'down': 40,
                40: 'down',
                'left': 37,
                37: 'left',
                'right': 39,
                39: 'right',
                'tab': 9,
                9: 'tab',
                'escape': 27,
                27: 'escape',
                'enter': 13,
                13: 'enter',
                'pageUp': 33,
                33: 'pageUp',
                'pageDown': 34,
                34: 'pageDown',
                'shift': 16,
                16: 'shift',
                'control': 17,
                17: 'control',
                'space': 32,
                32: 'space',
                't': 84,
                84: 't',
                'delete': 46,
                46: 'delete'
            },
            keyState = {},

            /********************************************************************************
             *
             * Private functions
             *
             ********************************************************************************/

            hasTimeZone = function () {
                return moment.tz !== undefined && options.timeZone !== undefined && options.timeZone !== null && options.timeZone !== '';
            },

            getMoment = function (d) {
                var returnMoment;

                if (d === undefined || d === null) {
                    returnMoment = moment(); //TODO should this use format? and locale?
                } else if (moment.isDate(d) || moment.isMoment(d)) {
                    // If the date that is passed in is already a Date() or moment() object,
                    // pass it directly to moment.
                    returnMoment = moment(d);
                } else if (hasTimeZone()) { // There is a string to parse and a default time zone
                    // parse with the tz function which takes a default time zone if it is not in the format string
                    returnMoment = moment.tz(d, parseFormats, options.useStrict, options.timeZone);
                } else {
                    returnMoment = moment(d, parseFormats, options.useStrict);
                }

                if (hasTimeZone()) {
                    returnMoment.tz(options.timeZone);
                }

                return returnMoment;
            },

            isEnabled = function (granularity) {
                if (typeof granularity !== 'string' || granularity.length > 1) {
                    throw new TypeError('isEnabled expects a single character string parameter');
                }
                switch (granularity) {
                    case 'y':
                        return actualFormat.indexOf('Y') !== -1;
                    case 'M':
                        return actualFormat.indexOf('M') !== -1;
                    case 'd':
                        return actualFormat.toLowerCase().indexOf('d') !== -1;
                    case 'h':
                    case 'H':
                        return actualFormat.toLowerCase().indexOf('h') !== -1;
                    case 'm':
                        return actualFormat.indexOf('m') !== -1;
                    case 's':
                        return actualFormat.indexOf('s') !== -1;
                    default:
                        return false;
                }
            },

            hasTime = function () {
                return (isEnabled('h') || isEnabled('m') || isEnabled('s'));
            },

            hasDate = function () {
                return (isEnabled('y') || isEnabled('M') || isEnabled('d'));
            },

            getDatePickerTemplate = function () {
                var headTemplate = $('<thead>')
                        .append($('<tr>')
                            .append($('<th>').addClass('prev').attr('data-action', 'previous')
                                .append($('<span>').addClass(options.icons.previous))
                                )
                            .append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', (options.calendarWeeks ? '6' : '5')))
                            .append($('<th>').addClass('next').attr('data-action', 'next')
                                .append($('<span>').addClass(options.icons.next))
                                )
                            ),
                    contTemplate = $('<tbody>')
                        .append($('<tr>')
                            .append($('<td>').attr('colspan', (options.calendarWeeks ? '8' : '7')))
                            );

                return [
                    $('<div>').addClass('datepicker-days')
                        .append($('<table>').addClass('table-condensed')
                            .append(headTemplate)
                            .append($('<tbody>'))
                            ),
                    $('<div>').addClass('datepicker-months')
                        .append($('<table>').addClass('table-condensed')
                            .append(headTemplate.clone())
                            .append(contTemplate.clone())
                            ),
                    $('<div>').addClass('datepicker-years')
                        .append($('<table>').addClass('table-condensed')
                            .append(headTemplate.clone())
                            .append(contTemplate.clone())
                            ),
                    $('<div>').addClass('datepicker-decades')
                        .append($('<table>').addClass('table-condensed')
                            .append(headTemplate.clone())
                            .append(contTemplate.clone())
                            )
                ];
            },

            getTimePickerMainTemplate = function () {
                var topRow = $('<tr>'),
                    middleRow = $('<tr>'),
                    bottomRow = $('<tr>');

                if (isEnabled('h')) {
                    topRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementHour }).addClass('btn').attr('data-action', 'incrementHours').append($('<span>').addClass(options.icons.up))));
                    middleRow.append($('<td>')
                        .append($('<span>').addClass('timepicker-hour').attr({ 'data-time-component': 'hours', 'title': options.tooltips.pickHour }).attr('data-action', 'showHours')));
                    bottomRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementHour }).addClass('btn').attr('data-action', 'decrementHours').append($('<span>').addClass(options.icons.down))));
                }
                if (isEnabled('m')) {
                    if (isEnabled('h')) {
                        topRow.append($('<td>').addClass('separator'));
                        middleRow.append($('<td>').addClass('separator').html(':'));
                        bottomRow.append($('<td>').addClass('separator'));
                    }
                    topRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementMinute }).addClass('btn').attr('data-action', 'incrementMinutes')
                            .append($('<span>').addClass(options.icons.up))));
                    middleRow.append($('<td>')
                        .append($('<span>').addClass('timepicker-minute').attr({ 'data-time-component': 'minutes', 'title': options.tooltips.pickMinute }).attr('data-action', 'showMinutes')));
                    bottomRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementMinute }).addClass('btn').attr('data-action', 'decrementMinutes')
                            .append($('<span>').addClass(options.icons.down))));
                }
                if (isEnabled('s')) {
                    if (isEnabled('m')) {
                        topRow.append($('<td>').addClass('separator'));
                        middleRow.append($('<td>').addClass('separator').html(':'));
                        bottomRow.append($('<td>').addClass('separator'));
                    }
                    topRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementSecond }).addClass('btn').attr('data-action', 'incrementSeconds')
                            .append($('<span>').addClass(options.icons.up))));
                    middleRow.append($('<td>')
                        .append($('<span>').addClass('timepicker-second').attr({ 'data-time-component': 'seconds', 'title': options.tooltips.pickSecond }).attr('data-action', 'showSeconds')));
                    bottomRow.append($('<td>')
                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementSecond }).addClass('btn').attr('data-action', 'decrementSeconds')
                            .append($('<span>').addClass(options.icons.down))));
                }

                if (!use24Hours) {
                    topRow.append($('<td>').addClass('separator'));
                    middleRow.append($('<td>')
                        .append($('<button>').addClass('btn btn-primary').attr({ 'data-action': 'togglePeriod', tabindex: '-1', 'title': options.tooltips.togglePeriod })));
                    bottomRow.append($('<td>').addClass('separator'));
                }

                return $('<div>').addClass('timepicker-picker')
                    .append($('<table>').addClass('table-condensed')
                        .append([topRow, middleRow, bottomRow]));
            },

            getTimePickerTemplate = function () {
                var hoursView = $('<div>').addClass('timepicker-hours')
                        .append($('<table>').addClass('table-condensed')),
                    minutesView = $('<div>').addClass('timepicker-minutes')
                        .append($('<table>').addClass('table-condensed')),
                    secondsView = $('<div>').addClass('timepicker-seconds')
                        .append($('<table>').addClass('table-condensed')),
                    ret = [getTimePickerMainTemplate()];

                if (isEnabled('h')) {
                    ret.push(hoursView);
                }
                if (isEnabled('m')) {
                    ret.push(minutesView);
                }
                if (isEnabled('s')) {
                    ret.push(secondsView);
                }

                return ret;
            },

            getToolbar = function () {
                var row = [];
                if (options.showTodayButton) {
                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'today', 'title': options.tooltips.today }).append($('<span>').addClass(options.icons.today))));
                }
                if (!options.sideBySide && hasDate() && hasTime()) {
                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'togglePicker', 'title': options.tooltips.selectTime }).append($('<span>').addClass(options.icons.time))));
                }
                if (options.showClear) {
                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'clear', 'title': options.tooltips.clear }).append($('<span>').addClass(options.icons.clear))));
                }
                if (options.showClose) {
                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'close', 'title': options.tooltips.close }).append($('<span>').addClass(options.icons.close))));
                }
                return $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));
            },

            getTemplate = function () {
                var template = $('<div>').addClass('bootstrap-datetimepicker-widget dropdown-menu'),
                    dateView = $('<div>').addClass('datepicker').append(getDatePickerTemplate()),
                    timeView = $('<div>').addClass('timepicker').append(getTimePickerTemplate()),
                    content = $('<ul>').addClass('list-unstyled'),
                    toolbar = $('<li>').addClass('picker-switch' + (options.collapse ? ' accordion-toggle' : '')).append(getToolbar());

                if (options.inline) {
                    template.removeClass('dropdown-menu');
                }

                if (use24Hours) {
                    template.addClass('usetwentyfour');
                }

                if (isEnabled('s') && !use24Hours) {
                    template.addClass('wider');
                }

                if (options.sideBySide && hasDate() && hasTime()) {
                    template.addClass('timepicker-sbs');
                    if (options.toolbarPlacement === 'top') {
                        template.append(toolbar);
                    }
                    template.append(
                        $('<div>').addClass('row')
                            .append(dateView.addClass('col-md-6'))
                            .append(timeView.addClass('col-md-6'))
                    );
                    if (options.toolbarPlacement === 'bottom') {
                        template.append(toolbar);
                    }
                    return template;
                }

                if (options.toolbarPlacement === 'top') {
                    content.append(toolbar);
                }
                if (hasDate()) {
                    content.append($('<li>').addClass((options.collapse && hasTime() ? 'collapse in' : '')).append(dateView));
                }
                if (options.toolbarPlacement === 'default') {
                    content.append(toolbar);
                }
                if (hasTime()) {
                    content.append($('<li>').addClass((options.collapse && hasDate() ? 'collapse' : '')).append(timeView));
                }
                if (options.toolbarPlacement === 'bottom') {
                    content.append(toolbar);
                }
                return template.append(content);
            },

            dataToOptions = function () {
                var eData,
                    dataOptions = {};

                if (element.is('input') || options.inline) {
                    eData = element.data();
                } else {
                    eData = element.find('input').data();
                }

                if (eData.dateOptions && eData.dateOptions instanceof Object) {
                    dataOptions = $.extend(true, dataOptions, eData.dateOptions);
                }

                $.each(options, function (key) {
                    var attributeName = 'date' + key.charAt(0).toUpperCase() + key.slice(1);
                    if (eData[attributeName] !== undefined) {
                        dataOptions[key] = eData[attributeName];
                    }
                });
                return dataOptions;
            },

            place = function () {
                var position = (component || element).position(),
                    offset = (component || element).offset(),
                    vertical = options.widgetPositioning.vertical,
                    horizontal = options.widgetPositioning.horizontal,
                    parent;

                if (options.widgetParent) {
                    parent = options.widgetParent.append(widget);
                } else if (element.is('input')) {
                    parent = element.after(widget).parent();
                } else if (options.inline) {
                    parent = element.append(widget);
                    return;
                } else {
                    parent = element;
                    element.children().first().after(widget);
                }

                // Top and bottom logic
                if (vertical === 'auto') {
                    if (offset.top + widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() &&
                        widget.height() + element.outerHeight() < offset.top) {
                        vertical = 'top';
                    } else {
                        vertical = 'bottom';
                    }
                }

                // Left and right logic
                if (horizontal === 'auto') {
                    if (parent.width() < offset.left + widget.outerWidth() / 2 &&
                        offset.left + widget.outerWidth() > $(window).width()) {
                        horizontal = 'right';
                    } else {
                        horizontal = 'left';
                    }
                }

                if (vertical === 'top') {
                    widget.addClass('top').removeClass('bottom');
                } else {
                    widget.addClass('bottom').removeClass('top');
                }

                if (horizontal === 'right') {
                    widget.addClass('pull-right');
                } else {
                    widget.removeClass('pull-right');
                }

                // find the first parent element that has a non-static css positioning
                if (parent.css('position') === 'static') {
                    parent = parent.parents().filter(function () {
                        return $(this).css('position') !== 'static';
                    }).first();
                }

                if (parent.length === 0) {
                    throw new Error('datetimepicker component should be placed within a non-static positioned container');
                }

                widget.css({
                    top: vertical === 'top' ? 'auto' : position.top + element.outerHeight(),
                    bottom: vertical === 'top' ? parent.outerHeight() - (parent === element ? 0 : position.top) : 'auto',
                    left: horizontal === 'left' ? (parent === element ? 0 : position.left) : 'auto',
                    right: horizontal === 'left' ? 'auto' : parent.outerWidth() - element.outerWidth() - (parent === element ? 0 : position.left)
                });
            },

            notifyEvent = function (e) {
                if (e.type === 'dp.change' && ((e.date && e.date.isSame(e.oldDate)) || (!e.date && !e.oldDate))) {
                    return;
                }
                element.trigger(e);
            },

            viewUpdate = function (e) {
                if (e === 'y') {
                    e = 'YYYY';
                }
                notifyEvent({
                    type: 'dp.update',
                    change: e,
                    viewDate: viewDate.clone()
                });
            },

            showMode = function (dir) {
                if (!widget) {
                    return;
                }
                if (dir) {
                    currentViewMode = Math.max(minViewModeNumber, Math.min(3, currentViewMode + dir));
                }
                widget.find('.datepicker > div').hide().filter('.datepicker-' + datePickerModes[currentViewMode].clsName).show();
            },

            fillDow = function () {
                var row = $('<tr>'),
                    currentDate = viewDate.clone().startOf('w').startOf('d');

                if (options.calendarWeeks === true) {
                    row.append($('<th>').addClass('cw').text('#'));
                }

                while (currentDate.isBefore(viewDate.clone().endOf('w'))) {
                    row.append($('<th>').addClass('dow').text(currentDate.format('dd')));
                    currentDate.add(1, 'd');
                }
                widget.find('.datepicker-days thead').append(row);
            },

            isInDisabledDates = function (testDate) {
                return options.disabledDates[testDate.format('YYYY-MM-DD')] === true;
            },

            isInEnabledDates = function (testDate) {
                return options.enabledDates[testDate.format('YYYY-MM-DD')] === true;
            },

            isInDisabledHours = function (testDate) {
                return options.disabledHours[testDate.format('H')] === true;
            },

            isInEnabledHours = function (testDate) {
                return options.enabledHours[testDate.format('H')] === true;
            },

            isValid = function (targetMoment, granularity) {
                if (!targetMoment.isValid()) {
                    return false;
                }
                if (options.disabledDates && granularity === 'd' && isInDisabledDates(targetMoment)) {
                    return false;
                }
                if (options.enabledDates && granularity === 'd' && !isInEnabledDates(targetMoment)) {
                    return false;
                }
                if (options.minDate && targetMoment.isBefore(options.minDate, granularity)) {
                    return false;
                }
                if (options.maxDate && targetMoment.isAfter(options.maxDate, granularity)) {
                    return false;
                }
                if (options.daysOfWeekDisabled && granularity === 'd' && options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {
                    return false;
                }
                if (options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && isInDisabledHours(targetMoment)) {
                    return false;
                }
                if (options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !isInEnabledHours(targetMoment)) {
                    return false;
                }
                if (options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {
                    var found = false;
                    $.each(options.disabledTimeIntervals, function () {
                        if (targetMoment.isBetween(this[0], this[1])) {
                            found = true;
                            return false;
                        }
                    });
                    if (found) {
                        return false;
                    }
                }
                return true;
            },

            fillMonths = function () {
                var spans = [],
                    monthsShort = viewDate.clone().startOf('y').startOf('d');
                while (monthsShort.isSame(viewDate, 'y')) {
                    spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));
                    monthsShort.add(1, 'M');
                }
                widget.find('.datepicker-months td').empty().append(spans);
            },

            updateMonths = function () {
                var monthsView = widget.find('.datepicker-months'),
                    monthsViewHeader = monthsView.find('th'),
                    months = monthsView.find('tbody').find('span');

                monthsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevYear);
                monthsViewHeader.eq(1).attr('title', options.tooltips.selectYear);
                monthsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextYear);

                monthsView.find('.disabled').removeClass('disabled');

                if (!isValid(viewDate.clone().subtract(1, 'y'), 'y')) {
                    monthsViewHeader.eq(0).addClass('disabled');
                }

                monthsViewHeader.eq(1).text(viewDate.year());

                if (!isValid(viewDate.clone().add(1, 'y'), 'y')) {
                    monthsViewHeader.eq(2).addClass('disabled');
                }

                months.removeClass('active');
                if (date.isSame(viewDate, 'y') && !unset) {
                    months.eq(date.month()).addClass('active');
                }

                months.each(function (index) {
                    if (!isValid(viewDate.clone().month(index), 'M')) {
                        $(this).addClass('disabled');
                    }
                });
            },

            updateYears = function () {
                var yearsView = widget.find('.datepicker-years'),
                    yearsViewHeader = yearsView.find('th'),
                    startYear = viewDate.clone().subtract(5, 'y'),
                    endYear = viewDate.clone().add(6, 'y'),
                    html = '';

                yearsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevDecade);
                yearsViewHeader.eq(1).attr('title', options.tooltips.selectDecade);
                yearsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextDecade);

                yearsView.find('.disabled').removeClass('disabled');

                if (options.minDate && options.minDate.isAfter(startYear, 'y')) {
                    yearsViewHeader.eq(0).addClass('disabled');
                }

                yearsViewHeader.eq(1).text(startYear.year() + '-' + endYear.year());

                if (options.maxDate && options.maxDate.isBefore(endYear, 'y')) {
                    yearsViewHeader.eq(2).addClass('disabled');
                }

                while (!startYear.isAfter(endYear, 'y')) {
                    html += '<span data-action="selectYear" class="year' + (startYear.isSame(date, 'y') && !unset ? ' active' : '') + (!isValid(startYear, 'y') ? ' disabled' : '') + '">' + startYear.year() + '</span>';
                    startYear.add(1, 'y');
                }

                yearsView.find('td').html(html);
            },

            updateDecades = function () {
                var decadesView = widget.find('.datepicker-decades'),
                    decadesViewHeader = decadesView.find('th'),
                    startDecade = moment({ y: viewDate.year() - (viewDate.year() % 100) - 1 }),
                    endDecade = startDecade.clone().add(100, 'y'),
                    startedAt = startDecade.clone(),
                    minDateDecade = false,
                    maxDateDecade = false,
                    endDecadeYear,
                    html = '';

                decadesViewHeader.eq(0).find('span').attr('title', options.tooltips.prevCentury);
                decadesViewHeader.eq(2).find('span').attr('title', options.tooltips.nextCentury);

                decadesView.find('.disabled').removeClass('disabled');

                if (startDecade.isSame(moment({ y: 1900 })) || (options.minDate && options.minDate.isAfter(startDecade, 'y'))) {
                    decadesViewHeader.eq(0).addClass('disabled');
                }

                decadesViewHeader.eq(1).text(startDecade.year() + '-' + endDecade.year());

                if (startDecade.isSame(moment({ y: 2000 })) || (options.maxDate && options.maxDate.isBefore(endDecade, 'y'))) {
                    decadesViewHeader.eq(2).addClass('disabled');
                }

                while (!startDecade.isAfter(endDecade, 'y')) {
                    endDecadeYear = startDecade.year() + 12;
                    minDateDecade = options.minDate && options.minDate.isAfter(startDecade, 'y') && options.minDate.year() <= endDecadeYear;
                    maxDateDecade = options.maxDate && options.maxDate.isAfter(startDecade, 'y') && options.maxDate.year() <= endDecadeYear;
                    html += '<span data-action="selectDecade" class="decade' + (date.isAfter(startDecade) && date.year() <= endDecadeYear ? ' active' : '') +
                        (!isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + '" data-selection="' + (startDecade.year() + 6) + '">' + (startDecade.year() + 1) + ' - ' + (startDecade.year() + 12) + '</span>';
                    startDecade.add(12, 'y');
                }
                html += '<span></span><span></span><span></span>'; //push the dangling block over, at least this way it's even

                decadesView.find('td').html(html);
                decadesViewHeader.eq(1).text((startedAt.year() + 1) + '-' + (startDecade.year()));
            },

            fillDate = function () {
                var daysView = widget.find('.datepicker-days'),
                    daysViewHeader = daysView.find('th'),
                    currentDate,
                    html = [],
                    row,
                    clsNames = [],
                    i;

                if (!hasDate()) {
                    return;
                }

                daysViewHeader.eq(0).find('span').attr('title', options.tooltips.prevMonth);
                daysViewHeader.eq(1).attr('title', options.tooltips.selectMonth);
                daysViewHeader.eq(2).find('span').attr('title', options.tooltips.nextMonth);

                daysView.find('.disabled').removeClass('disabled');
                daysViewHeader.eq(1).text(viewDate.format(options.dayViewHeaderFormat));

                if (!isValid(viewDate.clone().subtract(1, 'M'), 'M')) {
                    daysViewHeader.eq(0).addClass('disabled');
                }
                if (!isValid(viewDate.clone().add(1, 'M'), 'M')) {
                    daysViewHeader.eq(2).addClass('disabled');
                }

                currentDate = viewDate.clone().startOf('M').startOf('w').startOf('d');

                for (i = 0; i < 42; i++) { //always display 42 days (should show 6 weeks)
                    if (currentDate.weekday() === 0) {
                        row = $('<tr>');
                        if (options.calendarWeeks) {
                            row.append('<td class="cw">' + currentDate.week() + '</td>');
                        }
                        html.push(row);
                    }
                    clsNames = ['day'];
                    if (currentDate.isBefore(viewDate, 'M')) {
                        clsNames.push('old');
                    }
                    if (currentDate.isAfter(viewDate, 'M')) {
                        clsNames.push('new');
                    }
                    if (currentDate.isSame(date, 'd') && !unset) {
                        clsNames.push('active');
                    }
                    if (!isValid(currentDate, 'd')) {
                        clsNames.push('disabled');
                    }
                    if (currentDate.isSame(getMoment(), 'd')) {
                        clsNames.push('today');
                    }
                    if (currentDate.day() === 0 || currentDate.day() === 6) {
                        clsNames.push('weekend');
                    }
                    notifyEvent({
                        type: 'dp.classify',
                        date: currentDate,
                        classNames: clsNames
                    });
                    row.append('<td data-action="selectDay" data-day="' + currentDate.format('L') + '" class="' + clsNames.join(' ') + '">' + currentDate.date() + '</td>');
                    currentDate.add(1, 'd');
                }

                daysView.find('tbody').empty().append(html);

                updateMonths();

                updateYears();

                updateDecades();
            },

            fillHours = function () {
                var table = widget.find('.timepicker-hours table'),
                    currentHour = viewDate.clone().startOf('d'),
                    html = [],
                    row = $('<tr>');

                if (viewDate.hour() > 11 && !use24Hours) {
                    currentHour.hour(12);
                }
                while (currentHour.isSame(viewDate, 'd') && (use24Hours || (viewDate.hour() < 12 && currentHour.hour() < 12) || viewDate.hour() > 11)) {
                    if (currentHour.hour() % 4 === 0) {
                        row = $('<tr>');
                        html.push(row);
                    }
                    row.append('<td data-action="selectHour" class="hour' + (!isValid(currentHour, 'h') ? ' disabled' : '') + '">' + currentHour.format(use24Hours ? 'HH' : 'hh') + '</td>');
                    currentHour.add(1, 'h');
                }
                table.empty().append(html);
            },

            fillMinutes = function () {
                var table = widget.find('.timepicker-minutes table'),
                    currentMinute = viewDate.clone().startOf('h'),
                    html = [],
                    row = $('<tr>'),
                    step = options.stepping === 1 ? 5 : options.stepping;

                while (viewDate.isSame(currentMinute, 'h')) {
                    if (currentMinute.minute() % (step * 4) === 0) {
                        row = $('<tr>');
                        html.push(row);
                    }
                    row.append('<td data-action="selectMinute" class="minute' + (!isValid(currentMinute, 'm') ? ' disabled' : '') + '">' + currentMinute.format('mm') + '</td>');
                    currentMinute.add(step, 'm');
                }
                table.empty().append(html);
            },

            fillSeconds = function () {
                var table = widget.find('.timepicker-seconds table'),
                    currentSecond = viewDate.clone().startOf('m'),
                    html = [],
                    row = $('<tr>');

                while (viewDate.isSame(currentSecond, 'm')) {
                    if (currentSecond.second() % 20 === 0) {
                        row = $('<tr>');
                        html.push(row);
                    }
                    row.append('<td data-action="selectSecond" class="second' + (!isValid(currentSecond, 's') ? ' disabled' : '') + '">' + currentSecond.format('ss') + '</td>');
                    currentSecond.add(5, 's');
                }

                table.empty().append(html);
            },

            fillTime = function () {
                var toggle, newDate, timeComponents = widget.find('.timepicker span[data-time-component]');

                if (!use24Hours) {
                    toggle = widget.find('.timepicker [data-action=togglePeriod]');
                    newDate = date.clone().add((date.hours() >= 12) ? -12 : 12, 'h');

                    toggle.text(date.format('A'));

                    if (isValid(newDate, 'h')) {
                        toggle.removeClass('disabled');
                    } else {
                        toggle.addClass('disabled');
                    }
                }
                timeComponents.filter('[data-time-component=hours]').text(date.format(use24Hours ? 'HH' : 'hh'));
                timeComponents.filter('[data-time-component=minutes]').text(date.format('mm'));
                timeComponents.filter('[data-time-component=seconds]').text(date.format('ss'));

                fillHours();
                fillMinutes();
                fillSeconds();
            },

            update = function () {
                if (!widget) {
                    return;
                }
                fillDate();
                fillTime();
            },

            setValue = function (targetMoment) {
                var oldDate = unset ? null : date;

                // case of calling setValue(null or false)
                if (!targetMoment) {
                    unset = true;
                    input.val('');
                    element.data('date', '');
                    notifyEvent({
                        type: 'dp.change',
                        date: false,
                        oldDate: oldDate
                    });
                    update();
                    return;
                }

                targetMoment = targetMoment.clone().locale(options.locale);

                if (hasTimeZone()) {
                    targetMoment.tz(options.timeZone);
                }

                if (options.stepping !== 1) {
                    targetMoment.minutes((Math.round(targetMoment.minutes() / options.stepping) * options.stepping)).seconds(0);

                    while (options.minDate && targetMoment.isBefore(options.minDate)) {
                        targetMoment.add(options.stepping, 'minutes');
                    }
                }

                if (isValid(targetMoment)) {
                    date = targetMoment;
                    viewDate = date.clone();
                    input.val(date.format(actualFormat));
                    element.data('date', date.format(actualFormat));
                    unset = false;
                    update();
                    notifyEvent({
                        type: 'dp.change',
                        date: date.clone(),
                        oldDate: oldDate
                    });
                } else {
                    if (!options.keepInvalid) {
                        input.val(unset ? '' : date.format(actualFormat));
                    } else {
                        notifyEvent({
                            type: 'dp.change',
                            date: targetMoment,
                            oldDate: oldDate
                        });
                    }
                    notifyEvent({
                        type: 'dp.error',
                        date: targetMoment,
                        oldDate: oldDate
                    });
                }
            },

            /**
             * Hides the widget. Possibly will emit dp.hide
             */
            hide = function () {
                var transitioning = false;
                if (!widget) {
                    return picker;
                }
                // Ignore event if in the middle of a picker transition
                widget.find('.collapse').each(function () {
                    var collapseData = $(this).data('collapse');
                    if (collapseData && collapseData.transitioning) {
                        transitioning = true;
                        return false;
                    }
                    return true;
                });
                if (transitioning) {
                    return picker;
                }
                if (component && component.hasClass('btn')) {
                    component.toggleClass('active');
                }
                widget.hide();

                $(window).off('resize', place);
                widget.off('click', '[data-action]');
                widget.off('mousedown', false);

                widget.remove();
                widget = false;

                notifyEvent({
                    type: 'dp.hide',
                    date: date.clone()
                });

                input.blur();

                viewDate = date.clone();

                return picker;
            },

            clear = function () {
                setValue(null);
            },

            parseInputDate = function (inputDate) {
                if (options.parseInputDate === undefined) {
                    if (!moment.isMoment(inputDate) || inputDate instanceof Date) {
                        inputDate = getMoment(inputDate);
                    }
                } else {
                    inputDate = options.parseInputDate(inputDate);
                }
                //inputDate.locale(options.locale);
                return inputDate;
            },

            /********************************************************************************
             *
             * Widget UI interaction functions
             *
             ********************************************************************************/
            actions = {
                next: function () {
                    var navFnc = datePickerModes[currentViewMode].navFnc;
                    viewDate.add(datePickerModes[currentViewMode].navStep, navFnc);
                    fillDate();
                    viewUpdate(navFnc);
                },

                previous: function () {
                    var navFnc = datePickerModes[currentViewMode].navFnc;
                    viewDate.subtract(datePickerModes[currentViewMode].navStep, navFnc);
                    fillDate();
                    viewUpdate(navFnc);
                },

                pickerSwitch: function () {
                    showMode(1);
                },

                selectMonth: function (e) {
                    var month = $(e.target).closest('tbody').find('span').index($(e.target));
                    viewDate.month(month);
                    if (currentViewMode === minViewModeNumber) {
                        setValue(date.clone().year(viewDate.year()).month(viewDate.month()));
                        if (!options.inline) {
                            hide();
                        }
                    } else {
                        showMode(-1);
                        fillDate();
                    }
                    viewUpdate('M');
                },

                selectYear: function (e) {
                    var year = parseInt($(e.target).text(), 10) || 0;
                    viewDate.year(year);
                    if (currentViewMode === minViewModeNumber) {
                        setValue(date.clone().year(viewDate.year()));
                        if (!options.inline) {
                            hide();
                        }
                    } else {
                        showMode(-1);
                        fillDate();
                    }
                    viewUpdate('YYYY');
                },

                selectDecade: function (e) {
                    var year = parseInt($(e.target).data('selection'), 10) || 0;
                    viewDate.year(year);
                    if (currentViewMode === minViewModeNumber) {
                        setValue(date.clone().year(viewDate.year()));
                        if (!options.inline) {
                            hide();
                        }
                    } else {
                        showMode(-1);
                        fillDate();
                    }
                    viewUpdate('YYYY');
                },

                selectDay: function (e) {
                    var day = viewDate.clone();
                    if ($(e.target).is('.old')) {
                        day.subtract(1, 'M');
                    }
                    if ($(e.target).is('.new')) {
                        day.add(1, 'M');
                    }
                    setValue(day.date(parseInt($(e.target).text(), 10)));
                    if (!hasTime() && !options.keepOpen && !options.inline) {
                        hide();
                    }
                },

                incrementHours: function () {
                    var newDate = date.clone().add(1, 'h');
                    if (isValid(newDate, 'h')) {
                        setValue(newDate);
                    }
                },

                incrementMinutes: function () {
                    var newDate = date.clone().add(options.stepping, 'm');
                    if (isValid(newDate, 'm')) {
                        setValue(newDate);
                    }
                },

                incrementSeconds: function () {
                    var newDate = date.clone().add(1, 's');
                    if (isValid(newDate, 's')) {
                        setValue(newDate);
                    }
                },

                decrementHours: function () {
                    var newDate = date.clone().subtract(1, 'h');
                    if (isValid(newDate, 'h')) {
                        setValue(newDate);
                    }
                },

                decrementMinutes: function () {
                    var newDate = date.clone().subtract(options.stepping, 'm');
                    if (isValid(newDate, 'm')) {
                        setValue(newDate);
                    }
                },

                decrementSeconds: function () {
                    var newDate = date.clone().subtract(1, 's');
                    if (isValid(newDate, 's')) {
                        setValue(newDate);
                    }
                },

                togglePeriod: function () {
                    setValue(date.clone().add((date.hours() >= 12) ? -12 : 12, 'h'));
                },

                togglePicker: function (e) {
                    var $this = $(e.target),
                        $parent = $this.closest('ul'),
                        expanded = $parent.find('.in'),
                        closed = $parent.find('.collapse:not(.in)'),
                        collapseData;

                    if (expanded && expanded.length) {
                        collapseData = expanded.data('collapse');
                        if (collapseData && collapseData.transitioning) {
                            return;
                        }
                        if (expanded.collapse) { // if collapse plugin is available through bootstrap.js then use it
                            expanded.collapse('hide');
                            closed.collapse('show');
                        } else { // otherwise just toggle in class on the two views
                            expanded.removeClass('in');
                            closed.addClass('in');
                        }
                        if ($this.is('span')) {
                            $this.toggleClass(options.icons.time + ' ' + options.icons.date);
                        } else {
                            $this.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);
                        }

                        // NOTE: uncomment if toggled state will be restored in show()
                        //if (component) {
                        //    component.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);
                        //}
                    }
                },

                showPicker: function () {
                    widget.find('.timepicker > div:not(.timepicker-picker)').hide();
                    widget.find('.timepicker .timepicker-picker').show();
                },

                showHours: function () {
                    widget.find('.timepicker .timepicker-picker').hide();
                    widget.find('.timepicker .timepicker-hours').show();
                },

                showMinutes: function () {
                    widget.find('.timepicker .timepicker-picker').hide();
                    widget.find('.timepicker .timepicker-minutes').show();
                },

                showSeconds: function () {
                    widget.find('.timepicker .timepicker-picker').hide();
                    widget.find('.timepicker .timepicker-seconds').show();
                },

                selectHour: function (e) {
                    var hour = parseInt($(e.target).text(), 10);

                    if (!use24Hours) {
                        if (date.hours() >= 12) {
                            if (hour !== 12) {
                                hour += 12;
                            }
                        } else {
                            if (hour === 12) {
                                hour = 0;
                            }
                        }
                    }
                    setValue(date.clone().hours(hour));
                    actions.showPicker.call(picker);
                },

                selectMinute: function (e) {
                    setValue(date.clone().minutes(parseInt($(e.target).text(), 10)));
                    actions.showPicker.call(picker);
                },

                selectSecond: function (e) {
                    setValue(date.clone().seconds(parseInt($(e.target).text(), 10)));
                    actions.showPicker.call(picker);
                },

                clear: clear,

                today: function () {
                    var todaysDate = getMoment();
                    if (isValid(todaysDate, 'd')) {
                        setValue(todaysDate);
                    }
                },

                close: hide
            },

            doAction = function (e) {
                if ($(e.currentTarget).is('.disabled')) {
                    return false;
                }
                actions[$(e.currentTarget).data('action')].apply(picker, arguments);
                return false;
            },

            /**
             * Shows the widget. Possibly will emit dp.show and dp.change
             */
            show = function () {
                var currentMoment,
                    useCurrentGranularity = {
                        'year': function (m) {
                            return m.month(0).date(1).hours(0).seconds(0).minutes(0);
                        },
                        'month': function (m) {
                            return m.date(1).hours(0).seconds(0).minutes(0);
                        },
                        'day': function (m) {
                            return m.hours(0).seconds(0).minutes(0);
                        },
                        'hour': function (m) {
                            return m.seconds(0).minutes(0);
                        },
                        'minute': function (m) {
                            return m.seconds(0);
                        }
                    };

                if (input.prop('disabled') || (!options.ignoreReadonly && input.prop('readonly')) || widget) {
                    return picker;
                }
                if (input.val() !== undefined && input.val().trim().length !== 0) {
                    setValue(parseInputDate(input.val().trim()));
                } else if (unset && options.useCurrent && (options.inline || (input.is('input') && input.val().trim().length === 0))) {
                    currentMoment = getMoment();
                    if (typeof options.useCurrent === 'string') {
                        currentMoment = useCurrentGranularity[options.useCurrent](currentMoment);
                    }
                    setValue(currentMoment);
                }
                widget = getTemplate();

                fillDow();
                fillMonths();

                widget.find('.timepicker-hours').hide();
                widget.find('.timepicker-minutes').hide();
                widget.find('.timepicker-seconds').hide();

                update();
                showMode();

                $(window).on('resize', place);
                widget.on('click', '[data-action]', doAction); // this handles clicks on the widget
                widget.on('mousedown', false);

                if (component && component.hasClass('btn')) {
                    component.toggleClass('active');
                }
                place();
                widget.show();
                if (options.focusOnShow && !input.is(':focus')) {
                    input.focus();
                }

                notifyEvent({
                    type: 'dp.show'
                });
                return picker;
            },

            /**
             * Shows or hides the widget
             */
            toggle = function () {
                return (widget ? hide() : show());
            },

            keydown = function (e) {
                var handler = null,
                    index,
                    index2,
                    pressedKeys = [],
                    pressedModifiers = {},
                    currentKey = e.which,
                    keyBindKeys,
                    allModifiersPressed,
                    pressed = 'p';

                keyState[currentKey] = pressed;

                for (index in keyState) {
                    if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {
                        pressedKeys.push(index);
                        if (parseInt(index, 10) !== currentKey) {
                            pressedModifiers[index] = true;
                        }
                    }
                }

                for (index in options.keyBinds) {
                    if (options.keyBinds.hasOwnProperty(index) && typeof (options.keyBinds[index]) === 'function') {
                        keyBindKeys = index.split(' ');
                        if (keyBindKeys.length === pressedKeys.length && keyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {
                            allModifiersPressed = true;
                            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {
                                if (!(keyMap[keyBindKeys[index2]] in pressedModifiers)) {
                                    allModifiersPressed = false;
                                    break;
                                }
                            }
                            if (allModifiersPressed) {
                                handler = options.keyBinds[index];
                                break;
                            }
                        }
                    }
                }

                if (handler) {
                    handler.call(picker, widget);
                    e.stopPropagation();
                    e.preventDefault();
                }
            },

            keyup = function (e) {
                keyState[e.which] = 'r';
                e.stopPropagation();
                e.preventDefault();
            },

            change = function (e) {
                var val = $(e.target).val().trim(),
                    parsedDate = val ? parseInputDate(val) : null;
                setValue(parsedDate);
                e.stopImmediatePropagation();
                return false;
            },

            attachDatePickerElementEvents = function () {
                input.on({
                    'change': change,
                    'blur': options.debug ? '' : hide,
                    'keydown': keydown,
                    'keyup': keyup,
                    'focus': options.allowInputToggle ? show : ''
                });

                if (element.is('input')) {
                    input.on({
                        'focus': show
                    });
                } else if (component) {
                    component.on('click', toggle);
                    component.on('mousedown', false);
                }
            },

            detachDatePickerElementEvents = function () {
                input.off({
                    'change': change,
                    'blur': blur,
                    'keydown': keydown,
                    'keyup': keyup,
                    'focus': options.allowInputToggle ? hide : ''
                });

                if (element.is('input')) {
                    input.off({
                        'focus': show
                    });
                } else if (component) {
                    component.off('click', toggle);
                    component.off('mousedown', false);
                }
            },

            indexGivenDates = function (givenDatesArray) {
                // Store given enabledDates and disabledDates as keys.
                // This way we can check their existence in O(1) time instead of looping through whole array.
                // (for example: options.enabledDates['2014-02-27'] === true)
                var givenDatesIndexed = {};
                $.each(givenDatesArray, function () {
                    var dDate = parseInputDate(this);
                    if (dDate.isValid()) {
                        givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;
                    }
                });
                return (Object.keys(givenDatesIndexed).length) ? givenDatesIndexed : false;
            },

            indexGivenHours = function (givenHoursArray) {
                // Store given enabledHours and disabledHours as keys.
                // This way we can check their existence in O(1) time instead of looping through whole array.
                // (for example: options.enabledHours['2014-02-27'] === true)
                var givenHoursIndexed = {};
                $.each(givenHoursArray, function () {
                    givenHoursIndexed[this] = true;
                });
                return (Object.keys(givenHoursIndexed).length) ? givenHoursIndexed : false;
            },

            initFormatting = function () {
                var format = options.format || 'L LT';

                actualFormat = format.replace(/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {
                    var newinput = date.localeData().longDateFormat(formatInput) || formatInput;
                    return newinput.replace(/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput2) { //temp fix for #740
                        return date.localeData().longDateFormat(formatInput2) || formatInput2;
                    });
                });


                parseFormats = options.extraFormats ? options.extraFormats.slice() : [];
                if (parseFormats.indexOf(format) < 0 && parseFormats.indexOf(actualFormat) < 0) {
                    parseFormats.push(actualFormat);
                }

                use24Hours = (actualFormat.toLowerCase().indexOf('a') < 1 && actualFormat.replace(/\[.*?\]/g, '').indexOf('h') < 1);

                if (isEnabled('y')) {
                    minViewModeNumber = 2;
                }
                if (isEnabled('M')) {
                    minViewModeNumber = 1;
                }
                if (isEnabled('d')) {
                    minViewModeNumber = 0;
                }

                currentViewMode = Math.max(minViewModeNumber, currentViewMode);

                if (!unset) {
                    setValue(date);
                }
            };

        /********************************************************************************
         *
         * Public API functions
         * =====================
         *
         * Important: Do not expose direct references to private objects or the options
         * object to the outer world. Always return a clone when returning values or make
         * a clone when setting a private variable.
         *
         ********************************************************************************/
        picker.destroy = function () {
            ///<summary>Destroys the widget and removes all attached event listeners</summary>
            hide();
            detachDatePickerElementEvents();
            element.removeData('DateTimePicker');
            element.removeData('date');
        };

        picker.toggle = toggle;

        picker.show = show;

        picker.hide = hide;

        picker.disable = function () {
            ///<summary>Disables the input element, the component is attached to, by adding a disabled="true" attribute to it.
            ///If the widget was visible before that call it is hidden. Possibly emits dp.hide</summary>
            hide();
            if (component && component.hasClass('btn')) {
                component.addClass('disabled');
            }
            input.prop('disabled', true);
            return picker;
        };

        picker.enable = function () {
            ///<summary>Enables the input element, the component is attached to, by removing disabled attribute from it.</summary>
            if (component && component.hasClass('btn')) {
                component.removeClass('disabled');
            }
            input.prop('disabled', false);
            return picker;
        };

        picker.ignoreReadonly = function (ignoreReadonly) {
            if (arguments.length === 0) {
                return options.ignoreReadonly;
            }
            if (typeof ignoreReadonly !== 'boolean') {
                throw new TypeError('ignoreReadonly () expects a boolean parameter');
            }
            options.ignoreReadonly = ignoreReadonly;
            return picker;
        };

        picker.options = function (newOptions) {
            if (arguments.length === 0) {
                return $.extend(true, {}, options);
            }

            if (!(newOptions instanceof Object)) {
                throw new TypeError('options() options parameter should be an object');
            }
            $.extend(true, options, newOptions);
            $.each(options, function (key, value) {
                if (picker[key] !== undefined) {
                    picker[key](value);
                } else {
                    throw new TypeError('option ' + key + ' is not recognized!');
                }
            });
            return picker;
        };

        picker.date = function (newDate) {
            ///<signature helpKeyword="$.fn.datetimepicker.date">
            ///<summary>Returns the component's model current date, a moment object or null if not set.</summary>
            ///<returns type="Moment">date.clone()</returns>
            ///</signature>
            ///<signature>
            ///<summary>Sets the components model current moment to it. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.</summary>
            ///<param name="newDate" locid="$.fn.datetimepicker.date_p:newDate">Takes string, Date, moment, null parameter.</param>
            ///</signature>
            if (arguments.length === 0) {
                if (unset) {
                    return null;
                }
                return date.clone();
            }

            if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {
                throw new TypeError('date() parameter must be one of [null, string, moment or Date]');
            }

            setValue(newDate === null ? null : parseInputDate(newDate));
            return picker;
        };

        picker.format = function (newFormat) {
            ///<summary>test su</summary>
            ///<param name="newFormat">info about para</param>
            ///<returns type="string|boolean">returns foo</returns>
            if (arguments.length === 0) {
                return options.format;
            }

            if ((typeof newFormat !== 'string') && ((typeof newFormat !== 'boolean') || (newFormat !== false))) {
                throw new TypeError('format() expects a string or boolean:false parameter ' + newFormat);
            }

            options.format = newFormat;
            if (actualFormat) {
                initFormatting(); // reinit formatting
            }
            return picker;
        };

        picker.timeZone = function (newZone) {
            if (arguments.length === 0) {
                return options.timeZone;
            }

            if (typeof newZone !== 'string') {
                throw new TypeError('newZone() expects a string parameter');
            }

            options.timeZone = newZone;

            return picker;
        };

        picker.dayViewHeaderFormat = function (newFormat) {
            if (arguments.length === 0) {
                return options.dayViewHeaderFormat;
            }

            if (typeof newFormat !== 'string') {
                throw new TypeError('dayViewHeaderFormat() expects a string parameter');
            }

            options.dayViewHeaderFormat = newFormat;
            return picker;
        };

        picker.extraFormats = function (formats) {
            if (arguments.length === 0) {
                return options.extraFormats;
            }

            if (formats !== false && !(formats instanceof Array)) {
                throw new TypeError('extraFormats() expects an array or false parameter');
            }

            options.extraFormats = formats;
            if (parseFormats) {
                initFormatting(); // reinit formatting
            }
            return picker;
        };

        picker.disabledDates = function (dates) {
            ///<signature helpKeyword="$.fn.datetimepicker.disabledDates">
            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>
            ///<returns type="array">options.disabledDates</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of
            ///options.enabledDates if such exist.</summary>
            ///<param name="dates" locid="$.fn.datetimepicker.disabledDates_p:dates">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.disabledDates ? $.extend({}, options.disabledDates) : options.disabledDates);
            }

            if (!dates) {
                options.disabledDates = false;
                update();
                return picker;
            }
            if (!(dates instanceof Array)) {
                throw new TypeError('disabledDates() expects an array parameter');
            }
            options.disabledDates = indexGivenDates(dates);
            options.enabledDates = false;
            update();
            return picker;
        };

        picker.enabledDates = function (dates) {
            ///<signature helpKeyword="$.fn.datetimepicker.enabledDates">
            ///<summary>Returns an array with the currently set enabled dates on the component.</summary>
            ///<returns type="array">options.enabledDates</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledDates if such exist.</summary>
            ///<param name="dates" locid="$.fn.datetimepicker.enabledDates_p:dates">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.enabledDates ? $.extend({}, options.enabledDates) : options.enabledDates);
            }

            if (!dates) {
                options.enabledDates = false;
                update();
                return picker;
            }
            if (!(dates instanceof Array)) {
                throw new TypeError('enabledDates() expects an array parameter');
            }
            options.enabledDates = indexGivenDates(dates);
            options.disabledDates = false;
            update();
            return picker;
        };

        picker.daysOfWeekDisabled = function (daysOfWeekDisabled) {
            if (arguments.length === 0) {
                return options.daysOfWeekDisabled.splice(0);
            }

            if ((typeof daysOfWeekDisabled === 'boolean') && !daysOfWeekDisabled) {
                options.daysOfWeekDisabled = false;
                update();
                return picker;
            }

            if (!(daysOfWeekDisabled instanceof Array)) {
                throw new TypeError('daysOfWeekDisabled() expects an array parameter');
            }
            options.daysOfWeekDisabled = daysOfWeekDisabled.reduce(function (previousValue, currentValue) {
                currentValue = parseInt(currentValue, 10);
                if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {
                    return previousValue;
                }
                if (previousValue.indexOf(currentValue) === -1) {
                    previousValue.push(currentValue);
                }
                return previousValue;
            }, []).sort();
            if (options.useCurrent && !options.keepInvalid) {
                var tries = 0;
                while (!isValid(date, 'd')) {
                    date.add(1, 'd');
                    if (tries === 31) {
                        throw 'Tried 31 times to find a valid date';
                    }
                    tries++;
                }
                setValue(date);
            }
            update();
            return picker;
        };

        picker.maxDate = function (maxDate) {
            if (arguments.length === 0) {
                return options.maxDate ? options.maxDate.clone() : options.maxDate;
            }

            if ((typeof maxDate === 'boolean') && maxDate === false) {
                options.maxDate = false;
                update();
                return picker;
            }

            if (typeof maxDate === 'string') {
                if (maxDate === 'now' || maxDate === 'moment') {
                    maxDate = getMoment();
                }
            }

            var parsedDate = parseInputDate(maxDate);

            if (!parsedDate.isValid()) {
                throw new TypeError('maxDate() Could not parse date parameter: ' + maxDate);
            }
            if (options.minDate && parsedDate.isBefore(options.minDate)) {
                throw new TypeError('maxDate() date parameter is before options.minDate: ' + parsedDate.format(actualFormat));
            }
            options.maxDate = parsedDate;
            if (options.useCurrent && !options.keepInvalid && date.isAfter(maxDate)) {
                setValue(options.maxDate);
            }
            if (viewDate.isAfter(parsedDate)) {
                viewDate = parsedDate.clone().subtract(options.stepping, 'm');
            }
            update();
            return picker;
        };

        picker.minDate = function (minDate) {
            if (arguments.length === 0) {
                return options.minDate ? options.minDate.clone() : options.minDate;
            }

            if ((typeof minDate === 'boolean') && minDate === false) {
                options.minDate = false;
                update();
                return picker;
            }

            if (typeof minDate === 'string') {
                if (minDate === 'now' || minDate === 'moment') {
                    minDate = getMoment();
                }
            }

            var parsedDate = parseInputDate(minDate);

            if (!parsedDate.isValid()) {
                throw new TypeError('minDate() Could not parse date parameter: ' + minDate);
            }
            if (options.maxDate && parsedDate.isAfter(options.maxDate)) {
                throw new TypeError('minDate() date parameter is after options.maxDate: ' + parsedDate.format(actualFormat));
            }
            options.minDate = parsedDate;
            if (options.useCurrent && !options.keepInvalid && date.isBefore(minDate)) {
                setValue(options.minDate);
            }
            if (viewDate.isBefore(parsedDate)) {
                viewDate = parsedDate.clone().add(options.stepping, 'm');
            }
            update();
            return picker;
        };

        picker.defaultDate = function (defaultDate) {
            ///<signature helpKeyword="$.fn.datetimepicker.defaultDate">
            ///<summary>Returns a moment with the options.defaultDate option configuration or false if not set</summary>
            ///<returns type="Moment">date.clone()</returns>
            ///</signature>
            ///<signature>
            ///<summary>Will set the picker's inital date. If a boolean:false value is passed the options.defaultDate parameter is cleared.</summary>
            ///<param name="defaultDate" locid="$.fn.datetimepicker.defaultDate_p:defaultDate">Takes a string, Date, moment, boolean:false</param>
            ///</signature>
            if (arguments.length === 0) {
                return options.defaultDate ? options.defaultDate.clone() : options.defaultDate;
            }
            if (!defaultDate) {
                options.defaultDate = false;
                return picker;
            }

            if (typeof defaultDate === 'string') {
                if (defaultDate === 'now' || defaultDate === 'moment') {
                    defaultDate = getMoment();
                } else {
                    defaultDate = getMoment(defaultDate);
                }
            }

            var parsedDate = parseInputDate(defaultDate);
            if (!parsedDate.isValid()) {
                throw new TypeError('defaultDate() Could not parse date parameter: ' + defaultDate);
            }
            if (!isValid(parsedDate)) {
                throw new TypeError('defaultDate() date passed is invalid according to component setup validations');
            }

            options.defaultDate = parsedDate;

            if ((options.defaultDate && options.inline) || input.val().trim() === '') {
                setValue(options.defaultDate);
            }
            return picker;
        };

        picker.locale = function (locale) {
            if (arguments.length === 0) {
                return options.locale;
            }

            if (!moment.localeData(locale)) {
                throw new TypeError('locale() locale ' + locale + ' is not loaded from moment locales!');
            }

            options.locale = locale;
            date.locale(options.locale);
            viewDate.locale(options.locale);

            if (actualFormat) {
                initFormatting(); // reinit formatting
            }
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.stepping = function (stepping) {
            if (arguments.length === 0) {
                return options.stepping;
            }

            stepping = parseInt(stepping, 10);
            if (isNaN(stepping) || stepping < 1) {
                stepping = 1;
            }
            options.stepping = stepping;
            return picker;
        };

        picker.useCurrent = function (useCurrent) {
            var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];
            if (arguments.length === 0) {
                return options.useCurrent;
            }

            if ((typeof useCurrent !== 'boolean') && (typeof useCurrent !== 'string')) {
                throw new TypeError('useCurrent() expects a boolean or string parameter');
            }
            if (typeof useCurrent === 'string' && useCurrentOptions.indexOf(useCurrent.toLowerCase()) === -1) {
                throw new TypeError('useCurrent() expects a string parameter of ' + useCurrentOptions.join(', '));
            }
            options.useCurrent = useCurrent;
            return picker;
        };

        picker.collapse = function (collapse) {
            if (arguments.length === 0) {
                return options.collapse;
            }

            if (typeof collapse !== 'boolean') {
                throw new TypeError('collapse() expects a boolean parameter');
            }
            if (options.collapse === collapse) {
                return picker;
            }
            options.collapse = collapse;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.icons = function (icons) {
            if (arguments.length === 0) {
                return $.extend({}, options.icons);
            }

            if (!(icons instanceof Object)) {
                throw new TypeError('icons() expects parameter to be an Object');
            }
            $.extend(options.icons, icons);
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.tooltips = function (tooltips) {
            if (arguments.length === 0) {
                return $.extend({}, options.tooltips);
            }

            if (!(tooltips instanceof Object)) {
                throw new TypeError('tooltips() expects parameter to be an Object');
            }
            $.extend(options.tooltips, tooltips);
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.useStrict = function (useStrict) {
            if (arguments.length === 0) {
                return options.useStrict;
            }

            if (typeof useStrict !== 'boolean') {
                throw new TypeError('useStrict() expects a boolean parameter');
            }
            options.useStrict = useStrict;
            return picker;
        };

        picker.sideBySide = function (sideBySide) {
            if (arguments.length === 0) {
                return options.sideBySide;
            }

            if (typeof sideBySide !== 'boolean') {
                throw new TypeError('sideBySide() expects a boolean parameter');
            }
            options.sideBySide = sideBySide;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.viewMode = function (viewMode) {
            if (arguments.length === 0) {
                return options.viewMode;
            }

            if (typeof viewMode !== 'string') {
                throw new TypeError('viewMode() expects a string parameter');
            }

            if (viewModes.indexOf(viewMode) === -1) {
                throw new TypeError('viewMode() parameter must be one of (' + viewModes.join(', ') + ') value');
            }

            options.viewMode = viewMode;
            currentViewMode = Math.max(viewModes.indexOf(viewMode), minViewModeNumber);

            showMode();
            return picker;
        };

        picker.toolbarPlacement = function (toolbarPlacement) {
            if (arguments.length === 0) {
                return options.toolbarPlacement;
            }

            if (typeof toolbarPlacement !== 'string') {
                throw new TypeError('toolbarPlacement() expects a string parameter');
            }
            if (toolbarPlacements.indexOf(toolbarPlacement) === -1) {
                throw new TypeError('toolbarPlacement() parameter must be one of (' + toolbarPlacements.join(', ') + ') value');
            }
            options.toolbarPlacement = toolbarPlacement;

            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.widgetPositioning = function (widgetPositioning) {
            if (arguments.length === 0) {
                return $.extend({}, options.widgetPositioning);
            }

            if (({}).toString.call(widgetPositioning) !== '[object Object]') {
                throw new TypeError('widgetPositioning() expects an object variable');
            }
            if (widgetPositioning.horizontal) {
                if (typeof widgetPositioning.horizontal !== 'string') {
                    throw new TypeError('widgetPositioning() horizontal variable must be a string');
                }
                widgetPositioning.horizontal = widgetPositioning.horizontal.toLowerCase();
                if (horizontalModes.indexOf(widgetPositioning.horizontal) === -1) {
                    throw new TypeError('widgetPositioning() expects horizontal parameter to be one of (' + horizontalModes.join(', ') + ')');
                }
                options.widgetPositioning.horizontal = widgetPositioning.horizontal;
            }
            if (widgetPositioning.vertical) {
                if (typeof widgetPositioning.vertical !== 'string') {
                    throw new TypeError('widgetPositioning() vertical variable must be a string');
                }
                widgetPositioning.vertical = widgetPositioning.vertical.toLowerCase();
                if (verticalModes.indexOf(widgetPositioning.vertical) === -1) {
                    throw new TypeError('widgetPositioning() expects vertical parameter to be one of (' + verticalModes.join(', ') + ')');
                }
                options.widgetPositioning.vertical = widgetPositioning.vertical;
            }
            update();
            return picker;
        };

        picker.calendarWeeks = function (calendarWeeks) {
            if (arguments.length === 0) {
                return options.calendarWeeks;
            }

            if (typeof calendarWeeks !== 'boolean') {
                throw new TypeError('calendarWeeks() expects parameter to be a boolean value');
            }

            options.calendarWeeks = calendarWeeks;
            update();
            return picker;
        };

        picker.showTodayButton = function (showTodayButton) {
            if (arguments.length === 0) {
                return options.showTodayButton;
            }

            if (typeof showTodayButton !== 'boolean') {
                throw new TypeError('showTodayButton() expects a boolean parameter');
            }

            options.showTodayButton = showTodayButton;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.showClear = function (showClear) {
            if (arguments.length === 0) {
                return options.showClear;
            }

            if (typeof showClear !== 'boolean') {
                throw new TypeError('showClear() expects a boolean parameter');
            }

            options.showClear = showClear;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.widgetParent = function (widgetParent) {
            if (arguments.length === 0) {
                return options.widgetParent;
            }

            if (typeof widgetParent === 'string') {
                widgetParent = $(widgetParent);
            }

            if (widgetParent !== null && (typeof widgetParent !== 'string' && !(widgetParent instanceof $))) {
                throw new TypeError('widgetParent() expects a string or a jQuery object parameter');
            }

            options.widgetParent = widgetParent;
            if (widget) {
                hide();
                show();
            }
            return picker;
        };

        picker.keepOpen = function (keepOpen) {
            if (arguments.length === 0) {
                return options.keepOpen;
            }

            if (typeof keepOpen !== 'boolean') {
                throw new TypeError('keepOpen() expects a boolean parameter');
            }

            options.keepOpen = keepOpen;
            return picker;
        };

        picker.focusOnShow = function (focusOnShow) {
            if (arguments.length === 0) {
                return options.focusOnShow;
            }

            if (typeof focusOnShow !== 'boolean') {
                throw new TypeError('focusOnShow() expects a boolean parameter');
            }

            options.focusOnShow = focusOnShow;
            return picker;
        };

        picker.inline = function (inline) {
            if (arguments.length === 0) {
                return options.inline;
            }

            if (typeof inline !== 'boolean') {
                throw new TypeError('inline() expects a boolean parameter');
            }

            options.inline = inline;
            return picker;
        };

        picker.clear = function () {
            clear();
            return picker;
        };

        picker.keyBinds = function (keyBinds) {
            if (arguments.length === 0) {
                return options.keyBinds;
            }

            options.keyBinds = keyBinds;
            return picker;
        };

        picker.getMoment = function (d) {
            return getMoment(d);
        };

        picker.debug = function (debug) {
            if (typeof debug !== 'boolean') {
                throw new TypeError('debug() expects a boolean parameter');
            }

            options.debug = debug;
            return picker;
        };

        picker.allowInputToggle = function (allowInputToggle) {
            if (arguments.length === 0) {
                return options.allowInputToggle;
            }

            if (typeof allowInputToggle !== 'boolean') {
                throw new TypeError('allowInputToggle() expects a boolean parameter');
            }

            options.allowInputToggle = allowInputToggle;
            return picker;
        };

        picker.showClose = function (showClose) {
            if (arguments.length === 0) {
                return options.showClose;
            }

            if (typeof showClose !== 'boolean') {
                throw new TypeError('showClose() expects a boolean parameter');
            }

            options.showClose = showClose;
            return picker;
        };

        picker.keepInvalid = function (keepInvalid) {
            if (arguments.length === 0) {
                return options.keepInvalid;
            }

            if (typeof keepInvalid !== 'boolean') {
                throw new TypeError('keepInvalid() expects a boolean parameter');
            }
            options.keepInvalid = keepInvalid;
            return picker;
        };

        picker.datepickerInput = function (datepickerInput) {
            if (arguments.length === 0) {
                return options.datepickerInput;
            }

            if (typeof datepickerInput !== 'string') {
                throw new TypeError('datepickerInput() expects a string parameter');
            }

            options.datepickerInput = datepickerInput;
            return picker;
        };

        picker.parseInputDate = function (parseInputDate) {
            if (arguments.length === 0) {
                return options.parseInputDate;
            }

            if (typeof parseInputDate !== 'function') {
                throw new TypeError('parseInputDate() sholud be as function');
            }

            options.parseInputDate = parseInputDate;

            return picker;
        };

        picker.disabledTimeIntervals = function (disabledTimeIntervals) {
            ///<signature helpKeyword="$.fn.datetimepicker.disabledTimeIntervals">
            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>
            ///<returns type="array">options.disabledTimeIntervals</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of
            ///options.enabledDates if such exist.</summary>
            ///<param name="dates" locid="$.fn.datetimepicker.disabledTimeIntervals_p:dates">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.disabledTimeIntervals ? $.extend({}, options.disabledTimeIntervals) : options.disabledTimeIntervals);
            }

            if (!disabledTimeIntervals) {
                options.disabledTimeIntervals = false;
                update();
                return picker;
            }
            if (!(disabledTimeIntervals instanceof Array)) {
                throw new TypeError('disabledTimeIntervals() expects an array parameter');
            }
            options.disabledTimeIntervals = disabledTimeIntervals;
            update();
            return picker;
        };

        picker.disabledHours = function (hours) {
            ///<signature helpKeyword="$.fn.datetimepicker.disabledHours">
            ///<summary>Returns an array with the currently set disabled hours on the component.</summary>
            ///<returns type="array">options.disabledHours</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of
            ///options.enabledHours if such exist.</summary>
            ///<param name="hours" locid="$.fn.datetimepicker.disabledHours_p:hours">Takes an [ int ] of values and disallows the user to select only from those hours.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.disabledHours ? $.extend({}, options.disabledHours) : options.disabledHours);
            }

            if (!hours) {
                options.disabledHours = false;
                update();
                return picker;
            }
            if (!(hours instanceof Array)) {
                throw new TypeError('disabledHours() expects an array parameter');
            }
            options.disabledHours = indexGivenHours(hours);
            options.enabledHours = false;
            if (options.useCurrent && !options.keepInvalid) {
                var tries = 0;
                while (!isValid(date, 'h')) {
                    date.add(1, 'h');
                    if (tries === 24) {
                        throw 'Tried 24 times to find a valid date';
                    }
                    tries++;
                }
                setValue(date);
            }
            update();
            return picker;
        };

        picker.enabledHours = function (hours) {
            ///<signature helpKeyword="$.fn.datetimepicker.enabledHours">
            ///<summary>Returns an array with the currently set enabled hours on the component.</summary>
            ///<returns type="array">options.enabledHours</returns>
            ///</signature>
            ///<signature>
            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledHours if such exist.</summary>
            ///<param name="hours" locid="$.fn.datetimepicker.enabledHours_p:hours">Takes an [ int ] of values and allows the user to select only from those hours.</param>
            ///</signature>
            if (arguments.length === 0) {
                return (options.enabledHours ? $.extend({}, options.enabledHours) : options.enabledHours);
            }

            if (!hours) {
                options.enabledHours = false;
                update();
                return picker;
            }
            if (!(hours instanceof Array)) {
                throw new TypeError('enabledHours() expects an array parameter');
            }
            options.enabledHours = indexGivenHours(hours);
            options.disabledHours = false;
            if (options.useCurrent && !options.keepInvalid) {
                var tries = 0;
                while (!isValid(date, 'h')) {
                    date.add(1, 'h');
                    if (tries === 24) {
                        throw 'Tried 24 times to find a valid date';
                    }
                    tries++;
                }
                setValue(date);
            }
            update();
            return picker;
        };
        /**
         * Returns the component's model current viewDate, a moment object or null if not set. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.
         * @param {Takes string, viewDate, moment, null parameter.} newDate
         * @returns {viewDate.clone()}
         */
        picker.viewDate = function (newDate) {
            if (arguments.length === 0) {
                return viewDate.clone();
            }

            if (!newDate) {
                viewDate = date.clone();
                return picker;
            }

            if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {
                throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');
            }

            viewDate = parseInputDate(newDate);
            viewUpdate();
            return picker;
        };

        // initializing element and component attributes
        if (element.is('input')) {
            input = element;
        } else {
            input = element.find(options.datepickerInput);
            if (input.length === 0) {
                input = element.find('input');
            } else if (!input.is('input')) {
                throw new Error('CSS class "' + options.datepickerInput + '" cannot be applied to non input element');
            }
        }

        if (element.hasClass('input-group')) {
            // in case there is more then one 'input-group-addon' Issue #48
            if (element.find('.datepickerbutton').length === 0) {
                component = element.find('.input-group-addon');
            } else {
                component = element.find('.datepickerbutton');
            }
        }

        if (!options.inline && !input.is('input')) {
            throw new Error('Could not initialize DateTimePicker without an input element');
        }

        // Set defaults for date here now instead of in var declaration
        date = getMoment();
        viewDate = date.clone();

        $.extend(true, options, dataToOptions());

        picker.options(options);

        initFormatting();

        attachDatePickerElementEvents();

        if (input.prop('disabled')) {
            picker.disable();
        }
        if (input.is('input') && input.val().trim().length !== 0) {
            setValue(parseInputDate(input.val().trim()));
        }
        else if (options.defaultDate && input.attr('placeholder') === undefined) {
            setValue(options.defaultDate);
        }
        if (options.inline) {
            show();
        }
        return picker;
    };

    /********************************************************************************
     *
     * jQuery plugin constructor and defaults object
     *
     ********************************************************************************/

    /**
    * See (http://jquery.com/).
    * @name jQuery
    * @class
    * See the jQuery Library  (http://jquery.com/) for full details.  This just
    * documents the function and classes that are added to jQuery by this plug-in.
    */
    /**
     * See (http://jquery.com/)
     * @name fn
     * @class
     * See the jQuery Library  (http://jquery.com/) for full details.  This just
     * documents the function and classes that are added to jQuery by this plug-in.
     * @memberOf jQuery
     */
    /**
     * Show comments
     * @class datetimepicker
     * @memberOf jQuery.fn
     */
    $.fn.datetimepicker = function (options) {
        options = options || {};

        var args = Array.prototype.slice.call(arguments, 1),
            isInstance = true,
            thisMethods = ['destroy', 'hide', 'show', 'toggle'],
            returnValue;

        if (typeof options === 'object') {
            return this.each(function () {
                var $this = $(this),
                    _options;
                if (!$this.data('DateTimePicker')) {
                    // create a private copy of the defaults object
                    _options = $.extend(true, {}, $.fn.datetimepicker.defaults, options);
                    $this.data('DateTimePicker', dateTimePicker($this, _options));
                }
            });
        } else if (typeof options === 'string') {
            this.each(function () {
                var $this = $(this),
                    instance = $this.data('DateTimePicker');
                if (!instance) {
                    throw new Error('bootstrap-datetimepicker("' + options + '") method was called on an element that is not using DateTimePicker');
                }

                returnValue = instance[options].apply(instance, args);
                isInstance = returnValue === instance;
            });

            if (isInstance || $.inArray(options, thisMethods) > -1) {
                return this;
            }

            return returnValue;
        }

        throw new TypeError('Invalid arguments for DateTimePicker: ' + options);
    };

    $.fn.datetimepicker.defaults = {
        timeZone: '',
        format: false,
        dayViewHeaderFormat: 'MMMM YYYY',
        extraFormats: false,
        stepping: 1,
        minDate: false,
        maxDate: false,
        useCurrent: true,
        collapse: true,
        locale: moment.locale(),
        defaultDate: false,
        disabledDates: false,
        enabledDates: false,
        icons: {
            time: 'glyphicon glyphicon-time',
            date: 'glyphicon glyphicon-calendar',
            up: 'glyphicon glyphicon-chevron-up',
            down: 'glyphicon glyphicon-chevron-down',
            previous: 'glyphicon glyphicon-chevron-left',
            next: 'glyphicon glyphicon-chevron-right',
            today: 'glyphicon glyphicon-screenshot',
            clear: 'glyphicon glyphicon-trash',
            close: 'glyphicon glyphicon-remove'
        },
        tooltips: {
            today: 'Go to today',
            clear: 'Clear selection',
            close: 'Close the picker',
            selectMonth: 'Select Month',
            prevMonth: 'Previous Month',
            nextMonth: 'Next Month',
            selectYear: 'Select Year',
            prevYear: 'Previous Year',
            nextYear: 'Next Year',
            selectDecade: 'Select Decade',
            prevDecade: 'Previous Decade',
            nextDecade: 'Next Decade',
            prevCentury: 'Previous Century',
            nextCentury: 'Next Century',
            pickHour: 'Pick Hour',
            incrementHour: 'Increment Hour',
            decrementHour: 'Decrement Hour',
            pickMinute: 'Pick Minute',
            incrementMinute: 'Increment Minute',
            decrementMinute: 'Decrement Minute',
            pickSecond: 'Pick Second',
            incrementSecond: 'Increment Second',
            decrementSecond: 'Decrement Second',
            togglePeriod: 'Toggle Period',
            selectTime: 'Select Time'
        },
        useStrict: false,
        sideBySide: false,
        daysOfWeekDisabled: false,
        calendarWeeks: false,
        viewMode: 'days',
        toolbarPlacement: 'default',
        showTodayButton: false,
        showClear: false,
        showClose: false,
        widgetPositioning: {
            horizontal: 'auto',
            vertical: 'auto'
        },
        widgetParent: null,
        ignoreReadonly: false,
        keepOpen: false,
        focusOnShow: true,
        inline: false,
        keepInvalid: false,
        datepickerInput: '.datepickerinput',
        keyBinds: {
            up: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().subtract(7, 'd'));
                } else {
                    this.date(d.clone().add(this.stepping(), 'm'));
                }
            },
            down: function (widget) {
                if (!widget) {
                    this.show();
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().add(7, 'd'));
                } else {
                    this.date(d.clone().subtract(this.stepping(), 'm'));
                }
            },
            'control up': function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().subtract(1, 'y'));
                } else {
                    this.date(d.clone().add(1, 'h'));
                }
            },
            'control down': function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().add(1, 'y'));
                } else {
                    this.date(d.clone().subtract(1, 'h'));
                }
            },
            left: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().subtract(1, 'd'));
                }
            },
            right: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().add(1, 'd'));
                }
            },
            pageUp: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().subtract(1, 'M'));
                }
            },
            pageDown: function (widget) {
                if (!widget) {
                    return;
                }
                var d = this.date() || this.getMoment();
                if (widget.find('.datepicker').is(':visible')) {
                    this.date(d.clone().add(1, 'M'));
                }
            },
            enter: function () {
                this.hide();
            },
            escape: function () {
                this.hide();
            },
            //tab: function (widget) { //this break the flow of the form. disabling for now
            //    var toggle = widget.find('.picker-switch a[data-action="togglePicker"]');
            //    if(toggle.length > 0) toggle.click();
            //},
            'control space': function (widget) {
                if (!widget) {
                    return;
                }
                if (widget.find('.timepicker').is(':visible')) {
                    widget.find('.btn[data-action="togglePeriod"]').click();
                }
            },
            t: function () {
                this.date(this.getMoment());
            },
            'delete': function () {
                this.clear();
            }
        },
        debug: false,
        allowInputToggle: false,
        disabledTimeIntervals: false,
        disabledHours: false,
        enabledHours: false,
        viewDate: false
    };

    return $.fn.datetimepicker;
}));

// Charts
(function(){var d;window.AmCharts?d=window.AmCharts:(d={},window.AmCharts=d,d.themes={},d.maps={},d.inheriting={},d.charts=[],d.onReadyArray=[],d.useUTC=!1,d.updateRate=60,d.uid=0,d.lang={},d.translations={},d.mapTranslations={},d.windows={},d.initHandlers=[],d.amString="am",d.pmString="pm");d.Class=function(a){var b=function(){arguments[0]!==d.inheriting&&(this.events={},this.construct.apply(this,arguments))};a.inherits?(b.prototype=new a.inherits(d.inheriting),b.base=a.inherits.prototype,delete a.inherits):
(b.prototype.createEvents=function(){for(var a=0;a<arguments.length;a++)this.events[arguments[a]]=[]},b.prototype.listenTo=function(a,b,c){this.removeListener(a,b,c);a.events[b].push({handler:c,scope:this})},b.prototype.addListener=function(a,b,c){this.removeListener(this,a,b);a&&this.events[a]&&this.events[a].push({handler:b,scope:c})},b.prototype.removeListener=function(a,b,c){if(a&&a.events&&(a=a.events[b]))for(b=a.length-1;0<=b;b--)a[b].handler===c&&a.splice(b,1)},b.prototype.fire=function(a){for(var b=
this.events[a.type],c=0;c<b.length;c++){var d=b[c];d.handler.call(d.scope,a)}});for(var c in a)b.prototype[c]=a[c];return b};d.addChart=function(a){window.requestAnimationFrame?d.animationRequested||(d.animationRequested=!0,window.requestAnimationFrame(d.update)):d.updateInt||(d.updateInt=setInterval(function(){d.update()},Math.round(1E3/d.updateRate)));d.charts.push(a)};d.removeChart=function(a){for(var b=d.charts,c=b.length-1;0<=c;c--)b[c]==a&&b.splice(c,1);0===b.length&&(d.requestAnimation&&(window.cancelAnimationFrame(d.requestAnimation),
d.animationRequested=!1),d.updateInt&&(clearInterval(d.updateInt),d.updateInt=NaN))};d.isModern=!0;d.getIEVersion=function(){var a=0,b,c;"Microsoft Internet Explorer"==navigator.appName&&(b=navigator.userAgent,c=/MSIE ([0-9]{1,}[.0-9]{0,})/,null!==c.exec(b)&&(a=parseFloat(RegExp.$1)));return a};d.applyLang=function(a,b){var c=d.translations;b.dayNames=d.extend({},d.dayNames);b.shortDayNames=d.extend({},d.shortDayNames);b.monthNames=d.extend({},d.monthNames);b.shortMonthNames=d.extend({},d.shortMonthNames);
b.amString="am";b.pmString="pm";c&&(c=c[a])&&(d.lang=c,b.langObj=c,c.monthNames&&(b.dayNames=d.extend({},c.dayNames),b.shortDayNames=d.extend({},c.shortDayNames),b.monthNames=d.extend({},c.monthNames),b.shortMonthNames=d.extend({},c.shortMonthNames)),c.am&&(b.amString=c.am),c.pm&&(b.pmString=c.pm));d.amString=b.amString;d.pmString=b.pmString};d.IEversion=d.getIEVersion();9>d.IEversion&&0<d.IEversion&&(d.isModern=!1,d.isIE=!0);d.dx=0;d.dy=0;if(document.addEventListener||window.opera)d.isNN=!0,d.isIE=
!1,d.dx=.5,d.dy=.5;document.attachEvent&&(d.isNN=!1,d.isIE=!0,d.isModern||(d.dx=0,d.dy=0));window.chrome&&(d.chrome=!0);d.handleMouseUp=function(a){for(var b=d.charts,c=0;c<b.length;c++){var e=b[c];e&&e.handleReleaseOutside&&e.handleReleaseOutside(a)}};d.handleMouseMove=function(a){for(var b=d.charts,c=0;c<b.length;c++){var e=b[c];e&&e.handleMouseMove&&e.handleMouseMove(a)}};d.handleWheel=function(a){for(var b=d.charts,c=0;c<b.length;c++){var e=b[c];if(e&&e.mouseIsOver){(e.mouseWheelScrollEnabled||
e.mouseWheelZoomEnabled)&&e.handleWheel&&e.handleWheel(a);break}}};d.resetMouseOver=function(){for(var a=d.charts,b=0;b<a.length;b++){var c=a[b];c&&(c.mouseIsOver=!1)}};d.ready=function(a){d.onReadyArray.push(a)};d.handleLoad=function(){d.isReady=!0;for(var a=d.onReadyArray,b=0;b<a.length;b++){var c=a[b];isNaN(d.processDelay)?c():setTimeout(c,d.processDelay*b)}};d.addInitHandler=function(a,b){d.initHandlers.push({method:a,types:b})};d.callInitHandler=function(a){var b=d.initHandlers;if(d.initHandlers)for(var c=
0;c<b.length;c++){var e=b[c];e.types?d.isInArray(e.types,a.type)&&e.method(a):e.method(a)}};d.getUniqueId=function(){d.uid++;return"AmChartsEl-"+d.uid};d.isNN&&(document.addEventListener("mousemove",d.handleMouseMove),document.addEventListener("mouseup",d.handleMouseUp,!0),window.addEventListener("load",d.handleLoad,!0));d.isIE&&(document.attachEvent("onmousemove",d.handleMouseMove),document.attachEvent("onmouseup",d.handleMouseUp),window.attachEvent("onload",d.handleLoad));d.addWheelListeners=function(){d.wheelIsListened||
(d.isNN&&(window.addEventListener("DOMMouseScroll",d.handleWheel,!0),document.addEventListener("mousewheel",d.handleWheel,!0)),d.isIE&&document.attachEvent("onmousewheel",d.handleWheel));d.wheelIsListened=!0};d.clear=function(){var a=d.charts;if(a)for(var b=a.length-1;0<=b;b--)a[b].clear();d.updateInt&&clearInterval(d.updateInt);d.requestAnimation&&window.cancelAnimationFrame(d.requestAnimation);d.charts=[];d.isNN&&(document.removeEventListener("mousemove",d.handleMouseMove,!0),document.removeEventListener("mouseup",
d.handleMouseUp,!0),window.removeEventListener("load",d.handleLoad,!0),window.removeEventListener("DOMMouseScroll",d.handleWheel,!0),document.removeEventListener("mousewheel",d.handleWheel,!0));d.isIE&&(document.detachEvent("onmousemove",d.handleMouseMove),document.detachEvent("onmouseup",d.handleMouseUp),window.detachEvent("onload",d.handleLoad))};d.makeChart=function(a,b,c){var e=b.type,h=b.theme;d.isString(h)&&(h=d.themes[h],b.theme=h);var f;switch(e){case "serial":f=new d.AmSerialChart(h);break;
case "xy":f=new d.AmXYChart(h);break;case "pie":f=new d.AmPieChart(h);break;case "radar":f=new d.AmRadarChart(h);break;case "gauge":f=new d.AmAngularGauge(h);break;case "funnel":f=new d.AmFunnelChart(h);break;case "map":f=new d.AmMap(h);break;case "stock":f=new d.AmStockChart(h);break;case "gantt":f=new d.AmGanttChart(h)}d.extend(f,b);d.isReady?isNaN(c)?f.write(a):setTimeout(function(){d.realWrite(f,a)},c):d.ready(function(){isNaN(c)?f.write(a):setTimeout(function(){d.realWrite(f,a)},c)});return f};
d.realWrite=function(a,b){a.write(b)};d.updateCount=0;d.validateAt=Math.round(d.updateRate/10);d.update=function(){var a=d.charts;d.updateCount++;var b=!1;d.updateCount==d.validateAt&&(b=!0,d.updateCount=0);if(a)for(var c=a.length-1;0<=c;c--)a[c].update&&a[c].update(),b&&(a[c].autoResize?a[c].validateSize&&a[c].validateSize():a[c].premeasure&&a[c].premeasure());window.requestAnimationFrame&&(d.requestAnimation=window.requestAnimationFrame(d.update))};"complete"==document.readyState&&d.handleLoad()})();(function(){var d=window.AmCharts;d.toBoolean=function(a,b){if(void 0===a)return b;switch(String(a).toLowerCase()){case "true":case "yes":case "1":return!0;case "false":case "no":case "0":case null:return!1;default:return!!a}};d.removeFromArray=function(a,b){var c;if(void 0!==b&&void 0!==a)for(c=a.length-1;0<=c;c--)a[c]==b&&a.splice(c,1)};d.getPath=function(){var a=document.getElementsByTagName("script");if(a)for(var b=0;b<a.length;b++){var c=a[b].src;if(-1!==c.search(/\/(amcharts|ammap)\.js/))return c.replace(/\/(amcharts|ammap)\.js.*/,
"/")}};d.normalizeUrl=function(a){return""!==a&&-1===a.search(/\/$/)?a+"/":a};d.isAbsolute=function(a){return 0===a.search(/^http[s]?:|^\//)};d.isInArray=function(a,b){for(var c=0;c<a.length;c++)if(a[c]==b)return!0;return!1};d.getDecimals=function(a){var b=0;isNaN(a)||(a=String(a),-1!=a.indexOf("e-")?b=Number(a.split("-")[1]):-1!=a.indexOf(".")&&(b=a.split(".")[1].length));return b};d.wordwrap=function(a,b,c,e){var h,f,g,k;a+="";if(1>b)return a;h=-1;for(a=(k=a.split(/\r\n|\n|\r/)).length;++h<a;k[h]+=
g){g=k[h];for(k[h]="";g.length>b;k[h]+=d.trim(g.slice(0,f))+((g=g.slice(f)).length?c:""))f=2==e||(f=g.slice(0,b+1).match(/\S*(\s)?$/))[1]?b:f.input.length-f[0].length||1==e&&b||f.input.length+(f=g.slice(b).match(/^\S*/))[0].length;g=d.trim(g)}return k.join(c)};d.trim=function(a){return a.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")};d.wrappedText=function(a,b,c,e,h,f,g,k){var l=d.text(a,b,c,e,h,f,g);if(l){var m=l.getBBox();if(m.width>k){var p="\n";d.isModern||(p="<br>");k=Math.floor(k/(m.width/
b.length));2<k&&(k-=2);b=d.wordwrap(b,k,p,!0);l.remove();l=d.text(a,b,c,e,h,f,g)}}return l};d.getStyle=function(a,b){var c="";if(document.defaultView&&document.defaultView.getComputedStyle)try{c=document.defaultView.getComputedStyle(a,"").getPropertyValue(b)}catch(e){}else a.currentStyle&&(b=b.replace(/\-(\w)/g,function(a,b){return b.toUpperCase()}),c=a.currentStyle[b]);return c};d.removePx=function(a){if(void 0!==a)return Number(a.substring(0,a.length-2))};d.getURL=function(a,b){if(a)if("_self"!=
b&&b)if("_top"==b&&window.top)window.top.location.href=a;else if("_parent"==b&&window.parent)window.parent.location.href=a;else if("_blank"==b)window.open(a);else{var c=document.getElementsByName(b)[0];c?c.src=a:(c=d.windows[b])?c.opener&&!c.opener.closed?c.location.href=a:d.windows[b]=window.open(a):d.windows[b]=window.open(a)}else window.location.href=a};d.ifArray=function(a){return a&&"object"==typeof a&&0<a.length?!0:!1};d.callMethod=function(a,b){var c;for(c=0;c<b.length;c++){var e=b[c];if(e){if(e[a])e[a]();
var d=e.length;if(0<d){var f;for(f=0;f<d;f++){var g=e[f];if(g&&g[a])g[a]()}}}}};d.toNumber=function(a){return"number"==typeof a?a:Number(String(a).replace(/[^0-9\-.]+/g,""))};d.toColor=function(a){if(""!==a&&void 0!==a)if(-1!=a.indexOf(",")){a=a.split(",");var b;for(b=0;b<a.length;b++){var c=a[b].substring(a[b].length-6,a[b].length);a[b]="#"+c}}else a=a.substring(a.length-6,a.length),a="#"+a;return a};d.toCoordinate=function(a,b,c){var e;void 0!==a&&(a=String(a),c&&c<b&&(b=c),e=Number(a),-1!=a.indexOf("!")&&
(e=b-Number(a.substr(1))),-1!=a.indexOf("%")&&(e=b*Number(a.substr(0,a.length-1))/100));return e};d.fitToBounds=function(a,b,c){a<b&&(a=b);a>c&&(a=c);return a};d.isDefined=function(a){return void 0===a?!1:!0};d.stripNumbers=function(a){return a.replace(/[0-9]+/g,"")};d.roundTo=function(a,b){if(0>b)return a;var c=Math.pow(10,b);return Math.round(a*c)/c};d.toFixed=function(a,b){var c=String(Math.round(a*Math.pow(10,b)));if(0<b){var e=c.length;if(e<b){var d;for(d=0;d<b-e;d++)c="0"+c}e=c.substring(0,
c.length-b);""===e&&(e=0);return e+"."+c.substring(c.length-b,c.length)}return String(c)};d.formatDuration=function(a,b,c,e,h,f){var g=d.intervals,k=f.decimalSeparator;if(a>=g[b].contains){var l=a-Math.floor(a/g[b].contains)*g[b].contains;"ss"==b?(l=d.formatNumber(l,f),1==l.split(k)[0].length&&(l="0"+l)):l=d.roundTo(l,f.precision);("mm"==b||"hh"==b)&&10>l&&(l="0"+l);c=l+""+e[b]+""+c;a=Math.floor(a/g[b].contains);b=g[b].nextInterval;return d.formatDuration(a,b,c,e,h,f)}"ss"==b&&(a=d.formatNumber(a,
f),1==a.split(k)[0].length&&(a="0"+a));("mm"==b||"hh"==b)&&10>a&&(a="0"+a);c=a+""+e[b]+""+c;if(g[h].count>g[b].count)for(a=g[b].count;a<g[h].count;a++)b=g[b].nextInterval,"ss"==b||"mm"==b||"hh"==b?c="00"+e[b]+""+c:"DD"==b&&(c="0"+e[b]+""+c);":"==c.charAt(c.length-1)&&(c=c.substring(0,c.length-1));return c};d.formatNumber=function(a,b,c,e,h){a=d.roundTo(a,b.precision);isNaN(c)&&(c=b.precision);var f=b.decimalSeparator;b=b.thousandsSeparator;var g;g=0>a?"-":"";a=Math.abs(a);var k=String(a),l=!1;-1!=
k.indexOf("e")&&(l=!0);0<=c&&!l&&(k=d.toFixed(a,c));var m="";if(l)m=k;else{var k=k.split("."),l=String(k[0]),p;for(p=l.length;0<=p;p-=3)m=p!=l.length?0!==p?l.substring(p-3,p)+b+m:l.substring(p-3,p)+m:l.substring(p-3,p);void 0!==k[1]&&(m=m+f+k[1]);void 0!==c&&0<c&&"0"!=m&&(m=d.addZeroes(m,f,c))}m=g+m;""===g&&!0===e&&0!==a&&(m="+"+m);!0===h&&(m+="%");return m};d.addZeroes=function(a,b,c){a=a.split(b);void 0===a[1]&&0<c&&(a[1]="0");return a[1].length<c?(a[1]+="0",d.addZeroes(a[0]+b+a[1],b,c)):void 0!==
a[1]?a[0]+b+a[1]:a[0]};d.scientificToNormal=function(a){var b;a=String(a).split("e");var c;if("-"==a[1].substr(0,1)){b="0.";for(c=0;c<Math.abs(Number(a[1]))-1;c++)b+="0";b+=a[0].split(".").join("")}else{var e=0;b=a[0].split(".");b[1]&&(e=b[1].length);b=a[0].split(".").join("");for(c=0;c<Math.abs(Number(a[1]))-e;c++)b+="0"}return b};d.toScientific=function(a,b){if(0===a)return"0";var c=Math.floor(Math.log(Math.abs(a))*Math.LOG10E),e=String(e).split(".").join(b);return String(e)+"e"+c};d.randomColor=
function(){return"#"+("00000"+(16777216*Math.random()<<0).toString(16)).substr(-6)};d.hitTest=function(a,b,c){var e=!1,h=a.x,f=a.x+a.width,g=a.y,k=a.y+a.height,l=d.isInRectangle;e||(e=l(h,g,b));e||(e=l(h,k,b));e||(e=l(f,g,b));e||(e=l(f,k,b));e||!0===c||(e=d.hitTest(b,a,!0));return e};d.isInRectangle=function(a,b,c){return a>=c.x-5&&a<=c.x+c.width+5&&b>=c.y-5&&b<=c.y+c.height+5?!0:!1};d.isPercents=function(a){if(-1!=String(a).indexOf("%"))return!0};d.formatValue=function(a,b,c,e,h,f,g,k){if(b){void 0===
h&&(h="");var l;for(l=0;l<c.length;l++){var m=c[l],p=b[m];void 0!==p&&(p=f?d.addPrefix(p,k,g,e):d.formatNumber(p,e),a=a.replace(new RegExp("\\[\\["+h+""+m+"\\]\\]","g"),p))}}return a};d.formatDataContextValue=function(a,b){if(a){var c=a.match(/\[\[.*?\]\]/g),e;for(e=0;e<c.length;e++){var d=c[e],d=d.substr(2,d.length-4);void 0!==b[d]&&(a=a.replace(new RegExp("\\[\\["+d+"\\]\\]","g"),b[d]))}}return a};d.massReplace=function(a,b){for(var c in b)if(b.hasOwnProperty(c)){var e=b[c];void 0===e&&(e="");a=
a.replace(c,e)}return a};d.cleanFromEmpty=function(a){return a.replace(/\[\[[^\]]*\]\]/g,"")};d.addPrefix=function(a,b,c,e,h){var f=d.formatNumber(a,e),g="",k,l,m;if(0===a)return"0";0>a&&(g="-");a=Math.abs(a);if(1<a)for(k=b.length-1;-1<k;k--){if(a>=b[k].number&&(l=a/b[k].number,m=Number(e.precision),1>m&&(m=1),c=d.roundTo(l,m),m=d.formatNumber(c,{precision:-1,decimalSeparator:e.decimalSeparator,thousandsSeparator:e.thousandsSeparator}),!h||l==c)){f=g+""+m+""+b[k].prefix;break}}else for(k=0;k<c.length;k++)if(a<=
c[k].number){l=a/c[k].number;m=Math.abs(Math.floor(Math.log(l)*Math.LOG10E));l=d.roundTo(l,m);f=g+""+l+""+c[k].prefix;break}return f};d.remove=function(a){a&&a.remove()};d.getEffect=function(a){">"==a&&(a="easeOutSine");"<"==a&&(a="easeInSine");"elastic"==a&&(a="easeOutElastic");return a};d.getObjById=function(a,b){var c,e;for(e=0;e<a.length;e++){var d=a[e];if(d.id==b){c=d;break}}return c};d.applyTheme=function(a,b,c){b||(b=d.theme);try{b=JSON.parse(JSON.stringify(b))}catch(e){}b&&b[c]&&d.extend(a,
b[c])};d.isString=function(a){return"string"==typeof a?!0:!1};d.extend=function(a,b,c){var e;a||(a={});for(e in b)c?a.hasOwnProperty(e)||(a[e]=b[e]):a[e]=b[e];return a};d.copyProperties=function(a,b){for(var c in a)a.hasOwnProperty(c)&&"events"!=c&&void 0!==a[c]&&"function"!=typeof a[c]&&"cname"!=c&&(b[c]=a[c])};d.processObject=function(a,b,c,e){if(!1===a instanceof b&&(a=e?d.extend(new b(c),a):d.extend(a,new b(c),!0),a.listeners))for(var h in a.listeners)b=a.listeners[h],a.addListener(b.event,b.method);
return a};d.fixNewLines=function(a){var b=RegExp("\\n","g");a&&(a=a.replace(b,"<br />"));return a};d.fixBrakes=function(a){if(d.isModern){var b=RegExp("<br>","g");a&&(a=a.replace(b,"\n"))}else a=d.fixNewLines(a);return a};d.deleteObject=function(a,b){if(a){if(void 0===b||null===b)b=20;if(0!==b)if("[object Array]"===Object.prototype.toString.call(a))for(var c=0;c<a.length;c++)d.deleteObject(a[c],b-1),a[c]=null;else if(a&&!a.tagName)try{for(c in a.theme=null,a)a[c]&&("object"==typeof a[c]&&d.deleteObject(a[c],
b-1),"function"!=typeof a[c]&&(a[c]=null))}catch(e){}}};d.bounce=function(a,b,c,e,d){return(b/=d)<1/2.75?7.5625*e*b*b+c:b<2/2.75?e*(7.5625*(b-=1.5/2.75)*b+.75)+c:b<2.5/2.75?e*(7.5625*(b-=2.25/2.75)*b+.9375)+c:e*(7.5625*(b-=2.625/2.75)*b+.984375)+c};d.easeInOutQuad=function(a,b,c,e,d){b/=d/2;if(1>b)return e/2*b*b+c;b--;return-e/2*(b*(b-2)-1)+c};d.easeInSine=function(a,b,c,e,d){return-e*Math.cos(b/d*(Math.PI/2))+e+c};d.easeOutSine=function(a,b,c,e,d){return e*Math.sin(b/d*(Math.PI/2))+c};d.easeOutElastic=
function(a,b,c,e,d){a=1.70158;var f=0,g=e;if(0===b)return c;if(1==(b/=d))return c+e;f||(f=.3*d);g<Math.abs(e)?(g=e,a=f/4):a=f/(2*Math.PI)*Math.asin(e/g);return g*Math.pow(2,-10*b)*Math.sin(2*(b*d-a)*Math.PI/f)+e+c};d.fixStepE=function(a){a=a.toExponential(0).split("e");var b=Number(a[1]);9==Number(a[0])&&b++;return d.generateNumber(1,b)};d.generateNumber=function(a,b){var c="",e;e=0>b?Math.abs(b)-1:Math.abs(b);var d;for(d=0;d<e;d++)c+="0";return 0>b?Number("0."+c+String(a)):Number(String(a)+c)};d.setCN=
function(a,b,c,e){if(a.addClassNames&&b&&(b=b.node)&&c){var d=b.getAttribute("class");a=a.classNamePrefix+"-";e&&(a="");d?b.setAttribute("class",d+" "+a+c):b.setAttribute("class",a+c)}};d.removeCN=function(a,b,c){b&&(b=b.node)&&c&&(b=b.classList)&&b.remove(a.classNamePrefix+"-"+c)};d.parseDefs=function(a,b){for(var c in a){var e=typeof a[c];if(0<a[c].length&&"object"==e)for(var h=0;h<a[c].length;h++)e=document.createElementNS(d.SVG_NS,c),b.appendChild(e),d.parseDefs(a[c][h],e);else"object"==e?(e=
document.createElementNS(d.SVG_NS,c),b.appendChild(e),d.parseDefs(a[c],e)):b.setAttribute(c,a[c])}}})();(function(){var d=window.AmCharts;d.AxisBase=d.Class({construct:function(a){this.createEvents("clickItem","rollOverItem","rollOutItem","rollOverGuide","rollOutGuide","clickGuide");this.titleDY=this.y=this.x=this.dy=this.dx=0;this.axisThickness=1;this.axisColor="#000000";this.axisAlpha=1;this.gridCount=this.tickLength=5;this.gridAlpha=.15;this.gridThickness=1;this.gridColor="#000000";this.dashLength=0;this.labelFrequency=1;this.showLastLabel=this.showFirstLabel=!0;this.fillColor="#FFFFFF";this.fillAlpha=
0;this.labelsEnabled=!0;this.labelRotation=0;this.autoGridCount=!0;this.offset=0;this.guides=[];this.visible=!0;this.counter=0;this.guides=[];this.ignoreAxisWidth=this.inside=!1;this.minHorizontalGap=75;this.minVerticalGap=35;this.titleBold=!0;this.minorGridEnabled=!1;this.minorGridAlpha=.07;this.autoWrap=!1;this.titleAlign="middle";this.labelOffset=0;this.bcn="axis-";this.centerLabels=!1;this.firstDayOfWeek=1;this.centerLabelOnFullPeriod=this.markPeriodChange=this.boldPeriodBeginning=!0;this.periods=
[{period:"fff",count:1},{period:"fff",count:5},{period:"fff",count:10},{period:"fff",count:50},{period:"fff",count:100},{period:"fff",count:500},{period:"ss",count:1},{period:"ss",count:5},{period:"ss",count:10},{period:"ss",count:30},{period:"mm",count:1},{period:"mm",count:5},{period:"mm",count:10},{period:"mm",count:30},{period:"hh",count:1},{period:"hh",count:3},{period:"hh",count:6},{period:"hh",count:12},{period:"DD",count:1},{period:"DD",count:2},{period:"DD",count:3},{period:"DD",count:4},
{period:"DD",count:5},{period:"WW",count:1},{period:"MM",count:1},{period:"MM",count:2},{period:"MM",count:3},{period:"MM",count:6},{period:"YYYY",count:1},{period:"YYYY",count:2},{period:"YYYY",count:5},{period:"YYYY",count:10},{period:"YYYY",count:50},{period:"YYYY",count:100}];this.dateFormats=[{period:"fff",format:"NN:SS.QQQ"},{period:"ss",format:"JJ:NN:SS"},{period:"mm",format:"JJ:NN"},{period:"hh",format:"JJ:NN"},{period:"DD",format:"MMM DD"},{period:"WW",format:"MMM DD"},{period:"MM",format:"MMM"},
{period:"YYYY",format:"YYYY"}];this.nextPeriod={fff:"ss",ss:"mm",mm:"hh",hh:"DD",DD:"MM",MM:"YYYY"};d.applyTheme(this,a,"AxisBase")},zoom:function(a,b){this.start=a;this.end=b;this.dataChanged=!0;this.draw()},fixAxisPosition:function(){var a=this.position;"H"==this.orientation?("left"==a&&(a="bottom"),"right"==a&&(a="top")):("bottom"==a&&(a="left"),"top"==a&&(a="right"));this.position=a},init:function(){this.createBalloon()},draw:function(){var a=this.chart;this.prevBY=this.prevBX=NaN;this.allLabels=
[];this.counter=0;this.destroy();this.fixAxisPosition();this.setBalloonBounds();this.labels=[];var b=a.container,c=b.set();a.gridSet.push(c);this.set=c;b=b.set();a.axesLabelsSet.push(b);this.labelsSet=b;this.axisLine=new this.axisRenderer(this);this.autoGridCount?("V"==this.orientation?(a=this.height/this.minVerticalGap,3>a&&(a=3)):a=this.width/this.minHorizontalGap,this.gridCountR=Math.max(a,1)):this.gridCountR=this.gridCount;this.axisWidth=this.axisLine.axisWidth;this.addTitle()},setOrientation:function(a){this.orientation=
a?"H":"V"},addTitle:function(){var a=this.title;this.titleLabel=null;if(a){var b=this.chart,c=this.titleColor;void 0===c&&(c=b.color);var e=this.titleFontSize;isNaN(e)&&(e=b.fontSize+1);a=d.text(b.container,a,c,b.fontFamily,e,this.titleAlign,this.titleBold);d.setCN(b,a,this.bcn+"title");this.titleLabel=a}},positionTitle:function(){var a=this.titleLabel;if(a){var b,c,e=this.labelsSet,h={};0<e.length()?h=e.getBBox():(h.x=0,h.y=0,h.width=this.width,h.height=this.height,d.VML&&(h.y+=this.y,h.x+=this.x));
e.push(a);var e=h.x,f=h.y;d.VML&&(f-=this.y,e-=this.x);var g=h.width,h=h.height,k=this.width,l=this.height,m=0,p=a.getBBox().height/2,q=this.inside,n=this.titleAlign;switch(this.position){case "top":b="left"==n?-1:"right"==n?k:k/2;c=f-10-p;break;case "bottom":b="left"==n?-1:"right"==n?k:k/2;c=f+h+10+p;break;case "left":b=e-10-p;q&&(b-=5);m=-90;c=("left"==n?l+1:"right"==n?-1:l/2)+this.titleDY;break;case "right":b=e+g+10+p,q&&(b+=7),c=("left"==n?l+2:"right"==n?-2:l/2)+this.titleDY,m=-90}this.marginsChanged?
(a.translate(b,c),this.tx=b,this.ty=c):a.translate(this.tx,this.ty);this.marginsChanged=!1;isNaN(this.titleRotation)||(m=this.titleRotation);0!==m&&a.rotate(m)}},pushAxisItem:function(a,b){var c=this,e=a.graphics();0<e.length()&&(b?c.labelsSet.push(e):c.set.push(e));if(e=a.getLabel())c.labelsSet.push(e),e.click(function(b){c.handleMouse(b,a,"clickItem")}).touchend(function(b){c.handleMouse(b,a,"clickItem")}).mouseover(function(b){c.handleMouse(b,a,"rollOverItem")}).mouseout(function(b){c.handleMouse(b,
a,"rollOutItem")})},handleMouse:function(a,b,c){this.fire({type:c,value:b.value,serialDataItem:b.serialDataItem,axis:this,target:b.label,chart:this.chart,event:a})},addGuide:function(a){for(var b=this.guides,c=!1,e=b.length,h=0;h<b.length;h++)b[h]==a&&(c=!0,e=h);a=d.processObject(a,d.Guide,this.theme);a.id||(a.id="guideAuto"+e+"_"+(new Date).getTime());c||b.push(a)},removeGuide:function(a){var b=this.guides,c;for(c=0;c<b.length;c++)b[c]==a&&b.splice(c,1)},handleGuideOver:function(a){clearTimeout(this.chart.hoverInt);
var b=a.graphics.getBBox(),c=this.x+b.x+b.width/2,b=this.y+b.y+b.height/2,e=a.fillColor;void 0===e&&(e=a.lineColor);this.chart.showBalloon(a.balloonText,e,!0,c,b);this.fire({type:"rollOverGuide",guide:a,chart:this.chart})},handleGuideOut:function(a){this.chart.hideBalloon();this.fire({type:"rollOutGuide",guide:a,chart:this.chart})},handleGuideClick:function(a){this.chart.hideBalloon();this.fire({type:"clickGuide",guide:a,chart:this.chart})},addEventListeners:function(a,b){var c=this;a.mouseover(function(){c.handleGuideOver(b)});
a.mouseup(function(){c.handleGuideClick(b)});a.touchstart(function(){c.handleGuideOver(b)});a.mouseout(function(){c.handleGuideOut(b)})},getBBox:function(){var a;this.labelsSet&&(a=this.labelsSet.getBBox());a?d.VML||(a={x:a.x+this.x,y:a.y+this.y,width:a.width,height:a.height}):a={x:0,y:0,width:0,height:0};return a},destroy:function(){d.remove(this.set);d.remove(this.labelsSet);var a=this.axisLine;a&&d.remove(a.axisSet);d.remove(this.grid0)},chooseMinorFrequency:function(a){for(var b=10;0<b;b--)if(a/
b==Math.round(a/b))return a/b},parseDatesDraw:function(){var a,b=this.chart,c=this.showFirstLabel,e=this.showLastLabel,h,f="",g=d.extractPeriod(this.minPeriod),k=d.getPeriodDuration(g.period,g.count),l,m,p,q,n,t=this.firstDayOfWeek,r=this.boldPeriodBeginning;a=this.minorGridEnabled;var w,z=this.gridAlpha,x,u=this.choosePeriod(0),A=u.period,u=u.count,y=d.getPeriodDuration(A,u);y<k&&(A=g.period,u=g.count,y=k);g=A;"WW"==g&&(g="DD");this.stepWidth=this.getStepWidth(this.timeDifference);var B=Math.ceil(this.timeDifference/
y)+5,D=l=d.resetDateToMin(new Date(this.startTime-y),A,u,t).getTime();if(g==A&&1==u&&this.centerLabelOnFullPeriod||this.autoWrap||this.centerLabels)p=y*this.stepWidth,this.autoWrap&&!this.centerLabels&&(p=-p);this.cellWidth=k*this.stepWidth;q=Math.round(l/y);k=-1;q/2==Math.round(q/2)&&(k=-2,l-=y);q=this.firstTime;var C=0,I=0;a&&1<u&&(w=this.chooseMinorFrequency(u),x=d.getPeriodDuration(A,w),"DD"==A&&(x+=d.getPeriodDuration("hh")),"fff"==A&&(x=1));if(0<this.gridCountR)for(B-5-k>this.autoRotateCount&&
!isNaN(this.autoRotateAngle)&&(this.labelRotationR=this.autoRotateAngle),a=k;a<=B;a++){n=q+y*(a+Math.floor((D-q)/y))-C;"DD"==A&&(n+=36E5);n=d.resetDateToMin(new Date(n),A,u,t).getTime();"MM"==A&&(h=(n-l)/y,1.5<=(n-l)/y&&(n=n-(h-1)*y+d.getPeriodDuration("DD",3),n=d.resetDateToMin(new Date(n),A,1).getTime(),C+=y));h=(n-this.startTime)*this.stepWidth;if("radar"==b.type){if(h=this.axisWidth-h,0>h||h>this.axisWidth)continue}else this.rotate?"date"==this.type&&"middle"==this.gridPosition&&(I=-y*this.stepWidth/
2):"date"==this.type&&(h=this.axisWidth-h);f=!1;this.nextPeriod[g]&&(f=this.checkPeriodChange(this.nextPeriod[g],1,n,l,g));l=!1;f&&this.markPeriodChange?(f=this.dateFormatsObject[this.nextPeriod[g]],this.twoLineMode&&(f=this.dateFormatsObject[g]+"\n"+f,f=d.fixBrakes(f)),l=!0):f=this.dateFormatsObject[g];r||(l=!1);this.currentDateFormat=f;f=d.formatDate(new Date(n),f,b);if(a==k&&!c||a==B&&!e)f=" ";this.labelFunction&&(f=this.labelFunction(f,new Date(n),this,A,u,m).toString());this.boldLabels&&(l=!0);
m=new this.axisItemRenderer(this,h,f,!1,p,I,!1,l);this.pushAxisItem(m);m=l=n;if(!isNaN(w))for(h=1;h<u;h+=w)this.gridAlpha=this.minorGridAlpha,f=n+x*h,f=d.resetDateToMin(new Date(f),A,w,t).getTime(),f=new this.axisItemRenderer(this,(f-this.startTime)*this.stepWidth,void 0,void 0,void 0,void 0,void 0,void 0,void 0,!0),this.pushAxisItem(f);this.gridAlpha=z}},choosePeriod:function(a){var b=d.getPeriodDuration(this.periods[a].period,this.periods[a].count),c=this.periods;return this.timeDifference<b&&0<
a?c[a-1]:Math.ceil(this.timeDifference/b)<=this.gridCountR?c[a]:a+1<c.length?this.choosePeriod(a+1):c[a]},getStepWidth:function(a){var b;this.startOnAxis?(b=this.axisWidth/(a-1),1==a&&(b=this.axisWidth)):b=this.axisWidth/a;return b},timeZoom:function(a,b){this.startTime=a;this.endTime=b},minDuration:function(){var a=d.extractPeriod(this.minPeriod);return d.getPeriodDuration(a.period,a.count)},checkPeriodChange:function(a,b,c,e,h){c=new Date(c);var f=new Date(e),g=this.firstDayOfWeek;e=b;"DD"==a&&
(b=1);c=d.resetDateToMin(c,a,b,g).getTime();b=d.resetDateToMin(f,a,b,g).getTime();return"DD"==a&&"hh"!=h&&c-b<d.getPeriodDuration(a,e)-d.getPeriodDuration("hh",1)?!1:c!=b?!0:!1},generateDFObject:function(){this.dateFormatsObject={};var a;for(a=0;a<this.dateFormats.length;a++){var b=this.dateFormats[a];this.dateFormatsObject[b.period]=b.format}},hideBalloon:function(){this.balloon&&this.balloon.hide&&this.balloon.hide();this.prevBY=this.prevBX=NaN},formatBalloonText:function(a){return a},showBalloon:function(a,
b,c,e){var d=this.offset;switch(this.position){case "bottom":b=this.height+d;break;case "top":b=-d;break;case "left":a=-d;break;case "right":a=this.width+d}c||(c=this.currentDateFormat);if("V"==this.orientation){if(0>b||b>this.height)return;if(isNaN(b)){this.hideBalloon();return}b=this.adjustBalloonCoordinate(b,e);e=this.coordinateToValue(b)}else{if(0>a||a>this.width)return;if(isNaN(a)){this.hideBalloon();return}a=this.adjustBalloonCoordinate(a,e);e=this.coordinateToValue(a)}var f;if(d=this.chart.chartCursor)f=
d.index;if(this.balloon&&void 0!==e&&this.balloon.enabled){if(this.balloonTextFunction){if("date"==this.type||!0===this.parseDates)e=new Date(e);e=this.balloonTextFunction(e)}else this.balloonText?e=this.formatBalloonText(this.balloonText,f,c):isNaN(e)||(e=this.formatValue(e,c));if(a!=this.prevBX||b!=this.prevBY)this.balloon.setPosition(a,b),this.prevBX=a,this.prevBY=b,e&&this.balloon.showBalloon(e)}},adjustBalloonCoordinate:function(a){return a},createBalloon:function(){var a=this.chart,b=a.chartCursor;
b&&(b=b.cursorPosition,"mouse"!=b&&(this.stickBalloonToCategory=!0),"start"==b&&(this.stickBalloonToStart=!0),"ValueAxis"==this.cname&&(this.stickBalloonToCategory=!1));this.balloon&&(this.balloon.destroy&&this.balloon.destroy(),d.extend(this.balloon,a.balloon,!0))},setBalloonBounds:function(){var a=this.balloon;if(a){var b=this.chart;a.cornerRadius=0;a.shadowAlpha=0;a.borderThickness=1;a.borderAlpha=1;a.adjustBorderColor=!1;a.showBullet=!1;this.balloon=a;a.chart=b;a.mainSet=b.plotBalloonsSet;a.pointerWidth=
this.tickLength;if(this.parseDates||"date"==this.type)a.pointerWidth=0;a.className=this.id;b="V";"V"==this.orientation&&(b="H");this.stickBalloonToCategory||(a.animationDuration=0);var c,e,d,f,g=this.inside,k=this.width,l=this.height;switch(this.position){case "bottom":c=0;e=k;g?(d=0,f=l):(d=l,f=l+1E3);break;case "top":c=0;e=k;g?(d=0,f=l):(d=-1E3,f=0);break;case "left":d=0;f=l;g?(c=0,e=k):(c=-1E3,e=0);break;case "right":d=0,f=l,g?(c=0,e=k):(c=k,e=k+1E3)}a.drop||(a.pointerOrientation=b);a.setBounds(c,
d,e,f)}}})})();(function(){var d=window.AmCharts;d.ValueAxis=d.Class({inherits:d.AxisBase,construct:function(a){this.cname="ValueAxis";this.createEvents("axisChanged","logarithmicAxisFailed","axisZoomed","axisIntZoomed");d.ValueAxis.base.construct.call(this,a);this.dataChanged=!0;this.stackType="none";this.position="left";this.unitPosition="right";this.includeAllValues=this.recalculateToPercents=this.includeHidden=this.includeGuidesInMinMax=this.integersOnly=!1;this.durationUnits={DD:"d. ",hh:":",mm:":",ss:""};
this.scrollbar=!1;this.baseValue=0;this.radarCategoriesEnabled=!0;this.axisFrequency=1;this.gridType="polygons";this.useScientificNotation=!1;this.axisTitleOffset=10;this.pointPosition="axis";this.minMaxMultiplier=1;this.logGridLimit=2;this.totalTextOffset=this.treatZeroAs=0;this.minPeriod="ss";this.relativeStart=0;this.relativeEnd=1;d.applyTheme(this,a,this.cname)},updateData:function(){0>=this.gridCountR&&(this.gridCountR=1);this.totals=[];this.data=this.chart.chartData;var a=this.chart;"xy"!=a.type&&
(this.stackGraphs("smoothedLine"),this.stackGraphs("line"),this.stackGraphs("column"),this.stackGraphs("step"));this.recalculateToPercents&&this.recalculate();this.synchronizationMultiplier&&this.synchronizeWith?(d.isString(this.synchronizeWith)&&(this.synchronizeWith=a.getValueAxisById(this.synchronizeWith)),this.synchronizeWith&&(this.synchronizeWithAxis(this.synchronizeWith),this.foundGraphs=!0)):(this.foundGraphs=!1,this.getMinMax(),0===this.start&&this.end==this.data.length-1&&isNaN(this.minZoom)&&
isNaN(this.maxZoom)&&(this.fullMin=this.min,this.fullMax=this.max,"date"!=this.type&&this.strictMinMax&&(isNaN(this.minimum)||(this.fullMin=this.minimum),isNaN(this.maximum)||(this.fullMax=this.maximum)),this.logarithmic&&(this.fullMin=this.logMin,0===this.fullMin&&(this.fullMin=this.treatZeroAs)),"date"==this.type&&(this.minimumDate||(this.fullMin=this.minRR),this.maximumDate||(this.fullMax=this.maxRR),this.strictMinMax&&(this.minimumDate&&(this.fullMin=this.minimumDate.getTime()),this.maximumDate&&
(this.fullMax=this.maximumDate.getTime())))))},draw:function(){d.ValueAxis.base.draw.call(this);var a=this.chart,b=this.set;this.labelRotationR=this.labelRotation;d.setCN(a,this.set,"value-axis value-axis-"+this.id);d.setCN(a,this.labelsSet,"value-axis value-axis-"+this.id);d.setCN(a,this.axisLine.axisSet,"value-axis value-axis-"+this.id);var c=this.type;"duration"==c&&(this.duration="ss");!0===this.dataChanged&&(this.updateData(),this.dataChanged=!1);"date"==c&&(this.logarithmic=!1,this.min=this.minRR,
this.max=this.maxRR,this.reversed=!1,this.getDateMinMax());if(this.logarithmic){var e=this.treatZeroAs,h=this.getExtremes(0,this.data.length-1).min;!isNaN(this.minimum)&&this.minimum<h&&(h=this.minimum);this.logMin=h;this.minReal<h&&(this.minReal=h);isNaN(this.minReal)&&(this.minReal=h);0<e&&0===h&&(this.minReal=h=e);if(0>=h||0>=this.minimum){this.fire({type:"logarithmicAxisFailed",chart:a});return}}this.grid0=null;var f,g,k=a.dx,l=a.dy,e=!1,h=this.logarithmic;if(isNaN(this.min)||isNaN(this.max)||
!this.foundGraphs||Infinity==this.min||-Infinity==this.max)e=!0;else{"date"==this.type&&this.min==this.max&&(this.max+=this.minDuration(),this.min-=this.minDuration());var m=this.labelFrequency,p=this.showFirstLabel,q=this.showLastLabel,n=1,t=0;this.minCalc=this.min;this.maxCalc=this.max;if(this.strictMinMax&&(isNaN(this.minimum)||(this.min=this.minimum),isNaN(this.maximum)||(this.max=this.maximum),this.min==this.max))return;isNaN(this.minZoom)||(this.minReal=this.min=this.minZoom);isNaN(this.maxZoom)||
(this.max=this.maxZoom);if(this.logarithmic){g=this.fullMin;var r=this.fullMax;isNaN(this.minimum)||(g=this.minimum);isNaN(this.maximum)||(r=this.maximum);var r=Math.log(r)*Math.LOG10E-Math.log(g)*Math.LOG10E,w=Math.log(this.max)/Math.LN10-Math.log(g)*Math.LOG10E;this.relativeStart=d.roundTo((Math.log(this.minReal)/Math.LN10-Math.log(g)*Math.LOG10E)/r,5);this.relativeEnd=d.roundTo(w/r,5)}else this.relativeStart=d.roundTo(d.fitToBounds((this.min-this.fullMin)/(this.fullMax-this.fullMin),0,1),5),this.relativeEnd=
d.roundTo(d.fitToBounds((this.max-this.fullMin)/(this.fullMax-this.fullMin),0,1),5);var r=Math.round((this.maxCalc-this.minCalc)/this.step)+1,z;!0===h?(z=Math.log(this.max)*Math.LOG10E-Math.log(this.minReal)*Math.LOG10E,this.stepWidth=this.axisWidth/z,z>this.logGridLimit&&(r=Math.ceil(Math.log(this.max)*Math.LOG10E)+1,t=Math.round(Math.log(this.minReal)*Math.LOG10E),r>this.gridCountR&&(n=Math.ceil(r/this.gridCountR)))):this.stepWidth=this.axisWidth/(this.max-this.min);var x=0;1>this.step&&-1<this.step&&
(x=d.getDecimals(this.step));this.integersOnly&&(x=0);x>this.maxDecCount&&(x=this.maxDecCount);w=this.precision;isNaN(w)||(x=w);isNaN(this.maxZoom)&&(this.max=d.roundTo(this.max,this.maxDecCount),this.min=d.roundTo(this.min,this.maxDecCount));g={};g.precision=x;g.decimalSeparator=a.nf.decimalSeparator;g.thousandsSeparator=a.nf.thousandsSeparator;this.numberFormatter=g;var u;this.exponential=!1;for(g=t;g<r;g+=n){var A=d.roundTo(this.step*g+this.min,x);-1!=String(A).indexOf("e")&&(this.exponential=
!0)}this.duration&&(this.maxInterval=d.getMaxInterval(this.max,this.duration));var x=this.step,y,A=this.minorGridAlpha;this.minorGridEnabled&&(y=this.getMinorGridStep(x,this.stepWidth*x));if(this.autoGridCount||0!==this.gridCount)if("date"==c)this.generateDFObject(),this.timeDifference=this.max-this.min,this.maxTime=this.lastTime=this.max,this.startTime=this.firstTime=this.min,this.parseDatesDraw();else for(r>=this.autoRotateCount&&!isNaN(this.autoRotateAngle)&&(this.labelRotationR=this.autoRotateAngle),
c=this.minCalc,h&&(r++,c=this.maxCalc-r*x),this.gridCountReal=r,g=this.startCount=t;g<r;g+=n)if(t=x*g+c,t=d.roundTo(t,this.maxDecCount+1),!this.integersOnly||Math.round(t)==t)if(isNaN(w)||Number(d.toFixed(t,w))==t){if(!0===h)if(z>this.logGridLimit)t=Math.pow(10,g);else if(0>=t&&(t=c+x*g+x/2,0>=t))continue;u=this.formatValue(t,!1,g);Math.round(g/m)!=g/m&&(u=void 0);if(0===g&&!p||g==r-1&&!q)u=" ";f=this.getCoordinate(t);var B;this.rotate&&this.autoWrap&&(B=this.stepWidth*x-10);u=new this.axisItemRenderer(this,
f,u,void 0,B,void 0,void 0,this.boldLabels);this.pushAxisItem(u);if(t==this.baseValue&&"radar"!=a.type){var D,C,I=this.width,H=this.height;"H"==this.orientation?0<=f&&f<=I+1&&(D=[f,f,f+k],C=[H,0,l]):0<=f&&f<=H+1&&(D=[0,I,I+k],C=[f,f,f+l]);D&&(f=d.fitToBounds(2*this.gridAlpha,0,1),isNaN(this.zeroGridAlpha)||(f=this.zeroGridAlpha),f=d.line(a.container,D,C,this.gridColor,f,1,this.dashLength),f.translate(this.x,this.y),this.grid0=f,a.axesSet.push(f),f.toBack(),d.setCN(a,f,this.bcn+"zero-grid-"+this.id),
d.setCN(a,f,this.bcn+"zero-grid"))}if(!isNaN(y)&&0<A&&g<r-1){f=x/y;h&&(y=x*(g+n)+this.minCalc,y=d.roundTo(y,this.maxDecCount+1),z>this.logGridLimit&&(y=Math.pow(10,g+n)),f=9,y=(y-t)/f);I=this.gridAlpha;this.gridAlpha=this.minorGridAlpha;for(H=1;H<f;H++){var Q=this.getCoordinate(t+y*H),Q=new this.axisItemRenderer(this,Q,"",!1,0,0,!1,!1,0,!0);this.pushAxisItem(Q)}this.gridAlpha=I}}z=this.guides;B=z.length;if(0<B){D=this.fillAlpha;for(g=this.fillAlpha=0;g<B;g++)C=z[g],k=NaN,y=C.above,isNaN(C.toValue)||
(k=this.getCoordinate(C.toValue),u=new this.axisItemRenderer(this,k,"",!0,NaN,NaN,C),this.pushAxisItem(u,y)),l=NaN,isNaN(C.value)||(l=this.getCoordinate(C.value),u=new this.axisItemRenderer(this,l,C.label,!0,NaN,(k-l)/2,C),this.pushAxisItem(u,y)),isNaN(k)&&(l-=3,k=l+3),u&&(m=u.label)&&this.addEventListeners(m,C),isNaN(k-l)||0>l&&0>k||(k=new this.guideFillRenderer(this,l,k,C),this.pushAxisItem(k,y),y=k.graphics(),C.graphics=y,this.addEventListeners(y,C));this.fillAlpha=D}u=this.baseValue;this.min>
this.baseValue&&this.max>this.baseValue&&(u=this.min);this.min<this.baseValue&&this.max<this.baseValue&&(u=this.max);h&&u<this.minReal&&(u=this.minReal);this.baseCoord=this.getCoordinate(u,!0);u={type:"axisChanged",target:this,chart:a};u.min=h?this.minReal:this.min;u.max=this.max;this.fire(u);this.axisCreated=!0}h=this.axisLine.set;u=this.labelsSet;b.translate(this.x,this.y);u.translate(this.x,this.y);this.positionTitle();"radar"!=a.type&&h.toFront();!this.visible||e?(b.hide(),h.hide(),u.hide()):
(b.show(),h.show(),u.show());this.axisY=this.y;this.axisX=this.x},getDateMinMax:function(){this.minimumDate&&(this.minimumDate instanceof Date||(this.minimumDate=d.getDate(this.minimumDate,this.chart.dataDateFormat,"fff")),this.min=this.minimumDate.getTime());this.maximumDate&&(this.maximumDate instanceof Date||(this.maximumDate=d.getDate(this.maximumDate,this.chart.dataDateFormat,"fff")),this.max=this.maximumDate.getTime())},formatValue:function(a,b,c){var e=this.exponential,h=this.logarithmic,f=
this.numberFormatter,g=this.chart;if(f)return!0===this.logarithmic&&(e=-1!=String(a).indexOf("e")?!0:!1),this.useScientificNotation&&(e=!0),this.usePrefixes&&(e=!1),e?(c=-1==String(a).indexOf("e")?a.toExponential(15):String(a),e=c.split("e"),c=Number(e[0]),e=Number(e[1]),c=d.roundTo(c,14),b||isNaN(this.precision)||(c=d.roundTo(c,this.precision)),10==c&&(c=1,e+=1),c=c+"e"+e,0===a&&(c="0"),1==a&&(c="1")):(h&&(e=String(a).split("."),e[1]?(f.precision=e[1].length,0>c&&(f.precision=Math.abs(c)),b&&1<a&&
(f.precision=0),b||isNaN(this.precision)||(f.precision=this.precision)):f.precision=-1),c=this.usePrefixes?d.addPrefix(a,g.prefixesOfBigNumbers,g.prefixesOfSmallNumbers,f,!b):d.formatNumber(a,f,f.precision)),this.duration&&(b&&(f.precision=0),c=d.formatDuration(a,this.duration,"",this.durationUnits,this.maxInterval,f)),"date"==this.type&&(c=d.formatDate(new Date(a),this.currentDateFormat,g)),this.recalculateToPercents?c+="%":(b=this.unit)&&(c="left"==this.unitPosition?b+c:c+b),this.labelFunction&&
(c="date"==this.type?this.labelFunction(c,new Date(a),this).toString():this.labelFunction(a,c,this).toString()),c},getMinorGridStep:function(a,b){var c=[5,4,2];60>b&&c.shift();for(var e=Math.floor(Math.log(Math.abs(a))*Math.LOG10E),d=0;d<c.length;d++){var f=a/c[d],g=Math.floor(Math.log(Math.abs(f))*Math.LOG10E);if(!(1<Math.abs(e-g)))if(1>a){if(g=Math.pow(10,-g)*f,g==Math.round(g))return f}else if(f==Math.round(f))return f}},stackGraphs:function(a){var b=this.stackType;"stacked"==b&&(b="regular");
"line"==b&&(b="none");"100% stacked"==b&&(b="100%");this.stackType=b;var c=[],e=[],h=[],f=[],g,k=this.chart.graphs,l,m,p,q,n,t=this.baseValue,r=!1;if("line"==a||"step"==a||"smoothedLine"==a)r=!0;if(r&&("regular"==b||"100%"==b))for(q=0;q<k.length;q++)p=k[q],p.stackGraph=null,p.hidden||(m=p.type,p.chart==this.chart&&p.valueAxis==this&&a==m&&p.stackable&&(l&&(p.stackGraph=l),l=p));p=this.start-10;l=this.end+10;q=this.data.length-1;p=d.fitToBounds(p,0,q);l=d.fitToBounds(l,0,q);for(n=p;n<=l;n++){var w=
0;for(q=0;q<k.length;q++)if(p=k[q],p.hidden)p.newStack&&(h[n]=NaN,e[n]=NaN);else if(m=p.type,p.chart==this.chart&&p.valueAxis==this&&a==m&&p.stackable)if(m=this.data[n].axes[this.id].graphs[p.id],g=m.values.value,isNaN(g))p.newStack&&(h[n]=NaN,e[n]=NaN);else{var z=d.getDecimals(g);w<z&&(w=z);isNaN(f[n])?f[n]=Math.abs(g):f[n]+=Math.abs(g);f[n]=d.roundTo(f[n],w);z=p.fillToGraph;r&&z&&(z=this.data[n].axes[this.id].graphs[z.id])&&(m.values.open=z.values.value);"regular"==b&&(r&&(isNaN(c[n])?(c[n]=g,m.values.close=
g,m.values.open=this.baseValue):(isNaN(g)?m.values.close=c[n]:m.values.close=g+c[n],m.values.open=c[n],c[n]=m.values.close)),"column"==a&&(p.newStack&&(h[n]=NaN,e[n]=NaN),m.values.close=g,0>g?(m.values.close=g,isNaN(e[n])?m.values.open=t:(m.values.close+=e[n],m.values.open=e[n]),e[n]=m.values.close):(m.values.close=g,isNaN(h[n])?m.values.open=t:(m.values.close+=h[n],m.values.open=h[n]),h[n]=m.values.close)))}}for(n=this.start;n<=this.end;n++)for(q=0;q<k.length;q++)(p=k[q],p.hidden)?p.newStack&&(h[n]=
NaN,e[n]=NaN):(m=p.type,p.chart==this.chart&&p.valueAxis==this&&a==m&&p.stackable&&(m=this.data[n].axes[this.id].graphs[p.id],g=m.values.value,isNaN(g)||(c=g/f[n]*100,m.values.percents=c,m.values.total=f[n],p.newStack&&(h[n]=NaN,e[n]=NaN),"100%"==b&&(isNaN(e[n])&&(e[n]=0),isNaN(h[n])&&(h[n]=0),0>c?(m.values.close=d.fitToBounds(c+e[n],-100,100),m.values.open=e[n],e[n]=m.values.close):(m.values.close=d.fitToBounds(c+h[n],-100,100),m.values.open=h[n],h[n]=m.values.close)))))},recalculate:function(){var a=
this.chart,b=a.graphs,c;for(c=0;c<b.length;c++){var e=b[c];if(e.valueAxis==this){var h="value";if("candlestick"==e.type||"ohlc"==e.type)h="open";var f,g,k=this.end+2,k=d.fitToBounds(this.end+1,0,this.data.length-1),l=this.start;0<l&&l--;var m;g=this.start;e.compareFromStart&&(g=0);if(!isNaN(a.startTime)&&(m=a.categoryAxis)){var p=m.minDuration(),p=new Date(a.startTime+p/2),q=d.resetDateToMin(new Date(a.startTime),m.minPeriod).getTime();d.resetDateToMin(new Date(p),m.minPeriod).getTime()>q&&g++}if(m=
a.recalculateFromDate)m=d.getDate(m,a.dataDateFormat,"fff"),g=a.getClosestIndex(a.chartData,"time",m.getTime(),!0,0,a.chartData.length),k=a.chartData.length-1;for(m=g;m<=k&&(g=this.data[m].axes[this.id].graphs[e.id],f=g.values[h],e.recalculateValue&&(f=g.dataContext[e.valueField+e.recalculateValue]),isNaN(f));m++);this.recBaseValue=f;for(h=l;h<=k;h++){g=this.data[h].axes[this.id].graphs[e.id];g.percents={};var l=g.values,n;for(n in l)g.percents[n]="percents"!=n?l[n]/f*100-100:l[n]}}}},getMinMax:function(){var a=
!1,b=this.chart,c=b.graphs,e;for(e=0;e<c.length;e++){var h=c[e].type;("line"==h||"step"==h||"smoothedLine"==h)&&this.expandMinMax&&(a=!0)}a&&(0<this.start&&this.start--,this.end<this.data.length-1&&this.end++);"serial"==b.type&&(!0!==b.categoryAxis.parseDates||a||this.end<this.data.length-1&&this.end++);this.includeAllValues&&(this.start=0,this.end=this.data.length-1);a=this.minMaxMultiplier;b=this.getExtremes(this.start,this.end);this.min=b.min;this.max=b.max;this.minRR=this.min;this.maxRR=this.max;
a=(this.max-this.min)*(a-1);this.min-=a;this.max+=a;a=this.guides.length;if(this.includeGuidesInMinMax&&0<a)for(b=0;b<a;b++)c=this.guides[b],c.toValue<this.min&&(this.min=c.toValue),c.value<this.min&&(this.min=c.value),c.toValue>this.max&&(this.max=c.toValue),c.value>this.max&&(this.max=c.value);isNaN(this.minimum)||(this.min=this.minimum);isNaN(this.maximum)||(this.max=this.maximum);"date"==this.type&&this.getDateMinMax();this.min>this.max&&(a=this.max,this.max=this.min,this.min=a);isNaN(this.minZoom)||
(this.min=this.minZoom);isNaN(this.maxZoom)||(this.max=this.maxZoom);this.minCalc=this.min;this.maxCalc=this.max;this.minReal=this.min;this.maxReal=this.max;0===this.min&&0===this.max&&(this.max=9);this.min>this.max&&(this.min=this.max-1);a=this.min;b=this.max;c=this.max-this.min;e=0===c?Math.pow(10,Math.floor(Math.log(Math.abs(this.max))*Math.LOG10E))/10:Math.pow(10,Math.floor(Math.log(Math.abs(c))*Math.LOG10E))/10;isNaN(this.maximum)&&(this.max=Math.ceil(this.max/e)*e+e);isNaN(this.minimum)&&(this.min=
Math.floor(this.min/e)*e-e);0>this.min&&0<=a&&(this.min=0);0<this.max&&0>=b&&(this.max=0);"100%"==this.stackType&&(this.min=0>this.min?-100:0,this.max=0>this.max?0:100);c=this.max-this.min;e=Math.pow(10,Math.floor(Math.log(Math.abs(c))*Math.LOG10E))/10;this.step=Math.ceil(c/this.gridCountR/e)*e;c=Math.pow(10,Math.floor(Math.log(Math.abs(this.step))*Math.LOG10E));c=d.fixStepE(c);e=Math.ceil(this.step/c);5<e&&(e=10);5>=e&&2<e&&(e=5);this.step=Math.ceil(this.step/(c*e))*c*e;isNaN(this.setStep)||(this.step=
this.setStep);1>c?(this.maxDecCount=Math.abs(Math.log(Math.abs(c))*Math.LOG10E),this.maxDecCount=Math.round(this.maxDecCount),this.step=d.roundTo(this.step,this.maxDecCount+1)):this.maxDecCount=0;this.min=this.step*Math.floor(this.min/this.step);this.max=this.step*Math.ceil(this.max/this.step);0>this.min&&0<=a&&(this.min=0);0<this.max&&0>=b&&(this.max=0);1<this.minReal&&1<this.max-this.minReal&&(this.minReal=Math.floor(this.minReal));c=Math.pow(10,Math.floor(Math.log(Math.abs(this.minReal))*Math.LOG10E));
0===this.min&&(this.minReal=c);0===this.min&&1<this.minReal&&(this.minReal=1);0<this.min&&0<this.minReal-this.step&&(this.minReal=this.min+this.step<this.minReal?this.min+this.step:this.min);this.logarithmic&&(2<Math.log(b)*Math.LOG10E-Math.log(a)*Math.LOG10E?(this.minReal=this.min=Math.pow(10,Math.floor(Math.log(Math.abs(a))*Math.LOG10E)),this.maxReal=this.max=Math.pow(10,Math.ceil(Math.log(Math.abs(b))*Math.LOG10E))):(a=Math.pow(10,Math.floor(Math.log(Math.abs(a))*Math.LOG10E))/10,Math.pow(10,Math.floor(Math.log(Math.abs(this.min))*
Math.LOG10E))/10<a&&(this.minReal=this.min=10*a)))},getExtremes:function(a,b){var c,e,d;for(d=a;d<=b;d++){var f=this.data[d].axes[this.id].graphs,g;for(g in f)if(f.hasOwnProperty(g)){var k=this.chart.graphsById[g];if(k.includeInMinMax&&(!k.hidden||this.includeHidden)){isNaN(c)&&(c=Infinity);isNaN(e)&&(e=-Infinity);this.foundGraphs=!0;k=f[g].values;this.recalculateToPercents&&(k=f[g].percents);var l;if(this.minMaxField)l=k[this.minMaxField],l<c&&(c=l),l>e&&(e=l);else for(var m in k)k.hasOwnProperty(m)&&
"percents"!=m&&"total"!=m&&"error"!=m&&(l=k[m],l<c&&(c=l),l>e&&(e=l))}}}return{min:c,max:e}},zoomOut:function(a){this.maxZoom=this.minZoom=NaN;this.zoomToRelativeValues(0,1,a)},zoomToRelativeValues:function(a,b,c){if(this.reversed){var e=a;a=1-b;b=1-e}var d=this.fullMax,e=this.fullMin,f=e+(d-e)*a,g=e+(d-e)*b;0<=this.minimum&&0>f&&(f=0);this.logarithmic&&(isNaN(this.minimum)||(e=this.minimum),isNaN(this.maximum)||(d=this.maximum),d=Math.log(d)*Math.LOG10E-Math.log(e)*Math.LOG10E,f=Math.pow(10,d*a+
Math.log(e)*Math.LOG10E),g=Math.pow(10,d*b+Math.log(e)*Math.LOG10E));return this.zoomToValues(f,g,c)},zoomToValues:function(a,b,c){if(b<a){var e=b;b=a;a=e}var h=this.fullMax,e=this.fullMin;this.relativeStart=d.roundTo((a-e)/(h-e),9);this.relativeEnd=d.roundTo((b-e)/(h-e),9);if(this.logarithmic){isNaN(this.minimum)||(e=this.minimum);isNaN(this.maximum)||(h=this.maximum);var h=Math.log(h)*Math.LOG10E-Math.log(e)*Math.LOG10E,f=Math.log(b)/Math.LN10-Math.log(e)*Math.LOG10E;this.relativeStart=d.roundTo((Math.log(a)/
Math.LN10-Math.log(e)*Math.LOG10E)/h,9);this.relativeEnd=d.roundTo(f/h,9)}if(this.minZoom!=a||this.maxZoom!=b)return this.minZoom=a,this.maxZoom=b,e={type:"axisZoomed"},e.chart=this.chart,e.valueAxis=this,e.startValue=a,e.endValue=b,e.relativeStart=this.relativeStart,e.relativeEnd=this.relativeEnd,this.prevStartValue==a&&this.prevEndValue==b||this.fire(e),this.prevStartValue=a,this.prevEndValue=b,c||(a={},d.copyProperties(e,a),a.type="axisIntZoomed",this.fire(a)),0===this.relativeStart&&1==this.relativeEnd&&
(this.maxZoom=this.minZoom=NaN),!0},coordinateToValue:function(a){if(isNaN(a))return NaN;var b=this.axisWidth,c=this.stepWidth,e=this.reversed,d=this.rotate,f=this.min,g=this.minReal;return!0===this.logarithmic?Math.pow(10,(d?!0===e?(b-a)/c:a/c:!0===e?a/c:(b-a)/c)+Math.log(g)*Math.LOG10E):!0===e?d?f-(a-b)/c:a/c+f:d?a/c+f:f-(a-b)/c},getCoordinate:function(a,b){if(isNaN(a))return NaN;var c=this.rotate,e=this.reversed,d=this.axisWidth,f=this.stepWidth,g=this.min,k=this.minReal;!0===this.logarithmic?
(0===a&&(a=this.treatZeroAs),g=Math.log(a)*Math.LOG10E-Math.log(k)*Math.LOG10E,c=c?!0===e?d-f*g:f*g:!0===e?f*g:d-f*g):c=!0===e?c?d-f*(a-g):f*(a-g):c?f*(a-g):d-f*(a-g);1E7<Math.abs(c)&&(c=c/Math.abs(c)*1E7);b||(c=Math.round(c));return c},synchronizeWithAxis:function(a){this.synchronizeWith=a;this.listenTo(this.synchronizeWith,"axisChanged",this.handleSynchronization)},handleSynchronization:function(){if(this.synchronizeWith){d.isString(this.synchronizeWith)&&(this.synchronizeWith=this.chart.getValueAxisById(this.synchronizeWith));
var a=this.synchronizeWith,b=a.min,c=a.max,a=a.step,e=this.synchronizationMultiplier;e&&(this.min=b*e,this.max=c*e,this.step=a*e,b=Math.abs(Math.log(Math.abs(Math.pow(10,Math.floor(Math.log(Math.abs(this.step))*Math.LOG10E))))*Math.LOG10E),this.maxDecCount=b=Math.round(b),this.draw())}}})})();(function(){var d=window.AmCharts;d.RecAxis=d.Class({construct:function(a){var b=a.chart,c=a.axisThickness,e=a.axisColor,h=a.axisAlpha,f=a.offset,g=a.dx,k=a.dy,l=a.x,m=a.y,p=a.height,q=a.width,n=b.container;"H"==a.orientation?(e=d.line(n,[0,q],[0,0],e,h,c),this.axisWidth=a.width,"bottom"==a.position?(k=c/2+f+p+m-1,c=l):(k=-c/2-f+m+k,c=g+l)):(this.axisWidth=a.height,"right"==a.position?(e=d.line(n,[0,0,-g],[0,p,p-k],e,h,c),k=m+k,c=c/2+f+g+q+l-1):(e=d.line(n,[0,0],[0,p],e,h,c),k=m,c=-c/2-f+l));e.translate(c,
k);c=b.container.set();c.push(e);b.axesSet.push(c);d.setCN(b,e,a.bcn+"line");this.axisSet=c;this.set=e}})})();(function(){var d=window.AmCharts;d.RecItem=d.Class({construct:function(a,b,c,e,h,f,g,k,l,m,p,q){b=Math.round(b);var n=a.chart;this.value=c;void 0==c&&(c="");l||(l=0);void 0==e&&(e=!0);var t=n.fontFamily,r=a.fontSize;void 0==r&&(r=n.fontSize);var w=a.color;void 0==w&&(w=n.color);void 0!==p&&(w=p);var z=a.chart.container,x=z.set();this.set=x;var u=a.axisThickness,A=a.axisColor,y=a.axisAlpha,B=a.tickLength,D=a.gridAlpha,C=a.gridThickness,I=a.gridColor,H=a.dashLength,Q=a.fillColor,M=a.fillAlpha,P=a.labelsEnabled;
p=a.labelRotationR;var ia=a.counter,J=a.inside,aa=a.labelOffset,ma=a.dx,na=a.dy,Pa=a.orientation,Z=a.position,da=a.previousCoord,X=a.height,xa=a.width,ea=a.offset,fa,Ba;g?(void 0!==g.id&&(q=n.classNamePrefix+"-guide-"+g.id),P=!0,isNaN(g.tickLength)||(B=g.tickLength),void 0!=g.lineColor&&(I=g.lineColor),void 0!=g.color&&(w=g.color),isNaN(g.lineAlpha)||(D=g.lineAlpha),isNaN(g.dashLength)||(H=g.dashLength),isNaN(g.lineThickness)||(C=g.lineThickness),!0===g.inside&&(J=!0,0<ea&&(ea=0)),isNaN(g.labelRotation)||
(p=g.labelRotation),isNaN(g.fontSize)||(r=g.fontSize),g.position&&(Z=g.position),void 0!==g.boldLabel&&(k=g.boldLabel),isNaN(g.labelOffset)||(aa=g.labelOffset)):""===c&&(B=0);m&&!isNaN(a.minorTickLength)&&(B=a.minorTickLength);var ga="start";0<h&&(ga="middle");a.centerLabels&&(ga="middle");var V=p*Math.PI/180,Y,Da,G=0,v=0,oa=0,ha=Y=0,Qa=0;"V"==Pa&&(p=0);var ca;P&&""!==c&&(ca=a.autoWrap&&0===p?d.wrappedText(z,c,w,t,r,ga,k,Math.abs(h),0):d.text(z,c,w,t,r,ga,k),ga=ca.getBBox(),ha=ga.width,Qa=ga.height);
if("H"==Pa){if(0<=b&&b<=xa+1&&(0<B&&0<y&&b+l<=xa+1&&(fa=d.line(z,[b+l,b+l],[0,B],A,y,C),x.push(fa)),0<D&&(Ba=d.line(z,[b,b+ma,b+ma],[X,X+na,na],I,D,C,H),x.push(Ba))),v=0,G=b,g&&90==p&&J&&(G-=r),!1===e?(ga="start",v="bottom"==Z?J?v+B:v-B:J?v-B:v+B,G+=3,0<h&&(G+=h/2-3,ga="middle"),0<p&&(ga="middle")):ga="middle",1==ia&&0<M&&!g&&!m&&da<xa&&(e=d.fitToBounds(b,0,xa),da=d.fitToBounds(da,0,xa),Y=e-da,0<Y&&(Da=d.rect(z,Y,a.height,Q,M),Da.translate(e-Y+ma,na),x.push(Da))),"bottom"==Z?(v+=X+r/2+ea,J?(0<p?(v=
X-ha/2*Math.sin(V)-B-3,a.centerRotatedLabels||(G+=ha/2*Math.cos(V)-4+2)):0>p?(v=X+ha*Math.sin(V)-B-3+2,G+=-ha*Math.cos(V)-Qa*Math.sin(V)-4):v-=B+r+3+3,v-=aa):(0<p?(v=X+ha/2*Math.sin(V)+B+3,a.centerRotatedLabels||(G-=ha/2*Math.cos(V))):0>p?(v=X+B+3-ha/2*Math.sin(V)+2,G+=ha/2*Math.cos(V)):v+=B+u+3+3,v+=aa)):(v+=na+r/2-ea,G+=ma,J?(0<p?(v=ha/2*Math.sin(V)+B+3,a.centerRotatedLabels||(G-=ha/2*Math.cos(V))):v+=B+3,v+=aa):(0<p?(v=-(ha/2)*Math.sin(V)-B-6,a.centerRotatedLabels||(G+=ha/2*Math.cos(V))):v-=B+
r+3+u+3,v-=aa)),"bottom"==Z?Y=(J?X-B-1:X+u-1)+ea:(oa=ma,Y=(J?na:na-B-u+1)-ea),f&&(G+=f),r=G,0<p&&(r+=ha/2*Math.cos(V)),ca&&(f=0,J&&(f=ha/2*Math.cos(V)),r+f>xa+2||0>r))ca.remove(),ca=null}else{0<=b&&b<=X+1&&(0<B&&0<y&&b+l<=X+1&&(fa=d.line(z,[0,B+1],[b+l,b+l],A,y,C),x.push(fa)),0<D&&(Ba=d.line(z,[0,ma,xa+ma],[b,b+na,b+na],I,D,C,H),x.push(Ba)));ga="end";if(!0===J&&"left"==Z||!1===J&&"right"==Z)ga="start";v=b-Qa/2+2;1==ia&&0<M&&!g&&!m&&(e=d.fitToBounds(b,0,X),da=d.fitToBounds(da,0,X),V=e-da,Da=d.polygon(z,
[0,a.width,a.width,0],[0,0,V,V],Q,M),Da.translate(ma,e-V+na),x.push(Da));v+=r/2;"right"==Z?(G+=ma+xa+ea,v+=na,J?(f||(v-=r/2+3),G=G-(B+4)-aa):(G+=B+4+u,v-=2,G+=aa)):J?(G+=B+4-ea,f||(v-=r/2+3),g&&(G+=ma,v+=na),G+=aa):(G+=-B-u-4-2-ea,v-=2,G-=aa);fa&&("right"==Z?(oa+=ma+ea+xa-1,Y+=na,oa=J?oa-u:oa+u):(oa-=ea,J||(oa-=B+u)));f&&(v+=f);J=-3;"right"==Z&&(J+=na);ca&&(v>X+1||v<J-r/10)&&(ca.remove(),ca=null)}fa&&(fa.translate(oa,Y),d.setCN(n,fa,a.bcn+"tick"),d.setCN(n,fa,q,!0),g&&d.setCN(n,fa,"guide"));!1===
a.visible&&(fa&&fa.remove(),ca&&(ca.remove(),ca=null));ca&&(ca.attr({"text-anchor":ga}),ca.translate(G,v,NaN,!0),0!==p&&ca.rotate(-p,a.chart.backgroundColor),a.allLabels.push(ca),this.label=ca,d.setCN(n,ca,a.bcn+"label"),d.setCN(n,ca,q,!0),g&&d.setCN(n,ca,"guide"));Ba&&(d.setCN(n,Ba,a.bcn+"grid"),d.setCN(n,Ba,q,!0),g&&d.setCN(n,Ba,"guide"));Da&&(d.setCN(n,Da,a.bcn+"fill"),d.setCN(n,Da,q,!0));m?Ba&&d.setCN(n,Ba,a.bcn+"grid-minor"):(a.counter=0===ia?1:0,a.previousCoord=b);0===this.set.node.childNodes.length&&
this.set.remove()},graphics:function(){return this.set},getLabel:function(){return this.label}})})();(function(){var d=window.AmCharts;d.RecFill=d.Class({construct:function(a,b,c,e){var h=a.dx,f=a.dy,g=a.orientation,k=0;if(c<b){var l=b;b=c;c=l}var m=e.fillAlpha;isNaN(m)&&(m=0);var l=a.chart.container,p=e.fillColor;"V"==g?(b=d.fitToBounds(b,0,a.height),c=d.fitToBounds(c,0,a.height)):(b=d.fitToBounds(b,0,a.width),c=d.fitToBounds(c,0,a.width));c-=b;isNaN(c)&&(c=4,k=2,m=0);0>c&&"object"==typeof p&&(p=p.join(",").split(",").reverse());"V"==g?(g=d.rect(l,a.width,c,p,m),g.translate(h,b-k+f)):(g=d.rect(l,
c,a.height,p,m),g.translate(b-k+h,f));d.setCN(a.chart,g,"guide-fill");e.id&&d.setCN(a.chart,g,"guide-fill-"+e.id);this.set=l.set([g])},graphics:function(){return this.set},getLabel:function(){}})})();(function(){var d=window.AmCharts;d.AmChart=d.Class({construct:function(a){this.svgIcons=this.tapToActivate=!0;this.theme=a;this.classNamePrefix="amcharts";this.addClassNames=!1;this.version="3.21.2";d.addChart(this);this.createEvents("buildStarted","dataUpdated","init","rendered","drawn","failed","resized","animationFinished");this.height=this.width="100%";this.dataChanged=!0;this.chartCreated=!1;this.previousWidth=this.previousHeight=0;this.backgroundColor="#FFFFFF";this.borderAlpha=this.backgroundAlpha=
0;this.color=this.borderColor="#000000";this.fontFamily="Verdana";this.fontSize=11;this.usePrefixes=!1;this.autoResize=!0;this.autoDisplay=!1;this.addCodeCredits=this.accessible=!0;this.touchStartTime=this.touchClickDuration=0;this.precision=-1;this.percentPrecision=2;this.decimalSeparator=".";this.thousandsSeparator=",";this.labels=[];this.allLabels=[];this.titles=[];this.marginRight=this.marginLeft=this.autoMarginOffset=0;this.timeOuts=[];this.creditsPosition="top-left";var b=document.createElement("div"),
c=b.style;c.overflow="hidden";c.position="relative";c.textAlign="left";this.chartDiv=b;b=document.createElement("div");c=b.style;c.overflow="hidden";c.position="relative";c.textAlign="left";this.legendDiv=b;this.titleHeight=0;this.hideBalloonTime=150;this.handDrawScatter=2;this.cssScale=this.handDrawThickness=1;this.cssAngle=0;this.prefixesOfBigNumbers=[{number:1E3,prefix:"k"},{number:1E6,prefix:"M"},{number:1E9,prefix:"G"},{number:1E12,prefix:"T"},{number:1E15,prefix:"P"},{number:1E18,prefix:"E"},
{number:1E21,prefix:"Z"},{number:1E24,prefix:"Y"}];this.prefixesOfSmallNumbers=[{number:1E-24,prefix:"y"},{number:1E-21,prefix:"z"},{number:1E-18,prefix:"a"},{number:1E-15,prefix:"f"},{number:1E-12,prefix:"p"},{number:1E-9,prefix:"n"},{number:1E-6,prefix:"\u03bc"},{number:.001,prefix:"m"}];this.panEventsEnabled=!0;this.product="amcharts";this.animations=[];this.balloon=new d.AmBalloon(this.theme);this.balloon.chart=this;this.processTimeout=0;this.processCount=1E3;this.animatable=[];this.langObj={};
d.applyTheme(this,a,"AmChart")},drawChart:function(){0<this.realWidth&&0<this.realHeight&&(this.drawBackground(),this.redrawLabels(),this.drawTitles(),this.brr(),this.renderFix(),this.chartDiv&&(this.boundingRect=this.chartDiv.getBoundingClientRect()))},makeAccessible:function(a,b,c){this.accessible&&a&&(c&&a.setAttr("role",c),a.setAttr("aria-label",b))},drawBackground:function(){d.remove(this.background);var a=this.container,b=this.backgroundColor,c=this.backgroundAlpha,e=this.set;d.isModern||0!==
c||(c=.001);var h=this.updateWidth();this.realWidth=h;var f=this.updateHeight();this.realHeight=f;b=d.polygon(a,[0,h-1,h-1,0],[0,0,f-1,f-1],b,c,1,this.borderColor,this.borderAlpha);d.setCN(this,b,"bg");this.background=b;e.push(b);if(b=this.backgroundImage)a=a.image(b,0,0,h,f),d.setCN(this,b,"bg-image"),this.bgImg=a,e.push(a)},drawTitles:function(a){var b=this.titles;this.titleHeight=0;if(d.ifArray(b)){var c=20,e;for(e=0;e<b.length;e++){var h=b[e],h=d.processObject(h,d.Title,this.theme);if(!1!==h.enabled){var f=
h.color;void 0===f&&(f=this.color);var g=h.size;isNaN(g)&&(g=this.fontSize+2);isNaN(h.alpha);var k=this.marginLeft,l=!0;void 0!==h.bold&&(l=h.bold);f=d.wrappedText(this.container,h.text,f,this.fontFamily,g,"middle",l,this.realWidth-35-this.marginRight-k);f.translate(k+(this.realWidth-this.marginRight-k)/2,c);f.node.style.pointerEvents="none";h.sprite=f;void 0!==h.tabIndex&&f.setAttr("tabindex",h.tabIndex);d.setCN(this,f,"title");h.id&&d.setCN(this,f,"title-"+h.id);f.attr({opacity:h.alpha});c+=f.getBBox().height+
5;a?f.remove():this.freeLabelsSet.push(f)}}this.titleHeight=c-10}},write:function(a){var b=this;if(b.listeners)for(var c=0;c<b.listeners.length;c++){var e=b.listeners[c];b.addListener(e.event,e.method)}b.fire({type:"buildStarted",chart:b});b.afterWriteTO&&clearTimeout(b.afterWriteTO);0<b.processTimeout?b.afterWriteTO=setTimeout(function(){b.afterWrite.call(b,a)},b.processTimeout):b.afterWrite(a)},afterWrite:function(a){var b;if(b="object"!=typeof a?document.getElementById(a):a){for(;b.firstChild;)b.removeChild(b.firstChild);
this.div=b;b.style.overflow="hidden";b.style.textAlign="left";a=this.chartDiv;var c=this.legendDiv,e=this.legend,h=c.style,f=a.style;this.measure();this.previousHeight=this.divRealHeight;this.previousWidth=this.divRealWidth;var g,k=document.createElement("div");g=k.style;g.position="relative";this.containerDiv=k;k.className=this.classNamePrefix+"-main-div";a.className=this.classNamePrefix+"-chart-div";b.appendChild(k);(b=this.exportConfig)&&d.AmExport&&!this.AmExport&&(this.AmExport=new d.AmExport(this,
b));this.amExport&&d.AmExport&&(this.AmExport=d.extend(this.amExport,new d.AmExport(this),!0));this.AmExport&&this.AmExport.init&&this.AmExport.init();if(e){e=this.addLegend(e,e.divId);if(e.enabled)switch(h.left=null,h.top=null,h.right=null,f.left=null,f.right=null,f.top=null,h.position="relative",f.position="relative",g.width="100%",g.height="100%",e.position){case "bottom":k.appendChild(a);k.appendChild(c);break;case "top":k.appendChild(c);k.appendChild(a);break;case "absolute":h.position="absolute";
f.position="absolute";void 0!==e.left&&(h.left=e.left+"px");void 0!==e.right&&(h.right=e.right+"px");void 0!==e.top&&(h.top=e.top+"px");void 0!==e.bottom&&(h.bottom=e.bottom+"px");e.marginLeft=0;e.marginRight=0;k.appendChild(a);k.appendChild(c);break;case "right":h.position="relative";f.position="absolute";k.appendChild(a);k.appendChild(c);break;case "left":h.position="absolute";f.position="relative";k.appendChild(a);k.appendChild(c);break;case "outside":k.appendChild(a)}else k.appendChild(a);this.prevLegendPosition=
e.position}else k.appendChild(a);this.listenersAdded||(this.addListeners(),this.listenersAdded=!0);(this.mouseWheelScrollEnabled||this.mouseWheelZoomEnabled)&&d.addWheelListeners();this.initChart()}},createLabelsSet:function(){d.remove(this.labelsSet);this.labelsSet=this.container.set();this.freeLabelsSet.push(this.labelsSet)},initChart:function(){this.balloon=d.processObject(this.balloon,d.AmBalloon,this.theme);window.AmCharts_path&&(this.path=window.AmCharts_path);void 0===this.path&&(this.path=
d.getPath());void 0===this.path&&(this.path="amcharts/");this.path=d.normalizeUrl(this.path);void 0===this.pathToImages&&(this.pathToImages=this.path+"images/");this.initHC||(d.callInitHandler(this),this.initHC=!0);d.applyLang(this.language,this);var a=this.numberFormatter;a&&(isNaN(a.precision)||(this.precision=a.precision),void 0!==a.thousandsSeparator&&(this.thousandsSeparator=a.thousandsSeparator),void 0!==a.decimalSeparator&&(this.decimalSeparator=a.decimalSeparator));(a=this.percentFormatter)&&
!isNaN(a.precision)&&(this.percentPrecision=a.precision);this.nf={precision:this.precision,thousandsSeparator:this.thousandsSeparator,decimalSeparator:this.decimalSeparator};this.pf={precision:this.percentPrecision,thousandsSeparator:this.thousandsSeparator,decimalSeparator:this.decimalSeparator};this.destroy();(a=this.container)?(a.container.innerHTML="",a.width=this.realWidth,a.height=this.realHeight,a.addDefs(this),this.chartDiv.appendChild(a.container)):a=new d.AmDraw(this.chartDiv,this.realWidth,
this.realHeight,this);this.container=a;this.extension=".png";this.svgIcons&&d.SVG&&(this.extension=".svg");this.checkDisplay();this.checkTransform(this.div);a.chart=this;d.VML||d.SVG?(a.handDrawn=this.handDrawn,a.handDrawScatter=this.handDrawScatter,a.handDrawThickness=this.handDrawThickness,d.remove(this.set),this.set=a.set(),d.remove(this.gridSet),this.gridSet=a.set(),d.remove(this.cursorLineSet),this.cursorLineSet=a.set(),d.remove(this.graphsBehindSet),this.graphsBehindSet=a.set(),d.remove(this.bulletBehindSet),
this.bulletBehindSet=a.set(),d.remove(this.columnSet),this.columnSet=a.set(),d.remove(this.graphsSet),this.graphsSet=a.set(),d.remove(this.trendLinesSet),this.trendLinesSet=a.set(),d.remove(this.axesSet),this.axesSet=a.set(),d.remove(this.cursorSet),this.cursorSet=a.set(),d.remove(this.scrollbarsSet),this.scrollbarsSet=a.set(),d.remove(this.bulletSet),this.bulletSet=a.set(),d.remove(this.freeLabelsSet),this.freeLabelsSet=a.set(),d.remove(this.axesLabelsSet),this.axesLabelsSet=a.set(),d.remove(this.balloonsSet),
this.balloonsSet=a.set(),d.remove(this.plotBalloonsSet),this.plotBalloonsSet=a.set(),d.remove(this.zoomButtonSet),this.zoomButtonSet=a.set(),d.remove(this.zbSet),this.zbSet=null,d.remove(this.linkSet),this.linkSet=a.set()):this.fire({type:"failed",chart:this})},premeasure:function(){var a=this.div;if(a){try{this.boundingRect=this.chartDiv.getBoundingClientRect()}catch(e){}var b=a.offsetWidth,c=a.offsetHeight;a.clientHeight&&(b=a.clientWidth,c=a.clientHeight);if(b!=this.mw||c!=this.mh)this.mw=b,this.mh=
c,this.measure()}},measure:function(){var a=this.div;if(a){var b=this.chartDiv,c=a.offsetWidth,e=a.offsetHeight,h=this.container;a.clientHeight&&(c=a.clientWidth,e=a.clientHeight);var e=Math.round(e),c=Math.round(c),a=Math.round(d.toCoordinate(this.width,c)),f=Math.round(d.toCoordinate(this.height,e));(c!=this.previousWidth||e!=this.previousHeight)&&0<a&&0<f&&(b.style.width=a+"px",b.style.height=f+"px",b.style.padding=0,h&&h.setSize(a,f),this.balloon=d.processObject(this.balloon,d.AmBalloon,this.theme));
this.balloon&&this.balloon.setBounds&&this.balloon.setBounds(2,2,a-2,f);this.updateWidth();this.balloon.chart=this;this.realWidth=a;this.realHeight=f;this.divRealWidth=c;this.divRealHeight=e}},checkDisplay:function(){if(this.autoDisplay&&this.container){var a=d.rect(this.container,10,10),b=a.getBBox();0===b.width&&0===b.height&&(this.divRealHeight=this.divRealWidth=this.realHeight=this.realWidth=0,this.previousWidth=this.previousHeight=NaN);a.remove()}},checkTransform:function(a){if(this.autoTransform&&
window.getComputedStyle&&a){if(a.style){var b=window.getComputedStyle(a,null);if(b&&(b=b.getPropertyValue("-webkit-transform")||b.getPropertyValue("-moz-transform")||b.getPropertyValue("-ms-transform")||b.getPropertyValue("-o-transform")||b.getPropertyValue("transform"))&&"none"!==b){var c=b.split("(")[1].split(")")[0].split(","),b=c[0],c=c[1],b=Math.sqrt(b*b+c*c);isNaN(b)||(this.cssScale*=b)}}a.parentNode&&this.checkTransform(a.parentNode)}},destroy:function(){this.chartDiv.innerHTML="";this.clearTimeOuts();
this.legend&&this.legend.destroy()},clearTimeOuts:function(){var a=this.timeOuts;if(a){var b;for(b=0;b<a.length;b++)clearTimeout(a[b])}this.timeOuts=[]},clear:function(a){try{document.removeEventListener("touchstart",this.docfn1,!0),document.removeEventListener("touchend",this.docfn2,!0)}catch(b){}d.callMethod("clear",[this.chartScrollbar,this.scrollbarV,this.scrollbarH,this.chartCursor]);this.chartCursor=this.scrollbarH=this.scrollbarV=this.chartScrollbar=null;this.clearTimeOuts();this.container&&
(this.container.remove(this.chartDiv),this.container.remove(this.legendDiv));a||d.removeChart(this);if(a=this.div)for(;a.firstChild;)a.removeChild(a.firstChild);this.legend&&this.legend.destroy();this.AmExport&&this.AmExport.clear&&this.AmExport.clear()},setMouseCursor:function(a){"auto"==a&&d.isNN&&(a="default");this.chartDiv.style.cursor=a;this.legendDiv.style.cursor=a},redrawLabels:function(){this.labels=[];var a=this.allLabels;this.createLabelsSet();var b;for(b=0;b<a.length;b++)this.drawLabel(a[b])},
drawLabel:function(a){var b=this;if(b.container&&!1!==a.enabled){a=d.processObject(a,d.Label,b.theme);var c=a.y,e=a.text,h=a.align,f=a.size,g=a.color,k=a.rotation,l=a.alpha,m=a.bold,p=d.toCoordinate(a.x,b.realWidth),c=d.toCoordinate(c,b.realHeight);p||(p=0);c||(c=0);void 0===g&&(g=b.color);isNaN(f)&&(f=b.fontSize);h||(h="start");"left"==h&&(h="start");"right"==h&&(h="end");"center"==h&&(h="middle",k?c=b.realHeight-c+c/2:p=b.realWidth/2-p);void 0===l&&(l=1);void 0===k&&(k=0);c+=f/2;e=d.text(b.container,
e,g,b.fontFamily,f,h,m,l);e.translate(p,c);void 0!==a.tabIndex&&e.setAttr("tabindex",a.tabIndex);d.setCN(b,e,"label");a.id&&d.setCN(b,e,"label-"+a.id);0!==k&&e.rotate(k);a.url?(e.setAttr("cursor","pointer"),e.click(function(){d.getURL(a.url,b.urlTarget)})):e.node.style.pointerEvents="none";b.labelsSet.push(e);b.labels.push(e)}},addLabel:function(a,b,c,e,d,f,g,k,l,m){a={x:a,y:b,text:c,align:e,size:d,color:f,alpha:k,rotation:g,bold:l,url:m,enabled:!0};this.container&&this.drawLabel(a);this.allLabels.push(a)},
clearLabels:function(){var a=this.labels,b;for(b=a.length-1;0<=b;b--)a[b].remove();this.labels=[];this.allLabels=[]},updateHeight:function(){var a=this.divRealHeight,b=this.legend;if(b){var c=this.legendDiv.offsetHeight,b=b.position;if("top"==b||"bottom"==b){a-=c;if(0>a||isNaN(a))a=0;this.chartDiv.style.height=a+"px"}}return a},updateWidth:function(){var a=this.divRealWidth,b=this.divRealHeight,c=this.legend;if(c){var e=this.legendDiv,d=e.offsetWidth;isNaN(c.width)||(d=c.width);c.ieW&&(d=c.ieW);var f=
e.offsetHeight,e=e.style,g=this.chartDiv.style,k=c.position;if(("right"==k||"left"==k)&&void 0===c.divId){a-=d;if(0>a||isNaN(a))a=0;g.width=a+"px";this.balloon&&this.balloon.setBounds&&this.balloon.setBounds(2,2,a-2,this.realHeight);"left"==k?(g.left=d+"px",e.left="0px"):(g.left="0px",e.left=a+"px");b>f&&(e.top=(b-f)/2+"px")}}return a},getTitleHeight:function(){this.drawTitles(!0);return this.titleHeight},addTitle:function(a,b,c,e,d){isNaN(b)&&(b=this.fontSize+2);a={text:a,size:b,color:c,alpha:e,
bold:d,enabled:!0};this.titles.push(a);return a},handleWheel:function(a){var b=0;a||(a=window.event);a.wheelDelta?b=a.wheelDelta/120:a.detail&&(b=-a.detail/3);b&&this.handleWheelReal(b,a.shiftKey);a.preventDefault&&a.preventDefault()},handleWheelReal:function(){},handleDocTouchStart:function(){this.handleMouseMove();this.tmx=this.mouseX;this.tmy=this.mouseY;this.touchStartTime=(new Date).getTime()},handleDocTouchEnd:function(){-.5<this.tmx&&this.tmx<this.divRealWidth+1&&0<this.tmy&&this.tmy<this.divRealHeight?
(this.handleMouseMove(),4>Math.abs(this.mouseX-this.tmx)&&4>Math.abs(this.mouseY-this.tmy)?(this.tapped=!0,this.panRequired&&this.panEventsEnabled&&this.chartDiv&&(this.chartDiv.style.msTouchAction="none",this.chartDiv.style.touchAction="none")):this.mouseIsOver||this.resetTouchStyle()):(this.tapped=!1,this.resetTouchStyle())},resetTouchStyle:function(){this.panEventsEnabled&&this.chartDiv&&(this.chartDiv.style.msTouchAction="auto",this.chartDiv.style.touchAction="auto")},checkTouchDuration:function(a){var b=
this,c=(new Date).getTime();if(a)if(a.touches)b.isTouchEvent=!0;else if(!b.isTouchEvent)return!0;if(c-b.touchStartTime>b.touchClickDuration)return!0;setTimeout(function(){b.resetTouchDuration()},300)},resetTouchDuration:function(){this.isTouchEvent=!1},checkTouchMoved:function(){if(4<Math.abs(this.mouseX-this.tmx)||4<Math.abs(this.mouseY-this.tmy))return!0},addListeners:function(){var a=this,b=a.chartDiv;document.addEventListener?("ontouchstart"in document.documentElement&&(b.addEventListener("touchstart",
function(b){a.handleTouchStart.call(a,b)},!0),b.addEventListener("touchmove",function(b){a.handleMouseMove.call(a,b)},!0),b.addEventListener("touchend",function(b){a.handleTouchEnd.call(a,b)},!0),a.docfn1=function(b){a.handleDocTouchStart.call(a,b)},a.docfn2=function(b){a.handleDocTouchEnd.call(a,b)},document.addEventListener("touchstart",a.docfn1,!0),document.addEventListener("touchend",a.docfn2,!0)),b.addEventListener("mousedown",function(b){a.mouseIsOver=!0;a.handleMouseMove.call(a,b);a.handleMouseDown.call(a,
b);a.handleDocTouchStart.call(a,b)},!0),b.addEventListener("mouseover",function(b){a.handleMouseOver.call(a,b)},!0),b.addEventListener("mouseout",function(b){a.handleMouseOut.call(a,b)},!0),b.addEventListener("mouseup",function(b){a.handleDocTouchEnd.call(a,b)},!0)):(b.attachEvent("onmousedown",function(b){a.handleMouseDown.call(a,b)}),b.attachEvent("onmouseover",function(b){a.handleMouseOver.call(a,b)}),b.attachEvent("onmouseout",function(b){a.handleMouseOut.call(a,b)}))},dispDUpd:function(){this.skipEvents||
(this.dispatchDataUpdated&&(this.dispatchDataUpdated=!1,this.fire({type:"dataUpdated",chart:this})),this.chartCreated||(this.chartCreated=!0,this.fire({type:"init",chart:this})),this.chartRendered||(this.fire({type:"rendered",chart:this}),this.chartRendered=!0),this.fire({type:"drawn",chart:this}));this.skipEvents=!1},validateSize:function(){var a=this;a.premeasure();a.checkDisplay();a.cssScale=1;a.cssAngle=0;a.checkTransform(a.div);if(a.divRealWidth!=a.previousWidth||a.divRealHeight!=a.previousHeight){var b=
a.legend;if(0<a.realWidth&&0<a.realHeight){a.sizeChanged=!0;if(b){a.legendInitTO&&clearTimeout(a.legendInitTO);var c=setTimeout(function(){b.invalidateSize()},10);a.timeOuts.push(c);a.legendInitTO=c}a.marginsUpdated=!1;clearTimeout(a.initTO);c=setTimeout(function(){a.initChart()},10);a.timeOuts.push(c);a.initTO=c}a.renderFix();b&&b.renderFix&&b.renderFix();clearTimeout(a.resizedTO);a.resizedTO=setTimeout(function(){a.fire({type:"resized",chart:a})},10);a.previousHeight=a.divRealHeight;a.previousWidth=
a.divRealWidth}},invalidateSize:function(){this.previousHeight=this.previousWidth=NaN;this.invalidateSizeReal()},invalidateSizeReal:function(){var a=this;a.marginsUpdated=!1;clearTimeout(a.validateTO);var b=setTimeout(function(){a.validateSize()},5);a.timeOuts.push(b);a.validateTO=b},validateData:function(a){this.chartCreated&&(this.dataChanged=!0,this.marginsUpdated=!1,this.initChart(a))},validateNow:function(a,b){this.initTO&&clearTimeout(this.initTO);a&&(this.dataChanged=!0,this.marginsUpdated=
!1);this.skipEvents=b;this.chartRendered=!1;var c=this.legend;c&&c.position!=this.prevLegendPosition&&(this.previousWidth=this.mw=0,c.invalidateSize&&(c.invalidateSize(),this.validateSize()));this.write(this.div)},showItem:function(a){a.hidden=!1;this.initChart()},hideItem:function(a){a.hidden=!0;this.initChart()},hideBalloon:function(){var a=this;clearTimeout(a.hoverInt);clearTimeout(a.balloonTO);a.hoverInt=setTimeout(function(){a.hideBalloonReal.call(a)},a.hideBalloonTime)},cleanChart:function(){},
hideBalloonReal:function(){var a=this.balloon;a&&a.hide&&a.hide()},showBalloon:function(a,b,c,e,d){var f=this;clearTimeout(f.balloonTO);clearTimeout(f.hoverInt);f.balloonTO=setTimeout(function(){f.showBalloonReal.call(f,a,b,c,e,d)},1)},showBalloonReal:function(a,b,c,e,d){this.handleMouseMove();var f=this.balloon;f.enabled&&(f.followCursor(!1),f.changeColor(b),!c||f.fixedPosition?(f.setPosition(e,d),isNaN(e)||isNaN(d)?f.followCursor(!0):f.followCursor(!1)):f.followCursor(!0),a&&f.showBalloon(a))},
handleMouseOver:function(){this.outTO&&clearTimeout(this.outTO);d.resetMouseOver();this.mouseIsOver=!0},handleMouseOut:function(){var a=this;d.resetMouseOver();a.outTO&&clearTimeout(a.outTO);a.outTO=setTimeout(function(){a.handleMouseOutReal()},10)},handleMouseOutReal:function(){this.mouseIsOver=!1},handleMouseMove:function(a){a||(a=window.event);this.mouse2Y=this.mouse2X=NaN;var b,c,e,d;if(a){if(a.touches){var f=a.touches.item(1);f&&this.panEventsEnabled&&this.boundingRect&&(e=f.clientX-this.boundingRect.left,
d=f.clientY-this.boundingRect.top);a=a.touches.item(0);if(!a)return}else this.wasTouched=!1;this.boundingRect&&a.clientX&&(b=a.clientX-this.boundingRect.left,c=a.clientY-this.boundingRect.top);isNaN(e)?this.mouseX=b:(this.mouseX=Math.min(b,e),this.mouse2X=Math.max(b,e));isNaN(d)?this.mouseY=c:(this.mouseY=Math.min(c,d),this.mouse2Y=Math.max(c,d));this.autoTransform&&(this.mouseX/=this.cssScale,this.mouseY/=this.cssScale)}},handleTouchStart:function(a){this.hideBalloonReal();a&&(a.touches&&this.tapToActivate&&
!this.tapped||!this.panRequired)||(this.handleMouseMove(a),this.handleMouseDown(a))},handleTouchEnd:function(a){this.wasTouched=!0;this.handleMouseMove(a);d.resetMouseOver();this.handleReleaseOutside(a)},handleReleaseOutside:function(){this.handleDocTouchEnd.call(this)},handleMouseDown:function(a){d.resetMouseOver();this.mouseIsOver=!0;a&&a.preventDefault&&(this.panEventsEnabled?a.preventDefault():a.touches||a.preventDefault())},addLegend:function(a,b){a=d.processObject(a,d.AmLegend,this.theme);a.divId=
b;a.ieW=0;var c;c="object"!=typeof b&&b?document.getElementById(b):b;this.legend=a;a.chart=this;c?(a.div=c,a.position="outside",a.autoMargins=!1):a.div=this.legendDiv;return a},removeLegend:function(){this.legend=void 0;this.previousWidth=0;this.legendDiv.innerHTML=""},handleResize:function(){(d.isPercents(this.width)||d.isPercents(this.height))&&this.invalidateSizeReal();this.renderFix()},renderFix:function(){if(!d.VML){var a=this.container;a&&a.renderFix()}},getSVG:function(){if(d.hasSVG)return this.container},
animate:function(a,b,c,e,h,f,g){a["an_"+b]&&d.removeFromArray(this.animations,a["an_"+b]);c={obj:a,frame:0,attribute:b,from:c,to:e,time:h,effect:f,suffix:g};a["an_"+b]=c;this.animations.push(c);return c},setLegendData:function(a){var b=this.legend;b&&b.setData(a)},stopAnim:function(a){d.removeFromArray(this.animations,a)},updateAnimations:function(){var a;this.container&&this.container.update();if(this.animations)for(a=this.animations.length-1;0<=a;a--){var b=this.animations[a],c=d.updateRate*b.time,
e=b.frame+1,h=b.obj,f=b.attribute;if(e<=c){b.frame++;var g=Number(b.from),k=Number(b.to)-g,c=d[b.effect](0,e,g,k,c);0===k?(this.animations.splice(a,1),h.node.style[f]=Number(b.to)+b.suffix):h.node.style[f]=c+b.suffix}else h.node.style[f]=Number(b.to)+b.suffix,h.animationFinished=!0,this.animations.splice(a,1)}},update:function(){this.updateAnimations();var a=this.animatable;if(0<a.length){for(var b=!0,c=a.length-1;0<=c;c--){var e=a[c];e&&(e.animationFinished?a.splice(c,1):b=!1)}b&&(this.fire({type:"animationFinished",
chart:this}),this.animatable=[])}},inIframe:function(){try{return window.self!==window.top}catch(a){return!0}},brr:function(){if(!this.hideCredits){var a="amcharts.com",b=window.location.hostname.split("."),c;2<=b.length&&(c=b[b.length-2]+"."+b[b.length-1]);this.amLink&&(b=this.amLink.parentNode)&&b.removeChild(this.amLink);b=this.creditsPosition;if(c!=a||!0===this.inIframe()){var a="http://www."+a,e=c=0,d=this.realWidth,f=this.realHeight,g=this.type;if("serial"==g||"xy"==g||"gantt"==g)c=this.marginLeftReal,
e=this.marginTopReal,d=c+this.plotAreaWidth,f=e+this.plotAreaHeight;var g=a+"/javascript-charts/",k="JavaScript charts",l="JS chart by amCharts";"ammap"==this.product&&(g=a+"/javascript-maps/",k="Interactive JavaScript maps",l="JS map by amCharts");a=document.createElement("a");l=document.createTextNode(l);a.setAttribute("href",g);a.setAttribute("title",k);this.urlTarget&&a.setAttribute("target",this.urlTarget);a.appendChild(l);this.chartDiv.appendChild(a);this.amLink=a;g=a.style;g.position="absolute";
g.textDecoration="none";g.color=this.color;g.fontFamily=this.fontFamily;g.fontSize="11px";g.opacity=.7;g.display="block";var k=a.offsetWidth,a=a.offsetHeight,l=5+c,m=e+5;"bottom-left"==b&&(l=5+c,m=f-a-3);"bottom-right"==b&&(l=d-k-5,m=f-a-3);"top-right"==b&&(l=d-k-5,m=e+5);g.left=l+"px";g.top=m+"px"}}}});d.Slice=d.Class({construct:function(){}});d.SerialDataItem=d.Class({construct:function(){}});d.GraphDataItem=d.Class({construct:function(){}});d.Guide=d.Class({construct:function(a){this.cname="Guide";
d.applyTheme(this,a,this.cname)}});d.Title=d.Class({construct:function(a){this.cname="Title";d.applyTheme(this,a,this.cname)}});d.Label=d.Class({construct:function(a){this.cname="Label";d.applyTheme(this,a,this.cname)}})})();(function(){var d=window.AmCharts;d.AmGraph=d.Class({construct:function(a){this.cname="AmGraph";this.createEvents("rollOverGraphItem","rollOutGraphItem","clickGraphItem","doubleClickGraphItem","rightClickGraphItem","clickGraph","rollOverGraph","rollOutGraph");this.type="line";this.stackable=!0;this.columnCount=1;this.columnIndex=0;this.centerCustomBullets=this.showBalloon=!0;this.maxBulletSize=50;this.minBulletSize=4;this.balloonText="[[value]]";this.hidden=this.scrollbar=this.animationPlayed=!1;
this.pointPosition="middle";this.depthCount=1;this.includeInMinMax=!0;this.negativeBase=0;this.visibleInLegend=!0;this.showAllValueLabels=!1;this.showBulletsAt=this.showBalloonAt="close";this.lineThickness=1;this.dashLength=0;this.connect=!0;this.lineAlpha=1;this.bullet="none";this.bulletBorderThickness=2;this.bulletBorderAlpha=0;this.bulletAlpha=1;this.bulletSize=8;this.cornerRadiusTop=this.hideBulletsCount=this.bulletOffset=0;this.cursorBulletAlpha=1;this.gradientOrientation="vertical";this.dy=
this.dx=0;this.periodValue="";this.clustered=!0;this.periodSpan=1;this.accessibleLabel="[[title]] [[category]] [[value]]";this.accessibleSkipText="Press enter to skip [[title]]";this.y=this.x=0;this.switchable=!0;this.tcc=this.minDistance=1;this.labelRotation=0;this.labelAnchor="auto";this.labelOffset=3;this.bcn="graph-";this.dateFormat="MMM DD, YYYY";this.noRounding=!0;d.applyTheme(this,a,this.cname)},init:function(){this.createBalloon()},draw:function(){var a=this.chart;a.isRolledOverBullet=!1;
var b=a.type;if(a.drawGraphs){isNaN(this.precision)||(this.numberFormatter?this.numberFormatter.precision=this.precision:this.numberFormatter={precision:this.precision,decimalSeparator:a.decimalSeparator,thousandsSeparator:a.thousandsSeparator});var c=a.container;this.container=c;this.destroy();var e=c.set();this.set=e;e.translate(this.x,this.y);var h=c.set();this.bulletSet=h;h.translate(this.x,this.y);this.behindColumns?(a.graphsBehindSet.push(e),a.bulletBehindSet.push(h)):(a.graphsSet.push(e),a.bulletSet.push(h));
var f=this.bulletAxis;d.isString(f)&&(this.bulletAxis=a.getValueAxisById(f));c=c.set();d.remove(this.columnsSet);this.columnsSet=c;d.setCN(a,e,"graph-"+this.type);d.setCN(a,e,"graph-"+this.id);d.setCN(a,h,"graph-"+this.type);d.setCN(a,h,"graph-"+this.id);this.columnsArray=[];this.ownColumns=[];this.allBullets=[];this.animationArray=[];h=this.labelPosition;h||(f=this.valueAxis.stackType,h="top","column"==this.type&&(a.rotate&&(h="right"),"100%"==f||"regular"==f)&&(h="middle"),this.labelPosition=h);
d.ifArray(this.data)&&(a=!1,"xy"==b?this.xAxis.axisCreated&&this.yAxis.axisCreated&&(a=!0):this.valueAxis.axisCreated&&(a=!0),!this.hidden&&a&&this.createGraph());e.push(c)}},createGraph:function(){var a=this,b=a.chart;a.startAlpha=b.startAlpha;a.seqAn=b.sequencedAnimation;a.baseCoord=a.valueAxis.baseCoord;void 0===a.fillAlphas&&(a.fillAlphas=0);a.bulletColorR=a.bulletColor;void 0===a.bulletColorR&&(a.bulletColorR=a.lineColorR,a.bulletColorNegative=a.negativeLineColor);void 0===a.bulletAlpha&&(a.bulletAlpha=
a.lineAlpha);if("step"==c||d.VML)a.noRounding=!1;var c=b.type;"gantt"==c&&(c="serial");clearTimeout(a.playedTO);if(!isNaN(a.valueAxis.min)&&!isNaN(a.valueAxis.max)){switch(c){case "serial":a.categoryAxis&&(a.createSerialGraph(),"candlestick"==a.type&&1>a.valueAxis.minMaxMultiplier&&a.positiveClip(a.set));break;case "radar":a.createRadarGraph();break;case "xy":a.createXYGraph()}a.playedTO=setTimeout(function(){a.setAnimationPlayed.call(a)},500*a.chart.startDuration)}},setAnimationPlayed:function(){this.animationPlayed=
!0},createXYGraph:function(){var a=[],b=[],c=this.xAxis,e=this.yAxis;this.pmh=e.height;this.pmw=c.width;this.pmy=this.pmx=0;var d;for(d=this.start;d<=this.end;d++){var f=this.data[d].axes[c.id].graphs[this.id],g=f.values,k=g.x,l=g.y,g=c.getCoordinate(k,this.noRounding),m=e.getCoordinate(l,this.noRounding);if(!isNaN(k)&&!isNaN(l)&&(a.push(g),b.push(m),f.x=g,f.y=m,k=this.createBullet(f,g,m,d),l=this.labelText)){var l=this.createLabel(f,l),p=0;k&&(p=k.size);this.positionLabel(f,g,m,l,p)}}this.drawLineGraph(a,
b);this.launchAnimation()},createRadarGraph:function(){var a=this.valueAxis.stackType,b=[],c=[],e=[],d=[],f,g,k,l,m;for(m=this.start;m<=this.end;m++){var p=this.data[m].axes[this.valueAxis.id].graphs[this.id],q,n;"none"==a||"3d"==a?q=p.values.value:(q=p.values.close,n=p.values.open);if(isNaN(q))this.connect||(this.drawLineGraph(b,c,e,d),b=[],c=[],e=[],d=[]);else{var t=this.valueAxis.getCoordinate(q,this.noRounding)-this.height,t=t*this.valueAxis.rMultiplier,r=-360/(this.end-this.start+1)*m;"middle"==
this.valueAxis.pointPosition&&(r-=180/(this.end-this.start+1));q=t*Math.sin(r/180*Math.PI);t*=Math.cos(r/180*Math.PI);b.push(q);c.push(t);if(!isNaN(n)){var w=this.valueAxis.getCoordinate(n,this.noRounding)-this.height,w=w*this.valueAxis.rMultiplier,z=w*Math.sin(r/180*Math.PI),r=w*Math.cos(r/180*Math.PI);e.push(z);d.push(r);isNaN(k)&&(k=z);isNaN(l)&&(l=r)}r=this.createBullet(p,q,t,m);p.x=q;p.y=t;if(z=this.labelText)z=this.createLabel(p,z),w=0,r&&(w=r.size),this.positionLabel(p,q,t,z,w);isNaN(f)&&(f=
q);isNaN(g)&&(g=t)}}b.push(f);c.push(g);isNaN(k)||(e.push(k),d.push(l));this.drawLineGraph(b,c,e,d);this.launchAnimation()},positionLabel:function(a,b,c,e,d){if(e){var f=this.chart,g=this.valueAxis,k="middle",l=!1,m=this.labelPosition,p=e.getBBox(),q=this.chart.rotate,n=a.isNegative,t=this.fontSize;void 0===t&&(t=this.chart.fontSize);c-=p.height/2-t/2-1;void 0!==a.labelIsNegative&&(n=a.labelIsNegative);switch(m){case "right":m=q?n?"left":"right":"right";break;case "top":m=q?"top":n?"bottom":"top";
break;case "bottom":m=q?"bottom":n?"top":"bottom";break;case "left":m=q?n?"right":"left":"left"}var t=a.columnGraphics,r=0,w=0;t&&(r=t.x,w=t.y);var z=this.labelOffset;switch(m){case "right":k="start";b+=d/2+z;break;case "top":c=g.reversed?c+(d/2+p.height/2+z):c-(d/2+p.height/2+z);break;case "bottom":c=g.reversed?c-(d/2+p.height/2+z):c+(d/2+p.height/2+z);break;case "left":k="end";b-=d/2+z;break;case "inside":"column"==this.type&&(l=!0,q?n?(k="end",b=r-3-z):(k="start",b=r+3+z):c=n?w+7+z:w-10-z);break;
case "middle":"column"==this.type&&(l=!0,q?b-=(b-r)/2+z-3:c-=(c-w)/2+z-3)}"auto"!=this.labelAnchor&&(k=this.labelAnchor);e.attr({"text-anchor":k});this.labelRotation&&e.rotate(this.labelRotation);e.translate(b,c);!this.showAllValueLabels&&t&&l&&(p=e.getBBox(),p.height>a.columnHeight||p.width>a.columnWidth)&&(e.remove(),e=null);if(e&&"radar"!=f.type)if(q){if(0>c||c>this.height)e.remove(),e=null;!this.showAllValueLabels&&e&&(0>b||b>this.width)&&(e.remove(),e=null)}else{if(0>b||b>this.width)e.remove(),
e=null;!this.showAllValueLabels&&e&&(0>c||c>this.height)&&(e.remove(),e=null)}e&&this.allBullets.push(e);return e}},getGradRotation:function(){var a=270;"horizontal"==this.gradientOrientation&&(a=0);return this.gradientRotation=a},createSerialGraph:function(){this.dashLengthSwitched=this.fillColorsSwitched=this.lineColorSwitched=void 0;var a=this.chart,b=this.id,c=this.index,e=this.data,h=this.chart.container,f=this.valueAxis,g=this.type,k=this.columnWidthReal,l=this.showBulletsAt;isNaN(this.columnWidth)||
(k=this.columnWidth);isNaN(k)&&(k=.8);var m=this.useNegativeColorIfDown,p=this.width,q=this.height,n=this.y,t=this.rotate,r=this.columnCount,w=d.toCoordinate(this.cornerRadiusTop,k/2),z=this.connect,x=[],u=[],A,y,B,D,C=this.chart.graphs.length,I,H=this.dx/this.tcc,Q=this.dy/this.tcc,M=f.stackType,P=this.start,ia=this.end,J=this.scrollbar,aa="graph-column-";J&&(aa="scrollbar-graph-column-");var ma=this.categoryAxis,na=this.baseCoord,Pa=this.negativeBase,Z=this.columnIndex,da=this.lineThickness,X=this.lineAlpha,
xa=this.lineColorR,ea=this.dashLength,fa=this.set,Ba,ga=this.getGradRotation(),V=this.chart.columnSpacing,Y=ma.cellWidth,Da=(Y*k-r)/r;V>Da&&(V=Da);var G,v,oa,ha=q,Qa=p,ca=0,tb=0,ub=0,vb=0,gb=0,hb=0,wb=this.fillColorsR,Ra=this.negativeFillColors,Ja=this.negativeLineColor,Ya=this.fillAlphas,Za=this.negativeFillAlphas;"object"==typeof Ya&&(Ya=Ya[0]);"object"==typeof Za&&(Za=Za[0]);var xb=this.noRounding;"step"==g&&(xb=!1);var ib=f.getCoordinate(f.min);f.logarithmic&&(ib=f.getCoordinate(f.minReal));this.minCoord=
ib;this.resetBullet&&(this.bullet="none");if(!(J||"line"!=g&&"smoothedLine"!=g&&"step"!=g||(1==e.length&&"step"!=g&&"none"==this.bullet&&(this.bullet="round",this.resetBullet=!0),!Ra&&void 0==Ja||m))){var Ua=Pa;Ua>f.max&&(Ua=f.max);Ua<f.min&&(Ua=f.min);f.logarithmic&&(Ua=f.minReal);var Ka=f.getCoordinate(Ua),Mb=f.getCoordinate(f.max);t?(ha=q,Qa=Math.abs(Mb-Ka),ub=q,vb=Math.abs(ib-Ka),hb=tb=0,f.reversed?(ca=0,gb=Ka):(ca=Ka,gb=0)):(Qa=p,ha=Math.abs(Mb-Ka),vb=p,ub=Math.abs(ib-Ka),gb=ca=0,f.reversed?
(hb=n,tb=Ka):hb=Ka)}var La=Math.round;this.pmx=La(ca);this.pmy=La(tb);this.pmh=La(ha);this.pmw=La(Qa);this.nmx=La(gb);this.nmy=La(hb);this.nmh=La(ub);this.nmw=La(vb);d.isModern||(this.nmy=this.nmx=0,this.nmh=this.height);this.clustered||(r=1);k="column"==g?(Y*k-V*(r-1))/r:Y*k;1>k&&(k=1);var Nb=this.fixedColumnWidth;isNaN(Nb)||(k=Nb);var L;if("line"==g||"step"==g||"smoothedLine"==g){if(0<P){for(L=P-1;-1<L;L--)if(G=e[L],v=G.axes[f.id].graphs[b],oa=v.values.value,!isNaN(oa)){P=L;break}if(this.lineColorField)for(L=
P;-1<L;L--)if(G=e[L],v=G.axes[f.id].graphs[b],v.lineColor){this.lineColorSwitched=v.lineColor;void 0===this.bulletColor&&(this.bulletColorSwitched=this.lineColorSwitched);break}if(this.fillColorsField)for(L=P;-1<L;L--)if(G=e[L],v=G.axes[f.id].graphs[b],v.fillColors){this.fillColorsSwitched=v.fillColors;break}if(this.dashLengthField)for(L=P;-1<L;L--)if(G=e[L],v=G.axes[f.id].graphs[b],!isNaN(v.dashLength)){this.dashLengthSwitched=v.dashLength;break}}if(ia<e.length-1)for(L=ia+1;L<e.length;L++)if(G=e[L],
v=G.axes[f.id].graphs[b],oa=v.values.value,!isNaN(oa)){ia=L;break}}ia<e.length-1&&ia++;var T=[],U=[],Ma=!1;if("line"==g||"step"==g||"smoothedLine"==g)if(this.stackable&&"regular"==M||"100%"==M||this.fillToGraph)Ma=!0;var Ob=this.noStepRisers,jb=-1E3,kb=-1E3,lb=this.minDistance,Sa=!0,$a=!1;for(L=P;L<=ia;L++){G=e[L];v=G.axes[f.id].graphs[b];v.index=L;var ab,Ta=NaN;if(m&&void 0==this.openField)for(var yb=L+1;yb<e.length&&(!e[yb]||!(ab=e[L+1].axes[f.id].graphs[b])||!ab.values||(Ta=ab.values.value,isNaN(Ta)));yb++);
var S,R,K,ba,ja=NaN,E=NaN,F=NaN,O=NaN,N=NaN,qa=NaN,ra=NaN,sa=NaN,ta=NaN,ya=NaN,Ea=NaN,ka=NaN,la=NaN,W=NaN,zb=NaN,Ab=NaN,ua=NaN,va=void 0,Na=wb,Va=Ya,Ha=xa,Ca,za,Bb=this.proCandlesticks,mb=this.topRadius,Fa=q-1,pa=p-1,bb=this.pattern;void 0!=v.pattern&&(bb=v.pattern);isNaN(v.alpha)||(Va=v.alpha);isNaN(v.dashLength)||(ea=v.dashLength);var Ia=v.values;f.recalculateToPercents&&(Ia=v.percents);"none"==M&&(Z=isNaN(v.columnIndex)?this.columnIndex:v.columnIndex);if(Ia){W=this.stackable&&"none"!=M&&"3d"!=
M?Ia.close:Ia.value;if("candlestick"==g||"ohlc"==g)W=Ia.close,Ab=Ia.low,ra=f.getCoordinate(Ab),zb=Ia.high,ta=f.getCoordinate(zb);ua=Ia.open;F=f.getCoordinate(W,xb);isNaN(ua)||(N=f.getCoordinate(ua,xb),m&&"regular"!=M&&"100%"!=M&&(Ta=ua,ua=N=NaN));m&&(void 0==this.openField?ab&&(ab.isNegative=Ta<W?!0:!1,isNaN(Ta)&&(v.isNegative=!Sa)):v.isNegative=Ta>W?!0:!1);if(!J)switch(this.showBalloonAt){case "close":v.y=F;break;case "open":v.y=N;break;case "high":v.y=ta;break;case "low":v.y=ra}var ja=G.x[ma.id],
Wa=this.periodSpan-1;"step"!=g||isNaN(G.cellWidth)||(Y=G.cellWidth);var wa=Math.floor(Y/2)+Math.floor(Wa*Y/2),Ga=wa,nb=0;"left"==this.stepDirection&&(nb=(2*Y+Wa*Y)/2,ja-=nb);"center"==this.stepDirection&&(nb=Y/2,ja-=nb);"start"==this.pointPosition&&(ja-=Y/2+Math.floor(Wa*Y/2),wa=0,Ga=Math.floor(Y)+Math.floor(Wa*Y));"end"==this.pointPosition&&(ja+=Y/2+Math.floor(Wa*Y/2),wa=Math.floor(Y)+Math.floor(Wa*Y),Ga=0);if(Ob){var Cb=this.columnWidth;isNaN(Cb)||(wa*=Cb,Ga*=Cb)}J||(v.x=ja);-1E5>ja&&(ja=-1E5);
ja>p+1E5&&(ja=p+1E5);t?(E=F,O=N,N=F=ja,isNaN(ua)&&!this.fillToGraph&&(O=na),qa=ra,sa=ta):(O=E=ja,isNaN(ua)&&!this.fillToGraph&&(N=na));if(!Bb&&W<ua||Bb&&W<Ba)v.isNegative=!0,Ra&&(Na=Ra),Za&&(Va=Za),void 0!=Ja&&(Ha=Ja);$a=!1;isNaN(W)||(m?W>Ta?(Sa&&($a=!0),Sa=!1):(Sa||($a=!0),Sa=!0):v.isNegative=W<Pa?!0:!1,Ba=W);var Pb=!1;J&&a.chartScrollbar.ignoreCustomColors&&(Pb=!0);Pb||(void 0!=v.color&&(Na=v.color),v.fillColors&&(Na=v.fillColors));F=d.fitToBounds(F,-3E4,3E4);switch(g){case "line":if(isNaN(W))z||
(this.drawLineGraph(x,u,T,U),x=[],u=[],T=[],U=[]);else{if(Math.abs(E-jb)>=lb||Math.abs(F-kb)>=lb)x.push(E),u.push(F),jb=E,kb=F;ya=E;Ea=F;ka=E;la=F;!Ma||isNaN(N)||isNaN(O)||(T.push(O),U.push(N));if($a||void 0!=v.lineColor&&v.lineColor!=this.lineColorSwitched||void 0!=v.fillColors&&v.fillColors!=this.fillColorsSwitched||!isNaN(v.dashLength))this.drawLineGraph(x,u,T,U),x=[E],u=[F],T=[],U=[],!Ma||isNaN(N)||isNaN(O)||(T.push(O),U.push(N)),m?(Sa?(this.lineColorSwitched=xa,this.fillColorsSwitched=wb):(this.lineColorSwitched=
Ja,this.fillColorsSwitched=Ra),void 0===this.bulletColor&&(this.bulletColorSwitched=xa)):(this.lineColorSwitched=v.lineColor,this.fillColorsSwitched=v.fillColors,void 0===this.bulletColor&&(this.bulletColorSwitched=this.lineColorSwitched)),this.dashLengthSwitched=v.dashLength;v.gap&&(this.drawLineGraph(x,u,T,U),x=[],u=[],T=[],U=[])}break;case "smoothedLine":if(isNaN(W))z||(this.drawSmoothedGraph(x,u,T,U),x=[],u=[],T=[],U=[]);else{if(Math.abs(E-jb)>=lb||Math.abs(F-kb)>=lb)x.push(E),u.push(F),jb=E,
kb=F;ya=E;Ea=F;ka=E;la=F;!Ma||isNaN(N)||isNaN(O)||(T.push(O),U.push(N));void 0==v.lineColor&&void 0==v.fillColors&&isNaN(v.dashLength)||(this.drawSmoothedGraph(x,u,T,U),x=[E],u=[F],T=[],U=[],!Ma||isNaN(N)||isNaN(O)||(T.push(O),U.push(N)),this.lineColorSwitched=v.lineColor,this.fillColorsSwitched=v.fillColors,this.dashLengthSwitched=v.dashLength);v.gap&&(this.drawSmoothedGraph(x,u,T,U),x=[],u=[],T=[],U=[])}break;case "step":if(!isNaN(W)){t?(isNaN(A)||(x.push(A),u.push(F-wa)),u.push(F-wa),x.push(E),
u.push(F+Ga),x.push(E),!Ma||isNaN(N)||isNaN(O)||(isNaN(B)||(T.push(B),U.push(N-wa)),T.push(O),U.push(N-wa),T.push(O),U.push(N+Ga))):(isNaN(y)||(u.push(y),x.push(E-wa)),x.push(E-wa),u.push(F),x.push(E+Ga),u.push(F),!Ma||isNaN(N)||isNaN(O)||(isNaN(D)||(T.push(O-wa),U.push(D)),T.push(O-wa),U.push(N),T.push(O+Ga),U.push(N)));A=E;y=F;B=O;D=N;ya=E;Ea=F;ka=E;la=F;if($a||void 0!=v.lineColor||void 0!=v.fillColors||!isNaN(v.dashLength)){var Db=x[x.length-2],dc=u[u.length-2];x.pop();u.pop();T.pop();U.pop();
this.drawLineGraph(x,u,T,U);x=[Db];u=[dc];T=[];U=[];Ma&&(T=[Db,Db+wa+Ga],U=[D,D]);t?(u.push(F+Ga),x.push(E)):(x.push(E+Ga),u.push(F));this.lineColorSwitched=v.lineColor;this.fillColorsSwitched=v.fillColors;this.dashLengthSwitched=v.dashLength;m&&(Sa?(this.lineColorSwitched=xa,this.fillColorsSwitched=wb):(this.lineColorSwitched=Ja,this.fillColorsSwitched=Ra))}if(Ob||v.gap)A=y=NaN,this.drawLineGraph(x,u,T,U),x=[],u=[],T=[],U=[]}else if(!z){if(1>=this.periodSpan||1<this.periodSpan&&E-A>wa+Ga)A=y=NaN;
this.drawLineGraph(x,u,T,U);x=[];u=[];T=[];U=[]}break;case "column":Ca=Ha;void 0!=v.lineColor&&(Ca=v.lineColor);if(!isNaN(W)){m||(v.isNegative=W<Pa?!0:!1);v.isNegative&&(Ra&&(Na=Ra),void 0!=Ja&&(Ca=Ja));var Qb=f.min,Rb=f.max,ob=ua;isNaN(ob)&&(ob=Pa);if(!(W<Qb&&ob<Qb||W>Rb&&ob>Rb)){var Aa;if(t){"3d"==M?(R=F-(r/2-this.depthCount+1)*(k+V)+V/2+Q*Z,S=O+H*Z,Aa=Z):(R=Math.floor(F-(r/2-Z)*(k+V)+V/2),S=O,Aa=0);K=k;ya=E;Ea=R+k/2;ka=E;la=R+k/2;R+K>q+Aa*Q&&(K=q-R+Aa*Q);R<Aa*Q&&(K+=R,R=Aa*Q);ba=E-O;var ec=S;S=
d.fitToBounds(S,0,p);ba+=ec-S;ba=d.fitToBounds(ba,-S,p-S+H*Z);v.labelIsNegative=0>ba?!0:!1;0===ba&&1/W===1/-0&&(v.labelIsNegative=!0);isNaN(G.percentWidthValue)||(K=this.height*G.percentWidthValue/100,R=ja-K/2,Ea=R+K/2);K=d.roundTo(K,2);ba=d.roundTo(ba,2);R<q&&0<K&&(va=new d.Cuboid(h,ba,K,H-a.d3x,Q-a.d3y,Na,Va,da,Ca,X,ga,w,t,ea,bb,mb,aa),v.columnWidth=Math.abs(ba),v.columnHeight=Math.abs(K))}else{"3d"==M?(S=E-(r/2-this.depthCount+1)*(k+V)+V/2+H*Z,R=N+Q*Z,Aa=Z):(S=E-(r/2-Z)*(k+V)+V/2,R=N,Aa=0);K=k;
ya=S+k/2;Ea=F;ka=S+k/2;la=F;S+K>p+Aa*H&&(K=p-S+Aa*H);S<Aa*H&&(K+=S-Aa*H,S=Aa*H);ba=F-N;v.labelIsNegative=0<ba?!0:!1;0===ba&&1/W!==1/Math.abs(W)&&(v.labelIsNegative=!0);var fc=R;R=d.fitToBounds(R,this.dy,q);ba+=fc-R;ba=d.fitToBounds(ba,-R+Q*Aa,q-R);isNaN(G.percentWidthValue)||(K=this.width*G.percentWidthValue/100,S=ja-K/2,ya=S+K/2);K=d.roundTo(K,2);ba=d.roundTo(ba,2);S<p+Z*H&&0<K&&(this.showOnAxis&&(R-=Q/2),va=new d.Cuboid(h,K,ba,H-a.d3x,Q-a.d3y,Na,Va,da,Ca,this.lineAlpha,ga,w,t,ea,bb,mb,aa),v.columnHeight=
Math.abs(ba),v.columnWidth=Math.abs(K))}}if(va){za=va.set;d.setCN(a,va.set,"graph-"+this.type);d.setCN(a,va.set,"graph-"+this.id);v.className&&d.setCN(a,va.set,v.className,!0);v.columnGraphics=za;S=d.roundTo(S,2);R=d.roundTo(R,2);za.translate(S,R);(v.url||this.showHandOnHover)&&za.setAttr("cursor","pointer");if(!J){"none"==M&&(I=t?(this.end+1-L)*C-c:C*L+c);"3d"==M&&(t?(I=(this.end+1-L)*C-c-1E3*this.depthCount,ya+=H*Z,ka+=H*Z,v.y+=H*Z):(I=(C-c)*(L+1)+1E3*this.depthCount,Ea+=Q*Z,la+=Q*Z,v.y+=Q*Z));
if("regular"==M||"100%"==M)I=t?0<Ia.value?(this.end+1-L)*C+c:(this.end+1-L)*C-c:0<Ia.value?C*L+c:C*L-c;this.columnsArray.push({column:va,depth:I});v.x=t?R+K/2:S+K/2;this.ownColumns.push(va);this.animateColumns(va,L,E,O,F,N);this.addListeners(za,v);void 0!==this.tabIndex&&za.setAttr("tabindex",this.tabIndex)}this.columnsSet.push(za)}}break;case "candlestick":if(!isNaN(ua)&&!isNaN(W)){var Xa,cb;Ca=Ha;void 0!=v.lineColor&&(Ca=v.lineColor);ya=E;la=Ea=F;ka=E;if(t){"open"==l&&(ka=O);"high"==l&&(ka=sa);
"low"==l&&(ka=qa);E=d.fitToBounds(E,0,pa);O=d.fitToBounds(O,0,pa);qa=d.fitToBounds(qa,0,pa);sa=d.fitToBounds(sa,0,pa);if(0===E&&0===O&&0===qa&&0===sa)continue;if(E==pa&&O==pa&&qa==pa&&sa==pa)continue;R=F-k/2;S=O;K=k;R+K>q&&(K=q-R);0>R&&(K+=R,R=0);if(R<q&&0<K){var Eb,Fb;W>ua?(Eb=[E,sa],Fb=[O,qa]):(Eb=[O,sa],Fb=[E,qa]);!isNaN(sa)&&!isNaN(qa)&&F<q&&0<F&&(Xa=d.line(h,Eb,[F,F],Ca,X,da),cb=d.line(h,Fb,[F,F],Ca,X,da));ba=E-O;va=new d.Cuboid(h,ba,K,H,Q,Na,Ya,da,Ca,X,ga,w,t,ea,bb,mb,aa)}}else{"open"==l&&(la=
N);"high"==l&&(la=ta);"low"==l&&(la=ra);F=d.fitToBounds(F,0,Fa);N=d.fitToBounds(N,0,Fa);ra=d.fitToBounds(ra,0,Fa);ta=d.fitToBounds(ta,0,Fa);if(0===F&&0===N&&0===ra&&0===ta)continue;if(F==Fa&&N==Fa&&ra==Fa&&ta==Fa)continue;S=E-k/2;R=N+da/2;K=k;S+K>p&&(K=p-S);0>S&&(K+=S,S=0);ba=F-N;if(S<p&&0<K){Bb&&W>=ua&&(Va=0);var va=new d.Cuboid(h,K,ba,H,Q,Na,Va,da,Ca,X,ga,w,t,ea,bb,mb,aa),Gb,Hb;W>ua?(Gb=[F,ta],Hb=[N,ra]):(Gb=[N,ta],Hb=[F,ra]);!isNaN(ta)&&!isNaN(ra)&&E<p&&0<E&&(Xa=d.line(h,[E,E],Gb,Ca,X,da),cb=d.line(h,
[E,E],Hb,Ca,X,da),d.setCN(a,Xa,this.bcn+"line-high"),v.className&&d.setCN(a,Xa,v.className,!0),d.setCN(a,cb,this.bcn+"line-low"),v.className&&d.setCN(a,cb,v.className,!0))}}va&&(za=va.set,v.columnGraphics=za,fa.push(za),za.translate(S,R-da/2),(v.url||this.showHandOnHover)&&za.setAttr("cursor","pointer"),Xa&&(fa.push(Xa),fa.push(cb)),J||(v.x=t?R+K/2:S+K/2,this.animateColumns(va,L,E,O,F,N),this.addListeners(za,v),void 0!==this.tabIndex&&za.setAttr("tabindex",this.tabIndex)))}break;case "ohlc":if(!(isNaN(ua)||
isNaN(zb)||isNaN(Ab)||isNaN(W))){var Sb=h.set();fa.push(Sb);W<ua&&(v.isNegative=!0,void 0!=Ja&&(Ha=Ja));void 0!=v.lineColor&&(Ha=v.lineColor);var pb,qb,rb;if(t){la=F;ka=E;"open"==l&&(ka=O);"high"==l&&(ka=sa);"low"==l&&(ka=qa);qa=d.fitToBounds(qa,0,pa);sa=d.fitToBounds(sa,0,pa);if(0===E&&0===O&&0===qa&&0===sa)continue;if(E==pa&&O==pa&&qa==pa&&sa==pa)continue;var Ib=F-k/2,Ib=d.fitToBounds(Ib,0,q),Tb=d.fitToBounds(F,0,q),Jb=F+k/2,Jb=d.fitToBounds(Jb,0,q);0<=O&&O<=pa&&(qb=d.line(h,[O,O],[Ib,Tb],Ha,X,
da,ea));0<F&&F<q&&(pb=d.line(h,[qa,sa],[F,F],Ha,X,da,ea));0<=E&&E<=pa&&(rb=d.line(h,[E,E],[Tb,Jb],Ha,X,da,ea))}else{la=F;"open"==l&&(la=N);"high"==l&&(la=ta);"low"==l&&(la=ra);var ka=E,ra=d.fitToBounds(ra,0,Fa),ta=d.fitToBounds(ta,0,Fa),Kb=E-k/2,Kb=d.fitToBounds(Kb,0,p),Ub=d.fitToBounds(E,0,p),Lb=E+k/2,Lb=d.fitToBounds(Lb,0,p);0<=N&&N<=Fa&&(qb=d.line(h,[Kb,Ub],[N,N],Ha,X,da,ea));0<E&&E<p&&(pb=d.line(h,[E,E],[ra,ta],Ha,X,da,ea));0<=F&&F<=Fa&&(rb=d.line(h,[Ub,Lb],[F,F],Ha,X,da,ea))}fa.push(qb);fa.push(pb);
fa.push(rb);d.setCN(a,qb,this.bcn+"stroke-open");d.setCN(a,rb,this.bcn+"stroke-close");d.setCN(a,pb,this.bcn+"stroke");v.className&&d.setCN(a,Sb,v.className,!0);ya=E;Ea=F}}if(!J&&!isNaN(W)){var Vb=this.hideBulletsCount;if(this.end-this.start<=Vb||0===Vb){var Wb=this.createBullet(v,ka,la,L),Xb=this.labelText;if(Xb&&!isNaN(ya)&&!isNaN(ya)){var gc=this.createLabel(v,Xb),Yb=0;Wb&&(Yb=Wb.size);this.positionLabel(v,ya,Ea,gc,Yb)}if("regular"==M||"100%"==M){var Zb=f.totalText;if(Zb){var Oa=this.createLabel(v,
Zb,f.totalTextColor);d.setCN(a,Oa,this.bcn+"label-total");this.allBullets.push(Oa);if(Oa){var $b=Oa.getBBox(),ac=$b.width,bc=$b.height,db,eb,sb=f.totalTextOffset,cc=f.totals[L];cc&&cc.remove();var fb=0;"column"!=g&&(fb=this.bulletSize);t?(eb=Ea,db=0>W?E-ac/2-2-fb-sb:E+ac/2+3+fb+sb):(db=ya,eb=0>W?F+bc/2+fb+sb:F-bc/2-3-fb-sb);Oa.translate(db,eb);f.totals[L]=Oa;t?(0>eb||eb>q)&&Oa.remove():(0>db||db>p)&&Oa.remove()}}}}}}}this.lastDataItem=v;if("line"==g||"step"==g||"smoothedLine"==g)"smoothedLine"==g?
this.drawSmoothedGraph(x,u,T,U):this.drawLineGraph(x,u,T,U),J||this.launchAnimation();this.bulletsHidden&&this.hideBullets();this.customBulletsHidden&&this.hideCustomBullets()},animateColumns:function(a,b){var c=this,e=c.chart.startDuration;0<e&&!c.animationPlayed&&(c.seqAn?(a.set.hide(),c.animationArray.push(a),e=setTimeout(function(){c.animate.call(c)},e/(c.end-c.start+1)*(b-c.start)*1E3),c.timeOuts.push(e)):c.animate(a),c.chart.animatable.push(a))},createLabel:function(a,b,c){var e=this.chart,
h=a.labelColor;h||(h=this.color);h||(h=e.color);c&&(h=c);c=this.fontSize;void 0===c&&(this.fontSize=c=e.fontSize);var f=this.labelFunction;b=e.formatString(b,a);b=d.cleanFromEmpty(b);f&&(b=f(a,b));if(void 0!==b&&""!==b)return a=d.text(this.container,b,h,e.fontFamily,c),a.node.style.pointerEvents="none",d.setCN(e,a,this.bcn+"label"),this.bulletSet.push(a),a},positiveClip:function(a){a.clipRect(this.pmx,this.pmy,this.pmw,this.pmh)},negativeClip:function(a){a.clipRect(this.nmx,this.nmy,this.nmw,this.nmh)},
drawLineGraph:function(a,b,c,e){var h=this;if(1<a.length){var f=h.noRounding,g=h.set,k=h.chart,l=h.container,m=l.set(),p=l.set();g.push(p);g.push(m);var q=h.lineAlpha,n=h.lineThickness,g=h.fillAlphas,t=h.lineColorR,r=h.negativeLineAlpha;isNaN(r)&&(r=q);var w=h.lineColorSwitched;w&&(t=w);var w=h.fillColorsR,z=h.fillColorsSwitched;z&&(w=z);var x=h.dashLength;(z=h.dashLengthSwitched)&&(x=z);var z=h.negativeLineColor,u=h.negativeFillColors,A=h.negativeFillAlphas,y=h.baseCoord;0!==h.negativeBase&&(y=h.valueAxis.getCoordinate(h.negativeBase,
f),y>h.height&&(y=h.height),0>y&&(y=0));q=d.line(l,a,b,t,q,n,x,!1,!0,f);q.node.setAttribute("stroke-linejoin","round");d.setCN(k,q,h.bcn+"stroke");m.push(q);m.click(function(a){h.handleGraphEvent(a,"clickGraph")}).mouseover(function(a){h.handleGraphEvent(a,"rollOverGraph")}).mouseout(function(a){h.handleGraphEvent(a,"rollOutGraph")}).touchmove(function(a){h.chart.handleMouseMove(a)}).touchend(function(a){h.chart.handleTouchEnd(a)});void 0===z||h.useNegativeColorIfDown||(n=d.line(l,a,b,z,r,n,x,!1,
!0,f),n.node.setAttribute("stroke-linejoin","round"),d.setCN(k,n,h.bcn+"stroke"),d.setCN(k,n,h.bcn+"stroke-negative"),p.push(n));if(0<g||0<A)if(n=a.join(";").split(";"),r=b.join(";").split(";"),q=k.type,"serial"==q||"radar"==q?0<c.length?(c.reverse(),e.reverse(),n=a.concat(c),r=b.concat(e)):"radar"==q?(r.push(0),n.push(0)):h.rotate?(r.push(r[r.length-1]),n.push(y),r.push(r[0]),n.push(y),r.push(r[0]),n.push(n[0])):(n.push(n[n.length-1]),r.push(y),n.push(n[0]),r.push(y),n.push(a[0]),r.push(r[0])):"xy"==
q&&(b=h.fillToAxis)&&(d.isString(b)&&(b=k.getValueAxisById(b)),"H"==b.orientation?(y="top"==b.position?0:b.height,n.push(n[n.length-1]),r.push(y),n.push(n[0]),r.push(y),n.push(a[0]),r.push(r[0])):(y="left"==b.position?0:b.width,r.push(r[r.length-1]),n.push(y),r.push(r[0]),n.push(y),r.push(r[0]),n.push(n[0]))),a=h.gradientRotation,0<g&&(b=d.polygon(l,n,r,w,g,1,"#000",0,a,f),b.pattern(h.pattern,NaN,k.path),d.setCN(k,b,h.bcn+"fill"),m.push(b)),u||void 0!==z)isNaN(A)&&(A=g),u||(u=z),f=d.polygon(l,n,r,
u,A,1,"#000",0,a,f),d.setCN(k,f,h.bcn+"fill"),d.setCN(k,f,h.bcn+"fill-negative"),f.pattern(h.pattern,NaN,k.path),p.push(f),p.click(function(a){h.handleGraphEvent(a,"clickGraph")}).mouseover(function(a){h.handleGraphEvent(a,"rollOverGraph")}).mouseout(function(a){h.handleGraphEvent(a,"rollOutGraph")}).touchmove(function(a){h.chart.handleMouseMove(a)}).touchend(function(a){h.chart.handleTouchEnd(a)});h.applyMask(p,m)}},applyMask:function(a,b){var c=a.length();"serial"!=this.chart.type||this.scrollbar||
(this.positiveClip(b),0<c&&this.negativeClip(a))},drawSmoothedGraph:function(a,b,c,e){if(1<a.length){var h=this.set,f=this.chart,g=this.container,k=g.set(),l=g.set();h.push(l);h.push(k);var m=this.lineAlpha,p=this.lineThickness,h=this.dashLength,q=this.fillAlphas,n=this.lineColorR,t=this.fillColorsR,r=this.negativeLineColor,w=this.negativeFillColors,z=this.negativeFillAlphas,x=this.baseCoord,u=this.lineColorSwitched;u&&(n=u);(u=this.fillColorsSwitched)&&(t=u);var A=this.negativeLineAlpha;isNaN(A)&&
(A=m);u=this.getGradRotation();m=new d.Bezier(g,a,b,n,m,p,t,0,h,void 0,u);d.setCN(f,m,this.bcn+"stroke");k.push(m.path);void 0!==r&&(p=new d.Bezier(g,a,b,r,A,p,t,0,h,void 0,u),d.setCN(f,p,this.bcn+"stroke"),d.setCN(f,p,this.bcn+"stroke-negative"),l.push(p.path));0<q&&(p=a.join(";").split(";"),m=b.join(";").split(";"),n="",0<c.length?(c.push("M"),e.push("M"),c.reverse(),e.reverse(),p=a.concat(c),m=b.concat(e)):(this.rotate?(n+=" L"+x+","+b[b.length-1],n+=" L"+x+","+b[0]):(n+=" L"+a[a.length-1]+","+
x,n+=" L"+a[0]+","+x),n+=" L"+a[0]+","+b[0]),a=new d.Bezier(g,p,m,NaN,0,0,t,q,h,n,u),d.setCN(f,a,this.bcn+"fill"),a.path.pattern(this.pattern,NaN,f.path),k.push(a.path),w||void 0!==r)&&(z||(z=q),w||(w=r),g=new d.Bezier(g,p,m,NaN,0,0,w,z,h,n,u),g.path.pattern(this.pattern,NaN,f.path),d.setCN(f,g,this.bcn+"fill"),d.setCN(f,g,this.bcn+"fill-negative"),l.push(g.path));this.applyMask(l,k)}},launchAnimation:function(){var a=this,b=a.chart.startDuration;if(0<b&&!a.animationPlayed){var c=a.set,e=a.bulletSet;
d.VML||(c.attr({opacity:a.startAlpha}),e.attr({opacity:a.startAlpha}));c.hide();e.hide();a.seqAn?(b=setTimeout(function(){a.animateGraphs.call(a)},a.index*b*1E3),a.timeOuts.push(b)):a.animateGraphs()}},animateGraphs:function(){var a=this.chart,b=this.set,c=this.bulletSet,e=this.x,d=this.y;b.show();c.show();var f=a.startDuration,g=a.startEffect;b&&(this.rotate?(b.translate(-1E3,d),c.translate(-1E3,d)):(b.translate(e,-1E3),c.translate(e,-1E3)),b.animate({opacity:1,translate:e+","+d},f,g),c.animate({opacity:1,
translate:e+","+d},f,g),a.animatable.push(b))},animate:function(a){var b=this.chart,c=this.animationArray;!a&&0<c.length&&(a=c[0],c.shift());c=d[d.getEffect(b.startEffect)];b=b.startDuration;a&&(this.rotate?a.animateWidth(b,c):a.animateHeight(b,c),a.set.show())},legendKeyColor:function(){var a=this.legendColor,b=this.lineAlpha;void 0===a&&(a=this.lineColorR,0===b&&(b=this.fillColorsR)&&(a="object"==typeof b?b[0]:b));return a},legendKeyAlpha:function(){var a=this.legendAlpha;void 0===a&&(a=this.lineAlpha,
this.fillAlphas>a&&(a=this.fillAlphas),0===a&&(a=this.bulletAlpha),0===a&&(a=1));return a},createBullet:function(a,b,c){if(!isNaN(b)&&!isNaN(c)&&("none"!=this.bullet||this.customBullet||a.bullet||a.customBullet)){var e=this.chart,h=this.container,f=this.bulletOffset,g=this.bulletSize;isNaN(a.bulletSize)||(g=a.bulletSize);var k=a.values.value,l=this.maxValue,m=this.minValue,p=this.maxBulletSize,q=this.minBulletSize;isNaN(l)||(isNaN(k)||(g=(k-m)/(l-m)*(p-q)+q),m==l&&(g=p));l=g;this.bulletAxis&&(g=a.values.error,
isNaN(g)||(k=g),g=this.bulletAxis.stepWidth*k);g<this.minBulletSize&&(g=this.minBulletSize);this.rotate?b=a.isNegative?b-f:b+f:c=a.isNegative?c+f:c-f;q=this.bulletColorR;a.lineColor&&void 0===this.bulletColor&&(this.bulletColorSwitched=a.lineColor);this.bulletColorSwitched&&(q=this.bulletColorSwitched);a.isNegative&&void 0!==this.bulletColorNegative&&(q=this.bulletColorNegative);void 0!==a.color&&(q=a.color);var n;"xy"==e.type&&this.valueField&&(n=this.pattern,a.pattern&&(n=a.pattern));f=this.bullet;
a.bullet&&(f=a.bullet);var k=this.bulletBorderThickness,m=this.bulletBorderColorR,p=this.bulletBorderAlpha,t=this.bulletAlpha;m||(m=q);this.useLineColorForBulletBorder&&(m=this.lineColorR,a.isNegative&&this.negativeLineColor&&(m=this.negativeLineColor),this.lineColorSwitched&&(m=this.lineColorSwitched));var r=a.alpha;isNaN(r)||(t=r);n=d.bullet(h,f,g,q,t,k,m,p,l,0,n,e.path);l=this.customBullet;a.customBullet&&(l=a.customBullet);l&&(n&&n.remove(),"function"==typeof l?(l=new l,l.chart=e,a.bulletConfig&&
(l.availableSpace=c,l.graph=this,l.graphDataItem=a,l.bulletY=c,a.bulletConfig.minCoord=this.minCoord-c,l.bulletConfig=a.bulletConfig),l.write(h),n&&l.showBullet&&l.set.push(n),a.customBulletGraphics=l.cset,n=l.set):(n=h.set(),l=h.image(l,0,0,g,g),n.push(l),this.centerCustomBullets&&l.translate(-g/2,-g/2)));if(n){(a.url||this.showHandOnHover)&&n.setAttr("cursor","pointer");if("serial"==e.type||"gantt"==e.type)if(-.5>b||b>this.width||c<-g/2||c>this.height)n.remove(),n=null;n&&(this.bulletSet.push(n),
n.translate(b,c),this.addListeners(n,a),this.allBullets.push(n));a.bx=b;a.by=c;d.setCN(e,n,this.bcn+"bullet");a.className&&d.setCN(e,n,a.className,!0)}if(n){n.size=g||0;if(e=this.bulletHitAreaSize)h=d.circle(h,e,"#FFFFFF",.001,0),h.translate(b,c),a.hitBullet=h,this.bulletSet.push(h),this.addListeners(h,a);a.bulletGraphics=n;void 0!==this.tabIndex&&n.setAttr("tabindex",this.tabIndex)}else n={size:0};n.graphDataItem=a;return n}},showBullets:function(){var a=this.allBullets,b;this.bulletsHidden=!1;for(b=
0;b<a.length;b++)a[b].show()},hideBullets:function(){var a=this.allBullets,b;this.bulletsHidden=!0;for(b=0;b<a.length;b++)a[b].hide()},showCustomBullets:function(){var a=this.allBullets,b;this.customBulletsHidden=!1;for(b=0;b<a.length;b++){var c=a[b].graphDataItem;c&&c.customBulletGraphics&&c.customBulletGraphics.show()}},hideCustomBullets:function(){var a=this.allBullets,b;this.customBulletsHidden=!0;for(b=0;b<a.length;b++){var c=a[b].graphDataItem;c&&c.customBulletGraphics&&c.customBulletGraphics.hide()}},
addListeners:function(a,b){var c=this;a.mouseover(function(a){c.handleRollOver(b,a)}).mouseout(function(a){c.handleRollOut(b,a)}).touchend(function(a){c.handleRollOver(b,a);c.chart.panEventsEnabled&&c.handleClick(b,a)}).touchstart(function(a){c.handleRollOver(b,a)}).click(function(a){c.handleClick(b,a)}).dblclick(function(a){c.handleDoubleClick(b,a)}).contextmenu(function(a){c.handleRightClick(b,a)});var e=c.chart;if(e.accessible&&c.accessibleLabel){var d=e.formatString(c.accessibleLabel,b);e.makeAccessible(a,
d)}},handleRollOver:function(a,b){this.handleGraphEvent(b,"rollOverGraph");if(a){var c=this.chart;a.bulletConfig&&(c.isRolledOverBullet=!0);var e={type:"rollOverGraphItem",item:a,index:a.index,graph:this,target:this,chart:this.chart,event:b};this.fire(e);c.fire(e);clearTimeout(c.hoverInt);(c=c.chartCursor)&&c.valueBalloonsEnabled||this.showGraphBalloon(a,"V",!0)}},handleRollOut:function(a,b){var c=this.chart;if(a){var e={type:"rollOutGraphItem",item:a,index:a.index,graph:this,target:this,chart:this.chart,
event:b};this.fire(e);c.fire(e);c.isRolledOverBullet=!1}this.handleGraphEvent(b,"rollOutGraph");(c=c.chartCursor)&&c.valueBalloonsEnabled||this.hideBalloon()},handleClick:function(a,b){if(!this.chart.checkTouchMoved()&&this.chart.checkTouchDuration(b)){if(a){var c={type:"clickGraphItem",item:a,index:a.index,graph:this,target:this,chart:this.chart,event:b};this.fire(c);this.chart.fire(c);d.getURL(a.url,this.urlTarget)}this.handleGraphEvent(b,"clickGraph")}},handleGraphEvent:function(a,b){var c={type:b,
graph:this,target:this,chart:this.chart,event:a};this.fire(c);this.chart.fire(c)},handleRightClick:function(a,b){if(a){var c={type:"rightClickGraphItem",item:a,index:a.index,graph:this,target:this,chart:this.chart,event:b};this.fire(c);this.chart.fire(c)}},handleDoubleClick:function(a,b){if(a){var c={type:"doubleClickGraphItem",item:a,index:a.index,graph:this,target:this,chart:this.chart,event:b};this.fire(c);this.chart.fire(c)}},zoom:function(a,b){this.start=a;this.end=b;this.draw()},changeOpacity:function(a){var b=
this.set;b&&b.setAttr("opacity",a);if(b=this.ownColumns){var c;for(c=0;c<b.length;c++){var e=b[c].set;e&&e.setAttr("opacity",a)}}(b=this.bulletSet)&&b.setAttr("opacity",a)},destroy:function(){d.remove(this.set);d.remove(this.bulletSet);var a=this.timeOuts;if(a){var b;for(b=0;b<a.length;b++)clearTimeout(a[b])}this.timeOuts=[]},createBalloon:function(){var a=this.chart;this.balloon?this.balloon.destroy&&this.balloon.destroy():this.balloon={};var b=this.balloon;d.extend(b,a.balloon,!0);b.chart=a;b.mainSet=
a.plotBalloonsSet;b.className=this.id},hideBalloon:function(){var a=this,b=a.chart;b.chartCursor?b.chartCursor.valueBalloonsEnabled||b.hideBalloon():b.hideBalloon();clearTimeout(a.hoverInt);a.hoverInt=setTimeout(function(){a.hideBalloonReal.call(a)},b.hideBalloonTime)},hideBalloonReal:function(){this.balloon&&this.balloon.hide();this.fixBulletSize()},fixBulletSize:function(){if(d.isModern){var a=this.resizedDItem;if(a){var b=a.bulletGraphics;if(b&&!b.doNotScale){b.translate(a.bx,a.by,1);var c=this.bulletAlpha;
isNaN(a.alpha)||(c=a.alpha);b.setAttr("fill-opacity",c);b.setAttr("stroke-opacity",this.bulletBorderAlpha)}}this.resizedDItem=null}},showGraphBalloon:function(a,b,c,e,h){if(a){var f=this.chart,g=this.balloon,k=0,l=0,m=f.chartCursor,p=!0;m?m.valueBalloonsEnabled||(g=f.balloon,k=this.x,l=this.y,p=!1):(g=f.balloon,k=this.x,l=this.y,p=!1);clearTimeout(this.hoverInt);if(f.chartCursor&&(this.currentDataItem=a,"serial"==f.type&&f.isRolledOverBullet&&f.chartCursor.valueBalloonsEnabled)){this.hideBalloonReal();
return}this.resizeBullet(a,e,h);if(g&&g.enabled&&this.showBalloon&&!this.hidden){var m=f.formatString(this.balloonText,a,!0),q=this.balloonFunction;q&&(m=q(a,a.graph));m&&(m=d.cleanFromEmpty(m));m&&""!==m?(e=f.getBalloonColor(this,a),g.drop||(g.pointerOrientation=b),b=a.x,h=a.y,f.rotate&&(b=a.y,h=a.x),b+=k,h+=l,isNaN(b)||isNaN(h)?this.hideBalloonReal():(a=this.width,q=this.height,p&&g.setBounds(k,l,a+k,q+l),g.changeColor(e),g.setPosition(b,h),g.fixPrevious(),g.fixedPosition&&(c=!1),!c&&"radar"!=f.type&&
(b<k||b>a+k||h<l-.5||h>q+l)?(g.showBalloon(m),g.hide(0)):(g.followCursor(c),g.showBalloon(m)))):(this.hideBalloonReal(),g.hide(),this.resizeBullet(a,e,h))}else this.hideBalloonReal()}},resizeBullet:function(a,b,c){this.fixBulletSize();if(a&&d.isModern&&(1!=b||!isNaN(c))){var e=a.bulletGraphics;e&&!e.doNotScale&&(e.translate(a.bx,a.by,b),isNaN(c)||(e.setAttr("fill-opacity",c),e.setAttr("stroke-opacity",c)),this.resizedDItem=a)}}})})();(function(){var d=window.AmCharts;d.ChartCursor=d.Class({construct:function(a){this.cname="ChartCursor";this.createEvents("changed","zoomed","onHideCursor","onShowCursor","draw","selected","moved","panning","zoomStarted");this.enabled=!0;this.cursorAlpha=1;this.selectionAlpha=.2;this.cursorColor="#CC0000";this.categoryBalloonAlpha=1;this.color="#FFFFFF";this.type="cursor";this.zoomed=!1;this.zoomable=!0;this.pan=!1;this.categoryBalloonDateFormat="MMM DD, YYYY";this.categoryBalloonText="[[category]]";
this.categoryBalloonEnabled=this.valueBalloonsEnabled=!0;this.rolledOver=!1;this.cursorPosition="middle";this.bulletsEnabled=this.skipZoomDispatch=!1;this.bulletSize=8;this.selectWithoutZooming=this.oneBalloonOnly=!1;this.graphBulletSize=1.7;this.animationDuration=.3;this.zooming=!1;this.adjustment=0;this.avoidBalloonOverlapping=!0;this.leaveCursor=!1;this.leaveAfterTouch=!0;this.valueZoomable=!1;this.balloonPointerOrientation="horizontal";this.hLineEnabled=this.vLineEnabled=!0;this.vZoomEnabled=
this.hZoomEnabled=!1;d.applyTheme(this,a,this.cname)},draw:function(){this.destroy();var a=this.chart;a.panRequired=!0;var b=a.container;this.rotate=a.rotate;this.container=b;this.prevLineHeight=this.prevLineWidth=NaN;b=b.set();b.translate(this.x,this.y);this.set=b;a.cursorSet.push(b);this.createElements();d.isString(this.limitToGraph)&&(this.limitToGraph=d.getObjById(a.graphs,this.limitToGraph),this.fullWidth=!1,this.cursorPosition="middle");this.pointer=this.balloonPointerOrientation.substr(0,1).toUpperCase();
this.isHidden=!1;this.hideLines();this.valueLineAxis||(this.valueLineAxis=a.valueAxes[0])},createElements:function(){var a=this,b=a.chart,c=b.dx,e=b.dy,h=a.width,f=a.height,g,k,l=a.cursorAlpha,m=a.valueLineAlpha;a.rotate?(g=m,k=l):(k=m,g=l);"xy"==b.type&&(k=l,void 0!==m&&(k=m),g=l);a.vvLine=d.line(a.container,[c,0,0],[e,0,f],a.cursorColor,g,1);d.setCN(b,a.vvLine,"cursor-line");d.setCN(b,a.vvLine,"cursor-line-vertical");a.hhLine=d.line(a.container,[0,h,h+c],[0,0,e],a.cursorColor,k,1);d.setCN(b,a.hhLine,
"cursor-line");d.setCN(b,a.hhLine,"cursor-line-horizontal");a.vLine=a.rotate?a.vvLine:a.hhLine;a.set.push(a.vvLine);a.set.push(a.hhLine);a.set.node.style.pointerEvents="none";a.fullLines=a.container.set();b=b.cursorLineSet;b.push(a.fullLines);b.translate(a.x,a.y);b.clipRect(-1,-1,h+2,f+2);void 0!==a.tabIndex&&(b.setAttr("tabindex",a.tabIndex),b.keyup(function(b){a.handleKeys(b)}).focus(function(b){a.showCursor()}).blur(function(b){a.hideCursor()}));a.set.clipRect(0,0,h,f)},handleKeys:function(a){var b=
this.prevIndex,c=this.chart;if(c){var e=c.chartData;e&&(isNaN(b)&&(b=e.length-1),37!=a.keyCode&&40!=a.keyCode||b--,39!=a.keyCode&&38!=a.keyCode||b++,b=d.fitToBounds(b,c.startIndex,c.endIndex),(a=this.chart.chartData[b])&&this.setPosition(a.x.categoryAxis),this.prevIndex=b)}},update:function(){var a=this.chart;if(a){var b=a.mouseX-this.x,c=a.mouseY-this.y;this.mouseX=b;this.mouseY=c;this.mouse2X=a.mouse2X-this.x;this.mouse2Y=a.mouse2Y-this.y;var e;if(a.chartData&&0<a.chartData.length){this.mouseIsOver()?
(this.hideGraphBalloons=!1,this.rolledOver=e=!0,this.updateDrawing(),this.vvLine&&isNaN(this.fx)&&(a.rotate||!this.limitToGraph)&&this.vvLine.translate(b,0),!this.hhLine||!isNaN(this.fy)||a.rotate&&this.limitToGraph||this.hhLine.translate(0,c),isNaN(this.mouse2X)?this.dispatchMovedEvent(b,c):e=!1):this.forceShow||this.hideCursor();if(this.zooming){if(!isNaN(this.mouse2X)){isNaN(this.mouse2X0)||this.dispatchPanEvent();return}if(this.pan){this.dispatchPanEvent();return}(this.hZoomEnabled||this.vZoomEnabled)&&
this.zooming&&this.updateSelection()}e&&this.showCursor()}}},updateDrawing:function(){this.drawing&&this.chart.setMouseCursor("crosshair");if(this.drawingNow&&(d.remove(this.drawingLine),1<Math.abs(this.drawStartX-this.mouseX)||1<Math.abs(this.drawStartY-this.mouseY))){var a=this.chart,b=a.marginTop,a=a.marginLeft;this.drawingLine=d.line(this.container,[this.drawStartX+a,this.mouseX+a],[this.drawStartY+b,this.mouseY+b],this.cursorColor,1,1)}},fixWidth:function(a){if(this.fullWidth&&this.prevLineWidth!=
a){var b=this.vvLine,c=0;b&&(b.remove(),c=b.x);b=this.container.set();b.translate(c,0);c=d.rect(this.container,a,this.height,this.cursorColor,this.cursorAlpha,this.cursorAlpha,this.cursorColor);d.setCN(this.chart,c,"cursor-fill");c.translate(-a/2-1,0);b.push(c);this.vvLine=b;this.fullLines.push(b);this.prevLineWidth=a}},fixHeight:function(a){if(this.fullWidth&&this.prevLineHeight!=a){var b=this.hhLine,c=0;b&&(b.remove(),c=b.y);b=this.container.set();b.translate(0,c);c=d.rect(this.container,this.width,
a,this.cursorColor,this.cursorAlpha);c.translate(0,-a/2);b.push(c);this.fullLines.push(b);this.hhLine=b;this.prevLineHeight=a}},fixVLine:function(a,b){if(!isNaN(a)){if(isNaN(this.prevLineX)){var c=0,e=this.mouseX;if(this.limitToGraph){var d=this.chart.categoryAxis;d&&(this.chart.rotate||(c="bottom"==d.position?this.height:-this.height),e=a)}this.vvLine.translate(e,c)}else this.prevLineX!=a&&this.vvLine.translate(this.prevLineX,this.prevLineY);this.fx=a;this.prevLineX!=a&&(c=this.animationDuration,
this.zooming&&(c=0),this.vvLine.stop(),this.vvLine.animate({translate:a+","+b},c,"easeOutSine"),this.prevLineX=a,this.prevLineY=b)}},fixHLine:function(a,b){if(!isNaN(a)){if(isNaN(this.prevLineY)){var c=0,e=this.mouseY;if(this.limitToGraph){var d=this.chart.categoryAxis;d&&(this.chart.rotate&&(c="right"==d.position?this.width:-this.width),e=a)}this.hhLine.translate(c,e)}else this.prevLineY!=a&&this.hhLine.translate(this.prevLineX,this.prevLineY);this.fy=a;this.prevLineY!=a&&(c=this.animationDuration,
this.zooming&&(c=0),this.hhLine.stop(),this.hhLine.animate({translate:b+","+a},c,"easeOutSine"),this.prevLineY=a,this.prevLineX=b)}},hideCursor:function(a){this.forceShow=!1;this.chart.wasTouched&&this.leaveAfterTouch||this.isHidden||this.leaveCursor||(this.hideCursorReal(),a?this.chart.handleCursorHide():this.fire({target:this,chart:this.chart,type:"onHideCursor"}),this.chart.setMouseCursor("auto"))},hideCursorReal:function(){this.hideLines();this.isHidden=!0;this.index=this.prevLineY=this.prevLineX=
this.mouseY0=this.mouseX0=this.fy=this.fx=NaN},hideLines:function(){this.vvLine&&this.vvLine.hide();this.hhLine&&this.hhLine.hide();this.fullLines&&this.fullLines.hide();this.isHidden=!0;this.chart.handleCursorHide()},showCursor:function(a){!this.drawing&&this.enabled&&(this.vLineEnabled&&this.vvLine&&this.vvLine.show(),this.hLineEnabled&&this.hhLine&&this.hhLine.show(),this.isHidden=!1,this.updateFullLine(),a||this.fire({target:this,chart:this.chart,type:"onShowCursor"}),this.pan&&this.chart.setMouseCursor("move"))},
updateFullLine:function(){this.zooming&&this.fullWidth&&this.selection&&(this.rotate?0<this.selection.height&&this.hhLine.hide():0<this.selection.width&&this.vvLine.hide())},updateSelection:function(){if(!this.pan&&this.enabled){var a=this.mouseX,b=this.mouseY;isNaN(this.fx)||(a=this.fx);isNaN(this.fy)||(b=this.fy);this.clearSelection();var c=this.mouseX0,e=this.mouseY0,h=this.width,f=this.height,a=d.fitToBounds(a,0,h),b=d.fitToBounds(b,0,f),g;a<c&&(g=a,a=c,c=g);b<e&&(g=b,b=e,e=g);this.hZoomEnabled?
h=a-c:c=0;this.vZoomEnabled?f=b-e:e=0;isNaN(this.mouse2X)&&0<Math.abs(h)&&0<Math.abs(f)&&(a=this.chart,b=d.rect(this.container,h,f,this.cursorColor,this.selectionAlpha),d.setCN(a,b,"cursor-selection"),b.width=h,b.height=f,b.translate(c,e),this.set.push(b),this.selection=b);this.updateFullLine()}},mouseIsOver:function(){var a=this.mouseX,b=this.mouseY;if(this.justReleased)return this.justReleased=!1,!0;if(this.mouseIsDown)return!0;if(!this.chart.mouseIsOver)return this.handleMouseOut(),!1;if(0<a&&
a<this.width&&0<b&&b<this.height)return!0;this.handleMouseOut()},fixPosition:function(){this.prevY=this.prevX=NaN},handleMouseDown:function(){this.update();if(this.mouseIsOver())if(this.mouseIsDown=!0,this.mouseX0=this.mouseX,this.mouseY0=this.mouseY,this.mouse2X0=this.mouse2X,this.mouse2Y0=this.mouse2Y,this.drawing)this.drawStartY=this.mouseY,this.drawStartX=this.mouseX,this.drawingNow=!0;else if(this.dispatchMovedEvent(this.mouseX,this.mouseY),!this.pan&&isNaN(this.mouse2X0)&&(isNaN(this.fx)||(this.mouseX0=
this.fx),isNaN(this.fy)||(this.mouseY0=this.fy)),this.hZoomEnabled||this.vZoomEnabled){this.zooming=!0;var a={chart:this.chart,target:this,type:"zoomStarted"};a.x=this.mouseX/this.width;a.y=this.mouseY/this.height;this.index0=a.index=this.index;this.timestamp0=this.timestamp;this.fire(a)}},registerInitialMouse:function(){},handleReleaseOutside:function(){this.mouseIsDown=!1;if(this.drawingNow){this.drawingNow=!1;d.remove(this.drawingLine);var a=this.drawStartX,b=this.drawStartY,c=this.mouseX,e=this.mouseY,
h=this.chart;(2<Math.abs(a-c)||2<Math.abs(b-e))&&this.fire({type:"draw",target:this,chart:h,initialX:a,initialY:b,finalX:c,finalY:e})}this.zooming&&(this.zooming=!1,this.selectWithoutZooming?this.dispatchZoomEvent("selected"):(this.hZoomEnabled||this.vZoomEnabled)&&this.dispatchZoomEvent("zoomed"),this.rolledOver&&this.dispatchMovedEvent(this.mouseX,this.mouseY));this.mouse2Y0=this.mouse2X0=this.mouseY0=this.mouseX0=NaN},dispatchZoomEvent:function(a){if(!this.pan){var b=this.selection;if(b&&3<Math.abs(b.width)&&
3<Math.abs(b.height)){var c=Math.min(this.index,this.index0),e=Math.max(this.index,this.index0),d=c,f=e,g=this.chart,k=g.chartData,l=g.categoryAxis;l&&l.parseDates&&!l.equalSpacing&&(d=k[c]?k[c].time:Math.min(this.timestamp0,this.timestamp),f=k[e]?g.getEndTime(k[e].time):Math.max(this.timestamp0,this.timestamp));var b={type:a,chart:this.chart,target:this,end:f,start:d,startIndex:c,endIndex:e,selectionHeight:b.height,selectionWidth:b.width,selectionY:b.y,selectionX:b.x},m;this.hZoomEnabled&&4<Math.abs(this.mouseX0-
this.mouseX)&&(b.startX=this.mouseX0/this.width,b.endX=this.mouseX/this.width,m=!0);this.vZoomEnabled&&4<Math.abs(this.mouseY0-this.mouseY)&&(b.startY=1-this.mouseY0/this.height,b.endY=1-this.mouseY/this.height,m=!0);m&&(this.prevY=this.prevX=NaN,this.fire(b),"selected"!=a&&this.clearSelection());this.hideCursor()}}},dispatchMovedEvent:function(a,b,c,e){a=Math.round(a);b=Math.round(b);if(!this.isHidden&&(a!=this.prevX||b!=this.prevY||"changed"==c)){c||(c="moved");var d=this.fx,f=this.fy;isNaN(d)&&
(d=a);isNaN(f)&&(f=b);var g=!1;this.zooming&&this.pan&&(g=!0);g={hidden:this.isHidden,type:c,chart:this.chart,target:this,x:a,y:b,finalX:d,finalY:f,zooming:this.zooming,panning:g,mostCloseGraph:this.mostCloseGraph,index:this.index,skip:e,hideBalloons:this.hideGraphBalloons};this.prevIndex=this.index;this.rotate?(g.position=b,g.finalPosition=f):(g.position=a,g.finalPosition=d);this.prevX=a;this.prevY=b;e?this.chart.handleCursorMove(g):(this.fire(g),"changed"==c&&this.chart.fire(g))}},dispatchPanEvent:function(){if(this.mouseIsDown){var a=
d.roundTo((this.mouseX-this.mouseX0)/this.width,3),b=d.roundTo((this.mouseY-this.mouseY0)/this.height,3),c=d.roundTo((this.mouse2X-this.mouse2X0)/this.width,3),e=d.roundTo((this.mouse2Y-this.mouse2Y0)/this.height,2),h=!1;0!==Math.abs(a)&&0!==Math.abs(b)&&(h=!0);if(this.prevDeltaX==a||this.prevDeltaY==b)h=!1;isNaN(c)||isNaN(e)||(0!==Math.abs(c)&&0!==Math.abs(e)&&(h=!0),this.prevDelta2X!=c&&this.prevDelta2Y!=e)||(h=!1);h&&(this.hideLines(),this.fire({type:"panning",chart:this.chart,target:this,deltaX:a,
deltaY:b,delta2X:c,delta2Y:e,index:this.index}),this.prevDeltaX=a,this.prevDeltaY=b,this.prevDelta2X=c,this.prevDelta2Y=e)}},clearSelection:function(){var a=this.selection;a&&(a.width=0,a.height=0,a.remove())},destroy:function(){this.clear();d.remove(this.selection);this.selection=null;clearTimeout(this.syncTO);d.remove(this.set)},clear:function(){},setTimestamp:function(a){this.timestamp=a},setIndex:function(a,b){a!=this.index&&(this.index=a,b||this.isHidden||this.dispatchMovedEvent(this.mouseX,
this.mouseY,"changed"))},handleMouseOut:function(){this.enabled&&this.rolledOver&&(this.leaveCursor||this.setIndex(void 0),this.forceShow=!1,this.hideCursor(),this.rolledOver=!1)},showCursorAt:function(a){var b=this.chart.categoryAxis;b&&this.setPosition(b.categoryToCoordinate(a),a)},setPosition:function(a,b){var c=this.chart,e=c.categoryAxis;if(e){var d,f;void 0===b&&(b=e.coordinateToValue(a));e.showBalloonAt(b,a);this.forceShow=!0;e.stickBalloonToCategory?c.rotate?this.fixHLine(a,0):this.fixVLine(a,
0):(this.showCursor(),c.rotate?this.hhLine.translate(0,a):this.vvLine.translate(a,0));c.rotate?d=a:f=a;c.rotate?(this.vvLine&&this.vvLine.hide(),this.hhLine&&this.hhLine.show()):(this.hhLine&&this.hhLine.hide(),this.vvLine&&this.vvLine.show());this.updateFullLine();this.isHidden=!1;this.dispatchMovedEvent(f,d,"moved",!0)}},enableDrawing:function(a){this.enabled=!a;this.hideCursor();this.drawing=a},syncWithCursor:function(a,b){clearTimeout(this.syncTO);a&&(a.isHidden?this.hideCursor(!0):this.syncWithCursorReal(a,
b))},isZooming:function(a){this.zooming=a},syncWithCursorReal:function(a,b){var c=a.vvLine,e=a.hhLine;this.index=a.index;this.forceShow=!0;this.zooming&&this.pan||this.showCursor(!0);this.hideGraphBalloons=b;this.justReleased=a.justReleased;this.zooming=a.zooming;this.index0=a.index0;this.mouseX0=a.mouseX0;this.mouseY0=a.mouseY0;this.mouse2X0=a.mouse2X0;this.mouse2Y0=a.mouse2Y0;this.timestamp0=a.timestamp0;this.prevDeltaX=a.prevDeltaX;this.prevDeltaY=a.prevDeltaY;this.prevDelta2X=a.prevDelta2X;this.prevDelta2Y=
a.prevDelta2Y;this.fx=a.fx;this.fy=a.fy;a.zooming&&this.updateSelection();var d=a.mouseX,f=a.mouseY;this.rotate?(d=NaN,this.vvLine&&this.vvLine.hide(),this.hhLine&&e&&(isNaN(a.fy)?this.hhLine.translate(0,a.mouseY):this.fixHLine(a.fy,0))):(f=NaN,this.hhLine&&this.hhLine.hide(),this.vvLine&&c&&(isNaN(a.fx)?this.vvLine.translate(a.mouseX,0):this.fixVLine(a.fx,0)));this.dispatchMovedEvent(d,f,"moved",!0)}})})();(function(){var d=window.AmCharts;d.SimpleChartScrollbar=d.Class({construct:function(a){this.createEvents("zoomed","zoomStarted","zoomEnded");this.backgroundColor="#D4D4D4";this.backgroundAlpha=1;this.selectedBackgroundColor="#EFEFEF";this.scrollDuration=this.selectedBackgroundAlpha=1;this.resizeEnabled=!0;this.hideResizeGrips=!1;this.scrollbarHeight=20;this.updateOnReleaseOnly=!1;9>document.documentMode&&(this.updateOnReleaseOnly=!0);this.dragIconHeight=this.dragIconWidth=35;this.dragIcon="dragIconRoundBig";
this.dragCursorHover="cursor: move; cursor: grab; cursor: -moz-grab; cursor: -webkit-grab;";this.dragCursorDown="cursor: move; cursor: grab; cursor: -moz-grabbing; cursor: -webkit-grabbing;";this.vResizeCursor="ns-resize";this.hResizeCursor="ew-resize";this.enabled=!0;this.percentStart=this.offset=0;this.percentEnd=1;d.applyTheme(this,a,"SimpleChartScrollbar")},getPercents:function(){var a=this.getDBox(),b=a.x,c=a.y,e=a.width,a=a.height;this.rotate?(b=1-c/this.height,c=1-(c+a)/this.height):(c=b/this.width,
b=(b+e)/this.width);this.percentStart=c;this.percentEnd=b},draw:function(){var a=this;a.destroy();if(a.enabled){var b=a.chart.container,c=a.rotate,e=a.chart;e.panRequired=!0;var h=b.set();a.set=h;c?d.setCN(e,h,"scrollbar-vertical"):d.setCN(e,h,"scrollbar-horizontal");e.scrollbarsSet.push(h);var f,g;c?(f=a.scrollbarHeight,g=e.plotAreaHeight):(g=a.scrollbarHeight,f=e.plotAreaWidth);a.width=f;if((a.height=g)&&f){var k=d.rect(b,f,g,a.backgroundColor,a.backgroundAlpha,1,a.backgroundColor,a.backgroundAlpha);
d.setCN(e,k,"scrollbar-bg");a.bg=k;h.push(k);k=d.rect(b,f,g,"#000",.005);h.push(k);a.invisibleBg=k;k.click(function(){a.handleBgClick()}).mouseover(function(){a.handleMouseOver()}).mouseout(function(){a.handleMouseOut()}).touchend(function(){a.handleBgClick()});k=d.rect(b,f,g,a.selectedBackgroundColor,a.selectedBackgroundAlpha);d.setCN(e,k,"scrollbar-bg-selected");a.selectedBG=k;h.push(k);f=d.rect(b,f,g,"#000",.005);a.dragger=f;h.push(f);f.mousedown(function(b){a.handleDragStart(b)}).mouseup(function(){a.handleDragStop()}).mouseover(function(){a.handleDraggerOver()}).mouseout(function(){a.handleMouseOut()}).touchstart(function(b){a.handleDragStart(b)}).touchend(function(){a.handleDragStop()});
g=e.pathToImages;var l,k=a.dragIcon.replace(/\.[a-z]*$/i,"");d.isAbsolute(k)&&(g="");c?(l=g+k+"H"+e.extension,g=a.dragIconWidth,c=a.dragIconHeight):(l=g+k+e.extension,c=a.dragIconWidth,g=a.dragIconHeight);k=b.image(l,0,0,c,g);d.setCN(e,k,"scrollbar-grip-left");l=b.image(l,0,0,c,g);d.setCN(e,l,"scrollbar-grip-right");var m=10,p=20;e.panEventsEnabled&&(m=25,p=a.scrollbarHeight);var q=d.rect(b,m,p,"#000",.005),n=d.rect(b,m,p,"#000",.005);n.translate(-(m-c)/2,-(p-g)/2);q.translate(-(m-c)/2,-(p-g)/2);
c=b.set([k,n]);b=b.set([l,q]);a.iconLeft=c;h.push(a.iconLeft);a.iconRight=b;h.push(b);a.updateGripCursor(!1);e.makeAccessible(c,a.accessibleLabel);e.makeAccessible(b,a.accessibleLabel);e.makeAccessible(f,a.accessibleLabel);c.setAttr("role","menuitem");b.setAttr("role","menuitem");f.setAttr("role","menuitem");void 0!==a.tabIndex&&(c.setAttr("tabindex",a.tabIndex),c.keyup(function(b){a.handleKeys(b,1,0)}));void 0!==a.tabIndex&&(f.setAttr("tabindex",a.tabIndex),f.keyup(function(b){a.handleKeys(b,1,1)}));
void 0!==a.tabIndex&&(b.setAttr("tabindex",a.tabIndex),b.keyup(function(b){a.handleKeys(b,0,1)}));c.mousedown(function(){a.leftDragStart()}).mouseup(function(){a.leftDragStop()}).mouseover(function(){a.iconRollOver()}).mouseout(function(){a.iconRollOut()}).touchstart(function(){a.leftDragStart()}).touchend(function(){a.leftDragStop()});b.mousedown(function(){a.rightDragStart()}).mouseup(function(){a.rightDragStop()}).mouseover(function(){a.iconRollOver()}).mouseout(function(){a.iconRollOut()}).touchstart(function(){a.rightDragStart()}).touchend(function(){a.rightDragStop()});
d.ifArray(e.chartData)?h.show():h.hide();a.hideDragIcons();a.clipDragger(!1)}h.translate(a.x,a.y);h.node.style.msTouchAction="none";h.node.style.touchAction="none"}},handleKeys:function(a,b,c){this.getPercents();var e=this.percentStart,d=this.percentEnd;if(this.rotate)var f=d,d=e,e=f;if(37==a.keyCode||40==a.keyCode)e-=.02*b,d-=.02*c;if(39==a.keyCode||38==a.keyCode)e+=.02*b,d+=.02*c;this.rotate&&(a=d,d=e,e=a);isNaN(d)||isNaN(e)||this.percentZoom(e,d,!0)},updateScrollbarSize:function(a,b){if(!isNaN(a)&&
!isNaN(b)){a=Math.round(a);b=Math.round(b);var c=this.dragger,e,d,f,g,k;this.rotate?(e=0,d=a,f=this.width+1,g=b-a,c.setAttr("height",b-a),c.setAttr("y",d)):(e=a,d=0,f=b-a,g=this.height+1,k=b-a,c.setAttr("x",e),c.setAttr("width",k));this.clipAndUpdate(e,d,f,g)}},update:function(){var a,b=!1,c,e,d=this.x,f=this.y,g=this.dragger,k=this.getDBox();if(k){c=k.x+d;e=k.y+f;var l=k.width,k=k.height,m=this.rotate,p=this.chart,q=this.width,n=this.height,t=p.mouseX,p=p.mouseY;a=this.initialMouse;this.forceClip&&
this.clipDragger(!0);if(this.dragging){var r=this.initialCoord;m?(a=r+(p-a),0>a&&(a=0),r=n-k,a>r&&(a=r),g.setAttr("y",a)):(a=r+(t-a),0>a&&(a=0),r=q-l,a>r&&(a=r),g.setAttr("x",a));this.clipDragger(!0)}if(this.resizingRight){if(m)if(a=p-e,!isNaN(this.maxHeight)&&a>this.maxHeight&&(a=this.maxHeight),a+e>n+f&&(a=n-e+f),0>a)this.resizingRight=!1,b=this.resizingLeft=!0;else{if(0===a||isNaN(a))a=.1;g.setAttr("height",a)}else if(a=t-c,!isNaN(this.maxWidth)&&a>this.maxWidth&&(a=this.maxWidth),a+c>q+d&&(a=
q-c+d),0>a)this.resizingRight=!1,b=this.resizingLeft=!0;else{if(0===a||isNaN(a))a=.1;g.setAttr("width",a)}this.clipDragger(!0)}if(this.resizingLeft){if(m)if(c=e,e=p,e<f&&(e=f),isNaN(e)&&(e=f),e>n+f&&(e=n+f),a=!0===b?c-e:k+c-e,!isNaN(this.maxHeight)&&a>this.maxHeight&&(a=this.maxHeight,e=c),0>a)this.resizingRight=!0,this.resizingLeft=!1,g.setAttr("y",c+k-f);else{if(0===a||isNaN(a))a=.1;g.setAttr("y",e-f);g.setAttr("height",a)}else if(e=t,e<d&&(e=d),isNaN(e)&&(e=d),e>q+d&&(e=q+d),a=!0===b?c-e:l+c-e,
!isNaN(this.maxWidth)&&a>this.maxWidth&&(a=this.maxWidth,e=c),0>a)this.resizingRight=!0,this.resizingLeft=!1,g.setAttr("x",c+l-d);else{if(0===a||isNaN(a))a=.1;g.setAttr("x",e-d);g.setAttr("width",a)}this.clipDragger(!0)}}},stopForceClip:function(){this.animating=this.forceClip=!1},clipDragger:function(a){var b=this.getDBox();if(b){var c=b.x,e=b.y,d=b.width,b=b.height,f=!1;if(this.rotate){if(c=0,d=this.width+1,this.clipY!=e||this.clipH!=b)f=!0}else if(e=0,b=this.height+1,this.clipX!=c||this.clipW!=
d)f=!0;f&&(this.clipAndUpdate(c,e,d,b),a&&(this.updateOnReleaseOnly||this.dispatchScrollbarEvent()))}},maskGraphs:function(){},clipAndUpdate:function(a,b,c,d){this.clipX=a;this.clipY=b;this.clipW=c;this.clipH=d;this.selectedBG.setAttr("width",c);this.selectedBG.setAttr("height",d);this.selectedBG.translate(a,b);this.updateDragIconPositions();this.maskGraphs(a,b,c,d)},dispatchScrollbarEvent:function(){if(this.skipEvent)this.skipEvent=!1;else{var a=this.chart;a.hideBalloon();var b=this.getDBox(),c=
b.x,d=b.y,h=b.width,b=b.height;this.getPercents();this.rotate?(c=d,h=this.height/b):h=this.width/h;this.fire({type:"zoomed",position:c,chart:a,target:this,multiplier:h,relativeStart:this.percentStart,relativeEnd:this.percentEnd})}},updateDragIconPositions:function(){var a=this.getDBox(),b=a.x,c=a.y,d=this.iconLeft,h=this.iconRight,f,g,k=this.scrollbarHeight;this.rotate?(f=this.dragIconWidth,g=this.dragIconHeight,d.translate((k-g)/2,c-f/2),h.translate((k-g)/2,c+a.height-f/2)):(f=this.dragIconHeight,
g=this.dragIconWidth,d.translate(b-g/2,(k-f)/2),h.translate(b-g/2+a.width,(k-f)/2))},showDragIcons:function(){this.resizeEnabled&&(this.iconLeft.show(),this.iconRight.show())},hideDragIcons:function(){if(!this.resizingLeft&&!this.resizingRight&&!this.dragging){if(this.hideResizeGrips||!this.resizeEnabled)this.iconLeft.hide(),this.iconRight.hide();this.removeCursors()}},removeCursors:function(){this.chart.setMouseCursor("auto")},fireZoomEvent:function(a){this.fire({type:a,chart:this.chart,target:this})},
percentZoom:function(a,b,c){a=d.fitToBounds(a,0,b);b=d.fitToBounds(b,a,1);if(this.dragger&&this.enabled){this.dragger.stop();isNaN(a)&&(a=0);isNaN(b)&&(b=1);var e,h;this.rotate?(e=this.height,b=e-e*b,h=e-e*a):(e=this.width,h=e*b,b=e*a);this.updateScrollbarSize(b,h);this.clipDragger(!1);this.getPercents();c&&this.dispatchScrollbarEvent()}},destroy:function(){this.clear();d.remove(this.set);d.remove(this.iconRight);d.remove(this.iconLeft)},clear:function(){},handleDragStart:function(){if(this.enabled){this.fireZoomEvent("zoomStarted");
var a=this.chart;this.dragger.stop();this.removeCursors();d.isModern&&(this.dragger.node.style.cssText=this.dragCursorDown);this.dragging=!0;var b=this.getDBox();this.rotate?(this.initialCoord=b.y,this.initialMouse=a.mouseY):(this.initialCoord=b.x,this.initialMouse=a.mouseX)}},handleDragStop:function(){this.updateOnReleaseOnly&&(this.update(),this.skipEvent=!1,this.dispatchScrollbarEvent());this.dragging=!1;this.mouseIsOver&&this.removeCursors();d.isModern&&(this.dragger.node.style.cssText=this.dragCursorHover);
this.update();this.fireZoomEvent("zoomEnded")},handleDraggerOver:function(){this.handleMouseOver();d.isModern&&(this.dragger.node.style.cssText=this.dragCursorHover)},leftDragStart:function(){this.fireZoomEvent("zoomStarted");this.dragger.stop();this.resizingLeft=!0;this.updateGripCursor(!0)},updateGripCursor:function(a){d.isModern&&(a=this.rotate?a?this.vResizeCursorDown:this.vResizeCursorHover:a?this.hResizeCursorDown:this.hResizeCursorHover)&&(this.iconRight&&(this.iconRight.node.style.cssText=
a),this.iconLeft&&(this.iconLeft.node.style.cssText=a))},leftDragStop:function(){this.resizingLeft&&(this.resizingLeft=!1,this.mouseIsOver||this.removeCursors(),this.updateOnRelease(),this.fireZoomEvent("zoomEnded"));this.updateGripCursor(!1)},rightDragStart:function(){this.fireZoomEvent("zoomStarted");this.dragger.stop();this.resizingRight=!0;this.updateGripCursor(!0)},rightDragStop:function(){this.resizingRight&&(this.resizingRight=!1,this.mouseIsOver||this.removeCursors(),this.updateOnRelease(),
this.fireZoomEvent("zoomEnded"));this.updateGripCursor(!1)},iconRollOut:function(){this.removeCursors()},iconRollOver:function(){this.rotate?this.vResizeCursor&&this.chart.setMouseCursor(this.vResizeCursor):this.hResizeCursor&&this.chart.setMouseCursor(this.hResizeCursor);this.handleMouseOver()},getDBox:function(){if(this.dragger)return this.dragger.getBBox()},handleBgClick:function(){var a=this;if(!a.resizingRight&&!a.resizingLeft){a.zooming=!0;var b,c,e=a.scrollDuration,h=a.dragger;b=a.getDBox();
var f=b.height,g=b.width;c=a.chart;var k=a.y,l=a.x,m=a.rotate;m?(b="y",c=c.mouseY-f/2-k,c=d.fitToBounds(c,0,a.height-f)):(b="x",c=c.mouseX-g/2-l,c=d.fitToBounds(c,0,a.width-g));a.updateOnReleaseOnly?(a.skipEvent=!1,h.setAttr(b,c),a.dispatchScrollbarEvent(),a.clipDragger()):(a.animating=!0,c=Math.round(c),m?h.animate({y:c},e,">"):h.animate({x:c},e,">"),a.forceClip=!0,clearTimeout(a.forceTO),a.forceTO=setTimeout(function(){a.stopForceClip.call(a)},5E3*e))}},updateOnRelease:function(){this.updateOnReleaseOnly&&
(this.update(),this.skipEvent=!1,this.dispatchScrollbarEvent())},handleReleaseOutside:function(){if(this.set){if(this.resizingLeft||this.resizingRight||this.dragging)this.dragging=this.resizingRight=this.resizingLeft=!1,this.updateOnRelease(),this.removeCursors();this.animating=this.mouseIsOver=!1;this.hideDragIcons();this.update()}},handleMouseOver:function(){this.mouseIsOver=!0;this.showDragIcons()},handleMouseOut:function(){this.mouseIsOver=!1;this.hideDragIcons();this.removeCursors()}})})();(function(){var d=window.AmCharts;d.ChartScrollbar=d.Class({inherits:d.SimpleChartScrollbar,construct:function(a){this.cname="ChartScrollbar";d.ChartScrollbar.base.construct.call(this,a);this.graphLineColor="#BBBBBB";this.graphLineAlpha=0;this.graphFillColor="#BBBBBB";this.graphFillAlpha=1;this.selectedGraphLineColor="#888888";this.selectedGraphLineAlpha=0;this.selectedGraphFillColor="#888888";this.selectedGraphFillAlpha=1;this.gridCount=0;this.gridColor="#FFFFFF";this.gridAlpha=.7;this.skipEvent=
this.autoGridCount=!1;this.color="#FFFFFF";this.scrollbarCreated=!1;this.oppositeAxis=!0;this.accessibleLabel="Zoom chart using cursor arrows";d.applyTheme(this,a,this.cname)},init:function(){var a=this.categoryAxis,b=this.chart,c=this.gridAxis;a||("CategoryAxis"==this.gridAxis.cname?(this.catScrollbar=!0,a=new d.CategoryAxis,a.id="scrollbar"):(a=new d.ValueAxis,a.data=b.chartData,a.id=c.id,a.type=c.type,a.maximumDate=c.maximumDate,a.minimumDate=c.minimumDate,a.minPeriod=c.minPeriod,a.minMaxField=
c.minMaxField),this.categoryAxis=a);a.chart=b;var e=b.categoryAxis;e&&(a.firstDayOfWeek=e.firstDayOfWeek);a.dateFormats=c.dateFormats;a.markPeriodChange=c.markPeriodChange;a.boldPeriodBeginning=c.boldPeriodBeginning;a.labelFunction=c.labelFunction;a.axisItemRenderer=d.RecItem;a.axisRenderer=d.RecAxis;a.guideFillRenderer=d.RecFill;a.inside=!0;a.fontSize=this.fontSize;a.tickLength=0;a.axisAlpha=0;d.isString(this.graph)&&(this.graph=d.getObjById(b.graphs,this.graph));(a=this.graph)&&this.catScrollbar&&
(c=this.valueAxis,c||(this.valueAxis=c=new d.ValueAxis,c.visible=!1,c.scrollbar=!0,c.axisItemRenderer=d.RecItem,c.axisRenderer=d.RecAxis,c.guideFillRenderer=d.RecFill,c.labelsEnabled=!1,c.chart=b),b=this.unselectedGraph,b||(b=new d.AmGraph,b.scrollbar=!0,this.unselectedGraph=b,b.negativeBase=a.negativeBase,b.noStepRisers=a.noStepRisers),b=this.selectedGraph,b||(b=new d.AmGraph,b.scrollbar=!0,this.selectedGraph=b,b.negativeBase=a.negativeBase,b.noStepRisers=a.noStepRisers));this.scrollbarCreated=!0},
draw:function(){var a=this;d.ChartScrollbar.base.draw.call(a);if(a.enabled){a.scrollbarCreated||a.init();var b=a.chart,c=b.chartData,e=a.categoryAxis,h=a.rotate,f=a.x,g=a.y,k=a.width,l=a.height,m=a.gridAxis,p=a.set;e.setOrientation(!h);e.parseDates=m.parseDates;"ValueAxis"==a.categoryAxis.cname&&(e.rotate=!h);e.equalSpacing=m.equalSpacing;e.minPeriod=m.minPeriod;e.startOnAxis=m.startOnAxis;e.width=k-1;e.height=l;e.gridCount=a.gridCount;e.gridColor=a.gridColor;e.gridAlpha=a.gridAlpha;e.color=a.color;
e.tickLength=0;e.axisAlpha=0;e.autoGridCount=a.autoGridCount;e.parseDates&&!e.equalSpacing&&e.timeZoom(b.firstTime,b.lastTime);e.minimum=a.gridAxis.fullMin;e.maximum=a.gridAxis.fullMax;e.strictMinMax=!0;e.zoom(0,c.length-1);if((m=a.graph)&&a.catScrollbar){var q=a.valueAxis,n=m.valueAxis;q.id=n.id;q.rotate=h;q.setOrientation(h);q.width=k;q.height=l;q.dataProvider=c;q.reversed=n.reversed;q.logarithmic=n.logarithmic;q.gridAlpha=0;q.axisAlpha=0;p.push(q.set);h?(q.y=g,q.x=0):(q.x=f,q.y=0);var f=Infinity,
g=-Infinity,t;for(t=0;t<c.length;t++){var r=c[t].axes[n.id].graphs[m.id].values,w;for(w in r)if(r.hasOwnProperty(w)&&"percents"!=w&&"total"!=w){var z=r[w];z<f&&(f=z);z>g&&(g=z)}}Infinity!=f&&(q.minimum=f);-Infinity!=g&&(q.maximum=g+.1*(g-f));f==g&&(--q.minimum,q.maximum+=1);void 0!==a.minimum&&(q.minimum=a.minimum);void 0!==a.maximum&&(q.maximum=a.maximum);q.zoom(0,c.length-1);w=a.unselectedGraph;w.id=m.id;w.bcn="scrollbar-graph-";w.rotate=h;w.chart=b;w.data=c;w.valueAxis=q;w.chart=m.chart;w.categoryAxis=
a.categoryAxis;w.periodSpan=m.periodSpan;w.valueField=m.valueField;w.openField=m.openField;w.closeField=m.closeField;w.highField=m.highField;w.lowField=m.lowField;w.lineAlpha=a.graphLineAlpha;w.lineColorR=a.graphLineColor;w.fillAlphas=a.graphFillAlpha;w.fillColorsR=a.graphFillColor;w.connect=m.connect;w.hidden=m.hidden;w.width=k;w.height=l;w.pointPosition=m.pointPosition;w.stepDirection=m.stepDirection;w.periodSpan=m.periodSpan;n=a.selectedGraph;n.id=m.id;n.bcn=w.bcn+"selected-";n.rotate=h;n.chart=
b;n.data=c;n.valueAxis=q;n.chart=m.chart;n.categoryAxis=e;n.periodSpan=m.periodSpan;n.valueField=m.valueField;n.openField=m.openField;n.closeField=m.closeField;n.highField=m.highField;n.lowField=m.lowField;n.lineAlpha=a.selectedGraphLineAlpha;n.lineColorR=a.selectedGraphLineColor;n.fillAlphas=a.selectedGraphFillAlpha;n.fillColorsR=a.selectedGraphFillColor;n.connect=m.connect;n.hidden=m.hidden;n.width=k;n.height=l;n.pointPosition=m.pointPosition;n.stepDirection=m.stepDirection;n.periodSpan=m.periodSpan;
b=a.graphType;b||(b=m.type);w.type=b;n.type=b;c=c.length-1;w.zoom(0,c);n.zoom(0,c);n.set.click(function(){a.handleBackgroundClick()}).mouseover(function(){a.handleMouseOver()}).mouseout(function(){a.handleMouseOut()});w.set.click(function(){a.handleBackgroundClick()}).mouseover(function(){a.handleMouseOver()}).mouseout(function(){a.handleMouseOut()});p.push(w.set);p.push(n.set)}p.push(e.set);p.push(e.labelsSet);a.bg.toBack();a.invisibleBg.toFront();a.dragger.toFront();a.iconLeft.toFront();a.iconRight.toFront()}},
timeZoom:function(a,b,c){this.startTime=a;this.endTime=b;this.timeDifference=b-a;this.skipEvent=!d.toBoolean(c);this.zoomScrollbar();this.dispatchScrollbarEvent()},zoom:function(a,b){this.start=a;this.end=b;this.skipEvent=!0;this.zoomScrollbar()},dispatchScrollbarEvent:function(){if(this.categoryAxis&&"ValueAxis"==this.categoryAxis.cname)d.ChartScrollbar.base.dispatchScrollbarEvent.call(this);else if(this.skipEvent)this.skipEvent=!1;else{var a=this.chart.chartData,b,c,e=this.dragger.getBBox();b=e.x;
var h=e.y,f=e.width,e=e.height,g=this.chart;this.rotate?(b=h,c=e):c=f;f={type:"zoomed",target:this};f.chart=g;var k=this.categoryAxis,l=this.stepWidth,h=g.minSelectedTime,e=g.maxSelectedTime,m=!1;if(k.parseDates&&!k.equalSpacing){if(a=g.lastTime,g=g.firstTime,k=Math.round(b/l)+g,b=this.dragging?k+this.timeDifference:Math.round((b+c)/l)+g,k>b&&(k=b),0<h&&b-k<h&&(b=Math.round(k+(b-k)/2),m=Math.round(h/2),k=b-m,b+=m,m=!0),0<e&&b-k>e&&(b=Math.round(k+(b-k)/2),m=Math.round(e/2),k=b-m,b+=m,m=!0),b>a&&(b=
a),b-h<k&&(k=b-h),k<g&&(k=g),k+h>b&&(b=k+h),k!=this.startTime||b!=this.endTime)this.startTime=k,this.endTime=b,f.start=k,f.end=b,f.startDate=new Date(k),f.endDate=new Date(b),this.fire(f)}else{k.startOnAxis||(b+=l/2);c-=this.stepWidth/2;h=k.xToIndex(b);b=k.xToIndex(b+c);if(h!=this.start||this.end!=b)k.startOnAxis&&(this.resizingRight&&h==b&&b++,this.resizingLeft&&h==b&&(0<h?h--:b=1)),this.start=h,this.end=this.dragging?this.start+this.difference:b,f.start=this.start,f.end=this.end,k.parseDates&&(a[this.start]&&
(f.startDate=new Date(a[this.start].time)),a[this.end]&&(f.endDate=new Date(a[this.end].time))),this.fire(f);this.percentStart=h;this.percentEnd=b}m&&this.zoomScrollbar(!0)}},zoomScrollbar:function(a){if((!(this.dragging||this.resizingLeft||this.resizingRight||this.animating)||a)&&this.dragger&&this.enabled){var b,c,d=this.chart;a=d.chartData;var h=this.categoryAxis;h.parseDates&&!h.equalSpacing?(a=h.stepWidth,c=d.firstTime,b=a*(this.startTime-c),c=a*(this.endTime-c)):(a[this.start]&&(b=a[this.start].x[h.id]),
a[this.end]&&(c=a[this.end].x[h.id]),a=h.stepWidth,h.startOnAxis||(d=a/2,b-=d,c+=d));this.stepWidth=a;isNaN(b)||isNaN(c)||this.updateScrollbarSize(b,c)}},maskGraphs:function(a,b,c,d){var h=this.selectedGraph;h&&h.set.clipRect(a,b,c,d)},handleDragStart:function(){d.ChartScrollbar.base.handleDragStart.call(this);this.difference=this.end-this.start;this.timeDifference=this.endTime-this.startTime;0>this.timeDifference&&(this.timeDifference=0)},handleBackgroundClick:function(){d.ChartScrollbar.base.handleBackgroundClick.call(this);
this.dragging||(this.difference=this.end-this.start,this.timeDifference=this.endTime-this.startTime,0>this.timeDifference&&(this.timeDifference=0))}})})();(function(){var d=window.AmCharts;d.AmBalloon=d.Class({construct:function(a){this.cname="AmBalloon";this.enabled=!0;this.fillColor="#FFFFFF";this.fillAlpha=.8;this.borderThickness=2;this.borderColor="#FFFFFF";this.borderAlpha=1;this.cornerRadius=0;this.maxWidth=220;this.horizontalPadding=8;this.verticalPadding=4;this.pointerWidth=6;this.pointerOrientation="V";this.color="#000000";this.adjustBorderColor=!0;this.show=this.follow=this.showBullet=!1;this.bulletSize=3;this.shadowAlpha=.4;this.shadowColor=
"#000000";this.fadeOutDuration=this.animationDuration=.3;this.fixedPosition=!0;this.offsetY=6;this.offsetX=1;this.textAlign="center";this.disableMouseEvents=!0;this.deltaSignX=this.deltaSignY=1;d.isModern||(this.offsetY*=1.5);this.sdy=this.sdx=0;d.applyTheme(this,a,this.cname)},draw:function(){var a=this.pointToX,b=this.pointToY;d.isModern||(this.drop=!1);var c=this.chart;d.VML&&(this.fadeOutDuration=0);this.xAnim&&c.stopAnim(this.xAnim);this.yAnim&&c.stopAnim(this.yAnim);this.sdy=this.sdx=0;if(!isNaN(a)){var e=
this.follow,h=c.container,f=this.set;d.remove(f);this.removeDiv();f=h.set();f.node.style.pointerEvents="none";this.set=f;this.mainSet?(this.mainSet.push(this.set),this.sdx=this.mainSet.x,this.sdy=this.mainSet.y):c.balloonsSet.push(f);if(this.show){var g=this.l,k=this.t,l=this.r,m=this.b,p=this.balloonColor,q=this.fillColor,n=this.borderColor,t=q;void 0!=p&&(this.adjustBorderColor?t=n=p:q=p);var r=this.horizontalPadding,w=this.verticalPadding,z=this.pointerWidth,x=this.pointerOrientation,u=this.cornerRadius,
A=c.fontFamily,y=this.fontSize;void 0==y&&(y=c.fontSize);var p=document.createElement("div"),B=c.classNamePrefix;p.className=B+"-balloon-div";this.className&&(p.className=p.className+" "+B+"-balloon-div-"+this.className);B=p.style;this.disableMouseEvents&&(B.pointerEvents="none");B.position="absolute";var D=this.minWidth,C=document.createElement("div");p.appendChild(C);var I=C.style;isNaN(D)||(I.minWidth=D-2*r+"px");I.textAlign=this.textAlign;I.maxWidth=this.maxWidth+"px";I.fontSize=y+"px";I.color=
this.color;I.fontFamily=A;C.innerHTML=this.text;c.chartDiv.appendChild(p);this.textDiv=p;var I=p.offsetWidth,H=p.offsetHeight;p.clientHeight&&(I=p.clientWidth,H=p.clientHeight);A=H+2*w;C=I+2*r;!isNaN(D)&&C<D&&(C=D);window.opera&&(A+=2);var Q=!1,y=this.offsetY;c.handDrawn&&(y+=c.handDrawScatter+2);"H"!=x?(D=a-C/2,b<k+A+10&&"down"!=x?(Q=!0,e&&(b+=y),y=b+z,this.deltaSignY=-1):(e&&(b-=y),y=b-A-z,this.deltaSignY=1)):(2*z>A&&(z=A/2),y=b-A/2,a<g+(l-g)/2?(D=a+z,this.deltaSignX=-1):(D=a-C-z,this.deltaSignX=
1));y+A>=m&&(y=m-A);y<k&&(y=k);D<g&&(D=g);D+C>l&&(D=l-C);var k=y+w,m=D+r,M=this.shadowAlpha,P=this.shadowColor,r=this.borderThickness,ia=this.bulletSize,J,w=this.fillAlpha,aa=this.borderAlpha;this.showBullet&&(J=d.circle(h,ia,t,w),f.push(J));this.drop?(g=C/1.6,l=0,"V"==x&&(x="down"),"H"==x&&(x="left"),"down"==x&&(D=a+1,y=b-g-g/3),"up"==x&&(l=180,D=a+1,y=b+g+g/3),"left"==x&&(l=270,D=a+g+g/3+2,y=b),"right"==x&&(l=90,D=a-g-g/3+2,y=b),k=y-H/2+1,m=D-I/2-1,q=d.drop(h,g,l,q,w,r,n,aa)):0<u||0===z?(0<M&&(a=
d.rect(h,C,A,q,0,r+1,P,M,u),d.isModern?a.translate(1,1):a.translate(4,4),f.push(a)),q=d.rect(h,C,A,q,w,r,n,aa,u)):(t=[],u=[],"H"!=x?(g=a-D,g>C-z&&(g=C-z),g<z&&(g=z),t=[0,g-z,a-D,g+z,C,C,0,0],u=Q?[0,0,b-y,0,0,A,A,0]:[A,A,b-y,A,A,0,0,A]):(x=b-y,x>A-z&&(x=A-z),x<z&&(x=z),u=[0,x-z,b-y,x+z,A,A,0,0],t=a<g+(l-g)/2?[0,0,D<a?0:a-D,0,0,C,C,0]:[C,C,D+C>a?C:a-D,C,C,0,0,C]),0<M&&(a=d.polygon(h,t,u,q,0,r,P,M),a.translate(1,1),f.push(a)),q=d.polygon(h,t,u,q,w,r,n,aa));this.bg=q;f.push(q);q.toFront();d.setCN(c,q,
"balloon-bg");this.className&&d.setCN(c,q,"balloon-bg-"+this.className);h=1*this.deltaSignX;m+=this.sdx;k+=this.sdy;B.left=m+"px";B.top=k+"px";f.translate(D-h,y,1,!0);q=q.getBBox();this.bottom=y+A+1;this.yPos=q.y+y;J&&J.translate(this.pointToX-D+h,b-y);b=this.animationDuration;0<this.animationDuration&&!e&&!isNaN(this.prevX)&&(f.translate(this.prevX,this.prevY,NaN,!0),f.animate({translate:D-h+","+y},b,"easeOutSine"),p&&(B.left=this.prevTX+"px",B.top=this.prevTY+"px",this.xAnim=c.animate({node:p},
"left",this.prevTX,m,b,"easeOutSine","px"),this.yAnim=c.animate({node:p},"top",this.prevTY,k,b,"easeOutSine","px")));this.prevX=D-h;this.prevY=y;this.prevTX=m;this.prevTY=k}}},fixPrevious:function(){this.rPrevX=this.prevX;this.rPrevY=this.prevY;this.rPrevTX=this.prevTX;this.rPrevTY=this.prevTY},restorePrevious:function(){this.prevX=this.rPrevX;this.prevY=this.rPrevY;this.prevTX=this.rPrevTX;this.prevTY=this.rPrevTY},followMouse:function(){if(this.follow&&this.show){var a=this.chart.mouseX-this.offsetX*
this.deltaSignX-this.sdx,b=this.chart.mouseY-this.sdy;this.pointToX=a;this.pointToY=b;if(a!=this.previousX||b!=this.previousY)if(this.previousX=a,this.previousY=b,0===this.cornerRadius)this.draw();else{var c=this.set;if(c){var d=c.getBBox(),a=a-d.width/2,h=b-d.height-10;a<this.l&&(a=this.l);a>this.r-d.width&&(a=this.r-d.width);h<this.t&&(h=b+10);c.translate(a,h);b=this.textDiv.style;b.left=a+this.horizontalPadding+"px";b.top=h+this.verticalPadding+"px"}}}},changeColor:function(a){this.balloonColor=
a},setBounds:function(a,b,c,d){this.l=a;this.t=b;this.r=c;this.b=d;this.destroyTO&&clearTimeout(this.destroyTO)},showBalloon:function(a){if(this.text!=a||this.positionChanged)this.text=a,this.isHiding=!1,this.show=!0,this.destroyTO&&clearTimeout(this.destroyTO),a=this.chart,this.fadeAnim1&&a.stopAnim(this.fadeAnim1),this.fadeAnim2&&a.stopAnim(this.fadeAnim2),this.draw(),this.positionChanged=!1},hide:function(a){var b=this;b.text=void 0;isNaN(a)&&(a=b.fadeOutDuration);var c=b.chart;if(0<a&&!b.isHiding){b.isHiding=
!0;b.destroyTO&&clearTimeout(b.destroyTO);b.destroyTO=setTimeout(function(){b.destroy.call(b)},1E3*a);b.follow=!1;b.show=!1;var d=b.set;d&&(d.setAttr("opacity",b.fillAlpha),b.fadeAnim1=d.animate({opacity:0},a,"easeInSine"));b.textDiv&&(b.fadeAnim2=c.animate({node:b.textDiv},"opacity",1,0,a,"easeInSine",""))}else b.show=!1,b.follow=!1,b.destroy()},setPosition:function(a,b){if(a!=this.pointToX||b!=this.pointToY)this.previousX=this.pointToX,this.previousY=this.pointToY,this.pointToX=a,this.pointToY=
b,this.positionChanged=!0},followCursor:function(a){var b=this;b.follow=a;clearInterval(b.interval);var c=b.chart.mouseX-b.sdx,d=b.chart.mouseY-b.sdy;!isNaN(c)&&a&&(b.pointToX=c-b.offsetX*b.deltaSignX,b.pointToY=d,b.followMouse(),b.interval=setInterval(function(){b.followMouse.call(b)},40))},removeDiv:function(){if(this.textDiv){var a=this.textDiv.parentNode;a&&a.removeChild(this.textDiv)}},destroy:function(){clearInterval(this.interval);d.remove(this.set);this.removeDiv();this.set=null}})})();(function(){var d=window.AmCharts;d.AmCoordinateChart=d.Class({inherits:d.AmChart,construct:function(a){d.AmCoordinateChart.base.construct.call(this,a);this.theme=a;this.createEvents("rollOverGraphItem","rollOutGraphItem","clickGraphItem","doubleClickGraphItem","rightClickGraphItem","clickGraph","rollOverGraph","rollOutGraph");this.startAlpha=1;this.startDuration=0;this.startEffect="elastic";this.sequencedAnimation=!0;this.colors="#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000".split(" ");
this.balloonDateFormat="MMM DD, YYYY";this.valueAxes=[];this.graphs=[];this.guides=[];this.gridAboveGraphs=!1;d.applyTheme(this,a,"AmCoordinateChart")},initChart:function(){d.AmCoordinateChart.base.initChart.call(this);this.drawGraphs=!0;var a=this.categoryAxis;a&&(this.categoryAxis=d.processObject(a,d.CategoryAxis,this.theme));this.processValueAxes();this.createValueAxes();this.processGraphs();this.processGuides();d.VML&&(this.startAlpha=1);this.setLegendData(this.graphs);this.gridAboveGraphs&&(this.gridSet.toFront(),
this.bulletSet.toFront(),this.balloonsSet.toFront())},createValueAxes:function(){if(0===this.valueAxes.length){var a=new d.ValueAxis;this.addValueAxis(a)}},parseData:function(){this.processValueAxes();this.processGraphs()},parseSerialData:function(a){this.chartData=[];if(a)if(0<this.processTimeout){1>this.processCount&&(this.processCount=1);var b=a.length/this.processCount;this.parseCount=Math.ceil(b)-1;for(var c=0;c<b;c++)this.delayParseSerialData(a,c)}else this.parseCount=0,this.parsePartSerialData(a,
0,a.length,0);else this.onDataUpdated()},delayParseSerialData:function(a,b){var c=this,d=c.processCount;setTimeout(function(){c.parsePartSerialData.call(c,a,b*d,(b+1)*d,b)},c.processTimeout)},parsePartSerialData:function(a,b,c,e){c>a.length&&(c=a.length);var h=this.graphs,f={},g=this.seriesIdField;g||(g=this.categoryField);var k=!1,l,m=this.categoryAxis,p,q,n;m&&(k=m.parseDates,p=m.forceShowField,n=m.classNameField,q=m.labelColorField,l=m.categoryFunction);var t,r,w={},z;k&&(t=d.extractPeriod(m.minPeriod),
r=t.period,t=t.count,z=d.getPeriodDuration(r,t));var x={};this.lookupTable=x;var u,A=this.dataDateFormat,y={};for(u=b;u<c;u++){var B={},D=a[u];b=D[this.categoryField];B.dataContext=D;B.category=l?l(b,D,m):String(b);p&&(B.forceShow=D[p]);n&&(B.className=D[n]);q&&(B.labelColor=D[q]);x[D[g]]=B;if(k&&(m.categoryFunction?b=m.categoryFunction(b,D,m):(!A||b instanceof Date||(b=b.toString()+" |"),b=d.getDate(b,A,m.minPeriod)),b=d.resetDateToMin(b,r,t,m.firstDayOfWeek),B.category=b,B.time=b.getTime(),isNaN(B.time)))continue;
var C=this.valueAxes;B.axes={};B.x={};var I;for(I=0;I<C.length;I++){var H=C[I].id;B.axes[H]={};B.axes[H].graphs={};var Q;for(Q=0;Q<h.length;Q++){b=h[Q];var M=b.id,P=1.1;isNaN(b.gapPeriod)||(P=b.gapPeriod);var ia=b.periodValue;if(b.valueAxis.id==H){B.axes[H].graphs[M]={};var J={};J.index=u;var aa=D;b.dataProvider&&(aa=f);J.values=this.processValues(aa,b,ia);if(!b.connect||b.forceGap&&!isNaN(b.gapPeriod))if(y&&y[M]&&0<P&&B.time-w[M]>=z*P&&(y[M].gap=!0),b.forceGap){var P=0,ma;for(ma in J.values)P++;
0<P&&(w[M]=B.time,y[M]=J)}else w[M]=B.time,y[M]=J;this.processFields(b,J,aa);J.category=B.category;J.serialDataItem=B;J.graph=b;B.axes[H].graphs[M]=J}}}this.chartData[u]=B}if(this.parseCount==e){for(a=0;a<h.length;a++)b=h[a],b.dataProvider&&this.parseGraphData(b);this.dataChanged=!1;this.dispatchDataUpdated=!0;this.onDataUpdated()}},processValues:function(a,b,c){var e={},h,f=!1;"candlestick"!=b.type&&"ohlc"!=b.type||""===c||(f=!0);for(var g="value error open close low high".split(" "),k=0;k<g.length;k++){var l=
g[k];"value"!=l&&"error"!=l&&f&&(c=l.charAt(0).toUpperCase()+l.slice(1));var m=a[b[l+"Field"]+c];null!==m&&(h=Number(m),isNaN(h)||(e[l]=h),"date"==b.valueAxis.type&&void 0!==m&&(h=d.getDate(m,b.chart.dataDateFormat),e[l]=h.getTime()))}return e},parseGraphData:function(a){var b=a.dataProvider,c=a.seriesIdField;c||(c=this.seriesIdField);c||(c=this.categoryField);var d;for(d=0;d<b.length;d++){var h=b[d],f=this.lookupTable[String(h[c])],g=a.valueAxis.id;f&&(g=f.axes[g].graphs[a.id],g.serialDataItem=f,
g.values=this.processValues(h,a,a.periodValue),this.processFields(a,g,h))}},addValueAxis:function(a){a.chart=this;this.valueAxes.push(a);this.validateData()},removeValueAxesAndGraphs:function(){var a=this.valueAxes,b;for(b=a.length-1;-1<b;b--)this.removeValueAxis(a[b])},removeValueAxis:function(a){var b=this.graphs,c;for(c=b.length-1;0<=c;c--){var d=b[c];d&&d.valueAxis==a&&this.removeGraph(d)}b=this.valueAxes;for(c=b.length-1;0<=c;c--)b[c]==a&&b.splice(c,1);this.validateData()},addGraph:function(a){this.graphs.push(a);
this.chooseGraphColor(a,this.graphs.length-1);this.validateData()},removeGraph:function(a){var b=this.graphs,c;for(c=b.length-1;0<=c;c--)b[c]==a&&(b.splice(c,1),a.destroy());this.validateData()},handleValueAxisZoom:function(){},processValueAxes:function(){var a=this.valueAxes,b;for(b=0;b<a.length;b++){var c=a[b],c=d.processObject(c,d.ValueAxis,this.theme);a[b]=c;c.chart=this;c.init();this.listenTo(c,"axisIntZoomed",this.handleValueAxisZoom);c.id||(c.id="valueAxisAuto"+b+"_"+(new Date).getTime());
void 0===c.usePrefixes&&(c.usePrefixes=this.usePrefixes)}},processGuides:function(){var a=this.guides,b=this.categoryAxis;if(a)for(var c=0;c<a.length;c++){var e=a[c];(void 0!==e.category||void 0!==e.date)&&b&&b.addGuide(e);e.id||(e.id="guideAuto"+c+"_"+(new Date).getTime());var h=e.valueAxis;h?(d.isString(h)&&(h=this.getValueAxisById(h)),h?h.addGuide(e):this.valueAxes[0].addGuide(e)):isNaN(e.value)||this.valueAxes[0].addGuide(e)}},processGraphs:function(){var a=this.graphs,b;this.graphsById={};for(b=
0;b<a.length;b++){var c=a[b],c=d.processObject(c,d.AmGraph,this.theme);a[b]=c;this.chooseGraphColor(c,b);c.chart=this;c.init();d.isString(c.valueAxis)&&(c.valueAxis=this.getValueAxisById(c.valueAxis));c.valueAxis||(c.valueAxis=this.valueAxes[0]);c.id||(c.id="graphAuto"+b+"_"+(new Date).getTime());this.graphsById[c.id]=c}},formatString:function(a,b,c){var e=b.graph,h=e.valueAxis;h.duration&&b.values.value&&(h=d.formatDuration(b.values.value,h.duration,"",h.durationUnits,h.maxInterval,h.numberFormatter),
a=a.split("[[value]]").join(h));a=d.massReplace(a,{"[[title]]":e.title,"[[description]]":b.description});a=c?d.fixNewLines(a):d.fixBrakes(a);return a=d.cleanFromEmpty(a)},getBalloonColor:function(a,b,c){var e=a.lineColor,h=a.balloonColor;c&&(h=e);c=a.fillColorsR;"object"==typeof c?e=c[0]:void 0!==c&&(e=c);b.isNegative&&(c=a.negativeLineColor,a=a.negativeFillColors,"object"==typeof a?c=a[0]:void 0!==a&&(c=a),void 0!==c&&(e=c));void 0!==b.color&&(e=b.color);void 0!==b.lineColor&&(e=b.lineColor);b=b.fillColors;
void 0!==b&&(e=b,d.ifArray(b)&&(e=b[0]));void 0===h&&(h=e);return h},getGraphById:function(a){return d.getObjById(this.graphs,a)},getValueAxisById:function(a){return d.getObjById(this.valueAxes,a)},processFields:function(a,b,c){if(a.itemColors){var e=a.itemColors,h=b.index;b.color=h<e.length?e[h]:d.randomColor()}e="lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern gap className columnIndex".split(" ");for(h=0;h<e.length;h++){var f=
e[h],g=a[f+"Field"];g&&(g=c[g],d.isDefined(g)&&(b[f]=g))}b.dataContext=c},chooseGraphColor:function(a,b){if(a.lineColor)a.lineColorR=a.lineColor;else{var c;c=this.colors.length>b?this.colors[b]:a.lineColorR?a.lineColorR:d.randomColor();a.lineColorR=c}a.fillColorsR=a.fillColors?a.fillColors:a.lineColorR;a.bulletBorderColorR=a.bulletBorderColor?a.bulletBorderColor:a.useLineColorForBulletBorder?a.lineColorR:a.bulletColor;a.bulletColorR=a.bulletColor?a.bulletColor:a.lineColorR;if(c=this.patterns)a.pattern=
c[b]},handleLegendEvent:function(a){var b=a.type;if(a=a.dataItem){var c=a.hidden,d=a.showBalloon;switch(b){case "clickMarker":this.textClickEnabled&&(d?this.hideGraphsBalloon(a):this.showGraphsBalloon(a));break;case "clickLabel":d?this.hideGraphsBalloon(a):this.showGraphsBalloon(a);break;case "rollOverItem":c||this.highlightGraph(a);break;case "rollOutItem":c||this.unhighlightGraph();break;case "hideItem":this.hideGraph(a);break;case "showItem":this.showGraph(a)}}},highlightGraph:function(a){var b=
this.graphs;if(b){var c,d=.2;this.legend&&(d=this.legend.rollOverGraphAlpha);if(1!=d)for(c=0;c<b.length;c++){var h=b[c];h!=a&&h.changeOpacity(d)}}},unhighlightGraph:function(){var a;this.legend&&(a=this.legend.rollOverGraphAlpha);if(1!=a){a=this.graphs;var b;for(b=0;b<a.length;b++)a[b].changeOpacity(1)}},showGraph:function(a){a.switchable&&(a.hidden=!1,this.dataChanged=!0,"xy"!=this.type&&(this.marginsUpdated=!1),this.chartCreated&&this.initChart())},hideGraph:function(a){a.switchable&&(this.dataChanged=
!0,"xy"!=this.type&&(this.marginsUpdated=!1),a.hidden=!0,this.chartCreated&&this.initChart())},hideGraphsBalloon:function(a){a.showBalloon=!1;this.updateLegend()},showGraphsBalloon:function(a){a.showBalloon=!0;this.updateLegend()},updateLegend:function(){this.legend&&this.legend.invalidateSize()},resetAnimation:function(){var a=this.graphs;if(a){var b;for(b=0;b<a.length;b++)a[b].animationPlayed=!1}},animateAgain:function(){this.resetAnimation();this.validateNow()}})})();(function(){var d=window.AmCharts;d.TrendLine=d.Class({construct:function(a){this.cname="TrendLine";this.createEvents("click","rollOver","rollOut");this.isProtected=!1;this.dashLength=0;this.lineColor="#00CC00";this.lineThickness=this.lineAlpha=1;d.applyTheme(this,a,this.cname)},draw:function(){var a=this;a.destroy();var b=a.chart,c=b.container,e,h,f,g,k=a.categoryAxis,l=a.initialDate,m=a.initialCategory,p=a.finalDate,q=a.finalCategory,n=a.valueAxis,t=a.valueAxisX,r=a.initialXValue,w=a.finalXValue,
z=a.initialValue,x=a.finalValue,u=n.recalculateToPercents,A=b.dataDateFormat;k&&(l&&(l=d.getDate(l,A,"fff"),a.initialDate=l,e=k.dateToCoordinate(l)),m&&(e=k.categoryToCoordinate(m)),p&&(p=d.getDate(p,A,"fff"),a.finalDate=p,h=k.dateToCoordinate(p)),q&&(h=k.categoryToCoordinate(q)));t&&!u&&(isNaN(r)||(e=t.getCoordinate(r)),isNaN(w)||(h=t.getCoordinate(w)));n&&!u&&(isNaN(z)||(f=n.getCoordinate(z)),isNaN(x)||(g=n.getCoordinate(x)));if(!(isNaN(e)||isNaN(h)||isNaN(f)||isNaN(f))){b.rotate?(k=[f,g],g=[e,
h]):(k=[e,h],g=[f,g]);l=a.lineColor;f=d.line(c,k,g,l,a.lineAlpha,a.lineThickness,a.dashLength);e=k;h=g;q=k[1]-k[0];n=g[1]-g[0];0===q&&(q=.01);0===n&&(n=.01);m=q/Math.abs(q);p=n/Math.abs(n);n=90*Math.PI/180-Math.asin(q/(q*n/Math.abs(q*n)*Math.sqrt(Math.pow(q,2)+Math.pow(n,2))));q=Math.abs(5*Math.cos(n));n=Math.abs(5*Math.sin(n));e.push(k[1]-m*n,k[0]-m*n);h.push(g[1]+p*q,g[0]+p*q);g=d.polygon(c,e,h,l,.005,0);c=c.set([g,f]);c.translate(b.marginLeftReal,b.marginTopReal);b.trendLinesSet.push(c);d.setCN(b,
f,"trend-line");d.setCN(b,f,"trend-line-"+a.id);a.line=f;a.set=c;if(f=a.initialImage)f=d.processObject(f,d.Image,a.theme),f.chart=b,f.draw(),f.translate(e[0]+f.offsetX,h[0]+f.offsetY),c.push(f.set);if(f=a.finalImage)f=d.processObject(f,d.Image,a.theme),f.chart=b,f.draw(),f.translate(e[1]+f.offsetX,h[1]+f.offsetY),c.push(f.set);g.mouseup(function(){a.handleLineClick()}).mouseover(function(){a.handleLineOver()}).mouseout(function(){a.handleLineOut()});g.touchend&&g.touchend(function(){a.handleLineClick()});
c.clipRect(0,0,b.plotAreaWidth,b.plotAreaHeight)}},handleLineClick:function(){this.fire({type:"click",trendLine:this,chart:this.chart})},handleLineOver:function(){var a=this.rollOverColor;void 0!==a&&this.line.attr({stroke:a});this.balloonText&&(clearTimeout(this.chart.hoverInt),a=this.line.getBBox(),this.chart.showBalloon(this.balloonText,this.lineColor,!0,this.x+a.x+a.width/2,this.y+a.y+a.height/2));this.fire({type:"rollOver",trendLine:this,chart:this.chart})},handleLineOut:function(){this.line.attr({stroke:this.lineColor});
this.balloonText&&this.chart.hideBalloon();this.fire({type:"rollOut",trendLine:this,chart:this.chart})},destroy:function(){d.remove(this.set)}})})();(function(){var d=window.AmCharts;d.Image=d.Class({construct:function(a){this.cname="Image";this.height=this.width=20;this.rotation=this.offsetY=this.offsetX=0;this.balloonColor=this.color="#000000";this.opacity=1;d.applyTheme(this,a,this.cname)},draw:function(){var a=this;a.set&&a.set.remove();var b=a.chart.container;a.set=b.set();var c,d;a.url?(c=b.image(a.url,0,0,a.width,a.height),d=1):a.svgPath&&(c=b.path(a.svgPath),c.setAttr("fill",a.color),c.setAttr("stroke",a.outlineColor),b=c.getBBox(),d=
Math.min(a.width/b.width,a.height/b.height));c&&(c.setAttr("opacity",a.opacity),a.set.rotate(a.rotation),c.translate(-a.width/2,-a.height/2,d),a.balloonText&&c.mouseover(function(){a.chart.showBalloon(a.balloonText,a.balloonColor,!0)}).mouseout(function(){a.chart.hideBalloon()}).touchend(function(){a.chart.hideBalloon()}).touchstart(function(){a.chart.showBalloon(a.balloonText,a.balloonColor,!0)}),a.set.push(c))},translate:function(a,b){this.set&&this.set.translate(a,b)}})})();(function(){var d=window.AmCharts;d.circle=function(a,b,c,e,h,f,g,k,l){0>=b&&(b=.001);if(void 0==h||0===h)h=.01;void 0===f&&(f="#000000");void 0===g&&(g=0);e={fill:c,stroke:f,"fill-opacity":e,"stroke-width":h,"stroke-opacity":g};a=isNaN(l)?a.circle(0,0,b).attr(e):a.ellipse(0,0,b,l).attr(e);k&&a.gradient("radialGradient",[c,d.adjustLuminosity(c,-.6)]);return a};d.text=function(a,b,c,e,h,f,g,k){f||(f="middle");"right"==f&&(f="end");"left"==f&&(f="start");isNaN(k)&&(k=1);void 0!==b&&(b=String(b),d.isIE&&
!d.isModern&&(b=b.replace("&amp;","&"),b=b.replace("&","&amp;")));c={fill:c,"font-family":e,"font-size":h+"px",opacity:k};!0===g&&(c["font-weight"]="bold");c["text-anchor"]=f;return a.text(b,c)};d.polygon=function(a,b,c,e,h,f,g,k,l,m,p){isNaN(f)&&(f=.01);isNaN(k)&&(k=h);var q=e,n=!1;"object"==typeof q&&1<q.length&&(n=!0,q=q[0]);void 0===g&&(g=q);h={fill:q,stroke:g,"fill-opacity":h,"stroke-width":f,"stroke-opacity":k};void 0!==p&&0<p&&(h["stroke-dasharray"]=p);p=d.dx;f=d.dy;a.handDrawn&&(c=d.makeHD(b,
c,a.handDrawScatter),b=c[0],c=c[1]);g=Math.round;m&&(b[t]=d.roundTo(b[t],5),c[t]=d.roundTo(c[t],5),g=Number);k="M"+(g(b[0])+p)+","+(g(c[0])+f);for(var t=1;t<b.length;t++)m&&(b[t]=d.roundTo(b[t],5),c[t]=d.roundTo(c[t],5)),k+=" L"+(g(b[t])+p)+","+(g(c[t])+f);a=a.path(k+" Z").attr(h);n&&a.gradient("linearGradient",e,l);return a};d.rect=function(a,b,c,e,h,f,g,k,l,m,p){if(isNaN(b)||isNaN(c))return a.set();isNaN(f)&&(f=0);void 0===l&&(l=0);void 0===m&&(m=270);isNaN(h)&&(h=0);var q=e,n=!1;"object"==typeof q&&
(q=q[0],n=!0);void 0===g&&(g=q);void 0===k&&(k=h);b=Math.round(b);c=Math.round(c);var t=0,r=0;0>b&&(b=Math.abs(b),t=-b);0>c&&(c=Math.abs(c),r=-c);t+=d.dx;r+=d.dy;h={fill:q,stroke:g,"fill-opacity":h,"stroke-opacity":k};void 0!==p&&0<p&&(h["stroke-dasharray"]=p);a=a.rect(t,r,b,c,l,f).attr(h);n&&a.gradient("linearGradient",e,m);return a};d.bullet=function(a,b,c,e,h,f,g,k,l,m,p,q,n){var t;"circle"==b&&(b="round");switch(b){case "round":t=d.circle(a,c/2,e,h,f,g,k);break;case "square":t=d.polygon(a,[-c/
2,c/2,c/2,-c/2],[c/2,c/2,-c/2,-c/2],e,h,f,g,k,m-180,void 0,n);break;case "rectangle":t=d.polygon(a,[-c,c,c,-c],[c/2,c/2,-c/2,-c/2],e,h,f,g,k,m-180,void 0,n);break;case "diamond":t=d.polygon(a,[-c/2,0,c/2,0],[0,-c/2,0,c/2],e,h,f,g,k);break;case "triangleUp":t=d.triangle(a,c,0,e,h,f,g,k);break;case "triangleDown":t=d.triangle(a,c,180,e,h,f,g,k);break;case "triangleLeft":t=d.triangle(a,c,270,e,h,f,g,k);break;case "triangleRight":t=d.triangle(a,c,90,e,h,f,g,k);break;case "bubble":t=d.circle(a,c/2,e,h,
f,g,k,!0);break;case "line":t=d.line(a,[-c/2,c/2],[0,0],e,h,f,g,k);break;case "yError":t=a.set();t.push(d.line(a,[0,0],[-c/2,c/2],e,h,f));t.push(d.line(a,[-l,l],[-c/2,-c/2],e,h,f));t.push(d.line(a,[-l,l],[c/2,c/2],e,h,f));break;case "xError":t=a.set(),t.push(d.line(a,[-c/2,c/2],[0,0],e,h,f)),t.push(d.line(a,[-c/2,-c/2],[-l,l],e,h,f)),t.push(d.line(a,[c/2,c/2],[-l,l],e,h,f))}t&&t.pattern(p,NaN,q);return t};d.triangle=function(a,b,c,d,h,f,g,k){if(void 0===f||0===f)f=1;void 0===g&&(g="#000");void 0===
k&&(k=0);d={fill:d,stroke:g,"fill-opacity":h,"stroke-width":f,"stroke-opacity":k};b/=2;var l;0===c&&(l=" M"+-b+","+b+" L0,"+-b+" L"+b+","+b+" Z");180==c&&(l=" M"+-b+","+-b+" L0,"+b+" L"+b+","+-b+" Z");90==c&&(l=" M"+-b+","+-b+" L"+b+",0 L"+-b+","+b+" Z");270==c&&(l=" M"+-b+",0 L"+b+","+b+" L"+b+","+-b+" Z");return a.path(l).attr(d)};d.line=function(a,b,c,e,h,f,g,k,l,m,p){if(a.handDrawn&&!p)return d.handDrawnLine(a,b,c,e,h,f,g,k,l,m,p);f={fill:"none","stroke-width":f};void 0!==g&&0<g&&(f["stroke-dasharray"]=
g);isNaN(h)||(f["stroke-opacity"]=h);e&&(f.stroke=e);e=Math.round;m&&(e=Number,b[0]=d.roundTo(b[0],5),c[0]=d.roundTo(c[0],5));m=d.dx;h=d.dy;g="M"+(e(b[0])+m)+","+(e(c[0])+h);for(k=1;k<b.length;k++)b[k]=d.roundTo(b[k],5),c[k]=d.roundTo(c[k],5),g+=" L"+(e(b[k])+m)+","+(e(c[k])+h);if(d.VML)return a.path(g,void 0,!0).attr(f);l&&(g+=" M0,0 L0,0");return a.path(g).attr(f)};d.makeHD=function(a,b,c){for(var d=[],h=[],f=1;f<a.length;f++)for(var g=Number(a[f-1]),k=Number(b[f-1]),l=Number(a[f]),m=Number(b[f]),
p=Math.round(Math.sqrt(Math.pow(l-g,2)+Math.pow(m-k,2))/50)+1,l=(l-g)/p,m=(m-k)/p,q=0;q<=p;q++){var n=k+q*m+Math.random()*c;d.push(g+q*l+Math.random()*c);h.push(n)}return[d,h]};d.handDrawnLine=function(a,b,c,e,h,f,g,k,l,m){var p,q=a.set();for(p=1;p<b.length;p++)for(var n=[b[p-1],b[p]],t=[c[p-1],c[p]],t=d.makeHD(n,t,a.handDrawScatter),n=t[0],t=t[1],r=1;r<n.length;r++)q.push(d.line(a,[n[r-1],n[r]],[t[r-1],t[r]],e,h,f+Math.random()*a.handDrawThickness-a.handDrawThickness/2,g,k,l,m,!0));return q};d.doNothing=
function(a){return a};d.drop=function(a,b,c,d,h,f,g,k){var l=1/180*Math.PI,m=c-20,p=Math.sin(m*l)*b,q=Math.cos(m*l)*b,n=Math.sin((m+40)*l)*b,t=Math.cos((m+40)*l)*b,r=.8*b,w=-b/3,z=b/3;0===c&&(w=-w,z=0);180==c&&(z=0);90==c&&(w=0);270==c&&(w=0,z=-z);c={fill:d,stroke:g,"stroke-width":f,"stroke-opacity":k,"fill-opacity":h};b="M"+p+","+q+" A"+b+","+b+",0,1,1,"+n+","+t+(" A"+r+","+r+",0,0,0,"+(Math.sin((m+20)*l)*b+z)+","+(Math.cos((m+20)*l)*b+w));b+=" A"+r+","+r+",0,0,0,"+p+","+q;return a.path(b,void 0,
void 0,"1000,1000").attr(c)};d.wedge=function(a,b,c,e,h,f,g,k,l,m,p,q,n,t){var r=Math.round;f=r(f);g=r(g);k=r(k);var w=r(g/f*k),z=d.VML,x=359.5+f/100;359.94<x&&(x=359.94);h>=x&&(h=x);var u=1/180*Math.PI,x=b+Math.sin(e*u)*k,A=c-Math.cos(e*u)*w,y=b+Math.sin(e*u)*f,B=c-Math.cos(e*u)*g,D=b+Math.sin((e+h)*u)*f,C=c-Math.cos((e+h)*u)*g,I=b+Math.sin((e+h)*u)*k,u=c-Math.cos((e+h)*u)*w,H={fill:d.adjustLuminosity(m.fill,-.2),"stroke-opacity":0,"fill-opacity":m["fill-opacity"]},Q=0;180<Math.abs(h)&&(Q=1);e=a.set();
var M;z&&(x=r(10*x),y=r(10*y),D=r(10*D),I=r(10*I),A=r(10*A),B=r(10*B),C=r(10*C),u=r(10*u),b=r(10*b),l=r(10*l),c=r(10*c),f*=10,g*=10,k*=10,w*=10,1>Math.abs(h)&&1>=Math.abs(D-y)&&1>=Math.abs(C-B)&&(M=!0));h="";var P;q&&(H["fill-opacity"]=0,H["stroke-opacity"]=m["stroke-opacity"]/2,H.stroke=m.stroke);if(0<l){P=" M"+x+","+(A+l)+" L"+y+","+(B+l);z?(M||(P+=" A"+(b-f)+","+(l+c-g)+","+(b+f)+","+(l+c+g)+","+y+","+(B+l)+","+D+","+(C+l)),P+=" L"+I+","+(u+l),0<k&&(M||(P+=" B"+(b-k)+","+(l+c-w)+","+(b+k)+","+
(l+c+w)+","+I+","+(l+u)+","+x+","+(l+A)))):(P+=" A"+f+","+g+",0,"+Q+",1,"+D+","+(C+l)+" L"+I+","+(u+l),0<k&&(P+=" A"+k+","+w+",0,"+Q+",0,"+x+","+(A+l)));P+=" Z";var ia=l;z&&(ia/=10);for(var J=0;J<ia;J+=10){var aa=a.path(P,void 0,void 0,"1000,1000").attr(H);e.push(aa);aa.translate(0,-J)}P=a.path(" M"+x+","+A+" L"+x+","+(A+l)+" L"+y+","+(B+l)+" L"+y+","+B+" L"+x+","+A+" Z",void 0,void 0,"1000,1000").attr(H);l=a.path(" M"+D+","+C+" L"+D+","+(C+l)+" L"+I+","+(u+l)+" L"+I+","+u+" L"+D+","+C+" Z",void 0,
void 0,"1000,1000").attr(H);e.push(P);e.push(l)}z?(M||(h=" A"+r(b-f)+","+r(c-g)+","+r(b+f)+","+r(c+g)+","+r(y)+","+r(B)+","+r(D)+","+r(C)),g=" M"+r(x)+","+r(A)+" L"+r(y)+","+r(B)+h+" L"+r(I)+","+r(u)):g=" M"+x+","+A+" L"+y+","+B+(" A"+f+","+g+",0,"+Q+",1,"+D+","+C)+" L"+I+","+u;0<k&&(z?M||(g+=" B"+(b-k)+","+(c-w)+","+(b+k)+","+(c+w)+","+I+","+u+","+x+","+A):g+=" A"+k+","+w+",0,"+Q+",0,"+x+","+A);a.handDrawn&&(k=d.line(a,[x,y],[A,B],m.stroke,m.thickness*Math.random()*a.handDrawThickness,m["stroke-opacity"]),
e.push(k));a=a.path(g+" Z",void 0,void 0,"1000,1000").attr(m);if(p){k=[];for(w=0;w<p.length;w++)k.push(d.adjustLuminosity(m.fill,p[w]));"radial"!=t||d.isModern||(k=[]);0<k.length&&a.gradient(t+"Gradient",k)}d.isModern&&"radial"==t&&a.grad&&(a.grad.setAttribute("gradientUnits","userSpaceOnUse"),a.grad.setAttribute("r",f),a.grad.setAttribute("cx",b),a.grad.setAttribute("cy",c));a.pattern(q,NaN,n);e.wedge=a;e.push(a);return e};d.rgb2hex=function(a){return(a=a.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i))&&
4===a.length?"#"+("0"+parseInt(a[1],10).toString(16)).slice(-2)+("0"+parseInt(a[2],10).toString(16)).slice(-2)+("0"+parseInt(a[3],10).toString(16)).slice(-2):""};d.adjustLuminosity=function(a,b){a&&-1!=a.indexOf("rgb")&&(a=d.rgb2hex(a));a=String(a).replace(/[^0-9a-f]/gi,"");6>a.length&&(a=String(a[0])+String(a[0])+String(a[1])+String(a[1])+String(a[2])+String(a[2]));b=b||0;var c="#",e,h;for(h=0;3>h;h++)e=parseInt(a.substr(2*h,2),16),e=Math.round(Math.min(Math.max(0,e+e*b),255)).toString(16),c+=("00"+
e).substr(e.length);return c}})();(function(){var d=window.AmCharts;d.Bezier=d.Class({construct:function(a,b,c,e,h,f,g,k,l,m,p){var q=a.chart,n=d.bezierX,t=d.bezierY;isNaN(q.bezierX)||(n=q.bezierX);isNaN(q.bezierY)||(t=q.bezierY);isNaN(n)&&(q.rotate?(n=20,t=4):(t=20,n=4));var r,w;"object"==typeof g&&1<g.length&&(w=!0,r=g,g=g[0]);"object"==typeof k&&(k=k[0]);0===k&&(g="none");f={fill:g,"fill-opacity":k,"stroke-width":f};void 0!==l&&0<l&&(f["stroke-dasharray"]=l);isNaN(h)||(f["stroke-opacity"]=h);e&&(f.stroke=e);e="M"+Math.round(b[0])+
","+Math.round(c[0])+" ";h=[];for(l=0;l<b.length;l++)isNaN(b[l])||isNaN(c[l])?(e+=this.drawSegment(h,n,t),l<b.length-1&&(e+="L"+b[l+1]+","+c[l+1]+" "),h=[]):h.push({x:Number(b[l]),y:Number(c[l])});e+=this.drawSegment(h,n,t);m?e+=m:d.VML||(e+="M0,0 L0,0");this.path=a.path(e).attr(f);this.node=this.path.node;w&&this.path.gradient("linearGradient",r,p)},drawSegment:function(a,b,c){var d="";if(2<a.length)for(var h=0;h<a.length-1;h++){var f=[],g=a[h-1],k=a[h],l=a[h+1],m=a[h+2];0===h?(f.push({x:k.x,y:k.y}),
f.push({x:k.x,y:k.y}),f.push({x:l.x,y:l.y}),f.push({x:m.x,y:m.y})):h>=a.length-2?(f.push({x:g.x,y:g.y}),f.push({x:k.x,y:k.y}),f.push({x:l.x,y:l.y}),f.push({x:l.x,y:l.y})):(f.push({x:g.x,y:g.y}),f.push({x:k.x,y:k.y}),f.push({x:l.x,y:l.y}),f.push({x:m.x,y:m.y}));g=[];k=Math.round;g.push({x:k(f[1].x),y:k(f[1].y)});g.push({x:k((-f[0].x+b*f[1].x+f[2].x)/b),y:k((-f[0].y+c*f[1].y+f[2].y)/c)});g.push({x:k((f[1].x+b*f[2].x-f[3].x)/b),y:k((f[1].y+c*f[2].y-f[3].y)/c)});g.push({x:k(f[2].x),y:k(f[2].y)});d+="C"+
g[1].x+","+g[1].y+","+g[2].x+","+g[2].y+","+g[3].x+","+g[3].y+" "}else 1<a.length&&(d+="L"+a[1].x+","+a[1].y);return d}})})();(function(){var d=window.AmCharts;d.AmDraw=d.Class({construct:function(a,b,c,e){d.SVG_NS="http://www.w3.org/2000/svg";d.SVG_XLINK="http://www.w3.org/1999/xlink";d.hasSVG=!!document.createElementNS&&!!document.createElementNS(d.SVG_NS,"svg").createSVGRect;1>b&&(b=10);1>c&&(c=10);this.div=a;this.width=b;this.height=c;this.rBin=document.createElement("div");d.hasSVG?(d.SVG=!0,b=this.createSvgElement("svg"),a.appendChild(b),this.container=b,this.addDefs(e),this.R=new d.SVGRenderer(this)):d.isIE&&d.VMLRenderer&&
(d.VML=!0,d.vmlStyleSheet||(document.namespaces.add("amvml","urn:schemas-microsoft-com:vml"),31>document.styleSheets.length?(b=document.createStyleSheet(),b.addRule(".amvml","behavior:url(#default#VML); display:inline-block; antialias:true"),d.vmlStyleSheet=b):document.styleSheets[0].addRule(".amvml","behavior:url(#default#VML); display:inline-block; antialias:true")),this.container=a,this.R=new d.VMLRenderer(this,e),this.R.disableSelection(a))},createSvgElement:function(a){return document.createElementNS(d.SVG_NS,
a)},circle:function(a,b,c,e){var h=new d.AmDObject("circle",this);h.attr({r:c,cx:a,cy:b});this.addToContainer(h.node,e);return h},ellipse:function(a,b,c,e,h){var f=new d.AmDObject("ellipse",this);f.attr({rx:c,ry:e,cx:a,cy:b});this.addToContainer(f.node,h);return f},setSize:function(a,b){0<a&&0<b&&(this.container.style.width=a+"px",this.container.style.height=b+"px")},rect:function(a,b,c,e,h,f,g){var k=new d.AmDObject("rect",this);d.VML&&(h=Math.round(100*h/Math.min(c,e)),c+=2*f,e+=2*f,k.bw=f,k.node.style.marginLeft=
-f,k.node.style.marginTop=-f);1>c&&(c=1);1>e&&(e=1);k.attr({x:a,y:b,width:c,height:e,rx:h,ry:h,"stroke-width":f});this.addToContainer(k.node,g);return k},image:function(a,b,c,e,h,f){var g=new d.AmDObject("image",this);g.attr({x:b,y:c,width:e,height:h});this.R.path(g,a);this.addToContainer(g.node,f);return g},addToContainer:function(a,b){b||(b=this.container);b.appendChild(a)},text:function(a,b,c){return this.R.text(a,b,c)},path:function(a,b,c,e){var h=new d.AmDObject("path",this);e||(e="100,100");
h.attr({cs:e});c?h.attr({dd:a}):h.attr({d:a});this.addToContainer(h.node,b);return h},set:function(a){return this.R.set(a)},remove:function(a){if(a){var b=this.rBin;b.appendChild(a);b.innerHTML=""}},renderFix:function(){var a=this.container,b=a.style;b.top="0px";b.left="0px";try{var c=a.getBoundingClientRect(),d=c.left-Math.round(c.left),h=c.top-Math.round(c.top);d&&(b.left=d+"px");h&&(b.top=h+"px")}catch(f){}},update:function(){this.R.update()},addDefs:function(a){if(d.hasSVG){var b=this.createSvgElement("desc"),
c=this.container;c.setAttribute("version","1.1");c.style.position="absolute";this.setSize(this.width,this.height);if(a.accessibleTitle){var e=this.createSvgElement("text");c.appendChild(e);e.innerHTML=a.accessibleTitle;e.style.opacity=0}d.rtl&&(c.setAttribute("direction","rtl"),c.style.left="auto",c.style.right="0px");a&&(a.addCodeCredits&&b.appendChild(document.createTextNode("JavaScript chart by amCharts "+a.version)),c.appendChild(b),a.defs&&(b=this.createSvgElement("defs"),c.appendChild(b),d.parseDefs(a.defs,
b),this.defs=b))}}})})();(function(){var d=window.AmCharts;d.AmDObject=d.Class({construct:function(a,b){this.D=b;this.R=b.R;this.node=this.R.create(this,a);this.y=this.x=0;this.scale=1},attr:function(a){this.R.attr(this,a);return this},getAttr:function(a){return this.node.getAttribute(a)},setAttr:function(a,b){this.R.setAttr(this,a,b);return this},clipRect:function(a,b,c,d){this.R.clipRect(this,a,b,c,d)},translate:function(a,b,c,d){d||(a=Math.round(a),b=Math.round(b));this.R.move(this,a,b,c);this.x=a;this.y=b;this.scale=
c;this.angle&&this.rotate(this.angle)},rotate:function(a,b){this.R.rotate(this,a,b);this.angle=a},animate:function(a,b,c){for(var e in a)if(a.hasOwnProperty(e)){var h=e,f=a[e];c=d.getEffect(c);this.R.animate(this,h,f,b,c)}},push:function(a){if(a){var b=this.node;b.appendChild(a.node);var c=a.clipPath;c&&b.appendChild(c);(a=a.grad)&&b.appendChild(a)}},text:function(a){this.R.setText(this,a)},remove:function(){this.stop();this.R.remove(this)},clear:function(){var a=this.node;if(a.hasChildNodes())for(;1<=
a.childNodes.length;)a.removeChild(a.firstChild)},hide:function(){this.setAttr("visibility","hidden")},show:function(){this.setAttr("visibility","visible")},getBBox:function(){return this.R.getBBox(this)},toFront:function(){var a=this.node;if(a){this.prevNextNode=a.nextSibling;var b=a.parentNode;b&&b.appendChild(a)}},toPrevious:function(){var a=this.node;a&&this.prevNextNode&&(a=a.parentNode)&&a.insertBefore(this.prevNextNode,null)},toBack:function(){var a=this.node;if(a){this.prevNextNode=a.nextSibling;
var b=a.parentNode;if(b){var c=b.firstChild;c&&b.insertBefore(a,c)}}},mouseover:function(a){this.R.addListener(this,"mouseover",a);return this},mouseout:function(a){this.R.addListener(this,"mouseout",a);return this},click:function(a){this.R.addListener(this,"click",a);return this},dblclick:function(a){this.R.addListener(this,"dblclick",a);return this},mousedown:function(a){this.R.addListener(this,"mousedown",a);return this},mouseup:function(a){this.R.addListener(this,"mouseup",a);return this},touchmove:function(a){this.R.addListener(this,
"touchmove",a);return this},touchstart:function(a){this.R.addListener(this,"touchstart",a);return this},touchend:function(a){this.R.addListener(this,"touchend",a);return this},keyup:function(a){this.R.addListener(this,"keyup",a);return this},focus:function(a){this.R.addListener(this,"focus",a);return this},blur:function(a){this.R.addListener(this,"blur",a);return this},contextmenu:function(a){this.node.addEventListener?this.node.addEventListener("contextmenu",a,!0):this.R.addListener(this,"contextmenu",
a);return this},stop:function(){d.removeFromArray(this.R.animations,this.an_translate);d.removeFromArray(this.R.animations,this.an_y);d.removeFromArray(this.R.animations,this.an_x)},length:function(){return this.node.childNodes.length},gradient:function(a,b,c){this.R.gradient(this,a,b,c)},pattern:function(a,b,c){a&&this.R.pattern(this,a,b,c)}})})();(function(){var d=window.AmCharts;d.VMLRenderer=d.Class({construct:function(a,b){this.chart=b;this.D=a;this.cNames={circle:"oval",ellipse:"oval",rect:"roundrect",path:"shape"};this.styleMap={x:"left",y:"top",width:"width",height:"height","font-family":"fontFamily","font-size":"fontSize",visibility:"visibility"}},create:function(a,b){var c;if("group"==b)c=document.createElement("div"),a.type="div";else if("text"==b)c=document.createElement("div"),a.type="text";else if("image"==b)c=document.createElement("img"),
a.type="image";else{a.type="shape";a.shapeType=this.cNames[b];c=document.createElement("amvml:"+this.cNames[b]);var d=document.createElement("amvml:stroke");c.appendChild(d);a.stroke=d;var h=document.createElement("amvml:fill");c.appendChild(h);a.fill=h;h.className="amvml";d.className="amvml";c.className="amvml"}c.style.position="absolute";c.style.top=0;c.style.left=0;return c},path:function(a,b){a.node.setAttribute("src",b)},setAttr:function(a,b,c){if(void 0!==c){var e;8===document.documentMode&&
(e=!0);var h=a.node,f=a.type,g=h.style;"r"==b&&(g.width=2*c,g.height=2*c);"oval"==a.shapeType&&("rx"==b&&(g.width=2*c),"ry"==b&&(g.height=2*c));"roundrect"==a.shapeType&&("width"!=b&&"height"!=b||--c);"cursor"==b&&(g.cursor=c);"cx"==b&&(g.left=c-d.removePx(g.width)/2);"cy"==b&&(g.top=c-d.removePx(g.height)/2);var k=this.styleMap[b];"width"==k&&0>c&&(c=0);void 0!==k&&(g[k]=c);"text"==f&&("text-anchor"==b&&(a.anchor=c,k=h.clientWidth,"end"==c&&(g.marginLeft=-k+"px"),"middle"==c&&(g.marginLeft=-(k/2)+
"px",g.textAlign="center"),"start"==c&&(g.marginLeft="0px")),"fill"==b&&(g.color=c),"font-weight"==b&&(g.fontWeight=c));if(g=a.children)for(k=0;k<g.length;k++)g[k].setAttr(b,c);if("shape"==f){"cs"==b&&(h.style.width="100px",h.style.height="100px",h.setAttribute("coordsize",c));"d"==b&&h.setAttribute("path",this.svgPathToVml(c));"dd"==b&&h.setAttribute("path",c);f=a.stroke;a=a.fill;"stroke"==b&&(e?f.color=c:f.setAttribute("color",c));"stroke-width"==b&&(e?f.weight=c:f.setAttribute("weight",c));"stroke-opacity"==
b&&(e?f.opacity=c:f.setAttribute("opacity",c));"stroke-dasharray"==b&&(g="solid",0<c&&3>c&&(g="dot"),3<=c&&6>=c&&(g="dash"),6<c&&(g="longdash"),e?f.dashstyle=g:f.setAttribute("dashstyle",g));if("fill-opacity"==b||"opacity"==b)0===c?e?a.on=!1:a.setAttribute("on",!1):e?a.opacity=c:a.setAttribute("opacity",c);"fill"==b&&(e?a.color=c:a.setAttribute("color",c));"rx"==b&&(e?h.arcSize=c+"%":h.setAttribute("arcsize",c+"%"))}}},attr:function(a,b){for(var c in b)b.hasOwnProperty(c)&&this.setAttr(a,c,b[c])},
text:function(a,b,c){var e=new d.AmDObject("text",this.D),h=e.node;h.style.whiteSpace="pre";h.innerHTML=a;this.D.addToContainer(h,c);this.attr(e,b);return e},getBBox:function(a){return this.getBox(a.node)},getBox:function(a){var b=a.offsetLeft,c=a.offsetTop,d=a.offsetWidth,h=a.offsetHeight,f;if(a.hasChildNodes()){var g,k,l;for(l=0;l<a.childNodes.length;l++){f=this.getBox(a.childNodes[l]);var m=f.x;isNaN(m)||(isNaN(g)?g=m:m<g&&(g=m));var p=f.y;isNaN(p)||(isNaN(k)?k=p:p<k&&(k=p));m=f.width+m;isNaN(m)||
(d=Math.max(d,m));f=f.height+p;isNaN(f)||(h=Math.max(h,f))}0>g&&(b+=g);0>k&&(c+=k)}return{x:b,y:c,width:d,height:h}},setText:function(a,b){var c=a.node;c&&(c.innerHTML=b);this.setAttr(a,"text-anchor",a.anchor)},addListener:function(a,b,c){a.node["on"+b]=c},move:function(a,b,c){var e=a.node,h=e.style;"text"==a.type&&(c-=d.removePx(h.fontSize)/2-1);"oval"==a.shapeType&&(b-=d.removePx(h.width)/2,c-=d.removePx(h.height)/2);a=a.bw;isNaN(a)||(b-=a,c-=a);isNaN(b)||isNaN(c)||(e.style.left=b+"px",e.style.top=
c+"px")},svgPathToVml:function(a){var b=a.split(" ");a="";var c,d=Math.round,h;for(h=0;h<b.length;h++){var f=b[h],g=f.substring(0,1),f=f.substring(1),k=f.split(","),l=d(k[0])+","+d(k[1]);"M"==g&&(a+=" m "+l);"L"==g&&(a+=" l "+l);"Z"==g&&(a+=" x e");if("Q"==g){var m=c.length,p=c[m-1],q=k[0],n=k[1],l=k[2],t=k[3];c=d(c[m-2]/3+2/3*q);p=d(p/3+2/3*n);q=d(2/3*q+l/3);n=d(2/3*n+t/3);a+=" c "+c+","+p+","+q+","+n+","+l+","+t}"C"==g&&(a+=" c "+k[0]+","+k[1]+","+k[2]+","+k[3]+","+k[4]+","+k[5]);"A"==g&&(a+=" wa "+
f);"B"==g&&(a+=" at "+f);c=k}return a},animate:function(a,b,c,d,h){var f=a.node,g=this.chart;a.animationFinished=!1;if("translate"==b){b=c.split(",");c=b[1];var k=f.offsetTop;g.animate(a,"left",f.offsetLeft,b[0],d,h,"px");g.animate(a,"top",k,c,d,h,"px")}},clipRect:function(a,b,c,d,h){a=a.node;0===b&&0===c?(a.style.width=d+"px",a.style.height=h+"px",a.style.overflow="hidden"):a.style.clip="rect("+c+"px "+(b+d)+"px "+(c+h)+"px "+b+"px)"},rotate:function(a,b,c){if(0!==Number(b)){var e=a.node;a=e.style;
c||(c=this.getBGColor(e.parentNode));a.backgroundColor=c;a.paddingLeft=1;c=b*Math.PI/180;var h=Math.cos(c),f=Math.sin(c),g=d.removePx(a.left),k=d.removePx(a.top),l=e.offsetWidth,e=e.offsetHeight;b/=Math.abs(b);a.left=g+l/2-l/2*Math.cos(c)-b*e/2*Math.sin(c)+3;a.top=k-b*l/2*Math.sin(c)+b*e/2*Math.sin(c);a.cssText=a.cssText+"; filter:progid:DXImageTransform.Microsoft.Matrix(M11='"+h+"', M12='"+-f+"', M21='"+f+"', M22='"+h+"', sizingmethod='auto expand');"}},getBGColor:function(a){var b="#FFFFFF";if(a.style){var c=
a.style.backgroundColor;""!==c?b=c:a.parentNode&&(b=this.getBGColor(a.parentNode))}return b},set:function(a){var b=new d.AmDObject("group",this.D);this.D.container.appendChild(b.node);if(a){var c;for(c=0;c<a.length;c++)b.push(a[c])}return b},gradient:function(a,b,c,d){var h="";"radialGradient"==b&&(b="gradientradial",c.reverse());"linearGradient"==b&&(b="gradient");var f;for(f=0;f<c.length;f++)h+=Math.round(100*f/(c.length-1))+"% "+c[f],f<c.length-1&&(h+=",");a=a.fill;90==d?d=0:270==d?d=180:180==
d?d=90:0===d&&(d=270);8===document.documentMode?(a.type=b,a.angle=d):(a.setAttribute("type",b),a.setAttribute("angle",d));h&&(a.colors.value=h)},remove:function(a){a.clipPath&&this.D.remove(a.clipPath);this.D.remove(a.node)},disableSelection:function(a){a.onselectstart=function(){return!1};a.style.cursor="default"},pattern:function(a,b,c,e){c=a.node;a=a.fill;var h="none";b.color&&(h=b.color);c.fillColor=h;b=b.url;d.isAbsolute(b)||(b=e+b);8===document.documentMode?(a.type="tile",a.src=b):(a.setAttribute("type",
"tile"),a.setAttribute("src",b))},update:function(){}})})();(function(){var d=window.AmCharts;d.SVGRenderer=d.Class({construct:function(a){this.D=a;this.animations=[]},create:function(a,b){return document.createElementNS(d.SVG_NS,b)},attr:function(a,b){for(var c in b)b.hasOwnProperty(c)&&this.setAttr(a,c,b[c])},setAttr:function(a,b,c){void 0!==c&&a.node.setAttribute(b,c)},animate:function(a,b,c,e,h){a.animationFinished=!1;var f=a.node;a["an_"+b]&&d.removeFromArray(this.animations,a["an_"+b]);"translate"==b?(f=(f=f.getAttribute("transform"))?String(f).substring(10,
f.length-1):"0,0",f=f.split(", ").join(" "),f=f.split(" ").join(","),0===f&&(f="0,0")):f=Number(f.getAttribute(b));c={obj:a,frame:0,attribute:b,from:f,to:c,time:e,effect:h};this.animations.push(c);a["an_"+b]=c},update:function(){var a,b=this.animations;for(a=b.length-1;0<=a;a--){var c=b[a],e=c.time*d.updateRate,h=c.frame+1,f=c.obj,g=c.attribute,k,l,m;if(h<=e){c.frame++;if("translate"==g){k=c.from.split(",");g=Number(k[0]);k=Number(k[1]);isNaN(k)&&(k=0);l=c.to.split(",");m=Number(l[0]);l=Number(l[1]);
m=0===m-g?m:Math.round(d[c.effect](0,h,g,m-g,e));c=0===l-k?l:Math.round(d[c.effect](0,h,k,l-k,e));g="transform";if(isNaN(m)||isNaN(c))continue;c="translate("+m+","+c+")"}else l=Number(c.from),k=Number(c.to),m=k-l,c=d[c.effect](0,h,l,m,e),isNaN(c)&&(c=k),0===m&&this.animations.splice(a,1);this.setAttr(f,g,c)}else"translate"==g?(l=c.to.split(","),m=Number(l[0]),l=Number(l[1]),f.translate(m,l)):(k=Number(c.to),this.setAttr(f,g,k)),f.animationFinished=!0,this.animations.splice(a,1)}},getBBox:function(a){if(a=
a.node)try{return a.getBBox()}catch(b){}return{width:0,height:0,x:0,y:0}},path:function(a,b){a.node.setAttributeNS(d.SVG_XLINK,"xlink:href",b)},clipRect:function(a,b,c,e,h){var f=a.node,g=a.clipPath;g&&this.D.remove(g);var k=f.parentNode;k&&(f=document.createElementNS(d.SVG_NS,"clipPath"),g=d.getUniqueId(),f.setAttribute("id",g),this.D.rect(b,c,e,h,0,0,f),k.appendChild(f),b="#",d.baseHref&&!d.isIE&&(b=this.removeTarget(window.location.href)+b),this.setAttr(a,"clip-path","url("+b+g+")"),this.clipPathC++,
a.clipPath=f)},text:function(a,b,c){var e=new d.AmDObject("text",this.D);a=String(a).split("\n");var h=d.removePx(b["font-size"]),f;for(f=0;f<a.length;f++){var g=this.create(null,"tspan");g.appendChild(document.createTextNode(a[f]));g.setAttribute("y",(h+2)*f+Math.round(h/2));g.setAttribute("x",0);e.node.appendChild(g)}e.node.setAttribute("y",Math.round(h/2));this.attr(e,b);this.D.addToContainer(e.node,c);return e},setText:function(a,b){var c=a.node;c&&(c.removeChild(c.firstChild),c.appendChild(document.createTextNode(b)))},
move:function(a,b,c,d){isNaN(b)&&(b=0);isNaN(c)&&(c=0);b="translate("+b+","+c+")";d&&(b=b+" scale("+d+")");this.setAttr(a,"transform",b)},rotate:function(a,b){var c=a.node.getAttribute("transform"),d="rotate("+b+")";c&&(d=c+" "+d);this.setAttr(a,"transform",d)},set:function(a){var b=new d.AmDObject("g",this.D);this.D.container.appendChild(b.node);if(a){var c;for(c=0;c<a.length;c++)b.push(a[c])}return b},addListener:function(a,b,c){a.node["on"+b]=c},gradient:function(a,b,c,e){var h=a.node,f=a.grad;
f&&this.D.remove(f);b=document.createElementNS(d.SVG_NS,b);f=d.getUniqueId();b.setAttribute("id",f);if(!isNaN(e)){var g=0,k=0,l=0,m=0;90==e?l=100:270==e?m=100:180==e?g=100:0===e&&(k=100);b.setAttribute("x1",g+"%");b.setAttribute("x2",k+"%");b.setAttribute("y1",l+"%");b.setAttribute("y2",m+"%")}for(e=0;e<c.length;e++)g=document.createElementNS(d.SVG_NS,"stop"),k=100*e/(c.length-1),0===e&&(k=0),g.setAttribute("offset",k+"%"),g.setAttribute("stop-color",c[e]),b.appendChild(g);h.parentNode.appendChild(b);
c="#";d.baseHref&&!d.isIE&&(c=this.removeTarget(window.location.href)+c);h.setAttribute("fill","url("+c+f+")");a.grad=b},removeTarget:function(a){return a.split("#")[0]},pattern:function(a,b,c,e){var h=a.node;isNaN(c)&&(c=1);var f=a.patternNode;f&&this.D.remove(f);var f=document.createElementNS(d.SVG_NS,"pattern"),g=d.getUniqueId(),k=b;b.url&&(k=b.url);d.isAbsolute(k)||-1!=k.indexOf("data:image")||(k=e+k);e=Number(b.width);isNaN(e)&&(e=4);var l=Number(b.height);isNaN(l)&&(l=4);e/=c;l/=c;c=b.x;isNaN(c)&&
(c=0);var m=-Math.random()*Number(b.randomX);isNaN(m)||(c=m);m=b.y;isNaN(m)&&(m=0);var p=-Math.random()*Number(b.randomY);isNaN(p)||(m=p);f.setAttribute("id",g);f.setAttribute("width",e);f.setAttribute("height",l);f.setAttribute("patternUnits","userSpaceOnUse");f.setAttribute("xlink:href",k);b.color&&(p=document.createElementNS(d.SVG_NS,"rect"),p.setAttributeNS(null,"height",e),p.setAttributeNS(null,"width",l),p.setAttributeNS(null,"fill",b.color),f.appendChild(p));this.D.image(k,0,0,e,l,f).translate(c,
m);k="#";d.baseHref&&!d.isIE&&(k=this.removeTarget(window.location.href)+k);h.setAttribute("fill","url("+k+g+")");a.patternNode=f;h.parentNode.appendChild(f)},remove:function(a){a.clipPath&&this.D.remove(a.clipPath);a.grad&&this.D.remove(a.grad);a.patternNode&&this.D.remove(a.patternNode);this.D.remove(a.node)}})})();(function(){var d=window.AmCharts;d.AmLegend=d.Class({construct:function(a){this.enabled=!0;this.cname="AmLegend";this.createEvents("rollOverMarker","rollOverItem","rollOutMarker","rollOutItem","showItem","hideItem","clickMarker","clickLabel");this.position="bottom";this.borderColor=this.color="#000000";this.borderAlpha=0;this.markerLabelGap=5;this.verticalGap=10;this.align="left";this.horizontalGap=0;this.spacing=10;this.markerDisabledColor="#AAB3B3";this.markerType="square";this.markerSize=16;this.markerBorderThickness=
this.markerBorderAlpha=1;this.marginBottom=this.marginTop=0;this.marginLeft=this.marginRight=20;this.autoMargins=!0;this.valueWidth=50;this.switchable=!0;this.switchType="x";this.switchColor="#FFFFFF";this.rollOverColor="#CC0000";this.reversedOrder=!1;this.labelText="[[title]]";this.valueText="[[value]]";this.accessibleLabel="[[title]]";this.useMarkerColorForLabels=!1;this.rollOverGraphAlpha=1;this.textClickEnabled=!1;this.equalWidths=!0;this.backgroundColor="#FFFFFF";this.backgroundAlpha=0;this.useGraphSettings=
!1;this.showEntries=!0;this.labelDx=0;d.applyTheme(this,a,this.cname)},setData:function(a){this.legendData=a;this.invalidateSize()},invalidateSize:function(){this.destroy();this.entries=[];this.valueLabels=[];var a=this.legendData;this.enabled&&(d.ifArray(a)||d.ifArray(this.data))&&this.drawLegend()},drawLegend:function(){var a=this.chart,b=this.position,c=this.width,e=a.divRealWidth,h=a.divRealHeight,f=this.div,g=this.legendData;this.data&&(g=this.combineLegend?this.legendData.concat(this.data):
this.data);isNaN(this.fontSize)&&(this.fontSize=a.fontSize);this.maxColumnsReal=this.maxColumns;if("right"==b||"left"==b)this.maxColumnsReal=1,this.autoMargins&&(this.marginLeft=this.marginRight=10);else if(this.autoMargins){this.marginRight=a.marginRight;this.marginLeft=a.marginLeft;var k=a.autoMarginOffset;"bottom"==b?(this.marginBottom=k,this.marginTop=0):(this.marginTop=k,this.marginBottom=0)}c=void 0!==c?d.toCoordinate(c,e):"right"!=b&&"left"!=b?a.realWidth:0<this.ieW?this.ieW:a.realWidth;"outside"==
b?(c=f.offsetWidth,h=f.offsetHeight,f.clientHeight&&(c=f.clientWidth,h=f.clientHeight)):(isNaN(c)||(f.style.width=c+"px"),f.className="amChartsLegend "+a.classNamePrefix+"-legend-div");this.divWidth=c;(b=this.container)?(b.container.innerHTML="",f.appendChild(b.container),b.width=c,b.height=h,b.setSize(c,h),b.addDefs(a)):b=new d.AmDraw(f,c,h,a);this.container=b;this.lx=0;this.ly=8;h=this.markerSize;h>this.fontSize&&(this.ly=h/2-1);0<h&&(this.lx+=h+this.markerLabelGap);this.titleWidth=0;if(h=this.title)h=
d.text(this.container,h,this.color,a.fontFamily,this.fontSize,"start",!0),d.setCN(a,h,"legend-title"),h.translate(this.marginLeft,this.marginTop+this.verticalGap+this.ly+1),a=h.getBBox(),this.titleWidth=a.width+15,this.titleHeight=a.height+6;this.index=this.maxLabelWidth=0;if(this.showEntries){for(a=0;a<g.length;a++)this.createEntry(g[a]);for(a=this.index=0;a<g.length;a++)this.createValue(g[a])}this.arrangeEntries();this.updateValues()},arrangeEntries:function(){var a=this.position,b=this.marginLeft+
this.titleWidth,c=this.marginRight,e=this.marginTop,h=this.marginBottom,f=this.horizontalGap,g=this.div,k=this.divWidth,l=this.maxColumnsReal,m=this.verticalGap,p=this.spacing,q=k-c-b,n=0,t=0,r=this.container;this.set&&this.set.remove();var w=r.set();this.set=w;var z=r.set();w.push(z);var x=this.entries,u,A;for(A=0;A<x.length;A++){u=x[A].getBBox();var y=u.width;y>n&&(n=y);u=u.height;u>t&&(t=u)}var y=t=0,B=f,D=0,C=0;for(A=0;A<x.length;A++){var I=x[A];this.reversedOrder&&(I=x[x.length-A-1]);u=I.getBBox();
var H;this.equalWidths?H=y*(n+p+this.markerLabelGap):(H=B,B=B+u.width+f+p);H+u.width>q&&0<A&&0!==y&&(t++,H=y=0,B=H+u.width+f+p,D=D+C+m,C=0);u.height>C&&(C=u.height);I.translate(H,D);y++;!isNaN(l)&&y>=l&&(y=0,t++,D=D+C+m,B=f,C=0);z.push(I)}u=z.getBBox();l=u.height+2*m-1;"left"==a||"right"==a?(p=u.width+2*f,k=p+b+c,g.style.width=k+"px",this.ieW=k):p=k-b-c-1;c=d.polygon(this.container,[0,p,p,0],[0,0,l,l],this.backgroundColor,this.backgroundAlpha,1,this.borderColor,this.borderAlpha);d.setCN(this.chart,
c,"legend-bg");w.push(c);w.translate(b,e);c.toBack();b=f;if("top"==a||"bottom"==a||"absolute"==a||"outside"==a)"center"==this.align?b=f+(p-u.width)/2:"right"==this.align&&(b=f+p-u.width);z.translate(b,m+1);this.titleHeight>l&&(l=this.titleHeight);e=l+e+h+1;0>e&&(e=0);"absolute"!=a&&"outside"!=a&&e>this.chart.divRealHeight&&(g.style.top="0px");g.style.height=Math.round(e)+"px";r.setSize(this.divWidth,e)},createEntry:function(a){if(!1!==a.visibleInLegend&&!a.hideFromLegend){var b=this,c=b.chart,e=b.useGraphSettings,
h=a.markerType;h&&(e=!1);a.legendEntryWidth=b.markerSize;h||(h=b.markerType);var f=a.color,g=a.alpha;a.legendKeyColor&&(f=a.legendKeyColor());a.legendKeyAlpha&&(g=a.legendKeyAlpha());var k;!0===a.hidden&&(k=f=b.markerDisabledColor);var l=a.pattern,m,p=a.customMarker;p||(p=b.customMarker);var q=b.container,n=b.markerSize,t=0,r=0,w=n/2;if(e){e=a.type;b.switchType=void 0;if("line"==e||"step"==e||"smoothedLine"==e||"ohlc"==e)m=q.set(),a.hidden||(f=a.lineColorR,k=a.bulletBorderColorR),t=d.line(q,[0,2*
n],[n/2,n/2],f,a.lineAlpha,a.lineThickness,a.dashLength),d.setCN(c,t,"graph-stroke"),m.push(t),a.bullet&&(a.hidden||(f=a.bulletColorR),t=d.bullet(q,a.bullet,a.bulletSize,f,a.bulletAlpha,a.bulletBorderThickness,k,a.bulletBorderAlpha))&&(d.setCN(c,t,"graph-bullet"),t.translate(n+1,n/2),m.push(t)),w=0,t=n,r=n/3;else{a.getGradRotation&&(m=a.getGradRotation(),0===m&&(m=180));t=a.fillColorsR;!0===a.hidden&&(t=f);if(m=b.createMarker("rectangle",t,a.fillAlphas,a.lineThickness,f,a.lineAlpha,m,l,a.dashLength))w=
n,m.translate(w,n/2);t=n}d.setCN(c,m,"graph-"+e);d.setCN(c,m,"graph-"+a.id)}else if(p)m=q.image(p,0,0,n,n);else{var z;isNaN(b.gradientRotation)||(z=180+b.gradientRotation);(m=b.createMarker(h,f,g,void 0,void 0,void 0,z,l))&&m.translate(n/2,n/2)}d.setCN(c,m,"legend-marker");b.addListeners(m,a);q=q.set([m]);b.switchable&&a.switchable&&q.setAttr("cursor","pointer");void 0!==a.id&&d.setCN(c,q,"legend-item-"+a.id);d.setCN(c,q,a.className,!0);k=b.switchType;var x;k&&"none"!=k&&0<n&&("x"==k?(x=b.createX(),
x.translate(n/2,n/2)):x=b.createV(),x.dItem=a,!0!==a.hidden?"x"==k?x.hide():x.show():"x"!=k&&x.hide(),b.switchable||x.hide(),b.addListeners(x,a),a.legendSwitch=x,q.push(x),d.setCN(c,x,"legend-switch"));k=b.color;a.showBalloon&&b.textClickEnabled&&void 0!==b.selectedColor&&(k=b.selectedColor);b.useMarkerColorForLabels&&!l&&(k=f);!0===a.hidden&&(k=b.markerDisabledColor);f=d.massReplace(b.labelText,{"[[title]]":a.title});void 0!==b.tabIndex&&(q.setAttr("tabindex",b.tabIndex),q.setAttr("role","menuitem"),
q.keyup(function(c){13==c.keyCode&&b.clickMarker(a,c)}));c.accessible&&b.accessibleLabel&&(l=d.massReplace(b.accessibleLabel,{"[[title]]":a.title}),c.makeAccessible(q,l));l=b.fontSize;m&&(n<=l&&(n=n/2+b.ly-l/2+(l+2-n)/2-r,m.translate(w,n),x&&x.translate(x.x,n)),a.legendEntryWidth=m.getBBox().width);var u;f&&(f=d.fixBrakes(f),a.legendTextReal=f,u=b.labelWidth,u=isNaN(u)?d.text(b.container,f,k,c.fontFamily,l,"start"):d.wrappedText(b.container,f,k,c.fontFamily,l,"start",!1,u,0),d.setCN(c,u,"legend-label"),
u.translate(b.lx+t,b.ly),q.push(u),b.labelDx=t,c=u.getBBox().width,b.maxLabelWidth<c&&(b.maxLabelWidth=c));b.entries[b.index]=q;a.legendEntry=b.entries[b.index];a.legendMarker=m;a.legendLabel=u;b.index++}},addListeners:function(a,b){var c=this;a&&a.mouseover(function(a){c.rollOverMarker(b,a)}).mouseout(function(a){c.rollOutMarker(b,a)}).click(function(a){c.clickMarker(b,a)})},rollOverMarker:function(a,b){this.switchable&&this.dispatch("rollOverMarker",a,b);this.dispatch("rollOverItem",a,b)},rollOutMarker:function(a,
b){this.switchable&&this.dispatch("rollOutMarker",a,b);this.dispatch("rollOutItem",a,b)},clickMarker:function(a,b){this.switchable&&(!0===a.hidden?this.dispatch("showItem",a,b):this.dispatch("hideItem",a,b));this.dispatch("clickMarker",a,b)},rollOverLabel:function(a,b){a.hidden||this.textClickEnabled&&a.legendLabel&&a.legendLabel.attr({fill:this.rollOverColor});this.dispatch("rollOverItem",a,b)},rollOutLabel:function(a,b){if(!a.hidden&&this.textClickEnabled&&a.legendLabel){var c=this.color;void 0!==
this.selectedColor&&a.showBalloon&&(c=this.selectedColor);this.useMarkerColorForLabels&&(c=a.lineColor,void 0===c&&(c=a.color));a.legendLabel.attr({fill:c})}this.dispatch("rollOutItem",a,b)},clickLabel:function(a,b){this.textClickEnabled?a.hidden||this.dispatch("clickLabel",a,b):this.switchable&&(!0===a.hidden?this.dispatch("showItem",a,b):this.dispatch("hideItem",a,b))},dispatch:function(a,b,c){a={type:a,dataItem:b,target:this,event:c,chart:this.chart};this.chart&&this.chart.handleLegendEvent(a);
this.fire(a)},createValue:function(a){var b=this,c=b.fontSize,e=b.chart;if(!1!==a.visibleInLegend&&!a.hideFromLegend){var h=b.maxLabelWidth;b.forceWidth&&(h=b.labelWidth);b.equalWidths||(b.valueAlign="left");"left"==b.valueAlign&&a.legendLabel&&(h=a.legendLabel.getBBox().width);var f=h;if(b.valueText&&0<b.valueWidth){var g=b.color;b.useMarkerColorForValues&&(g=a.color,a.legendKeyColor&&(g=a.legendKeyColor()));!0===a.hidden&&(g=b.markerDisabledColor);var k=b.valueText,h=h+b.lx+b.labelDx+b.markerLabelGap+
b.valueWidth,l="end";"left"==b.valueAlign&&(h-=b.valueWidth,l="start");g=d.text(b.container,k,g,b.chart.fontFamily,c,l);d.setCN(e,g,"legend-value");g.translate(h,b.ly);b.entries[b.index].push(g);f+=b.valueWidth+2*b.markerLabelGap;g.dItem=a;b.valueLabels.push(g)}b.index++;e=b.markerSize;e<c+7&&(e=c+7,d.VML&&(e+=3));c=b.container.rect(a.legendEntryWidth,0,f,e,0,0).attr({stroke:"none",fill:"#fff","fill-opacity":.005});c.dItem=a;b.entries[b.index-1].push(c);c.mouseover(function(c){b.rollOverLabel(a,c)}).mouseout(function(c){b.rollOutLabel(a,
c)}).click(function(c){b.clickLabel(a,c)})}},createV:function(){var a=this.markerSize;return d.polygon(this.container,[a/5,a/2,a-a/5,a/2],[a/3,a-a/5,a/5,a/1.7],this.switchColor)},createX:function(){var a=(this.markerSize-4)/2,b={stroke:this.switchColor,"stroke-width":3},c=this.container,e=d.line(c,[-a,a],[-a,a]).attr(b),a=d.line(c,[-a,a],[a,-a]).attr(b);return this.container.set([e,a])},createMarker:function(a,b,c,e,h,f,g,k,l){var m=this.markerSize,p=this.container;h||(h=this.markerBorderColor);h||
(h=b);isNaN(e)&&(e=this.markerBorderThickness);isNaN(f)&&(f=this.markerBorderAlpha);return d.bullet(p,a,m,b,c,e,h,f,m,g,k,this.chart.path,l)},validateNow:function(){this.invalidateSize()},updateValues:function(){var a=this.valueLabels,b=this.chart,c,e=this.data;if(a)for(c=0;c<a.length;c++){var h=a[c],f=h.dItem;f.periodDataItem=void 0;f.periodPercentDataItem=void 0;var g=" ";if(e)f.value?h.text(f.value):h.text("");else{var k=null;if(void 0!==f.type){var k=f.currentDataItem,l=this.periodValueText;f.legendPeriodValueText&&
(l=f.legendPeriodValueText);f.legendPeriodValueTextR&&(l=f.legendPeriodValueTextR);k?(g=this.valueText,f.legendValueText&&(g=f.legendValueText),g=b.formatString(g,k)):l&&b.formatPeriodString&&(l=d.massReplace(l,{"[[title]]":f.title}),g=b.formatPeriodString(l,f))}else g=b.formatString(this.valueText,f);l=f;k&&(l=k);var m=this.valueFunction;m&&(g=m(l,g,b.periodDataItem));var p;this.useMarkerColorForLabels&&!k&&f.lastDataItem&&(k=f.lastDataItem);k?p=b.getBalloonColor(f,k):f.legendKeyColor&&(p=f.legendKeyColor());
f.legendColorFunction&&(p=f.legendColorFunction(l,g,f.periodDataItem,f.periodPercentDataItem));h.text(g);if(!f.pattern&&(this.useMarkerColorForValues&&h.setAttr("fill",p),this.useMarkerColorForLabels)){if(h=f.legendMarker)h.setAttr("fill",p),h.setAttr("stroke",p);(f=f.legendLabel)&&f.setAttr("fill",p)}}}},renderFix:function(){if(!d.VML&&this.enabled){var a=this.container;a&&a.renderFix()}},destroy:function(){this.div.innerHTML="";d.remove(this.set)}})})();(function(){var d=window.AmCharts;d.formatMilliseconds=function(a,b){if(-1!=a.indexOf("fff")){var c=b.getMilliseconds(),d=String(c);10>c&&(d="00"+c);10<=c&&100>c&&(d="0"+c);a=a.replace(/fff/g,d)}return a};d.extractPeriod=function(a){var b=d.stripNumbers(a),c=1;b!=a&&(c=Number(a.slice(0,a.indexOf(b))));return{period:b,count:c}};d.getDate=function(a,b,c){return a instanceof Date?d.newDate(a,c):b&&isNaN(a)?d.stringToDate(a,b):new Date(a)};d.daysInMonth=function(a){return(new Date(a.getYear(),a.getMonth()+
1,0)).getDate()};d.newDate=function(a,b){return b&&-1==b.indexOf("fff")?new Date(a):new Date(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours(),a.getMinutes(),a.getSeconds(),a.getMilliseconds())};d.resetDateToMin=function(a,b,c,e){void 0===e&&(e=1);var h,f,g,k,l,m,p;d.useUTC?(h=a.getUTCFullYear(),f=a.getUTCMonth(),g=a.getUTCDate(),k=a.getUTCHours(),l=a.getUTCMinutes(),m=a.getUTCSeconds(),p=a.getUTCMilliseconds(),a=a.getUTCDay()):(h=a.getFullYear(),f=a.getMonth(),g=a.getDate(),k=a.getHours(),l=
a.getMinutes(),m=a.getSeconds(),p=a.getMilliseconds(),a=a.getDay());switch(b){case "YYYY":h=Math.floor(h/c)*c;f=0;g=1;p=m=l=k=0;break;case "MM":f=Math.floor(f/c)*c;g=1;p=m=l=k=0;break;case "WW":g=a>=e?g-a+e:g-(7+a)+e;p=m=l=k=0;break;case "DD":p=m=l=k=0;break;case "hh":k=Math.floor(k/c)*c;p=m=l=0;break;case "mm":l=Math.floor(l/c)*c;p=m=0;break;case "ss":m=Math.floor(m/c)*c;p=0;break;case "fff":p=Math.floor(p/c)*c}d.useUTC?(a=new Date,a.setUTCFullYear(h,f,g),a.setUTCHours(k,l,m,p)):a=new Date(h,f,g,
k,l,m,p);return a};d.getPeriodDuration=function(a,b){void 0===b&&(b=1);var c;switch(a){case "YYYY":c=316224E5;break;case "MM":c=26784E5;break;case "WW":c=6048E5;break;case "DD":c=864E5;break;case "hh":c=36E5;break;case "mm":c=6E4;break;case "ss":c=1E3;break;case "fff":c=1}return c*b};d.intervals={s:{nextInterval:"ss",contains:1E3},ss:{nextInterval:"mm",contains:60,count:0},mm:{nextInterval:"hh",contains:60,count:1},hh:{nextInterval:"DD",contains:24,count:2},DD:{nextInterval:"",contains:Infinity,count:3}};
d.getMaxInterval=function(a,b){var c=d.intervals;return a>=c[b].contains?(a=Math.round(a/c[b].contains),b=c[b].nextInterval,d.getMaxInterval(a,b)):"ss"==b?c[b].nextInterval:b};d.dayNames="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" ");d.shortDayNames="Sun Mon Tue Wed Thu Fri Sat".split(" ");d.monthNames="January February March April May June July August September October November December".split(" ");d.shortMonthNames="Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" ");
d.getWeekNumber=function(a){a=new Date(a);a.setHours(0,0,0);a.setDate(a.getDate()+4-(a.getDay()||7));var b=new Date(a.getFullYear(),0,1);return Math.ceil(((a-b)/864E5+1)/7)};d.stringToDate=function(a,b){var c={},e=[{pattern:"YYYY",period:"year"},{pattern:"YY",period:"year"},{pattern:"MM",period:"month"},{pattern:"M",period:"month"},{pattern:"DD",period:"date"},{pattern:"D",period:"date"},{pattern:"JJ",period:"hours"},{pattern:"J",period:"hours"},{pattern:"HH",period:"hours"},{pattern:"H",period:"hours"},
{pattern:"KK",period:"hours"},{pattern:"K",period:"hours"},{pattern:"LL",period:"hours"},{pattern:"L",period:"hours"},{pattern:"NN",period:"minutes"},{pattern:"N",period:"minutes"},{pattern:"SS",period:"seconds"},{pattern:"S",period:"seconds"},{pattern:"QQQ",period:"milliseconds"},{pattern:"QQ",period:"milliseconds"},{pattern:"Q",period:"milliseconds"}],h=!0,f=b.indexOf("AA");-1!=f&&(a.substr(f,2),"pm"==a.toLowerCase&&(h=!1));var f=b,g,k,l;for(l=0;l<e.length;l++)k=e[l].period,c[k]=0,"date"==k&&(c[k]=
1);for(l=0;l<e.length;l++)if(g=e[l].pattern,k=e[l].period,-1!=b.indexOf(g)){var m=d.getFromDateString(g,a,f);b=b.replace(g,"");if("KK"==g||"K"==g||"LL"==g||"L"==g)h||(m+=12);c[k]=m}d.useUTC?(e=new Date,e.setUTCFullYear(c.year,c.month,c.date),e.setUTCHours(c.hours,c.minutes,c.seconds,c.milliseconds)):e=new Date(c.year,c.month,c.date,c.hours,c.minutes,c.seconds,c.milliseconds);return e};d.getFromDateString=function(a,b,c){if(void 0!==b)return c=c.indexOf(a),b=String(b),b=b.substr(c,a.length),"0"==b.charAt(0)&&
(b=b.substr(1,b.length-1)),b=Number(b),isNaN(b)&&(b=0),-1!=a.indexOf("M")&&b--,b};d.formatDate=function(a,b,c){c||(c=d);var e,h,f,g,k,l,m,p,q=d.getWeekNumber(a);d.useUTC?(e=a.getUTCFullYear(),h=a.getUTCMonth(),f=a.getUTCDate(),g=a.getUTCDay(),k=a.getUTCHours(),l=a.getUTCMinutes(),m=a.getUTCSeconds(),p=a.getUTCMilliseconds()):(e=a.getFullYear(),h=a.getMonth(),f=a.getDate(),g=a.getDay(),k=a.getHours(),l=a.getMinutes(),m=a.getSeconds(),p=a.getMilliseconds());var n=String(e).substr(2,2),t="0"+g;b=b.replace(/W/g,
q);q=k;24==q&&(q=0);var r=q;10>r&&(r="0"+r);b=b.replace(/JJ/g,r);b=b.replace(/J/g,q);r=k;0===r&&(r=24,-1!=b.indexOf("H")&&(f--,0===f&&(e=new Date(a),e.setDate(e.getDate()-1),h=e.getMonth(),f=e.getDate(),e=e.getFullYear())));a=h+1;9>h&&(a="0"+a);q=f;10>f&&(q="0"+f);var w=r;10>w&&(w="0"+w);b=b.replace(/HH/g,w);b=b.replace(/H/g,r);r=k;11<r&&(r-=12);w=r;10>w&&(w="0"+w);b=b.replace(/KK/g,w);b=b.replace(/K/g,r);r=k;0===r&&(r=12);12<r&&(r-=12);w=r;10>w&&(w="0"+w);b=b.replace(/LL/g,w);b=b.replace(/L/g,r);
r=l;10>r&&(r="0"+r);b=b.replace(/NN/g,r);b=b.replace(/N/g,l);l=m;10>l&&(l="0"+l);b=b.replace(/SS/g,l);b=b.replace(/S/g,m);m=p;10>m?m="00"+m:100>m&&(m="0"+m);l=p;10>l&&(l="00"+l);b=b.replace(/A/g,"@A@");b=b.replace(/QQQ/g,m);b=b.replace(/QQ/g,l);b=b.replace(/Q/g,p);b=b.replace(/YYYY/g,"@IIII@");b=b.replace(/YY/g,"@II@");b=b.replace(/MMMM/g,"@XXXX@");b=b.replace(/MMM/g,"@XXX@");b=b.replace(/MM/g,"@XX@");b=b.replace(/M/g,"@X@");b=b.replace(/DD/g,"@RR@");b=b.replace(/D/g,"@R@");b=b.replace(/EEEE/g,"@PPPP@");
b=b.replace(/EEE/g,"@PPP@");b=b.replace(/EE/g,"@PP@");b=b.replace(/E/g,"@P@");b=b.replace(/@IIII@/g,e);b=b.replace(/@II@/g,n);b=b.replace(/@XXXX@/g,c.monthNames[h]);b=b.replace(/@XXX@/g,c.shortMonthNames[h]);b=b.replace(/@XX@/g,a);b=b.replace(/@X@/g,h+1);b=b.replace(/@RR@/g,q);b=b.replace(/@R@/g,f);b=b.replace(/@PPPP@/g,c.dayNames[g]);b=b.replace(/@PPP@/g,c.shortDayNames[g]);b=b.replace(/@PP@/g,t);b=b.replace(/@P@/g,g);return b=12>k?b.replace(/@A@/g,c.amString):b.replace(/@A@/g,c.pmString)};d.changeDate=
function(a,b,c,e,h){if(d.useUTC)return d.changeUTCDate(a,b,c,e,h);var f=-1;void 0===e&&(e=!0);void 0===h&&(h=!1);!0===e&&(f=1);switch(b){case "YYYY":a.setFullYear(a.getFullYear()+c*f);e||h||a.setDate(a.getDate()+1);break;case "MM":b=a.getMonth();a.setMonth(a.getMonth()+c*f);a.getMonth()>b+c*f&&a.setDate(a.getDate()-1);e||h||a.setDate(a.getDate()+1);break;case "DD":a.setDate(a.getDate()+c*f);break;case "WW":a.setDate(a.getDate()+c*f*7);break;case "hh":a.setHours(a.getHours()+c*f);break;case "mm":a.setMinutes(a.getMinutes()+
c*f);break;case "ss":a.setSeconds(a.getSeconds()+c*f);break;case "fff":a.setMilliseconds(a.getMilliseconds()+c*f)}return a};d.changeUTCDate=function(a,b,c,d,h){var f=-1;void 0===d&&(d=!0);void 0===h&&(h=!1);!0===d&&(f=1);switch(b){case "YYYY":a.setUTCFullYear(a.getUTCFullYear()+c*f);d||h||a.setUTCDate(a.getUTCDate()+1);break;case "MM":b=a.getUTCMonth();a.setUTCMonth(a.getUTCMonth()+c*f);a.getUTCMonth()>b+c*f&&a.setUTCDate(a.getUTCDate()-1);d||h||a.setUTCDate(a.getUTCDate()+1);break;case "DD":a.setUTCDate(a.getUTCDate()+
c*f);break;case "WW":a.setUTCDate(a.getUTCDate()+c*f*7);break;case "hh":a.setUTCHours(a.getUTCHours()+c*f);break;case "mm":a.setUTCMinutes(a.getUTCMinutes()+c*f);break;case "ss":a.setUTCSeconds(a.getUTCSeconds()+c*f);break;case "fff":a.setUTCMilliseconds(a.getUTCMilliseconds()+c*f)}return a}})();
(function(){var e=window.AmCharts;e.AmRectangularChart=e.Class({inherits:e.AmCoordinateChart,construct:function(a){e.AmRectangularChart.base.construct.call(this,a);this.theme=a;this.createEvents("zoomed","changed");this.marginRight=this.marginBottom=this.marginTop=this.marginLeft=20;this.depth3D=this.angle=0;this.plotAreaFillColors="#FFFFFF";this.plotAreaFillAlphas=0;this.plotAreaBorderColor="#000000";this.plotAreaBorderAlpha=0;this.maxZoomFactor=20;this.zoomOutButtonImageSize=19;this.zoomOutButtonImage=
"lens";this.zoomOutText="Show all";this.zoomOutButtonColor="#e5e5e5";this.zoomOutButtonAlpha=0;this.zoomOutButtonRollOverAlpha=1;this.zoomOutButtonPadding=8;this.trendLines=[];this.autoMargins=!0;this.marginsUpdated=!1;this.autoMarginOffset=10;e.applyTheme(this,a,"AmRectangularChart")},initChart:function(){e.AmRectangularChart.base.initChart.call(this);this.updateDxy();!this.marginsUpdated&&this.autoMargins&&(this.resetMargins(),this.drawGraphs=!1);this.processScrollbars();this.updateMargins();this.updatePlotArea();
this.updateScrollbars();this.updateTrendLines();this.updateChartCursor();this.updateValueAxes();this.scrollbarOnly||this.updateGraphs()},drawChart:function(){e.AmRectangularChart.base.drawChart.call(this);this.drawPlotArea();if(e.ifArray(this.chartData)){var a=this.chartCursor;a&&a.draw()}},resetMargins:function(){var a={},b;if("xy"==this.type){var c=this.xAxes,d=this.yAxes;for(b=0;b<c.length;b++){var g=c[b];g.ignoreAxisWidth||(g.setOrientation(!0),g.fixAxisPosition(),a[g.position]=!0)}for(b=0;b<
d.length;b++)c=d[b],c.ignoreAxisWidth||(c.setOrientation(!1),c.fixAxisPosition(),a[c.position]=!0)}else{d=this.valueAxes;for(b=0;b<d.length;b++)c=d[b],c.ignoreAxisWidth||(c.setOrientation(this.rotate),c.fixAxisPosition(),a[c.position]=!0);(b=this.categoryAxis)&&!b.ignoreAxisWidth&&(b.setOrientation(!this.rotate),b.fixAxisPosition(),b.fixAxisPosition(),a[b.position]=!0)}a.left&&(this.marginLeft=0);a.right&&(this.marginRight=0);a.top&&(this.marginTop=0);a.bottom&&(this.marginBottom=0);this.fixMargins=
a},measureMargins:function(){var a=this.valueAxes,b,c=this.autoMarginOffset,d=this.fixMargins,g=this.realWidth,e=this.realHeight,f=c,k=c,m=g;b=e;var l;for(l=0;l<a.length;l++)a[l].handleSynchronization(),b=this.getAxisBounds(a[l],f,m,k,b),f=Math.round(b.l),m=Math.round(b.r),k=Math.round(b.t),b=Math.round(b.b);if(a=this.categoryAxis)b=this.getAxisBounds(a,f,m,k,b),f=Math.round(b.l),m=Math.round(b.r),k=Math.round(b.t),b=Math.round(b.b);d.left&&f<c&&(this.marginLeft=Math.round(-f+c),!isNaN(this.minMarginLeft)&&
this.marginLeft<this.minMarginLeft&&(this.marginLeft=this.minMarginLeft));d.right&&m>=g-c&&(this.marginRight=Math.round(m-g+c),!isNaN(this.minMarginRight)&&this.marginRight<this.minMarginRight&&(this.marginRight=this.minMarginRight));d.top&&k<c+this.titleHeight&&(this.marginTop=Math.round(this.marginTop-k+c+this.titleHeight),!isNaN(this.minMarginTop)&&this.marginTop<this.minMarginTop&&(this.marginTop=this.minMarginTop));d.bottom&&b>e-c&&(this.marginBottom=Math.round(this.marginBottom+b-e+c),!isNaN(this.minMarginBottom)&&
this.marginBottom<this.minMarginBottom&&(this.marginBottom=this.minMarginBottom));this.initChart()},getAxisBounds:function(a,b,c,d,e){if(!a.ignoreAxisWidth){var h=a.labelsSet,f=a.tickLength;a.inside&&(f=0);if(h)switch(h=a.getBBox(),a.position){case "top":a=h.y;d>a&&(d=a);break;case "bottom":a=h.y+h.height;e<a&&(e=a);break;case "right":a=h.x+h.width+f+3;c<a&&(c=a);break;case "left":a=h.x-f,b>a&&(b=a)}}return{l:b,t:d,r:c,b:e}},drawZoomOutButton:function(){var a=this;if(!a.zbSet){var b=a.container.set();
a.zoomButtonSet.push(b);var c=a.color,d=a.fontSize,g=a.zoomOutButtonImageSize,h=a.zoomOutButtonImage.replace(/\.[a-z]*$/i,""),f=a.langObj.zoomOutText||a.zoomOutText,k=a.zoomOutButtonColor,m=a.zoomOutButtonAlpha,l=a.zoomOutButtonFontSize,p=a.zoomOutButtonPadding;isNaN(l)||(d=l);(l=a.zoomOutButtonFontColor)&&(c=l);var l=a.zoomOutButton,q;l&&(l.fontSize&&(d=l.fontSize),l.color&&(c=l.color),l.backgroundColor&&(k=l.backgroundColor),isNaN(l.backgroundAlpha)||(a.zoomOutButtonRollOverAlpha=l.backgroundAlpha));
var r=l=0,r=a.pathToImages;if(h){if(e.isAbsolute(h)||void 0===r)r="";q=a.container.image(r+h+a.extension,0,0,g,g);e.setCN(a,q,"zoom-out-image");b.push(q);q=q.getBBox();l=q.width+5}void 0!==f&&(c=e.text(a.container,f,c,a.fontFamily,d,"start"),e.setCN(a,c,"zoom-out-label"),d=c.getBBox(),r=q?q.height/2-3:d.height/2,c.translate(l,r),b.push(c));q=b.getBBox();c=1;e.isModern||(c=0);k=e.rect(a.container,q.width+2*p+5,q.height+2*p-2,k,1,1,k,c);k.setAttr("opacity",m);k.translate(-p,-p);e.setCN(a,k,"zoom-out-bg");
b.push(k);k.toBack();a.zbBG=k;q=k.getBBox();b.translate(a.marginLeftReal+a.plotAreaWidth-q.width+p,a.marginTopReal+p);b.hide();b.mouseover(function(){a.rollOverZB()}).mouseout(function(){a.rollOutZB()}).click(function(){a.clickZB()}).touchstart(function(){a.rollOverZB()}).touchend(function(){a.rollOutZB();a.clickZB()});for(m=0;m<b.length;m++)b[m].attr({cursor:"pointer"});void 0!==a.zoomOutButtonTabIndex&&(b.setAttr("tabindex",a.zoomOutButtonTabIndex),b.setAttr("role","menuitem"),b.keyup(function(b){13==
b.keyCode&&a.clickZB()}));a.zbSet=b}},rollOverZB:function(){this.rolledOverZB=!0;this.zbBG.setAttr("opacity",this.zoomOutButtonRollOverAlpha)},rollOutZB:function(){this.rolledOverZB=!1;this.zbBG.setAttr("opacity",this.zoomOutButtonAlpha)},clickZB:function(){this.rolledOverZB=!1;this.zoomOut()},zoomOut:function(){this.zoomOutValueAxes()},drawPlotArea:function(){var a=this.dx,b=this.dy,c=this.marginLeftReal,d=this.marginTopReal,g=this.plotAreaWidth-1,h=this.plotAreaHeight-1,f=this.plotAreaFillColors,
k=this.plotAreaFillAlphas,m=this.plotAreaBorderColor,l=this.plotAreaBorderAlpha;"object"==typeof k&&(k=k[0]);f=e.polygon(this.container,[0,g,g,0,0],[0,0,h,h,0],f,k,1,m,l,this.plotAreaGradientAngle);e.setCN(this,f,"plot-area");f.translate(c+a,d+b);this.set.push(f);0!==a&&0!==b&&(f=this.plotAreaFillColors,"object"==typeof f&&(f=f[0]),f=e.adjustLuminosity(f,-.15),g=e.polygon(this.container,[0,a,g+a,g,0],[0,b,b,0,0],f,k,1,m,l),e.setCN(this,g,"plot-area-bottom"),g.translate(c,d+h),this.set.push(g),a=e.polygon(this.container,
[0,0,a,a,0],[0,h,h+b,b,0],f,k,1,m,l),e.setCN(this,a,"plot-area-left"),a.translate(c,d),this.set.push(a));(c=this.bbset)&&this.scrollbarOnly&&c.remove()},updatePlotArea:function(){var a=this.updateWidth(),b=this.updateHeight(),c=this.container;this.realWidth=a;this.realWidth=b;c&&this.container.setSize(a,b);var c=this.marginLeftReal,d=this.marginTopReal,a=a-c-this.marginRightReal-this.dx,b=b-d-this.marginBottomReal;1>a&&(a=1);1>b&&(b=1);this.plotAreaWidth=Math.round(a);this.plotAreaHeight=Math.round(b);
this.plotBalloonsSet.translate(c,d)},updateDxy:function(){this.dx=Math.round(this.depth3D*Math.cos(this.angle*Math.PI/180));this.dy=Math.round(-this.depth3D*Math.sin(this.angle*Math.PI/180));this.d3x=Math.round(this.columnSpacing3D*Math.cos(this.angle*Math.PI/180));this.d3y=Math.round(-this.columnSpacing3D*Math.sin(this.angle*Math.PI/180))},updateMargins:function(){var a=this.getTitleHeight();this.titleHeight=a;this.marginTopReal=this.marginTop-this.dy;this.fixMargins&&!this.fixMargins.top&&(this.marginTopReal+=
a);this.marginBottomReal=this.marginBottom;this.marginLeftReal=this.marginLeft;this.marginRightReal=this.marginRight},updateValueAxes:function(){var a=this.valueAxes,b;for(b=0;b<a.length;b++){var c=a[b];this.setAxisRenderers(c);this.updateObjectSize(c)}},setAxisRenderers:function(a){a.axisRenderer=e.RecAxis;a.guideFillRenderer=e.RecFill;a.axisItemRenderer=e.RecItem;a.marginsChanged=!0},updateGraphs:function(){var a=this.graphs,b;for(b=0;b<a.length;b++){var c=a[b];c.index=b;c.rotate=this.rotate;this.updateObjectSize(c)}},
updateObjectSize:function(a){a.width=this.plotAreaWidth-1;a.height=this.plotAreaHeight-1;a.x=this.marginLeftReal;a.y=this.marginTopReal;a.dx=this.dx;a.dy=this.dy},updateChartCursor:function(){var a=this.chartCursor;a&&(a=e.processObject(a,e.ChartCursor,this.theme),this.updateObjectSize(a),this.addChartCursor(a),a.chart=this)},processScrollbars:function(){var a=this.chartScrollbar;a&&(a=e.processObject(a,e.ChartScrollbar,this.theme),this.addChartScrollbar(a))},updateScrollbars:function(){},removeChartCursor:function(){e.callMethod("destroy",
[this.chartCursor]);this.chartCursor=null},zoomTrendLines:function(){var a=this.trendLines,b;for(b=0;b<a.length;b++){var c=a[b];c.valueAxis.recalculateToPercents?c.set&&c.set.hide():(c.x=this.marginLeftReal,c.y=this.marginTopReal,c.draw())}},handleCursorValueZoom:function(){},addTrendLine:function(a){this.trendLines.push(a)},zoomOutValueAxes:function(){for(var a=this.valueAxes,b=0;b<a.length;b++)a[b].zoomOut()},removeTrendLine:function(a){var b=this.trendLines,c;for(c=b.length-1;0<=c;c--)b[c]==a&&
b.splice(c,1)},adjustMargins:function(a,b){var c=a.position,d=a.scrollbarHeight+a.offset;a.enabled&&("top"==c?b?this.marginLeftReal+=d:this.marginTopReal+=d:b?this.marginRightReal+=d:this.marginBottomReal+=d)},getScrollbarPosition:function(a,b,c){var d="bottom",e="top";a.oppositeAxis||(e=d,d="top");a.position=b?"bottom"==c||"left"==c?d:e:"top"==c||"right"==c?d:e},updateChartScrollbar:function(a,b){if(a){a.rotate=b;var c=this.marginTopReal,d=this.marginLeftReal,e=a.scrollbarHeight,h=this.dx,f=this.dy,
k=a.offset;"top"==a.position?b?(a.y=c,a.x=d-e-k):(a.y=c-e+f-k,a.x=d+h):b?(a.y=c+f,a.x=d+this.plotAreaWidth+h+k):(a.y=c+this.plotAreaHeight+k,a.x=this.marginLeftReal)}},showZB:function(a){var b=this.zbSet;a&&(b=this.zoomOutText,""!==b&&b&&this.drawZoomOutButton());if(b=this.zbSet)this.zoomButtonSet.push(b),a?b.show():b.hide(),this.rollOutZB()},handleReleaseOutside:function(a){e.AmRectangularChart.base.handleReleaseOutside.call(this,a);(a=this.chartCursor)&&a.handleReleaseOutside&&a.handleReleaseOutside()},
handleMouseDown:function(a){e.AmRectangularChart.base.handleMouseDown.call(this,a);var b=this.chartCursor;b&&b.handleMouseDown&&!this.rolledOverZB&&b.handleMouseDown(a)},update:function(){e.AmRectangularChart.base.update.call(this);this.chartCursor&&this.chartCursor.update&&this.chartCursor.update()},handleScrollbarValueZoom:function(a){this.relativeZoomValueAxes(a.target.valueAxes,a.relativeStart,a.relativeEnd);this.zoomAxesAndGraphs()},zoomValueScrollbar:function(a){if(a&&a.enabled){var b=a.valueAxes[0],
c=b.relativeStart,d=b.relativeEnd;b.reversed&&(d=1-c,c=1-b.relativeEnd);a.percentZoom(c,d)}},zoomAxesAndGraphs:function(){if(!this.scrollbarOnly){var a=this.valueAxes,b;for(b=0;b<a.length;b++)a[b].zoom(this.start,this.end);a=this.graphs;for(b=0;b<a.length;b++)a[b].zoom(this.start,this.end);(b=this.chartCursor)&&b.clearSelection();this.zoomTrendLines()}},handleValueAxisZoomReal:function(a,b){var c=a.relativeStart,d=a.relativeEnd;if(c>d)var e=c,c=d,d=e;this.relativeZoomValueAxes(b,c,d);this.updateAfterValueZoom()},
updateAfterValueZoom:function(){this.zoomAxesAndGraphs();this.zoomScrollbar()},relativeZoomValueAxes:function(a,b,c){this.hideBalloonReal();b=e.fitToBounds(b,0,1);c=e.fitToBounds(c,0,1);if(b>c){var d=b;b=c;c=d}var d=1/this.maxZoomFactor,g=e.getDecimals(d)+4;c-b<d&&(c=b+(c-b)/2,b=c-d/2,c+=d/2,1<c&&(b-=c-1,c=1),0>b&&(b=0,c=d));b=e.roundTo(b,g);c=e.roundTo(c,g);d=!1;if(a){for(g=0;g<a.length;g++){var h=a[g].zoomToRelativeValues(b,c,!0);h&&(d=h)}this.showZB()}return d},addChartCursor:function(a){e.callMethod("destroy",
[this.chartCursor]);a&&(this.listenTo(a,"moved",this.handleCursorMove),this.listenTo(a,"zoomed",this.handleCursorZoom),this.listenTo(a,"zoomStarted",this.handleCursorZoomStarted),this.listenTo(a,"panning",this.handleCursorPanning),this.listenTo(a,"onHideCursor",this.handleCursorHide));this.chartCursor=a},handleCursorChange:function(){},handleCursorMove:function(a){var b,c=this.valueAxes;for(b=0;b<c.length;b++)if(!a.panning){var d=c[b];d&&d.showBalloon&&d.showBalloon(a.x,a.y)}},handleCursorZoom:function(a){if(this.skipZoomed)this.skipZoomed=
!1;else{var b=this.startX0,c=this.endX0,d=this.endY0,e=this.startY0,h=a.startX,f=a.endX,k=a.startY,m=a.endY;this.startX0=this.endX0=this.startY0=this.endY0=NaN;this.handleCursorZoomReal(b+h*(c-b),b+f*(c-b),e+k*(d-e),e+m*(d-e),a)}},handleCursorHide:function(){var a,b=this.valueAxes;for(a=0;a<b.length;a++)b[a].hideBalloon();b=this.graphs;for(a=0;a<b.length;a++)b[a].hideBalloonReal()}})})();(function(){var e=window.AmCharts;e.AmXYChart=e.Class({inherits:e.AmRectangularChart,construct:function(a){this.type="xy";e.AmXYChart.base.construct.call(this,a);this.cname="AmXYChart";this.theme=a;this.createEvents("zoomed");e.applyTheme(this,a,this.cname)},initChart:function(){e.AmXYChart.base.initChart.call(this);this.dataChanged&&this.updateData();this.drawChart();!this.marginsUpdated&&this.autoMargins&&(this.marginsUpdated=!0,this.measureMargins());var a=this.marginLeftReal,b=this.marginTopReal,
c=this.plotAreaWidth,d=this.plotAreaHeight;this.graphsSet.clipRect(a,b,c,d);this.bulletSet.clipRect(a,b,c,d);this.trendLinesSet.clipRect(a,b,c,d);this.drawGraphs=!0;this.showZB()},prepareForExport:function(){var a=this.bulletSet;a.clipPath&&this.container.remove(a.clipPath)},createValueAxes:function(){var a=[],b=[];this.xAxes=a;this.yAxes=b;var c=this.valueAxes,d,g;for(g=0;g<c.length;g++){d=c[g];var h=d.position;if("top"==h||"bottom"==h)d.rotate=!0;d.setOrientation(d.rotate);h=d.orientation;"V"==
h&&b.push(d);"H"==h&&a.push(d)}0===b.length&&(d=new e.ValueAxis(this.theme),d.rotate=!1,d.setOrientation(!1),c.push(d),b.push(d));0===a.length&&(d=new e.ValueAxis(this.theme),d.rotate=!0,d.setOrientation(!0),c.push(d),a.push(d));for(g=0;g<c.length;g++)this.processValueAxis(c[g],g);a=this.graphs;for(g=0;g<a.length;g++)this.processGraph(a[g],g)},drawChart:function(){e.AmXYChart.base.drawChart.call(this);var a=this.chartData;this.legend&&(this.legend.valueText=void 0);if(0<this.realWidth&&0<this.realHeight){e.ifArray(a)?
(this.chartScrollbar&&this.updateScrollbars(),this.zoomChart()):this.cleanChart();if(a=this.scrollbarH)this.hideXScrollbar?(a&&a.destroy(),this.scrollbarH=null):a.draw();if(a=this.scrollbarV)this.hideYScrollbar?(a.destroy(),this.scrollbarV=null):a.draw();this.zoomScrollbar()}this.autoMargins&&!this.marginsUpdated||this.dispDUpd()},cleanChart:function(){e.callMethod("destroy",[this.valueAxes,this.graphs,this.scrollbarV,this.scrollbarH,this.chartCursor])},zoomChart:function(){this.zoomObjects(this.valueAxes);
this.zoomObjects(this.graphs);this.zoomTrendLines();this.prevPlotAreaWidth=this.plotAreaWidth;this.prevPlotAreaHeight=this.plotAreaHeight},validateData:function(){if(this.zoomOutOnDataUpdate)for(var a=this.valueAxes,b=0;b<a.length;b++)a[b].minZoom=NaN,a[b].maxZoom=NaN;e.AmXYChart.base.validateData.call(this)},zoomObjects:function(a){var b=a.length,c,d;for(c=0;c<b;c++)d=a[c],d.zoom(0,this.chartData.length-1)},updateData:function(){this.parseData();var a=this.chartData,b=a.length-1,c=this.graphs,d=
this.dataProvider,e=-Infinity,h=Infinity,f,k;if(d){for(f=0;f<c.length;f++)if(k=c[f],k.data=a,k.zoom(0,b),k=k.valueField){var m;for(m=0;m<d.length;m++){var l=Number(d[m][k]);null!==l&&(l>e&&(e=l),l<h&&(h=l))}}isNaN(this.minValue)||(h=this.minValue);isNaN(this.maxValue)||(e=this.maxValue);for(f=0;f<c.length;f++)k=c[f],k.maxValue=e,k.minValue=h;if(a=this.chartCursor)a.type="crosshair",a.valueBalloonsEnabled=!1;this.dataChanged=!1;this.dispatchDataUpdated=!0}},processValueAxis:function(a){a.chart=this;
a.minMaxField="H"==a.orientation?"x":"y";a.min=NaN;a.max=NaN},processGraph:function(a){e.isString(a.xAxis)&&(a.xAxis=this.getValueAxisById(a.xAxis));e.isString(a.yAxis)&&(a.yAxis=this.getValueAxisById(a.yAxis));a.xAxis||(a.xAxis=this.xAxes[0]);a.yAxis||(a.yAxis=this.yAxes[0]);a.valueAxis=a.yAxis},parseData:function(){e.AmXYChart.base.parseData.call(this);this.chartData=[];var a=this.dataProvider,b=this.valueAxes,c=this.graphs,d;if(a)for(d=0;d<a.length;d++){var g={axes:{},x:{},y:{}},h=this.dataDateFormat,
f=a[d],k;for(k=0;k<b.length;k++){var m=b[k].id;g.axes[m]={};g.axes[m].graphs={};var l;for(l=0;l<c.length;l++){var p=c[l],q=p.id;if(p.xAxis.id==m||p.yAxis.id==m){var r={};r.serialDataItem=g;r.index=d;var t={},n=f[p.valueField];null!==n&&(n=Number(n),isNaN(n)||(t.value=n));n=f[p.xField];null!==n&&("date"==p.xAxis.type&&(n=e.getDate(f[p.xField],h).getTime()),n=Number(n),isNaN(n)||(t.x=n));n=f[p.yField];null!==n&&("date"==p.yAxis.type&&(n=e.getDate(f[p.yField],h).getTime()),n=Number(n),isNaN(n)||(t.y=
n));n=f[p.errorField];null!==n&&(n=Number(n),isNaN(n)||(t.error=n));r.values=t;this.processFields(p,r,f);r.serialDataItem=g;r.graph=p;g.axes[m].graphs[q]=r}}}this.chartData[d]=g}this.start=0;this.end=this.chartData.length-1},formatString:function(a,b,c){var d=b.graph,g=d.numberFormatter;g||(g=this.nf);var h,f;"date"==b.graph.xAxis.type&&(h=e.formatDate(new Date(b.values.x),d.dateFormat,this),f=RegExp("\\[\\[x\\]\\]","g"),a=a.replace(f,h));"date"==b.graph.yAxis.type&&(h=e.formatDate(new Date(b.values.y),
d.dateFormat,this),f=RegExp("\\[\\[y\\]\\]","g"),a=a.replace(f,h));a=e.formatValue(a,b.values,["value","x","y"],g);-1!=a.indexOf("[[")&&(a=e.formatDataContextValue(a,b.dataContext));return a=e.AmXYChart.base.formatString.call(this,a,b,c)},addChartScrollbar:function(a){e.callMethod("destroy",[this.chartScrollbar,this.scrollbarH,this.scrollbarV]);if(a){this.chartScrollbar=a;this.scrollbarHeight=a.scrollbarHeight;var b="backgroundColor backgroundAlpha selectedBackgroundColor selectedBackgroundAlpha scrollDuration resizeEnabled hideResizeGrips scrollbarHeight updateOnReleaseOnly".split(" ");
if(!this.hideYScrollbar){var c=new e.ChartScrollbar(this.theme);c.skipEvent=!0;c.chart=this;this.listenTo(c,"zoomed",this.handleScrollbarValueZoom);e.copyProperties(a,c,b);c.rotate=!0;this.scrollbarV=c}this.hideXScrollbar||(c=new e.ChartScrollbar(this.theme),c.skipEvent=!0,c.chart=this,this.listenTo(c,"zoomed",this.handleScrollbarValueZoom),e.copyProperties(a,c,b),c.rotate=!1,this.scrollbarH=c)}},updateTrendLines:function(){var a=this.trendLines,b;for(b=0;b<a.length;b++){var c=a[b],c=e.processObject(c,
e.TrendLine,this.theme);a[b]=c;c.chart=this;var d=c.valueAxis;e.isString(d)&&(c.valueAxis=this.getValueAxisById(d));d=c.valueAxisX;e.isString(d)&&(c.valueAxisX=this.getValueAxisById(d));c.id||(c.id="trendLineAuto"+b+"_"+(new Date).getTime());c.valueAxis||(c.valueAxis=this.yAxes[0]);c.valueAxisX||(c.valueAxisX=this.xAxes[0])}},updateMargins:function(){e.AmXYChart.base.updateMargins.call(this);var a=this.scrollbarV;a&&(this.getScrollbarPosition(a,!0,this.yAxes[0].position),this.adjustMargins(a,!0));
if(a=this.scrollbarH)this.getScrollbarPosition(a,!1,this.xAxes[0].position),this.adjustMargins(a,!1)},updateScrollbars:function(){e.AmXYChart.base.updateScrollbars.call(this);var a=this.scrollbarV;a&&(this.updateChartScrollbar(a,!0),a.valueAxes=this.yAxes,a.gridAxis||(a.gridAxis=this.yAxes[0]));if(a=this.scrollbarH)this.updateChartScrollbar(a,!1),a.valueAxes=this.xAxes,a.gridAxis||(a.gridAxis=this.xAxes[0])},removeChartScrollbar:function(){e.callMethod("destroy",[this.scrollbarH,this.scrollbarV]);
this.scrollbarV=this.scrollbarH=null},handleReleaseOutside:function(a){e.AmXYChart.base.handleReleaseOutside.call(this,a);e.callMethod("handleReleaseOutside",[this.scrollbarH,this.scrollbarV])},update:function(){e.AmXYChart.base.update.call(this);this.scrollbarH&&this.scrollbarH.update&&this.scrollbarH.update();this.scrollbarV&&this.scrollbarV.update&&this.scrollbarV.update()},zoomScrollbar:function(){this.zoomValueScrollbar(this.scrollbarV);this.zoomValueScrollbar(this.scrollbarH)},handleCursorZoomReal:function(a,
b,c,d){isNaN(a)||isNaN(b)||this.relativeZoomValueAxes(this.xAxes,a,b);isNaN(c)||isNaN(d)||this.relativeZoomValueAxes(this.yAxes,c,d);this.updateAfterValueZoom()},handleCursorZoomStarted:function(){if(this.xAxes){var a=this.xAxes[0];this.startX0=a.relativeStart;this.endX0=a.relativeEnd;a.reversed&&(this.startX0=1-a.relativeEnd,this.endX0=1-a.relativeStart)}this.yAxes&&(a=this.yAxes[0],this.startY0=a.relativeStart,this.endY0=a.relativeEnd,a.reversed&&(this.startY0=1-a.relativeEnd,this.endY0=1-a.relativeStart))},
updateChartCursor:function(){e.AmXYChart.base.updateChartCursor.call(this);var a=this.chartCursor;if(a){a.valueLineEnabled=!0;a.categoryLineAxis||(a.categoryLineAxis=this.xAxes[0]);var b=this.valueAxis;if(a.valueLineBalloonEnabled){var c=a.categoryBalloonAlpha,d=a.categoryBalloonColor,g=a.color;void 0===d&&(d=a.cursorColor);for(var h=0;h<this.valueAxes.length;h++){var b=this.valueAxes[h],f=b.balloon;f||(f={});f=e.extend(f,this.balloon,!0);f.fillColor=d;f.balloonColor=d;f.fillAlpha=c;f.borderColor=
d;f.color=g;b.balloon=f}}else for(c=0;c<this.valueAxes.length;c++)b=this.valueAxes[c],b.balloon&&(b.balloon=null);a.zoomable&&(this.hideYScrollbar||(a.vZoomEnabled=!0),this.hideXScrollbar||(a.hZoomEnabled=!0))}},handleCursorPanning:function(a){var b=a.deltaX,c=a.delta2X,d;isNaN(c)&&(c=b,d=!0);var g=this.endX0,h=this.startX0,f=g-h,c=g-f*c,g=f;d||(g=0);b=e.fitToBounds(h-f*b,0,1-g);c=e.fitToBounds(c,g,1);this.relativeZoomValueAxes(this.xAxes,b,c);f=a.deltaY;a=a.delta2Y;isNaN(a)&&(a=f,d=!0);c=this.endY0;
b=this.startY0;h=c-b;f=c+h*f;c=h;d||(c=0);d=e.fitToBounds(b+h*a,0,1-c);f=e.fitToBounds(f,c,1);this.relativeZoomValueAxes(this.yAxes,d,f);this.updateAfterValueZoom()},handleValueAxisZoom:function(a){this.handleValueAxisZoomReal(a,"V"==a.valueAxis.orientation?this.yAxes:this.xAxes)},showZB:function(){var a,b=this.valueAxes;if(b)for(var c=0;c<b.length;c++){var d=b[c];0!==d.relativeStart&&(a=!0);1!=d.relativeEnd&&(a=!0)}e.AmXYChart.base.showZB.call(this,a)}})})();
/*
Plugin Name: amCharts Data Loader
Description: This plugin adds external data loading capabilities to all amCharts libraries.
Author: Martynas Majeris, amCharts
Version: 1.0.16
Author URI: http://www.amcharts.com/

Copyright 2015 amCharts

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Please note that the above license covers only this plugin. It by all means does
not apply to any other amCharts products that are covered by different licenses.
*/

/**
 * TODO:
 * incremental load
 * XML support (?)
 */

/* globals AmCharts, ActiveXObject */
/* jshint -W061 */

/**
 * Initialize language prompt container
 */
AmCharts.translations.dataLoader = {};

/**
 * Set init handler
 */
AmCharts.addInitHandler( function( chart ) {

  /**
   * Check if dataLoader is set (initialize it)
   */
  if ( undefined === chart.dataLoader || !isObject( chart.dataLoader ) )
    chart.dataLoader = {};

  /**
   * Check charts version for compatibility:
   * the first compatible version is 3.13
   */
  var version = chart.version.split( '.' );
  if ( ( Number( version[ 0 ] ) < 3 ) || ( 3 === Number( version[ 0 ] ) && ( Number( version[ 1 ] ) < 13 ) ) )
    return;

  /**
   * Define object reference for easy access
   */
  var l = chart.dataLoader;
  l.remaining = 0;
  l.percentLoaded = {};

  /**
   * Set defaults
   */
  var defaults = {
    'async': true,
    'format': 'json',
    'showErrors': true,
    'showCurtain': true,
    'noStyles': false,
    'reload': 0,
    'timestamp': false,
    'delimiter': ',',
    'skip': 0,
    'skipEmpty': true,
    'emptyAs': undefined,
    'useColumnNames': false,
    'init': false,
    'progress': false,
    'reverse': false,
    'reloading': false,
    'complete': false,
    'error': false,
    'numberFields': [],
    'headers': [],
    'chart': chart
  };

  /**
   * Create a function that can be used to load data (or reload via API)
   */
  l.loadData = function() {

    /**
     * Load all files in a row
     */
    if ( 'stock' === chart.type ) {

      // delay this a little bit so the chart has the chance to build itself
      setTimeout( function() {

        // preserve animation
        if ( 0 > chart.panelsSettings.startDuration ) {
          l.startDuration = chart.panelsSettings.startDuration;
          chart.panelsSettings.startDuration = 0;
        }

        // cycle through all of the data sets
        for ( var x = 0; x < chart.dataSets.length; x++ ) {
          var ds = chart.dataSets[ x ];

          // load data
          if ( undefined !== ds.dataLoader && undefined !== ds.dataLoader.url ) {

            callFunction( ds.dataLoader.init, ds.dataLoader, chart );
            ds.dataProvider = [];
            applyDefaults( ds.dataLoader );
            loadFile( ds.dataLoader.url, ds, ds.dataLoader, 'dataProvider' );

          }

          // load events data
          if ( undefined !== ds.eventDataLoader && undefined !== ds.eventDataLoader.url ) {

            callFunction( ds.eventDataLoader.init, ds.eventDataLoader, chart );
            ds.events = [];
            applyDefaults( ds.eventDataLoader );
            loadFile( ds.eventDataLoader.url, ds, ds.eventDataLoader, 'stockEvents' );

          }
        }

      }, 100 );

    } else {

      callFunction( l.init, l, chart );

      applyDefaults( l );

      if ( undefined === l.url )
        return;

      // preserve animation
      if ( undefined !== chart.startDuration && ( 0 < chart.startDuration ) ) {
        l.startDuration = chart.startDuration;
        chart.startDuration = 0;
      }

      if ( 'gauge' === chart.type ) {
        // set empty data set
        if ( undefined === chart.arrows )
          chart.arrows = [];

        loadFile( l.url, chart, l, 'arrows' );
      } else {
        // set empty data set
        if ( undefined === chart.dataProvider )
          chart.dataProvider = chart.type === 'map' ? {} : [];

        loadFile( l.url, chart, l, 'dataProvider' );
      }

    }

  };

  /**
   * Trigger load
   */
  l.loadData();

  /**
   * Loads a file and determines correct parsing mechanism for it
   */
  function loadFile( url, holder, options, providerKey ) {

    // set default providerKey
    if ( undefined === providerKey )
      providerKey = 'dataProvider';

    // show curtain
    if ( options.showCurtain )
      showCurtain( undefined, options.noStyles );

    // increment loader count
    l.remaining++;

    // set percent loaded for this file
    l.percentLoaded[ url ] = 0;

    // hijack user-defined "progress" handler with our own, so that we can
    // track progress
    if ( options.progress !== undefined && typeof( options.progress ) === 'function' && options._progress === undefined ) {
      options._progress = options.progress;
      options.progress = function( percent ) {
        // set progress
        l.percentLoaded[ url ] = percent;

        // calculate global percent
        var totalPercent = 0;
        var fileCount = 0;
        for ( var x in l.percentLoaded ) {
          if ( l.percentLoaded.hasOwnProperty( x ) ) {
            fileCount++;
            totalPercent += l.percentLoaded[ x ];
          }
        }
        var globalPercent = Math.round( ( totalPercent / fileCount ) * 100 ) / 100;

        // call user function
        options._progress.call( this, globalPercent, Math.round( percent * 100 ) / 100, url );
      };
    }

    // load the file
    AmCharts.loadFile( url, options, function( response ) {

      // error?
      if ( false === response ) {
        callFunction( options.error, options, chart );
        raiseError( AmCharts.__( 'Error loading the file', chart.language ) + ': ' + url, false, options );
      } else {

        // determine the format
        if ( undefined === options.format ) {
          // TODO
          options.format = 'json';
        }

        // lowercase
        options.format = options.format.toLowerCase();

        // invoke parsing function
        switch ( options.format ) {

          case 'json':

            holder[ providerKey ] = AmCharts.parseJSON( response );

            if ( false === holder[ providerKey ] ) {
              callFunction( options.error, options, chart );
              raiseError( AmCharts.__( 'Error parsing JSON file', chart.language ) + ': ' + l.url, false, options );
              holder[ providerKey ] = [];
              return;
            } else {
              holder[ providerKey ] = postprocess( holder[ providerKey ], options );
              callFunction( options.load, options, chart );
            }

            break;

          case 'csv':

            holder[ providerKey ] = AmCharts.parseCSV( response, options );

            if ( false === holder[ providerKey ] ) {
              callFunction( options.error, options, chart );
              raiseError( AmCharts.__( 'Error parsing CSV file', chart.language ) + ': ' + l.url, false, options );
              holder[ providerKey ] = [];
              return;
            } else {
              holder[ providerKey ] = postprocess( holder[ providerKey ], options );
              callFunction( options.load, options, chart );
            }

            break;

          default:
            callFunction( options.error, options, chart );
            raiseError( AmCharts.__( 'Unsupported data format', chart.language ) + ': ' + options.format, false, options.noStyles );
            return;
        }

        // decrement remaining counter
        l.remaining--;

        // we done?
        if ( 0 === l.remaining ) {

          // callback
          callFunction( options.complete, chart );

          // take in the new data
          if ( options.async ) {

            if ( 'map' === chart.type ) {

              // take in new data
              chart.validateNow( true );

              // remove curtain
              removeCurtain();

            } else {

              // add a dataUpdated event to handle post-load stuff
              if ( 'gauge' !== chart.type ) {
                chart.addListener( 'dataUpdated', function( event ) {

                  // restore default period (stock chart)
                  if ( 'stock' === chart.type && !options.reloading && undefined !== chart.periodSelector ) {
                    chart.periodSelector.setDefaultPeriod();
                  }

                  // remove curtain
                  removeCurtain();

                  // remove this listener
                  chart.events.dataUpdated.pop();
                } );
              }


              // take in new data
              chart.validateData();

              // invalidate size for the pie chart
              // disabled for now as it is not longer necessary
              /*if ( 'pie' === chart.type && chart.invalidateSize !== undefined )
                chart.invalidateSize();*/

              // gauge chart does not trigger dataUpdated event
              // let's explicitly remove the curtain for it
              if ( 'gauge' === chart.type )
                removeCurtain();

              // make the chart animate again
              if ( l.startDuration ) {
                if ( 'stock' === chart.type ) {
                  chart.panelsSettings.startDuration = l.startDuration;
                  for ( var x = 0; x < chart.panels.length; x++ ) {
                    chart.panels[ x ].startDuration = l.startDuration;
                    chart.panels[ x ].animateAgain();
                  }
                } else {
                  chart.startDuration = l.startDuration;
                  if ( chart.animateAgain !== undefined )
                    chart.animateAgain();
                }
              }
            }
          }

        }

        // schedule another load if necessary
        if ( options.reload ) {

          if ( options.timeout )
            clearTimeout( options.timeout );

          options.timeout = setTimeout( loadFile, 1000 * options.reload, url, holder, options, providerKey );
          options.reloading = true;

        }

      }

    } );

  }

  /**
   * Checks if postProcess is set and invokes the handler
   */
  function postprocess( data, options ) {
    if ( undefined !== options.postProcess && isFunction( options.postProcess ) )
      try {
        return options.postProcess.call( l, data, options, chart );
      } catch ( e ) {
        raiseError( AmCharts.__( 'Error loading file', chart.language ) + ': ' + options.url, false, options );
        return data;
      } else
        return data;
  }

  /**
   * Returns true if argument is array
   */
  function isObject( obj ) {
    return 'object' === typeof( obj );
  }

  /**
   * Returns true is argument is a function
   */
  function isFunction( obj ) {
    return 'function' === typeof( obj );
  }

  /**
   * Applies defaults to config object
   */
  function applyDefaults( obj ) {
    for ( var x in defaults ) {
      if ( defaults.hasOwnProperty( x ) )
        setDefault( obj, x, defaults[ x ] );
    }
  }

  /**
   * Checks if object property is set, sets with a default if it isn't
   */
  function setDefault( obj, key, value ) {
    if ( undefined === obj[ key ] )
      obj[ key ] = value;
  }

  /**
   * Raises an internal error (writes it out to console)
   */
  function raiseError( msg, error, options ) {

    if ( options.showErrors )
      showCurtain( msg, options.noStyles );
    else {
      removeCurtain();
      console.log( msg );
    }

  }

  /**
   * Shows curtain over chart area
   */
  function showCurtain( msg, noStyles ) {

    // remove previous curtain if there is one
    removeCurtain();

    // did we pass in the message?
    if ( undefined === msg )
      msg = AmCharts.__( 'Loading data...', chart.language );

    // create and populate curtain element
    var curtain = document.createElement( 'div' );
    curtain.setAttribute( 'id', chart.div.id + '-curtain' );
    curtain.className = 'amcharts-dataloader-curtain';

    if ( true !== noStyles ) {
      curtain.style.position = 'absolute';
      curtain.style.top = 0;
      curtain.style.left = 0;
      curtain.style.width = ( undefined !== chart.realWidth ? chart.realWidth : chart.divRealWidth ) + 'px';
      curtain.style.height = ( undefined !== chart.realHeight ? chart.realHeight : chart.divRealHeight ) + 'px';
      curtain.style.textAlign = 'center';
      curtain.style.display = 'table';
      curtain.style.fontSize = '20px';
      try {
        curtain.style.background = 'rgba(255, 255, 255, 0.3)';
      } catch ( e ) {
        curtain.style.background = 'rgb(255, 255, 255)';
      }
      curtain.innerHTML = '<div style="display: table-cell; vertical-align: middle;">' + msg + '</div>';
    } else {
      curtain.innerHTML = msg;
    }
    chart.containerDiv.appendChild( curtain );

    l.curtain = curtain;
  }

  /**
   * Removes the curtain
   */
  function removeCurtain() {
    try {
      if ( undefined !== l.curtain )
        chart.containerDiv.removeChild( l.curtain );
    } catch ( e ) {
      // do nothing
    }

    l.curtain = undefined;

  }

  /**
   * Execute callback function
   */
  function callFunction( func, param1, param2, param3 ) {
    if ( 'function' === typeof func )
      func.call( l, param1, param2, param3 );
  }

}, [ 'pie', 'serial', 'xy', 'funnel', 'radar', 'gauge', 'gantt', 'stock', 'map' ] );


/**
 * Returns prompt in a chart language (set by chart.language) if it is
 * available
 */
if ( undefined === AmCharts.__ ) {
  AmCharts.__ = function( msg, language ) {
    if ( undefined !== language && undefined !== AmCharts.translations.dataLoader[ language ] && undefined !== AmCharts.translations.dataLoader[ language ][ msg ] )
      return AmCharts.translations.dataLoader[ language ][ msg ];
    else
      return msg;
  };
}

/**
 * Loads a file from url and calls function handler with the result
 */
AmCharts.loadFile = function( url, options, handler ) {

  // prepopulate options with minimal defaults if necessary
  if ( typeof( options ) !== 'object' )
    options = {};
  if ( options.async === undefined )
    options.async = true;

  // create the request
  var request;
  if ( window.XMLHttpRequest ) {
    // IE7+, Firefox, Chrome, Opera, Safari
    request = new XMLHttpRequest();
  } else {
    // code for IE6, IE5
    request = new ActiveXObject( 'Microsoft.XMLHTTP' );
  }

  // open the connection
  try {
    request.open( 'GET', options.timestamp ? AmCharts.timestampUrl( url ) : url, options.async );
  } catch ( e ) {
    handler.call( this, false );
  }

  // add headers?
  if ( options.headers !== undefined && options.headers.length ) {
    for ( var i = 0; i < options.headers.length; i++ ) {
      var header = options.headers[ i ];
      request.setRequestHeader( header.key, header.value );
    }
  }

  // add onprogress handlers
  if ( options.progress !== undefined && typeof( options.progress ) === 'function' ) {
    request.onprogress = function( e ) {
      var complete = ( e.loaded / e.total ) * 100;
      options.progress.call( this, complete );
    }
  }

  // set handler for data if async loading
  request.onreadystatechange = function() {

    if ( 4 === request.readyState && 404 === request.status )
      handler.call( this, false );

    else if ( 4 === request.readyState && 200 === request.status )
      handler.call( this, request.responseText );

  };

  // load the file
  try {
    request.send();
  } catch ( e ) {
    handler.call( this, false );
  }

};

/**
 * Parses JSON string into an object
 */
AmCharts.parseJSON = function( response ) {
  try {
    if ( undefined !== JSON )
      return JSON.parse( response );
    else
      return eval( response );
  } catch ( e ) {
    return false;
  }
};

/**
 * Prases CSV string into an object
 */
AmCharts.parseCSV = function( response, options ) {

  // parse CSV into array
  var data = AmCharts.CSVToArray( response, options.delimiter );

  // do we need to cast some fields to numbers?
  var numbers = options.numberFields && ( options.numberFields.length > 0 );

  // init resuling array
  var res = [];
  var cols = [];
  var col, i;

  // first row holds column names?
  if ( options.useColumnNames ) {
    cols = data.shift();

    // normalize column names
    for ( var x = 0; x < cols.length; x++ ) {
      // trim
      col = cols[ x ].replace( /^\s+|\s+$/gm, '' );

      // check for empty
      if ( '' === col )
        col = 'col' + x;

      cols[ x ] = col;
    }

    if ( 0 < options.skip )
      options.skip--;
  }

  // skip rows
  for ( i = 0; i < options.skip; i++ )
    data.shift();

  // iterate through the result set
  var row;
  while ( ( row = options.reverse ? data.pop() : data.shift() ) ) {
    if ( options.skipEmpty && row.length === 1 && row[ 0 ] === '' )
      continue;
    var dataPoint = {};
    for ( i = 0; i < row.length; i++ ) {
      col = undefined === cols[ i ] ? 'col' + i : cols[ i ];
      dataPoint[ col ] = row[ i ] === "" ? options.emptyAs : row[ i ];

      // check if we need to cast to integer
      if ( numbers && options.numberFields.indexOf( col ) !== -1 )
        dataPoint[ col ] = Number( dataPoint[ col ] );
    }
    res.push( dataPoint );
  }

  return res;
};

/**
 * Parses CSV data into array
 * Taken from here: (thanks!)
 * http://www.bennadel.com/blog/1504-ask-ben-parsing-csv-strings-with-javascript-exec-regular-expression-command.htm
 */
AmCharts.CSVToArray = function( strData, strDelimiter ) {
  // Check to see if the delimiter is defined. If not,
  // then default to comma.
  strDelimiter = ( strDelimiter || ',' );

  // Create a regular expression to parse the CSV values.
  var objPattern = new RegExp(
    (
      // Delimiters.
      "(\\" + strDelimiter + "|\\r?\\n|\\r|^)" +

      // Quoted fields.
      "(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|" +

      // Standard fields.
      "([^\"\\" + strDelimiter + "\\r\\n]*))"
    ),
    "gi"
  );


  // Create an array to hold our data. Give the array
  // a default empty first row.
  var arrData = [
    []
  ];

  // Create an array to hold our individual pattern
  // matching groups.
  var arrMatches = null;


  // Keep looping over the regular expression matches
  // until we can no longer find a match.
  while ( ( arrMatches = objPattern.exec( strData ) ) ) {

    // Get the delimiter that was found.
    var strMatchedDelimiter = arrMatches[ 1 ];

    // Check to see if the given delimiter has a length
    // (is not the start of string) and if it matches
    // field delimiter. If id does not, then we know
    // that this delimiter is a row delimiter.
    if (
      strMatchedDelimiter.length &&
      ( strMatchedDelimiter !== strDelimiter )
    ) {

      // Since we have reached a new row of data,
      // add an empty row to our data array.
      arrData.push( [] );

    }


    // Now that we have our delimiter out of the way,
    // let's check to see which kind of value we
    // captured (quoted or unquoted).
    var strMatchedValue;
    if ( arrMatches[ 2 ] ) {

      // We found a quoted value. When we capture
      // this value, unescape any double quotes.
      strMatchedValue = arrMatches[ 2 ].replace(
        new RegExp( "\"\"", "g" ),
        "\""
      );

    } else {

      // We found a non-quoted value.
      strMatchedValue = arrMatches[ 3 ];

    }

    // Now that we have our value string, let's add
    // it to the data array.
    arrData[ arrData.length - 1 ].push( strMatchedValue );
  }

  // Return the parsed data.
  return ( arrData );
};

/**
 * Appends timestamp to the url
 */
AmCharts.timestampUrl = function( url ) {
  var p = url.split( '?' );
  if ( 1 === p.length )
    p[ 1 ] = new Date().getTime();
  else
    p[ 1 ] += '&' + new Date().getTime();
  return p.join( '?' );
};

// Charts 4
/**
 * @license
 * Copyright (c) 2018 amCharts (Antanas Marcelionis, Martynas Majeris)
 *
 * This sofware is provided under multiple licenses. Please see below for
 * links to appropriate usage.
 *
 * Free amCharts linkware license. Details and conditions:
 * https://github.com/amcharts/amcharts4/blob/master/LICENSE
 *
 * One of the amCharts commercial licenses. Details and pricing:
 * https://www.amcharts.com/online-store/
 * https://www.amcharts.com/online-store/licenses-explained/
 *
 * If in doubt, contact amCharts at contact@amcharts.com
 *
 * PLEASE DO NOT REMOVE THIS COPYRIGHT NOTICE.
 * @hidden
 */!function(t){var e=window.am4internal_webpackJsonp;window.am4internal_webpackJsonp=function(i,a,o){for(var s,l,u,h=0,c=[];h<i.length;h++)l=i[h],n[l]&&c.push(n[l][0]),n[l]=0;for(s in a)Object.prototype.hasOwnProperty.call(a,s)&&(t[s]=a[s]);for(e&&e(i,a,o);c.length;)c.shift()();if(o)for(h=0;h<o.length;h++)u=r(r.s=o[h]);return u};var i={},n={a74a:0};function r(e){if(i[e])return i[e].exports;var n=i[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.e=function(t){var e=n[t];if(0===e)return new Promise(function(t){t()});if(e)return e[2];var i=new Promise(function(i,r){e=n[t]=[i,r]});e[2]=i;var a=document.getElementsByTagName("head")[0],o=document.createElement("script");o.type="text/javascript",o.charset="utf-8",o.async=!0,o.timeout=12e4,r.nc&&o.setAttribute("nonce",r.nc),o.src=r.p+"deps/"+({"0471":"canvg","076f":"pdfmake",bf3e:"xlsx"}[t]||t)+".js";var s=setTimeout(l,12e4);function l(){o.onerror=o.onload=null,clearTimeout(s);var e=n[t];0!==e&&(e&&e[1](new Error("Loading chunk "+t+" failed.")),n[t]=void 0)}return o.onerror=o.onload=l,a.appendChild(o),i},r.m=t,r.c=i,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r.oe=function(t){throw console.error(t),t},r(r.s=0)}({"+APs":function(t,e,i){"use strict";var n=i("0sYB"),r=i("Wqjq").codeAt;n({target:"String",proto:!0},{codePointAt:function(t){return r(this,t)}})},"+K/x":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("Uslz"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="CategoryAxisBreak",e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"startPosition",{get:function(){if(this.axis)return this.axis.indexToPosition(this.adjustedStartValue)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endPosition",{get:function(){if(this.axis)return this.axis.indexToPosition(this.adjustedEndValue)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startCategory",{get:function(){return this.getPropertyValue("startCategory")},set:function(t){this.setPropertyValue("startCategory",t)&&this.axis&&(this.axis.invalidateDataItems(),this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endCategory",{get:function(){return this.getPropertyValue("endCategory")},set:function(t){this.setPropertyValue("endCategory",t)&&this.axis&&(this.axis.invalidateDataItems(),this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startValue",{get:function(){var t=this.getPropertyValue("startCategory");return t?this.axis.categoryToIndex(t):this.getPropertyValue("startValue")},set:function(t){this.setPropertyValue("startValue",t)&&this.axis&&(this.axis.invalidateDataItems(),this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endValue",{get:function(){var t=this.getPropertyValue("endCategory");return t?this.axis.categoryToIndex(t):this.getPropertyValue("endValue")},set:function(t){this.setPropertyValue("endValue",t)&&this.axis&&(this.axis.invalidateDataItems(),this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.CategoryAxisBreak=o},"+Pwd":function(t,e,i){"use strict";var n=i("0sYB"),r=i("tNpr"),a=i("9XRO"),o=i("xlUI"),s=[].join,l=r!=Object,u=o("join",",");n({target:"Array",proto:!0,forced:l||!u},{join:function(t){return s.call(a(this),void 0===t?",":t)}})},"+Z4/":function(t,e,i){"use strict";var n=i("UseD"),r=i("ojxk").indexOf,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("indexOf",function(t){return r(a(this),t,arguments.length>1?arguments[1]:void 0)})},"+qIf":function(t,e,i){"use strict";i.d(e,"b",function(){return u}),i.d(e,"a",function(){return h}),i.d(e,"c",function(){return c});var n=i("m4/l"),r=i("hD5A"),a=i("o0Lc"),o=i("Qkdp"),s=i("Wglt"),l=i("wUYf"),u=function(t){function e(e){var i=e.events.on("removed",function(t){t.oldValue.dispose()},void 0,!1);return t.call(this,function(){i.dispose(),s.each(e.iterator(),function(t){t[1].dispose()})})||this}return Object(n.c)(e,t),e}(r.b),h=function(){function t(){this.events=new a.a,this._dictionary={}}return t.prototype.hasKey=function(t){return o.hasKey(this._dictionary,t)},t.prototype.getKey=function(t){return this._dictionary[t]},t.prototype.insertKey=function(t,e){if(o.hasKey(this._dictionary,t))throw new Error("Key "+t+" already exists in dictionary");this._dictionary[t]=e,this.events.isEnabled("insertKey")&&this.events.dispatchImmediately("insertKey",{type:"insertKey",target:this,key:t,newValue:e})},t.prototype.setKey=function(t,e){if(o.hasKey(this._dictionary,t)){var i=this._dictionary[t];i!==e&&(this._dictionary[t]=e,this.events.isEnabled("setKey")&&this.events.dispatchImmediately("setKey",{type:"setKey",target:this,key:t,oldValue:i,newValue:e}),this.events.isEnabled("removed")&&this.events.dispatchImmediately("removed",{type:"removed",target:this,oldValue:i}))}else this._dictionary[t]=e,this.events.isEnabled("insertKey")&&this.events.dispatchImmediately("insertKey",{type:"insertKey",target:this,key:t,newValue:e})},t.prototype.updateKey=function(t,e){if(!o.hasKey(this._dictionary,t))throw new Error("Key "+t+" doesn't exist in dictionary");var i=this._dictionary[t],n=e(i);i!==n&&(this._dictionary[t]=n,this.events.isEnabled("setKey")&&this.events.dispatchImmediately("setKey",{type:"setKey",target:this,key:t,oldValue:i,newValue:n}),this.events.isEnabled("removed")&&this.events.dispatchImmediately("removed",{type:"removed",target:this,oldValue:i}))},t.prototype.removeKey=function(t){if(o.hasKey(this._dictionary,t)){var e=this._dictionary[t];delete this._dictionary[t],this.events.isEnabled("removeKey")&&this.events.dispatchImmediately("removeKey",{type:"removeKey",target:this,key:t,oldValue:e}),this.events.isEnabled("removed")&&this.events.dispatchImmediately("removed",{type:"removed",target:this,oldValue:e})}},t.prototype.insertKeyIfEmpty=function(t,e){return this.hasKey(t)||this.insertKey(t,e()),this.getKey(t)},t.prototype.clear=function(){var t=this;this.events.isEnabled("removed")&&o.each(this._dictionary,function(e,i){t.events.dispatchImmediately("removed",{type:"removed",target:t,oldValue:i})}),this._dictionary={},this.events.isEnabled("cleared")&&this.events.dispatchImmediately("cleared",{type:"cleared",target:this})},t.prototype.copyFrom=function(t){var e=this;s.each(t.iterator(),function(t){e.setKey(t[0],t[1])})},t.prototype.iterator=function(){return o.entries(this._dictionary)},t.prototype[Symbol.iterator]=function(){var t,e,i,r;return Object(n.d)(this,function(n){switch(n.label){case 0:for(e in t=[],this._dictionary)t.push(e);i=0,n.label=1;case 1:return i<t.length?(r=t[i],o.hasKey(this._dictionary,r)?[4,[r,this._dictionary[r]]]:[3,3]):[3,4];case 2:n.sent(),n.label=3;case 3:return i++,[3,1];case 4:return[2]}})},t.prototype.each=function(t){s.each(this.iterator(),function(e){var i=Object(n.e)(e,2),r=i[0],a=i[1];return t(r,a)})},t.prototype.sortedIterator=function(){return s.sort(this.iterator(),function(t,e){return l.order(t[0],e[0])})},t}(),c=function(t){function e(e){var i=t.call(this)||this;return i.template=e,i}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"template",{get:function(){return this._template},set:function(t){t.isTemplate=!0,this._template=t},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(t){var e=this;s.each(t.iterator(),function(t){e.setKey(t[0],t[1].clone())})},e.prototype.create=function(t){var e=this;return this.insertKeyIfEmpty(t,function(){return e.template.clone()})},e}(h)},"+s7l":function(t,e,i){"use strict";var n=i("9XRO"),r=i("exNg"),a=i("tHyI"),o=i("xlUI"),s=i("J+FZ"),l=Math.min,u=[].lastIndexOf,h=!!u&&1/[1].lastIndexOf(1,-0)<0,c=o("lastIndexOf"),p=s("indexOf",{ACCESSORS:!0,1:0}),d=h||!c||!p;t.exports=d?function(t){if(h)return u.apply(this,arguments)||0;var e=n(this),i=a(e.length),o=i-1;for(arguments.length>1&&(o=l(o,r(arguments[1]))),o<0&&(o=i+o);o>=0;o--)if(o in e&&e[o]===t)return o||0;return-1}:u},"+uwN":function(t,e,i){i("0sYB")({target:"Math",stat:!0},{fround:i("I42a")})},"/9XX":function(t,e,i){"use strict";i.d(e,"b",function(){return u}),e.a=function(t){a.push(t),c()},e.c=function(t){o.push(t),c()},e.f=function(t){s.push(t),c()},e.e=function(t){l.push(t)},e.d=function(){for(var t=Date.now(),e=l.length,i=0;i<e;++i)l.shift()(t)};var n=i("hJ5i"),r=!1,a=[],o=[],s=[],l=[],u="function"==typeof requestAnimationFrame?function(t){requestAnimationFrame(t)}:function(t){setTimeout(t,1e3/60)};function h(){for(var t=Date.now(),e=a.length,i=0;i<e;++i)a[i](t);n.shiftLeft(a,e);for(i=0;i<o.length;++i)o[i](t);o.length=0;for(i=0;i<s.length;++i)s[i](t);s.length=0,0===a.length&&0===o.length?r=!1:u(h)}function c(){r||(r=!0,u(h))}},"/IEW":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("Tjl+"),a=i("aCit"),o=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e._validateDisposer=null,e}return Object(n.c)(e,t),e.prototype.invalidate=function(){null===this._validateDisposer&&(this._validateDisposer=a.c.events.on("exitframe",this.validate,this))},e.prototype.validate=function(){null!==this._validateDisposer&&(this._validateDisposer.dispose(),this._validateDisposer=null)},e.prototype.dispose=function(){null!==this._validateDisposer&&(this._validateDisposer.dispose(),this._validateDisposer=null),t.prototype.dispose.call(this)},e}(r.b)},"/NC3":function(t,e,i){var n=i("0sYB"),r=i("vfdp"),a=i("gBcN");n({global:!0,bind:!0,enumerable:!0,forced:!r.setImmediate||!r.clearImmediate},{setImmediate:a.set,clearImmediate:a.clear})},"/SU0":function(t,e,i){var n=i("0sYB"),r=i("3weC"),a=i("gxUV").f;n({target:"Reflect",stat:!0},{deleteProperty:function(t,e){var i=a(r(t),e);return!(i&&!i.configurable)&&delete t[e]}})},"/XmW":function(t,e,i){"use strict";var n=i("UseD"),r=i("X/sl").forEach,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("forEach",function(t){r(a(this),t,arguments.length>1?arguments[1]:void 0)})},"/arR":function(t,e,i){"use strict";var n=i("3weC");t.exports=function(){var t=n(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},"/e9j":function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("sxA1"),a=i("3/51"),o=i("aCit"),s=function(t){function e(){var e=t.call(this)||this;return e.className="LinearGradientModifier",e.gradient=new r.a,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.gradient=e.gradient.clone()},e}(a.a);o.c.registeredClasses.LinearGradientModifier=s},"/fwt":function(t,e,i){"use strict";var n=i("0sYB"),r=i("3sMl"),a=i("hqo8"),o=i("7X7h"),s=i("HnbP"),l=i("8+rI");r&&n({target:"Object",proto:!0,forced:a},{__defineGetter__:function(t,e){l.f(o(this),t,{get:s(e),enumerable:!0,configurable:!0})}})},"/vWR":function(t,e,i){var n=i("z3p0");t.exports=function(t,e,i){for(var r in e)n(t,r,e[r],i);return t}},0:function(t,e,i){i("nj15"),t.exports=i("Nv8/")},"02tF":function(t,e,i){var n=i("0sYB"),r=Math.log,a=Math.LN2;n({target:"Math",stat:!0},{log2:function(t){return r(t)/a}})},"047P":function(t,e,i){var n=i("Kg2n"),r=i("KJuV");t.exports=function(t,e,i){var a,o;return r&&"function"==typeof(a=e.constructor)&&a!==i&&n(o=a.prototype)&&o!==i.prototype&&r(t,o),t}},"06/b":function(t,e,i){i("6WsA")("search")},"09Lt":function(t,e,i){"use strict";var n=i("Kg2n"),r=i("8+rI"),a=i("Ox5T"),o=i("KslR")("hasInstance"),s=Function.prototype;o in s||r.f(s,o,{value:function(t){if("function"!=typeof this||!n(t))return!1;if(!n(this.prototype))return t instanceof this;for(;t=a(t);)if(this.prototype===t)return!0;return!1}})},"0FA2":function(t,e,i){var n=i("KslR"),r=i("QzDi"),a=i("8+rI"),o=n("unscopables"),s=Array.prototype;void 0==s[o]&&a.f(s,o,{configurable:!0,value:r(null)}),t.exports=function(t){s[o][t]=!0}},"0FpR":function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.linear=a,e.quadIn=o,e.quadOut=s,e.quadInOut=l,e.polyIn=u,e.polyOut=h,e.polyInOut=c,e.polyIn3=p,e.polyOut3=d,e.polyInOut3=f,e.expIn=g,e.expOut=y,e.expInOut=m,e.sinIn=v,e.sinOut=b,e.sinInOut=x,e.cubicIn=_,e.cubicOut=P,e.cubicInOut=w,e.circleIn=O,e.circleOut=T,e.circleInOut=S,e.bounceIn=R,e.bounceOut=N,e.bounceInOut=L,e.elasticIn=Y,e.elasticOut=H,e.elasticInOut=z;var n=i("Gg2j"),r=i("aCit");function a(t){return+t}function o(t){return t*t}function s(t){return t*(2-t)}function l(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function u(t,e){return Math.pow(t,e)}function h(t,e){return 1-Math.pow(1-t,e)}function c(t,e){return((t*=2)<=1?Math.pow(t,e):2-Math.pow(2-t,e))/2}function p(t){return u(t,3)}function d(t){return h(t,3)}function f(t){return c(t,3)}function g(t){return Math.pow(2,10*t-10)}function y(t){return 1-Math.pow(2,-10*t)}function m(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function v(t){return 1-Math.cos(t*n.HALFPI)}function b(t){return Math.sin(t*n.HALFPI)}function x(t){return(1-Math.cos(n.PI*t))/2}function _(t){return t*t*t}function P(t){return--t*t*t+1}function w(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}function O(t){return 1-Math.sqrt(1-t*t)}function T(t){return Math.sqrt(1- --t*t)}function S(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}r.c.registeredClasses["ease.linear"]=a,r.c.registeredClasses["ease.quadIn"]=o,r.c.registeredClasses["ease.quadOut"]=s,r.c.registeredClasses["ease.quadInOut"]=l,r.c.registeredClasses["ease.polyIn"]=u,r.c.registeredClasses["ease.polyOut"]=h,r.c.registeredClasses["ease.polyInOut"]=c,r.c.registeredClasses["ease.polyIn3"]=p,r.c.registeredClasses["ease.polyOut3"]=d,r.c.registeredClasses["ease.polyInOut3"]=f,r.c.registeredClasses["ease.expIn"]=g,r.c.registeredClasses["ease.expOut"]=y,r.c.registeredClasses["ease.expInOut"]=m,r.c.registeredClasses["ease.sinIn"]=v,r.c.registeredClasses["ease.sinOut"]=b,r.c.registeredClasses["ease.sinInOut"]=x,r.c.registeredClasses["ease.cubicIn"]=_,r.c.registeredClasses["ease.cubicOut"]=P,r.c.registeredClasses["ease.cubicInOut"]=w,r.c.registeredClasses["ease.circleIn"]=O,r.c.registeredClasses["ease.circleOut"]=T,r.c.registeredClasses["ease.circleInOut"]=S;var C=4/11,I=6/11,k=8/11,D=.75,j=9/11,V=10/11,A=.9375,M=21/22,F=63/64,E=1/C/C;function R(t){return 1-N(1-t)}function N(t){return(t=+t)<C?E*t*t:t<k?E*(t-=I)*t+D:t<V?E*(t-=j)*t+A:E*(t-=M)*t+F}function L(t){return((t*=2)<=1?1-N(1-t):N(t-1)+1)/2}r.c.registeredClasses["ease.bounceIn"]=R,r.c.registeredClasses["ease.bounceOut"]=N,r.c.registeredClasses["ease.bounceInOut"]=L;var B=1,U=.3/(2*Math.PI),W=Math.asin(1/B)*U;function Y(t){return B*Math.pow(2,10*--t)*Math.sin((W-t)/U)}function H(t){return 1-B*Math.pow(2,-10*(t=+t))*Math.sin((t+W)/U)}function z(t){return((t=2*t-1)<0?B*Math.pow(2,10*t)*Math.sin((W-t)/U):2-B*Math.pow(2,-10*t)*Math.sin((W+t)/U))/2}r.c.registeredClasses["ease.elasticIn"]=Y,r.c.registeredClasses["ease.elasticOut"]=H,r.c.registeredClasses["ease.elasticInOut"]=z},"0KD/":function(t,e,i){var n=i("0sYB"),r=i("CqLV");n({global:!0,forced:parseFloat!=r},{parseFloat:r})},"0Mwj":function(t,e,i){"use strict";i.d(e,"b",function(){return S}),i.d(e,"a",function(){return C});var n=i("m4/l"),r=i("2I/e"),a=i("C6dT"),o=i("vMqJ"),s=i("8ZqG"),l=i("pR7v"),u=i("KknQ"),h=i("k6kv"),c=i("OXm9"),p=i("VB2N"),d=i("Uf57"),f=i("hD5A"),g=i("BEgH"),y=i("tjMS"),m=i("aCit"),v=i("C6Lh"),b=i("Gg2j"),x=i("Wglt"),_=i("Mtpk"),P=i("v9UT"),w=i("hJ5i"),O=i("3Cxr"),T=i("TGuK"),S=function(t){function e(){var e=t.call(this)||this;return e.className="XYChartDataItem",e.applyTheme(),e}return Object(n.c)(e,t),e}(r.b),C=function(t){function e(){var e=t.call(this)||this;e._axisRendererX=h.a,e._axisRendererY=c.a,e._seriesPoints=[],e.className="XYChart",e.maskBullets=!0,e.arrangeTooltips=!0;var i=e.chartContainer;i.layout="vertical",e.padding(15,15,15,15);var n=i.createChild(a.a);n.shouldClone=!1,n.layout="vertical",n.width=Object(y.c)(100),n.zIndex=1,e.topAxesContainer=n;var r=i.createChild(a.a);r.shouldClone=!1,r.layout="horizontal",r.width=Object(y.c)(100),r.height=Object(y.c)(100),r.zIndex=0,e.yAxesAndPlotContainer=r;var o=i.createChild(a.a);o.shouldClone=!1,o.width=Object(y.c)(100),o.layout="vertical",o.zIndex=1,e.bottomAxesContainer=o;var s=r.createChild(a.a);s.shouldClone=!1,s.layout="horizontal",s.height=Object(y.c)(100),s.contentAlign="right",s.events.on("transformed",e.updateXAxesMargins,e,!1),s.zIndex=1,e.leftAxesContainer=s;var l=r.createChild(a.a);l.shouldClone=!1,l.height=Object(y.c)(100),l.width=Object(y.c)(100),l.background.fillOpacity=0,e.plotContainer=l,e.mouseWheelBehavior="none",e._cursorContainer=l;var u=r.createChild(a.a);u.shouldClone=!1,u.layout="horizontal",u.height=Object(y.c)(100),u.zIndex=1,u.events.on("transformed",e.updateXAxesMargins,e,!1),e.rightAxesContainer=u,e.seriesContainer.parent=l,e.bulletsContainer.parent=l;var p=l.createChild(g.a);p.shouldClone=!1,p.align="right",p.valign="top",p.zIndex=Number.MAX_SAFE_INTEGER,p.marginTop=5,p.marginRight=5,p.hide(0),e.zoomOutButton=p;var d=e.plotContainer.createChild(a.a);return d.shouldClone=!1,d.width=Object(y.c)(100),d.height=Object(y.c)(100),d.isMeasured=!1,d.zIndex=4,d.layout="none",e.axisBulletsContainer=d,e._bulletMask=e.plotContainer,e.events.on("beforedatavalidated",function(){e.series.each(function(t){t.dataGrouped=!1,t._baseInterval={}})},e,!1),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),this.zoomOutButton.exportable=!1,_.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("X/Y chart"))},e.prototype.draw=function(){t.prototype.draw.call(this),this.seriesContainer.toFront(),this.bulletsContainer.toFront(),this.maskBullets&&(this.bulletsContainer.mask=this._bulletMask),this.updateSeriesLegend()},e.prototype.updatePlotElements=function(){x.each(this.series.iterator(),function(t){t.invalidate()})},e.prototype.validateData=function(){0==this._parseDataFrom&&(x.each(this.xAxes.iterator(),function(t){t.dataChangeUpdate()}),x.each(this.yAxes.iterator(),function(t){t.dataChangeUpdate()}),x.each(this.series.iterator(),function(t){t.dataChangeUpdate()})),t.prototype.validateData.call(this)},e.prototype.updateXAxesMargins=function(){var t=this.leftAxesContainer.measuredWidth,e=this.rightAxesContainer.measuredWidth,i=this.bottomAxesContainer;i.paddingLeft==t&&i.paddingRight==e||(i.paddingLeft=t,i.paddingRight=e);var n=this.topAxesContainer;n.paddingLeft==t&&n.paddingRight==e||(n.paddingLeft=t,n.paddingRight=e)},e.prototype.reinit=function(){t.prototype.reinit.call(this),this.series.each(function(t){t.appeared=!1})},e.prototype.handleXAxisChange=function(t){this.updateXAxis(t.target)},e.prototype.handleYAxisChange=function(t){this.updateYAxis(t.target)},e.prototype.processXAxis=function(t){var e=t.newValue;e.chart=this,e.renderer||(e.renderer=new this._axisRendererX,e.renderer.observe(["opposite","inside","inversed","minGridDistance"],this.handleXAxisChange,this,!1)),e.axisLetter="X",e.events.on("startendchanged",this.handleXAxisRangeChange,this,!1),e.dataProvider=this,this.updateXAxis(e.renderer),this.processAxis(e)},e.prototype.processYAxis=function(t){var e=t.newValue;e.chart=this,e.renderer||(e.renderer=new this._axisRendererY,e.renderer.observe(["opposite","inside","inversed","minGridDistance"],this.handleYAxisChange,this,!1)),e.axisLetter="Y",e.events.on("startendchanged",this.handleYAxisRangeChange,this,!1),e.dataProvider=this,this.updateYAxis(e.renderer),this.processAxis(e)},e.prototype.handleXAxisRangeChange=function(){var t=this.getCommonAxisRange(this.xAxes);this.scrollbarX&&this.zoomAxes(this.xAxes,t,!0),this.toggleZoomOutButton(),this.updateScrollbar(this.scrollbarX,t)},e.prototype.toggleZoomOutButton=function(){if(this.zoomOutButton){var t=!1;x.eachContinue(this.xAxes.iterator(),function(e){if(e.toggleZoomOutButton)if(e.maxZoomCount>0){var i=e.maxZoomFactor/e.maxZoomCount;if(b.round(e.end-e.start,3)<1/i)return t=!0,!1}else if(b.round(e.start,3)>0||b.round(e.end,3)<1)return t=!0,!1;return!0}),x.eachContinue(this.yAxes.iterator(),function(e){if(e.toggleZoomOutButton){if(e.maxZoomCount>0){var i=e.maxZoomFactor/e.maxZoomCount;if(b.round(e.end-e.start,3)<1/i)return t=!0,!1}else if(b.round(e.start,3)>0||b.round(e.end,3)<1)return t=!0,!1;return!0}}),this.seriesAppeared||(t=!1),t?this.zoomOutButton.show():this.zoomOutButton.hide()}},e.prototype.seriesAppeared=function(){var t=!1;return x.each(this.series.iterator(),function(e){if(!e.appeared)return t=!1,!1}),t},e.prototype.handleYAxisRangeChange=function(){var t=this.getCommonAxisRange(this.yAxes);this.scrollbarY&&this.zoomAxes(this.yAxes,t,!0),this.toggleZoomOutButton(),this.updateScrollbar(this.scrollbarY,t)},e.prototype.updateScrollbar=function(t,e){t&&(t.skipRangeEvents(),t.start=e.start,t.end=e.end)},e.prototype.getCommonAxisRange=function(t){var e,i;return x.each(t.iterator(),function(t){var n=t.start,r=t.end;t.renderer.inversed&&(n=1-t.end,r=1-t.start),(!_.isNumber(e)||n<e)&&(e=n),(!_.isNumber(i)||r>i)&&(i=r)}),{start:e,end:i}},e.prototype.updateXAxis=function(t){var e=t.axis;t.opposite?(e.parent=this.topAxesContainer,e.toFront()):(e.parent=this.bottomAxesContainer,e.toBack()),e.renderer&&e.renderer.processRenderer()},e.prototype.updateYAxis=function(t){var e=t.axis;t.opposite?(e.parent=this.rightAxesContainer,e.toBack()):(e.parent=this.leftAxesContainer,e.toFront()),e.renderer&&e.renderer.processRenderer()},e.prototype.processAxis=function(t){var e=this;t instanceof p.a&&this._dataUsers.moveValue(t);var i=t.renderer;i.gridContainer.parent=this.plotContainer,i.gridContainer.toBack(),i.breakContainer.parent=this.plotContainer,i.breakContainer.toFront(),i.breakContainer.zIndex=10,t.addDisposer(new f.b(function(){e.dataUsers.removeValue(t)})),i.bulletsContainer.parent=this.axisBulletsContainer,this._disposers.push(t.events.on("positionchanged",function(){var n=P.spritePointToSprite({x:0,y:0},t,e.axisBulletsContainer);t.renderer instanceof c.a&&(i.bulletsContainer.y=n.y),t.renderer instanceof h.a&&(i.bulletsContainer.x=n.x)},void 0,!1)),this.plotContainer.events.on("maxsizechanged",function(){e.inited&&(t.invalidateDataItems(),e.updateSeriesMasks())},t,!1)},e.prototype.updateSeriesMasks=function(){P.isIE()&&this.series.each(function(t){var e=t.mainContainer.mask;t.mainContainer.mask=void 0,t.mainContainer.mask=e})},e.prototype.handleSeriesRemoved=function(e){var i=e.oldValue;i&&(i.xAxis&&(i.xAxis.series.removeValue(i),i.xAxis.invalidateProcessedData()),i.yAxis&&(i.yAxis.series.removeValue(i),i.yAxis.invalidateProcessedData())),t.prototype.handleSeriesRemoved.call(this,e)},Object.defineProperty(e.prototype,"xAxes",{get:function(){return this._xAxes||(this._xAxes=new o.b,this._xAxes.events.on("inserted",this.processXAxis,this,!1),this._xAxes.events.on("removed",this.handleAxisRemoval,this,!1)),this._xAxes},enumerable:!0,configurable:!0}),e.prototype.handleAxisRemoval=function(t){var e=t.oldValue;this.dataUsers.removeValue(e),e.autoDispose&&e.dispose()},Object.defineProperty(e.prototype,"yAxes",{get:function(){return this._yAxes||(this._yAxes=new o.b,this._yAxes.events.on("inserted",this.processYAxis,this,!1),this._yAxes.events.on("removed",this.handleAxisRemoval,this,!1)),this._yAxes},enumerable:!0,configurable:!0}),e.prototype.handleSeriesAdded=function(e){try{t.prototype.handleSeriesAdded.call(this,e);var i=e.newValue;0!=this.xAxes.length&&0!=this.yAxes.length||(m.c.removeFromInvalidComponents(i),i.dataInvalid=!1),P.used(i.xAxis),P.used(i.yAxis),i.maskBullets=i.maskBullets,void 0==i.fill&&(this.patterns?(_.hasValue(i.stroke)||(i.stroke=this.colors.next()),i.fill=this.patterns.next(),_.hasValue(i.fillOpacity)&&(i.fill.backgroundOpacity=i.fillOpacity),i.stroke instanceof s.a&&(i.fill.stroke=i.stroke,i.fill.fill=i.stroke)):i.fill=this.colors.next()),_.hasValue(i.stroke)||(i.stroke=i.fill)}catch(t){this.raiseCriticalError(t)}},Object.defineProperty(e.prototype,"cursor",{get:function(){return this._cursor},set:function(t){this._cursor!=t&&(this._cursor&&this.removeDispose(this._cursor),this._cursor=t,t&&(this._disposers.push(t),t.chart=this,t.shouldClone=!1,t.parent=this._cursorContainer,t.events.on("cursorpositionchanged",this.handleCursorPositionChange,this,!1),t.events.on("zoomstarted",this.handleCursorZoomStart,this,!1),t.events.on("zoomended",this.handleCursorZoomEnd,this,!1),t.events.on("panstarted",this.handleCursorPanStart,this,!1),t.events.on("panning",this.handleCursorPanning,this,!1),t.events.on("panended",this.handleCursorPanEnd,this,!1),t.events.on("behaviorcanceled",this.handleCursorCanceled,this,!1),t.events.on("hidden",this.handleHideCursor,this,!1),t.zIndex=Number.MAX_SAFE_INTEGER-1,this.tapToActivate&&this.setTapToActivate(this.tapToActivate)))},enumerable:!0,configurable:!0}),e.prototype.handleCursorPositionChange=function(){var t=this.cursor;if(t.visible&&!t.isHiding){var e=this.cursor.xPosition,i=this.cursor.yPosition;this.showSeriesTooltip({x:e,y:i});var n=void 0,r=t.snapToSeries;if(r){r.baseAxis==r.xAxis&&(n=r.yAxis),r.baseAxis==r.yAxis&&(n=r.xAxis);var a=r.xAxis,o=r.yAxis;if(a instanceof l.a&&!(a instanceof u.a)&&o instanceof l.a&&!(o instanceof u.a)){var s,h=1/0;r.dataItems.each(function(t){var n=a.toGlobalPosition(a.getPositionX(t,"valueX"))*a.axisFullLength,r=o.toGlobalPosition(o.getPositionY(t,"valueY"))*o.axisFullLength,l=Math.sqrt(Math.pow(e*a.axisFullLength-n,2)+Math.pow(i*o.axisFullLength-r,2));l<h&&(h=l,s=t)}),s&&r.showTooltipAtDataItem(s)}}this._seriesPoints=[],this._cursorXPosition!=e&&this.showAxisTooltip(this.xAxes,e,n),this._cursorYPosition!=i&&this.showAxisTooltip(this.yAxes,i,n),this.arrangeTooltips&&this.sortSeriesTooltips(this._seriesPoints)}},e.prototype.handleHideCursor=function(){this.hideObjectTooltip(this.xAxes),this.hideObjectTooltip(this.yAxes),this.hideObjectTooltip(this.series),this._cursorXPosition=void 0,this._cursorYPosition=void 0,this.updateSeriesLegend()},e.prototype.updateSeriesLegend=function(){x.each(this.series.iterator(),function(t){t.updateLegendValue()})},e.prototype.hideObjectTooltip=function(t){x.each(t.iterator(),function(t){t.hideTooltip(0)})},e.prototype.showSeriesTooltip=function(t){var e=this;if(t){var i=[];this.series.each(function(n){if(n.xAxis instanceof u.a&&n.xAxis.snapTooltip||n.yAxis instanceof u.a&&n.yAxis.snapTooltip);else{var r=n.showTooltipAtPosition(t.x,t.y);r&&(n.tooltip.setBounds(P.spriteRectToSvg({x:0,y:0,width:e.pixelWidth,height:e.pixelHeight},e)),i.push({series:n,point:r}))}}),this.arrangeTooltips&&this.sortSeriesTooltips(i)}else this.series.each(function(t){t.hideTooltip()})},e.prototype.sortSeriesTooltips=function(t){var e=this.cursor;if(e&&_.isNumber(e.maxTooltipDistance)){var i,n,r=P.spritePointToSvg({x:e.point.x,y:e.point.y},e),a=1/0;w.each(t,function(t){var e=t.series,o=t.point;if(o){var s={x:o.x,y:o.y},l=Math.abs(b.getDistance(s,r));l<a&&(n=s,a=l,i=e)}});var o=[];i&&w.each(t,function(t){if(Math.abs(b.getDistance(t.point,n))<=e.maxTooltipDistance)o.push({series:t.series,point:t.point});else{var i=t.series.tooltipDataItem;i&&w.each(i.sprites,function(t){t.isHover=!1,t.handleOutReal()}),t.series.tooltip.hide(0)}}),t=o}var s=P.spritePointToSvg({x:-.5,y:-.5},this.plotContainer),l=P.spritePointToSvg({x:this.plotContainer.pixelWidth+.5,y:this.plotContainer.pixelHeight+.5},this.plotContainer),u=0,h=[];w.each(t,function(t){var e=t.point;e&&b.isInRectangle(e,{x:s.x,y:s.y,width:l.x-s.x,height:l.y-s.y})&&(h.push({point:e,series:t.series}),u+=e.y)}),t=h;var c=this.series.getIndex(0),p=!1;c&&c.yAxis&&c.yAxis.renderer.inversed&&(p=!0),p?t.sort(function(t,e){return O.order(t.point.y,e.point.y)}):(t.sort(function(t,e){return O.order(e.point.y,t.point.y)}),t.reverse());var d=u/t.length,f=P.svgPointToDocument({x:0,y:0},this.svgContainer.SVGContainer).y;if(t.length>0){var g=s.y,y=l.y;P.spritePointToDocument({x:0,y:g},this);var m=!1;if(d>g+(y-g)/2)for(var v=y,x=t.length-1;x>=0;x--){var T=(k=t[x].series).tooltip,S=t[x].point.y;if(T.setBounds({x:0,y:-f,width:this.pixelWidth,height:v+f}),T.invalid&&T.validate(),T.toBack(),(v=P.spritePointToSvg({x:0,y:T.label.pixelY-T.pixelY+S-T.pixelMarginTop},T).y)<-f){m=!0;break}}if(d<=g+(y-g)/2||m)for(var C=g,I=(x=0,t.length);x<I;x++){var k=t[x].series;S=t[x].point.y;(T=k.tooltip).setBounds({x:0,y:C,width:this.pixelWidth,height:y}),T.invalid&&T.validate(),T.toBack(),C=P.spritePointToSvg({x:0,y:T.label.pixelY+T.label.measuredHeight-T.pixelY+S+T.pixelMarginBottom},T).y}}},e.prototype.showAxisTooltip=function(t,e,i){var n=this;x.each(t.iterator(),function(t){t!=i&&(n.dataItems.length>0||t.dataItems.length>0)&&t.showTooltipAtPosition(e)})},e.prototype.getUpdatedRange=function(t,e){if(t){var i,n;t.renderer.inversed?(b.invertRange(e),i=1-t.end,n=1-t.start):(i=t.start,n=t.end);var r=n-i;return{start:i+e.start*r,end:i+e.end*r}}},e.prototype.handleCursorZoomEnd=function(t){var e=this.cursor,i=e.behavior;if("zoomX"==i||"zoomXY"==i){var n=e.xRange;n&&this.xAxes.length>0&&((n=this.getUpdatedRange(this.xAxes.getIndex(0),n)).priority="start",this.zoomAxes(this.xAxes,n))}if("zoomY"==i||"zoomXY"==i){var r=e.yRange;r&&this.yAxes.length>0&&((r=this.getUpdatedRange(this.yAxes.getIndex(0),r)).priority="start",this.zoomAxes(this.yAxes,r))}this.handleHideCursor()},e.prototype.handleCursorPanStart=function(t){var e=this.xAxes.getIndex(0);e&&(this._panStartXRange={start:e.start,end:e.end});var i=this.yAxes.getIndex(0);i&&(this._panStartYRange={start:i.start,end:i.end})},e.prototype.handleCursorPanEnd=function(t){var e=this.cursor.behavior;if(this._panEndXRange&&("panX"==e||"panXY"==e)){var i=0;(n=this._panEndXRange).start<0&&(i=n.start),n.end>1&&(i=n.end-1),this.zoomAxes(this.xAxes,{start:n.start-i,end:n.end-i},!1,!0),this._panEndXRange=void 0,this._panStartXRange=void 0}if(this._panEndYRange&&("panY"==e||"panXY"==e)){var n;i=0;(n=this._panEndYRange).start<0&&(i=n.start),n.end>1&&(i=n.end-1),this.zoomAxes(this.yAxes,{start:n.start-i,end:n.end-i},!1,!0),this._panEndYRange=void 0,this._panStartYRange=void 0}},e.prototype.handleCursorCanceled=function(){this._panEndXRange=void 0,this._panStartXRange=void 0},e.prototype.handleCursorPanning=function(t){var e=this.cursor,i=e.behavior,n=e.maxPanOut;if(this._panStartXRange&&("panX"==i||"panXY"==i)){var r=this._panStartXRange,a=e.xRange,o=this.getCommonAxisRange(this.xAxes),s=r.end-r.start,l=a.start*(o.end-o.start),u=Math.max(-n,l+r.start),h=Math.min(l+r.end,1+n);u<=0&&(h=u+s),h>=1&&(u=h-s);var c={start:u,end:h};this._panEndXRange=c,this.zoomAxes(this.xAxes,c,!1,!1,e.maxPanOut)}if(this._panStartYRange&&("panY"==i||"panXY"==i)){r=this._panStartYRange,a=e.yRange,o=this.getCommonAxisRange(this.yAxes),s=r.end-r.start,l=a.start*(o.end-o.start),u=Math.max(-n,l+r.start),h=Math.min(l+r.end,1+n);u<=0&&(h=u+s),h>=1&&(u=h-s);c={start:u,end:h};this._panEndYRange=c,this.zoomAxes(this.yAxes,c,!1,!1,e.maxPanOut)}this.handleHideCursor()},e.prototype.handleYAxisSet=function(t){},e.prototype.handleCursorZoomStart=function(t){},Object.defineProperty(e.prototype,"scrollbarX",{get:function(){return this._scrollbarX},set:function(t){var e=this;this._scrollbarX&&this.removeDispose(this._scrollbarX),this._scrollbarX=t,t&&(this._disposers.push(t),t.parent=this.topAxesContainer,t.shouldClone=!1,t.startGrip.exportable=!1,t.endGrip.exportable=!1,t.toBack(),t.orientation="horizontal",t.events.on("rangechanged",this.handleXScrollbarChange,this,!1),t.adapter.add("positionValue",function(t){var i=e.xAxes.getIndex(0);return i&&(t.value=i.getPositionLabel(i.renderer.inversed?1-t.position:t.position)),t}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"scrollbarY",{get:function(){return this._scrollbarY},set:function(t){var e=this;this._scrollbarY&&this.removeDispose(this._scrollbarY),this._scrollbarY=t,t&&(this._disposers.push(t),t.parent=this.rightAxesContainer,t.startGrip.exportable=!1,t.shouldClone=!1,t.endGrip.exportable=!1,t.toFront(),t.orientation="vertical",t.events.on("rangechanged",this.handleYScrollbarChange,this,!1),t.adapter.add("positionValue",function(t){var i=e.yAxes.getIndex(0);return i&&(t.value=i.getPositionLabel(t.position)),t}))},enumerable:!0,configurable:!0}),e.prototype.handleXScrollbarChange=function(t){if(this.inited){var e=t.target,i=e.range;0==i.start&&(i.priority="start"),1==i.end&&(i.priority="end"),i=this.zoomAxes(this.xAxes,i),e.fixRange(i)}},e.prototype.handleYScrollbarChange=function(t){if(this.inited){var e=t.target,i=e.range;1==i.end&&(i.priority="end"),0==i.start&&(i.priority="start"),i=this.zoomAxes(this.yAxes,i),e.fixRange(i)}},e.prototype.zoomAxes=function(t,e,i,n,r){var a={start:0,end:1};return this.showSeriesTooltip(),this.dataInvalid||x.each(t.iterator(),function(t){if(t.renderer.inversed&&(e=b.invertRange(e)),t.hideTooltip(0),n)if(t instanceof p.a){var o=t.getCellEndPosition(0)-t.getCellStartPosition(0);e.start=t.roundPosition(e.start+o/2-t.startLocation*o,t.startLocation),e.end=t.roundPosition(e.end-o/2+(1-t.endLocation)*o,t.endLocation)}else e.start=t.roundPosition(e.start+1e-4,0,t.startLocation),e.end=t.roundPosition(e.end+1e-4,0,t.endLocation);var s=t.zoom(e,i,i,r);t.renderer.inversed&&(s=b.invertRange(s)),a=s}),a},Object.defineProperty(e.prototype,"maskBullets",{get:function(){return this.getPropertyValue("maskBullets")},set:function(t){this.setPropertyValue("maskBullets",t,!0)&&this.bulletsContainer&&(this.bulletsContainer.mask=t?this._bulletMask:void 0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"arrangeTooltips",{get:function(){return this.getPropertyValue("arrangeTooltips")},set:function(t){this.setPropertyValue("arrangeTooltips",t,!0)},enumerable:!0,configurable:!0}),e.prototype.handleWheel=function(t){var e=this.plotContainer,i=P.documentPointToSvg(t.point,this.htmlContainer,this.svgContainer.cssScale),n=P.svgPointToSprite(i,e),r=t.shift.y;this.handleWheelReal(r,this.mouseWheelBehavior,n)},e.prototype.handleHorizontalWheel=function(t){var e=this.plotContainer,i=P.documentPointToSvg(t.point,this.htmlContainer,this.svgContainer.cssScale),n=P.svgPointToSprite(i,e);this.handleWheelReal(t.shift.x,this.horizontalMouseWheelBehavior,n)},e.prototype.handleWheelReal=function(t,e,i){if(0!=t){var n=this.plotContainer,r=this.getCommonAxisRange(this.xAxes),a=this.getCommonAxisRange(this.yAxes);if("panX"==e||"panXY"==e){var o=r.end-r.start,s=Math.max(-0,r.start+.1*t/100*(r.end-r.start)),l=Math.min(r.end+.1*t/100*(r.end-r.start),1);s<=0&&(l=s+o),l>=1&&(s=l-o),this.zoomAxes(this.xAxes,{start:s,end:l})}if("panY"==e||"panXY"==e){t*=-1;var u=a.end-a.start,h=Math.max(-0,a.start+.1*t/100*(a.end-a.start)),c=Math.min(a.end+.1*t/100*(a.end-a.start),1);h<=0&&(c=h+u),c>=1&&(h=c-u),this.zoomAxes(this.yAxes,{start:h,end:c})}if("zoomX"==e||"zoomXY"==e){var p=i.x/n.maxWidth,d=this.xAxes.getIndex(0).toAxisPosition(p);s=Math.max(-0,r.start-.1*(r.end-r.start)*t/100*p);s=Math.min(s,d);l=Math.min(r.end+.1*(r.end-r.start)*t/100*(1-p),1);l=Math.max(l,d),this.zoomAxes(this.xAxes,{start:s,end:l})}if("zoomY"==e||"zoomXY"==e){var f=i.y/n.maxHeight,g=this.yAxes.getIndex(0).toAxisPosition(f);h=Math.max(-0,a.start-.1*(a.end-a.start)*t/100*(1-f));h=Math.min(h,g);c=Math.min(a.end+.1*t/100*f*(a.end-a.start),1);c=Math.max(c,g),this.zoomAxes(this.yAxes,{start:h,end:c})}}},Object.defineProperty(e.prototype,"mouseWheelBehavior",{get:function(){return this.getPropertyValue("mouseWheelBehavior")},set:function(t){this.setPropertyValue("mouseWheelBehavior",t)&&("none"!=t?(this._mouseWheelDisposer=this.plotContainer.events.on("wheel",this.handleWheel,this,!1),this._disposers.push(this._mouseWheelDisposer)):this._mouseWheelDisposer&&(this.plotContainer.wheelable=!1,this.plotContainer.hoverable=!1,this._mouseWheelDisposer.dispose()))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"horizontalMouseWheelBehavior",{get:function(){return this.getPropertyValue("horizontalMouseWheelBehavior")},set:function(t){this.setPropertyValue("horizontalMouseWheelBehavior",t)&&("none"!=t?(this._mouseWheelDisposer2=this.plotContainer.events.on("wheel",this.handleHorizontalWheel,this,!1),this._disposers.push(this._mouseWheelDisposer2)):this._mouseWheelDisposer2&&(this.plotContainer.wheelable=!1,this.plotContainer.hoverable=!1,this._mouseWheelDisposer2.dispose()))},enumerable:!0,configurable:!0}),e.prototype.dataSourceDateFields=function(e){var i=this;return e=t.prototype.dataSourceDateFields.call(this,e),x.each(this.series.iterator(),function(t){e=i.populateDataSourceFields(e,t.dataFields,["dateX","dateY","openDateX","openDateY"])}),e},e.prototype.dataSourceNumberFields=function(e){var i=this;return e=t.prototype.dataSourceDateFields.call(this,e),x.each(this.series.iterator(),function(t){e=i.populateDataSourceFields(e,t.dataFields,["valueX","valueY","openValueX","openValueY"])}),e},e.prototype.processConfig=function(e){if(e){var i=[],n=[];if(_.hasValue(e.xAxes)&&_.isArray(e.xAxes))for(var r=0,a=e.xAxes.length;r<a;r++){if(!e.xAxes[r].type)throw Error("[XYChart error] No type set for xAxes["+r+"].");if(_.hasValue(e.xAxes[r].axisRanges)){for(var o=0,s=e.xAxes[r].axisRanges.length;o<s;o++){var l=e.xAxes[r].axisRanges[o];_.hasValue(l.date)&&_.isString(l.date)&&(l.date=this.dateFormatter.parse(l.date)),_.hasValue(l.endDate)&&_.isString(l.endDate)&&(l.endDate=this.dateFormatter.parse(l.endDate))}i.push({axisRanges:e.xAxes[r].axisRanges,index:r}),delete e.xAxes[r].axisRanges}}if(_.hasValue(e.yAxes)&&_.isArray(e.yAxes))for(r=0,a=e.yAxes.length;r<a;r++){if(!e.yAxes[r].type)throw Error("[XYChart error] No type set for yAxes["+r+"].");if(_.hasValue(e.yAxes[r].axisRanges)){o=0;for(var u=e.yAxes[r].axisRanges.length;o<u;o++){l=e.yAxes[r].axisRanges[o];_.hasValue(l.date)&&_.isString(l.date)&&(l.date=this.dateFormatter.parse(l.date)),_.hasValue(l.endDate)&&_.isString(l.endDate)&&(l.endDate=this.dateFormatter.parse(l.endDate))}n.push({axisRanges:e.yAxes[r].axisRanges,index:r}),delete e.yAxes[r].axisRanges}}if(_.hasValue(e.series)&&_.isArray(e.series))for(r=0,a=e.series.length;r<a;r++)e.series[r].type=e.series[r].type||"LineSeries";if(_.hasValue(e.cursor)&&!_.hasValue(e.cursor.type)&&(e.cursor.type="XYCursor"),_.hasValue(e.scrollbarX)&&!_.hasValue(e.scrollbarX.type)&&(e.scrollbarX.type="Scrollbar"),_.hasValue(e.scrollbarY)&&!_.hasValue(e.scrollbarY.type)&&(e.scrollbarY.type="Scrollbar"),t.prototype.processConfig.call(this,e),n.length)for(r=0,a=n.length;r<a;r++)this.yAxes.getIndex(n[r].index).config={axisRanges:n[r].axisRanges};if(i.length)for(r=0,a=i.length;r<a;r++)this.xAxes.getIndex(i[r].index).config={axisRanges:i[r].axisRanges}}},e.prototype.configOrder=function(e,i){return e==i?0:"scrollbarX"==e?1:"scrollbarX"==i?-1:"scrollbarY"==e?1:"scrollbarY"==i?-1:"cursor"==e?1:"cursor"==i?-1:"series"==e?1:"series"==i?-1:t.prototype.configOrder.call(this,e,i)},e.prototype.createSeries=function(){return new d.a},Object.defineProperty(e.prototype,"zoomOutButton",{get:function(){return this._zoomOutButton},set:function(t){var e=this;this._zoomOutButton=t,t&&t.events.on("hit",function(){e.zoomAxes(e.xAxes,{start:0,end:1}),e.zoomAxes(e.yAxes,{start:0,end:1})},void 0,!1)},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){var i=this;e.xAxes.each(function(t){i.xAxes.push(t.clone())}),e.yAxes.each(function(t){i.yAxes.push(t.clone())}),t.prototype.copyFrom.call(this,e),e.cursor&&(this.cursor=e.cursor.clone()),e.scrollbarX&&(this.scrollbarX=e.scrollbarX.clone()),e.scrollbarY&&(this.scrollbarY=e.scrollbarY.clone())},e.prototype.disposeData=function(){t.prototype.disposeData.call(this);var e=this.scrollbarX;e&&e instanceof v.a&&e.scrollbarChart.disposeData();var i=this.scrollbarY;i&&i instanceof v.a&&i.scrollbarChart.disposeData(),this.xAxes.each(function(t){t.disposeData()}),this.yAxes.each(function(t){t.disposeData()})},e.prototype.addData=function(e,i){this.scrollbarX instanceof v.a&&this.addScrollbarData(this.scrollbarX,i),this.scrollbarY instanceof v.a&&this.addScrollbarData(this.scrollbarY,i),t.prototype.addData.call(this,e,i)},e.prototype.addScrollbarData=function(t,e){var i=t.scrollbarChart;i._parseDataFrom=i.data.length,i.invalidateData()},e.prototype.removeScrollbarData=function(t,e){var i=t.scrollbarChart;if(_.isNumber(e)){for(;e>0;){var n=this.dataItems.getIndex(0);n&&i.dataItems.remove(n),i.dataUsers.each(function(t){var e=t.dataItems.getIndex(0);e&&t.dataItems.remove(e)}),i._parseDataFrom--,e--}i.invalidateData()}},e.prototype.removeData=function(e){this.scrollbarX instanceof v.a&&this.removeScrollbarData(this.scrollbarX,e),this.scrollbarY instanceof v.a&&this.removeScrollbarData(this.scrollbarY,e),t.prototype.removeData.call(this,e)},e.prototype.setTapToActivate=function(e){t.prototype.setTapToActivate.call(this,e),this.cursor&&(this.cursor.interactions.isTouchProtected=e,this.plotContainer.interactions.isTouchProtected=e)},e.prototype.handleTapToActivate=function(){t.prototype.handleTapToActivate.call(this),this.cursor&&(this.cursor.interactions.isTouchProtected=!1,this.plotContainer.interactions.isTouchProtected=!1)},e.prototype.handleTapToActivateDeactivation=function(){t.prototype.handleTapToActivateDeactivation.call(this),this.cursor&&(this.cursor.interactions.isTouchProtected=!0,this.plotContainer.interactions.isTouchProtected=!0)},e}(r.a);m.c.registeredClasses.XYChart=C,T.c.push({relevant:T.b.maybeXS,state:function(t,e){if(t instanceof C&&t.scrollbarX){var i=t.states.create(e);return t.scrollbarX.states.create(e).properties.disabled=!0,i}return null}}),T.c.push({relevant:T.b.maybeXS,state:function(t,e){if(t instanceof C&&t.scrollbarY){var i=t.states.create(e);return t.scrollbarY.states.create(e).properties.disabled=!0,i}return null}})},"0PyG":function(t,e,i){"use strict";i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("Tjl+"),a=i("zhwk"),o=i("1yyj"),s=i("Mtpk"),l=function(t){function e(e,i,n,r){var a=t.call(this)||this;return a.animations=[],a.className="Inertia",a.interaction=e,a.type=i,a.point=n,a.startPoint=r,a._disposers.push(new o.b(a.animations)),a}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"x",{get:function(){return this.point.x},set:function(t){s.isNumber(t)&&(this.point.x=t,this.handleMove())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this.point.y},set:function(t){s.isNumber(t)&&(this.point.y=t,this.handleMove())},enumerable:!0,configurable:!0}),e.prototype.handleMove=function(){if(this.interaction.events.isEnabled("drag")){var t={type:"drag",target:this.interaction,shift:{x:this.x-this.startPoint.x,y:this.y-this.startPoint.y},startPoint:this.startPoint,point:{x:this.x,y:this.y},touch:!1};this.interaction.events.dispatchImmediately("drag",t)}},e.prototype.done=function(){this.interaction.inertias.removeKey(this.type),"move"===this.type&&Object(a.b)().processDragStop(this.interaction),this.dispose()},e}(r.a)},"0aVp":function(t,e,i){var n=i("0sYB"),r=i("mtbW");n({global:!0,forced:!i("jqyf")},{DataView:r.DataView})},"0irS":function(t,e,i){var n=i("KslR");e.f=n},"0sYB":function(t,e,i){var n=i("vfdp"),r=i("gxUV").f,a=i("k2B3"),o=i("z3p0"),s=i("29Us"),l=i("z4fB"),u=i("EjSS");t.exports=function(t,e){var i,h,c,p,d,f=t.target,g=t.global,y=t.stat;if(i=g?n:y?n[f]||s(f,{}):(n[f]||{}).prototype)for(h in e){if(p=e[h],c=t.noTargetGet?(d=r(i,h))&&d.value:i[h],!u(g?h:f+(y?".":"#")+h,t.forced)&&void 0!==c){if(typeof p==typeof c)continue;l(p,c)}(t.sham||c&&c.sham)&&a(p,"sham",!0),o(i,h,p,t)}}},"16a9":function(t,e,i){var n=i("0sYB"),r=i("HZlQ");n({target:"Object",stat:!0,forced:Object.assign!==r},{assign:r})},"1DgP":function(t,e,i){"use strict";var n=function(t,e){var i;function n(){var n,r,a=i.length,o=0,s=0;for(n=0;n<a;++n)o+=(r=i[n]).x,s+=r.y;for(o=o/a-t,s=s/a-e,n=0;n<a;++n)(r=i[n]).x-=o,r.y-=s}return null==t&&(t=0),null==e&&(e=0),n.initialize=function(t){i=t},n.x=function(e){return arguments.length?(t=+e,n):t},n.y=function(t){return arguments.length?(e=+t,n):e},n};function r(t,e,i,n){if(isNaN(e)||isNaN(i))return t;var r,a,o,s,l,u,h,c,p,d=t._root,f={data:n},g=t._x0,y=t._y0,m=t._x1,v=t._y1;if(!d)return t._root=f,t;for(;d.length;)if((u=e>=(a=(g+m)/2))?g=a:m=a,(h=i>=(o=(y+v)/2))?y=o:v=o,r=d,!(d=d[c=h<<1|u]))return r[c]=f,t;if(s=+t._x.call(null,d.data),l=+t._y.call(null,d.data),e===s&&i===l)return f.next=d,r?r[c]=f:t._root=f,t;do{r=r?r[c]=new Array(4):t._root=new Array(4),(u=e>=(a=(g+m)/2))?g=a:m=a,(h=i>=(o=(y+v)/2))?y=o:v=o}while((c=h<<1|u)==(p=(l>=o)<<1|s>=a));return r[p]=d,r[c]=f,t}var a=function(t,e,i,n,r){this.node=t,this.x0=e,this.y0=i,this.x1=n,this.y1=r};function o(t){return t[0]}function s(t){return t[1]}function l(t,e,i){var n=new u(null==e?o:e,null==i?s:i,NaN,NaN,NaN,NaN);return null==t?n:n.addAll(t)}function u(t,e,i,n,r,a){this._x=t,this._y=e,this._x0=i,this._y0=n,this._x1=r,this._y1=a,this._root=void 0}function h(t){for(var e={data:t.data},i=e;t=t.next;)i=i.next={data:t.data};return e}var c=l.prototype=u.prototype;c.copy=function(){var t,e,i=new u(this._x,this._y,this._x0,this._y0,this._x1,this._y1),n=this._root;if(!n)return i;if(!n.length)return i._root=h(n),i;for(t=[{source:n,target:i._root=new Array(4)}];n=t.pop();)for(var r=0;r<4;++r)(e=n.source[r])&&(e.length?t.push({source:e,target:n.target[r]=new Array(4)}):n.target[r]=h(e));return i},c.add=function(t){var e=+this._x.call(null,t),i=+this._y.call(null,t);return r(this.cover(e,i),e,i,t)},c.addAll=function(t){var e,i,n,a,o=t.length,s=new Array(o),l=new Array(o),u=1/0,h=1/0,c=-1/0,p=-1/0;for(i=0;i<o;++i)isNaN(n=+this._x.call(null,e=t[i]))||isNaN(a=+this._y.call(null,e))||(s[i]=n,l[i]=a,n<u&&(u=n),n>c&&(c=n),a<h&&(h=a),a>p&&(p=a));if(u>c||h>p)return this;for(this.cover(u,h).cover(c,p),i=0;i<o;++i)r(this,s[i],l[i],t[i]);return this},c.cover=function(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var i=this._x0,n=this._y0,r=this._x1,a=this._y1;if(isNaN(i))r=(i=Math.floor(t))+1,a=(n=Math.floor(e))+1;else{for(var o,s,l=r-i,u=this._root;i>t||t>=r||n>e||e>=a;)switch(s=(e<n)<<1|t<i,(o=new Array(4))[s]=u,u=o,l*=2,s){case 0:r=i+l,a=n+l;break;case 1:i=r-l,a=n+l;break;case 2:r=i+l,n=a-l;break;case 3:i=r-l,n=a-l}this._root&&this._root.length&&(this._root=u)}return this._x0=i,this._y0=n,this._x1=r,this._y1=a,this},c.data=function(){var t=[];return this.visit(function(e){if(!e.length)do{t.push(e.data)}while(e=e.next)}),t},c.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},c.find=function(t,e,i){var n,r,o,s,l,u,h,c=this._x0,p=this._y0,d=this._x1,f=this._y1,g=[],y=this._root;for(y&&g.push(new a(y,c,p,d,f)),null==i?i=1/0:(c=t-i,p=e-i,d=t+i,f=e+i,i*=i);u=g.pop();)if(!(!(y=u.node)||(r=u.x0)>d||(o=u.y0)>f||(s=u.x1)<c||(l=u.y1)<p))if(y.length){var m=(r+s)/2,v=(o+l)/2;g.push(new a(y[3],m,v,s,l),new a(y[2],r,v,m,l),new a(y[1],m,o,s,v),new a(y[0],r,o,m,v)),(h=(e>=v)<<1|t>=m)&&(u=g[g.length-1],g[g.length-1]=g[g.length-1-h],g[g.length-1-h]=u)}else{var b=t-+this._x.call(null,y.data),x=e-+this._y.call(null,y.data),_=b*b+x*x;if(_<i){var P=Math.sqrt(i=_);c=t-P,p=e-P,d=t+P,f=e+P,n=y.data}}return n},c.remove=function(t){if(isNaN(a=+this._x.call(null,t))||isNaN(o=+this._y.call(null,t)))return this;var e,i,n,r,a,o,s,l,u,h,c,p,d=this._root,f=this._x0,g=this._y0,y=this._x1,m=this._y1;if(!d)return this;if(d.length)for(;;){if((u=a>=(s=(f+y)/2))?f=s:y=s,(h=o>=(l=(g+m)/2))?g=l:m=l,e=d,!(d=d[c=h<<1|u]))return this;if(!d.length)break;(e[c+1&3]||e[c+2&3]||e[c+3&3])&&(i=e,p=c)}for(;d.data!==t;)if(n=d,!(d=d.next))return this;return(r=d.next)&&delete d.next,n?(r?n.next=r:delete n.next,this):e?(r?e[c]=r:delete e[c],(d=e[0]||e[1]||e[2]||e[3])&&d===(e[3]||e[2]||e[1]||e[0])&&!d.length&&(i?i[p]=d:this._root=d),this):(this._root=r,this)},c.removeAll=function(t){for(var e=0,i=t.length;e<i;++e)this.remove(t[e]);return this},c.root=function(){return this._root},c.size=function(){var t=0;return this.visit(function(e){if(!e.length)do{++t}while(e=e.next)}),t},c.visit=function(t){var e,i,n,r,o,s,l=[],u=this._root;for(u&&l.push(new a(u,this._x0,this._y0,this._x1,this._y1));e=l.pop();)if(!t(u=e.node,n=e.x0,r=e.y0,o=e.x1,s=e.y1)&&u.length){var h=(n+o)/2,c=(r+s)/2;(i=u[3])&&l.push(new a(i,h,c,o,s)),(i=u[2])&&l.push(new a(i,n,c,h,s)),(i=u[1])&&l.push(new a(i,h,r,o,c)),(i=u[0])&&l.push(new a(i,n,r,h,c))}return this},c.visitAfter=function(t){var e,i=[],n=[];for(this._root&&i.push(new a(this._root,this._x0,this._y0,this._x1,this._y1));e=i.pop();){var r=e.node;if(r.length){var o,s=e.x0,l=e.y0,u=e.x1,h=e.y1,c=(s+u)/2,p=(l+h)/2;(o=r[0])&&i.push(new a(o,s,l,c,p)),(o=r[1])&&i.push(new a(o,c,l,u,p)),(o=r[2])&&i.push(new a(o,s,p,c,h)),(o=r[3])&&i.push(new a(o,c,p,u,h))}n.push(e)}for(;e=n.pop();)t(e.node,e.x0,e.y0,e.x1,e.y1);return this},c.x=function(t){return arguments.length?(this._x=t,this):this._x},c.y=function(t){return arguments.length?(this._y=t,this):this._y};var p=function(t){return function(){return t}},d=function(){return 1e-6*(Math.random()-.5)};function f(t){return t.x+t.vx}function g(t){return t.y+t.vy}var y=function(t){var e,i,n=1,r=1;function a(){for(var t,a,s,u,h,c,p,y=e.length,m=0;m<r;++m)for(a=l(e,f,g).visitAfter(o),t=0;t<y;++t)s=e[t],c=i[s.index],p=c*c,u=s.x+s.vx,h=s.y+s.vy,a.visit(v);function v(t,e,i,r,a){var o=t.data,l=t.r,f=c+l;if(!o)return e>u+f||r<u-f||i>h+f||a<h-f;if(o.index>s.index){var g=u-o.x-o.vx,y=h-o.y-o.vy,m=g*g+y*y;m<f*f&&(0===g&&(m+=(g=d())*g),0===y&&(m+=(y=d())*y),m=(f-(m=Math.sqrt(m)))/m*n,s.vx+=(g*=m)*(f=(l*=l)/(p+l)),s.vy+=(y*=m)*f,o.vx-=g*(f=1-f),o.vy-=y*f)}}}function o(t){if(t.data)return t.r=i[t.data.index];for(var e=t.r=0;e<4;++e)t[e]&&t[e].r>t.r&&(t.r=t[e].r)}function s(){if(e){var n,r,a=e.length;for(i=new Array(a),n=0;n<a;++n)r=e[n],i[r.index]=+t(r,n,e)}}return"function"!=typeof t&&(t=p(null==t?1:+t)),a.initialize=function(t){e=t,s()},a.iterations=function(t){return arguments.length?(r=+t,a):r},a.strength=function(t){return arguments.length?(n=+t,a):n},a.radius=function(e){return arguments.length?(t="function"==typeof e?e:p(+e),s(),a):t},a};function m(t){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function v(t){return t.index}function b(t,e){var i=t.get(e);if(!i)throw new Error("missing: "+e);return i}var x=function(t){var e,i,n,r,a,o=v,s=function(t){return 1/Math.min(r[t.source.index],r[t.target.index])},l=p(30),u=1;function h(n){for(var r=0,o=t.length;r<u;++r)for(var s,l,h,c,p,f,g,y=0;y<o;++y)l=(s=t[y]).source,c=(h=s.target).x+h.vx-l.x-l.vx||d(),p=h.y+h.vy-l.y-l.vy||d(),c*=f=((f=Math.sqrt(c*c+p*p))-i[y])/f*n*e[y],p*=f,h.vx-=c*(g=a[y]),h.vy-=p*g,l.vx+=c*(g=1-g),l.vy+=p*g}function c(){if(n){var s,l,u=n.length,h=t.length,c=new Map(n.map(function(t,e){return[o(t,e,n),t]}));for(s=0,r=new Array(u);s<h;++s)(l=t[s]).index=s,"object"!==m(l.source)&&(l.source=b(c,l.source)),"object"!==m(l.target)&&(l.target=b(c,l.target)),r[l.source.index]=(r[l.source.index]||0)+1,r[l.target.index]=(r[l.target.index]||0)+1;for(s=0,a=new Array(h);s<h;++s)l=t[s],a[s]=r[l.source.index]/(r[l.source.index]+r[l.target.index]);e=new Array(h),f(),i=new Array(h),g()}}function f(){if(n)for(var i=0,r=t.length;i<r;++i)e[i]=+s(t[i],i,t)}function g(){if(n)for(var e=0,r=t.length;e<r;++e)i[e]=+l(t[e],e,t)}return null==t&&(t=[]),h.initialize=function(t){n=t,c()},h.links=function(e){return arguments.length?(t=e,c(),h):t},h.id=function(t){return arguments.length?(o=t,h):o},h.iterations=function(t){return arguments.length?(u=+t,h):u},h.strength=function(t){return arguments.length?(s="function"==typeof t?t:p(+t),f(),h):s},h.distance=function(t){return arguments.length?(l="function"==typeof t?t:p(+t),g(),h):l},h},_=i("XqN8"),P=i("bS9u");function w(t){return t.x}function O(t){return t.y}var T=10,S=Math.PI*(3-Math.sqrt(5)),C=function(t){var e,i=1,n=.001,r=1-Math.pow(n,1/300),a=0,o=.6,s=new Map,l=Object(P.c)(h),u=Object(_.a)("tick","end");function h(){c(),u.call("tick",e),i<n&&(l.stop(),u.call("end",e))}function c(n){var l,u,h=t.length;void 0===n&&(n=1);for(var c=0;c<n;++c)for(i+=(a-i)*r,s.forEach(function(t){t(i)}),l=0;l<h;++l)null==(u=t[l]).fx?u.x+=u.vx*=o:(u.x=u.fx,u.vx=0),null==u.fy?u.y+=u.vy*=o:(u.y=u.fy,u.vy=0);return e}function p(){for(var e,i=0,n=t.length;i<n;++i){if((e=t[i]).index=i,null!=e.fx&&(e.x=e.fx),null!=e.fy&&(e.y=e.fy),isNaN(e.x)||isNaN(e.y)){var r=T*Math.sqrt(i),a=i*S;e.x=r*Math.cos(a),e.y=r*Math.sin(a)}(isNaN(e.vx)||isNaN(e.vy))&&(e.vx=e.vy=0)}}function d(e){return e.initialize&&e.initialize(t),e}return null==t&&(t=[]),p(),e={tick:c,restart:function(){return l.restart(h),e},stop:function(){return l.stop(),e},nodes:function(i){return arguments.length?(t=i,p(),s.forEach(d),e):t},alpha:function(t){return arguments.length?(i=+t,e):i},alphaMin:function(t){return arguments.length?(n=+t,e):n},alphaDecay:function(t){return arguments.length?(r=+t,e):+r},alphaTarget:function(t){return arguments.length?(a=+t,e):a},velocityDecay:function(t){return arguments.length?(o=1-t,e):1-o},force:function(t,i){return arguments.length>1?(null==i?s.delete(t):s.set(t,d(i)),e):s.get(t)},find:function(e,i,n){var r,a,o,s,l,u=0,h=t.length;for(null==n?n=1/0:n*=n,u=0;u<h;++u)(o=(r=e-(s=t[u]).x)*r+(a=i-s.y)*a)<n&&(l=s,n=o);return l},on:function(t,i){return arguments.length>1?(u.on(t,i),e):u.on(t)}}},I=function(){var t,e,i,n,r=p(-30),a=1,o=1/0,s=.81;function u(n){var r,a=t.length,o=l(t,w,O).visitAfter(c);for(i=n,r=0;r<a;++r)e=t[r],o.visit(f)}function h(){if(t){var e,i,a=t.length;for(n=new Array(a),e=0;e<a;++e)i=t[e],n[i.index]=+r(i,e,t)}}function c(t){var e,i,r,a,o,s=0,l=0;if(t.length){for(r=a=o=0;o<4;++o)(e=t[o])&&(i=Math.abs(e.value))&&(s+=e.value,l+=i,r+=i*e.x,a+=i*e.y);t.x=r/l,t.y=a/l}else{(e=t).x=e.data.x,e.y=e.data.y;do{s+=n[e.data.index]}while(e=e.next)}t.value=s}function f(t,r,l,u){if(!t.value)return!0;var h=t.x-e.x,c=t.y-e.y,p=u-r,f=h*h+c*c;if(p*p/s<f)return f<o&&(0===h&&(f+=(h=d())*h),0===c&&(f+=(c=d())*c),f<a&&(f=Math.sqrt(a*f)),e.vx+=h*t.value*i/f,e.vy+=c*t.value*i/f),!0;if(!(t.length||f>=o)){(t.data!==e||t.next)&&(0===h&&(f+=(h=d())*h),0===c&&(f+=(c=d())*c),f<a&&(f=Math.sqrt(a*f)));do{t.data!==e&&(p=n[t.data.index]*i/f,e.vx+=h*p,e.vy+=c*p)}while(t=t.next)}}return u.initialize=function(e){t=e,h()},u.strength=function(t){return arguments.length?(r="function"==typeof t?t:p(+t),h(),u):r},u.distanceMin=function(t){return arguments.length?(a=t*t,u):Math.sqrt(a)},u.distanceMax=function(t){return arguments.length?(o=t*t,u):Math.sqrt(o)},u.theta=function(t){return arguments.length?(s=t*t,u):Math.sqrt(s)},u},k=function(t,e,i){var n,r,a,o=p(.1);function s(t){for(var o=0,s=n.length;o<s;++o){var l=n[o],u=l.x-e||1e-6,h=l.y-i||1e-6,c=Math.sqrt(u*u+h*h),p=(a[o]-c)*r[o]*t/c;l.vx+=u*p,l.vy+=h*p}}function l(){if(n){var e,i=n.length;for(r=new Array(i),a=new Array(i),e=0;e<i;++e)a[e]=+t(n[e],e,n),r[e]=isNaN(a[e])?0:+o(n[e],e,n)}}return"function"!=typeof t&&(t=p(+t)),null==e&&(e=0),null==i&&(i=0),s.initialize=function(t){n=t,l()},s.strength=function(t){return arguments.length?(o="function"==typeof t?t:p(+t),l(),s):o},s.radius=function(e){return arguments.length?(t="function"==typeof e?e:p(+e),l(),s):t},s.x=function(t){return arguments.length?(e=+t,s):e},s.y=function(t){return arguments.length?(i=+t,s):i},s},D=function(t){var e,i,n,r=p(.1);function a(t){for(var r,a=0,o=e.length;a<o;++a)(r=e[a]).vx+=(n[a]-r.x)*i[a]*t}function o(){if(e){var a,o=e.length;for(i=new Array(o),n=new Array(o),a=0;a<o;++a)i[a]=isNaN(n[a]=+t(e[a],a,e))?0:+r(e[a],a,e)}}return"function"!=typeof t&&(t=p(null==t?0:+t)),a.initialize=function(t){e=t,o()},a.strength=function(t){return arguments.length?(r="function"==typeof t?t:p(+t),o(),a):r},a.x=function(e){return arguments.length?(t="function"==typeof e?e:p(+e),o(),a):t},a},j=function(t){var e,i,n,r=p(.1);function a(t){for(var r,a=0,o=e.length;a<o;++a)(r=e[a]).vy+=(n[a]-r.y)*i[a]*t}function o(){if(e){var a,o=e.length;for(i=new Array(o),n=new Array(o),a=0;a<o;++a)i[a]=isNaN(n[a]=+t(e[a],a,e))?0:+r(e[a],a,e)}}return"function"!=typeof t&&(t=p(null==t?0:+t)),a.initialize=function(t){e=t,o()},a.strength=function(t){return arguments.length?(r="function"==typeof t?t:p(+t),o(),a):r},a.y=function(e){return arguments.length?(t="function"==typeof e?e:p(+e),o(),a):t},a};i.d(e,!1,function(){return n}),i.d(e,"a",function(){return y}),i.d(e,"b",function(){return x}),i.d(e,"c",function(){return I}),i.d(e,!1,function(){return k}),i.d(e,"d",function(){return C}),i.d(e,"e",function(){return D}),i.d(e,"f",function(){return j})},"1E9r":function(t,e,i){var n=i("0sYB"),r=i("3weC"),a=Object.isExtensible;n({target:"Reflect",stat:!0},{isExtensible:function(t){return r(t),!a||a(t)}})},"1Er2":function(t,e,i){i("6WsA")("toPrimitive")},"1Fjw":function(t,e,i){"use strict";i.d(e,"a",function(){return d});var n=i("m4/l"),r=i("C6dT"),a=i("zhwk"),o=i("aCit"),s=i("tjMS"),l=i("qCRI"),u=i("Gg2j"),h=i("v9UT"),c=i("Mtpk"),p=i("Rpw0"),d=function(t){function e(){var e=t.call(this)||this;e.point={x:0,y:0},e._stick="none",e.className="Cursor",e.width=Object(s.c)(100),e.height=Object(s.c)(100),e.shouldClone=!1,e.hide(0),e.trackable=!0,e.clickable=!0,e.isMeasured=!1;var i=Object(a.b)();return e._disposers.push(i.body.events.on("down",e.handleCursorDown,e)),e._disposers.push(i.body.events.on("up",e.handleCursorUp,e)),e._disposers.push(i.body.events.on("track",e.handleCursorMove,e)),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.handleCursorMove=function(t){if(!(!this.interactionsEnabled||this.interactions.isTouchProtected&&t.touch)){if(("zoom"==this._generalBehavior||"pan"==this._generalBehavior)&&this.downPoint||Object(a.b)().isLocalElement(t.pointer,this.paper.svg,this.uid)){var e=h.documentPointToSprite(t.pointer.point,this);return"hard"==this._stick&&this._stickPoint&&(e=this._stickPoint),"soft"==this._stick&&this._stickPoint&&(this.fitsToBounds(e)||(e=this._stickPoint)),this.triggerMove(e),e}this.isHidden&&this.isHiding||this.hide()}},e.prototype.hideReal=function(e){if("hard"!=this._stick&&"soft"!=this._stick||!this._stickPoint)return t.prototype.hideReal.call(this,e)},e.prototype.triggerMove=function(t,e){t.x=u.round(t.x,1),t.y=u.round(t.y,1),e&&(this._stick=e),"hard"!=e&&"soft"!=e||(this._stickPoint=t),this.triggerMoveReal(t)},e.prototype.triggerMoveReal=function(t){this.point.x==t.x&&this.point.y==t.y||(this.point=t,this.invalidatePosition(),this.fitsToBounds(t)?this.show(0):this.downPoint||this.hide(0),this.visible&&(this.getPositions(),this.dispatch("cursorpositionchanged")))},e.prototype.triggerDown=function(t){this.triggerDownReal(t)},e.prototype.triggerDownReal=function(t){switch(this._generalBehavior){case"zoom":this.dispatchImmediately("zoomstarted");break;case"select":this.dispatchImmediately("selectstarted");break;case"pan":this.dispatchImmediately("panstarted"),Object(a.b)().setGlobalStyle(l.a.grabbing)}},e.prototype.triggerUp=function(t){this.triggerUpReal(t)},e.prototype.triggerUpReal=function(t){p.b.requestFrame(),this.updatePoint(this.upPoint);var e=Object(a.b)();if(u.getDistance(this._upPointOrig,this._downPointOrig)>e.getHitOption(this.interactions,"hitTolerance")){switch(this._generalBehavior){case"zoom":this.dispatch("zoomended");break;case"select":this.dispatch("selectended");break;case"pan":this.dispatch("panended"),e.setGlobalStyle(l.a.default)}this.downPoint=void 0,this.updateSelection()}},e.prototype.updateSelection=function(){},e.prototype.getPositions=function(){this.xPosition=this.point.x/this.innerWidth,this.yPosition=1-this.point.y/this.innerHeight},e.prototype.handleCursorDown=function(t){if(!(!this.interactionsEnabled||this.interactions.isTouchProtected&&t.touch)&&Object(a.b)().isLocalElement(t.pointer,this.paper.svg,this.uid)){var e=h.documentPointToSprite(t.pointer.point,this);"hard"==this._stick&&this._stickPoint&&(e=this._stickPoint),this._downPointOrig={x:e.x,y:e.y},t.event.cancelable&&this.shouldPreventGestures(t.touch)&&this.fitsToBounds(e)&&t.event.preventDefault(),this.triggerMove(e),this.triggerDown(e)}},e.prototype.shouldPreventGestures=function(t){return!0},e.prototype.updatePoint=function(t){},e.prototype.handleCursorUp=function(t){if(this.interactionsEnabled&&(("zoom"==this._generalBehavior||"pan"==this._generalBehavior)&&this.downPoint||Object(a.b)().isLocalElement(t.pointer,this.paper.svg,this.uid))){var e=h.documentPointToSprite(t.pointer.point,this);"hard"==this._stick&&this._stickPoint&&(e=this._stickPoint),this._upPointOrig={x:e.x,y:e.y},this.triggerMove(e),this.triggerUp(e)}},Object.defineProperty(e.prototype,"chart",{get:function(){return this._chart},set:function(t){this._chart=t,c.hasValue(this._chart.plotContainer)&&Object(a.b)().lockElement(this._chart.plotContainer.interactions)},enumerable:!0,configurable:!0}),e}(r.a);o.c.registeredClasses.Cursor=d},"1M4z":function(t,e,i){"use strict";var n=i("0sYB"),r=i("4Wbs");n({target:"RegExp",proto:!0,forced:/./.exec!==r},{exec:r})},"1ayE":function(t,e,i){"use strict";var n=i("UseD"),r=i("X/sl").some,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("some",function(t){return r(a(this),t,arguments.length>1?arguments[1]:void 0)})},"1dhw":function(t,e,i){var n=i("0sYB"),r=i("3sMl"),a=i("3weC"),o=i("gxUV");n({target:"Reflect",stat:!0,sham:!r},{getOwnPropertyDescriptor:function(t,e){return o.f(a(t),e)}})},"1qam":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("Vs7R"),a=i("Mtpk"),o=function(t){function e(){var e=t.call(this)||this;return e.className="PointedShape",e.pointerBaseWidth=15,e.pointerLength=10,e.pointerY=0,e.pointerX=0,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this),a.isNumber(this.pointerX)||(this.pointerX=this.pixelWidth/2),a.isNumber(this.pointerY)||(this.pointerY=this.pixelHeight+10)},Object.defineProperty(e.prototype,"pointerBaseWidth",{get:function(){return this.getPropertyValue("pointerBaseWidth")},set:function(t){this.setPropertyValue("pointerBaseWidth",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pointerLength",{get:function(){return this.getPropertyValue("pointerLength")},set:function(t){this.setPropertyValue("pointerLength",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pointerX",{get:function(){return this.getPropertyValue("pointerX")},set:function(t){this.setPropertyValue("pointerX",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pointerY",{get:function(){return this.getPropertyValue("pointerY")},set:function(t){this.setPropertyValue("pointerY",t,!0)},enumerable:!0,configurable:!0}),e}(r.a)},"1t1Z":function(t,e,i){"use strict";var n=i("0sYB"),r=i("qK31"),a=i("swFJ");n({target:"String",proto:!0,forced:!i("eVN0")("includes")},{includes:function(t){return!!~String(a(this)).indexOf(r(t),arguments.length>1?arguments[1]:void 0)}})},"1wCr":function(t,e,i){var n=i("lCww"),r=i("vfdp"),a=function(t){return"function"==typeof t?t:void 0};t.exports=function(t,e){return arguments.length<2?a(n[t])||a(r[t]):n[t]&&n[t][e]||r[t]&&r[t][e]}},"1yyj":function(t,e,i){"use strict";e.c=function(t,e){var i=!1,n=Date.now();return u.a(function r(a){if(!i){var o=a-n;o>=t?e(1):(u.a(r),e(o/t))}}),new o.b(function(){i=!0})},i.d(e,"b",function(){return x}),i.d(e,"a",function(){return _});var n=i("m4/l"),r=i("Tjl+"),a=i("hpNl"),o=i("hD5A"),s=i("8ZqG"),l=i("tjMS"),u=i("/9XX"),h=i("0FpR"),c=i("hxI2"),p=i("Gg2j"),d=i("hJ5i"),f=i("Mtpk"),g=i("Rpw0");function y(t,e,i){return e+(i-e)*t}function m(t,e,i){return new l.a(y(t,e.percent,i.percent))}function v(t,e,i){var n=new s.a(c.interpolate(e.rgb,i.rgb,t));return e.alpha!=i.alpha&&(n.alpha=e.alpha+(i.alpha-e.alpha)*t),n}function b(t,e){return e+t.charAt(0).toUpperCase()+t.substr(1)}var x=function(){function t(t){this._disposer=new o.b(function(){for(;0!==t.length;)t[0].dispose()})}return t.prototype.isDisposed=function(){return this._disposer.isDisposed()},t.prototype.dispose=function(){this._disposer.dispose()},t}(),_=function(t){function e(e,i,n,r){var a=t.call(this)||this;return a.duration=0,a.easing=h.linear,a.progress=0,a._loop=0,a._pause=!1,a._delayTimeout=null,a._time=0,a._isFinished=!1,a.className="Animation",a.object=e,a.animationOptions=d.toArray(i),a.duration=n,r&&(a.easing=r),a.applyTheme(),a}return Object(n.c)(e,t),e.prototype.debug=function(){},e.prototype.dispose=function(){t.prototype.dispose.call(this),this.pause()},e.prototype.delay=function(t){var e=this;if(t>0){this.pause(),d.move(this.object.animations,this);var i=setTimeout(function(){e._delayTimeout=null,e.start()},t);this._delayTimeout=new o.b(function(){clearTimeout(i)})}return this},e.prototype._start=function(){this._isFinished=!1,this._delayTimeout&&(this.removeDispose(this._delayTimeout),this._delayTimeout=null),this.stopSameAnimations(),this._pause=!1,d.move(g.b.animations,this),d.move(this.object.animations,this),g.b.requestFrame()},e.prototype.start=function(){this._start(),this._startTime=Date.now(),this._time=0,this.staticOptions=[];for(var t=this.animationOptions.length-1;t>=0;t--){var e=this.animationOptions[t];if(f.hasValue(e.from)||(e.childObject?e.from=e.childObject[e.property]:(e.from=this.object[e.property],f.hasValue(e.from)||(e.from=a.a[e.property]))),e.from==e.to)d.remove(this.animationOptions,e);else if(!f.hasValue(e.from)||!(e.from instanceof l.a)&&e.to instanceof l.a||e.from instanceof l.a&&!(e.to instanceof l.a))this.staticOptions.push(e),d.remove(this.animationOptions,e);else if(f.isNumber(e.to))if(e.updateMethod=y,e.from instanceof l.a){var i=this.object[b(e.property,"pixel")];isNaN(i)?(this.staticOptions.push(e),d.remove(this.animationOptions,e)):e.from=i}else isNaN(e.from)&&(this.staticOptions.push(e),d.remove(this.animationOptions,e));else if(e.to instanceof s.a)e.from?e.updateMethod=v:(this.staticOptions.push(e),d.remove(this.animationOptions,e));else if(e.to instanceof l.a){if(e.updateMethod=m,!isNaN(e.from)){i=this.object[b(e.property,"relative")];isNaN(i)||(e.from=Object(l.c)(100*i))}}else this.staticOptions.push(e),d.remove(this.animationOptions,e)}if(this.applyStaticOptions(),this.events.isEnabled("animationstarted")){var n={type:"animationstarted",target:this,progress:this.progress};this.events.dispatchImmediately("animationstarted",n)}return this.update(),0===this.duration&&this.end(),this},e.prototype.loop=function(t){return f.isNumber(t)||(t=1/0),this._loop=t,this},e.prototype.pause=function(){return this._pause=!0,this._delayTimeout&&(this.removeDispose(this._delayTimeout),this._delayTimeout=null),d.remove(g.b.animations,this),d.remove(this.object.animations,this),this},e.prototype.resume=function(){return this._start(),this._startTime=Date.now()-this._time,this},e.prototype.end=function(){if(0==this._loop&&this.pause(),this.setProgress(1),this.applyStaticOptions(),this.events.isEnabled("animationended")){var t={type:"animationended",target:this,progress:this.progress};this.events.dispatchImmediately("animationended",t)}return this._loop>0?(this._loop--,this.start()):(this.stop(),this._isFinished=!0),this},e.prototype.kill=function(){this.pause(),this._isFinished=!0},e.prototype.isFinished=function(){return this._isFinished},e.prototype.applyStaticOptions=function(){var t=this;d.each(this.staticOptions,function(e){e.childObject?e.childObject[e.property]=1==t.progress?e.to:e.from:t.object[e.property]=1==t.progress?e.to:e.from})},e.prototype.stop=function(t){if(this.pause(),!t&&this.events.isEnabled("animationstopped")){var e={type:"animationstopped",target:this,progress:this.progress};this.events.dispatchImmediately("animationstopped",e)}return this},e.prototype.setProgress=function(t){var e=this;if(this._time=this.duration*t,d.each(this.animationOptions,function(i){if(i.updateMethod&&f.hasValue(i.from)){var n=i.updateMethod(t,i.from,i.to);i.childObject?i.childObject[i.property]=n:e.object[i.property]=n}}),this.progress=t,this.events.isEnabled("animationprogress")){var i={type:"animationprogress",target:this,progress:this.progress};this.events.dispatchImmediately("animationprogress",i)}g.b.requestFrame()},e.prototype.update=function(){if(!this._pause){var t=void 0;this._time=p.fitToRange(Date.now()-this._startTime,0,this.duration);var e=this._time/this.duration;t=this.easing(e),(0==this.duration||!f.isNumber(t)||e>=1)&&(t=1),this.setProgress(t),1==p.round(this._time/this.duration,6)&&this.end()}return this},Object.defineProperty(e.prototype,"delayed",{get:function(){return!!this._delayTimeout},enumerable:!0,configurable:!0}),e.prototype.stopSameAnimations=function(){var t=this;d.each(d.copy(this.object.animations),function(e){if(e!==t&&!e.delayed){var i=[];d.each(t.animationOptions,function(t){d.each(e.animationOptions,function(n){t.property==n.property&&t.childObject==n.childObject&&(i.push(n),0==e.animationOptions.length&&e.kill())})}),d.each(i,function(t){d.remove(e.animationOptions,t)})}})},e.prototype.asFunction=function(e){return"easing"==e||t.prototype.asIs.call(this,e)},e}(r.b)},"29Us":function(t,e,i){var n=i("vfdp"),r=i("k2B3");t.exports=function(t,e){try{r(n,t,e)}catch(i){n[t]=e}return e}},"2D0i":function(t,e,i){var n,r,a,o,s,l,u,h,c=i("vfdp"),p=i("gxUV").f,d=i("2xmP"),f=i("gBcN").set,g=i("q8hm"),y=c.MutationObserver||c.WebKitMutationObserver,m=c.process,v=c.Promise,b="process"==d(m),x=p(c,"queueMicrotask"),_=x&&x.value;_||(n=function(){var t,e;for(b&&(t=m.domain)&&t.exit();r;){e=r.fn,r=r.next;try{e()}catch(t){throw r?o():a=void 0,t}}a=void 0,t&&t.enter()},b?o=function(){m.nextTick(n)}:y&&!g?(s=!0,l=document.createTextNode(""),new y(n).observe(l,{characterData:!0}),o=function(){l.data=s=!s}):v&&v.resolve?(u=v.resolve(void 0),h=u.then,o=function(){h.call(u,n)}):o=function(){f.call(c,n)}),t.exports=_||function(t){var e={fn:t,next:void 0};a&&(a.next=e),r||(r=e,o()),a=e}},"2I/e":function(t,e,i){"use strict";i.d(e,"b",function(){return g}),i.d(e,"a",function(){return y});var n=i("m4/l"),r=i("VIOb"),a=i("vMqJ"),o=i("C6dT"),s=i("aM7D"),l=i("tjMS"),u=i("DHte"),h=i("aCit"),c=i("Wglt"),p=i("Mtpk"),d=i("hJ5i"),f=i("hD5A"),g=function(t){function e(){var e=t.call(this)||this;return e.className="SerialChartDataItem",e.applyTheme(),e}return Object(n.c)(e,t),e}(r.b),y=function(t){function e(){var e=t.call(this)||this;e.className="SerialChart",e.colors=new u.a,e._usesData=!1;var i=e.chartContainer.createChild(o.a);i.shouldClone=!1,i.width=Object(l.c)(100),i.height=Object(l.c)(100),i.isMeasured=!1,i.layout="none",i.zIndex=2,e.seriesContainer=i;var n=e.chartContainer.createChild(o.a);return n.shouldClone=!1,n.width=Object(l.c)(100),n.height=Object(l.c)(100),n.isMeasured=!1,n.zIndex=3,n.layout="none",e.bulletsContainer=n,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.dispose=function(){t.prototype.dispose.call(this),this.colors&&this.colors.dispose(),this.patterns&&this.patterns.dispose()},e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),p.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Serial chart"))},Object.defineProperty(e.prototype,"series",{get:function(){return this._series||(this._series=new a.e(this.createSeries()),this._series.events.on("inserted",this.handleSeriesAdded,this,!1),this._series.events.on("removed",this.handleSeriesRemoved,this,!1),this._disposers.push(new a.c(this._series)),this._disposers.push(this._series.template)),this._series},enumerable:!0,configurable:!0}),e.prototype.handleSeriesRemoved=function(t){var e=this,i=t.oldValue;this.dataUsers.removeValue(i),this.dataUsers.each(function(t){t.invalidateDataItems()}),i.autoDispose&&i.dispose(),this.legend&&(this.legend.dataItems.each(function(t){t.dataContext==i&&e.legend.dataItems.remove(t)}),d.each(this.legend.data,function(t){d.remove(e.legend.data,t)}))},e.prototype.handleSeriesAdded=function(t){var e=this,i=t.newValue;i.isDisposed()||(i.chart=this,i.parent=this.seriesContainer,i.bulletsContainer.parent=this.bulletsContainer,this._dataUsers.moveValue(i),i.addDisposer(new f.b(function(){e.dataUsers.removeValue(i)})),this.handleSeriesAdded2(i),i.hiddenInLegend||this.legend&&this.legend.addData(i))},e.prototype.handleSeriesAdded2=function(t){var e=this;this.dataInvalid||this._disposers.push(h.c.events.once("exitframe",function(){t.data&&0!=t.data.length||e.invalidateData()}))},e.prototype.feedLegend=function(){var t=this.legend;if(t){var e=[];c.each(this.series.iterator(),function(t){t.hiddenInLegend||e.push(t)}),t.dataFields.name="name",t.data=e}},e.prototype.createSeries=function(){return new s.a},Object.defineProperty(e.prototype,"colors",{get:function(){return this.getPropertyValue("colors")},set:function(t){this.setPropertyValue("colors",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"patterns",{get:function(){return this.getPropertyValue("patterns")},set:function(t){this.setPropertyValue("patterns",t,!0)},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.series.copyFrom(e.series)},e.prototype.appear=function(){t.prototype.appear.call(this),this.series.each(function(t){t.showOnInit&&t.inited&&t.appear()})},e}(r.a);h.c.registeredClasses.SerialChart=y},"2K9G":function(t,e,i){"use strict";var n=i("0sYB"),r=i("6aQQ"),a=i("7X7h"),o=i("EErT");n({target:"Date",proto:!0,forced:r(function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})},{toJSON:function(t){var e=a(this),i=o(e);return"number"!=typeof i||isFinite(i)?e.toISOString():null}})},"2MCn":function(t,e,i){"use strict";var n=i("0sYB"),r=i("6aQQ"),a=i("WShl");n({target:"Array",stat:!0,forced:r(function(){function t(){}return!(Array.of.call(t)instanceof t)})},{of:function(){for(var t=0,e=arguments.length,i=new("function"==typeof this?this:Array)(e);e>t;)a(i,t,arguments[t++]);return i.length=e,i}})},"2OXf":function(t,e,i){"use strict";i.d(e,"a",function(){return m});var n=i("m4/l"),r=i("C6dT"),a=i("sxA1"),o=i("aCit"),s=i("8ZqG"),l=i("vMqJ"),u=i("tjMS"),h=i("pR7v"),c=i("k6kv"),p=i("OXm9"),d=i("Wglt"),f=i("Mtpk"),g=i("hxI2"),y=i("CnhP"),m=function(t){function e(){var e=t.call(this)||this;e.className="HeatLegend",e.markerContainer=e.createChild(r.a),e.markerContainer.shouldClone=!1,e.markerCount=1;var i=new y.a;return i.minHeight=20,i.minWidth=20,i.interactionsEnabled=!1,i.fillOpacity=1,i.cornerRadius(0,0,0,0),e.markerContainer.minHeight=20,e.markerContainer.minWidth=20,e.orientation="horizontal",e.markers=new l.e(i),e._disposers.push(new l.c(e.markers)),e._disposers.push(e.markers.template),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.getMinFromRules=function(t){var e,i=this.series;if(i)return d.eachContinue(i.heatRules.iterator(),function(i){return i.property!=t||(e=i.min,!1)}),e},e.prototype.getMaxFromRules=function(t){var e,i=this.series;if(i)return d.each(i.heatRules.iterator(),function(i){return i.property!=t||(e=i.max,!1)}),e},e.prototype.validate=function(){t.prototype.validate.call(this),this.valueAxis.renderer.inversed=this.reverseOrder;var e=this.series,i=this.minColor,n=this.maxColor;if(f.hasValue(i)||(i=Object(s.e)(this.getMinFromRules("fill"))),f.hasValue(n)||(n=Object(s.e)(this.getMaxFromRules("fill"))),e){var r=e.fill;!f.hasValue(i)&&r instanceof s.a&&(i=r),!f.hasValue(n)&&r instanceof s.a&&(n=r)}f.hasValue(n)||(n=Object(s.e)(this.getMaxFromRules("fill")));var o=f.toNumber(this.getMinFromRules("fillOpacity"));f.isNumber(o)||(o=1);var l=f.toNumber(this.getMaxFromRules("fillOpacity"));f.isNumber(l)||(l=1);var h=f.toNumber(this.getMinFromRules("strokeOpacity"));f.isNumber(h)||(h=1);var c=f.toNumber(this.getMaxFromRules("strokeOpacity"));f.isNumber(c)||(c=1);for(var p=Object(s.e)(this.getMinFromRules("stroke")),d=Object(s.e)(this.getMaxFromRules("stroke")),y=0;y<this.markerCount;y++){var m=this.markers.getIndex(y);if(m||((m=this.markers.create()).parent=this.markerContainer,m.height=Object(u.c)(100),m.width=Object(u.c)(100)),1==this.markerCount){var v=new a.a;if(this.reverseOrder?(v.addColor(n,l),v.addColor(i,o)):(v.addColor(i,o),v.addColor(n,l)),"vertical"==this.orientation&&(v.rotation=-90),m.fill=v,f.hasValue(p)&&f.hasValue(d)){var b=new a.a;this.reverseOrder?(b.addColor(d,c),b.addColor(p,h)):(b.addColor(p,h),b.addColor(d,c)),"vertical"==this.orientation&&(b.rotation=-90),m.stroke=b}}else{var x=y;this.reverseOrder&&(x=this.markerCount-y-1);var _=new s.a(g.interpolate(i.rgb,n.rgb,x/this.markerCount));m.fill=_;var P=o+(l-o)*x/this.markerCount;if(m.fillOpacity=P,f.hasValue(p)&&f.hasValue(d)){var w=new s.a(g.interpolate(p.rgb,d.rgb,x/this.markerCount));m.stroke=w;var O=h+(c-h)*x/this.markerCount;m.strokeOpacity=O}}}var T=this.valueAxis.renderer;this.markerCount>1&&("horizontal"==this.orientation?T.minGridDistance=this.measuredWidth/this.markerCount:T.minGridDistance=this.measuredHeight/this.markerCount),this.valueAxis.invalidate();y=this.markerCount;for(var S=this.markers.length;y<S;y++)this.markers.getIndex(y).parent=void 0},Object.defineProperty(e.prototype,"minColor",{get:function(){return this.getPropertyValue("minColor")},set:function(t){t instanceof s.a||(t=Object(s.e)(t)),this.setColorProperty("minColor",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxColor",{get:function(){return this.getPropertyValue("maxColor")},set:function(t){f.isObject(t)||(t=Object(s.e)(t)),this.setColorProperty("maxColor",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"markerCount",{get:function(){return this.getPropertyValue("markerCount")},set:function(t){this.setPropertyValue("markerCount",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minValue",{get:function(){return this.getPropertyValue("minValue")},set:function(t){this.setPropertyValue("minValue",t),this.valueAxis.min=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxValue",{get:function(){return this.getPropertyValue("maxValue")},set:function(t){this.setPropertyValue("maxValue",t),this.valueAxis.max=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"orientation",{get:function(){return this.getPropertyValue("orientation")},set:function(t){this.setPropertyValue("orientation",t,!0);var e=this.markerContainer,i=this.valueAxis;"horizontal"==t?(f.hasValue(this.width)||(this.width=200),this.height=void 0,i.width=Object(u.c)(100),i.height=void 0,i.tooltip.pointerOrientation="vertical",this.layout="vertical",e.width=Object(u.c)(100),e.height=void 0,i.renderer instanceof c.a||(i.renderer=new c.a)):(f.hasValue(this.height)||(this.height=200),this.width=void 0,this.layout="horizontal",e.width=void 0,e.height=Object(u.c)(100),i.height=Object(u.c)(100),i.width=void 0,i.tooltip.pointerOrientation="horizontal",i.renderer instanceof p.a||(i.renderer=new p.a),i.renderer.inside=!0,i.renderer.labels.template.inside=!0,this.markerContainer.reverseOrder=!0);var n=i.renderer;n.grid.template.disabled=!0,n.axisFills.template.disabled=!0,n.baseGrid.disabled=!0,n.labels.template.padding(2,3,2,3),n.minHeight=void 0,n.minWidth=void 0,this.markerContainer.layout=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueAxis",{get:function(){return this._valueAxis||(this.valueAxis=this.createChild(h.a),this.valueAxis.shouldClone=!1),this._valueAxis},set:function(t){this._valueAxis=t,t.parent=this,t.strictMinMax=!0,this.orientation=this.orientation},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"series",{get:function(){return this._series},set:function(t){var e=this;this._series=t;var i="value";try{var n=t.heatRules.getIndex(0).dataField;n&&(i=n)}catch(t){}this.updateMinMax(t.dataItem.values[i].low,t.dataItem.values[i].high),t.dataItem.events.on("calculatedvaluechanged",function(n){e.updateMinMax(t.dataItem.values[i].low,t.dataItem.values[i].high)},void 0,!1),t.heatRules.events.on("inserted",this.invalidate,this,!1),t.heatRules.events.on("removed",this.invalidate,this,!1)},enumerable:!0,configurable:!0}),e.prototype.updateMinMax=function(t,e){var i=this.valueAxis;f.isNumber(this.minValue)||(i.min=t,i.invalidate()),f.isNumber(this.maxValue)||(i.max=e,i.invalidate())},e.prototype.processConfig=function(e){if(e&&f.hasValue(e.series)&&f.isString(e.series)&&f.isString(e.series))if(this.map.hasKey(e.series))e.series=this.map.getKey(e.series);else{var i=e.series,n=this.map.events.on("insertKey",function(t){t.key==i&&(this.series=t.newValue,n.dispose())},this);this._disposers.push(n),delete e.series}t.prototype.processConfig.call(this,e)},e}(r.a);o.c.registeredClasses.HeatLegend=m},"2fPu":function(t,e,i){var n=i("bvi0"),r=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(t){return r.call(t)}),t.exports=n.inspectSource},"2gKx":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("ZLF9"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.rectHeight=1,e.rectWidth=1,e._rect=e.paper.add("rect"),e.addElement(e._rect),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this),this.properties.rotationX=this.width/2,this.properties.rotationY=this.height/2,this._rect&&this._rect.attr({width:this.rectWidth,height:this.rectHeight,x:(this.width-this.rectWidth)/2,y:(this.height-this.rectHeight)/2})},Object.defineProperty(e.prototype,"rectWidth",{get:function(){return this.properties.rectWidth},set:function(t){this.properties.rectWidth=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rectHeight",{get:function(){return this.properties.rectHeight},set:function(t){this.properties.rectHeight=t,this.draw()},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.RectPattern=o},"2gbO":function(t,e,i){var n=i("3sMl"),r=i("vfdp"),a=i("EjSS"),o=i("047P"),s=i("8+rI").f,l=i("GtmK").f,u=i("AzDz"),h=i("/arR"),c=i("mte+"),p=i("z3p0"),d=i("6aQQ"),f=i("SqFF").set,g=i("YRD/"),y=i("KslR")("match"),m=r.RegExp,v=m.prototype,b=/a/g,x=/a/g,_=new m(b)!==b,P=c.UNSUPPORTED_Y;if(n&&a("RegExp",!_||P||d(function(){return x[y]=!1,m(b)!=b||m(x)==x||"/a/i"!=m(b,"i")}))){for(var w=function(t,e){var i,n=this instanceof w,r=u(t),a=void 0===e;if(!n&&r&&t.constructor===w&&a)return t;_?r&&!a&&(t=t.source):t instanceof w&&(a&&(e=h.call(t)),t=t.source),P&&(i=!!e&&e.indexOf("y")>-1)&&(e=e.replace(/y/g,""));var s=o(_?new m(t,e):m(t,e),n?this:v,w);return P&&i&&f(s,{sticky:i}),s},O=function(t){t in w||s(w,t,{configurable:!0,get:function(){return m[t]},set:function(e){m[t]=e}})},T=l(m),S=0;T.length>S;)O(T[S++]);v.constructor=w,w.prototype=v,p(r,"RegExp",w)}g("RegExp")},"2ih1":function(t,e,i){var n=i("0sYB"),r=i("UseD");n({target:"ArrayBuffer",stat:!0,forced:!r.NATIVE_ARRAY_BUFFER_VIEWS},{isView:r.isView})},"2xmP":function(t,e){var i={}.toString;t.exports=function(t){return i.call(t).slice(8,-1)}},"3/51":function(t,e,i){"use strict";i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("DA7/"),a=i("aCit"),o=i("Gg2j"),s=i("Mtpk"),l=function(t){function e(){var e=t.call(this)||this;return e.lightnesses=[],e.brightnesses=[],e.opacities=[],e.offsets=[],e.className="GradientModifier",e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"lightnesses",{get:function(){return this._lightnesses},set:function(t){this._lightnesses=t,this._brightnesses=[]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"brightnesses",{get:function(){return this._brightnesses},set:function(t){this._brightnesses=t,this._lightnesses=[]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"opacities",{get:function(){return this._opacities},set:function(t){this._opacities=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"offsets",{get:function(){return this._offsets},set:function(t){this._offsets=t},enumerable:!0,configurable:!0}),e.prototype.modify=function(t){this.gradient.clear();var e=0;this.opacities&&(e=o.max(e,this.opacities.length)),this.lightnesses&&(e=o.max(e,this.lightnesses.length)),this.brightnesses&&(e=o.max(e,this.brightnesses.length));for(var i,n,r=1,a=0;a<e;a++){var l=t;this.opacities&&s.isNumber(this.opacities[a])&&(r=this.opacities[a]),this.lightnesses&&s.isNumber(this.lightnesses[a])&&(i=this.lightnesses[a],n=void 0),this.brightnesses&&s.isNumber(this.brightnesses[a])&&(n=this.brightnesses[a],i=void 0),s.isNumber(n)?l=t.brighten(this.brightnesses[a]):s.isNumber(i)&&(l=t.lighten(this.lightnesses[a]));var u=this.offsets[a];this.gradient.addColor(l,r,u)}return this.gradient},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this._offsets=e.offsets,this._brightnesses=e.brightnesses,this._lightnesses=e.lightnesses,this._opacities=e.opacities},e}(r.a);a.c.registeredClasses.GradientModifier=l},"32Y2":function(t,e,i){"use strict";var n=i("UseD"),r=n.aTypedArray,a=n.exportTypedArrayMethod,o=[].sort;a("sort",function(t){return o.call(r(this),t)})},"36nV":function(t,e,i){"use strict";var n=i("UseD"),r=i("NSJ1"),a=n.aTypedArrayConstructor;(0,n.exportTypedArrayStaticMethod)("of",function(){for(var t=0,e=arguments.length,i=new(a(this))(e);e>t;)i[t]=arguments[t++];return i},r)},"39+r":function(t,e,i){"use strict";var n=i("7X7h"),r=i("Y8n3"),a=i("tHyI"),o=Math.min;t.exports=[].copyWithin||function(t,e){var i=n(this),s=a(i.length),l=r(t,s),u=r(e,s),h=arguments.length>2?arguments[2]:void 0,c=o((void 0===h?s:r(h,s))-u,s-l),p=1;for(u<l&&l<u+c&&(p=-1,u+=c-1,l+=c-1);c-- >0;)u in i?i[l]=i[u]:delete i[l],l+=p,u+=p;return i}},"3Cxr":function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.order=function(t,e){return t===e?0:t<e?-1:1}},"3Fha":function(t,e,i){var n=i("7X7h"),r=i("tHyI"),a=i("Ur2B"),o=i("3Ok2"),s=i("cLsB"),l=i("UseD").aTypedArrayConstructor;t.exports=function(t){var e,i,u,h,c,p,d=n(t),f=arguments.length,g=f>1?arguments[1]:void 0,y=void 0!==g,m=a(d);if(void 0!=m&&!o(m))for(p=(c=m.call(d)).next,d=[];!(h=p.call(c)).done;)d.push(h.value);for(y&&f>2&&(g=s(g,arguments[2],2)),i=r(d.length),u=new(l(this))(i),e=0;i>e;e++)u[e]=y?g(d[e],e):d[e];return u}},"3Ok2":function(t,e,i){var n=i("KslR"),r=i("CNF5"),a=n("iterator"),o=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||o[a]===t)}},"3XS/":function(t,e,i){"use strict";var n=i("0sYB"),r=i("rhk+").start;n({target:"String",proto:!0,forced:i("tf09")},{padStart:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},"3Z2E":function(t,e,i){"use strict";var n=i("NZ9V"),r=i("3weC"),a=i("7X7h"),o=i("tHyI"),s=i("exNg"),l=i("swFJ"),u=i("L0in"),h=i("Xw1K"),c=Math.max,p=Math.min,d=Math.floor,f=/\$([$&'`]|\d\d?|<[^>]*>)/g,g=/\$([$&'`]|\d\d?)/g,y=function(t){return void 0===t?t:String(t)};n("replace",2,function(t,e,i,n){var m=n.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,v=n.REPLACE_KEEPS_$0,b=m?"$":"$0";return[function(i,n){var r=l(this),a=void 0==i?void 0:i[t];return void 0!==a?a.call(i,r,n):e.call(String(r),i,n)},function(t,n){if(!m&&v||"string"==typeof n&&-1===n.indexOf(b)){var a=i(e,t,this,n);if(a.done)return a.value}var l=r(t),d=String(this),f="function"==typeof n;f||(n=String(n));var g=l.global;if(g){var _=l.unicode;l.lastIndex=0}for(var P=[];;){var w=h(l,d);if(null===w)break;if(P.push(w),!g)break;""===String(w[0])&&(l.lastIndex=u(d,o(l.lastIndex),_))}for(var O="",T=0,S=0;S<P.length;S++){w=P[S];for(var C=String(w[0]),I=c(p(s(w.index),d.length),0),k=[],D=1;D<w.length;D++)k.push(y(w[D]));var j=w.groups;if(f){var V=[C].concat(k,I,d);void 0!==j&&V.push(j);var A=String(n.apply(void 0,V))}else A=x(C,d,I,k,j,n);I>=T&&(O+=d.slice(T,I)+A,T=I+C.length)}return O+d.slice(T)}];function x(t,i,n,r,o,s){var l=n+t.length,u=r.length,h=g;return void 0!==o&&(o=a(o),h=f),e.call(s,h,function(e,a){var s;switch(a.charAt(0)){case"$":return"$";case"&":return t;case"`":return i.slice(0,n);case"'":return i.slice(l);case"<":s=o[a.slice(1,-1)];break;default:var h=+a;if(0===h)return e;if(h>u){var c=d(h/10);return 0===c?e:c<=u?void 0===r[c-1]?a.charAt(1):r[c-1]+a.charAt(1):e}s=r[h-1]}return void 0===s?"":s})}})},"3mR7":function(t,e,i){"use strict";var n=i("3sMl"),r=i("vfdp"),a=i("EjSS"),o=i("z3p0"),s=i("JZRr"),l=i("2xmP"),u=i("047P"),h=i("EErT"),c=i("6aQQ"),p=i("QzDi"),d=i("GtmK").f,f=i("gxUV").f,g=i("8+rI").f,y=i("jnLg").trim,m=r.Number,v=m.prototype,b="Number"==l(p(v)),x=function(t){var e,i,n,r,a,o,s,l,u=h(t,!1);if("string"==typeof u&&u.length>2)if(43===(e=(u=y(u)).charCodeAt(0))||45===e){if(88===(i=u.charCodeAt(2))||120===i)return NaN}else if(48===e){switch(u.charCodeAt(1)){case 66:case 98:n=2,r=49;break;case 79:case 111:n=8,r=55;break;default:return+u}for(o=(a=u.slice(2)).length,s=0;s<o;s++)if((l=a.charCodeAt(s))<48||l>r)return NaN;return parseInt(a,n)}return+u};if(a("Number",!m(" 0o1")||!m("0b1")||m("+0x1"))){for(var _,P=function(t){var e=arguments.length<1?0:t,i=this;return i instanceof P&&(b?c(function(){v.valueOf.call(i)}):"Number"!=l(i))?u(new m(x(e)),i,P):x(e)},w=n?d(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),O=0;w.length>O;O++)s(m,_=w[O])&&!s(P,_)&&g(P,_,f(m,_));P.prototype=v,v.constructor=P,o(r,"Number",P)}},"3pky":function(t,e,i){var n=i("JZRr"),r=i("9XRO"),a=i("ojxk").indexOf,o=i("lt6Q");t.exports=function(t,e){var i,s=r(t),l=0,u=[];for(i in s)!n(o,i)&&n(s,i)&&u.push(i);for(;e.length>l;)n(s,i=e[l++])&&(~a(u,i)||u.push(i));return u}},"3sMl":function(t,e,i){var n=i("6aQQ");t.exports=!n(function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})},"3weC":function(t,e,i){var n=i("Kg2n");t.exports=function(t){if(!n(t))throw TypeError(String(t)+" is not an object");return t}},"4BZe":function(t,e,i){var n=i("2xmP");t.exports=function(t){if("number"!=typeof t&&"Number"!=n(t))throw TypeError("Incorrect invocation");return+t}},"4DCw":function(t,e,i){"use strict";i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("mIpt"),a=i("Mtpk"),o=i("hJ5i"),s=[",",";","\t"],l=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.contentType="text/csv",e.options={delimiter:"",reverse:!1,skipRows:0,skipEmpty:!0,useColumnNames:!1},e}return Object(n.c)(e,t),e.isCSV=function(t){return!!e.getDelimiterFromData(t)},e.getDelimiterFromData=function(t){var e,i=t.split("\n"),n=i.length;return o.each(s,function(t){for(var r=0,a=0,o=0;o<n;++o){if(!((r=i[o].split(t).length)>1)){a=0;break}if(0===a)a=r;else if(r!=a){a=0;break}}a&&(e=t)}),e},e.prototype.parse=function(t){this.options.delimiter||(this.options.delimiter=e.getDelimiterFromData(t));var i,n,r,o=this.CSVToArray(t,this.options.delimiter),s=a.hasValue(this.options.emptyAs),l=this.parsableNumbers,u=this.parsableDates,h=[],c=[];for(n=0;n<this.options.skipRows;n++)o.shift();if(this.options.useColumnNames){c=o.shift();for(var p=0;p<c.length;p++)""===(i=a.hasValue(c[p])?c[p].replace(/^\s+|\s+$/gm,""):"")&&(i="col"+p),c[p]=i}for(;r=this.options.reverse?o.pop():o.shift();)if(!this.options.skipEmpty||1!==r.length||""!==r[0]){var d={};for(n=0;n<r.length;n++)d[i=void 0===c[n]?"col"+n:c[n]]=""===r[n]?this.options.emptyAs:r[n],s&&(d[i]=this.maybeToEmpty(d[i])),l&&(d[i]=this.maybeToNumber(i,d[i])),u&&(d[i]=this.maybeToDate(i,d[i]));h.push(d)}return h},e.prototype.CSVToArray=function(t,e){e=e||",";for(var i=new RegExp("(\\"+e+'|\\r?\\n|\\r|^)(?:"([^"]*(?:""[^"]*)*)"|([^"\\'+e+"\\r\\n]*))","gi"),n=[[]],r=null;r=i.exec(t);){var a=r[1];a.length&&a!==e&&n.push([]);var o=void 0;o=r[2]?r[2].replace(new RegExp('""',"g"),'"'):r[3],n[n.length-1].push(o)}return n},e}(r.a)},"4Wbs":function(t,e,i){"use strict";var n=i("/arR"),r=i("mte+"),a=RegExp.prototype.exec,o=String.prototype.replace,s=a,l=function(){var t=/a/,e=/b*/g;return a.call(t,"a"),a.call(e,"a"),0!==t.lastIndex||0!==e.lastIndex}(),u=r.UNSUPPORTED_Y||r.BROKEN_CARET,h=void 0!==/()??/.exec("")[1];(l||h||u)&&(s=function(t){var e,i,r,s,c=this,p=u&&c.sticky,d=n.call(c),f=c.source,g=0,y=t;return p&&(-1===(d=d.replace("y","")).indexOf("g")&&(d+="g"),y=String(t).slice(c.lastIndex),c.lastIndex>0&&(!c.multiline||c.multiline&&"\n"!==t[c.lastIndex-1])&&(f="(?: "+f+")",y=" "+y,g++),i=new RegExp("^(?:"+f+")",d)),h&&(i=new RegExp("^"+f+"$(?!\\s)",d)),l&&(e=c.lastIndex),r=a.call(p?i:c,y),p?r?(r.input=r.input.slice(g),r[0]=r[0].slice(g),r.index=c.lastIndex,c.lastIndex+=r[0].length):c.lastIndex=0:l&&r&&(c.lastIndex=c.global?r.index+r[0].length:e),h&&r&&r.length>1&&o.call(r[0],i,function(){for(s=1;s<arguments.length-2;s++)void 0===arguments[s]&&(r[s]=void 0)}),r}),t.exports=s},"57vZ":function(t,e,i){var n=i("0sYB"),r=i("1wCr"),a=i("6aQQ"),o=r("JSON","stringify"),s=/[\uD800-\uDFFF]/g,l=/^[\uD800-\uDBFF]$/,u=/^[\uDC00-\uDFFF]$/,h=function(t,e,i){var n=i.charAt(e-1),r=i.charAt(e+1);return l.test(t)&&!u.test(r)||u.test(t)&&!l.test(n)?"\\u"+t.charCodeAt(0).toString(16):t},c=a(function(){return'"\\udf06\\ud834"'!==o("\udf06\ud834")||'"\\udead"'!==o("\udead")});o&&n({target:"JSON",stat:!0,forced:c},{stringify:function(t,e,i){var n=o.apply(null,arguments);return"string"==typeof n?n.replace(s,h):n}})},"58Sn":function(t,e,i){"use strict";i.d(e,"a",function(){return h}),i.d(e,"e",function(){return c}),i.d(e,"d",function(){return p}),e.g=function(t,e,i,n){return t.addEventListener(e,i,n||!1),new a.b(function(){t.removeEventListener(e,i,n||!1)})},e.q=function(t){if(u.isString(t)){var e=document.getElementById(t);if(null==e&&(e=document.getElementsByClassName(t)[0]),e instanceof HTMLElement)return e}else if(t instanceof HTMLElement)return t},e.f=function(t,e){if(!t)return;if(t.classList)t.classList.add(e);else{var i=t.getAttribute("class");i?t.setAttribute("class",i.split(" ").filter(function(t){return t!==e}).join(" ")+" "+e):t.setAttribute("class",e)}},e.x=function(t,e){if(!t)return;if(t.classList)t.classList.remove(e);else{var i=t.getAttribute("class");i&&t.setAttribute("class",i.split(" ").filter(function(t){return t!==e}).join(" "))}},e.y=function(t,e,i){t.style[e]=i},e.p=d,e.h=function(){var t=document.createElement("input");t.style.position="fixed",t.style.top="0px",t.style.left="-10000px",document.body.appendChild(t),t.focus(),t.blur(),document.body.removeChild(t)},e.o=function(t){if(t instanceof HTMLElement)t.focus();else{var e=document.createElement("input"),i=document.createElementNS(h,"foreignObject");i.appendChild(e),t.appendChild(i),e.focus(),e.disabled=!0,i.remove()}},e.v=function(t){if(t.outerHTML)return t.outerHTML;var e=document.createElement("div"),i=t.cloneNode(!0);e.appendChild(i);var n=e.innerHTML;return n},e.s=function(t){return t instanceof Object&&t&&1===t.nodeType},e.i=function(t,e){var i=e;for(;;){if(t===i)return!0;if(null==i.parentNode){if(null==i.host)return!1;i=i.host}else i=i.parentNode}},e.r=function(t){var e=t.ownerDocument,i=t;for(;;){if(null==i.parentNode)return i===e||null!=i.host?i:null;i=i.parentNode}},e.k=function(t){return"function"==typeof t.composedPath?t.composedPath()[0]:t.target},e.j=function(t,e){l.each(t.attributes,function(t){null!=t.value&&e.setAttribute(t.name,t.value)})},e.n=function(t){Object(o.c)(function(){try{var e=t.getBoundingClientRect(),i=e.left-Math.round(e.left),n=e.top-Math.round(e.top);0!==i&&Object(o.f)(function(){t.style.left=i+"px"}),0!==n&&Object(o.f)(function(){t.style.top=n+"px"})}catch(t){}})},i.d(e,"c",function(){return g}),i.d(e,"b",function(){return m}),e.w=function(t){if("loading"!==document.readyState)t();else{var e=function(){"loading"!==document.readyState&&(document.removeEventListener("readystatechange",e),t())};document.addEventListener("readystatechange",e)}},e.l=function t(e){var i=d(e,"font-family");if(i)return i;var n=e.parentElement||e.parentNode;return n?t(n):void 0},e.m=function t(e){var i=d(e,"font-size");if(i)return i;var n=e.parentElement||e.parentNode;return n?t(n):void 0},e.u=function(t){return null===t.offsetParent},e.t=function t(e,i){var n=e.getBoundingClientRect();if(i){if(!t(i))return!1;var r=i.getBoundingClientRect();return n.top>=0&&n.left>=0&&n.top<=r.top+r.height&&n.left<=r.left+r.width}return n.top>=0&&n.left>=0&&n.top<=(window.innerHeight||document.documentElement.clientHeight)&&n.left<=(window.innerWidth||document.documentElement.clientWidth)};var n,r=i("m4/l"),a=i("hD5A"),o=i("/9XX"),s=i("Qkdp"),l=i("hJ5i"),u=i("Mtpk"),h="http://www.w3.org/2000/svg",c="http://www.w3.org/2000/xmlns/",p="http://www.w3.org/1999/xlink";function d(t,e){return t.currentStyle?t.currentStyle[e]:document.defaultView.getComputedStyle(t,null).getPropertyValue(e)}function f(){if(!u.hasValue(n)){var t=document.createElement("style");t.type="text/css",document.head.appendChild(t),n=t.sheet}return n}var g=function(t){function e(e,i){var n=t.call(this,function(){var t=f(),e=l.indexOf(t.cssRules,n._rule);if(-1===e)throw new Error("Could not dispose StyleRule");t.deleteRule(e)})||this;return n._rule=function(t){var e=f(),i=e.cssRules.length;return e.insertRule(t+"{}",i),e.cssRules[i]}(e),s.each(i,function(t,e){n.setStyle(t,e)}),n}return Object(r.c)(e,t),Object.defineProperty(e.prototype,"selector",{get:function(){return this._rule.selectorText},set:function(t){this._rule.selectorText=t},enumerable:!0,configurable:!0}),e.prototype._setVendorPrefixName=function(t,e){var i=this._rule.style;i.setProperty("-webkit-"+t,e,""),i.setProperty("-moz-"+t,e,""),i.setProperty("-ms-"+t,e,""),i.setProperty("-o-"+t,e,""),i.setProperty(t,e,"")},e.prototype.setStyle=function(t,e){"transition"===t?this._setVendorPrefixName(t,e):this._rule.style.setProperty(t,e,"")},e}(a.b),y=0,m=function(t){function e(e,i){var n=this,r=u.hasValue(i)?i:"__style_"+ ++y+"__";return(n=t.call(this,"."+r,e)||this)._className=r,n}return Object(r.c)(e,t),Object.defineProperty(e.prototype,"className",{get:function(){return this._className},set:function(t){this._className=t,this.selector="."+t},enumerable:!0,configurable:!0}),e.prototype.toString=function(){return this._className},e}(g)},"5FpK":function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("fontsize")},{fontsize:function(t){return r(this,"font","size",t)}})},"5SyC":function(t,e){var i=Math.expm1,n=Math.exp;t.exports=!i||i(10)>22025.465794806718||i(10)<22025.465794806718||-2e-17!=i(-2e-17)?function(t){return 0==(t=+t)?t:t>-1e-6&&t<1e-6?t+t*t/2:n(t)-1}:i},"5hgO":function(t,e,i){"use strict";var n=i("0sYB"),r=i("UjlR"),a=i("7X7h"),o=i("tHyI"),s=i("exNg"),l=i("Rs0P");n({target:"Array",proto:!0},{flat:function(){var t=arguments.length?arguments[0]:void 0,e=a(this),i=o(e.length),n=l(e,0);return n.length=r(n,e,e,i,0,void 0===t?1:s(t)),n}})},"5ou3":function(t,e,i){var n=i("oRlD"),r=i("2xmP"),a=i("KslR")("toStringTag"),o="Arguments"==r(function(){return arguments}());t.exports=n?r:function(t){var e,i,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(i=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),a))?i:o?r(e):"Object"==(n=r(e))&&"function"==typeof e.callee?"Arguments":n}},"5rWR":function(t,e,i){i("0sYB")({target:"Number",stat:!0},{MIN_SAFE_INTEGER:-9007199254740991})},"5tyj":function(t,e,i){var n=i("0sYB"),r=i("aHAe");n({target:"Array",stat:!0,forced:!i("XqrT")(function(t){Array.from(t)})},{from:r})},"5vid":function(t,e,i){"use strict";i.d(e,"b",function(){return _}),i.d(e,"a",function(){return P});var n=i("m4/l"),r=i("Uf57"),a=i("Vs7R"),o=i("C6dT"),s=i("vMqJ"),l=i("+qIf"),u=i("pR7v"),h=i("VB2N"),c=i("aCit"),p=i("DG6Q"),d=i("CnhP"),f=i("tjMS"),g=i("Gg2j"),y=i("Qkdp"),m=i("Wglt"),v=i("hJ5i"),b=i("Mtpk"),x=i("hD5A"),_=function(t){function e(){var e=t.call(this)||this;return e.className="ColumnSeriesDataItem",e.locations.dateX=.5,e.locations.dateY=.5,e.locations.categoryX=.5,e.locations.categoryY=.5,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"column",{get:function(){return this._column},set:function(t){this.setColumn(t)},enumerable:!0,configurable:!0}),e.prototype.setColumn=function(t){var e=this;if(this._column&&t!=this._column&&v.remove(this.sprites,this._column),this._column=t,t){var i=t.dataItem;i&&i!=this&&(i.column=void 0),this.addSprite(t),this._disposers.push(new x.b(function(){e.component&&e.component.columns.removeValue(t)}))}},Object.defineProperty(e.prototype,"rangesColumns",{get:function(){return this._rangesColumns||(this._rangesColumns=new l.a),this._rangesColumns},enumerable:!0,configurable:!0}),e}(r.b),P=function(t){function e(){var e=t.call(this)||this;e._startLocation=0,e._endLocation=1,e.className="ColumnSeries",e.width=Object(f.c)(100),e.height=Object(f.c)(100),e.strokeOpacity=0,e.fillOpacity=1,e.clustered=!0;var i=e.mainContainer.createChild(o.a);return i.shouldClone=!1,i.isMeasured=!1,i.layout="none",e._columnsContainer=i,e.columns.template.pixelPerfect=!1,e.tooltipColorSource=e.columns.template,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"columnsContainer",{get:function(){return this._columnsContainer},enumerable:!0,configurable:!0}),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),b.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Column Series"))},e.prototype.createDataItem=function(){return new _},e.prototype.validate=function(){var i=this;if(this.chart&&this.xAxis&&this.yAxis){var n,r=this.chart.series,a=0,o=0,s=[];m.each(r.iterator(),function(t){var n;t instanceof e&&(i.baseAxis==t.baseAxis&&(n=i.baseAxis==i.xAxis?i.chart.yAxes.indexOf(t.yAxis):i.chart.xAxes.indexOf(t.xAxis),s.push({series:t,axis:n})))}),s.sort(function(t,e){return t.axis-e.axis}),v.each(s,function(t){var r=t.series;r instanceof e&&((!r.stacked&&r.clustered||n!=t.axis&&r.clustered)&&a++,r==i&&(o=a-1)),n=t.axis}),this.clustered||(o=0,a=1);var l=this.baseAxis.renderer,c=l.cellStartLocation,p=l.cellEndLocation;this._startLocation=c+o/a*(p-c),this._endLocation=c+(o+1)/a*(p-c);var d=this.xAxis,f=this.yAxis;d instanceof h.a&&f instanceof u.a&&d.sortBySeries==this&&this.sortCategoryAxis(d,"valueY"),f instanceof h.a&&d instanceof u.a&&f.sortBySeries==this&&this.sortCategoryAxis(f,"valueX")}t.prototype.validate.call(this);for(var g=0;g<this.startIndex;g++){var y=this.dataItems.getIndex(g);this.disableUnusedColumns(y)}for(g=this.dataItems.length-1;g>this.endIndex;g--){y=this.dataItems.getIndex(g);this.disableUnusedColumns(y)}this._propertiesChanged=!1},e.prototype.sortCategoryAxis=function(t,e){var i=this;this.dataItems.values.sort(function(t,i){return i.values[e].workingValue-t.values[e].workingValue});var n=0;this.dataItems.each(function(t){t._index=n,n++}),t.dataItems.each(function(t){var e=t.component,n=e.categoryToPosition(t.category)-t.deltaPosition,r=e.getSeriesDataItemByCategory(t.category,i);if(r){var a=i.dataItems.indexOf(r);t._index=a;var o=g.round((a+.5)/i.dataItems.length-n,3);t.deltaAnimation&&!t.deltaAnimation.isDisposed()&&t.deltaAnimation.animationOptions[0].to==o||o!=g.round(t.deltaPosition,3)&&(t.deltaAnimation&&t.deltaAnimation.stop(),t.deltaAnimation=t.animate({property:"deltaPosition",from:-o,to:0},e.interpolationDuration,e.interpolationEasing),i._disposers.push(t.deltaAnimation))}}),t.dataItems.values.sort(function(t,e){return t.index-e.index})},e.prototype.validateDataElement=function(e){this.chart&&this.xAxis&&this.yAxis&&(this.validateDataElementReal(e),t.prototype.validateDataElement.call(this,e))},e.prototype.getStartLocation=function(t){var e=this._startLocation;return this.baseAxis==this.xAxis?e+=t.locations[this.xOpenField]-.5:e+=t.locations[this.yOpenField]-.5,e},e.prototype.getEndLocation=function(t){var e=this._endLocation;return this.baseAxis==this.xAxis?e+=t.locations[this.xField]-.5:e+=t.locations[this.yField]-.5,e},e.prototype.validateDataElementReal=function(t){var e,i,n,r,o=this,s=this.getStartLocation(t),l=this.getEndLocation(t),c=this.xField,p=this.xOpenField,d=this.yField,f=this.yOpenField,x=this.columns.template,_=x.percentWidth,P=x.percentHeight,w=x.pixelWidth,O=x.pixelHeight,T=x.maxWidth,S=x.maxHeight,C=x.pixelPaddingLeft,I=x.pixelPaddingRight,k=x.pixelPaddingTop,D=x.pixelPaddingBottom,j=!1;if(this.xAxis instanceof h.a&&this.yAxis instanceof h.a){if(!t.hasValue(this._xValueFields)||!t.hasValue(this._yValueFields))return;if(s=0,l=1,!b.isNaN(_))s+=F=g.round((l-s)*(1-_/100)/2,5),l-=F;if(e=this.xAxis.getX(t,p,s),i=this.xAxis.getX(t,c,l),b.isNaN(_))e+=F=(i-e-w)/2,i-=F;if(!b.isNaN(T)&&T<Math.abs(i-e))e+=F=(i-e-T)/2,i-=F;if(s=0,l=1,!b.isNaN(P))s+=F=g.round((1-P/100)/2,5),l-=F;if(n=this.yAxis.getY(t,f,s),r=this.yAxis.getY(t,d,l),b.isNaN(P))r+=F=(r-n-O)/2,n-=F;if(!b.isNaN(S)&&S<Math.abs(r-n))r+=F=(r-n-S)/2,n-=F;i=this.fixHorizontalCoordinate(i),e=this.fixHorizontalCoordinate(e),n=this.fixVerticalCoordinate(n),r=this.fixVerticalCoordinate(r)}else if(this.baseAxis==this.xAxis){if(!t.hasValue(this._yValueFields))return;if(!b.isNaN(_))s+=F=g.round((l-s)*(1-_/100)/2,5),l-=F;if(e=this.xAxis.getX(t,p,s),i=this.xAxis.getX(t,c,l),b.isNaN(_))e+=F=(i-e-w)/2,i-=F;if(!b.isNaN(T)&&T<Math.abs(i-e))e+=F=(i-e-T)/2,i-=F;var V=t.locations[f],A=t.locations[d];this.yAxis instanceof u.a&&this.dataFields[this.yField]!=this.dataFields[this.yOpenField]&&(V=0,A=0),r=this.yAxis.getY(t,f,V),n=this.yAxis.getY(t,d,A);var M=Math.ceil(this.yAxis.axisLength);(n<0&&r<0||n>M&&r>M)&&(j=!0),n=this.fixVerticalCoordinate(n),r=this.fixVerticalCoordinate(r),Math.abs(i-e)-C-I==0&&(j=!0)}else{if(!t.hasValue(this._xValueFields))return;var F;if(!b.isNaN(P))s+=F=g.round((l-s)*(1-P/100)/2,5),l-=F;if(n=this.yAxis.getY(t,f,s),r=this.yAxis.getY(t,d,l),b.isNaN(P))r-=F=(r-n-O)/2,n+=F;if(!b.isNaN(S)&&S<Math.abs(r-n))r-=F=(r-n-S)/2,n+=F;var E=t.locations[c],R=t.locations[p];this.xAxis instanceof u.a&&this.dataFields[this.xField]!=this.dataFields[this.xOpenField]&&(E=0,R=0),i=this.xAxis.getX(t,c,E),e=this.xAxis.getX(t,p,R);M=Math.ceil(this.xAxis.axisLength);(i<0&&e<0||i>M&&e>M)&&(j=!0),i=this.fixHorizontalCoordinate(i),e=this.fixHorizontalCoordinate(e),Math.abs(n-r)-k-D==0&&(j=!0)}var N,L=Math.abs(i-e),B=Math.abs(r-n),U=Math.min(e,i),W=Math.min(n,r);j?this.disableUnusedColumns(t):(t.column?(N=t.column,this._propertiesChanged&&(y.copyProperties(this,N,a.b),y.copyProperties(this.columns.template,N,a.b),v.each(a.b,function(t){N[t]=N[t]}))):(N=this.columns.create(),y.copyProperties(this,N,a.b),y.copyProperties(this.columns.template,N,a.b),t.addSprite(N),t.column=N,N.paper=this.paper,this.itemsFocusable()?(this.role="menu",N.role="menuitem",N.focusable=!0):(this.role="list",N.role="listitem",N.focusable=!1),N.focusable&&(N.events.on("focus",function(e){N.readerTitle=o.populateString(o.itemReaderText,t)},void 0,!1),N.events.on("blur",function(t){N.readerTitle=""},void 0,!1)),N.hoverable&&(N.events.on("over",function(e){N.readerTitle=o.populateString(o.itemReaderText,t)},void 0,!1),N.events.on("out",function(t){N.readerTitle=""},void 0,!1))),N.width=L,N.height=B,N.x=U,N.y=W,N.realX=e,N.realY=n,N.realWidth=i-e,N.realHeight=r-n,N.parent=this.columnsContainer,N.virtualParent=this,this.setColumnStates(N),N.invalid&&N.validate(),N.__disabled=!1,m.each(this.axisRanges.iterator(),function(e){var i=t.rangesColumns.getKey(e.uid);i||(i=o.columns.create(),y.copyProperties(e.contents,i,a.b),t.addSprite(i),t.rangesColumns.setKey(e.uid,i),i.paper=o.paper),i.parent=e.contents,i.width=L,i.height=B,i.x=U,i.y=W,o.setColumnStates(i),i.invalid&&i.validate(),i.__disabled=!1}));t.itemWidth=L,t.itemHeight=B},e.prototype.disableUnusedColumns=function(t){t&&(t.column&&(t.column.width=0,t.column.height=0,t.column.__disabled=!0),m.each(this.axisRanges.iterator(),function(e){var i=t.rangesColumns.getKey(e.uid);i&&(i.width=0,i.height=0,i.__disabled=!0)}))},e.prototype.setColumnStates=function(t){if(this._dropFromOpenState||this._dropFromPreviousState||this._riseFromOpenState||this._riseFromPreviousState){var e=t.dataItem;if(this.xAxis instanceof u.a||this.yAxis instanceof u.a){var i,n=void 0,r=void 0;this.baseAxis==this.yAxis?this.xOpenField&&this.xField&&this.xAxis instanceof u.a&&(i=e.getValue(this.xOpenField),n=e.getValue(this.xField),r=e.getValue(this.xAxis.axisFieldName+"X","previousChange")):this.yOpenField&&this.yField&&this.yAxis instanceof u.a&&(i=e.getValue(this.yOpenField),n=e.getValue(this.yField),r=e.getValue(this.yAxis.axisFieldName+"Y","previousChange")),n<i?(e.droppedFromOpen=!0,t.defaultState.copyFrom(this._dropFromOpenState),t.setState(this._dropFromOpenState,0)):(e.droppedFromOpen=!1,t.defaultState.copyFrom(this._riseFromOpenState),t.setState(this._riseFromOpenState,0)),r<0?(e.droppedFromPrevious=!0,t.defaultState.copyFrom(this._dropFromPreviousState),t.setState(this._dropFromPreviousState,0)):(e.droppedFromPrevious=!1,t.defaultState.copyFrom(this._riseFromPreviousState),t.setState(this._riseFromPreviousState,0))}}},Object.defineProperty(e.prototype,"columns",{get:function(){return this._columns||(this._columns=new s.e(this.createColumnTemplate()),this._disposers.push(new s.c(this._columns)),this._disposers.push(this._columns.template)),this._columns},enumerable:!0,configurable:!0}),e.prototype.createColumnTemplate=function(){return new p.a},Object.defineProperty(e.prototype,"clustered",{get:function(){return this.getPropertyValue("clustered")},set:function(t){this.setPropertyValue("clustered",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dropFromOpenState",{get:function(){return this._dropFromOpenState||(this._dropFromOpenState=this.states.create("dropFromOpenState")),this._dropFromOpenState},set:function(t){this._dropFromOpenState=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dropFromPreviousState",{get:function(){return this._dropFromPreviousState||(this._dropFromPreviousState=this.states.create("dropFromPreviousState")),this._dropFromPreviousState},set:function(t){this._dropFromPreviousState=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"riseFromOpenState",{get:function(){return this._riseFromOpenState||(this._riseFromOpenState=this.states.create("riseFromOpenState")),this._riseFromOpenState},set:function(t){this._riseFromOpenState=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"riseFromPreviousState",{get:function(){return this._riseFromPreviousState||(this._riseFromPreviousState=this.states.create("riseFromPreviousState")),this._riseFromPreviousState},set:function(t){this._riseFromPreviousState=t},enumerable:!0,configurable:!0}),e.prototype.updateLegendValue=function(e,i){var n=this;if(t.prototype.updateLegendValue.call(this,e,i),this.legendDataItem){var r,a,o=this.legendDataItem.marker;e&&(r=e.droppedFromOpen?this._dropFromOpenState:this._riseFromOpenState,a=e.droppedFromPrevious?this._dropFromPreviousState:this._riseFromPreviousState),m.each(o.children.iterator(),function(t){e?(t.setState(a),t.setState(r)):(t.setState(n._riseFromPreviousState),t.setState(n._riseFromOpenState))})}},e.prototype.createLegendMarker=function(t){var e=t.pixelWidth,i=t.pixelHeight;t.removeChildren();var n=t.createChild(d.a);n.shouldClone=!1,y.copyProperties(this,n,a.b),n.copyFrom(this.columns.template),n.padding(0,0,0,0),n.width=e,n.height=i;var r=t.dataItem;r.color=this.fill,r.colorOrig=this.fill},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.columns.template.copyFrom(e.columns.template)},e.prototype.getBulletLocationX=function(e,i){if(this.baseAxis==this.xAxis){var n=e.locationX;b.isNumber(n)||(n=.5);var r=this.getEndLocation(e.dataItem);return r-(r-this.getStartLocation(e.dataItem))*n}return t.prototype.getBulletLocationX.call(this,e,i)},e.prototype.getBulletLocationY=function(e,i){if(this.baseAxis==this.yAxis){var n=e.locationY;b.isNumber(n)||(n=.5);var r=this.getEndLocation(e.dataItem);return r-(r-this.getStartLocation(e.dataItem))*n}return t.prototype.getBulletLocationY.call(this,e,i)},e.prototype.getAdjustedXLocation=function(e,i){if(this.baseAxis==this.xAxis){var n=.5;return e&&(n=e.locations[i]),b.isNumber(n)||(n=.5),this._endLocation-(this._endLocation-this._startLocation)*n}return t.prototype.getAdjustedXLocation.call(this,e,i)},e.prototype.getAdjustedYLocation=function(e,i){if(this.baseAxis==this.yAxis){var n=.5;return e&&(n=e.locations[i]),b.isNumber(n)||(n=.5),this._endLocation-(this._endLocation-this._startLocation)*n}return t.prototype.getAdjustedXLocation.call(this,e,i)},e.prototype.fixVerticalCoordinate=function(t){var e=this.columns.template.pixelPaddingBottom,i=-this.columns.template.pixelPaddingTop,n=this.yAxis.axisLength+e;return g.fitToRange(t,i,n)},e.prototype.fixHorizontalCoordinate=function(t){var e=this.columns.template.pixelPaddingLeft,i=this.columns.template.pixelPaddingRight,n=-e,r=this.xAxis.axisLength+i;return g.fitToRange(t,n,r)},e.prototype.disposeData=function(){t.prototype.disposeData.call(this),this.columns.clear()},e}(r.a);c.c.registeredClasses.ColumnSeries=P,c.c.registeredClasses.ColumnSeriesDataItem=_},"5xph":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("C6dT"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="AxisBullet",e.location=.5,e.isMeasured=!1,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"location",{get:function(){return this.getPropertyValue("location")},set:function(t){this.setPropertyValue("location",t,!0)},enumerable:!0,configurable:!0}),e.prototype.setDisabled=function(e){var i=t.prototype.setDisabled.call(this,e);return this.axis&&this.axis.invalidateDataItems(),i},e}(r.a);a.c.registeredClasses.AxisBullet=o},"6Ah2":function(t,e,i){"use strict";var n=i("0sYB"),r=i("X/sl").filter,a=i("ugpH"),o=i("J+FZ"),s=a("filter"),l=o("filter");n({target:"Array",proto:!0,forced:!s||!l},{filter:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},"6EAy":function(t,e,i){var n=i("6aQQ");t.exports=!n(function(){return Object.isExtensible(Object.preventExtensions({}))})},"6WsA":function(t,e,i){var n=i("lCww"),r=i("JZRr"),a=i("0irS"),o=i("8+rI").f;t.exports=function(t){var e=n.Symbol||(n.Symbol={});r(e,t)||o(e,t,{value:a.f(t)})}},"6aQQ":function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},"7W4+":function(t,e,i){var n=i("xaIW");t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},"7X7h":function(t,e,i){var n=i("swFJ");t.exports=function(t){return Object(n(t))}},"7XB+":function(t,e,i){"use strict";i.d(e,"a",function(){return c});var n=i("m4/l"),r=i("P/bD"),a=i("Tjl+"),o=i("MipW"),s=i("aCit"),l=i("ScGY"),u=i("v9UT"),h=i("Mtpk"),c=function(t){function e(){var e=t.call(this)||this;return e._dateFormat="yyyy-MM-dd",e._inputDateFormat="yyyy-MM-dd",e._utc=!1,e._firstDayOfWeek=1,e._months=["January","February","March","April","May","June","July","August","September","October","November","December"],e._monthsShort=["Jan","Feb","Mar","Apr","May(short)","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],e._weekdays=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],e._weekdaysShort=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],e._outputFormat="svg",e.capitalize=!0,e.className="DateFormatter",e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"language",{get:function(){return this._language},set:function(t){this._language=t,this.dateFormat=this._language.translate("_date")},enumerable:!0,configurable:!0}),e.prototype.format=function(t,e){var i,n;if(this.language||(this.sprite?this.language=this.sprite.language:this.language=new r.a),void 0!==e&&""!==e||(e=this._dateFormat),n=h.isString(t)?this.parse(t):u.anyToDate(t),e instanceof Object)return this.intlLocales?new Intl.DateTimeFormat(this.intlLocales,e).format(n):new Intl.DateTimeFormat(void 0,e).format(n);e=u.cleanFormat(e);var a=this.parseFormat(e);return h.hasValue(this.timezoneOffset)&&n.setMinutes(n.getMinutes()+n.getTimezoneOffset()-this.timezoneOffset),h.isNumber(n.getTime())?(i=this.applyFormat(n,a,this.language),this.capitalize&&(i=i.replace(/^.{1}/,i.substr(0,1).toUpperCase())),i):this.language.translate("Invalid date")},e.prototype.parseFormat=function(t){var e=this.getCache(t);if(h.hasValue(e))return e;for(var i={template:"",parts:[]},n=Object(o.b)().chunk(t,!0),r=0;r<n.length;r++){var a=n[r];if("value"===a.type){a.text.match(/^date$/i)&&h.isString(this._dateFormat)&&(a.text=this._dateFormat);var s=a.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);if(s)for(var u=0;u<s.length;u++)i.parts.push(s[u]),a.text=a.text.replace(s[u],l.d)}i.template+=a.text}return this.setCache(t,i),i},e.prototype.applyFormat=function(t,e,i){var n,r,a,o,s,h,c,p,d=e.template,f=t.getTimezoneOffset(),g=t.getTime();this.utc?(n=t.getUTCFullYear(),r=t.getUTCMonth(),a=t.getUTCDay(),o=t.getUTCDate(),s=t.getUTCHours(),h=t.getUTCMinutes(),c=t.getUTCSeconds(),p=t.getUTCMilliseconds()):(n=t.getFullYear(),r=t.getMonth(),a=t.getDay(),o=t.getDate(),s=t.getHours(),h=t.getMinutes(),c=t.getSeconds(),p=t.getMilliseconds());for(var y=0,m=e.parts.length;y<m;y++){var v="";switch(e.parts[y]){case"G":v=i.translate(n<0?"_era_bc":"_era_ad");break;case"yyyy":v=Math.abs(n).toString(),n<0&&(v+=i.translate("_era_bc"));break;case"yyy":case"yy":case"y":v=Math.abs(n).toString().substr(-e.parts[y].length),n<0&&(v+=i.translate("_era_bc"));break;case"YYYY":case"YYY":case"YY":case"Y":var b=n;1==u.getWeek(t)&&a>1&&b--,v="YYYY"==e.parts[y]?Math.abs(b).toString():Math.abs(b).toString().substr(-e.parts[y].length),b<0&&(v+=i.translate("_era_bc"));break;case"u":break;case"MMMMM":v=i.translate(this._months[r]).substr(0,1);break;case"MMMM":v=i.translate(this._months[r]);break;case"MMM":v=i.translate(this._monthsShort[r]);break;case"MM":v=u.padString(r+1,2,"0");break;case"M":v=(r+1).toString();break;case"ww":v=u.padString(u.getWeek(t,this.utc),2,"0");break;case"w":v=u.getWeek(t,this.utc).toString();break;case"W":v=u.getMonthWeek(t,this.utc).toString();break;case"dd":v=u.padString(o,2,"0");break;case"d":v=o.toString();break;case"DD":case"DDD":v=u.padString(u.getYearDay(t,this.utc).toString(),e.parts[y].length,"0");break;case"D":v=u.getYearDay(t,this.utc).toString();break;case"F":case"g":break;case"t":v=i.translateFunc("_dateOrd").call(this,o);break;case"E":v=(a||7).toString();break;case"EE":v=u.padString((a||7).toString(),2,"0");break;case"EEE":case"eee":v=i.translate(this._weekdaysShort[a]);break;case"EEEE":case"eeee":v=i.translate(this._weekdays[a]);break;case"EEEEE":case"eeeee":v=i.translate(this._weekdays[a]).substr(0,1);break;case"e":case"ee":v=(a-this.firstDayOfWeek+1).toString(),"ee"==e.parts[y]&&(v=u.padString(v,2,"0"));break;case"a":v=s>=12?i.translate("PM"):i.translate("AM");break;case"aa":v=s>=12?i.translate("P.M."):i.translate("A.M.");break;case"aaa":v=s>=12?i.translate("P"):i.translate("A");break;case"h":v=u.get12Hours(s).toString();break;case"hh":v=u.padString(u.get12Hours(s),2,"0");break;case"H":v=s.toString();break;case"HH":v=u.padString(s,2,"0");break;case"K":v=u.get12Hours(s,0).toString();break;case"KK":v=u.padString(u.get12Hours(s,0),2,"0");break;case"k":v=(s+1).toString();break;case"kk":v=u.padString(s+1,2,"0");break;case"m":v=h.toString();break;case"mm":v=u.padString(h,2,"0");break;case"s":v=c.toString();break;case"ss":v=u.padString(c,2,"0");break;case"S":case"SS":case"SSS":v=Math.round(p/1e3*Math.pow(10,e.parts[y].length)).toString();break;case"x":v=g.toString();break;case"n":case"nn":case"nnn":v=u.padString(p,e.parts[y].length,"0");break;case"z":v=u.getTimeZone(t,!1,!1,this.utc);break;case"zz":v=u.getTimeZone(t,!0,!1,this.utc);break;case"zzz":v=u.getTimeZone(t,!1,!0,this.utc);break;case"zzzz":v=u.getTimeZone(t,!0,!0,this.utc);break;case"Z":case"ZZ":var x=Math.abs(f)/60,_=Math.floor(x),P=60*x-60*_;this.utc&&(_=0,P=0),"Z"==e.parts[y]?(v="GMT",v+=f>0?"-":"+",v+=u.padString(_,2)+":"+u.padString(P,2)):(v=f>0?"-":"+",v+=u.padString(_,2)+u.padString(P,2));break;case"i":v=t.toISOString();break;case"I":v=t.toUTCString()}d=d.replace(l.d,v)}return d},e.prototype.parse=function(t,e){if(h.hasValue(e)||(e=this.inputDateFormat),t instanceof Date)return t;if("number"==typeof t)return new Date(t);var i;"string"!=typeof t&&(t=t.toString()),this.language||(this.sprite?this.language=this.sprite.language:this.language=new r.a);var n="";e=(e=u.cleanFormat(e)).substr(0,t.length);for(var a=this.parseFormat(e),o={year:-1,year3:-1,year2:-1,year1:-1,month:-1,monthShort:-1,monthLong:-1,weekdayShort:-1,weekdayLong:-1,day:-1,yearDay:-1,week:-1,hourBase0:-1,hour12Base0:-1,hourBase1:-1,hour12Base1:-1,minute:-1,second:-1,millisecond:-1,millisecondDigits:-1,am:-1,zone:-1,timestamp:-1,iso:-1},s={year:1970,month:0,day:1,hour:0,minute:0,second:0,millisecond:0,timestamp:null,offset:0,utc:this.utc},l=0,c=0,p=0;p<a.parts.length;p++){switch(c=p+l+1,a.parts[p]){case"yyyy":case"YYYY":n+="([0-9]{4})",o.year=c;break;case"yyy":case"YYY":n+="([0-9]{3})",o.year3=c;break;case"yy":case"YY":n+="([0-9]{2})",o.year2=c;break;case"y":case"Y":n+="([0-9]{1})",o.year1=c;break;case"MMMM":n+="("+this.getStringList(this._months).join("|")+")",o.monthLong=c;break;case"MMM":n+="("+this.getStringList(this._monthsShort).join("|")+")",o.monthShort=c;break;case"MM":case"M":n+="([0-9]{2}|[0-9]{1})",o.month=c;break;case"ww":case"w":n+="([0-9]{2}|[0-9]{1})",o.week=c;break;case"dd":case"d":n+="([0-9]{2}|[0-9]{1})",o.day=c;break;case"DDD":case"DD":case"D":n+="([0-9]{3}|[0-9]{2}|[0-9]{1})",o.yearDay=c;break;case"dddd":n+="("+this.getStringList(this._weekdays).join("|")+")",o.weekdayLong=c;break;case"ddd":n+="("+this.getStringList(this._weekdaysShort).join("|")+")",o.weekdayShort=c;break;case"aaa":case"aa":case"a":n+="("+this.getStringList(["AM","PM","A.M.","P.M.","A","P"]).join("|")+")",o.am=c;break;case"hh":case"h":n+="([0-9]{2}|[0-9]{1})",o.hour12Base1=c;break;case"HH":case"H":n+="([0-9]{2}|[0-9]{1})",o.hourBase0=c;break;case"KK":case"K":n+="([0-9]{2}|[0-9]{1})",o.hour12Base0=c;break;case"kk":case"k":n+="([0-9]{2}|[0-9]{1})",o.hourBase1=c;break;case"mm":case"m":n+="([0-9]{2}|[0-9]{1})",o.minute=c;break;case"ss":case"s":n+="([0-9]{2}|[0-9]{1})",o.second=c;break;case"SSS":case"SS":case"S":n+="([0-9]{3}|[0-9]{2}|[0-9]{1})",o.millisecond=c,o.millisecondDigits=a.parts[p].length;break;case"nnn":case"nn":case"n":n+="([0-9]{3}|[0-9]{2}|[0-9]{1})",o.millisecond=c;break;case"x":n+="([0-9]{1,})",o.timestamp=c;break;case"Z":n+="GMT([-+]+[0-9]{2}:[0-9]{2})",o.zone=c;break;case"ZZ":n+="([\\-+]+[0-9]{2}[0-9]{2})",o.zone=c;break;case"i":n+="([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]{3})([Zz]?)",o.iso=c,l+=7;break;case"G":case"YYYY":case"YYY":case"YY":case"Y":case"MMMMM":case"W":case"EEEEE":case"EEEE":case"EEE":case"EE":case"E":case"eeeee":case"eeee":case"eee":case"ee":case"e":case"zzzz":case"zzz":case"zz":case"z":case"t":l--}n+="[^0-9]*"}var d=new RegExp(n),f=t.match(d);if(f){if(o.year>-1&&(s.year=parseInt(f[o.year])),o.year3>-1){var g=parseInt(f[o.year3]);g+=1e3,s.year=g}if(o.year2>-1){g=parseInt(f[o.year2]);g+=g>50?1e3:2e3,s.year=g}if(o.year1>-1){g=parseInt(f[o.year1]);g=10*Math.floor((new Date).getFullYear()/10)+g,s.year=g}if(o.monthLong>-1&&(s.month=this.resolveMonth(f[o.monthLong])),o.monthShort>-1&&(s.month=this.resolveShortMonth(f[o.monthShort])),o.month>-1&&(s.month=parseInt(f[o.month])-1),o.week>-1&&-1===o.day&&(s.month=0,s.day=u.getDayFromWeek(parseInt(f[o.week]),s.year,1,this.utc)),o.day>-1&&(s.day=parseInt(f[o.day])),o.yearDay>-1&&(s.month=0,s.day=parseInt(f[o.yearDay])),o.hourBase0>-1&&(s.hour=parseInt(f[o.hourBase0])),o.hourBase1>-1&&(s.hour=parseInt(f[o.hourBase1])-1),o.hour12Base0>-1)11==(g=parseInt(f[o.hour12Base0]))&&(g=0),o.am>-1&&!this.isAm(f[o.am])&&(g+=12),s.hour=g;if(o.hour12Base1>-1)12==(g=parseInt(f[o.hour12Base1]))&&(g=0),o.am>-1&&!this.isAm(f[o.am])&&(g+=12),s.hour=g;if(o.minute>-1&&(s.minute=parseInt(f[o.minute])),o.second>-1&&(s.second=parseInt(f[o.second])),o.millisecond>-1){g=parseInt(f[o.millisecond]);2==o.millisecondDigits?g*=10:1==o.millisecondDigits&&(g*=100),s.millisecond=g}if(o.timestamp>-1&&(s.timestamp=parseInt(f[o.timestamp])),o.zone>-1){var y=f[o.zone].replace(/:/,""),m=h.getValue(y.match(/([+\-]?)([0-9]{2})([0-9]{2})/)),v=m[1],b=m[2],x=m[3],_=60*parseInt(b)+parseInt(x);"+"==v&&(_*=-1);var P=_-(new Date).getTimezoneOffset();s.offset=P}o.iso>-1&&("Z"!=f[o.iso+7]&&"z"!=f[o.iso+7]||(s.utc=!0),s.year=h.toNumber(f[o.iso+0]),s.month=h.toNumber(f[o.iso+1])-1,s.day=h.toNumber(f[o.iso+2]),s.hour=h.toNumber(f[o.iso+3]),s.minute=h.toNumber(f[o.iso+4]),s.second=h.toNumber(f[o.iso+5]),s.millisecond=h.toNumber(f[o.iso+6])),i=s.utc?new Date(Date.UTC(s.year,s.month,s.day,s.hour,s.minute,s.second,s.millisecond)):new Date(s.year,s.month,s.day,s.hour,s.minute,s.second,s.millisecond)}else i=new Date(t);return i},e.prototype.resolveMonth=function(t){var e=this._months.indexOf(t);return e>-1?e:this.language&&!this.language.isDefault()&&(e=this.language.translateAll(this._months).indexOf(t))>-1?e:0},e.prototype.resolveShortMonth=function(t){var e=this._monthsShort.indexOf(t);return e>-1?e:this.language&&!this.language.isDefault()&&(e=this.language.translateAll(this._monthsShort).indexOf(t))>-1?e:0},e.prototype.isAm=function(t){return this.getStringList(["AM","A.M.","A"]).indexOf(t.toUpperCase())>-1},e.prototype.invalidateSprite=function(){this.sprite&&this.sprite.invalidate()},e.prototype.getStringList=function(t){for(var e=[],i=0;i<t.length;i++)e.push(u.escapeForRgex(t[i])),this.language&&!this.language.isDefault()&&e.push(u.escapeForRgex(this.language.translate(t[i])));return e},Object.defineProperty(e.prototype,"dateFormat",{get:function(){return this._dateFormat},set:function(t){this._dateFormat=t,this.invalidateSprite()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputDateFormat",{get:function(){return this._inputDateFormat},set:function(t){this._inputDateFormat=t,this.invalidateSprite()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"intlLocales",{get:function(){return this._intlLocales},set:function(t){this._intlLocales=t,this.invalidateSprite()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"utc",{get:function(){return this._utc},set:function(t){this._utc=t,this.invalidateSprite()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"timezoneOffset",{get:function(){return this._timezoneOffset},set:function(t){this._timezoneOffset!=t&&(this._timezoneOffset=t,this.invalidateSprite())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"firstDayOfWeek",{get:function(){return this._firstDayOfWeek},set:function(t){this._firstDayOfWeek=t,this.invalidateSprite()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputFormat",{get:function(){return this._outputFormat},set:function(t){this._outputFormat=t.toLowerCase(),this.invalidateSprite()},enumerable:!0,configurable:!0}),e}(a.a);s.c.registeredClasses.DateFormatter=c},"7bEX":function(t,e,i){var n=i("3weC"),r=i("Ur2B");t.exports=function(t){var e=r(t);if("function"!=typeof e)throw TypeError(String(t)+" is not iterable");return n(e.call(t))}},"7dku":function(t,e,i){var n=i("HnbP"),r=i("7X7h"),a=i("tNpr"),o=i("tHyI"),s=function(t){return function(e,i,s,l){n(i);var u=r(e),h=a(u),c=o(u.length),p=t?c-1:0,d=t?-1:1;if(s<2)for(;;){if(p in h){l=h[p],p+=d;break}if(p+=d,t?p<0:c<=p)throw TypeError("Reduce of empty array with no initial value")}for(;t?p>=0:c>p;p+=d)p in h&&(l=i(l,h[p],p,u));return l}};t.exports={left:s(!1),right:s(!0)}},"7gIX":function(t,e,i){"use strict";var n=i("UseD"),r=i("Nfo5"),a=i("6aQQ"),o=n.aTypedArray,s=n.aTypedArrayConstructor,l=n.exportTypedArrayMethod,u=[].slice;l("slice",function(t,e){for(var i=u.call(o(this),t,e),n=r(this,this.constructor),a=0,l=i.length,h=new(s(n))(l);l>a;)h[a]=i[a++];return h},a(function(){new Int8Array(1).slice()}))},"8+rI":function(t,e,i){var n=i("3sMl"),r=i("t+NF"),a=i("3weC"),o=i("EErT"),s=Object.defineProperty;e.f=n?s:function(t,e,i){if(a(t),e=o(e,!0),a(i),r)try{return s(t,e,i)}catch(t){}if("get"in i||"set"in i)throw TypeError("Accessors not supported");return"value"in i&&(t[e]=i.value),t}},"85D4":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("ohjg"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="DesaturateFilter",e.feColorMatrix=e.paper.add("feColorMatrix"),e.feColorMatrix.attr({type:"saturate"}),e.filterPrimitives.push(e.feColorMatrix),e.width=120,e.height=120,e.saturation=0,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"saturation",{get:function(){return this.properties.saturation},set:function(t){this.properties.saturation=t,this.feColorMatrix.attr({values:t.toString()})},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.DesaturateFilter=o},"8Cf/":function(t,e,i){"use strict";var n=i("z3p0"),r=i("3weC"),a=i("6aQQ"),o=i("/arR"),s=RegExp.prototype,l=s.toString,u=a(function(){return"/a/b"!=l.call({source:"a",flags:"b"})}),h="toString"!=l.name;(u||h)&&n(RegExp.prototype,"toString",function(){var t=r(this),e=String(t.source),i=t.flags;return"/"+e+"/"+String(void 0===i&&t instanceof RegExp&&!("flags"in s)?o.call(t):i)},{unsafe:!0})},"8EhG":function(t,e,i){"use strict";i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("Vs7R"),a=i("aCit"),o=i("MIZb"),s=i("Mtpk"),l=function(t){function e(e){var i=t.call(this)||this;i.axis=e,i.element=i.paper.add("path"),i.className="AxisFill",i.isMeasured=!1,i.location=0,i.above=!1;var n=new o.a;return i.fill=n.getFor("alternativeBackground"),i.fillOpacity=0,i.applyTheme(),i}return Object(n.c)(e,t),e.prototype.setDisabled=function(e){var i=t.prototype.setDisabled.call(this,e);return this.axis&&this.axis.invalidateDataItems(),i},e.prototype.draw=function(){t.prototype.draw.call(this),this.__disabled||this.disabled||this.axis&&s.isNumber(this.startPosition)&&s.isNumber(this.endPosition)&&(this.fillPath=this.axis.getPositionRangePath(this.startPosition,this.endPosition),this.path=this.fillPath,this.isMeasured&&this.measure())},Object.defineProperty(e.prototype,"startPosition",{get:function(){return this.getPropertyValue("startPosition")},set:function(t){this.setPropertyValue("startPosition",t),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endPosition",{get:function(){return this.getPropertyValue("endPosition")},set:function(t){this.setPropertyValue("endPosition",t),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"location",{get:function(){return this.getPropertyValue("location")},set:function(t){this.setPropertyValue("location",t,!0)},enumerable:!0,configurable:!0}),e.prototype.setPath=function(t){return!!this.setPropertyValue("path",t)&&(this.element.attr({d:t}),!0)},Object.defineProperty(e.prototype,"above",{get:function(){return this.getPropertyValue("above")},set:function(t){this.setPropertyValue("above",t,!0)},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.AxisFill=l},"8ZqG":function(t,e,i){"use strict";i.d(e,"a",function(){return o}),e.c=s,e.d=l,e.b=u,e.e=function(t){if(a.hasValue(t)&&!l(t))return u(t);return t};var n=i("aCit"),r=i("hxI2"),a=i("Mtpk"),o=function(){function t(t){this._value=t}return Object.defineProperty(t.prototype,"rgb",{get:function(){return this._value},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hex",{get:function(){return this._value?r.rgbToHex(this._value):"none"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rgba",{get:function(){return this._value?r.rgbToRGBA(this._value):"none"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"alpha",{get:function(){return null!=this._value&&null!=this._value.a?this._value.a:1},set:function(t){this._value&&(this._value.a=t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lightColor",{get:function(){return this._lightColor||(this._lightColor=new t({r:255,g:255,b:255})),this._lightColor},set:function(t){this._lightColor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"darkColor",{get:function(){return this._darkColor||(this._darkColor=new t({r:0,g:0,b:0})),this._darkColor},set:function(t){this._darkColor=t},enumerable:!0,configurable:!0}),t.prototype.toString=function(){return this.alpha<1?this.rgba:this.hex},t.prototype.lighten=function(e){return new t(r.lighten(this.rgb,e))},t.prototype.brighten=function(e){return new t(r.brighten(this.rgb,e))},t.prototype.saturate=function(e){return new t(r.saturate(this.rgb,e))},Object.defineProperty(t.prototype,"alternative",{get:function(){if(null!=this.rgb)return r.isLight(this.rgb)?this.darkColor:this.lightColor;throw new Error("Color does not exist")},enumerable:!0,configurable:!0}),t}();function s(t,e){if(!a.hasValue(t))return new o(void 0);if("string"==typeof t){var i="_color_"+t+"_"+(e||"1"),s=n.c.getCache(i);if(s)return new o({r:s.r,g:s.g,b:s.b,a:s.a});var l=r.rgb(t,e);return n.c.setCache(i,l),new o(l)}return t instanceof o?(a.hasValue(e)&&(t.alpha=e),t):new o(t)}function l(t){return t instanceof o}function u(t){return s(t)}},"8nEM":function(t,e){t.exports=Math.sign||function(t){return 0==(t=+t)||t!=t?t:t<0?-1:1}},"8xQt":function(t,e,i){"use strict";var n=i("0sYB"),r=i("HgTb");n({target:"Array",proto:!0,forced:[].forEach!=r},{forEach:r})},"97TN":function(t,e,i){var n=i("vfdp");t.exports=n.Promise},"9HTT":function(t,e,i){var n=i("0sYB"),r=i("3weC"),a=i("Kg2n"),o=i("JZRr"),s=i("6aQQ"),l=i("8+rI"),u=i("gxUV"),h=i("Ox5T"),c=i("Pm8L");n({target:"Reflect",stat:!0,forced:s(function(){var t=l.f({},"a",{configurable:!0});return!1!==Reflect.set(h(t),"a",1,t)})},{set:function t(e,i,n){var s,p,d=arguments.length<4?e:arguments[3],f=u.f(r(e),i);if(!f){if(a(p=h(e)))return t(p,i,n,d);f=c(0)}if(o(f,"value")){if(!1===f.writable||!a(d))return!1;if(s=u.f(d,i)){if(s.get||s.set||!1===s.writable)return!1;s.value=n,l.f(d,i,s)}else l.f(d,i,c(0,n));return!0}return void 0!==f.set&&(f.set.call(d,n),!0)}})},"9PYb":function(t,e,i){i("eygo")("Uint8",function(t){return function(e,i,n){return t(this,e,i,n)}},!0)},"9XRO":function(t,e,i){var n=i("tNpr"),r=i("swFJ");t.exports=function(t){return n(r(t))}},"9ZsQ":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("ZoDA"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="DateAxisBreak",e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"startDate",{get:function(){return this.getPropertyValue("startDate")},set:function(t){this.setPropertyValue("startDate",t)&&(this.startValue=t.getTime(),this.axis&&(this.axis.invalidate(),this.axis.invalidateSeries()))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endDate",{get:function(){return this.getPropertyValue("endDate")},set:function(t){this.setPropertyValue("endDate",t)&&(this.endValue=t.getTime(),this.axis&&(this.axis.invalidate(),this.axis.invalidateSeries()))},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.DateAxisBreak=o},"9bPn":function(t,e,i){"use strict";i("HMf+")("WeakSet",function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},i("NNEa"))},"9lsj":function(t,e,i){var n=i("0sYB"),r=i("3sMl"),a=i("3weC"),o=i("EErT"),s=i("8+rI");n({target:"Reflect",stat:!0,forced:i("6aQQ")(function(){Reflect.defineProperty(s.f({},1,{value:1}),1,{value:2})}),sham:!r},{defineProperty:function(t,e,i){a(t);var n=o(e,!0);a(i);try{return s.f(t,n,i),!0}catch(t){return!1}}})},A6AV:function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("Tjl+"),a=i("x79X"),o=i("1yyj"),s=i("v9UT"),l=i("hJ5i"),u=i("Mtpk"),h=function(t){function e(){var e=t.call(this)||this;return e._disabled=!1,e.hasProperties=!1,e.values={},e.categories={},e.dates={},e.locations={},e.workingLocations={},e.properties={},e.sprites=[],e.isTemplate=!1,e._index=null,e._visible=!0,e._hidden=!1,e._ignoreMinMax=!1,e.hasChildren={},e.isHiding=!1,e._valueAnimations={},e._locationAnimations={},e.className="DataItem",e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"adapter",{get:function(){return this._adapterO||(this._adapterO=new a.a(this)),this._adapterO},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"index",{get:function(){return this.component&&null!=this._index?this._index:-1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"animations",{get:function(){return this._animations||(this._animations=[],this._disposers.push(new o.b(this._animations))),this._animations},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"visible",{get:function(){return!this._hidden&&this._visible},set:function(t){t&&(this.hidden=!1),this._visible!=t&&this.setVisibility(t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hidden",{get:function(){return this._hidden},set:function(t){this._hidden!=t&&(this._hidden=t,t?this.setVisibility(!1):this.setVisibility(!0,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"__disabled",{get:function(){return this._disabled},set:function(t){this._disabled=t,l.each(this.sprites,function(e){e.__disabled=t})},enumerable:!0,configurable:!0}),e.prototype.setVisibility=function(t,e){if(l.each(this.sprites,function(e){t?e.visible=e.defaultState.properties.visible:e.hiddenState?e.visible=e.hiddenState.properties.visible:e.visible=!1}),this._visible=t,this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("visibilitychanged")){var i={type:"visibilitychanged",target:this,visible:t};this.events.dispatchImmediately("visibilitychanged",i)}},e.prototype.show=function(t,e,i){var n,r=this;if(!this.hidden)return this.setVisibility(!0,!0),this.isHiding=!1,this._hideDisposer&&this.removeDispose(this._hideDisposer),i&&l.each(i,function(i){n=r.setWorkingValue(i,r.values[i].value,t,e)}),l.each(this.sprites,function(i){var n=i.show(t);null==n||n.isFinished()||(r._disposers.push(n),null!=e&&e>0&&n.delay(e))}),n},e.prototype.dispose=function(){t.prototype.dispose.call(this),l.each(this.sprites,function(t){t.dispose()}),this.sprites=[]},e.prototype.hide=function(t,e,i,n){var r=this;if(this.isHiding=!0,l.each(this.sprites,function(i){var n=i.hide(t);null==n||n.isFinished()||(r._disposers.push(n),null!=e&&e>0&&n.delay(e))}),u.isNumber(i)&&n){var a;if(l.each(n,function(n){var o=r.setWorkingValue(n,i,t,e);o&&(a=o)}),a&&!a.isFinished())return this._hideDisposer=a.events.on("animationended",function(){r.setVisibility(!1,!0),r.isHiding=!1}),this._disposers.push(this._hideDisposer),a;this.isHiding=!1,this.setVisibility(!1,!0)}else this.isHiding=!1,this.setVisibility(!1)},e.prototype.getDuration=function(t){if(!u.isNumber(t)){var e=this.component;e&&(t=e.interpolationDuration)}if(null!=t)return this._adapterO?this._adapterO.apply("duration",t):t},e.prototype.getValue=function(t,e){if(t&&this.component){e||(e=this.component.dataFields[t+"Show"])||(e="value");var i=this.values[t][e];return this._adapterO&&this._adapterO.isEnabled("value")?this._adapterO.apply("value",{value:i,field:t}).value:i}},e.prototype.getWorkingValue=function(t){if(t&&this.component){var e=this.component.dataFields[t+"Show"];return e||(e="workingValue"),this._adapterO?this._adapterO.apply("workingValue",{workingValue:this.values[t][e],field:t}).workingValue:this.values[t][e]}},e.prototype.getActualWorkingValue=function(t){return this.values[t].workingValue},e.prototype.setValue=function(t,e,i,n){var r=this.values[t].value,a=this.getDuration(i);if(r!==(e=u.toNumber(e))){if(this.values[t].value=e,this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("valuechanged")){var o={type:"valuechanged",target:this,property:t};this.events.dispatchImmediately("valuechanged",o)}this.component&&this.component.handleDataItemValueChange(this,t)}this.setWorkingValue(t,e,a,n)},e.prototype.setCalculatedValue=function(t,e,i){if(this.values[t][i]!==e&&u.isNumber(e)){if(this.values[t][i]=e,this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("calculatedvaluechanged")){var n={type:"calculatedvaluechanged",target:this,property:t};this.events.dispatchImmediately("calculatedvaluechanged",n)}this.component&&this.component.handleDataItemCalculatedValueChange(this,t)}},e.prototype.setWorkingValue=function(t,e,i,n){if(u.isNumber(this.values[t].value)){var r=this.getDuration(i),a=this.values[t].workingValue;if(null!=r&&r>0&&u.isNumber(a)&&this.component){if(a!=e){var o=this.animate({childObject:this.values[t],property:"workingValue",from:a,to:e,dummyData:t},r,this.component.interpolationEasing);return null!=n&&o.delay(n),o.events.on("animationstarted",this.handleInterpolationProgress,this),o.events.on("animationprogress",this.handleInterpolationProgress,this),o.events.on("animationended",this.handleInterpolationProgress,this),this._valueAnimations[t]=o,o}(s=this._valueAnimations[t])&&s.stop(),this.values[t].workingValue=e}else{var s;if((s=this._valueAnimations[t])&&s.stop(),this.values[t].workingValue=e,this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("workingvaluechanged")){var l={type:"workingvaluechanged",target:this,property:t};this.events.dispatchImmediately("workingvaluechanged",l)}this.component&&this.component.handleDataItemWorkingValueChange(this,t)}}},e.prototype.setLocation=function(t,e,i,n){if(this.locations[t]!==e){if(this.locations[t]=e,this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("locationchanged")){var r={type:"locationchanged",target:this,property:t};this.events.dispatchImmediately("locationchanged",r)}this.component&&this.component.handleDataItemValueChange(this,t),this.setWorkingLocation(t,e,i,n)}},e.prototype.setWorkingLocation=function(t,e,i,n){var r=this.getDuration(i),a=this.workingLocations[t];if(null!=r&&r>0&&u.isNumber(a)&&this.component){if(a!=e){var o=this.animate({childObject:this.workingLocations,property:t,from:a,to:e,dummyData:t},r,this.component.interpolationEasing);return null!=n&&o.delay(n),o.events.on("animationstarted",this.handleInterpolationProgress,this),o.events.on("animationprogress",this.handleInterpolationProgress,this),o.events.on("animationended",this.handleInterpolationProgress,this),this._locationAnimations[t]=o,o}(s=this._locationAnimations[t])&&s.stop(),this.workingLocations[t]=e}else{var s;if((s=this._locationAnimations[t])&&s.stop(),this.workingLocations[t]=e,this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("workinglocationchanged")){var l={type:"workinglocationchanged",target:this,property:t};this.events.dispatchImmediately("workinglocationchanged",l)}this.component&&this.component.handleDataItemWorkingLocationChange(this,t)}},e.prototype.setDate=function(t,e,i){!u.isDate(e)&&this.component&&(e=this.component.dateFormatter.parse(e)),this.dates[t]!==e&&(this.dates[t]=e,this.setValue(t,e.getTime(),i))},e.prototype.getDate=function(t){return this._adapterO?this._adapterO.apply("date",{date:this.dates[t],field:t}).date:this.dates[t]},e.prototype.setProperty=function(t,e){if(this.properties[t]!==e){if(this.hasProperties=!0,this.properties[t]=e,this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("propertychanged")){var i={type:"propertychanged",target:this,property:t,value:e};this.events.dispatchImmediately("propertychanged",i)}this.component&&this.component.handleDataItemPropertyChange(this,t)}},e.prototype.setCategory=function(t,e){u.isString(e)||(e=u.castString(e)),this.categories[t]!==e&&(this.categories[t]=e)},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),e.dataContext&&(this.dataContext=s.copy(e.dataContext,{})),s.copyProperties(e.locations,this.locations),e._adapterO&&this.adapter.copyFrom(e._adapterO),this.component=e.component},Object.defineProperty(e.prototype,"opacity",{set:function(t){l.each(this.sprites,function(e){e.opacity=t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ignoreMinMax",{get:function(){return this._ignoreMinMax},set:function(t){if(this._ignoreMinMax=t,this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("propertychanged")){var e={type:"propertychanged",target:this,property:"ignoreMinMax",value:t};this.events.dispatchImmediately("propertychanged",e)}this.component&&this.component.handleDataItemPropertyChange(this,"ignoreMinMax")},enumerable:!0,configurable:!0}),e.prototype.animate=function(t,e,i){return new o.a(this,t,e,i).start()},e.prototype.handleInterpolationProgress=function(t){var e=t.target.animationOptions[0];if(e){if(this._eventDispatcher&&!this.__disabled&&this.events.isEnabled("workingvaluechanged")){var i={type:"workingvaluechanged",target:this,property:e.dummyData};this.events.dispatchImmediately("workingvaluechanged",i)}this.component&&this.component.handleDataItemWorkingValueChange(this,e.dummyData)}},e.prototype.hasValue=function(t){for(var e=0,i=t.length;e<i;e++){var n=this.values[t[e]];if(!n||!u.hasValue(n.value))return!1}return!0},Object.defineProperty(e.prototype,"depth",{get:function(){return this.parent?this.parent.depth+1:0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dataContext",{get:function(){return this._dataContext},set:function(t){this._dataContext=t},enumerable:!0,configurable:!0}),e.prototype.addSprite=function(t){t.dataItem&&t.dataItem!=this&&l.remove(t.dataItem.sprites,t),this.visible||t.hide(0),this.isHiding&&t.hide(),this.sprites.push(t),t.dataItem=this},e}(r.b)},AAkI:function(t,e,i){"use strict";i.d(e,"b",function(){return w}),i.d(e,"a",function(){return O});var n,r=i("m4/l"),a=i("Y9w3"),o=i("C6dT"),s=i("A6AV"),l=i("Uslz"),u=i("p9TX"),h=i("cxKZ"),c=i("VGgz"),p=i("vMqJ"),d=i("hD5A"),f=i("aCit"),g=i("MIZb"),y=i("Wglt"),m=i("Gg2j"),v=i("v9UT"),b=i("3Cxr"),x=i("hJ5i"),_=i("Mtpk"),P=i("TGuK"),w=function(t){function e(){var e=t.call(this)||this;return e.className="AxisDataItem",e.applyTheme(),e}return Object(r.c)(e,t),Object.defineProperty(e.prototype,"grid",{get:function(){if(!this._grid){var t=this.component;if(t){var e,i=void 0;if(this.isRange){if((i=t.axisRanges.template.grid).disabled)return;e=i.clone()}else{if((i=t.renderer.grid.template).disabled)return;e=t.renderer.grid.create(),this._disposers.push(new d.b(function(){t.renderer.grid.removeValue(e)}))}this.grid=e,e.shouldClone=!1,this._disposers.push(e),e.axis=this.component}}return this._grid},set:function(t){this._grid&&this._grid!=t&&(x.remove(this.sprites,this._grid),this._grid.dataItem=void 0),t&&(t.dataItem&&t.dataItem!=this&&(x.remove(t.dataItem.sprites,t),t.dataItem.grid=void 0),this.addSprite(t)),this._grid=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tick",{get:function(){if(!this._tick){var t=this.component;if(t){var e,i=void 0;if(this.isRange){if((i=t.axisRanges.template.tick).disabled)return;e=i.clone()}else{if((i=t.renderer.ticks.template).disabled)return;e=t.renderer.ticks.create(),this._disposers.push(new d.b(function(){t.renderer.ticks.removeValue(e)}))}this.tick=e,e.axis=this.component,e.shouldClone=!1,this._disposers.push(e)}}return this._tick},set:function(t){this._tick&&this._tick!=t&&(x.remove(this.sprites,this._tick),this._tick.dataItem=void 0),t&&(t.dataItem&&t.dataItem!=this&&(x.remove(t.dataItem.sprites,t),t.dataItem.tick=void 0),this.addSprite(t)),this._tick=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"label",{get:function(){if(!this._label){var t=this.component;if(t){var e,i=void 0;if(this.isRange){if((i=t.axisRanges.template.label).disabled)return;e=i.clone()}else{if((i=t.renderer.labels.template).disabled)return;e=t.renderer.labels.create(),this._disposers.push(new d.b(function(){t.renderer.labels.removeValue(e)}))}this._disposers.push(e),this.label=e,e.shouldClone=!1,e.axis=this.component,e.virtualParent=t}}return this._label},set:function(t){this._label&&this._label!=t&&(x.remove(this.sprites,this._label),this._label.dataItem=void 0),t&&(t.dataItem&&t.dataItem!=this&&(x.remove(t.dataItem.sprites,t),t.dataItem.label=void 0),this.addSprite(t)),this._label=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"axisFill",{get:function(){if(!this._axisFill){var t=this.component;if(t){var e,i=void 0;if(this.isRange){if(i=t.axisRanges.template.axisFill,!this.isTemplate&&i.disabled)return;e=i.clone()}else{if((i=t.renderer.axisFills.template).disabled)return;e=t.renderer.axisFills.create(),this._disposers.push(new d.b(function(){t.renderer.axisFills.removeValue(e)}))}this.axisFill=e,e.shouldClone=!1,this._disposers.push(e)}}return this._axisFill},set:function(t){this._axisFill&&this._axisFill!=t&&(x.remove(this.sprites,this._axisFill),this._axisFill.dataItem=void 0),t&&(t.dataItem&&t.dataItem!=this&&(x.remove(t.dataItem.sprites,t),t.dataItem.axisFill=void 0),t.axis=this.component,this.addSprite(t)),this._axisFill=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"text",{get:function(){return this._text},set:function(t){this._text=t,this._label&&(this._label.text=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"mask",{get:function(){return this._mask},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"contents",{get:function(){if(!this._contents){var t=new o.a;this.addSprite(t),t.isMeasured=!1,this._contents=t;var e=this.component;if(e){var i=e.renderer.createFill(this.component);i.disabled=!1,i.axis=e,this.addSprite(i),this._mask=i,t.mask=i}}return this._contents},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"axisBreak",{get:function(){return this._axisBreak},set:function(t){this._axisBreak&&this._axisBreak.dataItems.removeValue(this),t&&t.dataItems.push(this),this._axisBreak=t},enumerable:!0,configurable:!0}),e.prototype.validate=function(){this.component&&this.component.validateDataElement(this)},e.prototype.appendChildren=function(){this.component&&this.component.appendDataItem(this)},e.prototype.configOrder=function(t,e){return t==e?0:"language"==t?-1:"language"==e?1:"component"==t?-1:"component"==e?1:0},e.prototype.hasProperty=function(e){return"component"==e||t.prototype.hasProperty.call(this,e)},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.text=e.text,e.bullet&&(this.bullet=e.bullet.clone()),this.minPosition=e.minPosition,this.maxPosition=e.maxPosition},e.prototype.setVisibility=function(e,i){t.prototype.setVisibility.call(this,e,i),this._contents&&(this._contents.visible=e)},Object.defineProperty(e.prototype,"bullet",{get:function(){return this._bullet},set:function(t){this._bullet&&this._bullet!=t&&(x.remove(this.sprites,this._bullet),this._bullet.dataItem=void 0),this._bullet=t,t&&this.addSprite(t)},enumerable:!0,configurable:!0}),e}(s.a);!function(t){t[t.Start=0]="Start",t[t.Middle=.5]="Middle",t[t.End=1]="End"}(n||(n={}));var O=function(t){function e(){var i=t.call(this)||this;if(i._gridCount=10,i._series=new p.b,i.autoDispose=!0,i._axisItemCount=0,i.constructor===e)throw new Error("'Axis' cannot be instantiated directly. Please use a specific axis type.");i.hideTooltipWhileZooming=!0,i.minWidth=1e-4,i.minHeight=1e-4,i.className="Axis",i.shouldClone=!1,i.setPropertyValue("cursorTooltipEnabled",!0),i.toggleZoomOutButton=!0;var n=new g.a;i.title=new u.a,i.title.shouldClone=!1,i._disposers.push(i.title),i.setPropertyValue("startLocation",0),i.setPropertyValue("endLocation",1),i._dataItemsIterator=new y.ListIterator(i.dataItems,function(){return i.dataItems.create()}),i._dataItemsIterator.createNewItems=!0;var r=new h.a;i._disposers.push(r),r.label.padding(5,10,5,10),r.background.pointerLength=5,r.fitPointerToBounds=!0,r.background.filters.clear(),r.virtualParent=i;var a=r.background;return a.cornerRadius=0,a.fill=n.getFor("alternativeBackground"),a.stroke=a.fill,a.strokeWidth=1,a.fillOpacity=1,r.label.fill=n.getFor("alternativeText"),i.tooltip=r,i.readerHidden=!0,i.events.on("rangechangestarted",function(){i.series.each(function(t){t.hideTooltipWhileZooming&&(t.tooltip.hide(),t.tooltip.preventShow=!0)}),i.hideTooltipWhileZooming&&(i.tooltip.hide(),i.tooltip.preventShow=!0)},void 0,!1),i.events.on("rangechangeended",function(){i.series.each(function(t){t.hideTooltipWhileZooming&&(t.tooltip.hide(),t.tooltip.preventShow=!1)}),i.hideTooltipWhileZooming&&(i.tooltip.hide(),i.tooltip.preventShow=!1)},void 0,!1),i.applyTheme(),i}return Object(r.c)(e,t),e.prototype.fillRule=function(t,e){_.isNumber(e)||(e=t.index),e/2==Math.round(e/2)?(t.axisFill.__disabled=!0,t.axisFill.opacity=0):(t.axisFill.opacity=1,t.axisFill.__disabled=!1)},e.prototype.createDataItem=function(){return new w},e.prototype.invalidateLayout=function(){t.prototype.invalidateLayout.call(this),y.each(this.series.iterator(),function(t){t.invalidateLayout()})},e.prototype.invalidateSeries=function(){y.each(this.series.iterator(),function(t){t.invalidate()})},e.prototype.validateDataElements=function(){this._axisItemCount=0,this.ghostLabel&&(this.renderer.updateLabelElement(this.ghostLabel,this.start,this.end),this.ghostLabel.validate())},e.prototype.updateGridCount=function(){if(this.renderer){var t=this.axisLength/this.renderer.minGridDistance;t!=this._gridCount&&(this._gridCount=t,this.clearCache())}},e.prototype.validateLayout=function(){this.axisFullLength=this.axisLength/(this.end-this.start),t.prototype.validateLayout.call(this),this.updateGridCount();var e=this.renderer;e&&(e.updateAxisLine(),e.updateTooltip(),e.updateBaseGridElement()),this._prevLength!=this.axisLength&&(this.dispatchImmediately("lengthchanged"),this._prevLength=this.axisLength)},e.prototype.initRenderer=function(){},e.prototype.appendDataItem=function(t){var e=this.renderer,i=t.tick;i&&(i.above?i.parent=e.bulletsContainer:i.parent=e.gridContainer),t.label&&(t.label.parent=e);var n=t.axisFill;n&&(n.above?n.parent=e.bulletsContainer:n.parent=e.gridContainer);var r=t.grid;r&&(r.above?r.parent=e.bulletsContainer:r.parent=e.gridContainer),t.bullet&&(t.bullet.parent=e.bulletsContainer)},e.prototype.validate=function(){t.prototype.validate.call(this),this.validateLayout(),this.renderer.updateGridContainer()},e.prototype.validateAxisRanges=function(){var t=this;y.each(this.axisRanges.iterator(),function(e){t.appendDataItem(e),t.validateDataElement(e),e.grid&&e.grid.validate(),e.tick&&e.tick.validate(),e.axisFill&&e.axisFill.validate(),e.label&&e.label.validate()})},e.prototype.validateBreaks=function(){this._axisBreaks&&y.each(this._axisBreaks.iterator(),function(t){t.invalidate()})},e.prototype.processBreak=function(t){var e=t.newValue;e.parent=this.renderer.breakContainer,e.axis=this},e.prototype.registerSeries=function(t){var e=this;return this.series.moveValue(t),new d.c([new d.b(function(){e.series.removeValue(t)}),this.events.on("lengthchanged",t.invalidate,t,!1),this.events.on("lengthchanged",t.createMask,t,!1),this.events.on("startchanged",t.invalidate,t,!1),this.events.on("endchanged",t.invalidate,t,!1)])},Object.defineProperty(e.prototype,"renderer",{get:function(){return this._renderer},set:function(t){if(t!=this._renderer){this._renderer=t,t.chart=this.chart,t.axis=this,t.parent=this,this.title.parent=this,this.initRenderer(),this._disposers.push(t.gridContainer.events.on("maxsizechanged",this.invalidate,this,!1));var e=this.renderer.labels.create();this._disposers.push(e),e.dataItem=this.dataItems.template.clone(),e.text="L",e.parent=this.renderer,e.shouldClone=!1,e.fillOpacity=0,e.opacity=0,e.strokeOpacity=0,e.interactionsEnabled=!1,e.validate(),this.ghostLabel=e,this.events.on("beforedatavalidated",function(){e.text="L"},void 0,!1)}},enumerable:!0,configurable:!0}),e.prototype.positionToAngle=function(t){return this.renderer.positionToAngle(t)},e.prototype.pointToPosition=function(t){return this.renderer.pointToPosition(t)},e.prototype.positionToCoordinate=function(t){return this.renderer.positionToCoordinate(t)},e.prototype.getAnyRangePath=function(t,e){return this.renderer.getPositionRangePath(t,e)},e.prototype.anyToPosition=function(t){return 0},e.prototype.anyToPoint=function(t){return{x:0,y:0,angle:0}},e.prototype.getPositionRangePath=function(t,e){return this.renderer?this.renderer.getPositionRangePath(t,e):""},Object.defineProperty(e.prototype,"axisLength",{get:function(){return this.renderer?this.renderer.axisLength:0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cursorTooltipEnabled",{get:function(){return this.getPropertyValue("cursorTooltipEnabled")},set:function(t){this.setPropertyValue("cursorTooltipEnabled",t)&&(t&&this.renderer?this.renderer.updateTooltip():this.tooltip&&this.tooltip.hide(0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"toggleZoomOutButton",{get:function(){return this.getPropertyValue("toggleZoomOutButton")},set:function(t){this.setPropertyValue("toggleZoomOutButton",t)},enumerable:!0,configurable:!0}),e.prototype.hideTooltip=function(e){t.prototype.hideTooltip.call(this,e),this._tooltipPosition=void 0},e.prototype.showTooltipAtPosition=function(t,e){var i=this._tooltip;if(!i||this.dataItems.length<=0)this._tooltipPosition=void 0;else{if(e||(t=this.toAxisPosition(t)),!_.isNumber(t)||t<this.start||t>this.end)return i.hide(0),void(this._tooltipPosition=void 0);var n=this.renderer;i.parent||(i.parent=this.tooltipContainer);var r=n.tooltipLocation,a=this.getCellStartPosition(t),o=this.getCellEndPosition(t);if("fixed"==this.tooltipPosition&&(t=m.ceil(a+(o-a)*r,4)),t=m.fitToRange(t,this.start,this.end),this._tooltipPosition!=t){this._tooltipPosition=t;var s=n.tooltipLocation2,l=n.positionToPoint(a,s),u=n.positionToPoint(o,s);this.currentItemStartPoint=l,this.currentItemEndPoint=u,n.fullWidthTooltip&&(i.width=u.x-l.x,i.height=u.y-l.y);var h=n.positionToPoint(t,s),c=v.spritePointToSvg(h,this.renderer.line);i.text=this.getTooltipText(t),i.text&&(i.pointTo(c),i.show())}this.cursorTooltipEnabled&&!this.tooltip.disabled||i.hide(0)}},e.prototype.toAxisPosition=function(t){if(void 0!=(t=this.renderer.toAxisPosition(t)))return t*=this.end-this.start,t=this.renderer.inversed?this.end-t:this.start+t},e.prototype.toGlobalPosition=function(t){return this.renderer.inversed?t=this.end-t:t-=this.start,t/(this.end-this.start)},e.prototype.getTooltipText=function(t){},e.prototype.updateTooltip=function(t,e){var i=this._tooltip;i&&(i.pointerOrientation=t,i.setBounds(v.spriteRectToSvg(e,this.renderer.line)))},e.prototype.roundPosition=function(t,e,i){return t},e.prototype.getCellStartPosition=function(t){return t},e.prototype.getCellEndPosition=function(t){return t},Object.defineProperty(e.prototype,"axisRanges",{get:function(){if(!this._axisRanges){var t=this.createDataItem();t.isRange=!0,t.axisFill=this.renderer.axisFills.template.clone(),t.grid=this.renderer.grid.template.clone(),t.tick=this.renderer.ticks.template.clone(),t.label=this.renderer.labels.template.clone(),t.isTemplate=!0,t.component=this,t.axisFill.disabled=!1,t.tick.disabled=!1,t.grid.disabled=!1,t.label.disabled=!1,this._axisRanges=new p.e(t),this._axisRanges.events.on("inserted",this.processAxisRange,this,!1),this._disposers.push(new p.c(this._axisRanges)),this._disposers.push(this._axisRanges.template)}return this._axisRanges},enumerable:!0,configurable:!0}),e.prototype.processAxisRange=function(t){var e=t.newValue;e.component=this,e.isRange=!0},Object.defineProperty(e.prototype,"axisBreaks",{get:function(){return this._axisBreaks||(this._axisBreaks=new c.d(this.createAxisBreak(),function(t,e){return b.order(t.adjustedStartValue,e.adjustedStartValue)}),this._axisBreaks.events.on("inserted",this.processBreak,this,!1),this._disposers.push(new p.c(this._axisBreaks)),this._disposers.push(this._axisBreaks.template)),this._axisBreaks},enumerable:!0,configurable:!0}),e.prototype.createAxisBreak=function(){return new l.a},Object.defineProperty(e.prototype,"series",{get:function(){return this._series||(this._series=new p.b),this._series},enumerable:!0,configurable:!0}),e.prototype.processSeriesDataItems=function(){},e.prototype.processSeriesDataItem=function(t,e){},e.prototype.postProcessSeriesDataItems=function(){},e.prototype.postProcessSeriesDataItem=function(t){},e.prototype.updateAxisBySeries=function(){},e.prototype.hideUnusedDataItems=function(){var t=this,e=this._dataItemsIterator;e.createNewItems=!1,y.each(e.iterator(),function(e){t.validateDataElement(e),e.__disabled=!0}),e.clear(),e.createNewItems=!0},e.prototype.getSeriesDataItem=function(t,e,i){},e.prototype.getAngle=function(t,e,i,n,r){},e.prototype.getX=function(t,e,i,n,r){},e.prototype.getPositionX=function(t,e,i,n,r){},e.prototype.getY=function(t,e,i,n,r){},e.prototype.getPositionY=function(t,e,i,n,r){},Object.defineProperty(e.prototype,"basePoint",{get:function(){return{x:0,y:0}},enumerable:!0,configurable:!0}),e.prototype.dataChangeUpdate=function(){},e.prototype.seriesDataChangeUpdate=function(t){},e.prototype.adjustDifference=function(t,e){var i=e-t;if(_.isNumber(i))return this._axisBreaks&&y.eachContinue(this._axisBreaks.iterator(),function(n){var r=n.adjustedStartValue,a=n.adjustedEndValue;if(_.isNumber(r)&&_.isNumber(a)){if(r>e)return!1;if(a>=t&&_.isNumber(r)&&_.isNumber(a)){var o=n.breakSize,s=m.intersection({start:r,end:a},{start:t,end:e});s&&(i-=(s.end-s.start)*(1-o))}return!0}}),i},e.prototype.isInBreak=function(t){if(this._axisBreaks)return y.find(this._axisBreaks.iterator(),function(e){return t>=e.adjustedStartValue&&t<=e.adjustedEndValue})},e.prototype.fixAxisBreaks=function(){var t=this;if(this._axisBreaks){var e=this._axisBreaks;if(e.length>0){x.each(y.toArray(e.iterator()),function(e){var i=m.min(e.startValue,e.endValue),n=m.max(e.startValue,e.endValue);e.adjustedStartValue=i,e.adjustedEndValue=n,t._axisBreaks.update(e)});var i=e.first,n=Math.min(i.startValue,i.endValue);y.each(e.iterator(),function(t){var e=t.adjustedStartValue,i=t.adjustedEndValue;e<n&&(e=n,i<n&&(i=n)),t.adjustedStartValue=e,t.adjustedEndValue=i})}}},Object.defineProperty(e.prototype,"startIndex",{get:function(){return 0},set:function(t){},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endIndex",{get:function(){return this.dataItems.length},set:function(t){},enumerable:!0,configurable:!0}),e.prototype.getPositionLabel=function(t){return Math.round(100*t)+"%x"},Object.defineProperty(e.prototype,"chart",{get:function(){return this._chart},set:function(t){this._chart=t},enumerable:!0,configurable:!0}),e.prototype.createSeriesRange=function(t){var e=this.axisRanges.create();return e.component=this,e.axisFill=this.renderer.axisFills.template.clone(),e.axisFill.disabled=!1,e.axisFill.fillOpacity=0,e.grid=this.renderer.grid.template.clone(),e.grid.disabled=!0,e.tick=this.renderer.ticks.template.clone(),e.tick.disabled=!0,e.label=this.renderer.labels.template.clone(),e.label.disabled=!0,t.axisRanges.push(e),e},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.renderer?this.renderer.copyFrom(e.renderer):e.renderer&&(this.renderer=e.renderer.clone(),this._disposers.push(this.renderer)),e.title&&(this.title?this.title.copyFrom(e.title):(this.title=e.title.clone(),this.title.parent=this),this._disposers.push(this.title))},e.prototype.resetIterators=function(){this._dataItemsIterator.reset()},e.prototype.processConfig=function(e){if(e&&_.hasValue(e.axisRanges)&&_.isArray(e.axisRanges))for(var i=0,n=e.axisRanges.length;i<n;i++){var r=e.axisRanges[i];_.hasValue(r.series)&&_.isString(r.series)&&this.map.hasKey(r.series)&&(e.axisRanges[i]=this.createSeriesRange(this.map.getKey(r.series)),delete r.series,e.axisRanges[i].config=r)}t.prototype.processConfig.call(this,e)},Object.defineProperty(e.prototype,"startLocation",{get:function(){return this.getPropertyValue("startLocation")},set:function(t){this.setPropertyValue("startLocation",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endLocation",{get:function(){return this.getPropertyValue("endLocation")},set:function(t){this.setPropertyValue("endLocation",t,!0)},enumerable:!0,configurable:!0}),e.prototype.setDisabled=function(e){var i=t.prototype.setDisabled.call(this,e);return this.renderer&&(this.renderer.gridContainer.disabled=e),i},Object.defineProperty(e.prototype,"title",{get:function(){return this._title},set:function(t){this._title&&this._title!=t&&this._title.dispose(),t&&(this._title=t,t.parent=this,t.shouldClone=!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hideTooltipWhileZooming",{get:function(){return this.getPropertyValue("hideTooltipWhileZooming")},set:function(t){this.setPropertyValue("hideTooltipWhileZooming",t)},enumerable:!0,configurable:!0}),e}(a.a);f.c.registeredClasses.Axis=O,f.c.registeredClasses.AxisDataItem=w,P.c.push({relevant:P.b.maybeXS,state:function(t,e){if(t instanceof O&&t.tooltip){var i=t.states.create(e);return i.properties.cursorTooltipEnabled=!1,i}return null}})},AC2I:function(t,e,i){"use strict";i.d(e,"b",function(){return v}),i.d(e,"a",function(){return b});var n=i("m4/l"),r=i("aM7D"),a=i("Vs7R"),o=i("p9TX"),s=i("8ZqG"),l=i("qzbU"),u=i("vMqJ"),h=i("C6dT"),c=i("DHte"),p=i("aCit"),d=i("Wglt"),f=i("0FpR"),g=i("Mtpk"),y=i("hD5A"),m=i("TGuK"),v=function(t){function e(){var e=t.call(this)||this;return e.className="PercentSeriesDataItem",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.uidAttr=function(){return this.slice.uidAttr()},e.prototype.hide=function(e,i,n,r){return r||(r=["value"]),t.prototype.hide.call(this,e,i,0,r)},e.prototype.setVisibility=function(e,i){i||(e?this.setWorkingValue("value",this.values.value.value,0,0):this.setWorkingValue("value",0,0,0)),t.prototype.setVisibility.call(this,e,i)},e.prototype.show=function(e,i,n){return n||(n=["value"]),t.prototype.show.call(this,e,i,n)},Object.defineProperty(e.prototype,"category",{get:function(){return this.properties.category},set:function(t){this.setProperty("category",t)},enumerable:!0,configurable:!0}),e.prototype.createLegendMarker=function(t){this.component.createLegendMarker(t,this)},Object.defineProperty(e.prototype,"legendDataItem",{get:function(){return this._legendDataItem},set:function(t){this._legendDataItem=t,t.label&&(t.label.dataItem=this),t.valueLabel&&(t.valueLabel.dataItem=this)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tick",{get:function(){var t=this;if(!this._tick){var e=this.component.ticks.create();this._tick=e,this.addSprite(e),this._disposers.push(e),e.parent=this.component.ticksContainer,this._disposers.push(new y.b(function(){t.component&&t.component.ticks.removeValue(e)})),e.visible=this.visible}return this._tick},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"label",{get:function(){var t=this;if(!this._label){var e=this.component.labels.create();this.addSprite(e),this._label=e,this._disposers.push(e),e.parent=this.component.labelsContainer,this._disposers.push(new y.b(function(){t.component&&t.component.labels.removeValue(e)})),e.visible=this.visible}return this._label},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"slice",{get:function(){var t=this;if(!this._slice){var e=this.component,i=e.slices.create();this.addSprite(i),this._slice=i,this._disposers.push(i),i.parent=e.slicesContainer,this._disposers.push(new y.b(function(){e.slices.removeValue(i)})),i.visible=this.visible,e.itemsFocusable()?(this.component.role="menu",i.role="menuitem",i.focusable=!0):(this.component.role="list",i.role="listitem",i.focusable=!1),i.focusable&&(i.events.on("focus",function(n){i.readerTitle=e.populateString(e.itemReaderText,t)},void 0,!1),i.events.on("blur",function(t){i.readerTitle=""},void 0,!1)),i.hoverable&&(i.events.on("over",function(n){i.readerTitle=e.populateString(e.itemReaderText,t)},void 0,!1),i.events.on("out",function(t){i.readerTitle=""},void 0,!1))}return this._slice},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hiddenInLegend",{get:function(){return this.properties.hiddenInLegend},set:function(t){this.setProperty("hiddenInLegend",t)},enumerable:!0,configurable:!0}),e}(r.b),b=function(t){function e(){var e=t.call(this)||this;e.className="PercentSeries",e._addAllDataItems=!1,e.colors=new c.a,e.colors.step=1,e.isMeasured=!0,e.calculatePercent=!0;var i=e.createChild(h.a);i.shouldClone=!1,i.isMeasured=!1,e.slicesContainer=i;var n=e.createChild(h.a);n.shouldClone=!1,n.isMeasured=!1,n.layout="none",e.ticksContainer=n;var r=e.createChild(h.a);return r.shouldClone=!1,r.isMeasured=!1,r.layout="none",e.labelsContainer=r,e.alignLabels=!1,e.bulletsContainer.toFront(),e.skipFocusThreshold=50,e.defaultState.transitionEasing=f.sinOut,e.itemReaderText="{category}: {value.percent.formatNumber('#.#')}%",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.createSlice=function(){return new a.a},e.prototype.createTick=function(){return new l.a},e.prototype.createLabel=function(){return new o.a},Object.defineProperty(e.prototype,"slices",{get:function(){if(!this._slices){var t=this.createSlice();t.applyOnClones=!0,this._disposers.push(t),this.initSlice(t),this._slices=new u.e(t),this._disposers.push(new u.c(this._slices))}return this._slices},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ticks",{get:function(){if(!this._ticks){var t=this.createTick();t.applyOnClones=!0,this._disposers.push(t),this.initTick(t),this._ticks=new u.e(t),this._disposers.push(new u.c(this._ticks))}return this._ticks},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"labels",{get:function(){if(!this._labels){var t=this.createLabel();t.applyOnClones=!0,this._disposers.push(t),this.initLabel(t),this._labels=new u.e(t),this._disposers.push(new u.c(this._labels))}return this._labels},enumerable:!0,configurable:!0}),e.prototype.createDataItem=function(){return new v},e.prototype.initSlice=function(t){},e.prototype.initLabel=function(t){t.text="{category}: {value.percent.formatNumber('#.0')}%",t.isMeasured=!1,t.padding(5,5,5,5)},e.prototype.initTick=function(t){},e.prototype.validateDataItems=function(){this.colors.reset(),this.patterns&&this.patterns.reset(),t.prototype.validateDataItems.call(this)},e.prototype.validateDataElement=function(e){var i=e.slice;i&&(void 0==i.fill?this.patterns?(g.hasValue(i.stroke)||(i.stroke=this.colors.next()),i.fill=this.patterns.next(),g.hasValue(i.fillOpacity)&&(i.fill.backgroundOpacity=i.fillOpacity),i.stroke instanceof s.a&&(i.fill.stroke=i.stroke,i.fill.fill=i.stroke)):i.fill=this.colors.next():this.colors.currentStep+=this.colors.step,void 0==i.stroke&&(i.stroke=i.fill)),t.prototype.validateDataElement.call(this,e),i&&e.bullets.each(function(t,e){void 0==e.fill&&(e.fill=i.fill),void 0==e.stroke&&(e.stroke=i.stroke)}),this.updateLegendValue(e)},e.prototype.validateData=function(){t.prototype.validateData.call(this),this.chart&&this.chart.feedLegend()},e.prototype.arrangeLabels=function(t){for(var e=0,i=t.length;e<i;e++){var n=t[e].label;if(n){n.invalid&&n.validate();var r=n.measuredHeight;n.visible||(r=0),n.pixelY-r/2<-this.maxHeight/2&&(n.y=-this.maxHeight/2+r/2);var a=this.getNextLabel(e+1,t),o=n.pixelY+r;a&&a.y<o&&(a.y=o)}}},e.prototype.arrangeLabels2=function(t){for(var e=this.maxHeight/2,i=t.length-1;i>=0;i--){var n=t[i].label;if(n){n.invalid&&n.validate();var r=n.measuredHeight;n.visible||(r=0),i==t.length-1&&(e+=r/2),n.pixelY+r>e&&(n.y=e-r,e=n.y)}}},e.prototype.getNextLabel=function(t,e){if(e.length>=t){var i=e[t];if(i)return i.label&&i.visible?i.label:this.getNextLabel(t+1,e)}},Object.defineProperty(e.prototype,"colors",{get:function(){return this.getPropertyValue("colors")},set:function(t){this.setPropertyValue("colors",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"patterns",{get:function(){return this.getPropertyValue("patterns")},set:function(t){this.setPropertyValue("patterns",t,!0)},enumerable:!0,configurable:!0}),e.prototype.createLegendMarker=function(t,e){d.each(t.children.iterator(),function(i){var n=e.slice;i.defaultState.properties.fill=n.fill,i.defaultState.properties.stroke=n.stroke,i.defaultState.properties.fillOpacity=n.fillOpacity,i.defaultState.properties.strokeOpacity=n.strokeOpacity,i.fill=n.fill,i.stroke=n.stroke,i.fillOpacity=n.fillOpacity,i.strokeOpacity=n.strokeOpacity,void 0==i.fill&&(i.__disabled=!0);var r=t.dataItem;r.color=n.fill,r.colorOrig=n.fill,i.addDisposer(n.events.on("propertychanged",function(t){"fill"==t.property&&(i.__disabled=!1,i.isActive||(i.fill=n.fill),i.defaultState.properties.fill=n.fill,r.color=n.fill,r.colorOrig=n.fill),"stroke"==t.property&&(i.isActive||(i.stroke=n.stroke),i.defaultState.properties.stroke=n.stroke)},void 0,!1))})},e.prototype.handleSliceScale=function(t){var e=this,i=t.target.dataItem;d.each(i.bullets.iterator(),function(t){var i=t[1];e.positionBullet(i)})},e.prototype.handleSliceMove=function(t){},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.slices.template.copyFrom(e.slices.template),this.labels.template.copyFrom(e.labels.template),this.ticks.template.copyFrom(e.ticks.template),this.colors=e.colors.clone()},Object.defineProperty(e.prototype,"alignLabels",{get:function(){return this.getPropertyValue("alignLabels")},set:function(t){this.setAlignLabels(t)},enumerable:!0,configurable:!0}),e.prototype.setAlignLabels=function(t){this.setPropertyValue("alignLabels",t,!0)},Object.defineProperty(e.prototype,"ignoreZeroValues",{get:function(){return this.getPropertyValue("ignoreZeroValues")},set:function(t){this.setPropertyValue("ignoreZeroValues",t,!0)},enumerable:!0,configurable:!0}),e.prototype.updateLegendValue=function(t){if(t){var e=t.legendDataItem,i=t.legendSettings;e&&i&&i&&(i.labelText&&(e.label.text=i.labelText),i.itemLabelText&&(e.label.text=i.itemLabelText),i.valueText&&(e.valueLabel.text=i.valueText),i.itemValueText&&(e.valueLabel.text=i.itemValueText))}},e}(r.a);p.c.registeredClasses.PercentSeries=b,p.c.registeredClasses.PercentSeriesDataItem=v,m.c.push({relevant:m.b.maybeXS,state:function(t,e){if(t instanceof b){var i=t.states.create(e);return t.labels.template.states.create(e).properties.disabled=!0,t.ticks.template.states.create(e).properties.disabled=!0,i}return null}})},AYiJ:function(t,e){t.exports=function(t){try{return{error:!1,value:t()}}catch(t){return{error:!0,value:t}}}},AaJ4:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("Vs7R"),a=i("aCit"),o=i("8ZqG"),s=i("MIZb"),l=i("TGuK"),u=function(t){function e(){var e=t.call(this)||this;e.className="Grid",e.element=e.paper.add("path"),e.location=.5,e.isMeasured=!1,e.above=!1;var i=new s.a;return e.stroke=i.getFor("grid"),e.pixelPerfect=!0,e.strokeOpacity=.15,e.fill=Object(o.c)(),e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"location",{get:function(){return this.getPropertyValue("location")},set:function(t){this.setPropertyValue("location",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"above",{get:function(){return this.getPropertyValue("above")},set:function(t){this.setPropertyValue("above",t,!0)},enumerable:!0,configurable:!0}),e.prototype.setDisabled=function(e){var i=t.prototype.setDisabled.call(this,e);return this.axis&&this.axis.invalidateDataItems(),i},e}(r.a);a.c.registeredClasses.Grid=u,l.c.push({relevant:l.b.maybeXS,state:function(t,e){if(t instanceof u){var i=t.states.create(e);return i.properties.disabled=!0,i}return null}})},AzDz:function(t,e,i){var n=i("Kg2n"),r=i("2xmP"),a=i("KslR")("match");t.exports=function(t){var e;return n(t)&&(void 0!==(e=t[a])?!!e:"RegExp"==r(t))}},BAfC:function(t,e,i){var n=i("vfdp"),r=i("Kg2n"),a=n.document,o=r(a)&&r(a.createElement);t.exports=function(t){return o?a.createElement(t):{}}},BEgH:function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("aGXA"),a=i("Vs7R"),o=i("aCit"),s=i("MIZb"),l=i("hGwe"),u=i("Mtpk"),h=function(t){function e(){var e=t.call(this)||this;e.className="ZoomOutButton",e.padding(9,9,9,9),e.showSystemTooltip=!0;var i=new s.a,n=e.background;n.cornerRadius(20,20,20,20),n.fill=i.getFor("primaryButton"),n.stroke=i.getFor("primaryButtonStroke"),n.strokeOpacity=0,n.states.getKey("hover").properties.fill=i.getFor("primaryButtonHover"),n.states.getKey("down").properties.fill=i.getFor("primaryButtonActive");var r=new a.a;r.element=e.paper.add("path");var o=l.moveTo({x:0,y:0});return o+=l.lineTo({x:11,y:0}),r.path=o,r.pixelPerfect=!0,r.padding(8,3,8,3),r.stroke=i.getFor("primaryButtonText"),e.icon=r,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),u.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Zoom Out"))},e}(r.a);o.c.registeredClasses.ZoomOutButton=h},BKHV:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("sub")},{sub:function(){return r(this,"sub","","")}})},BmDP:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("qzbU"),a=i("hD5A"),o=i("aCit"),s=function(t){function e(){var e=t.call(this)||this;return e._label=new a.d,e._slice=new a.d,e.className="PieTick",e.element=e.paper.add("polyline"),e._disposers.push(e._label),e._disposers.push(e._slice),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.slice,i=this.label,n=e.dataItem.component;if(e&&e.radius>0&&i&&i.text){var r=e.dx+e.slice.dx+e.pixelX+e.ix*e.radius*e.scale,a=e.dy+e.slice.dy+e.pixelY+e.iy*e.radiusY*e.scale,o=void 0,s=void 0,l=void 0,u=void 0;if(n.alignLabels)o=i.pixelX-this.length,s=i.pixelY,l=i.pixelX,u=s,"right"==i.horizontalCenter&&(l=(o+=2*this.length)-this.length);else{var h=i.pixelRadius(e.radius);l=o=r+h*e.ix,u=s=a+h*e.iy}this.element.attr({points:[r,a,o,s,l,u]})}},Object.defineProperty(e.prototype,"slice",{get:function(){return this._slice.get()},set:function(t){this._slice.set(t,new a.c([t.events.on("transformed",this.invalidate,this),t.events.on("validated",this.invalidate,this)]))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"label",{get:function(){return this._label.get()},set:function(t){this._label.set(t,t.events.on("transformed",this.invalidate,this,!1))},enumerable:!0,configurable:!0}),e}(r.a);o.c.registeredClasses.PieTick=s},C6Lh:function(t,e,i){"use strict";i.d(e,"a",function(){return v});var n=i("m4/l"),r=i("ISWh"),a=i("Vs7R"),o=i("vMqJ"),s=i("hD5A"),l=i("0Mwj"),u=i("pR7v"),h=i("KknQ"),c=i("aCit"),p=i("MIZb"),d=i("85D4"),f=i("Wglt"),g=i("Mtpk"),y=i("hGwe"),m=i("tjMS"),v=function(t){function e(){var e=t.call(this)||this;e._chart=new s.d,e.className="XYChartScrollbar";var i=new p.a;e.padding(0,0,0,0);var n=e.createChild(l.a);n.shouldClone=!1,n.margin(0,0,0,0),n.padding(0,0,0,0),n.interactionsEnabled=!1,e._scrollbarChart=n,e._disposers.push(e._scrollbarChart),e.minHeight=60,e.minWidth=60;var r=e.createChild(a.a);r.shouldClone=!1,r.setElement(e.paper.add("path")),r.fill=i.getFor("background"),r.fillOpacity=.8,r.interactionsEnabled=!1,r.isMeasured=!1,r.toBack(),e._unselectedOverlay=r,e._disposers.push(e._unselectedOverlay),n.toBack(),e.background.cornerRadius(0,0,0,0);var o=e.thumb.background;o.cornerRadius(0,0,0,0),o.fillOpacity=0,o.fill=i.getFor("background");var u=o.states.getKey("hover");u&&(u.properties.fillOpacity=.2);var h=o.states.getKey("down");return h&&(h.properties.fillOpacity=.4),e._disposers.push(e._chart),e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"series",{get:function(){return this._series||(this._series=new o.b,this._disposers.push(this._series.events.on("inserted",this.handleSeriesAdded,this,!1)),this._disposers.push(this._series.events.on("removed",this.handleSeriesRemoved,this,!1))),this._series},enumerable:!0,configurable:!0}),e.prototype.handleSeriesAdded=function(t){var e=this,i=t.newValue;if(i.xAxis&&i.yAxis){var n=this.scrollbarChart;n.zoomOutButton.disabled=!0,this.chart=i.chart,n.language.locale=this.chart.language.locale;var r=!0,a=!0;f.each(this.series.iterator(),function(t){t!=i&&(t.xAxis==i.xAxis&&e.scrollbarChart.xAxes.length>0&&(r=!1),t.yAxis==i.yAxis&&e.scrollbarChart.yAxes.length>0&&(a=!1))});var o=new p.a,s=i.clone();if(r){var l=i.xAxis.clone();if(n.xAxes.moveValue(l),l.title.disabled=!0,l.rangeChangeDuration=0,(b=l.renderer).ticks.template.disabled=!0,b.inside=!0,b.labels.template.inside=!0,b.line.strokeOpacity=0,b.minLabelPosition=.02,b.maxLabelPosition=.98,b.line.disabled=!0,b.axisFills.template.disabled=!0,b.baseGrid.disabled=!0,b.grid.template.strokeOpacity=.05,b.minWidth=void 0,b.minHeight=void 0,b.padding(0,0,0,0),b.chart=n,b.margin(0,0,0,0),l.width=Object(m.c)(100),b.labels.template.fillOpacity=.5,l.maxZoomCount=void 0,l.minZoomCount=void 0,l instanceof h.a){var c=l,y=i.xAxis;l.groupCount=5*y.groupCount,this._disposers.push(c.clonedFrom.events.on("extremeschanged",function(){g.isNumber(c.clonedFrom.minDefined)&&(c.min=c.clonedFrom.minDefined),g.isNumber(c.clonedFrom.maxDefined)&&(c.max=c.clonedFrom.maxDefined)},void 0,!1))}else if(l instanceof u.a){var v=l;g.isNumber(v.clonedFrom.minDefined)||(v.min=void 0),g.isNumber(v.clonedFrom.maxDefined)||(v.max=void 0),this._disposers.push(v.clonedFrom.events.on("extremeschanged",function(){g.isNumber(v.clonedFrom.minDefined)&&(v.min=v.clonedFrom.min),g.isNumber(v.clonedFrom.maxDefined)&&(v.max=v.clonedFrom.max)},void 0,!1))}s.xAxis=l}else this.scrollbarChart.xAxes.each(function(t){t.clonedFrom==i.xAxis&&(s.xAxis=t)});if(a){var b,x=i.yAxis.clone();if(n.yAxes.moveValue(x),x.title.disabled=!0,x.rangeChangeDuration=0,(b=x.renderer).ticks.template.disabled=!0,b.inside=!0,b.labels.template.inside=!0,b.line.strokeOpacity=0,b.minLabelPosition=.02,b.maxLabelPosition=.98,b.line.disabled=!0,b.axisFills.template.disabled=!0,b.grid.template.stroke=o.getFor("background"),b.baseGrid.disabled=!0,b.grid.template.strokeOpacity=.05,b.minWidth=void 0,b.minHeight=void 0,b.chart=n,b.padding(0,0,0,0),b.margin(0,0,0,0),x.height=Object(m.c)(100),b.labels.template.fillOpacity=.5,s.yAxis=x,x.maxZoomCount=void 0,x.minZoomCount=void 0,x instanceof h.a){var _=x;y=i.yAxis;x.groupCount=5*y.groupCount,this._disposers.push(_.clonedFrom.events.on("extremeschanged",function(){g.isNumber(_.clonedFrom.minDefined)&&(_.min=_.clonedFrom.minDefined),g.isNumber(_.clonedFrom.maxDefined)&&(_.max=_.clonedFrom.maxDefined)}))}else if(x instanceof u.a){var P=x;g.isNumber(P.clonedFrom.minDefined)||(P.min=void 0),g.isNumber(P.clonedFrom.maxDefined)||(P.max=void 0),this._disposers.push(P.clonedFrom.events.on("extremeschanged",function(){g.isNumber(P.clonedFrom.minDefined)&&(P.min=P.clonedFrom.minDefined),g.isNumber(P.clonedFrom.maxDefined)&&(P.max=P.clonedFrom.maxDefined)}))}}else this.scrollbarChart.yAxes.each(function(t){t.clonedFrom==i.yAxis&&(s.yAxis=t)});s.rangeChangeDuration=0,s.interpolationDuration=0,s.defaultState.transitionDuration=0,s.showOnInit=!1,this._disposers.push(s.events.on("validated",this.zoomOutAxes,this,!1)),this._disposers.push(i.events.on("datavalidated",function(){s.data!=i.data&&(s.data=i.data)},void 0,!1)),s.defaultState.properties.visible=!0,s.filters.push(new d.a),n.series.push(s),this.updateByOrientation()}},e.prototype.updateByOrientation=function(){var t=this;this._scrollbarChart&&(f.each(this._scrollbarChart.xAxes.iterator(),function(e){var i=e.renderer;"vertical"==t.orientation?(i.grid.template.disabled=!0,i.labels.template.disabled=!0,i.minGridDistance=10):(i.grid.template.disabled=!1,i.labels.template.disabled=!1,i.minGridDistance=e.clonedFrom.renderer.minGridDistance)}),f.each(this._scrollbarChart.yAxes.iterator(),function(e){var i=e.renderer;"horizontal"==t.orientation?(i.grid.template.disabled=!0,i.labels.template.disabled=!0,i.minGridDistance=10):(i.grid.template.disabled=!1,i.labels.template.disabled=!1,i.minGridDistance=e.clonedFrom.renderer.minGridDistance)}))},e.prototype.handleSeriesRemoved=function(t){var e=t.oldValue,i=this.scrollbarChart;i.series.each(function(t){t&&t.clonedFrom==e&&i.series.removeValue(t)}),0==i.series.length&&(i.xAxes.clear(),i.yAxes.clear());try{e.events.off("validated",this.zoomOutAxes,this)}catch(t){}},Object.defineProperty(e.prototype,"scrollbarChart",{get:function(){return this._scrollbarChart},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"chart",{get:function(){return this._chart.get()},set:function(t){this._chart.get()!==t&&(this._chart.set(t,t.events.on("datavalidated",this.handleDataChanged,this,!1)),this.handleDataChanged(),this._scrollbarChart.dataProvider=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"unselectedOverlay",{get:function(){return this._unselectedOverlay},enumerable:!0,configurable:!0}),e.prototype.handleDataChanged=function(){this.chart.data!=this.scrollbarChart.data&&(this.scrollbarChart.data=this.chart.data),this.scrollbarChart.invalidateData()},e.prototype.zoomOutAxes=function(){var t=this.scrollbarChart;f.each(t.xAxes.iterator(),function(t){t.zoom({start:0,end:1},!0,!0)}),f.each(t.yAxes.iterator(),function(t){t.zoom({start:0,end:1},!0,!0)})},e.prototype.updateThumb=function(){if(t.prototype.updateThumb.call(this),this._unselectedOverlay){var e=this.thumb,i=e.pixelX||0,n=e.pixelY||0,r=e.pixelWidth||0,a=e.pixelHeight||0,o="";"horizontal"==this.orientation?(o=y.rectToPath({x:-1,y:0,width:i,height:a}),o+=y.rectToPath({x:i+r,y:0,width:(this.pixelWidth||0)-i-r,height:a})):(o=y.rectToPath({x:0,y:0,width:r,height:n}),o+=y.rectToPath({x:0,y:n+a,width:r,height:(this.pixelHeight||0)-n-a})),this._unselectedOverlay.path=o}},e.prototype.processConfig=function(e){if(e&&g.hasValue(e.series)&&g.isArray(e.series))for(var i=0,n=e.series.length;i<n;i++){var r=e.series[i];if(g.hasValue(r)&&g.isString(r)){if(!this.map.hasKey(r))throw Error("XYChartScrollbar error: Series with id `"+r+"` does not exist.");e.series[i]=this.map.getKey(r)}}t.prototype.processConfig.call(this,e)},e}(r.a);c.c.registeredClasses.XYChartScrollbar=v},C6dT:function(t,e,i){"use strict";i.d(e,"a",function(){return x});var n=i("m4/l"),r=i("Vs7R"),a=i("ux7t"),o=i("vMqJ"),s=i("hD5A"),l=i("+qIf"),u=i("zhwk"),h=i("GtDR"),c=i("tjMS"),p=i("aCit"),d=i("MIZb"),f=i("Wglt"),g=i("hJ5i"),y=i("Gg2j"),m=i("Mtpk"),v=i("Rpw0"),b=i("Q4nc"),x=function(t){function e(){var e=t.call(this)||this;return e._childrenByLayout=[],e._childrenDisposers=new l.a,e.hasFocused=!1,e.setStateOnSprites=[],e.layoutInvalid=!1,e._absoluteWidth=0,e._absoluteHeight=0,e._shouldBeReady=[],e._tapToActivate=!1,e.tapTimeout=3e3,e.className="Container",e._element=e.paper.addGroup("g"),e.group.add(e.element),e.setPropertyValue("pixelPerfect",!1),e.setPropertyValue("layout","absolute"),e.setPropertyValue("fixedWidthGrid",!1),e.setPropertyValue("verticalCenter","none"),e.setPropertyValue("horizontalCenter","none"),e._positionPrecision=4,e._disposers.push(new l.b(e._childrenDisposers)),e.children.events.on("inserted",e.handleChildAdded,e),e.children.events.on("removed",e.handleChildRemoved,e),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.handleChildAdded=function(t){this.processChild(t.newValue)},e.prototype.processChild=function(t){try{this._childrenDisposers.insertKey(t.uid,new s.c([t.events.on("transformed",this.handleChildTransform,this),t.events.on("zIndexChanged",this.sortAndAdd,this)]))}catch(t){}this.element&&this.element.add(t.group);t.parent=this,t.paper=this.paper,this.dispatchImmediately("childadded",{type:"childadded",newValue:t}),this.invalidate()},e.prototype.sortAndAdd=function(){this.sortChildren(),this.addChildren()},e.prototype.handleChildRemoved=function(t){var e=t.oldValue;(this._childrenDisposers.removeKey(e.uid),this.element)&&this.element.removeElement(e.group);e.isMeasured&&this.invalidateLayout(),this.dispatchImmediately("childremoved",{type:"childremoved",oldValue:e})},e.prototype.handleChildTransform=function(t){t.target.isMeasured&&this.invalidateLayout()},e.prototype.invalidateLayout=function(){this.layoutInvalid||this.disabled||this.isTemplate||"none"==this.layout||this.__disabled||(this.layoutInvalid=!0,p.c.addToInvalidLayouts(this),v.b.requestFrame())},e.prototype.invalidate=function(){t.prototype.invalidate.call(this),this.invalidateLayout()},e.prototype.deepInvalidate=function(){t.prototype.invalidate.call(this),g.each(this._childrenByLayout,function(t){t instanceof e?t.deepInvalidate():t.invalidate()}),this.invalidateLayout()},Object.defineProperty(e.prototype,"children",{get:function(){return this._children||(this._children=new o.b),this._children},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minWidth",{get:function(){return this.getPropertyValue("minWidth")},set:function(t){this.setPropertyValue("minWidth",t)&&this.invalidateLayout()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minHeight",{get:function(){return this.getPropertyValue("minHeight")},set:function(t){this.setPropertyValue("minHeight",t)&&this.invalidateLayout()},enumerable:!0,configurable:!0}),e.prototype.removeElement=function(){},e.prototype.sortChildren=function(){var t=this;if(this._childrenByLayout=[],"none"!=this.layout&&"absolute"!=this.layout&&this.layout){var e=[],i=[];f.each(this.children.iterator(),function(n){"horizontal"==t.layout||"grid"==t.layout?m.isNumber(n.percentWidth)?i.push(n):e.push(n):"vertical"==t.layout&&m.isNumber(n.percentHeight)?i.push(n):e.push(n)}),this._childrenByLayout=e.concat(i)}else this._childrenByLayout=this.children.values;this.calculateRelativeSize()},e.prototype.calculateRelativeSize=function(){var t=this,e=0,i=0;g.each(this._childrenByLayout,function(t){t.isMeasured&&(m.isNumber(t.percentWidth)&&(e+=t.percentWidth),m.isNumber(t.percentHeight)&&(i+=t.percentHeight))}),g.each(this._childrenByLayout,function(n){n.isMeasured&&("horizontal"==t.layout&&(m.isNumber(n.percentWidth)&&(n.relativeWidth=n.percentWidth/e),m.isNumber(n.percentHeight)&&(n.relativeHeight=n.percentHeight/100)),"vertical"==t.layout&&(m.isNumber(n.percentHeight)&&(n.relativeHeight=n.percentHeight/i),m.isNumber(n.percentWidth)&&(n.relativeWidth=n.percentWidth/100)),"grid"==t.layout&&(m.isNumber(n.percentHeight)&&(n.relativeHeight=n.percentHeight/100),m.isNumber(n.percentWidth)&&(n.relativeWidth=n.percentWidth/100))),"absolute"!=t.layout&&n.isMeasured||(m.isNumber(n.percentWidth)&&(n.relativeWidth=n.percentWidth/100),m.isNumber(n.percentHeight)&&(n.relativeHeight=n.percentHeight/100))})},e.prototype.addChildren=function(){if(this.element){var t=g.copy(this.children.values),e=t.map(function(t,e){return{idx:e,data:t}});e.sort(function(t,e){var i=t.data.zIndex||0,n=e.data.zIndex||0;return i<n?-1:i>n?1:t.idx-e.idx}),t=e.map(function(t){return t.data});var i=this.element,n=!0;if(i.node&&i.node.childNodes)for(var r=0,a=i.node.childNodes.length;r<a;r++)if(i.node.childNodes[r]!=t[r].group.node){n=!1;break}n||(g.each(t,function(t){t.group&&i.add(t.group)}),this._background&&this.group.addToBack(this._background.group),this.invalidateLayout())}},e.prototype.createChild=function(t){var e=new t;return e.parent=this,e},e.prototype.removeChildren=function(){for(;this.children.length>0;){var t=this.children.getIndex(0);t.parent=void 0,this.children.removeValue(t)}},e.prototype.disposeChildren=function(){for(;this.children.length>0;){var t=this.children.getIndex(0);t.dispose(),this.children.removeValue(t)}},Object.defineProperty(e.prototype,"background",{get:function(){return this._background||(this._background=this.createBackground(),this.processBackground()),this._background},set:function(t){this._background&&this.background!=t&&this.removeDispose(this._background),t&&(this._background=t,this._disposers.push(t),this.processBackground())},enumerable:!0,configurable:!0}),e.prototype.handleGlobalScale=function(){t.prototype.handleGlobalScale.call(this),this.children.each(function(t){t.handleGlobalScale()})},e.prototype.createBackground=function(){return new h.a},e.prototype.processBackground=function(){var t=this._background;t&&(t.isMeasured=!1,this._background.fill=(new d.a).getFor("background"),t.parent=this,t.isMeasured=!1,this.children.removeValue(t),this._disposers.push(t),this.group.addToBack(this._background.group))},e.prototype.validateLayout=function(){var t=this;p.c.removeFromInvalidLayouts(this),this.layoutInvalid=!1,this._availableWidth=this.innerWidth,this._availableHeight=this.innerHeight;var e=0,i=0,n=!0;this.children&&(this.sortChildren(),g.each(this._childrenByLayout,function(r){var a,o;if(m.isNumber(r.relativeWidth)?(a=y.round(t._availableWidth*r.relativeWidth,2),"horizontal"==t.layout&&(a-=r.pixelMarginRight+r.pixelMarginLeft)):"horizontal"==t.layout&&r.invalid&&r.validate(),m.isNumber(r.relativeHeight)?(o=y.round(t._availableHeight*r.relativeHeight,2),"vertical"==t.layout&&(o-=r.pixelMarginTop+r.pixelMarginBottom)):"vertical"==t.layout&&r.invalid&&r.validate(),0==r.invalid){if(m.isNumber(r.relativeWidth)&&(r.maxWidth=a),m.isNumber(r.relativeHeight)&&(r.maxHeight=o),r.isMeasured){"horizontal"==t.layout&&(m.isNumber(r.percentWidth)||r.measuredWidth>0&&(t._availableWidth-=r.measuredWidth+r.pixelMarginLeft+r.pixelMarginRight)),"vertical"==t.layout&&(m.isNumber(r.percentHeight)||r.measuredHeight>0&&(t._availableHeight-=r.measuredHeight+r.pixelMarginTop+r.pixelMarginBottom));var s=r.measuredWidth,l=r.measuredHeight;"none"!=r.align&&(s+=r.pixelMarginLeft+r.pixelMarginRight),"none"!=r.valign&&(l+=r.pixelMarginTop+r.pixelMarginBottom),e=Math.max(e,s),i=Math.max(i,l)}}else r.isMeasured&&(m.isNumber(r.relativeWidth)&&r.maxWidth!=a&&(r.maxWidth=a,n=!1),m.isNumber(r.relativeHeight)&&r.maxHeight!=o&&(r.maxHeight=o,n=!1))})),this._absoluteWidth=e,this._absoluteHeight=i,n&&this.arrange()},e.prototype.arrange=function(){var t,e,i,n,r,a,o,s,l,u,h,p=this,d=this.children,v=0,b=0,x=y.max(this.innerWidth,this._absoluteWidth),_=y.max(this.innerHeight,this._absoluteHeight),P=this.pixelPaddingLeft,w=this.pixelPaddingRight,O=this.pixelPaddingTop,T=this.pixelPaddingBottom,S=0,C=0,I=0,k=0,D=[],j=[],V=this.maxWidth,A=this.maxHeight,M=this.minWidth,F=this.minHeight,E=g.copy(d.values);if(this.reverseOrder&&E.reverse(),"grid"==this.layout){a=V,r=1;for(var R=0,N=E.length;R<N;R++){if((B=E[R]).isMeasured&&!B.disabled&&!B.__disabled){var L=B.measuredWidth;L<a&&(a=L),L>r&&(r=L)}}a=y.fitToRange(a,1,V),r=y.fitToRange(r,1,V),o=this.fixedWidthGrid?V/r:V/a,o=y.max(1,Math.floor(o)),o=y.min(this.maxColumns,o),D=this.getColumnWidth(E,o,r)}for(R=0,N=E.length;R<N;R++){var B;if(!(B=E[R]).isMeasured||B.disabled||B.__disabled)B.validatePosition();else{var U=void 0,W=void 0,Y=B.pixelMarginLeft,H=B.pixelMarginRight,z=B.pixelMarginTop,X=B.pixelMarginBottom,G=B.measuredWidth,K=B.measuredHeight,q=void 0,Z=void 0,Q=void 0,J=void 0;switch(this.layout){case"none":break;case"absolute":switch(B.align){case"left":U=Y-B.maxLeft;break;case"center":U=(x-G)/2-B.maxLeft;break;case"right":U=x-H-B.maxRight;break;default:B.x instanceof c.a||(U=B.pixelX)}switch(B.valign){case"top":W=z-B.maxTop;break;case"middle":W=(_-K)/2-B.maxTop;break;case"bottom":W=_-X-B.maxBottom;break;default:B.y instanceof c.a||(W=B.pixelY)}break;case"vertical":switch(B.align){case"left":U=Y-B.maxLeft;break;case"center":U=(x-G)/2-B.maxLeft;break;case"right":U=x-H-B.maxRight;break;default:U=B.pixelX}C=(W=C+z-B.maxTop)+B.maxBottom+X;break;case"horizontal":switch(B.valign){case"top":W=z-B.maxTop;break;case"middle":W=(_-K)/2-B.maxTop;break;case"bottom":W=_-X-B.maxBottom;break;default:W=B.pixelY}S=(U=S+Y-B.maxLeft)+B.maxRight+H;break;case"grid":switch(U=S+Y-B.maxLeft,B.valign){case"top":W=C+z-B.maxTop;break;case"middle":W=C+(_-K)/2-B.maxTop;break;case"bottom":W=C+_-X-B.maxBottom;break;default:W=C-B.maxTop}S+=D[k],j[I]=y.max(j[I],K);var $=D[++k];if(m.isNumber($)||($=r),S>y.min(this.innerWidth,V)-$+1&&k<o){o=k,S=0,C=0,I=0,k=0,D=this.getColumnWidth(E,o,r),j=[],R=-1;continue}k>=o&&(k=0,C+=j[I],I++,S=0)}"none"!==this.layout&&(B.moveTo({x:U,y:W}),q=U+B.maxLeft-Y,Z=U+B.maxRight+H,Q=W+B.maxTop-z,J=W+B.maxBottom+X,(Z>e||!m.isNumber(e))&&(e=Z),(q<t||!m.isNumber(t))&&(t=q),(Q<i||!m.isNumber(i))&&(i=Q),(J>n||!m.isNumber(n))&&(n=J),(Z>l||!m.isNumber(l))&&(l=Z),(q<s||!m.isNumber(s))&&(s=q),(Q<u||!m.isNumber(u))&&(u=Q),(J>h||!m.isNumber(h))&&(h=h))}}if("none"==this.layout){var tt=this.bbox;t=tt.x,e=tt.x+tt.width,i=tt.y,n=tt.y+tt.height}m.isNumber(t)||(t=0,s=0),m.isNumber(e)||(l=e=this._availableWidth),m.isNumber(i)||(i=0,u=0),m.isNumber(n)||(h=n=this._availableHeight),m.isNumber(u)||(u=0),m.isNumber(h)||(h=u),m.isNumber(s)||(s=0),m.isNumber(l)||(l=s),v=e-t,b=n-i,m.isNumber(this.relativeWidth)&&(t=0,e=v=V-P-w),m.isNumber(this.relativeHeight)&&(i=0,n=b=A-O-T),m.isNumber(this._pixelWidth)&&(t=0,v=this._pixelWidth-P-w),m.isNumber(M)&&v<M&&(t=0,v=this.minWidth-P-w),m.isNumber(this._pixelHeight)&&(i=0,b=this._pixelHeight-O-T),m.isNumber(F)&&b<F&&(i=0,b=F-O-T);var et=l-s,it=h-u;if("none"!=this.layout&&(this.contentAlign||this.contentValign)&&d.length>0){var nt,rt,at=v,ot=b;at<et&&(at=et),ot<it&&(ot=it),"center"==this.contentAlign&&(nt=(at-et)/2),"right"==this.contentAlign&&(nt=at-et),"middle"==this.contentValign&&(rt=(ot-it)/2),"bottom"==this.contentValign&&(rt=ot-it),m.isNumber(nt)&&f.each(d.iterator(),function(t){var e=t.maxLeft,i=nt;"horizontal"==p.layout&&(t.x=t.pixelX+i),"grid"==p.layout&&(t.x=t.pixelX+i),"vertical"==p.layout&&(i+=t.pixelMarginLeft,"none"==t.align&&(t.x=i-e)),"absolute"==p.layout&&(i+=t.pixelMarginLeft,"none"==t.align&&(t.x=i-e))}),m.isNumber(rt)&&f.each(d.iterator(),function(t){var e=t.maxTop,i=rt;"horizontal"==p.layout&&(i+=t.pixelMarginTop,"none"==t.valign&&(t.y=i-e)),"grid"==p.layout&&(i+=t.pixelMarginTop,t.y=i-e),"vertical"==p.layout&&(t.y=t.pixelY+i),"absolute"==p.layout&&(i+=t.pixelMarginTop,"none"==t.valign&&(t.y=i-e))})}var st=this.bbox;v=y.max(v,M),b=y.max(b,F),this.contentWidth=v,this.contentHeight=b,v=y.min(v,V),b=y.min(b,A),this._bbox={x:t,y:i,width:v,height:b};var lt=this.maxLeft,ut=this.maxTop,ht=this.maxBottom,ct=this.maxRight;if(this.measure(),(lt!=this.maxLeft||ct!=this.maxRight||ut!=this.maxTop||ht!=this.maxBottom)&&this.events.isEnabled("transformed")){var pt={type:"transformed",target:this};st&&(pt.dummyData=st.width+" "+v+"  "+st.height+" "+b),this.events.dispatchImmediately("transformed",pt)}this.dispatchImmediately("layoutvalidated")},e.prototype.updateCenter=function(){t.prototype.updateCenter.call(this),this.updateBackground()},e.prototype.updateBackground=function(){var t=this._background;t&&(t.x=this.maxLeft,t.y=this.maxTop,t.width=this.maxRight-this.maxLeft,t.height=this.maxBottom-this.maxTop)},e.prototype.getColumnWidth=function(t,e,i){var n=this,r=[],a=0;return g.each(t,function(t){!t.isMeasured||t.disabled||t.__disabled||(n.fixedWidthGrid?r[a]=i:r[a]=y.max(r[a],t.measuredWidth+t.pixelMarginRight+t.pixelMarginLeft),++a==e&&(a=0))}),r},Object.defineProperty(e.prototype,"layout",{get:function(){return this.getPropertyValue("layout")},set:function(t){this.setPropertyValue("layout",t)&&this.invalidateLayout()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"contentValign",{get:function(){return this.getPropertyValue("contentValign")},set:function(t){this.setPropertyValue("contentValign",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"contentAlign",{get:function(){return this.getPropertyValue("contentAlign")},set:function(t){this.setPropertyValue("contentAlign",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fixedWidthGrid",{get:function(){return this.getPropertyValue("fixedWidthGrid")},set:function(t){this.setPropertyValue("fixedWidthGrid",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxColumns",{get:function(){return this.getPropertyValue("maxColumns")},set:function(t){this.setPropertyValue("maxColumns",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"reverseOrder",{get:function(){return this.getPropertyValue("reverseOrder")},set:function(t){this.setPropertyValue("reverseOrder",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setStateOnChildren",{get:function(){return this.getPropertyValue("setStateOnChildren")},set:function(t){this.setPropertyValue("setStateOnChildren",t,!0)},enumerable:!0,configurable:!0}),e.prototype.fitsToBounds=function(t){var e=t.x,i=t.y;return e>=-.5&&e<=this.pixelWidth+.5&&i>=-.5&&i<=this.pixelHeight+.5},e.prototype.copyFrom=function(e){var i=this;t.prototype.copyFrom.call(this,e),this.layout=e.layout,this.setStateOnChildren=e.setStateOnChildren,e._background&&(this.background=e._background.clone(),this.background.copyFrom(e._background)),f.each(e.children.iterator(),function(t){t.shouldClone&&(t.clone().parent=i)})},Object.defineProperty(e.prototype,"preloader",{get:function(){var t=this._preloader;return t||(this.parent?this.parent.preloader:void 0)},set:function(t){this._preloader&&this.removeDispose(this._preloader),this._preloader=t,t&&(t.parent=this.tooltipContainer,this._disposers.push(t))},enumerable:!0,configurable:!0}),e.prototype.setPaper=function(e){var i=this,n=t.prototype.setPaper.call(this,e);return n&&(this._background&&(this._background.paper=e,this._background.topParent=this.topParent),this.children.each(function(t){t.setPaper(e),t.topParent=i.topParent})),n},e.prototype.removeFromInvalids=function(){t.prototype.removeFromInvalids.call(this),p.c.removeFromInvalidLayouts(this)},e.prototype.setDataItem=function(e){this._dataItem!=e&&(f.each(this.children.iterator(),function(t){t.dataItem=e}),this._background&&(this._background.dataItem=e)),t.prototype.setDataItem.call(this,e)},e.prototype.measureElement=function(){this.disabled||this.isTemplate||"none"==this.layout||this.__disabled||this.validateLayout()},Object.defineProperty(e.prototype,"fontFamily",{get:function(){return this.getPropertyValue("fontFamily")},set:function(t){this.setPropertyValue("fontFamily",t,!0)&&(this.setSVGAttribute({"font-family":t}),this.invalidateLabels())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fontSize",{get:function(){return this.getPropertyValue("fontSize")},set:function(t){this.setPropertyValue("fontSize",t,!0)&&(this.setSVGAttribute({"font-size":t}),this.invalidateLabels())},enumerable:!0,configurable:!0}),e.prototype.invalidateLabels=function(){this.children.each(function(t){t.hardInvalidate?t.hardInvalidate():t instanceof e&&t.invalidateLabels()})},Object.defineProperty(e.prototype,"fontWeight",{get:function(){return this.getPropertyValue("fontWeight")},set:function(t){this.setPropertyValue("fontWeight",t),this.setSVGAttribute({"font-weight":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"textDecoration",{get:function(){return this.getPropertyValue("textDecoration")},set:function(t){this.setPropertyValue("textDecoration",t),this.setSVGAttribute({"text-decoration":t})},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){this._background&&this._background.dispose(),this._shouldBeReady=[],this.disposeChildren(),t.prototype.dispose.call(this)},e.prototype.setState=function(e,i,n){var r=e;return e instanceof a.a&&(r=e.name),this.setStateOnChildren&&f.each(this.children.iterator(),function(t){t.setState(r,i,n),"active"!=r&&(t.isActive=!1)}),this._background&&this._background.setState(r),this.setStateOnSprites.length&&g.each(this.setStateOnSprites,function(t){t.setState(r,i,n)}),t.prototype.setState.call(this,e,i,n)},e.prototype.setActive=function(e){t.prototype.setActive.call(this,e),this._background&&(this._background.isActive=e)},e.prototype.dispatchReady=function(){var e=this;if(!this.isReady()&&!this.isDisposed()){var i=!0;f.eachContinue(this.children.iterator(),function(t){return!!(t.__disabled||t.disabled||t.isReady())||(i=!1,!1)}),g.eachContinue(this._shouldBeReady,function(t){return!!(t.__disabled||t.disabled||t.isReady())||(i=!1,!1)}),i?t.prototype.dispatchReady.call(this):p.c.events.once("exitframe",function(){e.dispatchReady(),v.b.requestFrame()},void 0,!1)}},e.prototype._systemUpdate=function(e){this.children.each(function(t){t.invalid&&(t._systemCheckIfValidate()?t.dataItem&&t.dataItem.component&&t.dataItem.component.dataInvalid?e.push(t):t.validate():e.push(t))}),t.prototype._systemUpdate.call(this,e)},e.prototype._systemValidatePositions=function(){this.children.each(function(t){t.positionInvalid&&t.validatePosition()}),t.prototype._systemValidatePositions.call(this)},e.prototype._systemValidateLayouts=function(){this.layoutInvalid&&!this.isDisposed()&&this.validateLayout()},Object.defineProperty(e.prototype,"tapToActivate",{get:function(){return this._tapToActivate},set:function(t){this._tapToActivate!=t&&this.setTapToActivate(t)},enumerable:!0,configurable:!0}),e.prototype.setTapToActivate=function(t){var e=this;this._tapToActivate=t,this.interactions.isTouchProtected=t,t&&this.interactions.setEventDisposer("container-tapToActivate",t,function(){return new s.c([e.events.on("hit",e.handleTapToActivate,e,!1),e.events.on("down",e.initTapTimeout,e,!1),e.events.on("track",e.initTapTimeout,e,!1),Object(u.b)().body.events.on("down",function(t){Object(u.b)().isLocalElement(t.pointer,e.paper.svg,e.uid)||e.handleTapToActivateDeactivation()},e,!1)])}),Object(u.b)()},e.prototype.handleTapToActivate=function(){this.interactions.isTouchProtected=!1,this.initTapTimeout()},e.prototype.handleTapToActivateDeactivation=function(){this.interactions.isTouchProtected=!0},e.prototype.initTapTimeout=function(){var t=this;this._tapToActivateTimeout&&this._tapToActivateTimeout.dispose(),this.tapToActivate&&!this.interactions.isTouchProtected&&this.tapTimeout&&(this._tapToActivateTimeout=this.setTimeout(function(){t.handleTapToActivateDeactivation()},this.tapTimeout))},e.prototype.hasLicense=function(){if(b.a.commercialLicense)return!0;for(var t=0;t<b.a.licenses.length;t++)if(b.a.licenses[t].match(/^CH.{5,}/i))return!0;return!1},e}(r.a);p.c.registeredClasses.Container=x},C84C:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("ohjg"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="LightenFilter",e.feColorMatrix=e.paper.add("feColorMatrix"),e.feColorMatrix.attr({type:"matrix"}),e.filterPrimitives.push(e.feColorMatrix),e.lightness=0,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"lightness",{get:function(){return this.properties.lightness},set:function(t){this.properties.lightness=t;var e=t+1;this.feColorMatrix.attr({values:e+" 0 0 0 0 0 "+e+" 0 0 0 0 0 "+e+" 0 0 0 0 0 1 0"})},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.LightenFilter=o},CNF5:function(t,e){t.exports={}},CTEm:function(t,e,i){"use strict";i.d(e,"a",function(){return p});var n=i("m4/l"),r=i("P/bD"),a=i("Tjl+"),o=i("MipW"),s=i("aCit"),l=i("ScGY"),u=i("Qkdp"),h=i("v9UT"),c=i("Mtpk"),p=function(t){function e(){var e=t.call(this)||this;return e._negativeBase=0,e._numberFormat="#,###.#####",e._outputFormat="svg",e._smallNumberThreshold=1,e.className="NumberFormatter",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.dispose=function(){t.prototype.dispose.call(this),this.language&&this.language.dispose()},Object.defineProperty(e.prototype,"language",{get:function(){return this._language||(this.sprite?this._language=this.sprite.language:this._language=new r.a),this._language},set:function(t){this._language=t},enumerable:!0,configurable:!0}),e.prototype.format=function(t,e){(void 0===e||c.isString(e)&&"number"===e.toLowerCase())&&(e=this._numberFormat);var i=Number(t);if(e instanceof Object)return this.intlLocales?new Intl.NumberFormat(this.intlLocales,e).format(i):new Intl.NumberFormat(void 0,e).format(i);e=h.cleanFormat(e);var n=this.parseFormat(e,this.language),r=void 0;return(r=i>this._negativeBase?n.positive:i<this._negativeBase?n.negative:n.zero).template.split(l.d).join(this.applyFormat(i,r))},e.prototype.parseFormat=function(t,e){var i=this,n=this.getCache(t);if(c.hasValue(n))return n;var r={positive:{thousands:{active:-1,passive:-1,interval:-1,separator:e.translateEmpty("_thousandSeparator")},decimals:{active:-1,passive:-1,separator:e.translateEmpty("_decimalSeparator")},template:"",source:"",parsed:!1},negative:{thousands:{active:-1,passive:-1,interval:-1,separator:e.translateEmpty("_thousandSeparator")},decimals:{active:-1,passive:-1,separator:e.translateEmpty("_decimalSeparator")},template:"",source:"",parsed:!1},zero:{thousands:{active:-1,passive:-1,interval:-1,separator:e.translateEmpty("_thousandSeparator")},decimals:{active:-1,passive:-1,separator:e.translateEmpty("_decimalSeparator")},template:"",source:"",parsed:!1}},a=(t=t.replace("||",l.e)).split("|");return r.positive.source=a[0],void 0===a[2]?r.zero=r.positive:r.zero.source=a[2],void 0===a[1]?r.negative=r.positive:r.negative.source=a[1],u.each(r,function(t,e){if(!e.parsed)if(void 0===i.getCache(e.source)){var n=e.source;"number"===n.toLowerCase()&&(n=c.isString(i._numberFormat)?i._numberFormat:"#,###.#####");for(var a=Object(o.b)().chunk(n,!0),s=0;s<a.length;s++){var u=a[s];if(u.text=u.text.replace(l.e,"|"),"value"===u.type){var h=u.text.match(/[#0.,]+[ ]?[abesABES%!]?[abesABES‰!]?/);if(h)if(null===h||""===h[0])e.template+=u.text;else{var p=h[0].match(/[abesABES%‰!]{2}|[abesABES%‰]{1}$/);p&&(e.mod=p[0].toLowerCase(),e.modSpacing=!!h[0].match(/[ ]{1}[abesABES%‰!]{1}$/));var d=h[0].split(".");if(""===d[0]);else{e.thousands.active=(d[0].match(/0/g)||[]).length,e.thousands.passive=(d[0].match(/\#/g)||[]).length+e.thousands.active;var f=d[0].split(",");1===f.length||(e.thousands.interval=c.getValue(f.pop()).length,0===e.thousands.interval&&(e.thousands.interval=-1))}void 0===d[1]||(e.decimals.active=(d[1].match(/0/g)||[]).length,e.decimals.passive=(d[1].match(/\#/g)||[]).length+e.decimals.active),e.template+=u.text.split(h[0]).join(l.d)}}else e.template+=u.text}i.setCache(e.source,e),e.parsed=!0}else r[t]=i.getCache(e.source)}),this.setCache(t,r),r},e.prototype.applyFormat=function(t,e){var i=t<0;t=Math.abs(t);var n="",r="",a=e.mod?e.mod.split(""):[];if(-1!==a.indexOf("b")){var o=this.applyPrefix(t,this.bytePrefixes,-1!==a.indexOf("!"));t=o[0],n=o[1],r=o[2],e.modSpacing&&(r=" "+r)}else if(-1!==a.indexOf("a")){var s=this.applyPrefix(t,t<this.smallNumberThreshold?this.smallNumberPrefixes:this.bigNumberPrefixes,-1!==a.indexOf("!"));t=s[0],n=s[1],r=s[2],e.modSpacing&&(r=" "+r)}else if(-1!==a.indexOf("%")){var l=t.toString().length;t*=100,t=parseFloat(t.toPrecision(l+2)),r="%"}else if(-1!==a.indexOf("‰")){l=t.toString().length;t*=1e3,t=parseFloat(t.toPrecision(l+3)),r="‰"}if(-1!==a.indexOf("e")){var u=void 0;u=e.decimals.passive>=0?t.toExponential(e.decimals.passive).split("e"):t.toExponential().split("e"),t=Number(u[0]),r="e"+u[1],e.modSpacing&&(r=" "+r)}else if(0===e.decimals.passive)t=Math.round(t);else if(e.decimals.passive>0){var c=Math.pow(10,e.decimals.passive);t=Math.round(t*c)/c}var p="",d=h.numberToString(t).split("."),f=d[0];if(f.length<e.thousands.active&&(f=Array(e.thousands.active-f.length+1).join("0")+f),e.thousands.interval>0){for(var g=[],y=f.split("").reverse().join(""),m=0,v=f.length;m<=v;m+=e.thousands.interval){var b=y.substr(m,e.thousands.interval).split("").reverse().join("");""!==b&&g.unshift(b)}f=g.join(e.thousands.separator)}p+=f,1===d.length&&d.push("");var x=d[1];return x.length<e.decimals.active&&(x+=Array(e.decimals.active-x.length+1).join("0")),""!==x&&(p+=e.decimals.separator+x),""===p&&(p="0"),0!==t&&i&&-1===a.indexOf("s")&&(p="-"+p),n&&(p=n+p),r&&(p+=r),p},e.prototype.applyPrefix=function(t,e,i){void 0===i&&(i=!1);for(var n=t,r="",a="",o=!1,s=1,l=0,u=e.length;l<u;l++)e[l].number<=t&&(0===e[l].number?n=0:(n=t/e[l].number,s=e[l].number),r=e[l].prefix,a=e[l].suffix,o=!0);return!o&&i&&e.length&&0!=t&&(n=t/e[0].number,r=e[0].prefix,a=e[0].suffix,o=!0),o&&(n=parseFloat(n.toPrecision(s.toString().length+Math.floor(n).toString().replace(/[^0-9]*/g,"").length))),[n,r,a]},e.prototype.invalidateSprite=function(){this.sprite&&this.sprite.invalidate()},Object.defineProperty(e.prototype,"numberFormat",{get:function(){return this._numberFormat},set:function(t){this._numberFormat=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"intlLocales",{get:function(){return this._intlLocales},set:function(t){this._intlLocales=t,this.invalidateSprite()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"negativeBase",{get:function(){return this._negativeBase},set:function(t){this._negativeBase=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bigNumberPrefixes",{get:function(){return c.hasValue(this._bigNumberPrefixes)||(this._bigNumberPrefixes=[{number:1e3,suffix:this.language.translate("_big_number_suffix_3")},{number:1e6,suffix:this.language.translate("_big_number_suffix_6")},{number:1e9,suffix:this.language.translate("_big_number_suffix_9")},{number:1e12,suffix:this.language.translate("_big_number_suffix_12")},{number:1e15,suffix:this.language.translate("_big_number_suffix_15")},{number:1e18,suffix:this.language.translate("_big_number_suffix_18")},{number:1e21,suffix:this.language.translate("_big_number_suffix_21")},{number:1e24,suffix:this.language.translate("_big_number_suffix_24")}]),this._bigNumberPrefixes},set:function(t){this._bigNumberPrefixes=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"smallNumberPrefixes",{get:function(){return c.hasValue(this._smallNumberPrefixes)||(this._smallNumberPrefixes=[{number:1e-24,suffix:this.language.translate("_small_number_suffix_24")},{number:1e-21,suffix:this.language.translate("_small_number_suffix_21")},{number:1e-18,suffix:this.language.translate("_small_number_suffix_18")},{number:1e-15,suffix:this.language.translate("_small_number_suffix_15")},{number:1e-12,suffix:this.language.translate("_small_number_suffix_12")},{number:1e-9,suffix:this.language.translate("_small_number_suffix_9")},{number:1e-6,suffix:this.language.translate("_small_number_suffix_6")},{number:.001,suffix:this.language.translate("_small_number_suffix_3")}]),this._smallNumberPrefixes},set:function(t){this._smallNumberPrefixes=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"smallNumberThreshold",{get:function(){return this._smallNumberThreshold},set:function(t){this._smallNumberThreshold=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bytePrefixes",{get:function(){return c.hasValue(this._bytePrefixes)||(this._bytePrefixes=[{number:1,suffix:this.language.translate("_byte_suffix_B")},{number:1024,suffix:this.language.translate("_byte_suffix_KB")},{number:1048576,suffix:this.language.translate("_byte_suffix_MB")},{number:1073741824,suffix:this.language.translate("_byte_suffix_GB")},{number:1099511627776,suffix:this.language.translate("_byte_suffix_TB")},{number:0x4000000000000,suffix:this.language.translate("_byte_suffix_PB")}]),this._bytePrefixes},set:function(t){this._bytePrefixes=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputFormat",{get:function(){return this._outputFormat},set:function(t){this._outputFormat=t.toLowerCase(),this.invalidateSprite()},enumerable:!0,configurable:!0}),e.prototype.escape=function(t){return t.replace("||",l.e)},e.prototype.unescape=function(t){return t.replace(l.e,"|")},e}(a.a);s.c.registeredClasses.NumberFormatter=p},Ca8x:function(t,e,i){var n=i("0sYB"),r=i("6aQQ"),a=Math.imul;n({target:"Math",stat:!0,forced:r(function(){return-5!=a(4294967295,5)||2!=a.length})},{imul:function(t,e){var i=+t,n=+e,r=65535&i,a=65535&n;return 0|r*a+((65535&i>>>16)*a+r*(65535&n>>>16)<<16>>>0)}})},CnhP:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("Vs7R"),a=i("aCit"),o=i("Gg2j"),s=i("Mtpk"),l=i("v9UT"),u=function(t){function e(){var e=t.call(this)||this;return e.className="RoundedRectangle",e.element=e.paper.add("path"),e.cornerRadius(3,3,3,3),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.innerWidth,i=this.innerHeight;if(s.isNumber(e)&&s.isNumber(i)){var n=o.min(e,i)/2,r=l.relativeToValue(this.cornerRadiusTopLeft,n),a=l.relativeToValue(this.cornerRadiusTopRight,n),u=l.relativeToValue(this.cornerRadiusBottomRight,n),h=l.relativeToValue(this.cornerRadiusBottomLeft,n),c=o.min(Math.abs(e/2),Math.abs(i/2)),p=o.fitToRange(r,0,c),d=o.fitToRange(a,0,c),f=o.fitToRange(u,0,c),g=o.fitToRange(h,0,c),y="M"+p+",0 L"+(e-d)+",0"+(" a"+d+","+d+" 0 0 1 "+d+","+d)+(" L"+e+","+(i-f))+(" a"+f+","+f+" 0 0 1 -"+f+","+f)+(" L"+g+","+i)+(" a"+g+","+g+" 0 0 1 -"+g+",-"+g)+(" L0,"+p)+(" a"+p+","+p+" 0 0 1 "+p+",-"+p)+" Z";this.path=y}},e.prototype.cornerRadius=function(t,e,i,n){this.cornerRadiusTopLeft=t,this.cornerRadiusTopRight=e,this.cornerRadiusBottomLeft=i,this.cornerRadiusBottomRight=n},Object.defineProperty(e.prototype,"cornerRadiusTopLeft",{get:function(){return this.getPropertyValue("cornerRadiusTopLeft")},set:function(t){this.setPercentProperty("cornerRadiusTopLeft",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cornerRadiusTopRight",{get:function(){return this.getPropertyValue("cornerRadiusTopRight")},set:function(t){this.setPercentProperty("cornerRadiusTopRight",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cornerRadiusBottomRight",{get:function(){return this.getPropertyValue("cornerRadiusBottomRight")},set:function(t){this.setPercentProperty("cornerRadiusBottomRight",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cornerRadiusBottomLeft",{get:function(){return this.getPropertyValue("cornerRadiusBottomLeft")},set:function(t){this.setPercentProperty("cornerRadiusBottomLeft",t,!0)},enumerable:!0,configurable:!0}),e.prototype.measureElement=function(){},Object.defineProperty(e.prototype,"bbox",{get:function(){return this.definedBBox?this.definedBBox:this.isMeasured?{x:0,y:0,width:this.innerWidth,height:this.innerHeight}:{x:0,y:0,width:0,height:0}},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.RoundedRectangle=u},CqLV:function(t,e,i){var n=i("vfdp"),r=i("jnLg").trim,a=i("DUr5"),o=n.parseFloat,s=1/o(a+"-0")!=-1/0;t.exports=s?function(t){var e=r(String(t)),i=o(e);return 0===i&&"-"==e.charAt(0)?-0:i}:o},CuFa:function(t,e,i){"use strict";i.d(e,"a",function(){return c});var n=i("m4/l"),r=i("Tjl+"),a=i("vMqJ"),o=i("P7v+"),s=i("aCit"),l=i("Wglt"),u=i("Mtpk"),h=i("tjMS"),c=function(t){function e(){var e=t.call(this)||this;return e._stops=new a.b,e.element=e.paper.addGroup("radialGradient"),e.id="gradient-"+s.c.getUniqueId(),e.element.attr({id:e.id}),e._disposers.push(e.element),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){var t,e=this,i=this.element;u.isNumber(this.cx)&&((t=this.cx)instanceof h.a&&(t=t.percent+"%"),i.attr({cx:t}));u.isNumber(this.cy)&&((t=this.cy)instanceof h.a&&(t=t.percent+"%"),i.attr({cy:t}));this.fx&&((t=this.fx)instanceof h.a&&(t=t.percent+"%"),i.attr({fx:t}));this.fy&&((t=this.fy)instanceof h.a&&(t=t.percent+"%"),i.attr({fy:t}));i.removeChildNodes(),l.each(l.indexed(this._stops.iterator()),function(t){var n=t[0],r=t[1],a=r.offset;u.isNumber(a)||(a=n/(e._stops.length-1));var o=e.paper.add("stop");u.hasValue(r.color)&&o.attr({"stop-color":r.color.toString()}),u.isNumber(r.opacity)&&o.attr({"stop-opacity":r.opacity}),u.isNumber(a)&&o.attr({offset:a}),i.add(o)})},e.prototype.addColor=function(t,e,i){this._stops.push({color:t,opacity:e,offset:i}),this.draw()},Object.defineProperty(e.prototype,"paper",{get:function(){return this._paper?this._paper:Object(o.b)()},set:function(t){this._paper!=t&&(this._paper=t,this.draw(),t.appendDef(this.element))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cx",{get:function(){return this._cx},set:function(t){this._cx=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cy",{get:function(){return this._cy},set:function(t){this._cy=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fx",{get:function(){return this._fx},set:function(t){this._fx=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fy",{get:function(){return this._fy},set:function(t){this._fy=t,this.draw()},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.stops.copyFrom(e.stops),this.cx=e.cx,this.cy=e.cy,this.fx=e.fx,this.fy=e.fy},Object.defineProperty(e.prototype,"stops",{get:function(){return this._stops},enumerable:!0,configurable:!0}),e.prototype.clear=function(){this._stops.clear()},e}(r.a);s.c.registeredClasses.RadialGradient=c},D3TA:function(t,e,i){"use strict";var n=i("UseD"),r=i("X/sl").map,a=i("Nfo5"),o=n.aTypedArray,s=n.aTypedArrayConstructor;(0,n.exportTypedArrayMethod)("map",function(t){return r(o(this),t,arguments.length>1?arguments[1]:void 0,function(t,e){return new(s(a(t,t.constructor)))(e)})})},"DA7/":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("Tjl+"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="ColorModifier",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.modify=function(t){return t},e}(r.a);a.c.registeredClasses.ColorModifier=o},DDWt:function(t,e,i){var n=i("3sMl"),r=i("8+rI").f,a=Function.prototype,o=a.toString,s=/^\s*function ([^ (]*)/;!n||"name"in a||r(a,"name",{configurable:!0,get:function(){try{return o.call(this).match(s)[1]}catch(t){return""}}})},DG6Q:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("C6dT"),a=i("CnhP"),o=i("aCit"),s=i("tjMS"),l=i("Gg2j"),u=function(t){function e(){var e=t.call(this)||this;return e.className="Column",e.width=Object(s.c)(80),e.height=Object(s.c)(80),e.events.disableType("transformed"),e.applyOnClones=!0,e.strokeOpacity=1,e.layout="none",e.createAssets(),e.events.on("childadded",e.handleKidAdded,e,!1),e}return Object(n.c)(e,t),e.prototype.handleKidAdded=function(){"none"==this.layout&&(this.layout="absolute")},e.prototype.createAssets=function(){this.column=this.createChild(a.a),this.column.shouldClone=!1,this.column.isMeasured=!1,this.column.cornerRadius(0,0,0,0),this._disposers.push(this.column)},e.prototype.validate=function(){t.prototype.validate.call(this);var e=this.column;e&&(e.width=l.min(this.pixelWidth,this.maxWidth),e.height=l.min(this.pixelHeight,this.maxHeight),e.invalid&&e.validate())},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.column&&this.column.copyFrom(e.column)},Object.defineProperty(e.prototype,"bbox",{get:function(){return this.definedBBox?this.definedBBox:this.column?{x:0,y:0,width:this.column.measuredWidth,height:this.column.measuredHeight}:{x:0,y:0,width:l.min(this.pixelWidth,this.maxWidth),height:l.min(this.pixelHeight,this.maxHeight)}},enumerable:!0,configurable:!0}),e}(r.a);o.c.registeredClasses.Column=u},DHte:function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("Tjl+"),a=i("8ZqG"),o=i("aCit"),s=i("hxI2"),l=i("Mtpk"),u=i("v9UT"),h=function(t){function e(){var e=t.call(this)||this;return e._list=[],e._currentStep=0,e._startIndex=0,e._currentPass=0,e.baseColor=new a.a({r:103,g:183,b:220}),e.stepOptions={},e.passOptions={brighten:-.2},e.step=1,e.minColors=20,e.minLightness=.2,e.maxLightness=.9,e.shuffle=!1,e.wrap=!0,e.reuse=!1,e.saturation=1,e.className="ColorSet",e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"list",{get:function(){return this._list||this.generate(this.minColors),this._list},set:function(t){this._list=t,this.reset()},enumerable:!0,configurable:!0}),e.prototype.getReusableColor=function(t){if(0==this._list.length)return this.generate(1),this.list[0];var e=t-Math.floor(t/this._list.length)*this.list.length;return this.list[e]},e.prototype.next=function(){var t;return this.list.length<=this._currentStep?this.reuse?t=this.getReusableColor(this._currentStep):(this.generate(this.minColors),t=this.list[this._currentStep]):t=this.list[this._currentStep],this._currentStep+=this.step,t.saturate(this.saturation)},e.prototype.getIndex=function(t){var e;return this.list.length<=t?this.reuse?e=this.getReusableColor(t):(this.generate(this.minColors),e=this.getIndex(t)):e=this.list[t],e.saturate(this.saturation)},e.prototype.reset=function(){this._currentStep=this._startIndex},Object.defineProperty(e.prototype,"currentStep",{get:function(){return this._currentStep},set:function(t){this._currentStep=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startIndex",{get:function(){return this._startIndex},set:function(t){this._startIndex=t,this.reset()},enumerable:!0,configurable:!0}),e.prototype.generate=function(t){var e=this.currentColor,i=s.rgbToHsl(l.getValue(e.rgb)),n=l.hasValue(this.stepOptions.hue)?this.stepOptions.hue:1/t,r={brighten:0,lighten:0,hue:i.h,lightness:i.l,saturation:i.s},o=[],h=0==this.list.length?0:1;if(this.reuse)for(var c=h;c<=t;c++)o.push(s.rgbToHsl(l.getValue(this._list[c].rgb)).h);else for(c=h;c<=t;c++){var p=i.h+n*c;this.wrap&&p>1&&(p-=1),o.push(p)}this.shuffle&&o.sort(function(t,e){return Math.random()-.5});for(c=0;c<t;c++){this.reuse?i=s.rgbToHsl(l.getValue(this._list[c].rgb)):i.h=o.shift(),this.applyStepOptions(i,r,c,this._currentPass);var d=Object(a.c)(s.hslToRgb(i)),f=(this.stepOptions.brighten||0)*c+(this.passOptions.brighten||0)*this._currentPass;0!=f&&(f=this.wrap?u.fitNumberRelative(f,this.minLightness,this.maxLightness):u.fitNumber(f,this.minLightness,this.maxLightness),d=d.brighten(f));var g=(this.stepOptions.lighten||0)*c+(this.passOptions.lighten||0)*this._currentPass;0!=g&&(g=this.wrap?u.fitNumberRelative(g,this.minLightness,this.maxLightness):u.fitNumber(g,this.minLightness,this.maxLightness),d=d.lighten(g)),this._list.push(d)}this._currentPass++},Object.defineProperty(e.prototype,"currentColor",{get:function(){return 0==this._list.length?this.baseColor.saturate(this.saturation):this._list[this._list.length-1].saturate(this.saturation)},enumerable:!0,configurable:!0}),e.prototype.applyStepOptions=function(t,e,i,n){t.l=e.lightness+(this.stepOptions.lightness||0)*i+(this.passOptions.lightness||0)*n,this.wrap?(t.l>1?t.l=t.l-Math.floor(t.l):t.l<0&&(t.l=-(t.l-Math.floor(t.l))),t.l=u.fitNumberRelative(t.l,this.minLightness,this.maxLightness)):(t.l>1?t.l=1:t.l<0&&(t.l=0),t.l=u.fitNumber(t.l,this.minLightness,this.maxLightness))},e.prototype.processConfig=function(e){if(e&&l.hasValue(e.list)&&l.isArray(e.list))for(var i=0,n=e.list.length;i<n;i++)e.list[i]instanceof a.a||(e.list[i]=Object(a.c)(e.list[i]));t.prototype.processConfig.call(this,e)},e}(r.a);o.c.registeredClasses.ColorSet=h},DMUu:function(t,e,i){var n=i("0sYB"),r=i("Uskt");n({global:!0,forced:parseInt!=r},{parseInt:r})},DUr5:function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},DUzp:function(t,e,i){"use strict";var n=i("0sYB"),r=i("vfdp"),a=i("mtbW"),o=i("YRD/"),s=a.ArrayBuffer;n({global:!0,forced:r.ArrayBuffer!==s},{ArrayBuffer:s}),o("ArrayBuffer")},DXFp:function(t,e,i){"use strict";i.d(e,"b",function(){return l}),i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("2I/e"),a=i("AC2I"),o=i("aCit"),s=i("Wglt"),l=function(t){function e(){var e=t.call(this)||this;return e.className="PercentChartDataItem",e.applyTheme(),e}return Object(n.c)(e,t),e}(r.b),u=function(t){function e(){var e=t.call(this)||this;return e.className="PercentChart",e.align="none",e.valign="none",e.chartContainer.minHeight=50,e.chartContainer.minWidth=50,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.validateData=function(){t.prototype.validateData.call(this),this.feedLegend()},e.prototype.feedLegend=function(){var t=this.legend;if(t){var e=[];s.each(this.series.iterator(),function(t){t.hiddenInLegend||s.each(t.dataItems.iterator(),function(i){i.hiddenInLegend||(e.push(i),i.legendSettings||(i.legendSettings=t.legendSettings))})}),t.data=e,t.dataFields.name="category"}},e.prototype.createSeries=function(){return new a.a},e.prototype.setLegend=function(e){t.prototype.setLegend.call(this,e),e&&(e.labels.template.text="{category}",e.valueLabels.template.text="{value.percent.formatNumber('#.0')}%",e.itemContainers.template.events.on("over",function(t){var e=t.target.dataItem.dataContext;e.visible&&!e.isHiding&&(e.slice.isHover=!0)}),e.itemContainers.template.events.on("out",function(t){t.target.dataItem.dataContext.slice.isHover=!1}))},e}(r.a);o.c.registeredClasses.PercentChart=u,o.c.registeredClasses.PercentChartDataItem=l},DgVf:function(t,e,i){i("eygo")("Float32",function(t){return function(e,i,n){return t(this,e,i,n)}})},Djm3:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("fixed")},{fixed:function(){return r(this,"tt","","")}})},DziZ:function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("Vs7R"),a=i("tjMS"),o=i("aCit"),s=i("v9UT"),l=i("Mtpk"),u=i("hGwe"),h=function(t){function e(){var e=t.call(this)||this;return e.className="Trapezoid",e.element=e.paper.add("path"),e.topSide=Object(a.c)(100),e.bottomSide=Object(a.c)(100),e.leftSide=Object(a.c)(100),e.rightSide=Object(a.c)(100),e.isMeasured=!1,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.pixelWidth,i=this.pixelHeight,n=s.relativeToValue(this.topSide,e),r=s.relativeToValue(this.bottomSide,e),a=s.relativeToValue(this.leftSide,i),o=s.relativeToValue(this.rightSide,i),h=(e-n)/2,c=(i-a)/2,p=e-(e-n)/2,d=(i-o)/2,f=e-(e-r)/2,g=i-(i-o)/2,y=(e-r)/2,m=i-(i-a)/2,v="",b="",x="",_="";if(l.hasValue(this.horizontalNeck)){var P=this.horizontalNeck.value;v=u.lineTo({x:e*P,y:Math.max(c,d)}),x=u.lineTo({x:e*P,y:Math.min(g,m)})}if(l.hasValue(this.verticalNeck)){var w=this.verticalNeck.value;b=u.lineTo({x:Math.min(p,f),y:i*w}),_=u.lineTo({x:Math.max(h,y),y:i*w})}var O=u.moveTo({x:h,y:c})+v+u.lineTo({x:p,y:d})+b+u.lineTo({x:f,y:g})+x+u.lineTo({x:y,y:m})+_;this.path=O},Object.defineProperty(e.prototype,"topSide",{get:function(){return this.getPropertyValue("topSide")},set:function(t){this.setPercentProperty("topSide",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bottomSide",{get:function(){return this.getPropertyValue("bottomSide")},set:function(t){this.setPercentProperty("bottomSide",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"leftSide",{get:function(){return this.getPropertyValue("leftSide")},set:function(t){this.setPercentProperty("leftSide",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rightSide",{get:function(){return this.getPropertyValue("rightSide")},set:function(t){this.setPercentProperty("rightSide",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"horizontalNeck",{get:function(){return this.getPropertyValue("horizontalNeck")},set:function(t){this.setPropertyValue("horizontalNeck",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"verticalNeck",{get:function(){return this.getPropertyValue("verticalNeck")},set:function(t){this.setPropertyValue("verticalNeck",t,!0)},enumerable:!0,configurable:!0}),e}(r.a);o.c.registeredClasses.Trapezoid=h},"E+A3":function(t,e,i){var n=i("exNg"),r=i("tHyI");t.exports=function(t){if(void 0===t)return 0;var e=n(t),i=r(e);if(e!==i)throw RangeError("Wrong length or index");return i}},E81g:function(t,e,i){var n=i("3weC"),r=i("Kg2n"),a=i("TQpL");t.exports=function(t,e){if(n(t),r(e)&&e.constructor===t)return e;var i=a.f(t);return(0,i.resolve)(e),i.promise}},EErT:function(t,e,i){var n=i("Kg2n");t.exports=function(t,e){if(!n(t))return t;var i,r;if(e&&"function"==typeof(i=t.toString)&&!n(r=i.call(t)))return r;if("function"==typeof(i=t.valueOf)&&!n(r=i.call(t)))return r;if(!e&&"function"==typeof(i=t.toString)&&!n(r=i.call(t)))return r;throw TypeError("Can't convert object to primitive value")}},EVp9:function(t,e,i){"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!n.call({1:2},1);e.f=a?function(t){var e=r(this,t);return!!e&&e.enumerable}:n},Ecdy:function(t,e,i){"use strict";i("yBTm");var n=i("0sYB"),r=i("1wCr"),a=i("leaB"),o=i("z3p0"),s=i("/vWR"),l=i("NRfM"),u=i("F/ei"),h=i("SqFF"),c=i("L56b"),p=i("JZRr"),d=i("cLsB"),f=i("5ou3"),g=i("3weC"),y=i("Kg2n"),m=i("QzDi"),v=i("Pm8L"),b=i("7bEX"),x=i("Ur2B"),_=i("KslR"),P=r("fetch"),w=r("Headers"),O=_("iterator"),T=h.set,S=h.getterFor("URLSearchParams"),C=h.getterFor("URLSearchParamsIterator"),I=/\+/g,k=Array(4),D=function(t){return k[t-1]||(k[t-1]=RegExp("((?:%[\\da-f]{2}){"+t+"})","gi"))},j=function(t){try{return decodeURIComponent(t)}catch(e){return t}},V=function(t){var e=t.replace(I," "),i=4;try{return decodeURIComponent(e)}catch(t){for(;i;)e=e.replace(D(i--),j);return e}},A=/[!'()~]|%20/g,M={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},F=function(t){return M[t]},E=function(t){return encodeURIComponent(t).replace(A,F)},R=function(t,e){if(e)for(var i,n,r=e.split("&"),a=0;a<r.length;)(i=r[a++]).length&&(n=i.split("="),t.push({key:V(n.shift()),value:V(n.join("="))}))},N=function(t){this.entries.length=0,R(this.entries,t)},L=function(t,e){if(t<e)throw TypeError("Not enough arguments")},B=u(function(t,e){T(this,{type:"URLSearchParamsIterator",iterator:b(S(t).entries),kind:e})},"Iterator",function(){var t=C(this),e=t.kind,i=t.iterator.next(),n=i.value;return i.done||(i.value="keys"===e?n.key:"values"===e?n.value:[n.key,n.value]),i}),U=function(){c(this,U,"URLSearchParams");var t,e,i,n,r,a,o,s,l,u=arguments.length>0?arguments[0]:void 0,h=[];if(T(this,{type:"URLSearchParams",entries:h,updateURL:function(){},updateSearchParams:N}),void 0!==u)if(y(u))if("function"==typeof(t=x(u)))for(i=(e=t.call(u)).next;!(n=i.call(e)).done;){if((o=(a=(r=b(g(n.value))).next).call(r)).done||(s=a.call(r)).done||!a.call(r).done)throw TypeError("Expected sequence with length 2");h.push({key:o.value+"",value:s.value+""})}else for(l in u)p(u,l)&&h.push({key:l,value:u[l]+""});else R(h,"string"==typeof u?"?"===u.charAt(0)?u.slice(1):u:u+"")},W=U.prototype;s(W,{append:function(t,e){L(arguments.length,2);var i=S(this);i.entries.push({key:t+"",value:e+""}),i.updateURL()},delete:function(t){L(arguments.length,1);for(var e=S(this),i=e.entries,n=t+"",r=0;r<i.length;)i[r].key===n?i.splice(r,1):r++;e.updateURL()},get:function(t){L(arguments.length,1);for(var e=S(this).entries,i=t+"",n=0;n<e.length;n++)if(e[n].key===i)return e[n].value;return null},getAll:function(t){L(arguments.length,1);for(var e=S(this).entries,i=t+"",n=[],r=0;r<e.length;r++)e[r].key===i&&n.push(e[r].value);return n},has:function(t){L(arguments.length,1);for(var e=S(this).entries,i=t+"",n=0;n<e.length;)if(e[n++].key===i)return!0;return!1},set:function(t,e){L(arguments.length,1);for(var i,n=S(this),r=n.entries,a=!1,o=t+"",s=e+"",l=0;l<r.length;l++)(i=r[l]).key===o&&(a?r.splice(l--,1):(a=!0,i.value=s));a||r.push({key:o,value:s}),n.updateURL()},sort:function(){var t,e,i,n=S(this),r=n.entries,a=r.slice();for(r.length=0,i=0;i<a.length;i++){for(t=a[i],e=0;e<i;e++)if(r[e].key>t.key){r.splice(e,0,t);break}e===i&&r.push(t)}n.updateURL()},forEach:function(t){for(var e,i=S(this).entries,n=d(t,arguments.length>1?arguments[1]:void 0,3),r=0;r<i.length;)n((e=i[r++]).value,e.key,this)},keys:function(){return new B(this,"keys")},values:function(){return new B(this,"values")},entries:function(){return new B(this,"entries")}},{enumerable:!0}),o(W,O,W.entries),o(W,"toString",function(){for(var t,e=S(this).entries,i=[],n=0;n<e.length;)t=e[n++],i.push(E(t.key)+"="+E(t.value));return i.join("&")},{enumerable:!0}),l(U,"URLSearchParams"),n({global:!0,forced:!a},{URLSearchParams:U}),a||"function"!=typeof P||"function"!=typeof w||n({global:!0,enumerable:!0,forced:!0},{fetch:function(t){var e,i,n,r=[t];return arguments.length>1&&(e=arguments[1],y(e)&&(i=e.body,"URLSearchParams"===f(i)&&((n=e.headers?new w(e.headers):new w).has("content-type")||n.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),e=m(e,{body:v(0,String(i)),headers:v(0,n)}))),r.push(e)),P.apply(this,r)}}),t.exports={URLSearchParams:U,getState:S}},EjGA:function(t,e,i){"use strict";i.d(e,"a",function(){return f});var n=i("m4/l"),r=i("Mpxm"),a=i("ZhuL"),o=i("4DCw"),s=i("Tjl+"),l=i("x79X"),u=i("P/bD"),h=i("7XB+"),c=i("aCit"),p=i("Mtpk"),d=i("Qkdp"),f=function(t){function e(e,i){var n=t.call(this)||this;return n.adapter=new l.a(n),n._requestOptions={},n._incremental=!1,n._incrementalParams={},n._keepCount=!1,n._updateCurrentData=!1,n.showPreloader=!0,n.className="DataSource",e&&(n.url=e),i&&(n.parser="string"==typeof i?r.b.getParserByType(i):i),n}return Object(n.c)(e,t),e.prototype.processData=function(t,e){if(this.dispatchImmediately("parsestarted"),this.parser||(this.parser=r.b.getParserByData(t,e),this.parser)){if(this.parser.options=this.adapter.apply("parserOptions",this.parser.options),this.parser.options.dateFields=this.adapter.apply("dateFields",this.parser.options.dateFields||[]),this.parser.options.numberFields=this.adapter.apply("numberFields",this.parser.options.numberFields||[]),this.parser.options.dateFields&&!this.parser.options.dateFormatter&&(this.parser.options.dateFormatter=this.dateFormatter),this.data=this.adapter.apply("parsedData",this.parser.parse(this.adapter.apply("unparsedData",t))),!p.hasValue(this.data)&&this.events.isEnabled("parseerror")){var i={type:"parseerror",message:this.language.translate("Error parsing file: %1",null,this.url),target:this};this.events.dispatchImmediately("parseerror",i)}this.dispatchImmediately("parseended"),p.hasValue(this.data)&&this.dispatchImmediately("done",{data:this.data}),this.lastLoad=new Date}else{if(this.events.isEnabled("parseerror")){var n={type:"parseerror",message:this.language.translate("No parser available for file: %1",null,this.url),target:this};this.events.dispatchImmediately("parseerror",n)}this.dispatchImmediately("parseended")}},Object.defineProperty(e.prototype,"url",{get:function(){var t=this.disableCache?this.timestampUrl(this._url):this._url;return this.incremental&&this.component.data.length&&(t=this.addUrlParams(t,this.incrementalParams)),this.adapter.apply("url",t)},set:function(t){this._url=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"requestOptions",{get:function(){return this.adapter.apply("requestOptions",this._requestOptions)},set:function(t){this._requestOptions=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parser",{get:function(){return this._parser||(this._parser=new a.a),this.adapter.apply("parser",this._parser)},set:function(t){this._parser=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"reloadFrequency",{get:function(){return this.adapter.apply("reloadTimeout",this._reloadFrequency)},set:function(t){var e=this;this._reloadFrequency!=t&&(this._reloadFrequency=t,t?p.hasValue(this._reloadDisposer)||(this._reloadDisposer=this.events.on("ended",function(t){e._reloadTimeout=setTimeout(function(){e.load()},e.reloadFrequency)})):p.hasValue(this._reloadDisposer)&&(this._reloadDisposer.dispose(),this._reloadDisposer=void 0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"incremental",{get:function(){return this.adapter.apply("incremental",this._incremental)},set:function(t){this._incremental=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"incrementalParams",{get:function(){return this.adapter.apply("incrementalParams",this._incrementalParams)},set:function(t){this._incrementalParams=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"keepCount",{get:function(){return this.adapter.apply("keepCount",this._keepCount)},set:function(t){this._keepCount=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"updateCurrentData",{get:function(){return this.adapter.apply("updateCurrentData",this._updateCurrentData)},set:function(t){this._updateCurrentData=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"language",{get:function(){return this._language?this._language:this.component?(this._language=this.component.language,this._language):(this.language=new u.a,this.language)},set:function(t){this._language=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dateFormatter",{get:function(){return this._dateFormatter?this._dateFormatter:this.component?(this._dateFormatter=this.component.dateFormatter,this._dateFormatter):(this.dateFormatter=new h.a,this.dateFormatter)},set:function(t){this._dateFormatter=t},enumerable:!0,configurable:!0}),e.prototype.timestampUrl=function(t){var e={};return e[(new Date).getTime().toString()]="",this.addUrlParams(t,e)},e.prototype.dispose=function(){t.prototype.dispose.call(this),this._reloadTimeout&&clearTimeout(this._reloadTimeout),p.hasValue(this._reloadDisposer)&&(this._reloadDisposer.dispose(),this._reloadDisposer=void 0)},e.prototype.load=function(){this.url&&(this._reloadTimeout&&clearTimeout(this._reloadTimeout),r.b.load(this))},e.prototype.addUrlParams=function(t,e){var i=t.match(/\?/)?"&":"?",n=[];return d.each(e,function(t,e){""!=e?n.push(t+"="+encodeURIComponent(e)):n.push(t)}),n.length?t+i+n.join("&"):t},e.prototype.processConfig=function(e){c.c.registeredClasses.json=a.a,c.c.registeredClasses.JSONParser=a.a,c.c.registeredClasses.csv=o.a,c.c.registeredClasses.CSVParser=o.a,t.prototype.processConfig.call(this,e)},e}(s.b)},EjSS:function(t,e,i){var n=i("6aQQ"),r=/#|\.prototype\./,a=function(t,e){var i=s[o(t)];return i==u||i!=l&&("function"==typeof e?n(e):!!e)},o=a.normalize=function(t){return String(t).replace(r,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",u=a.POLYFILL="P";t.exports=a},EyBv:function(t,e,i){i("0sYB")({target:"Object",stat:!0},{setPrototypeOf:i("KJuV")})},"F/ei":function(t,e,i){"use strict";var n=i("WeDP").IteratorPrototype,r=i("QzDi"),a=i("Pm8L"),o=i("NRfM"),s=i("CNF5"),l=function(){return this};t.exports=function(t,e,i){var u=e+" Iterator";return t.prototype=r(n,{next:a(1,i)}),o(t,u,!1,!0),s[u]=l,t}},FBxm:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("link")},{link:function(t){return r(this,"a","href",t)}})},FE89:function(t,e,i){"use strict";var n=i("NZ9V"),r=i("3weC"),a=i("tHyI"),o=i("swFJ"),s=i("L0in"),l=i("Xw1K");n("match",1,function(t,e,i){return[function(e){var i=o(this),n=void 0==e?void 0:e[t];return void 0!==n?n.call(e,i):new RegExp(e)[t](String(i))},function(t){var n=i(e,t,this);if(n.done)return n.value;var o=r(t),u=String(this);if(!o.global)return l(o,u);var h=o.unicode;o.lastIndex=0;for(var c,p=[],d=0;null!==(c=l(o,u));){var f=String(c[0]);p[d]=f,""===f&&(o.lastIndex=s(u,a(o.lastIndex),h)),d++}return 0===d?null:p}]})},FL8s:function(t,e,i){"use strict";var n=i("0sYB"),r=i("7dku").left,a=i("xlUI"),o=i("J+FZ"),s=a("reduce"),l=o("reduce",{1:0});n({target:"Array",proto:!0,forced:!s||!l},{reduce:function(t){return r(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},FZ9I:function(t,e,i){i("0FA2")("flat")},Fhpb:function(t,e,i){"use strict";var n=i("UseD"),r=i("39+r"),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("copyWithin",function(t,e){return r.call(a(this),t,e,arguments.length>2?arguments[2]:void 0)})},FzPm:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("Vs7R"),a=i("tjMS"),o=i("aCit"),s=i("v9UT"),l=i("Gg2j"),u=function(t){function e(){var e=t.call(this)||this;return e.className="Circle",e.element=e.paper.add("circle"),e.setPercentProperty("radius",Object(a.c)(100)),e.setPropertyValue("horizontalCenter","middle"),e.setPropertyValue("verticalCenter","middle"),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this),this.element.attr({r:this.pixelRadius})},Object.defineProperty(e.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(t){this.setPercentProperty("radius",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelRadius",{get:function(){return s.relativeToValue(this.radius,l.min(this.innerWidth/2,this.innerHeight/2))},enumerable:!0,configurable:!0}),e.prototype.measureElement=function(){var t=this.pixelRadius;this._bbox={x:-t,y:-t,width:2*t,height:2*t}},e}(r.a);o.c.registeredClasses.Circle=u},G83T:function(t,e,i){var n=i("0sYB"),r=Math.ceil,a=Math.floor;n({target:"Math",stat:!0},{trunc:function(t){return(t>0?a:r)(t)}})},GAaQ:function(t,e,i){"use strict";i.d(e,"a",function(){return D});var n,r=i("m4/l"),a=i("qJno"),o=i("x79X"),s=i("Vs7R"),l=i("W8Sc"),u=i("vMqJ"),h=i("+qIf"),c=i("7XB+"),p=i("akNo"),d=i("CTEm"),f=i("P/bD"),g=i("/IEW"),y=i("8ZqG"),m=i("aCit"),v=i("Q4nc"),b=i("58Sn"),x=i("LBDG"),_=i("Qkdp"),P=i("OVUc"),w=i("Mtpk"),O=i("v9UT"),T=i("hJ5i"),S=i("Gg2j");var C=/src: ([^;]+);/;function I(t,e,i){return Object(r.b)(this,void 0,void 0,function(){var n,a,o,s;return Object(r.d)(this,function(l){switch(l.label){case 0:return l.trys.push([0,2,,3]),[4,P.a(e)];case 1:return n=l.sent(),[3,3];case 2:return a=l.sent(),console.error("Failed to load stylesheet",e,a),[2];case 3:(o=t.createElement("style")).textContent=n.response,t.head.appendChild(o),l.label=4;case 4:return l.trys.push([4,,7,8]),[4,function(t){return Object(r.b)(this,void 0,void 0,function(){var e;return Object(r.d)(this,function(i){switch(i.label){case 0:e=t.sheet,i.label=1;case 1:return i.trys.push([1,2,,4]),[2,e.cssRules];case 2:return i.sent(),[4,new Promise(function(i,n){t.addEventListener("load",function(){i(e.cssRules)},!0),t.addEventListener("error",function(t){n(t)},!0),setTimeout(function(){n(new Error("Timeout while waiting for <style> to load"))},1e4)})];case 3:return[2,i.sent()];case 4:return[2]}})})}(o)];case 5:return s=l.sent(),[4,k(t,e,s,i)];case 6:return l.sent(),[3,8];case 7:return t.head.removeChild(o),[7];case 8:return[2]}})})}function k(t,e,i,n){return Object(r.b)(this,void 0,void 0,function(){var a,o,s,l,u;return Object(r.d)(this,function(r){switch(r.label){case 0:for(a=[],o=i.length,s=0;s<o;s++)(l=i[s]).type===CSSRule.IMPORT_RULE?(u=l.href)&&(u=O.joinUrl(e,u),a.push(I(t,u,n))):n(e,l);return a.length?[4,Promise.all(a)]:[3,2];case 1:r.sent(),r.label=2;case 2:return[2]}})})}var D=function(t){function e(e){var i=t.call(this)||this;return i.adapter=new o.a(i),i._formatOptions=new h.a,i._extraSprites=[],i._validateSprites=[],i._dynamicDataFields=!0,i._removedObjects=new u.b,i._hiddenObjects=[],i._objectsAlreadyHidden=!1,i._filePrefix="amCharts",i.useWebFonts=!0,i.useRetina=!0,i.useSimplifiedExport=!0,i.timeoutDelay=2e3,i._container=e,i.className="Export",i._formatOptions.setKey("png",{}),i._formatOptions.setKey("jpg",{quality:.8}),i._formatOptions.setKey("gif",{}),i._formatOptions.setKey("svg",{}),i._formatOptions.setKey("pdf",{fontSize:14,imageFormat:"png",addURL:!0,addColumnNames:!0}),i._formatOptions.setKey("json",{indent:2,useLocale:!0}),i._formatOptions.setKey("csv",{addColumnNames:!0,emptyAs:""}),i._formatOptions.setKey("xlsx",{addColumnNames:!0,useLocale:!0,emptyAs:""}),i._formatOptions.setKey("html",{addColumnNames:!0,emptyAs:""}),i._formatOptions.setKey("pdfdata",{fontSize:14,imageFormat:"png",addURL:!0,addColumnNames:!0,emptyAs:""}),i._formatOptions.setKey("print",{delay:500,printMethod:"iframe"}),i.adapter.add("options",function(t){var e=i._formatOptions.getKey(t.type);return t.options?t.options=_.merge(e,t.options):t.options=e,t}),i.applyTheme(),i.dispatchImmediately("inited"),i}return Object(r.c)(e,t),Object.defineProperty(e.prototype,"menu",{get:function(){return this._menu},set:function(t){var e=this;this._menu&&this.removeDispose(this._menu),this._menu=t,this._menu.container=this.container,this._menu.language=this._language,this._menu.adapter.add("branch",function(t){return t.branch.unsupported=!e.typeSupported(t.branch.type),t}),this._menu.events.on("hit",function(t){e.export(t.branch.type,t.branch.options),e.menu.close()}),this._menu.events.on("enter",function(t){e.export(t.branch.type,t.branch.options),e.menu.close()}),this._menu.events.on("over",function(t){e._disablePointers()}),this._menu.events.on("out",function(t){e._releasePointers()}),this.dispatchImmediately("menucreated"),this._menu.adapter.add("classPrefix",function(t){return t.classPrefix=v.a.classNamePrefix+t.classPrefix,t}),this._disposers.push(this._menu)},enumerable:!0,configurable:!0}),e.prototype.typeSupported=function(t){var e=!0;return"pdf"===t||("xlsx"===t?e=!!this._hasData():("print"!=t||window.print)&&(-1===["json","csv","html","pdfdata"].indexOf(t)||this._hasData())||(e=!1)),this.adapter.apply("supported",{supported:e,type:t}).supported},e.prototype._hasData=function(){return this.data&&this.data.length},e.prototype._getFunction=function(t){switch(t){case"png":case"gif":case"jpg":return this.getImage;case"svg":return this.getSVG;case"pdf":case"pdfdata":return this.getPDF;case"xlsx":return this.getExcel;case"csv":return this.getCSV;case"json":return this.getJSON;case"html":return this.getHTML;case"print":return this.getPrint;default:return this.unsupported}},e.prototype.export=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var i,n,a,o,s,l=this;return Object(r.d)(this,function(r){switch(r.label){case 0:return"custom"==t?(this.handleCustom(e),[2,!0]):(this.events.isEnabled("exportstarted")&&(i={type:"exportstarted",target:this,format:t,options:e},this.events.dispatchImmediately("exportstarted",i)),this.showPreloader(),this.timeoutDelay&&(this.hideTimeout(),this._timeoutTimeout=this.setTimeout(function(){if(l.events.isEnabled("exporttimedout")){var i={type:"exporttimedout",target:l,format:t,options:e};l.events.dispatchImmediately("exporttimedout",i)}l.showTimeout()},this.timeoutDelay)),this.hideNonExportableSprites(),n=this._getFunction(t),e=this.adapter.apply("options",{options:e,type:t}).options,[4,(n=this.adapter.apply("exportFunction",{func:n,type:t,options:e}).func).call(this,t,e)]);case 1:return a=r.sent(),this.restoreNonExportableSprites(),a?(this.events.isEnabled("exportfinished")&&(o={type:"exportfinished",target:this,format:t,options:e},this.events.dispatchImmediately("exportfinished",o)),this.hidePreloader(),this.hideTimeout(),this.menu&&this.menu.close(),"print"===t?[2,this.print(a,e,this.adapter.apply("title",{title:this.title,options:e}).title)]:"pdfdata"==t?[2,this.download(a,this.filePrefix+".pdf")]:[2,this.download(a,this.filePrefix+"."+t)]):(this.events.isEnabled("error")&&(s={type:"error",target:this,format:t,options:e},this.events.dispatchImmediately("error",s)),[2,!1])}})})},e.prototype.unsupported=function(t,e){return Object(r.b)(this,void 0,void 0,function(){return Object(r.d)(this,function(t){return[2,""]})})},e.prototype.handleCustom=function(t){w.hasValue(t)&&w.hasValue(t.callback)&&t.callback.call(t.callbackTarget||this,t)},e.prototype.getPrint=function(t,e){return Object(r.b)(this,void 0,void 0,function(){return Object(r.d)(this,function(t){return[2,this.getImage("png",e)]})})},e.prototype.getFontFamilies=function(){return Object(r.b)(this,void 0,void 0,function(){var t,e,i,n,a=this;return Object(r.d)(this,function(o){switch(o.label){case 0:return t=this.getDOMURL(),e=[],i=[],[4,function(t){return Object(r.b)(this,void 0,void 0,function(){var e,i;return Object(r.d)(this,function(n){switch(n.label){case 0:(e=document.createElement("iframe")).src="about:blank",e.setAttribute("title",""),document.head.appendChild(e),n.label=1;case 1:return n.trys.push([1,,3,4]),i=e.contentDocument,[4,Promise.all(T.map(document.styleSheets,function(e){var n=e.href;return null==n?k(i,location.href,e.cssRules,t):(n=O.joinUrl(location.href,n),I(i,n,t))}))];case 2:return n.sent(),[3,4];case 3:return document.head.removeChild(e),[7];case 4:return[2]}})})}(function(n,o){if(o.type===CSSRule.FONT_FACE_RULE){var s=o.cssText,l=C.exec(s);if(null!==l){var u=l[1].split(/ *, */).map(function(i){return Object(r.b)(a,void 0,void 0,function(){var a,o,s,l,u,h;return Object(r.d)(this,function(r){switch(r.label){case 0:return null!==(a=/^url\(["']?([^"'\)]+)["']?\)([^,]*)$/.exec(i))?[3,1]:[2,i];case 1:o=a[2],s=O.joinUrl(n,a[1]),r.label=2;case 2:return r.trys.push([2,7,,8]),[4,P.a(s,void 0,{responseType:"blob"})];case 3:return l=r.sent(),null==window.navigator.msSaveOrOpenBlob?[3,4]:(u=t.createObjectURL(l.blob),e.push(u),[3,6]);case 4:return[4,function(t){return new Promise(function(e,i){var n=new FileReader;n.onload=function(t){e(n.result)},n.onerror=function(t){i(t)},n.readAsDataURL(t)})}(l.blob)];case 5:u=r.sent(),r.label=6;case 6:return[2,'url("'+u+'")'+o];case 7:return h=r.sent(),console.error("Failed to load font",s,h),[2,null];case 8:return[2]}})})});i.push(Promise.all(u).then(function(t){return 0===(t=t.filter(function(t){return null!=t})).length?"":s.replace(C,"src: "+t.join(", ")+";")}))}}})];case 1:return o.sent(),[4,Promise.all(i)];case 2:return n=o.sent(),[2,{blobs:e,cssText:n.filter(function(t){return!!t}).join("\n")}]}})})},e.prototype.getImage=function(t,e,i){return Object(r.b)(this,void 0,void 0,function(){var n,a,o,s,l;return Object(r.d)(this,function(r){switch(r.label){case 0:return(n=this._objectsAlreadyHidden)||this.hideNonExportableSprites(),w.hasValue(e)||(e=this.getFormatOptions(t)),[4,this.awaitValidSprites()];case 1:return r.sent(),[4,this.simplifiedImageExport()];case 2:if(!r.sent())return[3,10];r.label=3;case 3:return r.trys.push([3,7,,9]),[4,this.getCanvas(e)];case 4:return a=r.sent(),!1===i?[3,6]:[4,this.addExtras(a,e)];case 5:a=r.sent(),r.label=6;case 6:return o=a.toDataURL(this.getContentType(t),e.quality),this.disposeCanvas(a),n||this.restoreNonExportableSprites(),[2,o];case 7:return s=r.sent(),console.error(s.message+"\n"+s.stack),console.warn("Simple export failed, falling back to advanced export"),[4,this.getImageAdvanced(t,e,i)];case 8:return l=r.sent(),n||this.restoreNonExportableSprites(),[2,l];case 9:return[3,12];case 10:return[4,this.getImageAdvanced(t,e,i)];case 11:return l=r.sent(),n||this.restoreNonExportableSprites(),[2,l];case 12:return[2]}})})},e.prototype.addExtras=function(t,e,i){return Object(r.b)(this,void 0,void 0,function(){var n,a,o,l,u,h,c,p,d,f,g,y,m,v,b=this;return Object(r.d)(this,function(x){switch(x.label){case 0:return this.extraSprites.length?(n=0,a=0,o=t.width,l=t.height,u=0,h=0,[4,Promise.all(T.map(this.extraSprites,function(t){return Object(r.b)(b,void 0,void 0,function(){var c,p,d,f;return Object(r.d)(this,function(r){switch(r.label){case 0:return(c=t instanceof s.a?{sprite:t,position:"bottom"}:t).position=c.position||"bottom",c.marginTop=c.marginTop||0,c.marginRight=c.marginRight||0,c.marginBottom=c.marginBottom||0,c.marginLeft=c.marginLeft||0,i?[4,c.sprite.exporting.getCanvasAdvanced(e)]:[3,2];case 1:return p=r.sent(),[3,4];case 2:return[4,c.sprite.exporting.getCanvas(e)];case 3:p=r.sent(),r.label=4;case 4:return d=p.width+c.marginLeft+c.marginRight,f=p.height+c.marginTop+c.marginBottom,"top"==c.position?(o=c.crop?l:S.max(o,d),a+=f):"right"==c.position?(l=c.crop?l:S.max(l,f),u+=d):"left"==c.position?(l=c.crop?l:S.max(l,f),n+=d):"bottom"===c.position&&(o=c.crop?l:S.max(o,d),h+=f),[2,{canvas:p,position:c.position,left:c.marginLeft,top:c.marginTop,width:d,height:f}]}})})}))]):[3,2];case 1:return c=x.sent(),(p=this.getDisposableCanvas()).width=n+o+u,p.height=a+l+h,d=p.getContext("2d"),(f=this.backgroundColor||this.findBackgroundColor(this.sprite.dom))&&(d.fillStyle=f.toString(),d.fillRect(0,0,p.width,p.height)),m=(g=n)+o,v=(y=a)+l,T.each(c,function(t){"top"==t.position?(y-=t.height,d.drawImage(t.canvas,n+t.left,y+t.top)):"right"==t.position?(d.drawImage(t.canvas,m+t.left,a+t.top),m+=t.width):"left"==t.position?(g-=t.width,d.drawImage(t.canvas,g+t.left,a+t.top)):"bottom"===t.position&&(d.drawImage(t.canvas,n+t.left,v+t.top),v+=t.height),b.disposeCanvas(t.canvas)}),d.drawImage(t,n,a),[2,p];case 2:return[2,t]}})})},e.prototype.getCanvas=function(t){return Object(r.b)(this,void 0,void 0,function(){var e,i,n,a,o,s,l,u,h,c,p,d,f,g,y,m;return Object(r.d)(this,function(r){switch(r.label){case 0:w.hasValue(t)||(t={}),e=this.backgroundColor||this.findBackgroundColor(this.sprite.dom),i=this.getDOMURL(),n=null,a=null,r.label=1;case 1:return r.trys.push([1,,4,5]),s=this.sprite.pixelWidth,l=this.sprite.pixelHeight,u=b.l(this.sprite.dom),h=b.m(this.sprite.dom),o=this.getDisposableCanvas(),c=this.getPixelRatio(t),o.style.width=s+"px",o.style.height=l+"px",o.width=s*c,o.height=l*c,p=o.getContext("2d"),1!=c&&p.setTransform(c,0,0,c,0,0),e&&(p.fillStyle=e.toString(),p.fillRect(0,0,s,l)),d=[],this.useWebFonts&&d.push(this.getFontFamilies().then(function(t){return a=t.blobs,t.cssText})),d.push(this.imagesToDataURI(this.sprite.dom,t)),d.push(this.prepForeignObjects(this.sprite.dom,t)),[4,Promise.all(d)];case 2:return f=r.sent(),g=this.normalizeSVG("<style>"+f[0]+"</style>"+this.serializeElement(this.sprite.paper.defs)+this.serializeElement(this.sprite.dom),t,s,l,u,h),y=new Blob([g],{type:"image/svg+xml"}),n=i.createObjectURL(y),[4,this.loadNewImage(n,s,l,"anonymous")];case 3:return m=r.sent(),p.drawImage(m,0,0),[3,5];case 4:return null!==n&&i.revokeObjectURL(n),null!==a&&T.each(a,function(t){i.revokeObjectURL(t)}),this.restoreRemovedObjects(),[7];case 5:return[2,o]}})})},e.prototype.getCanvasAdvanced=function(t){return Object(r.b)(this,void 0,void 0,function(){var e,i,n,a,o,s,l,u,h,c;return Object(r.d)(this,function(r){switch(r.label){case 0:return w.hasValue(t)||(t={}),[4,this.imagesToDataURI(this.sprite.dom,t)];case 1:return r.sent(),e=this.backgroundColor||this.findBackgroundColor(this.sprite.dom),[4,this.canvg];case 2:return i=r.sent(),n=this.sprite.pixelWidth,a=this.sprite.pixelHeight,o=b.l(this.sprite.dom),s=b.m(this.sprite.dom),l=this.normalizeSVG(this.serializeElement(this.sprite.paper.defs)+this.serializeElement(this.sprite.dom),t,n,a,o,s,e),u=this.getDisposableCanvas(),h=this.getPixelRatio(t),u.style.width=n*h+"px",u.style.height=a*h+"px",u.width=n*h,u.height=a*h,c={useCORS:!0},1!=h&&(c.ignoreDimensions=!0,c.scaleWidth=n*h,c.scaleHeight=a*h),i(u,l,c),[2,u]}})})},e.prototype.getImageAdvanced=function(t,e,i){return Object(r.b)(this,void 0,void 0,function(){var n,a,o;return Object(r.d)(this,function(r){switch(r.label){case 0:return(n=this._objectsAlreadyHidden)||this.hideNonExportableSprites(),w.hasValue(e)||(e=this.getFormatOptions(t)),[4,this.getCanvasAdvanced(e)];case 1:return a=r.sent(),!1===i?[3,3]:[4,this.addExtras(a,e,!0)];case 2:a=r.sent(),r.label=3;case 3:return o=a.toDataURL(this.getContentType(t),e.quality),this.disposeCanvas(a),n||this.restoreNonExportableSprites(),[2,o]}})})},e.prototype.getDisposableCanvas=function(){var t=document.createElement("canvas");return t.style.position="fixed",t.style.top="-10000px",document.body.appendChild(t),t},e.prototype.disposeCanvas=function(t){document.body.removeChild(t)},e.prototype.getPixelRatio=function(t){var e=t&&t.scale?t.scale:1;return(this.useRetina?O.getPixelRatio():1)*e},e.prototype.imagesToDataURI=function(t,i){return Object(r.b)(this,void 0,void 0,function(){var n,a,o,s,l,u;return Object(r.d)(this,function(r){switch(r.label){case 0:if(!(n=t.querySelectorAll("image")).length)return[3,2];for(a=[],o=n.length,s=0;s<o;s++)l=n[s],(u=l.getAttributeNS(e.XLINK,"href"))&&(-1!==u.indexOf("data:image")||(-1!==u.indexOf(".svg")?a.push(this.svgToDataURI(l,i)):a.push(this.imageToDataURI(l,i))));return[4,Promise.all(a)];case 1:return r.sent(),[2];case 2:return[2]}})})},e.prototype.prepForeignObjects=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var e,i,n;return Object(r.d)(this,function(r){if((e=t.querySelectorAll("foreignObject")).length)for(i=e.length,n=0;n<i;n++)this.temporarilyRemoveObject(e[n]);return[2]})})},e.prototype.imageToDataURI=function(t,i){return Object(r.b)(this,void 0,void 0,function(){var n,a,o;return Object(r.d)(this,function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4,this.loadNewImage(t.getAttributeNS(e.XLINK,"href"),null,null,"anonymous")];case 1:n=r.sent(),(a=document.createElement("canvas")).width=n.width,a.height=n.height,a.getContext("2d").drawImage(n,0,0);try{return o=a.toDataURL(),t.setAttribute("href",o),[2,o]}catch(e){return!1!==i.keepTainted&&this.temporarilyRemoveObject(t),[2,void 0]}return[3,3];case 2:return r.sent(),i&&!1===i.keepTainted||this.temporarilyRemoveObject(t),[2,void 0];case 3:return[2]}})})},e.prototype.svgToDataURI=function(t,i){return Object(r.b)(this,void 0,void 0,function(){var n,a,o,s;return Object(r.d)(this,function(r){switch(r.label){case 0:n=t.getAttributeNS(e.XLINK,"href"),r.label=1;case 1:return r.trys.push([1,3,,4]),[4,P.a(n)];case 2:return a=r.sent(),o=this.adapter.apply("charset",{charset:"base64",type:"svg",options:i}).charset,s=this.adapter.apply("svgToDataURI",{data:"data:"+this.getContentType("svg")+";"+o+","+btoa(a.response),options:i}).data,t.setAttributeNS(e.XLINK,"href",s),[2,s];case 3:return r.sent(),i&&!1===i.keepTainted||this.temporarilyRemoveObject(t),[2,void 0];case 4:return[2]}})})},e.prototype.temporarilyRemoveObject=function(t,e){var i=t.parentElement||t.parentNode;e||(e=this.sprite.paper.add("g").node),i.insertBefore(e,t),t.textContent,i.removeChild(t),this._removedObjects.push({element:t,placeholder:e})},e.prototype.restoreRemovedObjects=function(){for(var t;t=this._removedObjects.pop();){(t.placeholder.parentElement||t.placeholder.parentNode).insertBefore(t.element,t.placeholder)}},e.prototype.simplifiedImageExport=function(){return Object(r.b)(this,void 0,void 0,function(){var t,e,i,n,a,o,s;return Object(r.d)(this,function(r){switch(r.label){case 0:if(!1===this.useSimplifiedExport)return[2,!1];if(!1===(t=m.c.getCache("simplifiedImageExport"))||!0===t)return[2,t];r.label=1;case 1:r.trys.push([1,6,,7]),(e=document.createElement("canvas")).width=1,e.height=1,i=e.getContext("2d"),n=this.getDOMURL(),a=new Blob([this.normalizeSVG("<g></g>",{},1,1)],{type:"image/svg+xml"}),o=n.createObjectURL(a),s=void 0,r.label=2;case 2:return r.trys.push([2,4,,5]),[4,this.loadNewImage(o,1,1)];case 3:return s=r.sent(),[3,5];case 4:return r.sent(),[2,!1];case 5:i.drawImage(s,0,0),n.revokeObjectURL(o);try{return m.c.setCache("simplifiedImageExport",!0),[2,!0]}catch(t){return m.c.setCache("simplifiedImageExport",!1),[2,!1]}return[3,7];case 6:return r.sent(),m.c.setCache("simplifiedImageExport",!1),[2,!1];case 7:return[2]}})})},e.prototype.loadNewImage=function(t,e,i,n){return new Promise(function(r,a){var o;function s(){if(n){var e=o.src;o.onerror=function(){a(new Error('Loading image "'+t+'" failed'))},o.removeAttribute("crossorigin"),o.src="",o.src=e}else a(new Error('Loading image "'+t+'" failed'))}o=e&&i?new Image(e,i):new Image,n&&o.setAttribute("crossOrigin",n),o.onload=function(){r(o)},o.onabort=s,o.onerror=s,o.src=t})},e.prototype.getDOMURL=function(){return self.URL||self.webkitURL||self},e.prototype.getSVG=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var i,n,a,o,s,l,u,h;return Object(r.d)(this,function(r){switch(r.label){case 0:return(i=this._objectsAlreadyHidden)||this.hideNonExportableSprites(),[4,this.awaitValidSprites()];case 1:return r.sent(),n=this.sprite.pixelWidth,a=this.sprite.pixelHeight,o=b.l(this.sprite.dom),s=b.m(this.sprite.dom),l=this.normalizeSVG(this.serializeElement(this.sprite.paper.defs)+this.serializeElement(this.sprite.dom),e,n,a,o,s),u=this.adapter.apply("charset",{charset:"charset=utf-8",type:"svg",options:e}).charset,h=this.adapter.apply("getSVG",{data:"data:"+this.getContentType(t)+";"+u+","+encodeURIComponent(l),options:e}).data,i||this.restoreNonExportableSprites(),[2,h]}})})},e.prototype.normalizeSVG=function(t,e,i,n,r,a,o){var s="";i&&(s+='width="'+i+'px" '),n&&(s+='height="'+n+'px" ');var l="";r&&(l+="font-family: "+r.replace(/"/g,"")+";"),a&&(l+="font-size: "+a+";"),t.match(/<svg/)?""!==s&&(t=(t=(t=t.replace(/(<svg[^>]*)width="[^"]*"/,"$1")).replace(/(<svg[^>]*)height="[^"]*"/,"$1")).replace(/(<svg)/,"$1"+s)):t='<?xml version="1.0" encoding="utf-8"?><svg '+s+' style="'+l+'" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">'+t+"</svg>",o&&(t=t.replace(/(<svg[^>]*>)/,'$1<rect width="100%" height="100%" fill="'+o.rgba+'"/>')),x.a()&&(t=t.replace(/<feColorMatrix [^\/>]*\/>/gi,""));var u=new RegExp("url\\("+O.escapeForRgex(O.getBaseURI()),"g");return t=t.replace(u,"url(#"),t=this.adapter.apply("normalizeSVG",{data:t,options:e}).data},e.prototype.serializeElement=function(t){return(new XMLSerializer).serializeToString(t)},e.prototype.getPDF=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var i,n,a,o,s,l,u,h;return Object(r.d)(this,function(r){switch(r.label){case 0:return[4,this.getImage(e.imageFormat||"png",e)];case 1:return i=r.sent(),[4,this.pdfmake];case 2:return n=r.sent(),a=[30,30,30,30],o={pageSize:e.pageSize||"A4",pageOrientation:e.pageOrientation||"portrait",pageMargins:e.pageMargins||a,content:[]},(s=this.adapter.apply("title",{title:this.title,options:e}).title)&&o.content.push({text:s,fontSize:e.fontSize,bold:!0,margin:[0,0,0,15]}),e.addURL&&o.content.push({text:this.language.translate("Saved from")+": "+document.location.href,fontSize:e.fontSize,margin:[0,0,0,15]}),"pdfdata"!=t&&o.content.push({image:i,fit:this.getPageSizeFit(o.pageSize,o.pageMargins)}),"pdfdata"==t||e.addData?(u=(l=o.content).push,h={},[4,this.getPDFData("pdf",e)]):[3,4];case 3:u.apply(l,[(h.table=r.sent(),h)]),r.label=4;case 4:return o=this.adapter.apply("pdfmakeDocument",{doc:o,options:e}).doc,[4,new Promise(function(t,e){n.createPdf(o).getDataUrl(function(e){t(e)})})];case 5:return[2,r.sent()]}})})},e.prototype.getPDFData=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var t,i,n,a,o,s=this;return Object(r.d)(this,function(r){if(t={body:[]},i=this.adapter.apply("formatDataFields",{dataFields:this.dataFields,format:"pdf"}).dataFields,n=this.data,e.pivot)_.each(i,function(i,r){var a=[];e.addColumnNames&&a.push(r);for(var o=n.length,l=0;l<o;l++){var u=n[l][i];a.push(s.convertToSpecialFormat(i,u,e,!0))}t.body.push(s.getPDFDataRow(a,e,void 0,!0))});else for(e.addColumnNames&&(t.body.push(this.getPDFDataRow(i,e,void 0,!0)),t.headerRows=1),a=n.length,o=0;o<a;o++)t.body.push(this.getPDFDataRow(n[o],e,i));return[2,this.adapter.apply("pdfmakeTable",{table:t,options:e}).table]})})},e.prototype.getPDFDataRow=function(t,e,i,n){var r=this;void 0===n&&(n=!1);var a=[];return i||(i=t),_.each(i,function(i,o){var s=r.convertEmptyValue(i,t[i],e),l=n?s:r.convertToSpecialFormat(i,s,e);l=""+l,a.push(l)}),a},e.prototype.getPageSizeFit=function(t,e){var i=[0,0,0,0];"number"==typeof e?i=[e,e,e,e]:2==e.length?i=[e[0],e[1],e[0],e[1]]:4==e.length&&(i=e);var n={"4A0":[4767.87,6740.79],"2A0":[3370.39,4767.87],A0:[2383.94,3370.39],A1:[1683.78,2383.94],A2:[1190.55,1683.78],A3:[841.89,1190.55],A4:[595.28,841.89],A5:[419.53,595.28],A6:[297.64,419.53],A7:[209.76,297.64],A8:[147.4,209.76],A9:[104.88,147.4],A10:[73.7,104.88],B0:[2834.65,4008.19],B1:[2004.09,2834.65],B2:[1417.32,2004.09],B3:[1000.63,1417.32],B4:[708.66,1000.63],B5:[498.9,708.66],B6:[354.33,498.9],B7:[249.45,354.33],B8:[175.75,249.45],B9:[124.72,175.75],B10:[87.87,124.72],C0:[2599.37,3676.54],C1:[1836.85,2599.37],C2:[1298.27,1836.85],C3:[918.43,1298.27],C4:[649.13,918.43],C5:[459.21,649.13],C6:[323.15,459.21],C7:[229.61,323.15],C8:[161.57,229.61],C9:[113.39,161.57],C10:[79.37,113.39],RA0:[2437.8,3458.27],RA1:[1729.13,2437.8],RA2:[1218.9,1729.13],RA3:[864.57,1218.9],RA4:[609.45,864.57],SRA0:[2551.18,3628.35],SRA1:[1814.17,2551.18],SRA2:[1275.59,1814.17],SRA3:[907.09,1275.59],SRA4:[637.8,907.09],EXECUTIVE:[521.86,756],FOLIO:[612,936],LEGAL:[612,1008],LETTER:[612,792],TABLOID:[792,1224]}[t];return n[0]-=i[0]+i[2],n[1]-=i[1]+i[3],n},e.prototype.getExcel=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var i,n,a,o,s,l,u,h,c=this;return Object(r.d)(this,function(r){switch(r.label){case 0:return[4,this.xlsx];case 1:if(i=r.sent(),n=this.adapter.apply("xlsxWorkbookOptions",{options:{bookType:"xlsx",bookSST:!1,type:"base64"}}).options,a=this.normalizeExcelSheetName(this.adapter.apply("xlsxSheetName",{name:this.title||this.language.translate("Data")}).name),o={SheetNames:[a],Sheets:{}},s=[],l=this.adapter.apply("formatDataFields",{dataFields:this.dataFields,format:"xslx"}).dataFields,e.pivot)_.each(l,function(t,i){var n=[];e.addColumnNames&&n.push(i);for(var r=c.data.length,a=0;a<r;a++){var o=c.data[a][t];n.push(c.convertToSpecialFormat(t,o,e,!0))}s.push(c.getExcelRow(n,e,void 0,!0))});else for(e.addColumnNames&&s.push(this.getExcelRow(l,e,void 0,!0)),u=this.data.length,h=0;h<u;h++)s.push(this.getExcelRow(this.data[h],e,l));return o.Sheets[a]=i.utils.aoa_to_sheet(s),[2,this.adapter.apply("getExcel",{data:"data:"+this.getContentType(t)+";base64,"+i.write(o,n),options:e}).data]}})})},e.prototype.normalizeExcelSheetName=function(t){return t=t.replace(/([:\\\/?*\[\]]+)/g," "),O.truncateWithEllipsis(t,31,"...",!0)},e.prototype.getExcelRow=function(t,e,i,n){var r=this;void 0===n&&(n=!1);var a=[];return i||(i=t),_.each(i,function(i,o){var s=r.convertEmptyValue(i,t[i],e),l=n?s:r.convertToSpecialFormat(i,s,e,!0);a.push(l)}),a},e.prototype.getCSV=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var i,n,a,o,s,l,u,h,c=this;return Object(r.d)(this,function(r){if(i="",n=this.adapter.apply("formatDataFields",{dataFields:this.dataFields,format:"csv"}).dataFields,a="",o=this.data,e.pivot)_.each(n,function(t,n){var r=[];e.addColumnNames&&r.push(n);for(var s=o.length,l=0;l<s;l++){var u=o[l][t];r.push(c.convertToSpecialFormat(t,u,e,!0))}i+=a+c.getCSVRow(r,e,void 0,!0),a="\n"});else{for(s=o.length,l=0;l<s;l++)u=this.getCSVRow(o[l],e,n),e.reverse?i=u+a+i:i+=a+u,a="\n";e.addColumnNames&&(i=this.getCSVRow(n,e,void 0,!0)+a+i)}return h=this.adapter.apply("charset",{charset:"charset=utf-8",type:t,options:e}).charset,[2,this.adapter.apply("getCSV",{data:"data:"+this.getContentType(t)+";"+h+","+encodeURIComponent(i),options:e}).data]})})},e.prototype.getCSVRow=function(t,e,i,n){var r=this;void 0===n&&(n=!1);var a=e.separator||",",o=[];return i||(i=t),_.each(i,function(i,s){var l=r.convertEmptyValue(i,t[i],e),u=n?l:r.convertToSpecialFormat(i,l,e);u=(u=""+u).replace(/"/g,'""'),(e.forceQuotes||u.search(new RegExp('"|\n|'+a,"g"))>=0)&&(u='"'+u+'"'),o.push(u)}),o.join(a)},e.prototype.getHTML=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var i,n,a,o,s,l,u=this;return Object(r.d)(this,function(r){if(i="<table>",e.tableClass&&(i='<table class="'+e.tableClass+'">'),n=this.adapter.apply("formatDataFields",{dataFields:this.dataFields,format:"html"}).dataFields,a=this.data,e.pivot)_.each(n,function(t,n){var r=[];e.addColumnNames&&r.push(n);for(var o=a.length,s=0;s<o;s++){var l=a[s][t];r.push(u.convertToSpecialFormat(t,l,e,!0))}i+="\n"+u.getHTMLRow(r,e,void 0,!0)});else for(e.addColumnNames&&(i+="\n"+this.getHTMLRow(n,e,void 0,!0,!0)),o=a.length,s=0;s<o;s++)i+="\n"+this.getHTMLRow(a[s],e,n);return i+="</table>",l=this.adapter.apply("charset",{charset:"charset=utf-8",type:t,options:e}).charset,[2,this.adapter.apply("getHTML",{data:"data:"+this.getContentType(t)+";"+l+","+encodeURIComponent(i),options:e}).data]})})},e.prototype.getHTMLRow=function(t,e,i,n,r){var a=this;void 0===n&&(n=!1),void 0===r&&(r=!1);var o="\t<tr>";e.rowClass&&(o='\t<tr class="'+e.rowClass+'">'),i||(i=t);var s=r?"th":"td",l=!0;return _.each(i,function(i,r){var u=a.convertEmptyValue(i,t[i],e),h=n?u:a.convertToSpecialFormat(i,u,e);h=(h=""+h).replace(/[\u00A0-\u9999<>\&]/gim,function(t){return"&#"+t.charCodeAt(0)+";"});var c=s;e.pivot&&l&&(c="th"),e.cellClass?o+="\n\t\t<"+c+' class="'+e.cellClass+'">'+h+"</"+c+">":o+="\n\t\t<"+c+">"+h+"</"+c+">",l=!1}),o+="\n\t</tr>"},e.prototype.getJSON=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var i,n,a,o,s,l,u,h,c=this;return Object(r.d)(this,function(r){if(n=this.adapter.apply("formatDataFields",{dataFields:this.dataFields,format:"csv"}).dataFields,this._dynamicDataFields)i=this.data;else for(i=[],a=this.data,o=function(t,r){var o=a[r];if("object"==typeof o){var s={};_.each(o,function(t,i){w.hasValue(n[t])&&(s[n[t]]=c.convertToSpecialFormat(t,i,e))}),i.push(s)}},s=a.length,l=0;l<s;l++)o(s,l);return u=JSON.stringify(i,function(t,i){return"object"==typeof i&&_.each(i,function(t,n){i[t]=c.convertToSpecialFormat(t,n,e)}),i},e.indent),h=this.adapter.apply("charset",{charset:"charset=utf-8",type:t,options:e}).charset,[2,this.adapter.apply("getJSON",{data:"data:"+this.getContentType(t)+";"+h+","+encodeURIComponent(u),options:e}).data]})})},e.prototype.convertToSpecialFormat=function(t,e,i,n){if("number"==typeof e)if(this.isDateField(t))e=new Date(e);else{if(this.isDurationField(t))return this.durationFormatter.format(e,this.durationFormat);if(this.isNumberField(t)&&this.numberFormat)return this.numberFormatter.format(e,this.numberFormat)}return e instanceof Date?i.useTimestamps?e=e.getTime():i.useLocale?n||(e=e.toLocaleString()):e=this.dateFormatter.format(e,this.dateFormat):w.isString(e)&&this.isDateField(t)&&this.dateFormat&&(e=this.dateFormatter.format(this.dateFormatter.parse(e),this.dateFormat)),e},e.prototype.convertEmptyValue=function(t,e,i){return w.hasValue(e)?e:i.emptyAs},e.prototype.download=function(t,e){return Object(r.b)(this,void 0,void 0,function(){var i,n,a,o,s,l,u,h,c,p,d,f,g,y,m;return Object(r.d)(this,function(r){if(this.msBlobDownloadSupport()){if(f=t.split(";"),g=f.shift().replace(/data:/,""),t=decodeURIComponent(f.join(";").replace(/^[^,]*,/,"")),-1!=["image/svg+xml","application/json","text/csv"].indexOf(g))return i=new Blob([t],{type:g}),window.navigator.msSaveBlob(i,e),[2,!0];try{a=atob(t),t=a}catch(t){return[2,!1]}for(l=new Array(t.length),u=0;u<t.length;++u)h=t.charCodeAt(u),l[u]=h;c=new Blob([new Uint8Array(l)],{type:g}),window.navigator.msSaveBlob(c,e)}else if(this.blobDownloadSupport()){if((n=document.createElement("a")).download=e,document.body.appendChild(n),f=t.split(";"),g=f.shift().replace(/data:/,""),t=decodeURIComponent(f.join(";").replace(/^[^,]*,/,"")),-1!=["image/svg+xml","application/json","text/csv","text/html"].indexOf(g))return o=new Blob([t],{type:g}),s=window.URL.createObjectURL(o),n.href=s,n.download=e,n.click(),setTimeout(function(){document.body.removeChild(n),window.URL.revokeObjectURL(s)},100),[2,!0];try{a=atob(t),t=a}catch(t){return[2,!1]}for(l=new Array(t.length),u=0;u<t.length;++u)h=t.charCodeAt(u),l[u]=h;c=new Blob([new Uint8Array(l)],{type:g}),p=window.URL.createObjectURL(c),n.href=p,n.download=e,document.body.appendChild(n),n.click(),document.body.removeChild(n),setTimeout(function(){window.URL.revokeObjectURL(p)},100)}else this.linkDownloadSupport()?((d=document.createElement("a")).download=e,d.href=t,document.body.appendChild(d),d.click(),document.body.removeChild(d)):this.legacyIE()?4===(f=t.match(/^data:(.*);[ ]*([^,]*),(.*)$/)).length&&("base64"==f[2]?f[1].match(/^image\//)&&this.showModal('<img src="'+t+'" style="float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;" /><p>'+this.language.translate('To save the image, right-click thumbnail on the left and choose "Save picture as..."')+'</p><p style="text-align: center;"><small>'+this.language.translate("(Press ESC to close this message)")+"</small></p>",this.language.translate("Image Export Complete")):(g=void 0,e.match(/\.svg$/)?g="image/svg+xml":(g="text/plain",e+=".txt"),(y=document.createElement("iframe")).width="1px",y.height="1px",y.style.display="none",document.body.appendChild(y),(m=y.contentDocument).open(g,"replace"),m.write(decodeURIComponent(f[3])),m.close(),m.execCommand("SaveAs",!0,e),document.body.removeChild(y))):window.location.href=t;return[2,!0]})})},e.prototype.downloadSupport=function(){return this.linkDownloadSupport()||this.msBlobDownloadSupport()},e.prototype.linkDownloadSupport=function(){var t=m.c.getCache("linkDownloadSupport");if(!1===t||!0===t)return t;var e=void 0!==document.createElement("a").download;return m.c.setCache("linkDownloadSupport",e),e},e.prototype.blobDownloadSupport=function(){return w.hasValue(window.Blob)},e.prototype.msBlobDownloadSupport=function(){return w.hasValue(window.navigator.msSaveOrOpenBlob)},e.prototype.legacyIE=function(){var t=document.createElement("div");return t.innerHTML="\x3c!--[if lt IE 10]><i></i><![endif]--\x3e",1==t.getElementsByTagName("i").length},e.prototype.print=function(t,e,i){return Object(r.b)(this,void 0,void 0,function(){return Object(r.d)(this,function(n){return"css"==e.printMethod?[2,this.printViaCSS(t,e,i)]:[2,this.printViaIframe(t,e,i)]})})},e.prototype.printViaCSS=function(t,e,i){return Object(r.b)(this,void 0,void 0,function(){var n,a,o,s;return Object(r.d)(this,function(r){return n=document.documentElement.scrollTop||document.body.scrollTop,a=new b.c("body > *",{display:"none",position:"fixed",visibility:"hidden",opacity:"0",clipPath:"polygon(0px 0px,0px 0px,0px 0px,0px 0px);"}),i&&document&&document.title&&(o=document.title,document.title=i),(s=new Image).src=t,s.style.maxWidth="100%",s.style.display="block",s.style.position="relative",s.style.visibility="visible",s.style.opacity="1",s.style.clipPath="none",document.body.appendChild(s),this.setTimeout(function(){window.print()},50),/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&e.delay<1e3?e.delay=1e3:e.delay<100&&(e.delay=100),this.setTimeout(function(){document.body.removeChild(s),a.dispose(),o&&(document.title=document.title),document.documentElement.scrollTop=document.body.scrollTop=n},e.delay||500),[2,!0]})})},e.prototype.printViaIframe=function(t,e,i){return Object(r.b)(this,void 0,void 0,function(){var n,a;return Object(r.d)(this,function(r){return(n=document.createElement("iframe")).style.visibility="hidden",document.body.appendChild(n),n.contentWindow.document.open(),n.contentWindow.document.close(),(a=new Image).src=t,a.style.maxWidth="100%",i&&(n.contentWindow.document.title=i),n.contentWindow.document.body.appendChild(a),n.load=function(){n.contentWindow.document.body.appendChild(a)},this.setTimeout(function(){try{n.contentWindow.document.execCommand("print",!1,null)||n.contentWindow.print()}catch(t){n.contentWindow.print()}},e.delay||50),/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&e.delay<1e3?e.delay=1e3:e.delay<100&&(e.delay=100),this.setTimeout(function(){document.body.removeChild(n)},e.delay+50||100),[2,!0]})})},e.prototype.findBackgroundColor=function(t){var e=1,i=Object(b.p)(t,"background-color");if((i.match(/[^,]*,[^,]*,[^,]*,[ ]?0/)||"transparent"==i)&&(e=0),0==e){var n=t.parentElement;return n?this.findBackgroundColor(n):Object(y.c)("#fff")}return Object(y.c)(i,e)},Object.defineProperty(e.prototype,"container",{get:function(){return this.adapter.apply("container",{container:this._container}).container},set:function(t){this._container=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sprite",{get:function(){return this.adapter.apply("sprite",{sprite:this._sprite}).sprite},set:function(t){this._sprite=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"extraSprites",{get:function(){return this.adapter.apply("extraSprites",{extraSprites:this._extraSprites}).extraSprites},set:function(t){this._extraSprites=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"validateSprites",{get:function(){return this.adapter.apply("validateSprites",{validateSprites:this._validateSprites}).validateSprites},set:function(t){this._validateSprites=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"data",{get:function(){return this.adapter.apply("data",{data:this._data}).data},set:function(t){this._data=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dataFields",{get:function(){return this._dataFields||this.generateDataFields(),this.adapter.apply("dataFields",{dataFields:this._dataFields}).dataFields},set:function(t){this._dataFields=t,this._dynamicDataFields=!1},enumerable:!0,configurable:!0}),e.prototype.handleDataUpdated=function(){this._dynamicDataFields&&(this._dataFields=void 0)},Object.defineProperty(e.prototype,"dateFormatter",{get:function(){return this._dateFormatter||(this._dateFormatter=new c.a,this._dateFormatter.language=this.language),this.adapter.apply("dateFormatter",{dateFormatter:this._dateFormatter}).dateFormatter},set:function(t){this._dateFormatter=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dateFormat",{get:function(){return this.adapter.apply("dateFormat",{dateFormat:this._dateFormat}).dateFormat},set:function(t){this._dateFormat=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dateFields",{get:function(){return this._dateFields||(this._dateFields=new u.b),this.adapter.apply("dateFields",{dateFields:this._dateFields}).dateFields},set:function(t){this._dateFields=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"numberFormatter",{get:function(){return this._numberFormatter||(this._numberFormatter=new d.a,this._numberFormatter.language=this.language),this.adapter.apply("numberFormatter",{numberFormatter:this._numberFormatter}).numberFormatter},set:function(t){this._numberFormatter=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"numberFormat",{get:function(){return this.adapter.apply("numberFormat",{numberFormat:this._numberFormat}).numberFormat},set:function(t){this._numberFormat=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"numberFields",{get:function(){return this._numberFields||(this._numberFields=new u.b),this.adapter.apply("numberFields",{numberFields:this._numberFields}).numberFields},set:function(t){this._numberFields=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"durationFormatter",{get:function(){return this._durationFormatter||(this._durationFormatter=new p.a,this._durationFormatter.language=this.language),this.adapter.apply("durationFormatter",{durationFormatter:this._durationFormatter}).durationFormatter},set:function(t){this._durationFormatter=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"durationFormat",{get:function(){return this.adapter.apply("durationFormat",{durationFormat:this._durationFormat}).durationFormat},set:function(t){this._durationFormat=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"durationFields",{get:function(){return this._durationFields||(this._durationFields=new u.b),this.adapter.apply("durationFields",{durationFields:this._durationFields}).durationFields},set:function(t){this._durationFields=t},enumerable:!0,configurable:!0}),e.prototype.generateDataFields=function(){var t=this;this._dataFields={},this.data.length&&T.each(this.data,function(e){_.each(e,function(e,i){w.hasValue(t._dataFields[e])||(t._dataFields[e]=t.adapter.apply("dataFieldName",{name:e,field:e}).name)})})},e.prototype.isDateField=function(t){return this.adapter.apply("isDateField",{isDateField:this.dateFields.contains(t),field:t}).isDateField},e.prototype.isNumberField=function(t){return this.adapter.apply("isNumberField",{isNumberField:this.numberFields.contains(t),field:t}).isNumberField},e.prototype.isDurationField=function(t){return this.adapter.apply("isDurationField",{isDurationField:this.durationFields.contains(t),field:t}).isDurationField},e.prototype.getContentType=function(t){var e="";switch(t){case"png":case"gif":e="image/"+t;break;case"jpg":e="image/jpeg";break;case"svg":e="image/svg+xml";break;case"csv":e="text/csv";break;case"json":e="application/json";break;case"html":e="text/html";break;case"pdf":case"pdfdata":e="application/pdf";break;case"xlsx":e="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"}return this.adapter.apply("contentType",{contentType:e,type:t}).contentType},Object.defineProperty(e.prototype,"filePrefix",{get:function(){return this.adapter.apply("filePrefix",{filePrefix:this._filePrefix}).filePrefix},set:function(t){this._filePrefix=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"backgroundColor",{get:function(){return this.adapter.apply("backgroundColor",{backgroundColor:this._backgroundColor}).backgroundColor},set:function(t){this._backgroundColor=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"title",{get:function(){return this.adapter.apply("title",{title:this._title}).title},set:function(t){this._title=t},enumerable:!0,configurable:!0}),e.prototype.showPreloader=function(){var t=this.preloader;t&&(t.progress=.5,t.label.text="...")},e.prototype.hidePreloader=function(){var t=this.preloader;t&&(t.progress=1)},Object.defineProperty(e.prototype,"preloader",{get:function(){return this._sprite&&this._sprite.parent&&this._sprite.parent.preloader?this._sprite.parent.preloader:void 0},enumerable:!0,configurable:!0}),e.prototype.showTimeout=function(){this.showModal(this.adapter.apply("timeoutMessage",{message:this.language.translate("Export operation took longer than expected. Something might have gone wrong.")}).message)},e.prototype.hideTimeout=function(){this._timeoutTimeout&&(this.removeDispose(this._timeoutTimeout),this._timeoutTimeout=null),this.hideModal()},Object.defineProperty(e.prototype,"language",{get:function(){return this._language||(this._language=new f.a),this._language},set:function(t){this._language=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"modal",{get:function(){return this._modal||(this._modal=new l.a,this._modal.adapter.add("classPrefix",function(t){return t=v.a.classNamePrefix+t})),this._modal},enumerable:!0,configurable:!0}),e.prototype.showModal=function(t,e){this.hideModal(),this.hidePreloader();var i=this.modal;i.container=this.sprite.svgContainer.SVGContainer,i.content=t,i.readerTitle=e,i.open()},e.prototype.hideModal=function(){this._modal&&this.modal.close()},e.prototype._canvg=function(){return Object(r.b)(this,void 0,void 0,function(){var t;return Object(r.d)(this,function(e){switch(e.label){case 0:return[4,i.e("0471").then(i.bind(null,"pu93"))];case 1:return null!=(t=e.sent()).default?[2,t.default]:[2,t]}})})},Object.defineProperty(e.prototype,"canvg",{get:function(){return this._canvg()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pdfmake",{get:function(){return null==n&&(n=function(){return Object(r.b)(this,void 0,void 0,function(){var t,e,n,a;return Object(r.d)(this,function(r){switch(r.label){case 0:return[4,Promise.all([i.e("076f").then(i.bind(null,"o2M+")),i.e("076f").then(i.bind(null,"/9Au"))])];case 1:return t=r.sent(),e=t[0],n=t[1],(a=window).pdfMake=a.pdfMake||{},a.pdfMake.vfs=n.default,e.vfs=n.default,[2,e]}})})}()),n},enumerable:!0,configurable:!0}),e.prototype._xlsx=function(){return Object(r.b)(this,void 0,void 0,function(){return Object(r.d)(this,function(t){switch(t.label){case 0:return[4,i.e("bf3e").then(i.bind(null,"s5xg"))];case 1:return[2,t.sent()]}})})},Object.defineProperty(e.prototype,"xlsx",{get:function(){return this._xlsx()},enumerable:!0,configurable:!0}),e.prototype.setFormatOptions=function(t,e){this._formatOptions.setKey(t,e)},e.prototype.getFormatOptions=function(t){return this._formatOptions.getKey(t)},e.prototype._disablePointers=function(){w.hasValue(this._spriteInteractionsEnabled)||(this._spriteInteractionsEnabled=this.sprite.interactionsEnabled),this.sprite.interactionsEnabled=!1},e.prototype._releasePointers=function(){w.hasValue(this._spriteInteractionsEnabled)&&(this.sprite.interactionsEnabled=this._spriteInteractionsEnabled)},e.prototype.hideNonExportableSprites=function(){var t=this;if(!this._objectsAlreadyHidden){var e=this.sprite.svgContainer;e&&T.each(e.nonExportableSprites,function(e){e.isHidden||e.isHiding||!e.visible||t._hiddenObjects.push(e),e.hide(0)}),this._objectsAlreadyHidden=!0}},e.prototype.restoreNonExportableSprites=function(){this._objectsAlreadyHidden&&(T.each(this._hiddenObjects,function(t){t.show(0)}),this._hiddenObjects=[],this._objectsAlreadyHidden=!1)},e.prototype.awaitValidSprites=function(){return Object(r.b)(this,void 0,void 0,function(){var t;return Object(r.d)(this,function(e){switch(e.label){case 0:return t=[],this.validateSprites.length&&T.each(this.validateSprites,function(e,i){e.invalid&&t.push(new Promise(function(t,i){e.events.once("validated",function(e){t()})}))}),t.length?[4,Promise.all(t)]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}})})},e.prototype.processConfig=function(e){m.c.registeredClasses.ExportMenu=a.a,e&&w.hasValue(e.menu)&&!w.hasValue(e.menu.type)&&(e.menu.type="ExportMenu"),t.prototype.processConfig.call(this,e)},e.XLINK="http://www.w3.org/1999/xlink",e}(g.a)},Gg2j:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),i.d(e,"PI",function(){return r}),i.d(e,"HALFPI",function(){return a}),i.d(e,"RADIANS",function(){return o}),i.d(e,"DEGREES",function(){return s}),e.toNumberRange=function(t,e,i){if(n.hasValue(t))return u(t=n.toNumber(t),e,i);return t},e.round=l,e.ceil=function(t,e){if(!n.isNumber(e)||e<=0)return Math.ceil(t);var i=Math.pow(10,e);return Math.ceil(t*i)/i},e.stretch=function(t,e,i){return t*(i-e)+e},e.fitToRange=u,e.sin=h,e.tan=function(t){return l(Math.tan(o*t),10)},e.cos=c,e.max=p,e.min=d,e.closest=function(t,e){return t.reduce(function(t,i){return Math.abs(i-e)<Math.abs(t-e)?i:t})},e.intersect=function(t,e){var i=n.getValue(t.start),r=n.getValue(e.start),a=n.getValue(t.end),o=n.getValue(e.end);return Math.max(i,r)<=Math.min(a,o)},e.invertRange=function(t){var e=n.getValue(t.start);return{start:1-n.getValue(t.end),end:1-e}},e.intersection=function(t,e){var i=n.getValue(t.start),r=n.getValue(e.start),a=n.getValue(t.end),o=n.getValue(e.end),s=Math.max(i,r),l=Math.min(a,o);return l<s?void 0:{start:s,end:l}},e.getDistance=f,e.getHorizontalDistance=function(t,e){if(!t)return 0;e||(e={x:0,y:0});return Math.abs(t.x-e.x)},e.getVerticalDistance=function(t,e){if(!t)return 0;e||(e={x:0,y:0});return Math.abs(t.y-e.y)},e.getCubicCurveDistance=function(t,e,i,n,r){if(!t)return 0;e||(e={x:0,y:0});var a=0,o=t;if(r>0)for(var s=0;s<=r;s++){var l=m(t,e,i,n,s/r);a+=f(o,l),o=l}return a},e.getScale=function(t,e,i,n){var r=f(e,n),a=f(t,i);return Math.abs(a/r)},e.getMidPoint=function(t,e,i){n.isNumber(i)||(i=.5);return{x:t.x+(e.x-t.x)*i,y:t.y+(e.y-t.y)*i}},e.getRotation=g,e.getAngle=y,e.getCenterShift=function(t,e,i,n,r){var a=g(e,i,n,r)-90;a<0&&(a+=360);var o=f(e,n),s=Math.cos(a)/o+e.x,l=Math.cos(a)/o+e.y;return{x:s-t.x,y:l-t.y}},e.getBBox=function(t){if(t){var e=t.length;if(0!==e){for(var i,r=void 0,a=void 0,o=void 0,s=0;s<e;s++){var l=t[s];(!n.isNumber(a)||l.x>a)&&(a=l.x),(!n.isNumber(r)||l.x<r)&&(r=l.x),(!n.isNumber(i)||l.y<i)&&(i=l.y),(!n.isNumber(o)||l.y>o)&&(o=l.y)}return{x:r,y:i,width:a-r,height:o-i}}}return{x:0,y:0,width:0,height:0}},e.getCommonRectangle=function(t){var e=t.length;if(0!==e){for(var i=void 0,n=void 0,r=void 0,a=void 0,o=0;o<e;o++){var s=t[o];i=d(s.x,i),n=d(s.y,n),r=p(s.x+s.width,r),a=p(s.y+s.height,a)}return{x:i,y:n,width:r-i,height:a-n}}},e.getPointOnQuadraticCurve=function(t,e,i,n){var r=(1-n)*(1-n)*t.x+2*(1-n)*n*i.x+n*n*e.x,a=(1-n)*(1-n)*t.y+2*(1-n)*n*i.y+n*n*e.y;return{x:r,y:a}},e.getPointOnCubicCurve=m,e.getCubicControlPointA=function(t,e,i,n,r,a){return r=v(r),a=v(a),{x:(-t.x+e.x/r+i.x)*r,y:(-t.y+e.y/a+i.y)*a}},e.getCubicControlPointB=function(t,e,i,n,r,a){return r=v(r),a=v(a),{x:(e.x+i.x/r-n.x)*r,y:(e.y+i.y/a-n.y)*a}},e.adjustTension=v,e.normalizeAngle=b,e.fitAngleToRange=function(t,e,i){if(e>i){var n=e;e=i,i=n}t=b(t);var r=(e-b(e))/360;t<e&&(t+=360*(r+1));t>i&&(t-360>e?t-=360:t=t<e+(i-e)/2+180?i:e);t<e&&(t=t>e+(i-e)/2-180?e:i);return t},e.getArcRect=function(t,e,i){var r=Number.MAX_VALUE,a=Number.MAX_VALUE,o=-Number.MAX_VALUE,s=-Number.MAX_VALUE,l=[];n.isNumber(i)||(i=1);l.push(x(i,t)),l.push(x(i,e));for(var u=Math.min(90*Math.floor(t/90),90*Math.floor(e/90)),h=Math.max(90*Math.ceil(t/90),90*Math.ceil(e/90)),c=u;c<=h;c+=90)c>=t&&c<=e&&l.push(x(i,c));for(var p=0;p<l.length;p++){var d=l[p];d.x<r&&(r=d.x),d.y<a&&(a=d.y),d.x>o&&(o=d.x),d.y>s&&(s=d.y)}return{x:r,y:a,width:o-r,height:s-a}},e.getArcPoint=x,e.isInRectangle=function(t,e){if(t.x>=e.x&&t.x<=e.x+e.width&&t.y>e.y&&t.y<e.y+e.height)return!0;return!1},e.getLineIntersection=function(t,e,i,n){var r=((t.x*e.y-e.x*t.y)*(i.x-n.x)-(t.x-e.x)*(i.x*n.y-i.y*n.x))/((t.x-e.x)*(i.y-n.y)-(t.y-e.y)*(i.x-n.x)),a=((t.x*e.y-e.x*t.y)*(i.y-n.y)-(t.y-e.y)*(i.x*n.y-i.y*n.x))/((t.x-e.x)*(i.y-n.y)-(t.y-e.y)*(i.x-n.x));return{x:r,y:a}};var n=i("Mtpk"),r=Math.PI,a=r/2,o=r/180,s=180/r;function l(t,e,i){if(!n.isNumber(e)||e<=0){var r=Math.round(t);return i&&r-t==.5&&r--,r}var a=Math.pow(10,e);return Math.round(t*a)/a}function u(t,e,i){if(n.isNumber(e)){if(n.isNumber(i)&&i<e){var r=i;i=e,e=r}t<e&&(t=e)}return n.isNumber(i)&&t>i&&(t=i),t}function h(t){return l(Math.sin(o*t),10)}function c(t){return l(Math.cos(o*t),10)}function p(t,e){return n.isNumber(t)?n.isNumber(e)&&e>t?e:t:n.isNumber(e)?e:null}function d(t,e){return n.isNumber(t)?n.isNumber(e)&&e<t?e:t:n.isNumber(e)?e:null}function f(t,e){return t?(e||(e={x:0,y:0}),Math.sqrt(Math.pow(Math.abs(t.x-e.x),2)+Math.pow(Math.abs(t.y-e.y),2))):0}function g(t,e,i,n){var r=y(e,n)-y(t,i);return r<0&&(r+=360),r}function y(t,e){e||(e={x:2*t.x,y:2*t.y});var i=e.x-t.x,n=e.y-t.y,r=Math.atan2(n,i)*s;return r<0&&(r+=360),b(r)}function m(t,e,i,n,r){var a={x:0,y:0},o=1-r,s=o*o,l=s*o;return a.x=t.x*l+3*i.x*s*r+3*n.x*o*r*r+e.x*r*r*r,a.y=t.y*l+3*i.y*s*r+3*n.y*o*r*r+e.y*r*r*r,a}function v(t){return 1-t+1e-5}function b(t){return 360==t?360:t%360}function x(t,e){return{x:t*c(e),y:t*h(e)}}},Gkqv:function(t,e,i){"use strict";i("1M4z");var n=i("0sYB"),r=i("Kg2n"),a=function(){var t=!1,e=/[ac]/;return e.exec=function(){return t=!0,/./.exec.apply(this,arguments)},!0===e.test("abc")&&t}(),o=/./.test;n({target:"RegExp",proto:!0,forced:!a},{test:function(t){if("function"!=typeof this.exec)return o.call(this,t);var e=this.exec(t);if(null!==e&&!r(e))throw new Error("RegExp exec method returned something other than an Object or null");return!!e}})},Gmkj:function(t,e,i){"use strict";var n=i("UseD"),r=i("X/sl").findIndex,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("findIndex",function(t){return r(a(this),t,arguments.length>1?arguments[1]:void 0)})},GtDR:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("Vs7R"),a=i("aCit"),o=i("Gg2j"),s=function(t){function e(){var e=t.call(this)||this;return e.className="Rectangle",e.element=e.paper.add("rect"),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this._positionPrecision;this.pixelPerfect&&(e=0);var i=o.round(this.innerWidth,e),n=o.round(this.innerHeight,e);this.element.attr({width:i,height:n})},e.prototype.measureElement=function(){},Object.defineProperty(e.prototype,"bbox",{get:function(){return this.definedBBox?this.definedBBox:this.isMeasured?{x:0,y:0,width:this.innerWidth,height:this.innerHeight}:{x:0,y:0,width:0,height:0}},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.Rectangle=s},GtmK:function(t,e,i){var n=i("3pky"),r=i("XhXf").concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return n(t,r)}},GzrW:function(t,e,i){var n=i("0sYB"),r=i("Kg2n"),a=i("Tl3C").onFreeze,o=i("6EAy"),s=i("6aQQ"),l=Object.seal;n({target:"Object",stat:!0,forced:s(function(){l(1)}),sham:!o},{seal:function(t){return l&&r(t)?l(a(t)):t}})},HDh7:function(t,e,i){"use strict";i.d(e,"b",function(){return d}),i.d(e,"a",function(){return f});var n=i("hD5A"),r=i("UsNi"),a=i("W8Sc"),o=i("vMqJ"),s=i("v9UT"),l=i("58Sn"),u=i("hJ5i"),h=i("Mtpk"),c=i("NlGZ"),p=i.n(c),d=[],f=function(){function t(t,e){var i=this;if(this._disposed=!1,this.autoResize=!0,this.nonExportableSprites=[],this._disposers=[],this.cssScale=1,this.htmlElement=t,!e){var r=function(){i.autoResize&&i.measure()};this.resizeSensor=new p.a(t,r),this._disposers.push(new n.b(function(){i.resizeSensor.detach(r)}))}d.push(this);var a=document.createElement("div"),o=a.style;o.width="100%",o.height="100%",o.position="relative",t.appendChild(a),this.SVGContainer=a}return t.prototype.measure=function(){var t=s.width(this.htmlElement),e=s.height(this.htmlElement),i=this.container;i&&(this.width==t&&this.height==e||(this.width=t,this.height=e,t>0&&(i.maxWidth=t),e>0&&(i.maxHeight=e),l.n(this.SVGContainer)),i.maxWidth||(i.maxWidth=0),i.maxHeight||(i.maxHeight=0),this.cssScale=1,this.checkTransform(this.htmlElement))},Object.defineProperty(t.prototype,"container",{get:function(){return this._container},set:function(t){this._container=t,this.measure()},enumerable:!0,configurable:!0}),t.prototype.isDisposed=function(){return this._disposed},t.prototype.dispose=function(){this._disposed||u.remove(d,this),u.each(this._disposers,function(t){t.dispose()})},Object.defineProperty(t.prototype,"hideOverflow",{set:function(t){this.SVGContainer.style.overflow=t?"hidden":""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"modal",{get:function(){return h.hasValue(this._modal)||(this._modal=new a.a,this._modal.container=this.SVGContainer,this._disposers.push(this._modal)),this._modal},enumerable:!0,configurable:!0}),t.prototype.openModal=function(t,e){this.closeModal();var i=this.modal;return i.content=t,i.readerTitle=e,i.open(),i},t.prototype.closeModal=function(){this._modal&&this.modal.close()},Object.defineProperty(t.prototype,"popups",{get:function(){if(!h.hasValue(this._popups)){var t=new r.a;t.container=this.SVGContainer,this._popups=new o.e(t),this._disposers.push(new o.c(this._popups)),this._disposers.push(this._popups.template)}return this._popups},enumerable:!0,configurable:!0}),t.prototype.openPopup=function(t,e){var i=this.popups.create();return i.content=t,h.hasValue(e)&&(i.title=e),i.open(),i},t.prototype.closeAllPopups=function(){this.popups.each(function(t){t.close()})},t.prototype.checkTransform=function(t){if(window.getComputedStyle){if(t&&t.style){var e=window.getComputedStyle(t,null);if(e){var i=e.getPropertyValue("-webkit-transform")||e.getPropertyValue("-moz-transform")||e.getPropertyValue("-ms-transform")||e.getPropertyValue("-o-transform")||e.getPropertyValue("transform");if(i&&"none"!==i){var n=i.split("(")[1].split(")")[0].split(","),r=Number(n[0]),a=Number(n[1]),o=Math.sqrt(r*r+a*a);isNaN(o)||(this.cssScale*=o)}}}t.parentNode&&t.parentNode instanceof HTMLElement&&this.checkTransform(t.parentNode)}},t}()},"HMf+":function(t,e,i){"use strict";var n=i("0sYB"),r=i("vfdp"),a=i("EjSS"),o=i("z3p0"),s=i("Tl3C"),l=i("L4xm"),u=i("L56b"),h=i("Kg2n"),c=i("6aQQ"),p=i("XqrT"),d=i("NRfM"),f=i("047P");t.exports=function(t,e,i){var g=-1!==t.indexOf("Map"),y=-1!==t.indexOf("Weak"),m=g?"set":"add",v=r[t],b=v&&v.prototype,x=v,_={},P=function(t){var e=b[t];o(b,t,"add"==t?function(t){return e.call(this,0===t?0:t),this}:"delete"==t?function(t){return!(y&&!h(t))&&e.call(this,0===t?0:t)}:"get"==t?function(t){return y&&!h(t)?void 0:e.call(this,0===t?0:t)}:"has"==t?function(t){return!(y&&!h(t))&&e.call(this,0===t?0:t)}:function(t,i){return e.call(this,0===t?0:t,i),this})};if(a(t,"function"!=typeof v||!(y||b.forEach&&!c(function(){(new v).entries().next()}))))x=i.getConstructor(e,t,g,m),s.REQUIRED=!0;else if(a(t,!0)){var w=new x,O=w[m](y?{}:-0,1)!=w,T=c(function(){w.has(1)}),S=p(function(t){new v(t)}),C=!y&&c(function(){for(var t=new v,e=5;e--;)t[m](e,e);return!t.has(-0)});S||((x=e(function(e,i){u(e,x,t);var n=f(new v,e,x);return void 0!=i&&l(i,n[m],n,g),n})).prototype=b,b.constructor=x),(T||C)&&(P("delete"),P("has"),g&&P("get")),(C||O)&&P(m),y&&b.clear&&delete b.clear}return _[t]=x,n({global:!0,forced:x!=v},_),d(x,t),y||i.setStrong(x,t,g),x}},HZlQ:function(t,e,i){"use strict";var n=i("3sMl"),r=i("6aQQ"),a=i("kcMx"),o=i("KSd4"),s=i("EVp9"),l=i("7X7h"),u=i("tNpr"),h=Object.assign,c=Object.defineProperty;t.exports=!h||r(function(){if(n&&1!==h({b:1},h(c({},"a",{enumerable:!0,get:function(){c(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},i=Symbol();return t[i]=7,"abcdefghijklmnopqrst".split("").forEach(function(t){e[t]=t}),7!=h({},t)[i]||"abcdefghijklmnopqrst"!=a(h({},e)).join("")})?function(t,e){for(var i=l(t),r=arguments.length,h=1,c=o.f,p=s.f;r>h;)for(var d,f=u(arguments[h++]),g=c?a(f).concat(c(f)):a(f),y=g.length,m=0;y>m;)d=g[m++],n&&!p.call(f,d)||(i[d]=f[d]);return i}:h},Hfxi:function(t,e,i){var n=i("0sYB"),r=i("6EAy"),a=i("6aQQ"),o=i("Kg2n"),s=i("Tl3C").onFreeze,l=Object.freeze;n({target:"Object",stat:!0,forced:a(function(){l(1)}),sham:!r},{freeze:function(t){return l&&o(t)?l(s(t)):t}})},HgTb:function(t,e,i){"use strict";var n=i("X/sl").forEach,r=i("xlUI"),a=i("J+FZ"),o=r("forEach"),s=a("forEach");t.exports=o&&s?[].forEach:function(t){return n(this,t,arguments.length>1?arguments[1]:void 0)}},HnbP:function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t}},Hp8y:function(t,e,i){var n=i("vfdp"),r=i("pVcl"),a=i("yBTm"),o=i("k2B3"),s=i("KslR"),l=s("iterator"),u=s("toStringTag"),h=a.values;for(var c in r){var p=n[c],d=p&&p.prototype;if(d){if(d[l]!==h)try{o(d,l,h)}catch(t){d[l]=h}if(d[u]||o(d,u,c),r[c])for(var f in a)if(d[f]!==a[f])try{o(d,f,a[f])}catch(t){d[f]=a[f]}}}},HyBf:function(t,e,i){i("0sYB")({target:"Number",stat:!0},{isInteger:i("IpLv")})},I42a:function(t,e,i){var n=i("8nEM"),r=Math.abs,a=Math.pow,o=a(2,-52),s=a(2,-23),l=a(2,127)*(2-s),u=a(2,-126);t.exports=Math.fround||function(t){var e,i,a=r(t),h=n(t);return a<u?h*function(t){return t+1/o-1/o}(a/u/s)*u*s:(i=(e=(1+s/o)*a)-(e-a))>l||i!=i?h*(1/0):h*i}},IN7q:function(t,e,i){"use strict";var n=i("UseD"),r=i("7dku").left,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("reduce",function(t){return r(a(this),t,arguments.length,arguments.length>1?arguments[1]:void 0)})},ISWh:function(t,e,i){"use strict";i.d(e,"a",function(){return v});var n=i("m4/l"),r=i("C6dT"),a=i("xIv9"),o=i("aGXA"),s=i("zhwk"),l=i("qCRI"),u=i("CnhP"),h=i("aCit"),c=i("WYhe"),p=i("MIZb"),d=i("tjMS"),f=i("Gg2j"),g=i("0FpR"),y=i("Mtpk"),m=i("v9UT"),v=function(t){function e(){var e=t.call(this)||this;e._previousStart=0,e._previousEnd=1,e._prevStart=0,e._prevEnd=1,e._isBusy=!1,e._skipRangeEvents=!1,e.updateWhileMoving=!0,e.className="Scrollbar",e.minHeight=12,e.minWidth=12,e.animationDuration=0,e.animationEasing=g.cubicOut,e.margin(10,10,10,10);var i=new p.a,n=e.background;return n.cornerRadius(10,10,10,10),n.fill=i.getFor("fill"),n.fillOpacity=.5,e.showSystemTooltip=!0,e.startGrip=new a.a,e.endGrip=new a.a,e.events.on("transformed",e.updateThumb,e,!1),e.start=0,e.end=1,e.role="scrollbar",e.thumb.role="slider",e.thumb.readerLive="polite",e.startGrip.role="slider",e.endGrip.role="slider",e.events.once("inited",function(){e._previousStart=void 0,e.dispatchRangeChange()},void 0,!1),e.hideGrips=!1,e.orientation="horizontal",e.setSVGAttribute({"aria-valuemin":"0"}),e.setSVGAttribute({"aria-valuemax":"100"}),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),"horizontal"===this.orientation?(y.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Use TAB to select grip buttons or left and right arrows to change selection")),y.hasValue(this.thumb.readerDescription)||(this.thumb.readerDescription=this.language.translate("Use left and right arrows to move selection")),y.hasValue(this.startGrip.readerDescription)||(this.startGrip.readerDescription=this.language.translate("Use left and right arrows to move left selection")),y.hasValue(this.endGrip.readerDescription)||(this.endGrip.readerDescription=this.language.translate("Use left and right arrows to move right selection")),this.readerOrientation="horizontal"):(y.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Use TAB select grip buttons or up and down arrows to change selection")),y.hasValue(this.thumb.readerDescription)||(this.thumb.readerDescription=this.language.translate("Use up and down arrows to move selection")),y.hasValue(this.startGrip.readerDescription)||(this.startGrip.readerDescription=this.language.translate("Use up and down arrows to move upper selection")),y.hasValue(this.endGrip.readerDescription)||(this.endGrip.readerDescription=this.language.translate("Use up and down arrows to move lower selection")),this.readerOrientation="vertical"),this.readerControls=this.baseSprite.uidAttr()},e.prototype.validateLayout=function(){this.updateSize(),t.prototype.validateLayout.call(this),this.updateExtremes()},e.prototype.processBackground=function(){t.prototype.processBackground.call(this);var e=this.background;e.clickable=!0,e.events.on("hit",this.handleBgHit,this,void 0)},e.prototype.handleBgHit=function(t){this.makeBusy();var e=t.spritePoint;e=m.spritePointToSprite(e,this.background,this);var i=this.thumb;if("horizontal"==this.orientation){var n=e.x-i.pixelWidth/2;n=f.fitToRange(n,0,this.innerWidth-i.pixelWidth),this._thumbAnimation=i.animate({property:"x",to:n},this.animationDuration,this.animationEasing)}else{var r=e.y-i.pixelHeight/2;r=f.fitToRange(r,0,this.innerHeight-i.pixelHeight),this._thumbAnimation=i.animate({property:"y",to:r},this.animationDuration,this.animationEasing)}this.animationDuration>0?this._thumbAnimation.events.on("animationended",this.makeUnbusy,this,!1):(this._thumb.validate(),this.makeUnbusy())},e.prototype.makeBusy=function(){this._isBusy=!0,this._skipRangeEvents=!1,this._unbusyTimeout&&this.removeDispose(this._unbusyTimeout),this._unbusyTimeout=void 0,this.stopAnimations()},e.prototype.stopAnimations=function(){this._thumbAnimation&&this._thumbAnimation.stop(!0),this._zoomAnimation&&this._zoomAnimation.stop(!0)},e.prototype.makeUnbusy=function(){this._unbusyTimeout=this.setTimeout(this.makeUnbusyReal.bind(this),1.1*this.animationDuration)},e.prototype.makeUnbusyReal=function(){this._usingGrip=void 0,this._isBusy=!1,this.updateWhileMoving||this.dispatchRangeChange()},e.prototype.dispatchRangeChange=function(){this._previousEnd==this.end&&this._previousStart==this.start||(this._previousStart=this.start,this._previousEnd=this.end,this.dispatch("rangechanged"))},e.prototype.updateThumb=function(){if(this.parent){var t=this.thumb,e=this.start,i=this.end,n=this.startGrip,r=this.endGrip;if("horizontal"==this.orientation){var a=this.innerWidth;t.width=a*(i-e),t.maxX=a-t.pixelWidth,t.x=e*a,n.moveTo({x:t.pixelX,y:0},void 0,void 0,!0),r.moveTo({x:t.pixelX+t.pixelWidth,y:0},void 0,void 0,!0),n.readerTitle=this.language.translate("From %1",void 0,this.adapter.apply("positionValue",{value:Math.round(100*e)+"%",position:e}).value),n.readerValueNow=""+Math.round(100*e),n.readerValueText=n.readerTitle,r.readerTitle=this.language.translate("To %1",void 0,this.adapter.apply("positionValue",{value:Math.round(100*i)+"%",position:i}).value),r.readerValueNow=""+Math.round(100*i),r.readerValueText=r.readerTitle}else{var o=this.innerHeight;t.height=o*(i-e),t.maxY=o-t.pixelHeight,t.y=(1-i)*o,n.moveTo({x:0,y:t.pixelY+t.pixelHeight},void 0,void 0,!0),r.moveTo({x:0,y:t.pixelY},void 0,void 0,!0),n.readerTitle=this.language.translate("To %1",void 0,this.adapter.apply("positionValue",{value:Math.round(100*(1-e))+"%",position:1-e}).value),n.readerValueNow=""+Math.round(100*e),n.readerValueText=n.readerTitle,r.readerTitle=this.language.translate("From %1",void 0,this.adapter.apply("positionValue",{value:Math.round(100*(1-i))+"%",position:1-i}).value),r.readerValueNow=""+Math.round(100*i),r.readerValueText=r.readerTitle}t.readerTitle=this.language.translate("From %1 to %2",void 0,this.adapter.apply("positionValue",{value:Math.round(100*e)+"%",position:e}).value,this.adapter.apply("positionValue",{value:Math.round(100*i)+"%",position:i}).value),t.readerValueNow=""+Math.round(100*e),t.readerValueText=t.readerTitle,this.readerValueNow=""+Math.round(100*e),this.readerValueText=t.readerTitle,!this._skipRangeEvents&&this.updateWhileMoving&&this.dispatchRangeChange()}},e.prototype.updateExtremes=function(){var t=0,e=0,i=0,n=0;"horizontal"==this.orientation?(i=this.innerWidth,e=n=this.innerHeight/2):(n=this.innerHeight,t=i=this.innerWidth/2);var r=this.startGrip;r.minX=t,r.maxX=i,r.minY=e,r.maxY=n;var a=this.endGrip;a.minX=t,a.maxX=i,a.minY=e,a.maxY=n;var o=this.thumb;o.minX=t,o.maxX=i,o.minY=e,o.maxY=n},e.prototype.updateSize=function(){var t=this.orientation,e=this.startGrip;e&&(e.orientation=t),this.endGrip&&(this.endGrip.orientation=t);var i=this.thumb;i&&("horizontal"==t?(y.isNumber(this._pixelWidth)||this.width instanceof d.a||(this.width=Object(d.c)(100)),y.hasValue(this.percentHeight)&&(this.height=this.minHeight),i.height=this.innerHeight,i.verticalCenter="middle",i.horizontalCenter="left"):(y.isNumber(this._pixelHeight)||this.height instanceof d.a||(this.height=Object(d.c)(100)),y.hasValue(this.percentWidth)&&(this.width=this.minWidth),i.width=this.innerWidth,i.verticalCenter="top",i.horizontalCenter="middle"))},Object.defineProperty(e.prototype,"isBusy",{get:function(){return this._isBusy},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"start",{get:function(){return Math.min(this.getPosition(this._start),this.getPosition(this._end))},set:function(t){this._isBusy||(this.__start=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"__start",{get:function(){return this._start},set:function(t){this._start=this.getPosition(t),this.updateThumb()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"end",{get:function(){return Math.max(this.getPosition(this._start),this.getPosition(this._end))},set:function(t){this._isBusy||(this.__end=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"__end",{get:function(){return this._end},set:function(t){this._end=this.getPosition(t),this.updateThumb()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"range",{get:function(){return{start:this.start,end:this.end,priority:this._usingGrip}},enumerable:!0,configurable:!0}),e.prototype.skipRangeEvents=function(){this._isBusy||(this._skipRangeEvents=!0)},e.prototype.fixRange=function(t){t.start==f.round(this._start,2)&&t.end==f.round(this._end,2)||(this._start=t.start,this._end=t.end,this._skipRangeEvents=!0,this.updateThumb(),this._skipRangeEvents=!1,this.thumb.validate(),this.thumb.background.validate())},e.prototype.getPosition=function(t){return f.fitToRange(f.round(t,4),0,1)},Object.defineProperty(e.prototype,"orientation",{get:function(){return this.getPropertyValue("orientation")},set:function(t){this.setPropertyValue("orientation",t)&&("horizontal"===t?(this.startGrip.cursorOverStyle=l.a.horizontalResize,this.endGrip.cursorOverStyle=l.a.horizontalResize):(this.startGrip.cursorOverStyle=l.a.verticalResize,this.endGrip.cursorOverStyle=l.a.verticalResize),this.updateByOrientation(),this.invalidate())},enumerable:!0,configurable:!0}),e.prototype.updateByOrientation=function(){},Object.defineProperty(e.prototype,"startGrip",{get:function(){return this._startGrip},set:function(t){this._startGrip&&this.removeDispose(this._startGrip),this._startGrip=t,this.processGrip(t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endGrip",{get:function(){return this._endGrip},set:function(t){this._endGrip&&this.removeDispose(this._endGrip),this._endGrip=t,this.processGrip(t)},enumerable:!0,configurable:!0}),e.prototype.processGrip=function(t){t.parent=this,t.isMeasured=!1,t.focusable=!0,t.shouldClone=!1,t.zIndex=100,t.events.on("drag",this.handleGripDrag,this,!1),t.events.on("dragstop",this.makeUnbusy,this,!1),t.events.on("down",this.makeBusy,this,!1),this._disposers.push(t)},e.prototype.handleGripDrag=function(t){this.makeBusy(),t.target===this._startGrip?this._usingGrip="start":this._usingGrip="end","horizontal"==this.orientation?(this._start=this.startGrip.pixelX/this.innerWidth,this._end=this.endGrip.pixelX/this.innerWidth):(this._start=1-this.startGrip.pixelY/this.innerHeight,this._end=1-this.endGrip.pixelY/this.innerHeight),this.updateThumb()},Object.defineProperty(e.prototype,"thumb",{get:function(){if(!this._thumb){var t=new o.a;t.background.cornerRadius(10,10,10,10),t.padding(0,0,0,0),this.thumb=t}return this._thumb},set:function(t){var e=this;t&&(this._thumb&&this.removeDispose(this._thumb),this._thumb=t,t.parent=this,t.isMeasured=!1,t.inert=!0,t.draggable=!0,t.clickable=!0,t.hoverable=!0,t.focusable=!0,t.shouldClone=!1,t.zIndex=0,t.cursorOverStyle=l.a.grab,t.cursorDownStyle=l.a.grabbing,t.events.on("dragstart",this.makeBusy,this,!1),t.events.on("dragstop",this.makeUnbusy,this,!1),t.events.on("positionchanged",this.handleThumbPosition,this,!1),t.events.on("sizechanged",this.handleThumbPosition,this,!1),t.events.on("doublehit",this.handleDoubleClick,this,!1),this._disposers.push(Object(s.b)().body.events.on("keyup",function(t){c.b.isKey(t.event,["space","enter"])&&e.thumb.isFocused&&(t.event.preventDefault(),e.handleDoubleClick())})),this._disposers.push(this._thumb))},enumerable:!0,configurable:!0}),e.prototype.handleDoubleClick=function(){this.makeBusy();var t=0,e=1;0!=this.start||1!=this.end?(this._prevStart=this.start,this._prevEnd=this.end):(t=this._prevStart,e=this._prevEnd);var i=this.animate([{property:"__start",to:t},{property:"__end",to:e}],this.animationDuration,this.animationEasing);i&&!i.isFinished()?(i.events.on("animationended",this.makeUnbusy,this,!1),this._zoomAnimation=i):this.makeUnbusy()},e.prototype.handleThumbPosition=function(){var t=this.thumb;if("horizontal"==this.orientation){var e=this.innerWidth,i=t.innerWidth,n=t.pixelX;this._start=n/e,this._end=(n+i)/e,this.updateThumb()}else{var r=this.innerHeight,a=t.innerHeight,o=t.pixelY;this._start=1-(o+a)/r,this._end=1-o/r,this.updateThumb()}},e.prototype.createBackground=function(){return new u.a},Object.defineProperty(e.prototype,"hideGrips",{get:function(){return this._hideGrips},set:function(t){var e=this;this._hideGrips=t,this._overDisposer&&this.removeDispose(this._overDisposer),this._outDisposer&&this.removeDispose(this._outDisposer),t?(this._overDisposer=this.events.on("over",function(){e.startGrip.show(),e.endGrip.show()},void 0,!1),this._outDisposer=this.events.on("out",function(){e.startGrip.hide(),e.endGrip.hide()},void 0,!1),this.startGrip.hide(),this.endGrip.hide()):(this.startGrip.show(),this.endGrip.show())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"animationDuration",{get:function(){return this.getPropertyValue("animationDuration")},set:function(t){this.setPropertyValue("animationDuration",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"animationEasing",{get:function(){return this.getPropertyValue("animationEasing")},set:function(t){this.setPropertyValue("animationEasing",t)},enumerable:!0,configurable:!0}),e.prototype.asFunction=function(e){return"animationEasing"==e||t.prototype.asIs.call(this,e)},e}(r.a);h.c.registeredClasses.Scrollbar=v},IbQD:function(t,e,i){"use strict";var n=i("HMf+"),r=i("JZFm");t.exports=n("Set",function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},r)},IbTV:function(t,e,i){"use strict";i.d(e,"a",function(){return c});var n=i("m4/l"),r=i("TDx+"),a=i("aCit"),o=i("Gg2j"),s=i("Mtpk"),l=i("hGwe"),u=i("v9UT"),h=i("tjMS"),c=function(t){function e(){var e=t.call(this)||this;return e.fdx=0,e.fdy=0,e.className="AxisLabelCircular",e.padding(0,0,0,0),e.location=.5,e.radius=0,e.isMeasured=!1,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"relativeRotation",{get:function(){return this.getPropertyValue("relativeRotation")},set:function(t){if(this.setPropertyValue("relativeRotation",t,!0),!s.hasValue(t)){this.rotation=void 0;var e=this.dataItem;e&&e.component&&e.component.invalidateDataItems()}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(t){this.setPercentProperty("radius",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bent",{get:function(){return this.getPropertyValue("bent")},set:function(t){this.setPropertyValue("bent",t,!0),this.setPropertyValue("wrap",!1),this.setPropertyValue("horizontalCenter","none"),this.setPropertyValue("verticalCenter","none"),t&&(this.textAlign="middle")},enumerable:!0,configurable:!0}),e.prototype.pixelRadius=function(t){var e=1;return this.inside&&(e=-1),u.relativeToValue(this.radius,t)*e},e.prototype.pixelRadiusY=function(t,e){var i=1;this.inside&&(i=-1);var n=this.radius;return s.isNumber(n)?(n*=e/t,u.relativeToValue(n,t)*i):u.relativeToValue(n,e)*i},e.prototype.fixPosition=function(t,e,i,n,r){s.isNumber(i)||(i=e),s.isNumber(n)||(n=0),s.isNumber(r)||(r=0);var a={x:e*o.cos(t),y:i*o.sin(t)};this.invalid&&this.validate();var u=!1,c=this.radius;c instanceof h.a&&c.value<0?u=!0:c<0&&(u=!0);var p=this.relativeRotation,d=this.pixelRadius(e);if(this.bent){var f={x:e*o.cos(t+180),y:i*o.sin(t+180)};return this.path=l.moveTo(f)+l.arcTo(t+180,360,e+d,i+d*i/e),void(this.locationOnPath=.5)}if(s.isNumber(p)){this.horizontalCenter="none",this.verticalCenter="none",t=o.fitAngleToRange(t,-180,180);var g=this.bbox.width,y=this.bbox.height,m=this.pixelPaddingBottom,v=this.pixelPaddingTop,b=this.pixelPaddingLeft,x=this.pixelPaddingRight;t>90||t<-90?-90==p&&(p=90,g=0):(-90==p&&(y=-y),90==p&&(p=-90,g=-b-x,y=-y-v-m)),this.rotation=p+t+90;var _=o.sin(p)/2,P=o.cos(p)/2,w=this.rotation;this.dx=y*_*o.sin(w)-g*P*o.cos(w),this.dy=-y*_*o.cos(w)-g*P*o.sin(w),this.inside?t>90||t<-90?d-=(m+v)*o.cos(p)+(b+x)*o.sin(p):d+=(m+this.bbox.height+v)*o.cos(p)+(b+x+this.bbox.width)*o.sin(p):d+=(y+m+v)*o.cos(p)+(g+b+x)*o.sin(p),a.x+=o.cos(t)*d,a.y+=o.sin(t)*d*i/e}else this.horizontalCenter="middle",this.verticalCenter="middle",u?(this.dx=0,this.dy=0,a.x=(e+d)*o.cos(t),a.y=(i+d*i/e)*o.sin(t)):(this.dy=this._measuredHeight/2*o.sin(t),this.dx=this._measuredWidth/2*o.cos(t),a.x+=o.cos(t)*d,a.y+=o.sin(t)*d*i/e);a.x+=n,a.y+=r,this.fdx=this.dx,this.fdy=this.dy,this.moveTo(a)},e}(r.a);a.c.registeredClasses.AxisLabelCircular=c},Ibl2:function(t,e,i){"use strict";var n=i("0sYB"),r=i("rhk+").end;n({target:"String",proto:!0,forced:i("tf09")},{padEnd:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},Inf5:function(t,e,i){"use strict";i.d(e,"a",function(){return d});var n=i("m4/l"),r=i("C6dT"),a=i("Vs7R"),o=i("aCit"),s=i("Gg2j"),l=i("hGwe"),u=i("Mtpk"),h=i("v9UT"),c=i("tjMS"),p=i("CuFa"),d=function(t){function e(){var e=t.call(this)||this;return e.className="Slice",e.setPropertyValue("cornerRadius",0),e.setPropertyValue("startAngle",0),e.setPercentProperty("innerRadius",0),e.setPercentProperty("radius",0),e.setPropertyValue("arc",0),e.setPropertyValue("shiftRadius",0),e.strokeOpacity=1,e.setPropertyValue("layout","none"),e.slice=e.createChild(a.a),e.slice.isMeasured=!1,e._disposers.push(e.slice),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.radiusY;this.radius>0&&0==e&&(e=.01),this.slice.path=l.arc(this.startAngle,this.arc,this.radius,this.pixelInnerRadius,e,this.cornerRadius,this.innerCornerRadius),this.slice.invalidate(),this.shiftRadius=this.shiftRadius,this.realFill instanceof p.a&&this.updateGradient(this.realFill),this.realStroke instanceof p.a&&this.updateGradient(this.realStroke)},e.prototype.updateGradient=function(t){t.element.attr({gradientUnits:"userSpaceOnUse"}),t.element.attr({r:this.radius}),t.cx=0,t.cy=0,t.element.attr({radius:this.radius})},Object.defineProperty(e.prototype,"bbox",{get:function(){if(this.definedBBox)return this.definedBBox;if(this.isMeasured){var t=s.getArcRect(this.startAngle,this.startAngle+this.arc,this.pixelInnerRadius),e=s.getArcRect(this.startAngle,this.startAngle+this.arc,this.radius);return s.getCommonRectangle([t,e])}return{x:0,y:0,width:0,height:0}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startAngle",{get:function(){return this.getPropertyValue("startAngle")},set:function(t){this.setPropertyValue("startAngle",s.normalizeAngle(t),!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"arc",{get:function(){return this.getPropertyValue("arc")},set:function(t){u.isNumber(t)||(t=0),this.setPropertyValue("arc",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"radius",{get:function(){var t=this.getPropertyValue("radius");return u.isNumber(t)||(t=0),t},set:function(t){this.setPropertyValue("radius",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"radiusY",{get:function(){var t=this.getPropertyValue("radiusY");return u.isNumber(t)||(t=this.radius),t},set:function(t){this.setPropertyValue("radiusY",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(t){this.setPercentProperty("innerRadius",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelInnerRadius",{get:function(){return h.relativeToValue(this.innerRadius,this.radius)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cornerRadius",{get:function(){return this.getPropertyValue("cornerRadius")},set:function(t){this.setPropertyValue("cornerRadius",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"innerCornerRadius",{get:function(){return this.getPropertyValue("innerCornerRadius")},set:function(t){this.setPropertyValue("innerCornerRadius",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shiftRadius",{get:function(){return this.getPropertyValue("shiftRadius")},set:function(t){this.setPropertyValue("shiftRadius",t),this.dx=t*this.radius*this.ix,this.dy=t*this.radiusY*this.iy},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ix",{get:function(){return s.cos(this.middleAngle)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"iy",{get:function(){return this.radius,s.sin(this.middleAngle)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"middleAngle",{get:function(){return this.startAngle+this.arc/2},enumerable:!0,configurable:!0}),e.prototype.getTooltipX=function(){var t=this.getPropertyValue("tooltipX");if(u.isNumber(t))return t;var e=.5;t instanceof c.a&&(e=t.value);var i=h.relativeToValue(this.innerRadius,this.radius);return this.ix*(i+(this.radius-i)*e)},e.prototype.getTooltipY=function(){var t=this.getPropertyValue("tooltipY");if(u.isNumber(t))return t;var e=.5;t instanceof c.a&&(e=t.value);var i=h.relativeToValue(this.innerRadius,this.radius);return this.iy*(i+(this.radius-i)*e)+this.slice.dy},e}(r.a);o.c.registeredClasses.Slice=d},IpLv:function(t,e,i){var n=i("Kg2n"),r=Math.floor;t.exports=function(t){return!n(t)&&isFinite(t)&&r(t)===t}},IwOK:function(t,e,i){var n=i("vfdp").isFinite;t.exports=Number.isFinite||function(t){return"number"==typeof t&&n(t)}},Iz1H:function(t,e,i){"use strict";i.d(e,"a",function(){return n});var n=function(){function t(){this._disposed=!1,this._disposers=[]}return t.prototype.init=function(){},t.prototype.isDisposed=function(){return this._disposed},t.prototype.dispose=function(){if(!this._disposed){this._disposed=!0;var t=this._disposers;for(this._disposers=null;0!==t.length;){t.shift().dispose()}}},t}()},"J+05":function(t,e,i){var n=i("0sYB"),r=i("Kg2n"),a=i("3weC"),o=i("JZRr"),s=i("gxUV"),l=i("Ox5T");n({target:"Reflect",stat:!0},{get:function t(e,i){var n,u,h=arguments.length<3?e:arguments[2];return a(e)===h?e[i]:(n=s.f(e,i))?o(n,"value")?n.value:void 0===n.get?void 0:n.get.call(h):r(u=l(e))?t(u,i,h):void 0}})},"J+FZ":function(t,e,i){var n=i("3sMl"),r=i("6aQQ"),a=i("JZRr"),o=Object.defineProperty,s={},l=function(t){throw t};t.exports=function(t,e){if(a(s,t))return s[t];e||(e={});var i=[][t],u=!!a(e,"ACCESSORS")&&e.ACCESSORS,h=a(e,0)?e[0]:l,c=a(e,1)?e[1]:void 0;return s[t]=!!i&&!r(function(){if(u&&!n)return!0;var t={length:-1};u?o(t,1,{enumerable:!0,get:l}):t[1]=1,i.call(t,h,c)})}},JAqT:function(t,e,i){var n=i("vfdp"),r=i("2fPu"),a=n.WeakMap;t.exports="function"==typeof a&&/native code/.test(r(a))},JNIx:function(t,e,i){"use strict";e.a={_decimalSeparator:".",_thousandSeparator:",",_big_number_suffix_3:"k",_big_number_suffix_6:"M",_big_number_suffix_9:"G",_big_number_suffix_12:"T",_big_number_suffix_15:"P",_big_number_suffix_18:"E",_big_number_suffix_21:"Z",_big_number_suffix_24:"Y",_small_number_suffix_3:"m",_small_number_suffix_6:"μ",_small_number_suffix_9:"n",_small_number_suffix_12:"p",_small_number_suffix_15:"f",_small_number_suffix_18:"a",_small_number_suffix_21:"z",_small_number_suffix_24:"y",_byte_suffix_B:"B",_byte_suffix_KB:"KB",_byte_suffix_MB:"MB",_byte_suffix_GB:"GB",_byte_suffix_TB:"TB",_byte_suffix_PB:"PB",_date:"yyyy-MM-dd",_date_millisecond:"mm:ss SSS",_date_second:"HH:mm:ss",_date_minute:"HH:mm",_date_hour:"HH:mm",_date_day:"MMM dd",_date_week:"ww",_date_month:"MMM",_date_year:"yyyy",_duration_millisecond:"SSS",_duration_millisecond_second:"ss.SSS",_duration_millisecond_minute:"mm:ss SSS",_duration_millisecond_hour:"hh:mm:ss SSS",_duration_millisecond_day:"d'd' mm:ss SSS",_duration_millisecond_week:"d'd' mm:ss SSS",_duration_millisecond_month:"M'm' dd'd' mm:ss SSS",_duration_millisecond_year:"y'y' MM'm' dd'd' mm:ss SSS",_duration_second:"ss",_duration_second_minute:"mm:ss",_duration_second_hour:"hh:mm:ss",_duration_second_day:"d'd' hh:mm:ss",_duration_second_week:"d'd' hh:mm:ss",_duration_second_month:"M'm' dd'd' hh:mm:ss",_duration_second_year:"y'y' MM'm' dd'd' hh:mm:ss",_duration_minute:"mm",_duration_minute_hour:"hh:mm",_duration_minute_day:"d'd' hh:mm",_duration_minute_week:"d'd' hh:mm",_duration_minute_month:"M'm' dd'd' hh:mm",_duration_minute_year:"y'y' MM'm' dd'd' hh:mm",_duration_hour:"hh'h'",_duration_hour_day:"d'd' hh'h'",_duration_hour_week:"d'd' hh'h'",_duration_hour_month:"M'm' dd'd' hh'h'",_duration_hour_year:"y'y' MM'm' dd'd' hh'h'",_duration_day:"d'd'",_duration_day_week:"d'd'",_duration_day_month:"M'm' dd'd'",_duration_day_year:"y'y' MM'm' dd'd'",_duration_week:"w'w'",_duration_week_month:"w'w'",_duration_week_year:"w'w'",_duration_month:"M'm'",_duration_month_year:"y'y' MM'm'",_duration_year:"y'y'",_era_ad:"AD",_era_bc:"BC",A:"",P:"",AM:"",PM:"","A.M.":"","P.M.":"",January:"",February:"",March:"",April:"",May:"",June:"",July:"",August:"",September:"",October:"",November:"",December:"",Jan:"",Feb:"",Mar:"",Apr:"","May(short)":"May",Jun:"",Jul:"",Aug:"",Sep:"",Oct:"",Nov:"",Dec:"",Sunday:"",Monday:"",Tuesday:"",Wednesday:"",Thursday:"",Friday:"",Saturday:"",Sun:"",Mon:"",Tue:"",Wed:"",Thu:"",Fri:"",Sat:"",_dateOrd:function(t){var e="th";if(t<11||t>13)switch(t%10){case 1:e="st";break;case 2:e="nd";break;case 3:e="rd"}return e},"Zoom Out":"",Play:"",Stop:"",Legend:"","Click, tap or press ENTER to toggle":"",Loading:"",Home:"",Chart:"","Serial chart":"","X/Y chart":"","Pie chart":"","Gauge chart":"","Radar chart":"","Sankey diagram":"","Flow diagram":"","Chord diagram":"","TreeMap chart":"","Force directed tree":"","Sliced chart":"",Series:"","Candlestick Series":"","OHLC Series":"","Column Series":"","Line Series":"","Pie Slice Series":"","Funnel Series":"","Pyramid Series":"","X/Y Series":"",Map:"","Press ENTER to zoom in":"","Press ENTER to zoom out":"","Use arrow keys to zoom in and out":"","Use plus and minus keys on your keyboard to zoom in and out":"",Export:"",Image:"",Data:"",Print:"","Click, tap or press ENTER to open":"","Click, tap or press ENTER to print.":"","Click, tap or press ENTER to export as %1.":"",'To save the image, right-click this link and choose "Save picture as..."':"",'To save the image, right-click thumbnail on the left and choose "Save picture as..."':"","(Press ESC to close this message)":"","Image Export Complete":"","Export operation took longer than expected. Something might have gone wrong.":"","Saved from":"",PNG:"",JPG:"",GIF:"",SVG:"",PDF:"",JSON:"",CSV:"",XLSX:"","Use TAB to select grip buttons or left and right arrows to change selection":"","Use left and right arrows to move selection":"","Use left and right arrows to move left selection":"","Use left and right arrows to move right selection":"","Use TAB select grip buttons or up and down arrows to change selection":"","Use up and down arrows to move selection":"","Use up and down arrows to move lower selection":"","Use up and down arrows to move upper selection":"","From %1 to %2":"","From %1":"","To %1":"","No parser available for file: %1":"","Error parsing file: %1":"","Unable to load file: %1":"","Invalid date":"",Close:"",Minimize:""}},JZFm:function(t,e,i){"use strict";var n=i("8+rI").f,r=i("QzDi"),a=i("/vWR"),o=i("cLsB"),s=i("L56b"),l=i("L4xm"),u=i("vBfr"),h=i("YRD/"),c=i("3sMl"),p=i("Tl3C").fastKey,d=i("SqFF"),f=d.set,g=d.getterFor;t.exports={getConstructor:function(t,e,i,u){var h=t(function(t,n){s(t,h,e),f(t,{type:e,index:r(null),first:void 0,last:void 0,size:0}),c||(t.size=0),void 0!=n&&l(n,t[u],t,i)}),d=g(e),y=function(t,e,i){var n,r,a=d(t),o=m(t,e);return o?o.value=i:(a.last=o={index:r=p(e,!0),key:e,value:i,previous:n=a.last,next:void 0,removed:!1},a.first||(a.first=o),n&&(n.next=o),c?a.size++:t.size++,"F"!==r&&(a.index[r]=o)),t},m=function(t,e){var i,n=d(t),r=p(e);if("F"!==r)return n.index[r];for(i=n.first;i;i=i.next)if(i.key==e)return i};return a(h.prototype,{clear:function(){for(var t=d(this),e=t.index,i=t.first;i;)i.removed=!0,i.previous&&(i.previous=i.previous.next=void 0),delete e[i.index],i=i.next;t.first=t.last=void 0,c?t.size=0:this.size=0},delete:function(t){var e=d(this),i=m(this,t);if(i){var n=i.next,r=i.previous;delete e.index[i.index],i.removed=!0,r&&(r.next=n),n&&(n.previous=r),e.first==i&&(e.first=n),e.last==i&&(e.last=r),c?e.size--:this.size--}return!!i},forEach:function(t){for(var e,i=d(this),n=o(t,arguments.length>1?arguments[1]:void 0,3);e=e?e.next:i.first;)for(n(e.value,e.key,this);e&&e.removed;)e=e.previous},has:function(t){return!!m(this,t)}}),a(h.prototype,i?{get:function(t){var e=m(this,t);return e&&e.value},set:function(t,e){return y(this,0===t?0:t,e)}}:{add:function(t){return y(this,t=0===t?0:t,t)}}),c&&n(h.prototype,"size",{get:function(){return d(this).size}}),h},setStrong:function(t,e,i){var n=e+" Iterator",r=g(e),a=g(n);u(t,e,function(t,e){f(this,{type:n,target:t,state:r(t),kind:e,last:void 0})},function(){for(var t=a(this),e=t.kind,i=t.last;i&&i.removed;)i=i.previous;return t.target&&(t.last=i=i?i.next:t.state.first)?"keys"==e?{value:i.key,done:!1}:"values"==e?{value:i.value,done:!1}:{value:[i.key,i.value],done:!1}:(t.target=void 0,{value:void 0,done:!0})},i?"entries":"values",!i,!0),h(e)}}},JZRr:function(t,e){var i={}.hasOwnProperty;t.exports=function(t,e){return i.call(t,e)}},Jdjl:function(t,e,i){"use strict";var n=i("0sYB"),r=i("Kg2n"),a=i("o3G/"),o=i("Y8n3"),s=i("tHyI"),l=i("9XRO"),u=i("WShl"),h=i("KslR"),c=i("ugpH"),p=i("J+FZ"),d=c("slice"),f=p("slice",{ACCESSORS:!0,0:0,1:2}),g=h("species"),y=[].slice,m=Math.max;n({target:"Array",proto:!0,forced:!d||!f},{slice:function(t,e){var i,n,h,c=l(this),p=s(c.length),d=o(t,p),f=o(void 0===e?p:e,p);if(a(c)&&("function"!=typeof(i=c.constructor)||i!==Array&&!a(i.prototype)?r(i)&&null===(i=i[g])&&(i=void 0):i=void 0,i===Array||void 0===i))return y.call(c,d,f);for(n=new(void 0===i?Array:i)(m(f-d,0)),h=0;d<f;d++,h++)d in c&&u(n,h,c[d]);return n.length=h,n}})},JezW:function(t,e,i){var n=i("0sYB"),r=i("39+r"),a=i("0FA2");n({target:"Array",proto:!0},{copyWithin:r}),a("copyWithin")},KJuV:function(t,e,i){var n=i("3weC"),r=i("ucqQ");t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,i={};try{(t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(i,[]),e=i instanceof Array}catch(t){}return function(i,a){return n(i),r(a),e?t.call(i,a):i.__proto__=a,i}}():void 0)},KSd4:function(t,e){e.f=Object.getOwnPropertySymbols},KWPb:function(t,e,i){"use strict";var n=i("UseD"),r=i("ojxk").includes,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("includes",function(t){return r(a(this),t,arguments.length>1?arguments[1]:void 0)})},KWTK:function(t,e,i){"use strict";var n=i("UseD"),r=i("vjgd"),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("fill",function(t){return r.apply(a(this),arguments)})},Kg2n:function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},KknQ:function(t,e,i){"use strict";i.d(e,"b",function(){return m}),i.d(e,"a",function(){return v});var n=i("m4/l"),r=i("pR7v"),a=i("vMqJ"),o=i("+qIf"),s=i("9ZsQ"),l=i("aCit"),u=i("L91H"),h=i("Mtpk"),c=i("Wglt"),p=i("Gg2j"),d=i("hJ5i"),f=i("Qkdp"),g=i("v9UT"),y=i("VGgz"),m=function(t){function e(){var e=t.call(this)||this;return e.className="DateAxisDataItem",e.applyTheme(),e.values.date={},e.values.endDate={},e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"date",{get:function(){return this.dates.date},set:function(t){this.setDate("date",t),this.value=t.getTime()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endDate",{get:function(){return this.dates.endDate},set:function(t){this.setDate("endDate",t),this.endValue=t.getTime()},enumerable:!0,configurable:!0}),e}(r.b),v=function(t){function e(){var e=t.call(this)||this;return e._gapBreaks=!1,e.gridIntervals=new a.b,e.groupIntervals=new a.b,e.dateFormats=new o.a,e.periodChangeDateFormats=new o.a,e._baseIntervalReal={timeUnit:"day",count:1},e._minDifference={},e._firstWeekDay=1,e.groupMin={},e.groupMax={},e.className="DateAxis",e.setPropertyValue("markUnitChange",!0),e.snapTooltip=!0,e.tooltipPosition="pointer",e.setPropertyValue("groupData",!1),e.groupCount=200,e.events.on("parentset",e.getDFFormatter,e,!1),e.gridIntervals.pushAll([{timeUnit:"millisecond",count:1},{timeUnit:"millisecond",count:5},{timeUnit:"millisecond",count:10},{timeUnit:"millisecond",count:50},{timeUnit:"millisecond",count:100},{timeUnit:"millisecond",count:500},{timeUnit:"second",count:1},{timeUnit:"second",count:5},{timeUnit:"second",count:10},{timeUnit:"second",count:30},{timeUnit:"minute",count:1},{timeUnit:"minute",count:5},{timeUnit:"minute",count:10},{timeUnit:"minute",count:15},{timeUnit:"minute",count:30},{timeUnit:"hour",count:1},{timeUnit:"hour",count:3},{timeUnit:"hour",count:6},{timeUnit:"hour",count:12},{timeUnit:"day",count:1},{timeUnit:"day",count:2},{timeUnit:"day",count:3},{timeUnit:"day",count:4},{timeUnit:"day",count:5},{timeUnit:"week",count:1},{timeUnit:"month",count:1},{timeUnit:"month",count:2},{timeUnit:"month",count:3},{timeUnit:"month",count:6},{timeUnit:"year",count:1},{timeUnit:"year",count:2},{timeUnit:"year",count:5},{timeUnit:"year",count:10},{timeUnit:"year",count:50},{timeUnit:"year",count:100},{timeUnit:"year",count:200},{timeUnit:"year",count:500},{timeUnit:"year",count:1e3},{timeUnit:"year",count:2e3},{timeUnit:"year",count:5e3},{timeUnit:"year",count:1e4},{timeUnit:"year",count:1e5}]),e.groupIntervals.pushAll([{timeUnit:"millisecond",count:1},{timeUnit:"millisecond",count:10},{timeUnit:"millisecond",count:100},{timeUnit:"second",count:1},{timeUnit:"second",count:10},{timeUnit:"minute",count:1},{timeUnit:"minute",count:10},{timeUnit:"hour",count:1},{timeUnit:"day",count:1},{timeUnit:"week",count:1},{timeUnit:"month",count:1},{timeUnit:"year",count:1}]),e.axisFieldName="date",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.fillRule=function(t){var e=t.value,i=t.component,n=i._gridInterval,r=u.getDuration(n.timeUnit,n.count);Math.round((e-i.min)/r)/2==Math.round(Math.round((e-i.min)/r)/2)?t.axisFill.__disabled=!0:t.axisFill.__disabled=!1},e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),this.dateFormats.hasKey("millisecond")||this.dateFormats.setKey("millisecond",this.language.translate("_date_millisecond")),this.dateFormats.hasKey("second")||this.dateFormats.setKey("second",this.language.translate("_date_second")),this.dateFormats.hasKey("minute")||this.dateFormats.setKey("minute",this.language.translate("_date_minute")),this.dateFormats.hasKey("hour")||this.dateFormats.setKey("hour",this.language.translate("_date_hour")),this.dateFormats.hasKey("day")||this.dateFormats.setKey("day",this.language.translate("_date_day")),this.dateFormats.hasKey("week")||this.dateFormats.setKey("week",this.language.translate("_date_day")),this.dateFormats.hasKey("month")||this.dateFormats.setKey("month",this.language.translate("_date_month")),this.dateFormats.hasKey("year")||this.dateFormats.setKey("year",this.language.translate("_date_year")),this.periodChangeDateFormats.hasKey("millisecond")||this.periodChangeDateFormats.setKey("millisecond",this.language.translate("_date_millisecond")),this.periodChangeDateFormats.hasKey("second")||this.periodChangeDateFormats.setKey("second",this.language.translate("_date_second")),this.periodChangeDateFormats.hasKey("minute")||this.periodChangeDateFormats.setKey("minute",this.language.translate("_date_minute")),this.periodChangeDateFormats.hasKey("hour")||this.periodChangeDateFormats.setKey("hour",this.language.translate("_date_hour")),this.periodChangeDateFormats.hasKey("day")||this.periodChangeDateFormats.setKey("day",this.language.translate("_date_day")),this.periodChangeDateFormats.hasKey("week")||this.periodChangeDateFormats.setKey("week",this.language.translate("_date_day")),this.periodChangeDateFormats.hasKey("month")||this.periodChangeDateFormats.setKey("month",this.language.translate("_date_month")+" "+this.language.translate("_date_year"))},e.prototype.createDataItem=function(){return new m},e.prototype.createAxisBreak=function(){return new s.a},e.prototype.validateDataItems=function(){var e=this.start,i=this.end,n=this.baseDuration,r=(this.max-this.min)/n;this._firstWeekDay=this.getFirstWeekDay(),this.getDFFormatter(),t.prototype.validateDataItems.call(this);var a=u.getDuration(this.mainBaseInterval.timeUnit,this.mainBaseInterval.count);this.maxZoomFactor=(this.max-this.min)/a,this._deltaMinMax=this.baseDuration/2,e+=(i-e)*(1-r/((this.max-this.min)/n)),this.zoom({start:e,end:i},!1,!0)},e.prototype.handleSelectionExtremesChange=function(){},e.prototype.calculateZoom=function(){var e=this;t.prototype.calculateZoom.call(this);var i=this.adjustDifference(this._minZoomed,this._maxZoomed),r=!1;if(this.groupData&&h.hasValue(i)){var a=this.mainBaseInterval,o=this.chooseInterval(0,i,this.groupCount,this.groupIntervals);u.getDuration(o.timeUnit,o.count)<u.getDuration(a.timeUnit,a.count)&&(o=Object(n.a)({},a)),this._groupInterval=o,this._currentDataSetId=o.timeUnit+o.count,this.series.each(function(t){t.baseAxis==e&&t.setDataSet(e._currentDataSetId)&&(r=!0)})}var s=this.chooseInterval(0,i,this._gridCount);u.getDuration(s.timeUnit,s.count)<this.baseDuration&&(s=Object(n.a)({},this.baseInterval)),this._gridInterval=s,this._nextGridUnit=u.getNextUnit(s.timeUnit),this._intervalDuration=u.getDuration(s.timeUnit,s.count),this._gridDate=u.round(new Date(this.minZoomed-u.getDuration(s.timeUnit,s.count)),s.timeUnit,s.count,this._firstWeekDay,this._df.utc,new Date(this.min)),c.each(this.series.iterator(),function(t){if(t.baseAxis==e){var i=t.getAxisField(e),n=u.round(new Date(e._minZoomed),e.baseInterval.timeUnit,e.baseInterval.count,e._firstWeekDay,e._df.utc).getTime(),a=n.toString(),o=t.dataItemsByAxis.getKey(e.uid).getKey(a+t.currentDataSetId),s=0;0!=e.start&&(s=o?(o=e.findFirst(o,n,i)).index:t.dataItems.findClosestIndex(e._minZoomed,function(t){return t[i]},"left"));var l=e.baseInterval,h=u.add(u.round(new Date(e._maxZoomed),l.timeUnit,l.count,e._firstWeekDay,e._df.utc),l.timeUnit,l.count,e._df.utc).getTime(),c=h.toString(),p=t.dataItemsByAxis.getKey(e.uid).getKey(c+t.currentDataSetId),d=t.dataItems.length;1!=e.end&&(p?d=p.index:(h-=1,(d=t.dataItems.findClosestIndex(h,function(t){return t[i]},"right"))<t.dataItems.length&&d++)),t.startIndex=s,t.endIndex=d,!r&&t.dataRangeInvalid&&t.validateDataRange()}})},e.prototype.findFirst=function(t,e,i){var n=t.index;if(n>0){var r=t.component.dataItems.getIndex(n-1),a=r[i];return!a||a.getTime()<e?t:this.findFirst(r,e,i)}return t},e.prototype.validateData=function(){t.prototype.validateData.call(this),h.isNumber(this.baseInterval.count)||(this.baseInterval.count=1)},Object.defineProperty(e.prototype,"minDifference",{get:function(){var t=this,e=Number.MAX_VALUE;return this.series.each(function(i){e>t._minDifference[i.uid]&&(e=t._minDifference[i.uid])}),e!=Number.MAX_VALUE&&0!=e||(e=u.getDuration("day")),e},enumerable:!0,configurable:!0}),e.prototype.seriesDataChangeUpdate=function(t){this._minDifference[t.uid]=Number.MAX_VALUE},e.prototype.postProcessSeriesDataItems=function(){var t=this;this.series.each(function(e){JSON.stringify(e._baseInterval[t.uid])!=JSON.stringify(t.mainBaseInterval)&&(e._baseInterval[t.uid]=t.mainBaseInterval,e.mainDataSet.each(function(e){t.postProcessSeriesDataItem(e)}),t.groupData&&t.groupSeriesData(e))}),this.addEmptyUnitsBreaks()},e.prototype.groupSeriesData=function(t){var e=this;if(t.baseAxis==this&&t.dataItems.length>0&&!t.dataGrouped){var i=[],n=this.mainBaseInterval,r=u.getDuration(n.timeUnit,n.count);this.groupIntervals.each(function(t){var n=u.getDuration(t.timeUnit,t.count);n>r&&n<e.max-e.min&&i.push(t)}),t._dataSets&&(t._dataSets.each(function(t,e){e.each(function(t){t.dispose()}),e.clear()}),t._dataSets.clear()),d.each(i,function(i){var n="date"+e.axisLetter,r=i.timeUnit+i.count,a=new y.b(t.mainDataSet.template.clone());t.dataSets.setKey(r,a),t.dataGrouped=!0;var o,s=t.mainDataSet,l=Number.NEGATIVE_INFINITY,c=0,p=[];f.each(t.dataFields,function(t,e){var i=t;i!=n&&-1==i.indexOf("Show")&&p.push(i)}),s.each(function(r){var s=r.getDate(n);if(s){var y=s.getTime(),m=u.round(new Date(y),i.timeUnit,i.count,e._df.firstDayOfWeek,e._df.utc),v=m.getTime();l<v?((o=a.create()).dataContext={},o.component=t,o.setDate(n,m),o._index=c,c++,d.each(p,function(t){var e=r.values[t];if(e){var i=e.value,n=o.values[t];h.isNumber(i)?(n.value=i,n.workingValue=i,n.open=i,n.close=i,n.low=i,n.high=i,n.sum=i,n.average=i,n.count=1):n.count=0}}),e.postProcessSeriesDataItem(o,i),f.each(t.propertyFields,function(t,e){var i=t,n=r.properties[t];h.hasValue(n)&&(o.hasProperties=!0,o.setProperty(i,n))}),o.groupDataItems=[r],l=v):o&&(d.each(p,function(e){var i=t.groupFields[e],n=r.values[e];if(n){var a=n.value;if(h.isNumber(a)){var s=o.values[e];h.isNumber(s.open)||(s.open=a),s.close=a,(s.low>a||!h.isNumber(s.low))&&(s.low=a),(s.high<a||!h.isNumber(s.high))&&(s.high=a),h.isNumber(s.sum)?s.sum+=a:s.sum=a,s.count++,s.average=s.sum/s.count,h.isNumber(s[i])&&(s.value=s[i],s.workingValue=s.value)}}}),g.copyProperties(r.properties,o.properties),f.each(t.propertyFields,function(t,e){var i=t,n=r.properties[t];h.hasValue(n)&&(o.hasProperties=!0,o.setProperty(i,n))}),o.groupDataItems.push(r))}o&&g.copyProperties(r.dataContext,o.dataContext)})}),this.calculateZoom()}},e.prototype.getDFFormatter=function(){this._df=this.dateFormatter},e.prototype.postProcessSeriesDataItem=function(t,e){var i=this,n="";e?n=e.timeUnit+e.count:e=this.mainBaseInterval;var r=t.component.dataItemsByAxis.getKey(this.uid);f.each(t.dates,function(a){var o=t.getDate(a).getTime(),s=u.round(new Date(o),e.timeUnit,e.count,i._firstWeekDay,i._df.utc).getTime(),l=u.add(new Date(s),e.timeUnit,e.count,i._df.utc);t.setCalculatedValue(a,s,"open"),t.setCalculatedValue(a,l.getTime(),"close"),r.setKey(s+n,t)})},e.prototype.addEmptyUnitsBreaks=function(){var t=this;if(this.skipEmptyPeriods&&h.isNumber(this.min)&&h.isNumber(this.max)){var e=this.baseInterval.timeUnit,i=this.baseInterval.count;this._axisBreaks&&this._axisBreaks.clear();for(var n=u.round(new Date(this.min),e,i,this._firstWeekDay,this._df.utc),r=void 0,a=function(){u.add(n,e,i,o._df.utc);var a=n.getTime(),s=a.toString();c.contains(o.series.iterator(),function(e){return!!e.dataItemsByAxis.getKey(t.uid).getKey(s+e.currentDataSetId)})?r&&(r.endDate=new Date(a-1),r=void 0):r||((r=o.axisBreaks.create()).startDate=new Date(a),o._gapBreaks=!0)},o=this;n.getTime()<this.max-this.baseDuration;)a()}},e.prototype.fixAxisBreaks=function(){var e=this;t.prototype.fixAxisBreaks.call(this);var i=this._axisBreaks;i&&i.length>0&&i.each(function(t){var i=Math.ceil(e._gridCount*(Math.min(e.end,t.endPosition)-Math.max(e.start,t.startPosition))/(e.end-e.start));t.gridInterval=e.chooseInterval(0,t.adjustedEndValue-t.adjustedStartValue,i);var n=u.round(new Date(t.adjustedStartValue),t.gridInterval.timeUnit,t.gridInterval.count,e._firstWeekDay,e._df.utc);n.getTime()>t.startDate.getTime()&&u.add(n,t.gridInterval.timeUnit,t.gridInterval.count,e._df.utc),t.gridDate=n})},e.prototype.getFirstWeekDay=function(){return this._df?this._df.firstDayOfWeek:1},e.prototype.getGridDate=function(t,e){var i=this._gridInterval.timeUnit,n=this._gridInterval.count;u.round(t,i,1,this._firstWeekDay,this._df.utc);var r=t.getTime(),a=u.copy(t),o=u.add(a,i,e,this._df.utc).getTime(),s=this.isInBreak(o);s&&s.endDate&&(a=new Date(s.endDate.getTime()),u.round(a,i,n,this._firstWeekDay,this._df.utc),a.getTime()<s.endDate.getTime()&&u.add(a,i,n,this._df.utc),o=a.getTime());var l=this.adjustDifference(r,o);return Math.round(l/u.getDuration(i))<n?this.getGridDate(t,e+n):a},e.prototype.getBreaklessDate=function(t,e,i){var n=new Date(t.endValue);u.round(n,e,i,this._firstWeekDay,this._df.utc),u.add(n,e,i,this._df.utc);var r=n.getTime();return(t=this.isInBreak(r))?this.getBreaklessDate(t,e,i):n},e.prototype.validateAxisElements=function(){var t=this;if(h.isNumber(this.max)&&h.isNumber(this.min)){this.calculateZoom();var e=this._gridDate.getTime(),i=this._gridInterval.timeUnit,n=this._gridInterval.count,r=u.copy(this._gridDate),a=this._dataItemsIterator;this.resetIterators();for(var o=function(){var t=s.getGridDate(u.copy(r),n);e=t.getTime();var o=u.copy(t);o=u.add(o,i,n,s._df.utc);var l=s.dateFormats.getKey(i);s.markUnitChange&&r&&u.checkChange(t,r,s._nextGridUnit,s._df.utc)&&"year"!==i&&(l=s.periodChangeDateFormats.getKey(i));var h=s._df.format(t,l),c=a.find(function(t){return t.text===h});c.__disabled&&(c.__disabled=!1),s.appendDataItem(c),c.axisBreak=void 0,c.date=t,c.endDate=o,c.text=h,s.validateDataElement(c),r=t},s=this;e<=this._maxZoomed;)o();var l=this.renderer;this._axisBreaks&&c.each(this._axisBreaks.iterator(),function(e){if(e.breakSize>0){var i=e.gridInterval.timeUnit,n=e.gridInterval.count;if(p.getDistance(e.startPoint,e.endPoint)>4*l.minGridDistance)for(var r,o=e.gridDate.getTime(),s=0,h=function(){var l=u.copy(e.gridDate);if(o=u.add(l,i,n*s,t._df.utc).getTime(),s++,o>e.adjustedStartValue&&o<e.adjustedEndValue){var h=u.copy(l);h=u.add(h,i,n,t._df.utc);var c=t.dateFormats.getKey(i);t.markUnitChange&&r&&u.checkChange(l,r,t._nextGridUnit,t._df.utc)&&"year"!==i&&(c=t.periodChangeDateFormats.getKey(i));var p=t._df.format(l,c),d=a.find(function(t){return t.text===p});d.__disabled&&(d.__disabled=!1),t.appendDataItem(d),d.axisBreak=e,e.dataItems.moveValue(d),d.date=l,d.endDate=h,d.text=p,r=l,t.validateDataElement(d)}};o<=e.adjustedMax;)h()}})}},e.prototype.validateDataElement=function(t){if(t.itemIndex=this._axisItemCount,this._axisItemCount++,h.isNumber(this.max)&&h.isNumber(this.min)){var e=this.renderer,i=t.value,n=t.endValue;h.isNumber(n)||(n=i);var r=this.valueToPosition(i),a=this.valueToPosition(n),o=a;!t.isRange&&this._gridInterval.count>this.baseInterval.count&&(a=r+(a-r)/(this._gridInterval.count/this.baseInterval.count)),t.position=r;var s=t.tick;s&&!s.disabled&&e.updateTickElement(s,r,a);var l=t.grid;l&&!l.disabled&&e.updateGridElement(l,r,a);var u=t.axisFill;u&&!u.disabled&&(e.updateFillElement(u,r,o),t.isRange||this.fillRule(t));var c=t.mask;c&&e.updateFillElement(c,r,a),t.bullet&&e.updateBullet(t.bullet,r,a);var p=t.label;if(p&&!p.disabled){var d=p.location;0==d&&(d=1!=this._gridInterval.count||"week"==this._gridInterval.timeUnit||t.isRange?0:.5),e.updateLabelElement(p,r,a,d)}}},Object.defineProperty(e.prototype,"baseDuration",{get:function(){return u.getDuration(this.baseInterval.timeUnit,this.baseInterval.count)},enumerable:!0,configurable:!0}),e.prototype.adjustMinMax=function(t,e){return{min:t,max:e,step:this.baseDuration}},e.prototype.fixMin=function(t){var e=this.baseInterval,i=u.round(new Date(t),e.timeUnit,e.count,this._firstWeekDay,this._df.utc).getTime();return i+(u.add(new Date(i),e.timeUnit,e.count,this._df.utc).getTime()-i)*this.startLocation},e.prototype.fixMax=function(t){var e=this.baseInterval,i=u.round(new Date(t),e.timeUnit,e.count,this._firstWeekDay,this._df.utc).getTime();return i+(u.add(new Date(i),e.timeUnit,e.count,this._df.utc).getTime()-i)*this.endLocation},e.prototype.chooseInterval=function(t,e,i,r){r||(r=this.gridIntervals);var a=r.getIndex(t),o=u.getDuration(a.timeUnit,a.count),s=r.length-1;if(t>=s)return Object(n.a)({},r.getIndex(s));var l=Math.ceil(e/o);return e<o&&t>0?Object(n.a)({},r.getIndex(t-1)):l<=i?Object(n.a)({},r.getIndex(t)):t+1<r.length?this.chooseInterval(t+1,e,i,r):Object(n.a)({},r.getIndex(t))},e.prototype.formatLabel=function(t){return this._df.format(t)},e.prototype.dateToPosition=function(t){return this.valueToPosition(t.getTime())},e.prototype.anyToPosition=function(t){return t instanceof Date?this.dateToPosition(t):this.valueToPosition(t)},e.prototype.dateToPoint=function(t){var e=this.dateToPosition(t),i=this.renderer.positionToPoint(e),n=this.renderer.positionToAngle(e);return{x:i.x,y:i.y,angle:n}},e.prototype.anyToPoint=function(t){return t instanceof Date?this.dateToPoint(t):this.valueToPoint(t)},e.prototype.positionToDate=function(t){return new Date(this.positionToValue(t))},e.prototype.getPositionX=function(t,e,i,n,r){var a=this.getTimeByLocation(t,e,i);h.isNumber(a)||(a=this.baseValue);var o=this.valueToPosition(a);return r&&(o=p.fitToRange(o,r.start,r.end)),o},e.prototype.getPositionY=function(t,e,i,n,r){var a=this.getTimeByLocation(t,e,i),o=t.getValue("valueX","stack");h.isNumber(a)||(a=this.baseValue);var s=this.valueToPosition(a+o);return r&&(s=p.fitToRange(s,r.start,r.end)),s},e.prototype.getAngle=function(t,e,i,n,r){var a=this.getTimeByLocation(t,e,i),o=t.getValue(n,"stack");h.isNumber(a)||(a=this.baseValue);var s=this.valueToPosition(a+o);return r&&(s=p.fitToRange(s,r.start,r.end)),this.positionToAngle(s)},e.prototype.getTimeByLocation=function(t,e,i){if(h.hasValue(e)){h.isNumber(i)||(i=t.workingLocations[e],h.isNumber(i)||(i=0));var n=t.values[e].open,r=t.values[e].close,a=t.values[e].workingValue,o=t.values[e].value-a;return n-=o,r-=o,h.isNumber(n)&&h.isNumber(r)?n+(r-n)*i:void 0}},e.prototype.processSeriesDataItem=function(t,e){var i,n=t.component,r=t["date"+e];if(h.isNumber(this.timezoneOffset)&&(r.setTime(r.getTime()+6e4*(r.getTimezoneOffset()-this.timezoneOffset)),t.setValue("date"+e,r.getTime(),0)),r){i=r.getTime();var a,o=t["openDate"+e],s=this._prevSeriesTime;if(o&&(a=o.getTime()),h.isNumber(a)){var l=Math.abs(i-a);this._minDifference[n.uid]>l&&(this._minDifference[n.uid]=l)}var u=i-s;u>0&&this._minDifference[n.uid]>u&&(this._minDifference[n.uid]=u),this._prevSeriesTime=i,n._baseInterval[this.uid]&&this.postProcessSeriesDataItem(t)}},e.prototype.updateAxisBySeries=function(){t.prototype.updateAxisBySeries.call(this);var e=this.chooseInterval(0,this.minDifference,1);this.minDifference>=u.getDuration("day",27)&&"week"==e.timeUnit&&(e.timeUnit="month",e.count=1),"month"==e.timeUnit&&(this.minDifference>=u.getDuration("day",58)&&1==e.count&&(e.count=2),this.minDifference>=u.getDuration("day",87)&&2==e.count&&(e.count=3),this.minDifference>=u.getDuration("day",174)&&5==e.count&&(e.count=6)),this.minDifference>=u.getDuration("hour",23)&&"hour"==e.timeUnit&&(e.timeUnit="day",e.count=1),this.minDifference>=u.getDuration("week",1)-u.getDuration("hour",1)&&"day"==e.timeUnit&&(e.timeUnit="week",e.count=1),this.minDifference>=u.getDuration("year",1)-u.getDuration("day",1.01)&&"month"==e.timeUnit&&(e.timeUnit="year",e.count=1),this._baseIntervalReal=e,this._mainBaseInterval=e},Object.defineProperty(e.prototype,"baseInterval",{get:function(){return this._groupInterval?this._groupInterval:this._baseInterval?this._baseInterval:this._baseIntervalReal},set:function(t){JSON.stringify(this._baseInterval)!=JSON.stringify(t)&&(this._baseInterval=t,this._mainBaseInterval=t,h.isNumber(t.count)||(t.count=1),this.invalidate(),this.postProcessSeriesDataItems())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"mainBaseInterval",{get:function(){return this._baseInterval?this._baseInterval:this._mainBaseInterval?this._mainBaseInterval:this._baseIntervalReal},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"skipEmptyPeriods",{get:function(){return this.getPropertyValue("skipEmptyPeriods")},set:function(t){if(t){var e=this.axisBreaks.template;e.startLine.disabled=!0,e.endLine.disabled=!0,e.fillShape.disabled=!0,e.breakSize=0}else this._gapBreaks&&(this.axisBreaks.clear(),this._gapBreaks=!1);this.setPropertyValue("skipEmptyPeriods",t)&&(this.invalidate(),this.postProcessSeriesDataItems(),this.invalidateSeries())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipDateFormat",{get:function(){return this.getPropertyValue("tooltipDateFormat")},set:function(t){this.setPropertyValue("tooltipDateFormat",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"markUnitChange",{get:function(){return this.getPropertyValue("markUnitChange")},set:function(t){this.setPropertyValue("markUnitChange",t)&&this.invalidateData()},enumerable:!0,configurable:!0}),e.prototype.getTooltipText=function(t){var e,i=this.positionToDate(t);if(i=u.round(i,this.baseInterval.timeUnit,this.baseInterval.count,this._firstWeekDay,this._df.utc,new Date(this.min)),h.hasValue(this.tooltipDateFormat))e=this._df.format(i,this.tooltipDateFormat);else{var n=this.dateFormats.getKey(this.baseInterval.timeUnit);e=n?this._df.format(i,n):this.getPositionLabel(t)}return this._adapterO?this._adapterO.apply("getTooltipText",e):e},e.prototype.roundPosition=function(t,e,i){var n=this.baseInterval,r=n.timeUnit,a=n.count,o=this.positionToDate(t);if(u.round(o,r,a,this._firstWeekDay,this._df.utc),e>0&&u.add(o,r,e*a,this._df.utc),i>0&&i<1&&o.setTime(o.getTime()+this.baseDuration*i),this.isInBreak(o.getTime()))for(;o.getTime()<this.max&&(u.add(o,r,a,this._df.utc),this.isInBreak(o.getTime())););return this.dateToPosition(o)},e.prototype.getCellStartPosition=function(t){return this.roundPosition(t,0)},e.prototype.getCellEndPosition=function(t){return this.roundPosition(t,1)},e.prototype.getSeriesDataItem=function(t,e,i){var n,r=this.positionToValue(e),a=u.round(new Date(r),this.baseInterval.timeUnit,this.baseInterval.count,this._firstWeekDay,this._df.utc),o=t.dataItemsByAxis.getKey(this.uid).getKey(a.getTime().toString());!o&&i&&(n="Y"==this.axisLetter?"dateY":"dateX",o=t.dataItems.getIndex(t.dataItems.findClosestIndex(a.getTime(),function(t){return t[n]?t[n].getTime():-1/0},"any")));return o},e.prototype.getPositionLabel=function(t){var e=this.positionToDate(t);return this._df.format(e,this.getCurrentLabelFormat())},e.prototype.getCurrentLabelFormat=function(){return this.dateFormats.getKey(this._gridInterval?this._gridInterval.timeUnit:"day")},e.prototype.initRenderer=function(){t.prototype.initRenderer.call(this);var e=this.renderer;e&&(e.ticks.template.location=0,e.grid.template.location=0,e.labels.template.location=0,e.baseGrid.disabled=!0)},Object.defineProperty(e.prototype,"basePoint",{get:function(){return{x:0,y:0}},enumerable:!0,configurable:!0}),e.prototype.animateMinMax=function(t,e){var i=this,n=this.animate([{property:"_minAdjusted",from:this._minAdjusted,to:t},{property:"_maxAdjusted",from:this._maxAdjusted,to:e}],this.rangeChangeDuration,this.rangeChangeEasing);return n.events.on("animationprogress",function(){i.dispatch("extremeschanged")}),n},e.prototype.handleExtremesChange=function(){if(t.prototype.handleExtremesChange.call(this),this.groupData){var e=this.baseInterval.timeUnit+this.baseInterval.count;this.groupMin[e]=this._finalMin,this.groupMax[e]=this._finalMax}},e.prototype.zoomToDates=function(t,e,i,n,r){t=this._df.parse(t),e=this._df.parse(e),this.zoomToValues(t.getTime(),e.getTime(),i,n,r)},e.prototype.zoomToValues=function(t,e,i,r,a){var o=this;if(this.groupData){var s=this.adjustDifference(t,e),l=!1;e==this.max&&(l=!0);var c=!1;if(t==this.min&&(c=!0),h.hasValue(s)){var d=this.mainBaseInterval,f=this.chooseInterval(0,s,this.groupCount,this.groupIntervals);(f.timeUnit==d.timeUnit&&f.count<d.count||u.getDuration(f.timeUnit,1)<u.getDuration(d.timeUnit,1))&&(f=Object(n.a)({},d));var g=f.timeUnit+f.count,y=this.groupMin[g],m=this.groupMax[g];h.isNumber(y)&&h.isNumber(m)||(y=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,this.series.each(function(t){var e=t.min(o),i=t.max(o);if(t._dataSets){var n=t._dataSets.getKey(f.timeUnit+f.count);if(n){var r=n.getIndex(0),a=n.getIndex(n.length-1);r&&(t.xAxis==o?e=r.dateX.getTime():t.yAxis==o&&(e=r.dateY.getTime())),a&&(t.xAxis==o?i=a.dateX.getTime():t.yAxis==o&&(i=a.dateY.getTime()))}}i=u.round(u.add(new Date(i),f.timeUnit,1,o._df.utc),f.timeUnit,1,o._df.firstDayOfWeek,o._df.utc).getTime(),e<y&&(y=e),i>m&&(m=i)}),this.groupMin[g]=y,this.groupMax[g]=m),t=p.fitToRange(t,y,m),e=p.fitToRange(e,y,m),a&&(l&&(t=e-s,t=p.fitToRange(t,y,m)),c&&(e=t+s,e=p.fitToRange(e,y,m)));v=(t-y)/(m-y),b=(e-y)/(m-y);this.zoom({start:v,end:b},i,r)}}else{var v=(t-this.min)/(this.max-this.min),b=(e-this.min)/(this.max-this.min);this.zoom({start:v,end:b},i,r)}},e.prototype.asIs=function(e){return"baseInterval"==e||t.prototype.asIs.call(this,e)},e.prototype.copyFrom=function(e){var i=this;t.prototype.copyFrom.call(this,e),this.dateFormats=e.dateFormats,this.periodChangeDateFormats=e.periodChangeDateFormats,this.groupIntervals.clear(),e.groupIntervals.each(function(t){i.groupIntervals.push(Object(n.a)({},t))}),this.gridIntervals.clear(),e.gridIntervals.each(function(t){i.gridIntervals.push(Object(n.a)({},t))}),e._baseInterval&&(this.baseInterval=e._baseInterval)},e.prototype.showTooltipAtPosition=function(e,i){var n=this;if(i||(e=this.toAxisPosition(e)),this.snapTooltip){var r,a=this.positionToDate(e).getTime();if(this.series.each(function(t){if(t.baseAxis==n){var i=n.getSeriesDataItem(t,e,!0);if(i){var o=void 0;t.xAxis==n&&(o=i.dateX),t.yAxis==n&&(o=i.dateY),r?Math.abs(r.getTime()-a)>Math.abs(o.getTime()-a)&&(r=o):r=o}}}),r){var o=r.getTime();r=u.round(new Date(o),this.baseInterval.timeUnit,this.baseInterval.count,this._firstWeekDay,this._df.utc),o=r.getTime();var s=this.renderer.tooltipLocation;0==s&&(s=1e-4),r=new Date(r.getTime()+this.baseDuration*s),e=this.dateToPosition(r),this.series.each(function(t){var e=t.dataItemsByAxis.getKey(n.uid).getKey(o+t.currentDataSetId),i=t.showTooltipAtDataItem(e);i?n.chart._seriesPoints.push({series:t,point:i}):(t.tooltipText||t.tooltipHTML)&&t.hideTooltip()})}}t.prototype.showTooltipAtPosition.call(this,e,!0)},Object.defineProperty(e.prototype,"snapTooltip",{get:function(){return this.getPropertyValue("snapTooltip")},set:function(t){this.setPropertyValue("snapTooltip",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"groupData",{get:function(){return this.getPropertyValue("groupData")},set:function(t){var e=this;this.setPropertyValue("groupData",t)&&(this.series.each(function(i){i.setDataSet(""),t&&!i.dataGrouped&&i.inited&&(i._baseInterval[e.uid]=e.mainBaseInterval,e.groupSeriesData(i))}),this._currentDataSetId="",this._groupInterval=void 0,this.invalidate(),this.invalidateSeries())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"groupCount",{get:function(){return this.getPropertyValue("groupCount")},set:function(t){this.setPropertyValue("groupCount",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"timezoneOffset",{get:function(){return this.getPropertyValue("timezoneOffset")},set:function(t){this.setPropertyValue("timezoneOffset",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"gridInterval",{get:function(){return this._gridInterval},enumerable:!0,configurable:!0}),e.prototype.makeGap=function(t,e){var i=t.component;if(t&&e&&!i.connect&&h.isNumber(i.autoGapCount)&&i.baseAxis==this){var n=t.dates["date"+this.axisLetter],r=e.dates["date"+this.axisLetter];if(n&&r)if(n.getTime()-r.getTime()>i.autoGapCount*this.baseDuration)return!0}return!1},Object.defineProperty(e.prototype,"baseValue",{get:function(){return this.min},enumerable:!0,configurable:!0}),e}(r.a);l.c.registeredClasses.DateAxis=v,l.c.registeredClasses.DateAxisDataItem=m},KslR:function(t,e,i){var n=i("vfdp"),r=i("LO3D"),a=i("JZRr"),o=i("vfRf"),s=i("xaIW"),l=i("7W4+"),u=r("wks"),h=n.Symbol,c=l?h:h&&h.withoutSetter||o;t.exports=function(t){return a(u,t)||(s&&a(h,t)?u[t]=h[t]:u[t]=c("Symbol."+t)),u[t]}},KvVN:function(t,e,i){i("YRD/")("Array")},L0in:function(t,e,i){"use strict";var n=i("Wqjq").charAt;t.exports=function(t,e,i){return e+(i?n(t,e).length:1)}},L4xm:function(t,e,i){var n=i("3weC"),r=i("3Ok2"),a=i("tHyI"),o=i("cLsB"),s=i("Ur2B"),l=i("VwzZ"),u=function(t,e){this.stopped=t,this.result=e};(t.exports=function(t,e,i,h,c){var p,d,f,g,y,m,v,b=o(e,i,h?2:1);if(c)p=t;else{if("function"!=typeof(d=s(t)))throw TypeError("Target is not iterable");if(r(d)){for(f=0,g=a(t.length);g>f;f++)if((y=h?b(n(v=t[f])[0],v[1]):b(t[f]))&&y instanceof u)return y;return new u(!1)}p=d.call(t)}for(m=p.next;!(v=m.call(p)).done;)if("object"==typeof(y=l(p,b,v.value,h))&&y&&y instanceof u)return y;return new u(!1)}).stop=function(t){return new u(!0,t)}},L56b:function(t,e){t.exports=function(t,e,i){if(!(t instanceof e))throw TypeError("Incorrect "+(i?i+" ":"")+"invocation");return t}},L7fL:function(t,e,i){var n=i("0sYB"),r=i("6aQQ"),a=i("5SyC"),o=Math.abs,s=Math.exp,l=Math.E;n({target:"Math",stat:!0,forced:r(function(){return-2e-17!=Math.sinh(-2e-17)})},{sinh:function(t){return o(t=+t)<1?(a(t)-a(-t))/2:(s(t-1)-s(-t-1))*(l/2)}})},L91H:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),i.d(e,"timeUnitDurations",function(){return r}),e.getNextUnit=a,e.getDuration=o,e.now=s,e.getTime=function(){return s().getTime()},e.copy=function(t){return new Date(t.getTime())},e.checkChange=function t(e,i,n,r){e=new Date(e.getTime());i=new Date(i.getTime());var o=0;var s=0;r||"millisecond"==n||(o=e.getTimezoneOffset(),e.setUTCMinutes(e.getUTCMinutes()-o),s=i.getTimezoneOffset(),i.setUTCMinutes(i.getUTCMinutes()-s));var l=!1;switch(n){case"year":e.getUTCFullYear()!=i.getUTCFullYear()&&(l=!0);break;case"month":e.getUTCFullYear()!=i.getUTCFullYear()?l=!0:e.getUTCMonth()!=i.getUTCMonth()&&(l=!0);break;case"day":e.getUTCMonth()!=i.getUTCMonth()?l=!0:e.getUTCDate()!=i.getUTCDate()&&(l=!0);break;case"hour":e.getUTCHours()!=i.getUTCHours()&&(l=!0);break;case"minute":e.getUTCMinutes()!=i.getUTCMinutes()&&(l=!0);break;case"second":e.getUTCSeconds()!=i.getUTCSeconds()&&(l=!0);break;case"millisecond":e.getTime()!=i.getTime()&&(l=!0)}if(l)return!0;var u=a(n);return!!u&&(e.setUTCMinutes(e.getUTCMinutes()+o),i.setUTCMinutes(i.getUTCMinutes()+s),t(e,i,u,r))},e.add=function(t,e,i,n){var r=0;n||"millisecond"==e||(r=t.getTimezoneOffset(),t.setUTCMinutes(t.getUTCMinutes()-r));switch(e){case"day":var a=t.getUTCDate();t.setUTCDate(a+i);break;case"second":var o=t.getUTCSeconds();t.setUTCSeconds(o+i);break;case"millisecond":var s=t.getUTCMilliseconds();t.setUTCMilliseconds(s+i);break;case"hour":var l=t.getUTCHours();t.setUTCHours(l+i);break;case"minute":var u=t.getUTCMinutes();t.setUTCMinutes(u+i);break;case"year":var h=t.getUTCFullYear();t.setUTCFullYear(h+i);break;case"month":var c=t.getUTCMonth();t.setUTCMonth(c+i);break;case"week":var p=t.getUTCDate();t.setUTCDate(p+7*i)}if(!n&&"millisecond"!=e&&(t.setUTCMinutes(t.getUTCMinutes()+r),"day"==e||"week"==e||"month"==e||"year"==e)){var d=t.getTimezoneOffset();if(d!=r){var f=d-r;t.setUTCMinutes(t.getUTCMinutes()+f),t.getTimezoneOffset()!=d&&t.setUTCMinutes(t.getUTCMinutes()-f)}}return t},e.round=function t(e,i,r,a,s,l){n.isNumber(r)||(r=1);var u=0;s||"millisecond"==i||(u=e.getTimezoneOffset(),e.setUTCMinutes(e.getUTCMinutes()-u));switch(i){case"day":var h=e.getUTCDate();if(r>1){if(l){l=t(l,"day",1);var c=e.getTime()-l.getTime(),p=Math.floor(c/o("day")/r),d=o("day",p*r);e.setTime(l.getTime()+d-u*o("minute"))}}else e.setUTCDate(h);e.setUTCHours(0,0,0,0);break;case"second":var f=e.getUTCSeconds();r>1&&(f=Math.floor(f/r)*r),e.setUTCSeconds(f,0);break;case"millisecond":if(1==r)return e;var g=e.getUTCMilliseconds();g=Math.floor(g/r)*r,e.setUTCMilliseconds(g);break;case"hour":var y=e.getUTCHours();r>1&&(y=Math.floor(y/r)*r),e.setUTCHours(y,0,0,0);break;case"minute":var m=e.getUTCMinutes();g=e.getUTCMilliseconds(),r>1&&(m=Math.floor(m/r)*r),e.setUTCMinutes(m,0,0);break;case"month":var v=e.getUTCMonth();r>1&&(v=Math.floor(v/r)*r),e.setUTCMonth(v,1),e.setUTCHours(0,0,0,0);break;case"year":var b=e.getUTCFullYear();r>1&&(b=Math.floor(b/r)*r),e.setUTCFullYear(b,0,1),e.setUTCHours(0,0,0,0);break;case"week":var x=e.getUTCDate(),_=e.getUTCDay();n.isNumber(a)||(a=1),x=_>=a?x-_+a:x-(7+_)+a,e.setUTCDate(x),e.setUTCHours(0,0,0,0)}if(!s&&"millisecond"!=i&&(e.setUTCMinutes(e.getUTCMinutes()+u),"day"==i||"week"==i||"month"==i||"year"==i)){var P=e.getTimezoneOffset();if(P!=u){var w=P-u;e.setUTCMinutes(e.getUTCMinutes()+w)}}return e};var n=i("Mtpk"),r={millisecond:1,second:1e3,minute:6e4,hour:36e5,day:864e5,week:6048e5,month:2592e6,year:31536e6};function a(t){switch(t){case"year":return;case"month":return"year";case"week":case"day":return"month";case"hour":return"day";case"minute":return"hour";case"second":return"minute";case"millisecond":return"second"}}function o(t,e){return n.hasValue(e)||(e=1),r[t]*e}function s(){return new Date}},LBDG:function(t,e,i){"use strict";e.b=function(){return/apple/i.test(navigator.vendor)},e.a=function(){return/MSIE |Trident\//.test(navigator.userAgent)}},LO3D:function(t,e,i){var n=i("lnCe"),r=i("bvi0");(t.exports=function(t,e){return r[t]||(r[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.6.4",mode:n?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},LPN9:function(t,e,i){"use strict";var n=i("0sYB"),r=i("X/sl").every,a=i("xlUI"),o=i("J+FZ"),s=a("every"),l=o("every");n({target:"Array",proto:!0,forced:!s||!l},{every:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},"LV//":function(t,e,i){i("0sYB")({target:"String",proto:!0},{repeat:i("ScUe")})},LoW2:function(t,e,i){var n=i("0sYB"),r=i("6aQQ"),a=i("9XRO"),o=i("gxUV").f,s=i("3sMl"),l=r(function(){o(1)});n({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(t,e){return o(a(t),e)}})},M1hx:function(t,e,i){i("0FA2")("flatMap")},M44V:function(t,e,i){var n=i("0sYB"),r=i("vfdp"),a=i("2D0i"),o=i("2xmP"),s=r.process,l="process"==o(s);n({global:!0,enumerable:!0,noTargetGet:!0},{queueMicrotask:function(t){var e=l&&s.domain;a(e?e.bind(t):t)}})},MC1b:function(t,e,i){"use strict";var n,r,a,o,s=i("0sYB"),l=i("lnCe"),u=i("vfdp"),h=i("1wCr"),c=i("97TN"),p=i("z3p0"),d=i("/vWR"),f=i("NRfM"),g=i("YRD/"),y=i("Kg2n"),m=i("HnbP"),v=i("L56b"),b=i("2xmP"),x=i("2fPu"),_=i("L4xm"),P=i("XqrT"),w=i("Nfo5"),O=i("gBcN").set,T=i("2D0i"),S=i("E81g"),C=i("Y2i6"),I=i("TQpL"),k=i("AYiJ"),D=i("SqFF"),j=i("EjSS"),V=i("KslR"),A=i("hvfb"),M=V("species"),F="Promise",E=D.get,R=D.set,N=D.getterFor(F),L=c,B=u.TypeError,U=u.document,W=u.process,Y=h("fetch"),H=I.f,z=H,X="process"==b(W),G=!!(U&&U.createEvent&&u.dispatchEvent),K=j(F,function(){if(!(x(L)!==String(L))){if(66===A)return!0;if(!X&&"function"!=typeof PromiseRejectionEvent)return!0}if(l&&!L.prototype.finally)return!0;if(A>=51&&/native code/.test(L))return!1;var t=L.resolve(1),e=function(t){t(function(){},function(){})};return(t.constructor={})[M]=e,!(t.then(function(){})instanceof e)}),q=K||!P(function(t){L.all(t).catch(function(){})}),Z=function(t){var e;return!(!y(t)||"function"!=typeof(e=t.then))&&e},Q=function(t,e,i){if(!e.notified){e.notified=!0;var n=e.reactions;T(function(){for(var r=e.value,a=1==e.state,o=0;n.length>o;){var s,l,u,h=n[o++],c=a?h.ok:h.fail,p=h.resolve,d=h.reject,f=h.domain;try{c?(a||(2===e.rejection&&et(t,e),e.rejection=1),!0===c?s=r:(f&&f.enter(),s=c(r),f&&(f.exit(),u=!0)),s===h.promise?d(B("Promise-chain cycle")):(l=Z(s))?l.call(s,p,d):p(s)):d(r)}catch(t){f&&!u&&f.exit(),d(t)}}e.reactions=[],e.notified=!1,i&&!e.rejection&&$(t,e)})}},J=function(t,e,i){var n,r;G?((n=U.createEvent("Event")).promise=e,n.reason=i,n.initEvent(t,!1,!0),u.dispatchEvent(n)):n={promise:e,reason:i},(r=u["on"+t])?r(n):"unhandledrejection"===t&&C("Unhandled promise rejection",i)},$=function(t,e){O.call(u,function(){var i,n=e.value;if(tt(e)&&(i=k(function(){X?W.emit("unhandledRejection",n,t):J("unhandledrejection",t,n)}),e.rejection=X||tt(e)?2:1,i.error))throw i.value})},tt=function(t){return 1!==t.rejection&&!t.parent},et=function(t,e){O.call(u,function(){X?W.emit("rejectionHandled",t):J("rejectionhandled",t,e.value)})},it=function(t,e,i,n){return function(r){t(e,i,r,n)}},nt=function(t,e,i,n){e.done||(e.done=!0,n&&(e=n),e.value=i,e.state=2,Q(t,e,!0))},rt=function(t,e,i,n){if(!e.done){e.done=!0,n&&(e=n);try{if(t===i)throw B("Promise can't be resolved itself");var r=Z(i);r?T(function(){var n={done:!1};try{r.call(i,it(rt,t,n,e),it(nt,t,n,e))}catch(i){nt(t,n,i,e)}}):(e.value=i,e.state=1,Q(t,e,!1))}catch(i){nt(t,{done:!1},i,e)}}};K&&(L=function(t){v(this,L,F),m(t),n.call(this);var e=E(this);try{t(it(rt,this,e),it(nt,this,e))}catch(t){nt(this,e,t)}},(n=function(t){R(this,{type:F,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=d(L.prototype,{then:function(t,e){var i=N(this),n=H(w(this,L));return n.ok="function"!=typeof t||t,n.fail="function"==typeof e&&e,n.domain=X?W.domain:void 0,i.parent=!0,i.reactions.push(n),0!=i.state&&Q(this,i,!1),n.promise},catch:function(t){return this.then(void 0,t)}}),r=function(){var t=new n,e=E(t);this.promise=t,this.resolve=it(rt,t,e),this.reject=it(nt,t,e)},I.f=H=function(t){return t===L||t===a?new r(t):z(t)},l||"function"!=typeof c||(o=c.prototype.then,p(c.prototype,"then",function(t,e){var i=this;return new L(function(t,e){o.call(i,t,e)}).then(t,e)},{unsafe:!0}),"function"==typeof Y&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(t){return S(L,Y.apply(u,arguments))}}))),s({global:!0,wrap:!0,forced:K},{Promise:L}),f(L,F,!1,!0),g(F),a=h(F),s({target:F,stat:!0,forced:K},{reject:function(t){var e=H(this);return e.reject.call(void 0,t),e.promise}}),s({target:F,stat:!0,forced:l||K},{resolve:function(t){return S(l&&this===a?L:this,t)}}),s({target:F,stat:!0,forced:q},{all:function(t){var e=this,i=H(e),n=i.resolve,r=i.reject,a=k(function(){var i=m(e.resolve),a=[],o=0,s=1;_(t,function(t){var l=o++,u=!1;a.push(void 0),s++,i.call(e,t).then(function(t){u||(u=!0,a[l]=t,--s||n(a))},r)}),--s||n(a)});return a.error&&r(a.value),i.promise},race:function(t){var e=this,i=H(e),n=i.reject,r=k(function(){var r=m(e.resolve);_(t,function(t){r.call(e,t).then(i.resolve,n)})});return r.error&&n(r.value),i.promise}})},MIZb:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("Tjl+"),a=i("aCit"),o=i("8ZqG"),s=function(t){function e(){var e=t.call(this)||this;return e._purposes={stroke:Object(o.c)("#e5e5e5"),fill:Object(o.c)("#f3f3f3"),primaryButton:Object(o.c)("#6794dc"),primaryButtonHover:Object(o.c)("#6771dc"),primaryButtonDown:Object(o.c)("#68dc75"),primaryButtonActive:Object(o.c)("#68dc75"),primaryButtonText:Object(o.c)("#FFFFFF"),primaryButtonStroke:Object(o.c)("#FFFFFF"),secondaryButton:Object(o.c)("#d9d9d9"),secondaryButtonHover:Object(o.c)("#d9d9d9").brighten(-.25),secondaryButtonDown:Object(o.c)("#d9d9d9").brighten(-.35),secondaryButtonActive:Object(o.c)("#d9d9d9").brighten(.35),secondaryButtonText:Object(o.c)("#000000"),secondaryButtonStroke:Object(o.c)("#FFFFFF"),grid:Object(o.c)("#000000"),background:Object(o.c)("#ffffff"),alternativeBackground:Object(o.c)("#000000"),text:Object(o.c)("#000000"),alternativeText:Object(o.c)("#FFFFFF"),disabledBackground:Object(o.c)("#999999"),positive:Object(o.c)("#67dc75"),negative:Object(o.c)("#dc6788")},e.className="InterfaceColorSet",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.debug=function(){},e.prototype.getFor=function(t){return this._purposes[t]},e.prototype.setFor=function(t,e){this._purposes[t]=e},e}(r.a);a.c.registeredClasses.InterfaceColorSet=s},"MS5+":function(t,e,i){var n=i("0sYB"),r=i("+s7l");n({target:"Array",proto:!0,forced:r!==[].lastIndexOf},{lastIndexOf:r})},MXvJ:function(t,e,i){"use strict";i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("jfaP"),a=i("aCit"),o=i("Gg2j"),s=i("hGwe"),l=function(t){function e(){var e=t.call(this)||this;return e.className="Polyarc",e.controlPointDistance=.5,e.controlPointPosition=.5,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.makePath=function(){this._distance=0;var t=this.segments;if(t&&t.length>0){var e="";this._realSegments=[];for(var i=0,n=t.length;i<n;i++){var r=t[i],a=[];if(this._realSegments.push(a),r.length>0){e+=s.moveTo(r[0]);for(var l=1;l<r.length;l++){var u=r[l-1],h=r[l],c=o.getDistance(h,u),p=c*this.controlPointDistance,d=this.controlPointPosition,f=-o.getAngle(u,h),g={x:u.x+(h.x-u.x)*d*.5-p*o.sin(f),y:u.y+(h.y-u.y)*d*.5-p*o.cos(f)},y={x:u.x+(h.x-u.x)*d*1.5-p*o.sin(f),y:u.y+(h.y-u.y)*d*1.5-p*o.cos(f)};e+=s.cubicCurveTo(h,g,y);var m=Math.ceil(c),v=u;if(m>0)for(var b=0;b<=m;b++){var x=o.getPointOnCubicCurve(u,h,g,y,b/m);a.push(x),this._distance+=o.getDistance(v,x),v=x}else a.push(u)}}}this.path=e}},Object.defineProperty(e.prototype,"controlPointPosition",{get:function(){return this.getPropertyValue("controlPointPosition")},set:function(t){this.setPropertyValue("controlPointPosition",t),this.makePath()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"controlPointDistance",{get:function(){return this.getPropertyValue("controlPointDistance")},set:function(t){this.setPropertyValue("controlPointDistance",t),this.makePath()},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.Polyarc=l},MZQ8:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("1qam"),a=i("Gg2j"),o=function(t){function e(){var e=t.call(this)||this;return e.className="PointedRectangle",e.element=e.paper.add("path"),e.cornerRadius=6,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.cornerRadius,i=this.innerWidth,n=this.innerHeight;if(i>0&&n>0){var r,o,s=this.pointerX,l=this.pointerY,u=this.pointerBaseWidth/2,h=a.min(i/2,n/2),c=a.fitToRange(e,0,h),p=a.fitToRange(e,0,h),d=a.fitToRange(e,0,h),f=a.fitToRange(e,0,h),g=void 0,y=void 0,m=void 0,v=void 0,b=(s-0)*(n-0)-(l-0)*(i-0),x=(s-0)*(0-n)-(l-n)*(i-0);if(b>0&&x>0)g="M"+c+",0 L"+((r=a.fitToRange(s,c+u,i-u-p))-u)+",0 L"+s+","+(l=a.fitToRange(l,-1/0,0))+" L"+(r+u)+",0 L"+(i-p)+",0";else g="M"+c+",0 L"+(i-p)+",0";if(b<0&&x<0)m=" L"+(i-d)+","+n+" L"+((r=a.fitToRange(s,f+u,i-u-d))+u)+","+n+" L"+s+","+(l=a.fitToRange(l,n,1/0))+" L"+(r-u)+","+n+" L"+f+","+n;else m=" L"+f+","+n;if(b<0&&x>0)v=" L0,"+(n-f)+" L0,"+((o=a.fitToRange(l,c+u,n-f-u))+u)+" L"+(s=a.fitToRange(s,-1/0,0))+","+l+" L0,"+(o-u)+" L0,"+c;else v=" L0,"+c;if(b>0&&x<0)y=" L"+i+","+p+" L"+i+","+((o=a.fitToRange(l,p+u,n-u-d))-u)+" L"+(s=a.fitToRange(s,i,1/0))+","+l+" L"+i+","+(o+u)+" L"+i+","+(n-d);else y=" L"+i+","+(n-d);var _=" a"+p+","+p+" 0 0 1 "+p+","+p,P=" a"+d+","+d+" 0 0 1 -"+d+","+d,w=" a"+f+","+f+" 0 0 1 -"+f+",-"+f,O=" a"+c+","+c+" 0 0 1 "+c+",-"+c;this.path=g+_+y+P+m+w+v+O}},Object.defineProperty(e.prototype,"cornerRadius",{get:function(){return this.getPropertyValue("cornerRadius")},set:function(t){this.setPropertyValue("cornerRadius",t,!0)},enumerable:!0,configurable:!0}),e}(r.a)},Mdrz:function(t,e,i){var n=i("3sMl"),r=i("8+rI"),a=i("3weC"),o=i("kcMx");t.exports=n?Object.defineProperties:function(t,e){a(t);for(var i,n=o(e),s=n.length,l=0;s>l;)r.f(t,i=n[l++],e[i]);return t}},Meme:function(t,e,i){"use strict";i.d(e,"a",function(){return m});var n=i("m4/l"),r=i("C6dT"),a=i("hD5A"),o=i("AAkI"),s=i("eAid"),l=i("8EhG"),u=i("AaJ4"),h=i("TDx+"),c=i("eN1s"),p=i("vMqJ"),d=i("aCit"),f=i("tjMS"),g=i("Gg2j"),y=i("Mtpk"),m=function(t){function e(){var e=t.call(this)||this;e._chart=new a.d,e.className="AxisRenderer",e.minGridDistance=50,e.inside=!1,e.inversed=!1,e.tooltipLocation=.5,e.fullWidthTooltip=!1,e.cellStartLocation=0,e.cellEndLocation=1,e.minLabelPosition=0,e.maxLabelPosition=1,e.shouldClone=!1;var i=e.createChild(r.a);i.shouldClone=!1,i.layout="none",i.virtualParent=e,i.width=Object(f.c)(100),i.height=Object(f.c)(100),e.gridContainer=i,i.events.on("maxsizechanged",function(){e.inited&&e.invalidateAxisItems()},e,!1);var n=e.createChild(r.a);n.shouldClone=!1,n.isMeasured=!1,n.layout="none",n.width=Object(f.c)(100),n.height=Object(f.c)(100),e.breakContainer=n;var o=e.createChild(r.a);o.shouldClone=!1,o.isMeasured=!1,o.layout="none",o.width=Object(f.c)(100),o.height=Object(f.c)(100),e.bulletsContainer=o,e.line=e.createChild(s.a),e.line.shouldClone=!1,e.line.strokeOpacity=0;var l=e.createChild(u.a);l.shouldClone=!1,e.baseGrid=l;var h=e._disposers;return h.push(l),h.push(e.line),h.push(i),h.push(n),h.push(o),h.push(e._chart),e.ticks.template.disabled=!0,e.axisFills.template.disabled=!0,e.axisFills.template.interactionsEnabled=!1,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"axis",{get:function(){return this._axis},set:function(t){this.setAxis(t)},enumerable:!0,configurable:!0}),e.prototype.setAxis=function(t){this._axis=t,this.baseGrid.parent=t,this.line.parent=t,this.gridContainer.bind("opacity",t)},e.prototype.processRenderer=function(){this.events.on("sizechanged",this.updateTooltip,this,!1),this.events.on("positionchanged",this.updateTooltip,this,!1),this.labels.template.inside=this.inside,this.ticks.template.inside=this.inside},e.prototype.updateTooltip=function(){},Object.defineProperty(e.prototype,"axisLength",{get:function(){return 0},enumerable:!0,configurable:!0}),e.prototype.positionItem=function(t,e){t&&t.moveTo(e)},e.prototype.positionToPoint=function(t,e){return{x:0,y:0}},e.prototype.positionToAngle=function(t){return 0},e.prototype.positionToCoordinate=function(t){var e=this.axis,i=e.axisFullLength;return e.renderer.inversed?(e.end-t)*i:(t-e.start)*i},e.prototype.updateGridContainer=function(){},e.prototype.getHeight=function(){var t=this.gridContainer;return t.parent?t.parent.pixelHeight:this.gridContainer.pixelHeight||0},e.prototype.getWidth=function(){var t=this.gridContainer;return t.parent?t.parent.pixelWidth:this.gridContainer.pixelWidth||0},e.prototype.coordinateToPosition=function(t,e){var i,n=this.axis,r=n.axisFullLength;return i=n.renderer.inversed?n.end-t/r:t/r+n.start,g.round(i,5)},e.prototype.pointToPosition=function(t){return 0},e.prototype.getPositionRangePath=function(t,e){return""},e.prototype.invalidateAxisItems=function(){var t=this.axis;t&&t.invalidateDataItems()},e.prototype.updateGridElement=function(t,e,i){},e.prototype.updateTickElement=function(t,e,i){},e.prototype.updateBullet=function(t,e,i){},e.prototype.updateLabelElement=function(t,e,i,n){},e.prototype.updateFillElement=function(t,e,i){t.startPosition=e,t.endPosition=i},e.prototype.updateAxisLine=function(){},e.prototype.updateBaseGridElement=function(){},e.prototype.updateBreakElement=function(t){this.positionItem(t.startLine,t.startPoint),this.toggleVisibility(t.startLine,t.startPosition,0,1),this.positionItem(t.endLine,t.endPoint),this.toggleVisibility(t.endLine,t.endPosition,0,1)},Object.defineProperty(e.prototype,"minGridDistance",{get:function(){return this.getPropertyValue("minGridDistance")},set:function(t){this.setPropertyValue("minGridDistance",t)&&this.axis&&this.axis.invalidateLayout()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"chart",{get:function(){return this._chart.get()},set:function(t){this._chart.set(t,null)},enumerable:!0,configurable:!0}),e.prototype.toggleVisibility=function(t,e,i,n){var r=this.axis,a=t.dataItem;a&&a instanceof o.b&&(y.isNumber(a.minPosition)&&(i=a.minPosition),y.isNumber(a.maxPosition)&&(n=a.maxPosition));var s=r.start+(r.end-r.start)*(i-1e-4),l=r.start+(r.end-r.start)*(n+1e-4);t.disabled||(t.__disabled=e<s||e>l)},e.prototype.createBreakSprites=function(t){},Object.defineProperty(e.prototype,"axisFills",{get:function(){if(!this._axisFills){var t=this.createFill(this.axis);this._axisFills=new p.e(t),t.applyOnClones=!0,t.events.on("enabled",this.invalidateAxisItems,this,!1),this._disposers.push(new p.c(this._axisFills)),this._disposers.push(this._axisFills.template)}return this._axisFills},enumerable:!0,configurable:!0}),e.prototype.createFill=function(t){return new l.a(t)},Object.defineProperty(e.prototype,"grid",{get:function(){if(!this._grid){var t=this.createGrid();this._grid=new p.e(t),t.applyOnClones=!0,t.events.on("enabled",this.invalidateAxisItems,this,!1),this._disposers.push(new p.c(this._grid)),this._disposers.push(this._grid.template)}return this._grid},enumerable:!0,configurable:!0}),e.prototype.createGrid=function(){return new u.a},Object.defineProperty(e.prototype,"ticks",{get:function(){if(!this._ticks){var t=this.createTick();t.applyOnClones=!0,t.isMeasured=!1,t.events.on("enabled",this.invalidateAxisItems,this,!1),this._ticks=new p.e(t),this._disposers.push(new p.c(this._ticks)),this._disposers.push(this._ticks.template)}return this._ticks},enumerable:!0,configurable:!0}),e.prototype.createTick=function(){return new c.a},Object.defineProperty(e.prototype,"labels",{get:function(){if(!this._labels){var t=this.createLabel();this._labels=new p.e(t),t.applyOnClones=!0,t.events.on("enabled",this.invalidateAxisItems,this,!1),this._disposers.push(new p.c(this._labels)),this._disposers.push(this._labels.template)}return this._labels},enumerable:!0,configurable:!0}),e.prototype.createLabel=function(){return new h.a},Object.defineProperty(e.prototype,"inside",{get:function(){return this.getPropertyValue("inside")},set:function(t){this.setPropertyValue("inside",t)&&this.axis&&this.axis.invalidate(),t?(this.width=0,this.height=0):(this.width=void 0,this.height=void 0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"opposite",{get:function(){return this.getPropertyValue("opposite")},set:function(t){this.setPropertyValue("opposite",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fullWidthTooltip",{get:function(){return this.getPropertyValue("fullWidthTooltip")},set:function(t){this.setPropertyValue("fullWidthTooltip",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipLocation",{get:function(){return this.getPropertyValue("tooltipLocation")},set:function(t){this.setPropertyValue("tooltipLocation",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipLocation2",{get:function(){return this.getPropertyValue("tooltipLocation2")},set:function(t){this.setPropertyValue("tooltipLocation2",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cellStartLocation",{get:function(){return this.getPropertyValue("cellStartLocation")},set:function(t){this.setPropertyValue("cellStartLocation",t)&&this.axis&&this.axis.invalidateSeries()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cellEndLocation",{get:function(){return this.getPropertyValue("cellEndLocation")},set:function(t){this.setPropertyValue("cellEndLocation",t)&&this.axis&&this.axis.invalidateSeries()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inversed",{get:function(){return this.getPropertyValue("inversed")},set:function(t){this.setPropertyValue("inversed",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minLabelPosition",{get:function(){return this.getPropertyValue("minLabelPosition")},set:function(t){this.setPropertyValue("minLabelPosition",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxLabelPosition",{get:function(){return this.getPropertyValue("maxLabelPosition")},set:function(t){this.setPropertyValue("maxLabelPosition",t,!0)},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.grid.template.copyFrom(e.grid.template),this.ticks.template.copyFrom(e.ticks.template),this.labels.template.copyFrom(e.labels.template),this.axisFills.template.copyFrom(e.axisFills.template),this.line.copyFrom(e.line),this.baseGrid.copyFrom(e.baseGrid)},e.prototype.toAxisPosition=function(t){return t},e.prototype.setVisibility=function(e){t.prototype.setVisibility.call(this,e),this.bulletsContainer.visible=e},e}(r.a);d.c.registeredClasses.AxisRenderer=m},MfFr:function(t,e){var i=Math.abs,n=Math.pow,r=Math.floor,a=Math.log,o=Math.LN2;t.exports={pack:function(t,e,s){var l,u,h,c=new Array(s),p=8*s-e-1,d=(1<<p)-1,f=d>>1,g=23===e?n(2,-24)-n(2,-77):0,y=t<0||0===t&&1/t<0?1:0,m=0;for((t=i(t))!=t||t===1/0?(u=t!=t?1:0,l=d):(l=r(a(t)/o),t*(h=n(2,-l))<1&&(l--,h*=2),(t+=l+f>=1?g/h:g*n(2,1-f))*h>=2&&(l++,h/=2),l+f>=d?(u=0,l=d):l+f>=1?(u=(t*h-1)*n(2,e),l+=f):(u=t*n(2,f-1)*n(2,e),l=0));e>=8;c[m++]=255&u,u/=256,e-=8);for(l=l<<e|u,p+=e;p>0;c[m++]=255&l,l/=256,p-=8);return c[--m]|=128*y,c},unpack:function(t,e){var i,r=t.length,a=8*r-e-1,o=(1<<a)-1,s=o>>1,l=a-7,u=r-1,h=t[u--],c=127&h;for(h>>=7;l>0;c=256*c+t[u],u--,l-=8);for(i=c&(1<<-l)-1,c>>=-l,l+=e;l>0;i=256*i+t[u],u--,l-=8);if(0===c)c=1-s;else{if(c===o)return i?NaN:h?-1/0:1/0;i+=n(2,e),c-=s}return(h?-1:1)*i*n(2,c-e)}}},MipW:function(t,e,i){"use strict";i.d(e,"a",function(){return c}),e.b=function(){null==n&&(n=new c);return n};var n,r=i("m4/l"),a=i("Tjl+"),o=i("pzs1"),s=i("x79X"),l=i("aCit"),u=i("ScGY"),h=i("Mtpk"),c=function(t){function e(){var e=t.call(this)||this;return e.adapter=new s.a(e),e.className="TextFormatter",e.applyTheme(),e}return Object(r.c)(e,t),e.prototype.debug=function(){},e.prototype.format=function(t,e){h.hasValue(e)||(e="svg");var i="",n=(t=this.escape(t)).match(/\[([^\]]*?)\]/gm);if(!n)return this.wrap(t,"",e);for(var r=t.split(/\[[^\[\]]*\]/),a=0,o=r.length;a<o;a++){var s=r[a];if(""!==s){s=this.adapter.apply("chunk",s);var l="";a>0&&(l=n[a-1].replace("[","").replace("]","")),i+=this.wrap(s,l,e)}}return i=this.unescape(i),this.cleanUp(i)},e.prototype.escape=function(t){return t.replace(/\[\[/g,l.c.getPlaceholder("1")).replace(/([^\/]{1})\]\]/g,"$1"+l.c.getPlaceholder("2")).replace(/\]\]/g,l.c.getPlaceholder("2")).replace(/\{\{/g,l.c.getPlaceholder("3")).replace(/\}\}/g,l.c.getPlaceholder("4")).replace(/\'\'/g,l.c.getPlaceholder("5"))},e.prototype.unescape=function(t){return t.replace(new RegExp(l.c.getPlaceholder("1"),"g"),"[[").replace(new RegExp(l.c.getPlaceholder("2"),"g"),"]]").replace(new RegExp(l.c.getPlaceholder("3"),"g"),"{{").replace(new RegExp(l.c.getPlaceholder("4"),"g"),"}}").replace(new RegExp(l.c.getPlaceholder("5"),"g"),"'")},e.prototype.cleanUp=function(t){return t.replace(/\[\[/g,"[").replace(/\]\]/g,"]").replace(/\{\{/g,"{").replace(/\}\}/g,"}").replace(/\'\'/g,"'")},e.prototype.wrap=function(t,e,i){switch(""!==e&&"/"!==e||(e=""),i){case"html":return this.wrapHtml(t,this.translateStyleShortcuts(e));default:return this.wrapSvg(t,this.translateStyleShortcuts(e))}},e.prototype.wrapSvg=function(t,e){return""===e?"<tspan>"+t+"</tspan>":"<tspan style='"+e+"'>"+t+"</tspan>"},e.prototype.getSvgElement=function(t,e){var i=new o.a("tspan");return i.textContent=t,e&&i.node.setAttribute("style",e),i},e.prototype.wrapHtml=function(t,e){return""===e?"<span>"+t+"</span>":"<span style='"+this.styleSvgToHtml(e)+"'>"+t+"</span>"},e.prototype.getHtmlElement=function(t,e){var i=document.createElement("span");return i.innerHTML=t,e&&i.setAttribute("style",e),i},e.prototype.styleSvgToHtml=function(t){return t=t.replace(/fill:/,"color:")},e.prototype.translateStyleShortcuts=function(t){if(""==t||"[ ]"==t)return"";var e=l.c.getCache("translateStyleShortcuts_"+t);if(e)return e;var i=t.match(/([\w\-]*:[\s]?[^;\s\]]*)|(\#[\w]{1,6})|([\w]+)|(\/)/gi);if(!i)return t;for(var n=0;n<i.length;n++)i[n].match(/^bold$/i)?i[n]="font-weight:"+i[n]:"/"==i[n]?i[n]="":i[n].match(/:/)||(i[n]="fill:"+i[n]);var r=i.join(";");return l.c.setCache("translateStyleShortcuts_"+t,r),r},e.prototype.chunk=function(t,e,i){void 0===e&&(e=!1),void 0===i&&(i=!1);var n=[];t=this.escape(t);for(var r=e?t.split("'"):[t],a=0;a<r.length;a++){var o=r[a];if(""!==o)if(a%2==0)for(var s=(o=(o=o.replace(/\]\[/g,"]"+u.d+"[")).replace(/\[\]/g,"[ ]")).split(/[\[\]]+/),l=0;l<s.length;l++){(h=this.cleanUp(this.unescape(s[l])))!==u.d&&(""!==h&&(l%2==0?n.push({type:"value",text:this.adapter.apply("chunk",h)}):n.push({type:i?"value":"format",text:"["+h+"]"})))}else for(s=o.split(/[\[\]]+/),l=0;l<s.length;l++){var h;""!==(h=this.cleanUp(this.unescape(s[l])))&&(l%2==0?n.push({type:"text",text:h}):this.isImage(h)?n.push({type:"image",text:"["+h+"]"}):n.push({type:"format",text:"["+h+"]"}))}}return n},e.prototype.isImage=function(t){return!!t.match(/img[ ]?:/)},e}(a.a);l.c.registeredClasses.TextFormatter=c},MlsF:function(t,e,i){"use strict";e.b=function(t){switch(t){case 0:return 0;case-1:return 1;case 1:return-1}},e.a=function(t,e){return 0===t?e:t}},Mpxm:function(t,e,i){"use strict";i.d(e,"a",function(){return l}),i.d(e,"b",function(){return u});var n=i("4DCw"),r=i("ZhuL"),a=i("x79X"),o=i("OVUc"),s=i("hJ5i"),l=function(){function t(){this.adapter=new a.a(this)}return t.prototype.load=function(t){var e=Array.isArray(t)?t:[t],i=s.map(e,function(t){return t.dispatchImmediately("started"),t.dispatchImmediately("loadstarted"),o.a(t.url,t,t.requestOptions)});Promise.all(i).then(function(t){s.each(t,function(t){var e=t.target;e.dispatchImmediately("loadended"),t.error?e.events.isEnabled("error")&&e.events.dispatchImmediately("error",{type:"error",code:t.xhr.status,message:e.language.translate("Unable to load file: %1",null,e.url),target:e}):e.processData(t.response,t.type),e.dispatchImmediately("ended")})}).catch(function(t){t.target&&(t.target.dispatchImmediately("loadended"),t.target.events.isEnabled("error")&&t.target.events.dispatchImmediately("error",{type:"error",code:t.xhr.status,message:t.target.language.translate("Unable to load file: %1",null,t.target.url),target:t.target}),t.target.dispatchImmediately("ended"))})},t.prototype.getParserByType=function(t){var e=this.adapter.apply("getParserByType",{parser:null,type:t}).parser;return e||("csv"==t||"text/csv"==t||"application/vnd.ms-excel"==t?new n.a:"json"==t||"application/json"==t?new r.a:void 0)},t.prototype.getParserByData=function(t,e){var i=this.adapter.apply("getParserByData",{parser:null,data:t,type:e}).parser;if(!i){if(i=this.getParserByType(e))return i;if(r.a.isJSON(t))return this.getParserByType("json");if(n.a.isCSV(t))return this.getParserByType("csv")}return i},t}(),u=new l},Mr4Y:function(t,e,i){"use strict";i.d(e,"a",function(){return d});var n=i("m4/l"),r=i("C6dT"),a=i("Vs7R"),o=i("Gg2j"),s=i("hGwe"),l=i("8ZqG"),u=i("CuFa"),h=i("sxA1"),c=i("C84C"),p=i("Mtpk"),d=function(t){function e(){var e=t.call(this)||this;e.angle=30,e.depth=30,e.className="Rectangle3D",e.layout="none";var i=e.createChild(a.a);i.shouldClone=!1,i.setElement(e.paper.add("path")),i.isMeasured=!1,e.sideBack=i,e._disposers.push(e.sideBack);var n=e.createChild(a.a);n.shouldClone=!1,n.setElement(e.paper.add("path")),n.isMeasured=!1,e.sideBottom=n,e._disposers.push(e.sideBottom);var r=e.createChild(a.a);r.shouldClone=!1,r.setElement(e.paper.add("path")),r.isMeasured=!1,e.sideLeft=r,e._disposers.push(e.sideLeft);var o=e.createChild(a.a);o.shouldClone=!1,o.setElement(e.paper.add("path")),o.isMeasured=!1,e.sideRight=o,e._disposers.push(e.sideRight);var s=e.createChild(a.a);s.shouldClone=!1,s.setElement(e.paper.add("path")),s.isMeasured=!1,e.sideTop=s,e._disposers.push(e.sideTop);var l=e.createChild(a.a);return l.shouldClone=!1,l.setElement(e.paper.add("path")),l.isMeasured=!1,e.sideFront=l,e._disposers.push(e.sideFront),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.innerWidth,i=this.innerHeight,n=this.depth,r=this.angle,a=o.sin(r),l=o.cos(r),u={x:0,y:0},h={x:e,y:0},c={x:e,y:i},p={x:0,y:i},d={x:n*l,y:-n*a},f={x:n*l+e,y:-n*a},g={x:n*l+e,y:-n*a+i},y={x:n*l,y:-n*a+i};this.sideFront.path=s.moveTo(u)+s.lineTo(h)+s.lineTo(c)+s.lineTo(p)+s.closePath(),this.sideBack.path=s.moveTo(d)+s.lineTo(f)+s.lineTo(g)+s.lineTo(y)+s.closePath(),this.sideLeft.path=s.moveTo(u)+s.lineTo(d)+s.lineTo(y)+s.lineTo(p)+s.closePath(),this.sideRight.path=s.moveTo(h)+s.lineTo(f)+s.lineTo(g)+s.lineTo(c)+s.closePath(),this.sideBottom.path=s.moveTo(p)+s.lineTo(y)+s.lineTo(g)+s.lineTo(c)+s.closePath(),this.sideTop.path=s.moveTo(u)+s.lineTo(d)+s.lineTo(f)+s.lineTo(h)+s.closePath()},Object.defineProperty(e.prototype,"depth",{get:function(){return this.getPropertyValue("depth")},set:function(t){this.setPropertyValue("depth",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"angle",{get:function(){return this.getPropertyValue("angle")},set:function(t){this.setPropertyValue("angle",t,!0)},enumerable:!0,configurable:!0}),e.prototype.setFill=function(e){var i;if(t.prototype.setFill.call(this,e),p.isString(e)&&(e=Object(l.e)(e)),e instanceof l.a)i=e.hex;else if(e instanceof h.a||e instanceof u.a)i=e.stops.getIndex(0).color.hex;else{var n=new c.a;n.lightness=-.2,this.sideBack.filters.push(n);var r=n.clone();r.lightness=-.4,this.sideLeft.filters.push(r);var a=n.clone();a.lightness=-.2,this.sideRight.filters.push(a);var o=n.clone();o.lightness=-.1,this.sideTop.filters.push(o);var s=n.clone();s.lightness=-.5,this.sideBottom.filters.push(s)}i&&(this.sideBack.fill=Object(l.c)(i).lighten(-.2),this.sideLeft.fill=Object(l.c)(i).lighten(-.4),this.sideRight.fill=Object(l.c)(i).lighten(-.2),this.sideTop.fill=Object(l.c)(i).lighten(-.1),this.sideBottom.fill=Object(l.c)(i).lighten(-.5))},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.sideBack.copyFrom(e.sideBack),this.sideLeft.copyFrom(e.sideLeft),this.sideRight.copyFrom(e.sideRight),this.sideTop.copyFrom(e.sideTop),this.sideBottom.copyFrom(e.sideBottom)},e}(r.a)},Mtpk:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isNaN=r,e.getType=a,e.getDefault=function(t,e){return t||e},e.checkString=function(t){if("string"==typeof t)return!0;throw new Error("Expected a string but got "+a(t))},e.checkBoolean=function(t){if("boolean"==typeof t)return!0;throw new Error("Expected a boolean but got "+a(t))},e.checkNumber=function(t){if("number"!=typeof t)throw new Error("Expected a number but got "+a(t));if(r(t))throw new Error("Expected a number but got NaN");return!0},e.checkObject=function(t){var e=a(t);if("[object Object]"===e)return!0;throw new Error("Expected an object but got "+e)},e.checkArray=function(t){if(Array.isArray(t))return!0;throw new Error("Expected an array but got "+a(t))},e.checkDate=function(t){var e=a(t);if("[object Date]"===e)return!0;throw new Error("Expected a date but got "+e)},e.castString=o,e.castNumber=function(t){if("string"==typeof t){var e=+t;if(r(e))throw new Error("Cannot cast string "+JSON.stringify(t)+" to a number");return e}if("number"==typeof t){if(r(t))throw new Error("Expected a number but got NaN");return t}var i=a(t);if("[object Date]"===i)return t.getTime();throw new Error("Expected a string, number, or date but got "+i)},e.toBoolean=function(t){return!!t},e.toNumber=s,e.toText=function(t){if(l(t)&&!u(t)){if(h(t))return o(t);if(c(t))return t.toString()}return t},e.toNumberOrPercent=function(t){if(!l(t)||h(t)||Object(n.b)(t))return t;if(u(t)&&-1!=t.indexOf("%"))return Object(n.c)(s(t));return s(t)},e.hasValue=l,e.getValue=function(t){if(l(t))return t;throw new Error("Value doesn't exist")},e.getValueDefault=function(t,e){return l(t)?t:e},e.isDate=function(t){return"[object Date]"===a(t)},e.isString=u,e.isNumber=h,e.isObject=c,e.isArray=function(t){return Array.isArray(t)};var n=i("tjMS");function r(t){return Number(t)!==t}function a(t){return{}.toString.call(t)}function o(t){if("string"==typeof t)return t;if("number"==typeof t)return""+t;throw new Error("Expected a string or number but got "+a(t))}function s(t){if(l(t)&&!h(t)){var e=Number(t);return r(e)&&u(t)&&""!=t?s(t.replace(/[^0-9.\-]+/g,"")):e}return t}function l(t){return null!=t}function u(t){return"string"==typeof t}function h(t){return"number"==typeof t&&Number(t)==t}function c(t){return"object"==typeof t&&null!=t}},"ND2/":function(t,e,i){"use strict";i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("PTiM"),a=i("8ZqG"),o=i("aFzC"),s=i("hGwe"),l=function(t){function e(){var e=t.call(this)||this;return e.className="WavedLine",e.element=e.paper.add("path"),e.waveLength=16,e.waveHeight=4,e.tension=.8,e.pixelPerfect=!1,e.fill=Object(a.c)(),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){var t={x:this.x1,y:this.y1},e={x:this.x2,y:this.y2};this.path=s.moveTo(t)+Object(o.c)(t,e,this.waveLength,this.waveHeight,this.tension,!0)},Object.defineProperty(e.prototype,"waveLength",{get:function(){return this.getPropertyValue("waveLength")},set:function(t){this.setPropertyValue("waveLength",t),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"waveHeight",{get:function(){return this.getPropertyValue("waveHeight")},set:function(t){this.setPropertyValue("waveHeight",t),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tension",{get:function(){return this.getPropertyValue("tension")},set:function(t){this.setPropertyValue("tension",t),this.invalidate()},enumerable:!0,configurable:!0}),e}(r.a)},"NI+5":function(t,e,i){"use strict";var n=i("0sYB"),r=i("3sMl"),a=i("hqo8"),o=i("7X7h"),s=i("EErT"),l=i("Ox5T"),u=i("gxUV").f;r&&n({target:"Object",proto:!0,forced:a},{__lookupSetter__:function(t){var e,i=o(this),n=s(t,!0);do{if(e=u(i,n))return e.set}while(i=l(i))}})},NK3S:function(t,e,i){"use strict";var n=i("3weC"),r=i("EErT");t.exports=function(t){if("string"!==t&&"number"!==t&&"default"!==t)throw TypeError("Incorrect hint");return r(n(this),"number"!==t)}},NKcy:function(t,e,i){"use strict";var n=i("0sYB"),r=i("UjlR"),a=i("7X7h"),o=i("tHyI"),s=i("HnbP"),l=i("Rs0P");n({target:"Array",proto:!0},{flatMap:function(t){var e,i=a(this),n=o(i.length);return s(t),(e=l(i,0)).length=r(e,i,i,n,0,1,t,arguments.length>1?arguments[1]:void 0),e}})},NNEa:function(t,e,i){"use strict";var n=i("/vWR"),r=i("Tl3C").getWeakData,a=i("3weC"),o=i("Kg2n"),s=i("L56b"),l=i("L4xm"),u=i("X/sl"),h=i("JZRr"),c=i("SqFF"),p=c.set,d=c.getterFor,f=u.find,g=u.findIndex,y=0,m=function(t){return t.frozen||(t.frozen=new v)},v=function(){this.entries=[]},b=function(t,e){return f(t.entries,function(t){return t[0]===e})};v.prototype={get:function(t){var e=b(this,t);if(e)return e[1]},has:function(t){return!!b(this,t)},set:function(t,e){var i=b(this,t);i?i[1]=e:this.entries.push([t,e])},delete:function(t){var e=g(this.entries,function(e){return e[0]===t});return~e&&this.entries.splice(e,1),!!~e}},t.exports={getConstructor:function(t,e,i,u){var c=t(function(t,n){s(t,c,e),p(t,{type:e,id:y++,frozen:void 0}),void 0!=n&&l(n,t[u],t,i)}),f=d(e),g=function(t,e,i){var n=f(t),o=r(a(e),!0);return!0===o?m(n).set(e,i):o[n.id]=i,t};return n(c.prototype,{delete:function(t){var e=f(this);if(!o(t))return!1;var i=r(t);return!0===i?m(e).delete(t):i&&h(i,e.id)&&delete i[e.id]},has:function(t){var e=f(this);if(!o(t))return!1;var i=r(t);return!0===i?m(e).has(t):i&&h(i,e.id)}}),n(c.prototype,i?{get:function(t){var e=f(this);if(o(t)){var i=r(t);return!0===i?m(e).get(t):i?i[e.id]:void 0}},set:function(t,e){return g(this,t,e)}}:{add:function(t){return g(this,t,!0)}}),c}}},NR9A:function(t,e,i){i("NRfM")(Math,"Math",!0)},NRfM:function(t,e,i){var n=i("8+rI").f,r=i("JZRr"),a=i("KslR")("toStringTag");t.exports=function(t,e,i){t&&!r(t=i?t:t.prototype,a)&&n(t,a,{configurable:!0,value:e})}},NSJ1:function(t,e,i){var n=i("vfdp"),r=i("6aQQ"),a=i("XqrT"),o=i("UseD").NATIVE_ARRAY_BUFFER_VIEWS,s=n.ArrayBuffer,l=n.Int8Array;t.exports=!o||!r(function(){l(1)})||!r(function(){new l(-1)})||!a(function(t){new l,new l(null),new l(1.5),new l(t)},!0)||r(function(){return 1!==new l(new s(2),1,void 0).length})},NWlt:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("big")},{big:function(){return r(this,"big","","")}})},NZ9V:function(t,e,i){"use strict";i("1M4z");var n=i("z3p0"),r=i("6aQQ"),a=i("KslR"),o=i("4Wbs"),s=i("k2B3"),l=a("species"),u=!r(function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),h="$0"==="a".replace(/./,"$0"),c=a("replace"),p=!!/./[c]&&""===/./[c]("a","$0"),d=!r(function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var i="ab".split(t);return 2!==i.length||"a"!==i[0]||"b"!==i[1]});t.exports=function(t,e,i,c){var f=a(t),g=!r(function(){var e={};return e[f]=function(){return 7},7!=""[t](e)}),y=g&&!r(function(){var e=!1,i=/a/;return"split"===t&&((i={}).constructor={},i.constructor[l]=function(){return i},i.flags="",i[f]=/./[f]),i.exec=function(){return e=!0,null},i[f](""),!e});if(!g||!y||"replace"===t&&(!u||!h||p)||"split"===t&&!d){var m=/./[f],v=i(f,""[t],function(t,e,i,n,r){return e.exec===o?g&&!r?{done:!0,value:m.call(e,i,n)}:{done:!0,value:t.call(i,e,n)}:{done:!1}},{REPLACE_KEEPS_$0:h,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),b=v[0],x=v[1];n(String.prototype,t,b),n(RegExp.prototype,f,2==e?function(t,e){return x.call(t,this,e)}:function(t){return x.call(t,this)})}c&&s(RegExp.prototype[f],"sham",!0)}},Nfo5:function(t,e,i){var n=i("3weC"),r=i("HnbP"),a=i("KslR")("species");t.exports=function(t,e){var i,o=n(t).constructor;return void 0===o||void 0==(i=n(o)[a])?e:r(i)}},NlGZ:function(t,e,i){"use strict";var n,r;!function(a,o){void 0===(r="function"==typeof(n=o)?n.call(e,i,e,t):n)||(t.exports=r)}("undefined"!=typeof window&&window,function(){if("undefined"==typeof window)return null;var t="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),e=t.requestAnimationFrame||t.mozRequestAnimationFrame||t.webkitRequestAnimationFrame||function(e){return t.setTimeout(e,20)};function i(t,e){var i=Object.prototype.toString.call(t),n="[object Array]"===i||"[object NodeList]"===i||"[object HTMLCollection]"===i||"[object Object]"===i||"undefined"!=typeof jQuery&&t instanceof jQuery||"undefined"!=typeof Elements&&t instanceof Elements,r=0,a=t.length;if(n)for(;r<a;r++)e(t[r]);else e(t)}function n(t){if(!t.getBoundingClientRect)return{width:t.offsetWidth,height:t.offsetHeight};var e=t.getBoundingClientRect();return{width:Math.round(e.width),height:Math.round(e.height)}}function r(t,e){Object.keys(e).forEach(function(i){t.style[i]=e[i]})}var a=function(t,o){function s(t,i){if(t)if(t.resizedAttached)t.resizedAttached.add(i);else{t.resizedAttached=new function(){var t,e,i=[];this.add=function(t){i.push(t)},this.call=function(n){for(t=0,e=i.length;t<e;t++)i[t].call(this,n)},this.remove=function(n){var r=[];for(t=0,e=i.length;t<e;t++)i[t]!==n&&r.push(i[t]);i=r},this.length=function(){return i.length}},t.resizedAttached.add(i),t.resizeSensor=document.createElement("div"),t.resizeSensor.dir="ltr",t.resizeSensor.className="resize-sensor";var a={pointerEvents:"none",position:"absolute",left:"0px",top:"0px",right:"0px",bottom:"0px",overflow:"hidden",zIndex:"-1",visibility:"hidden",maxWidth:"100%"},o={position:"absolute",left:"0px",top:"0px",transition:"0s"};r(t.resizeSensor,a);var s=document.createElement("div");s.className="resize-sensor-expand",r(s,a);var l=document.createElement("div");r(l,o),s.appendChild(l);var u=document.createElement("div");u.className="resize-sensor-shrink",r(u,a);var h=document.createElement("div");r(h,o),r(h,{width:"200%",height:"200%"}),u.appendChild(h),t.resizeSensor.appendChild(s),t.resizeSensor.appendChild(u),t.appendChild(t.resizeSensor);var c,p,d=window.getComputedStyle(t),f=d?d.getPropertyValue("position"):null;"absolute"!==f&&"relative"!==f&&"fixed"!==f&&(t.style.position="relative");var g=n(t),y=0,m=0,v=!0,b=0,x=function(){if(v){if(0===t.offsetWidth&&0===t.offsetHeight)return void(b||(b=e(function(){b=0,x()})));v=!1}!function(){var e=t.offsetWidth,i=t.offsetHeight;l.style.width=e+10+"px",l.style.height=i+10+"px",s.scrollLeft=e+10,s.scrollTop=i+10,u.scrollLeft=e+10,u.scrollTop=i+10}()};t.resizeSensor.resetSensor=x;var _=function(){p=0,c&&(y=g.width,m=g.height,t.resizedAttached&&t.resizedAttached.call(g))},P=function(){g=n(t),(c=g.width!==y||g.height!==m)&&!p&&(p=e(_)),x()},w=function(t,e,i){t.attachEvent?t.attachEvent("on"+e,i):t.addEventListener(e,i)};w(s,"scroll",P),w(u,"scroll",P),e(x)}}i(t,function(t){s(t,o)}),this.detach=function(e){a.detach(t,e)},this.reset=function(){t.resizeSensor.resetSensor()}};if(a.reset=function(t){i(t,function(t){t.resizeSensor.resetSensor()})},a.detach=function(t,e){i(t,function(t){t&&(t.resizedAttached&&"function"==typeof e&&(t.resizedAttached.remove(e),t.resizedAttached.length())||t.resizeSensor&&(t.contains(t.resizeSensor)&&t.removeChild(t.resizeSensor),delete t.resizeSensor,delete t.resizedAttached))})},"undefined"!=typeof MutationObserver){var o=new MutationObserver(function(t){for(var e in t)if(t.hasOwnProperty(e))for(var i=t[e].addedNodes,n=0;n<i.length;n++)i[n].resizeSensor&&a.reset(i[n])});document.addEventListener("DOMContentLoaded",function(t){o.observe(document.body,{childList:!0,subtree:!0})})}return a})},"Nv8/":function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n={};i.d(n,"System",function(){return r.a}),i.d(n,"system",function(){return r.b}),i.d(n,"BaseObject",function(){return a.a}),i.d(n,"BaseObjectEvents",function(){return a.b}),i.d(n,"Component",function(){return o.a}),i.d(n,"Container",function(){return s.a}),i.d(n,"DataItem",function(){return l.a}),i.d(n,"Sprite",function(){return u.a}),i.d(n,"SpriteEventDispatcher",function(){return h.a}),i.d(n,"SpriteState",function(){return c.a}),i.d(n,"registry",function(){return p.c}),i.d(n,"Registry",function(){return p.a}),i.d(n,"is",function(){return p.b}),i.d(n,"options",function(){return d.a}),i.d(n,"CSVParser",function(){return f.a}),i.d(n,"DataLoader",function(){return g.a}),i.d(n,"dataLoader",function(){return g.b}),i.d(n,"DataParser",function(){return y.a}),i.d(n,"DataSource",function(){return m.a}),i.d(n,"JSONParser",function(){return v.a}),i.d(n,"SVGDefaults",function(){return b.a}),i.d(n,"Button",function(){return x.a}),i.d(n,"Circle",function(){return _.a}),i.d(n,"Ellipse",function(){return P.a}),i.d(n,"Image",function(){return S}),i.d(n,"Label",function(){return C.a}),i.d(n,"Line",function(){return I.a}),i.d(n,"Popup",function(){return k.a}),i.d(n,"Modal",function(){return D.a}),i.d(n,"PointedRectangle",function(){return j.a}),i.d(n,"PointedShape",function(){return V.a}),i.d(n,"Polyarc",function(){return A.a}),i.d(n,"Polygon",function(){return M.a}),i.d(n,"Polyline",function(){return F.a}),i.d(n,"Polyspline",function(){return E.a}),i.d(n,"Preloader",function(){return B}),i.d(n,"Rectangle",function(){return U.a}),i.d(n,"ResizeButton",function(){return W.a}),i.d(n,"RoundedRectangle",function(){return Y.a}),i.d(n,"Scrollbar",function(){return H.a}),i.d(n,"Slider",function(){return z}),i.d(n,"Slice",function(){return N.a}),i.d(n,"TextLink",function(){return X.a}),i.d(n,"Tooltip",function(){return G.a}),i.d(n,"Trapezoid",function(){return K.a}),i.d(n,"Triangle",function(){return q.a}),i.d(n,"WavedCircle",function(){return Z.a}),i.d(n,"WavedLine",function(){return Q.a}),i.d(n,"WavedRectangle",function(){return J.a}),i.d(n,"ZoomOutButton",function(){return $.a}),i.d(n,"PlayButton",function(){return tt}),i.d(n,"Cone",function(){return et.a}),i.d(n,"Rectangle3D",function(){return it.a}),i.d(n,"Slice3D",function(){return nt.a}),i.d(n,"Export",function(){return rt.a}),i.d(n,"ExportMenu",function(){return at.a}),i.d(n,"DateFormatter",function(){return ot.a}),i.d(n,"DurationFormatter",function(){return st.a}),i.d(n,"NumberFormatter",function(){return lt.a}),i.d(n,"TextFormatter",function(){return ut.a}),i.d(n,"getTextFormatter",function(){return ut.b}),i.d(n,"Inertia",function(){return ht.a}),i.d(n,"Interaction",function(){return ct.a}),i.d(n,"getInteraction",function(){return ct.b}),i.d(n,"InteractionKeyboardObject",function(){return pt.a}),i.d(n,"InteractionObject",function(){return dt.a}),i.d(n,"InteractionObjectEventDispatcher",function(){return ft.a}),i.d(n,"MouseCursorStyle",function(){return gt.a}),i.d(n,"AMElement",function(){return yt.a}),i.d(n,"Group",function(){return mt.a}),i.d(n,"Paper",function(){return vt.a}),i.d(n,"Tension",function(){return bt.b}),i.d(n,"Basis",function(){return bt.a}),i.d(n,"SVGContainer",function(){return xt.a}),i.d(n,"ColorModifier",function(){return _t.a}),i.d(n,"LinearGradient",function(){return Pt.a}),i.d(n,"LinearGradientModifier",function(){return wt.a}),i.d(n,"RadialGradientModifier",function(){return Tt}),i.d(n,"LinePattern",function(){return St.a}),i.d(n,"CirclePattern",function(){return Ct.a}),i.d(n,"Pattern",function(){return It.a}),i.d(n,"RadialGradient",function(){return Ot.a}),i.d(n,"RectPattern",function(){return kt.a}),i.d(n,"ColorizeFilter",function(){return jt}),i.d(n,"DesaturateFilter",function(){return Vt.a}),i.d(n,"DropShadowFilter",function(){return At.a}),i.d(n,"BlurFilter",function(){return Mt}),i.d(n,"Filter",function(){return Dt.a}),i.d(n,"FocusFilter",function(){return Ft}),i.d(n,"LightenFilter",function(){return Et.a}),i.d(n,"GlobalAdapter",function(){return Rt.b}),i.d(n,"globalAdapter",function(){return Rt.c}),i.d(n,"Adapter",function(){return Rt.a}),i.d(n,"Animation",function(){return Nt.a}),i.d(n,"animate",function(){return Nt.c}),i.d(n,"nextFrame",function(){return Lt.a}),i.d(n,"readFrame",function(){return Lt.c}),i.d(n,"writeFrame",function(){return Lt.f}),i.d(n,"whenIdle",function(){return Lt.e}),i.d(n,"triggerIdle",function(){return Lt.d}),i.d(n,"Cache",function(){return Bt.a}),i.d(n,"cache",function(){return Bt.b}),i.d(n,"Color",function(){return Ut.a}),i.d(n,"color",function(){return Ut.c}),i.d(n,"isColor",function(){return Ut.d}),i.d(n,"castColor",function(){return Ut.b}),i.d(n,"ColorSet",function(){return Wt.a}),i.d(n,"PatternSet",function(){return Yt.a}),i.d(n,"InterfaceColorSet",function(){return R.a}),i.d(n,"DictionaryDisposer",function(){return Ht.b}),i.d(n,"Dictionary",function(){return Ht.a}),i.d(n,"DictionaryTemplate",function(){return Ht.c}),i.d(n,"Disposer",function(){return zt.b}),i.d(n,"MultiDisposer",function(){return zt.c}),i.d(n,"MutableValueDisposer",function(){return zt.d}),i.d(n,"CounterDisposer",function(){return zt.a}),i.d(n,"StyleRule",function(){return O.c}),i.d(n,"StyleClass",function(){return O.b}),i.d(n,"getElement",function(){return O.q}),i.d(n,"addClass",function(){return O.f}),i.d(n,"removeClass",function(){return O.x}),i.d(n,"blur",function(){return O.h}),i.d(n,"focus",function(){return O.o}),i.d(n,"outerHTML",function(){return O.v}),i.d(n,"isElement",function(){return O.s}),i.d(n,"copyAttributes",function(){return O.j}),i.d(n,"fixPixelPerfect",function(){return O.n}),i.d(n,"ready",function(){return O.w}),i.d(n,"EventDispatcher",function(){return Xt.a}),i.d(n,"TargetedEventDispatcher",function(){return Xt.b}),i.d(n,"ListIterator",function(){return Gt.ListIterator}),i.d(n,"min",function(){return Gt.min}),i.d(n,"max",function(){return Gt.max}),i.d(n,"join",function(){return Gt.join}),i.d(n,"Keyboard",function(){return Kt.a}),i.d(n,"keyboard",function(){return Kt.b}),i.d(n,"Language",function(){return qt.a}),i.d(n,"IndexedIterable",function(){return Zt.a}),i.d(n,"ListGrouper",function(){return Zt.d}),i.d(n,"ListDisposer",function(){return Zt.c}),i.d(n,"List",function(){return Zt.b}),i.d(n,"ListTemplate",function(){return Zt.e}),i.d(n,"Morpher",function(){return Qt.a}),i.d(n,"reverse",function(){return Jt.b}),i.d(n,"or",function(){return Jt.a}),i.d(n,"Percent",function(){return L.a}),i.d(n,"percent",function(){return L.c}),i.d(n,"isPercent",function(){return L.b}),i.d(n,"Plugin",function(){return $t.a}),i.d(n,"Responsive",function(){return te.a}),i.d(n,"ResponsiveBreakpoints",function(){return te.b}),i.d(n,"defaultRules",function(){return te.c}),i.d(n,"OrderedList",function(){return ee.a}),i.d(n,"SortedList",function(){return ee.c}),i.d(n,"OrderedListTemplate",function(){return ee.b}),i.d(n,"SortedListTemplate",function(){return ee.d}),i.d(n,"PX",function(){return ie.f}),i.d(n,"STRING",function(){return ie.g}),i.d(n,"NUMBER",function(){return ie.c}),i.d(n,"DATE",function(){return ie.a}),i.d(n,"DURATION",function(){return ie.b}),i.d(n,"PLACEHOLDER",function(){return ie.d}),i.d(n,"PLACEHOLDER2",function(){return ie.e}),i.d(n,"isNaN",function(){return T.isNaN}),i.d(n,"checkString",function(){return T.checkString}),i.d(n,"checkBoolean",function(){return T.checkBoolean}),i.d(n,"checkNumber",function(){return T.checkNumber}),i.d(n,"checkObject",function(){return T.checkObject}),i.d(n,"castString",function(){return T.castString}),i.d(n,"castNumber",function(){return T.castNumber}),i.d(n,"isString",function(){return T.isString}),i.d(n,"isNumber",function(){return T.isNumber}),i.d(n,"isObject",function(){return T.isObject}),i.d(n,"isArray",function(){return T.isArray}),i.d(n,"Validatable",function(){return ne.a}),i.d(n,"path",function(){return re}),i.d(n,"colors",function(){return ae}),i.d(n,"ease",function(){return oe}),i.d(n,"math",function(){return se}),i.d(n,"array",function(){return le}),i.d(n,"number",function(){return ue}),i.d(n,"object",function(){return he}),i.d(n,"string",function(){return ce}),i.d(n,"time",function(){return pe}),i.d(n,"utils",function(){return de}),i.d(n,"iter",function(){return Gt}),i.d(n,"type",function(){return T}),i.d(n,"create",function(){return Pe}),i.d(n,"createFromConfig",function(){return we}),i.d(n,"disposeAllCharts",function(){return me}),i.d(n,"useTheme",function(){return Oe}),i.d(n,"unuseTheme",function(){return Te}),i.d(n,"unuseAllThemes",function(){return Se}),i.d(n,"addLicense",function(){return Ce});var r=i("Rpw0"),a=i("Tjl+"),o=i("Y9w3"),s=i("C6dT"),l=i("A6AV"),u=i("Vs7R"),h=i("kQxV"),c=i("ux7t"),p=i("aCit"),d=i("Q4nc"),f=i("4DCw"),g=i("Mpxm"),y=i("mIpt"),m=i("EjGA"),v=i("ZhuL"),b=i("hpNl"),x=i("aGXA"),_=i("FzPm"),P=i("Ybtf"),w=i("m4/l"),O=i("58Sn"),T=i("Mtpk"),S=function(t){function e(){var e=t.call(this)||this;return e.className="Image",e.element=e.paper.add("image"),e.applyTheme(),e.width=50,e.height=50,e}return Object(w.c)(e,t),e.prototype.draw=function(){if(t.prototype.draw.call(this),this.href){var e=this.innerWidth,i=this.innerHeight;T.isNumber(this.widthRatio)&&(e=i*this.widthRatio,this.width=e),T.isNumber(this.heightRatio)&&(i=e*this.heightRatio,this.height=i),this.element.attr({width:e,height:i}),this.element.attrNS(O.d,"xlink:href",this.href)}},Object.defineProperty(e.prototype,"href",{get:function(){return this.getPropertyValue("href")},set:function(t){this.setPropertyValue("href",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"widthRatio",{get:function(){return this.getPropertyValue("widthRatio")},set:function(t){this.setPropertyValue("widthRatio",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"heightRatio",{get:function(){return this.getPropertyValue("heightRatio")},set:function(t){this.setPropertyValue("heightRatio",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bbox",{get:function(){return{x:0,y:0,width:this.pixelWidth,height:this.pixelHeight}},enumerable:!0,configurable:!0}),e}(u.a);p.c.registeredClasses.Image=S;var C=i("p9TX"),I=i("PTiM"),k=i("UsNi"),D=i("W8Sc"),j=i("MZQ8"),V=i("1qam"),A=i("MXvJ"),M=i("R6wv"),F=i("jfaP"),E=i("xgTw"),R=i("MIZb"),N=i("Inf5"),L=i("tjMS"),B=function(t){function e(){var e=t.call(this)||this;e.className="Preloader",e.width=Object(L.c)(100),e.height=Object(L.c)(100);var i=new R.a,n=e.createChild(s.a);n.shouldClone=!1;var r=n.createChild(N.a);r.shouldClone=!1,r.radius=53,r.arc=360,r.fill=i.getFor("fill"),r.fillOpacity=.8,r.innerRadius=42,r.isMeasured=!1,e.backgroundSlice=r;var a=n.createChild(N.a);a.shouldClone=!1,a.radius=50,a.innerRadius=45,a.fill=i.getFor("alternativeBackground"),a.fillOpacity=.2,a.isMeasured=!1,e.progressSlice=a;var o=n.createChild(C.a);return o.shouldClone=!1,o.horizontalCenter="middle",o.verticalCenter="middle",o.isMeasured=!1,o.fill=i.getFor("text"),o.align="center",o.valign="middle",o.fillOpacity=.4,e.label=o,e.background.opacity=1,e.background.fill=i.getFor("background"),e.contentAlign="center",e.contentValign="middle",e.delay=300,e.states.create("hidden").properties.opacity=0,e.visible=!1,e.hide(0),e.__disabled=!0,e._disposers.push(e.backgroundSlice),e._disposers.push(e.progressSlice),e._disposers.push(e.label),e._disposers.push(n),e}return Object(w.c)(e,t),Object.defineProperty(e.prototype,"progress",{get:function(){return this.getPropertyValue("progress")},set:function(t){var e=this;this.__disabled=!1,this.validateLayout(),this.setPropertyValue("progress",t),this.progressSlice.arc=360*t,this.label&&(this.label.text=Math.round(100*t)+"%"),t>=1?(this._started&&(this._started=void 0),p.c.events.once("enterframe",function(){var t=e.hide();t&&!t.isFinished()?t.events.once("animationended",function(){e.__disabled=!0}):e.__disabled=!0}),this.interactionsEnabled=!1,this.setPropertyValue("progress",0)):t>0&&(this.delay?this._started?this._started+this.delay<=(new Date).getTime()&&(this.__disabled=!1,this.show(),this.interactionsEnabled=!0):this._started=(new Date).getTime():(this.__disabled=!1,this.show(),this.interactionsEnabled=!0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"delay",{get:function(){return this.getPropertyValue("delay")},set:function(t){this.setPropertyValue("delay",t)},enumerable:!0,configurable:!0}),e}(s.a);p.c.registeredClasses.Preloader=B;var U=i("GtDR"),W=i("xIv9"),Y=i("CnhP"),H=i("ISWh"),z=function(t){function e(){var e=t.call(this)||this;return e.className="Slider",e.thumb.opacity=0,e.thumb.interactionsEnabled=!1,e.endGrip.opacity=0,e.endGrip.interactionsEnabled=!1,e.startGrip.events.on("drag",function(){e.endGrip.x=e.startGrip.x,e.endGrip.y=e.startGrip.y}),e.applyTheme(),e}return Object(w.c)(e,t),Object.defineProperty(e.prototype,"__end",{get:function(){return this._start},set:function(t){},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"end",{get:function(){return this._start},set:function(t){},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"start",{get:function(){return this._start},set:function(t){this._isBusy||(this.__start=t)},enumerable:!0,configurable:!0}),e}(H.a);p.c.registeredClasses.Slider=z;var X=i("Trvg"),G=i("cxKZ"),K=i("DziZ"),q=i("Rnbi"),Z=i("Vk33"),Q=i("ND2/"),J=i("w4m0"),$=i("BEgH"),tt=function(t){function e(){var e=t.call(this)||this;e.className="PlayButton",e.padding(12,12,12,12),e.showSystemTooltip=!0;var i=new R.a,n=e.background;n.cornerRadius(25,25,25,25),n.fill=i.getFor("primaryButton"),n.stroke=i.getFor("primaryButtonStroke"),n.strokeOpacity=0,n.states.getKey("hover").properties.fill=i.getFor("primaryButtonHover"),n.states.getKey("down").properties.fill=i.getFor("primaryButtonActive");var r=new q.a;r.direction="right",r.width=9,r.height=11,r.marginLeft=1,r.marginRight=1,r.horizontalCenter="middle",r.verticalCenter="middle",r.stroke=i.getFor("primaryButtonText"),r.fill=r.stroke,e.icon=r;var a=new Y.a;a.width=11,a.height=11,a.horizontalCenter="middle",a.verticalCenter="middle",a.cornerRadius(0,0,0,0),a.stroke=i.getFor("primaryButtonText"),a.fill=r.stroke,e.togglable=!0;var o=e.states.create("active");return o.transitionDuration=0,o.properties.icon=a,e.defaultState.transitionDuration=0,e.applyTheme(),e}return Object(w.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),T.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Play"))},e}(x.a);p.c.registeredClasses.PlayButton=tt;var et=i("ncT3"),it=i("Mr4Y"),nt=i("nPzZ"),rt=i("GAaQ"),at=i("qJno"),ot=i("7XB+"),st=i("akNo"),lt=i("CTEm"),ut=i("MipW"),ht=i("0PyG"),ct=i("zhwk"),pt=i("Oe1l"),dt=i("vbOF"),ft=i("YotE"),gt=i("qCRI"),yt=i("pzs1"),mt=i("cOH5"),vt=i("P7v+"),bt=i("aFzC"),xt=i("HDh7"),_t=i("DA7/"),Pt=i("sxA1"),wt=i("/e9j"),Ot=i("CuFa"),Tt=function(t){function e(){var e=t.call(this)||this;return e.className="RadialGradientModifier",e.gradient=new Ot.a,e.applyTheme(),e}return Object(w.c)(e,t),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.gradient=e.gradient.clone()},e}(i("3/51").a);p.c.registeredClasses.RadialGradientModifier=Tt;var St=i("WODi"),Ct=i("TZWN"),It=i("ZLF9"),kt=i("2gKx"),Dt=i("ohjg"),jt=function(t){function e(){var e=t.call(this)||this;return e.className="ColorizeFilter",e.feColorMatrix=e.paper.add("feColorMatrix"),e.feColorMatrix.attr({type:"matrix"}),e.filterPrimitives.push(e.feColorMatrix),e.intensity=1,e.applyTheme(),e}return Object(w.c)(e,t),e.prototype.applyFilter=function(){var t,e,i,n=this.intensity,r=1-n,a=this.color;a&&a.rgb?(t=a.rgb.r/255*n,e=a.rgb.g/255*n,i=a.rgb.b/255*n):(t=0,e=0,i=0),this.feColorMatrix.attr({values:r+" 0 0 0 "+t+" 0 "+r+" 0 0 "+e+" 0 0 "+r+" 0 "+i+" 0 0 0 1 0"})},Object.defineProperty(e.prototype,"color",{get:function(){return this.properties.color},set:function(t){this.properties.color=t,this.applyFilter()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"intensity",{get:function(){return this.properties.intensity},set:function(t){this.properties.intensity=t,this.applyFilter()},enumerable:!0,configurable:!0}),e}(Dt.a);p.c.registeredClasses.ColorizeFilter=jt;var Vt=i("85D4"),At=i("VAFc"),Mt=function(t){function e(){var e=t.call(this)||this;return e.className="BlurFilter",e.feGaussianBlur=e.paper.add("feGaussianBlur"),e.feGaussianBlur.attr({result:"blurOut",in:"SourceGraphic"}),e.filterPrimitives.push(e.feGaussianBlur),e.width=200,e.height=200,e.blur=1.5,e.applyTheme(),e}return Object(w.c)(e,t),Object.defineProperty(e.prototype,"blur",{get:function(){return this.properties.blur},set:function(t){this.properties.blur=t,this.feGaussianBlur.attr({stdDeviation:t/this.scale})},enumerable:!0,configurable:!0}),e}(Dt.a);p.c.registeredClasses.BlurFilter=Mt;var Ft=function(t){function e(){var e=t.call(this)||this;return e.className="FocusFilter",e.feFlood=e.paper.add("feFlood"),e.feFlood.attr({"flood-color":(new R.a).getFor("primaryButtonHover"),result:"base"}),e.filterPrimitives.push(e.feFlood),e.feMorphology=e.paper.add("feMorphology"),e.feMorphology.attr({result:"bigger",in:"SourceGraphic",operator:"dilate",radius:"2"}),e.filterPrimitives.push(e.feMorphology),e.feColorMatrix=e.paper.add("feColorMatrix"),e.feColorMatrix.attr({result:"mask",in:"bigger",type:"matrix",values:"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"}),e.filterPrimitives.push(e.feColorMatrix),e.feComposite=e.paper.add("feComposite"),e.feComposite.attr({result:"drop",in:"base",in2:"mask",operator:"in"}),e.filterPrimitives.push(e.feComposite),e.feBlend=e.paper.add("feBlend"),e.feBlend.attr({in:"SourceGraphic",in2:"drop",mode:"normal"}),e.filterPrimitives.push(e.feBlend),e.width=130,e.height=130,e.applyTheme(),e}return Object(w.c)(e,t),Object.defineProperty(e.prototype,"stroke",{get:function(){return this.properties.stroke},set:function(t){this.properties.stroke=t,this.feFlood.attr({"flood-color":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeWidth",{get:function(){return this.properties.strokeWidth},set:function(t){this.properties.strokeWidth=t,this.feMorphology.attr({radius:t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"opacity",{get:function(){return this.properties.opacity},set:function(t){this.properties.opacity=t,this.feColorMatrix.attr({values:"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "+t+" 0"})},enumerable:!0,configurable:!0}),e.prototype.setSprite=function(e){this._sprite&&this._sprite!=e&&this._sprite.group.removeStyle("outline"),e.group.addStyle({outline:"none"}),t.prototype.setSprite.call(this,e)},e}(Dt.a),Et=i("C84C"),Rt=i("x79X"),Nt=i("1yyj"),Lt=i("/9XX"),Bt=i("eCqC"),Ut=i("8ZqG"),Wt=i("DHte"),Yt=i("W0E6"),Ht=i("+qIf"),zt=i("hD5A"),Xt=i("o0Lc"),Gt=i("Wglt"),Kt=i("WYhe"),qt=i("P/bD"),Zt=i("vMqJ"),Qt=i("oC3T"),Jt=i("MlsF"),$t=i("Iz1H"),te=i("TGuK"),ee=i("VGgz"),ie=i("ScGY"),ne=i("/IEW"),re=i("hGwe"),ae=i("hxI2"),oe=i("0FpR"),se=i("Gg2j"),le=i("hJ5i"),ue=i("3Cxr"),he=i("Qkdp"),ce=i("wUYf"),pe=i("L91H"),de=i("v9UT"),fe=function(t){function e(){var e=t.call(this)||this;e.className="AmChartsLogo",e.valign="bottom";var i=.3;e.opacity=.3,e.defaultState.properties.opacity=.4,e.url="https://www.amcharts.com/",e.urlTarget="_blank",e.showSystemTooltip=!0,e.readerTitle="Chart created using amCharts library",e.width=66,e.height=21,e.background.opacity=0;var n=Object(Ut.c)("#474758");"#ffffff"==(new R.a).getFor("background").alternative.hex&&(n=Object(Ut.c)("#ffffff"));var r=new Pt.a;r.addColor(n),r.addColor(n,1,.75),r.addColor(Object(Ut.c)("#3cabff"),1,.755),r.rotation=-10;var a=r,o=e.createChild(E.a);o.shouldClone=!1,o.isMeasured=!1,o.segments=[[{x:15,y:15},{x:27,y:15},{x:36,y:6},{x:40.5,y:10.5},{x:45,y:6},{x:54,y:15},{x:60,y:15}]],o.strokeWidth=6*i,o.tensionX=.8,o.tensionY=1,o.stroke=Object(Ut.c)("#3cabff");var s=e.createChild(E.a);s.shouldClone=!1,s.isMeasured=!1,s.segments=[[{x:6,y:15},{x:15,y:15},{x:27,y:12*i},{x:39.9,y:15},{x:51,y:15},{x:60,y:15}]],s.strokeWidth=6*i,s.tensionX=.75,s.tensionY=1,s.stroke=a,e._disposers.push(s);var l=new Vt.a;e.filters.push(l);var u=new Vt.a;u.saturation=1;var h=e.states.create("hover");return h.properties.opacity=1,h.filters.push(u),e.applyTheme(),e}return Object(w.c)(e,t),e}(s.a),ge=i("pjXm");function ye(t,e){var i=O.q(t);if(i){i.innerHTML="";var n=new xt.a(i),a=new vt.a(n.SVGContainer,"svg-"+(xt.b.length-1)),o=new s.a;o.htmlContainer=i,o.svgContainer=n,o.width=Object(L.c)(100),o.height=Object(L.c)(100),o.background.fillOpacity=0,o.paper=a,a.append(o.group),o.relativeWidth=1,o.relativeHeight=1,n.container=o;var l=o.createChild(e);l.topParent=o;var u=l.uid;p.c.invalidSprites[u]=[],p.c.invalidDatas[u]=[],p.c.invalidPositions[u]=[],p.c.invalidLayouts[u]=[],o.baseId=u,l.isBaseSprite=!0,l.focusFilter=new Ft,p.c.baseSprites.push(l),p.c.baseSpritesByUid[u]=l,l.maskRectangle={x:0,y:0,width:Math.max(n.width,0),height:Math.max(n.height,0)},o.events.on("maxsizechanged",function(t){0!=t.previousWidth&&0!=t.previousHeight||o.deepInvalidate(),l.maskRectangle&&(l.maskRectangle={x:0,y:0,width:Math.max(n.width,0),height:Math.max(n.height,0)})});var h=null,c=function(){l.isDisposed()?h=null:null==O.r(l.dom)?(ge.b("Chart was not disposed",l.uid),h=null):h=window.setTimeout(c,1e3)};c(),l.addDisposer(new zt.b(function(){null!==h&&clearTimeout(h),le.remove(p.c.baseSprites,l),p.c.baseSpritesByUid[l.uid]=void 0})),l.addDisposer(o);var f=o.createChild(s.a);f.topParent=o,f.width=Object(L.c)(100),f.height=Object(L.c)(100),f.isMeasured=!1,o.tooltipContainer=f,l.tooltip=new G.a,l.tooltip.hide(0),l.tooltip.setBounds({x:0,y:0,width:f.maxWidth,height:f.maxHeight}),f.events.on("maxsizechanged",function(){T.getValue(l.tooltip).setBounds({x:0,y:0,width:f.maxWidth,height:f.maxHeight})},void 0,!1);var g=new B;if(g.events.on("inited",function(){g.__disabled=!0},void 0,!1),o.preloader=g,l instanceof s.a&&!l.hasLicense()){var y=f.createChild(fe);f.events.on("maxsizechanged",function(t){f.maxWidth<=100||f.maxHeight<=50?y.hide():(y.isHidden||y.isHiding)&&y.show()},void 0,!1),l.logo=y,y.align="left",y.valign="bottom"}if(de.used(l.numberFormatter),o.isStandaloneInstance=!0,d.a.onlyShowOnViewport)if(O.t(i,d.a.viewportTarget))d.a.queue&&ve(l);else{l.__disabled=!0,l.tooltipContainer.__disabled=!0;var m=[O.g(window,"DOMContentLoaded",function(){xe(l)}),O.g(window,"load",function(){xe(l)}),O.g(window,"resize",function(){xe(l)}),O.g(window,"scroll",function(){xe(l)})];d.a.viewportTarget&&(m.push(O.g(d.a.viewportTarget,"resize",function(){xe(l)})),m.push(O.g(d.a.viewportTarget,"scroll",function(){xe(l)})));var v=new zt.c(m);l.addDisposer(v),l.vpDisposer=v}else d.a.queue&&ve(l);return l}throw r.b.log("html container not found"),new Error("html container not found")}function me(){for(;0!==p.c.baseSprites.length;)p.c.baseSprites.pop().dispose()}function ve(t){-1==p.c.queue.indexOf(t)&&(t.__disabled=!0,t.tooltipContainer.__disabled=!0,t.events.disableType("appeared"),0==p.c.queue.length&&_e(t),t.addDisposer(new zt.b(function(){be(t)})),p.c.queue.push(t))}function be(t){var e=p.c.queue.indexOf(t);if(e>=0){p.c.queue.splice(p.c.queue.indexOf(t),1);var i=p.c.queue[e];i&&_e(i)}}function xe(t){t.__disabled&&O.t(t.htmlContainer,d.a.viewportTarget)&&(t.vpDisposer&&t.vpDisposer.dispose(),ve(t))}function _e(t){t.__disabled=!1,t.tooltipContainer.__disabled=!1,t.events.enableType("appeared"),t.showOnInit&&t.events.on("appeared",function(){be(t)}),t.vpDisposer&&t.vpDisposer.dispose(),t instanceof o.a?(t.invalidateData(),t.reinit(),t.events.once("datavalidated",function(){t.showOnInit?t.appear():be(t)})):t.showOnInit?t.appear():be(t)}function Pe(t,e){var i;T.isString(e)&&(T.hasValue(p.c.registeredClasses[e])?e=p.c.registeredClasses[e]:(e=p.c.registeredClasses.Container,i=new Error("Class ["+e+"] is not loaded.")));var n=ye(t,e);return i&&n.raiseCriticalError(i),n}function we(t,e,i){var n,r;T.hasValue(i)||(i=t.type,delete t.type),T.hasValue(e)||(e=t.container,delete t.container),T.isString(i)&&T.hasValue(p.c.registeredClasses[i])?n=p.c.registeredClasses[i]:"function"!=typeof i?(n=s.a,r=new Error("Class ["+i+"] is not loaded.")):n=i;var a=ye(e,n);return r?a.raiseCriticalError(r):a.config=t,a}function Oe(t){-1===p.c.themes.indexOf(t)&&p.c.themes.push(t)}function Te(t){le.remove(p.c.themes,t)}function Se(){p.c.themes=[]}function Ce(t){d.a.licenses.push(t)}window.am4core=n,i.p=function(t){return/(.*\/)[^\/]*$/.exec(t)[1]}(function(){if(document.currentScript)return document.currentScript;var t=document.getElementsByTagName("script");return t[t.length-1]}().src)},OMnz:function(t,e,i){var n=i("z3p0"),r=Date.prototype,a=r.toString,o=r.getTime;new Date(NaN)+""!="Invalid Date"&&n(r,"toString",function(){var t=o.call(this);return t==t?a.call(this):"Invalid Date"})},ORGY:function(t,e,i){i("6WsA")("replace")},OVUc:function(t,e,i){"use strict";e.a=function(t,e,i){return new Promise(function(r,a){var o=n.hasValue(i)&&"blob"==i.responseType,s=new XMLHttpRequest;if(s.onload=function(){if(200===s.status){var t,i=void 0;if(o)return void function(t){return new Promise(function(e,i){var n=new FileReader;n.onload=function(t){e(n.result)},n.onerror=function(t){i(t)},n.readAsText(t)})}(t=s.response).then(function(i){var n={xhr:s,error:!1,response:i,blob:t,type:s.getResponseHeader("Content-Type"),target:e};r(n)});i=s.responseText||s.response;var n={xhr:s,error:!1,response:i,blob:t,type:s.getResponseHeader("Content-Type"),target:e};r(n)}else a({xhr:s,error:!0,type:s.getResponseHeader("Content-Type"),target:e})},s.onerror=function(){a({xhr:s,error:!0,type:s.getResponseHeader("Content-Type"),target:e})},s.open("GET",t,!0),i&&i.withCredentials&&(s.withCredentials=!0),n.hasValue(i)){if(n.hasValue(i.requestHeaders))for(var l=0;l<i.requestHeaders.length;l++){var u=i.requestHeaders[l];s.setRequestHeader(u.key,u.value)}n.hasValue(i.responseType)&&(s.responseType=i.responseType)}s.send()})};var n=i("Mtpk")},OXm9:function(t,e,i){"use strict";i.d(e,"a",function(){return g});var n=i("m4/l"),r=i("Meme"),a=i("ND2/"),o=i("w4m0"),s=i("aCit"),l=i("tjMS"),u=i("Gg2j"),h=i("hGwe"),c=i("v9UT"),p=i("Mtpk"),d=i("TGuK"),f=i("5xph"),g=function(t){function e(){var e=t.call(this)||this;return e.className="AxisRendererY",e.minGridDistance=40,e.opposite=!1,e.height=Object(l.c)(100),e.labels.template.verticalCenter="middle",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.setAxis=function(e){t.prototype.setAxis.call(this,e),e.layout="horizontal"},e.prototype.updateGridContainer=function(){var t=this.axis;if(t){var e=this.gridContainer;e.y=t.pixelY,e.height=t.axisLength}},e.prototype.toAxisPosition=function(t){var e=this.axis;if(e){var i=1-t,n=e.relativePositionSprite,r=e.pixelY;if(n?r=c.spritePointToSprite({x:0,y:this.pixelY},this.parent,n).y:n=e.parent,n)return 1-(i-r/n.innerHeight)/(e.axisLength/n.innerHeight)}return t},e.prototype.processRenderer=function(){t.prototype.processRenderer.call(this);var e=this.axis;if(e){var i=e.title;i.valign="middle",e.height instanceof l.a||(e.height=Object(l.c)(100)),this.opposite?(i.rotation=90,this.line.toBack(),i.toFront()):(i.rotation=-90,i.toBack(),this.line.toFront())}},e.prototype.updateTooltip=function(){if(this.axis){var t=0,e=2e3,i=this.axisLength;this.opposite?this.inside&&(t=-2e3,e=2e3):this.inside||(t=-2e3,e=2e3),this.axis.updateTooltip("horizontal",{x:t,y:0,width:e,height:i})}},Object.defineProperty(e.prototype,"axisLength",{get:function(){var t=this.axis;return t.measuredHeight-t.pixelPaddingTop-t.pixelPaddingBottom||0},enumerable:!0,configurable:!0}),e.prototype.positionToPoint=function(t,e){return{x:0,y:this.positionToCoordinate(t)}},e.prototype.pointToPosition=function(t){return this.coordinateToPosition(t.y,t.x)},e.prototype.coordinateToPosition=function(t,e){var i,n=this.axis,r=n.axisFullLength;return i=n.renderer.inversed?1-n.start-t/r:t/r+(1-n.end),u.round(i,5)},e.prototype.getPositionRangePath=function(t,e){var i=u.fitToRange(this.positionToCoordinate(t),0,this.axisLength),n=u.fitToRange(this.positionToCoordinate(e),0,this.axisLength),r=Math.abs(n-i),a=this.getWidth(),o=Math.min(i,n);return h.rectToPath({x:0,y:o,width:a,height:r},!0)},e.prototype.updateGridElement=function(t,e,i){e+=(i-e)*t.location;var n=this.positionToPoint(e);t.path=h.moveTo({x:0,y:0})+h.lineTo({x:this.getWidth(),y:0}),this.positionItem(t,n),this.toggleVisibility(t,e,0,1)},e.prototype.updateTickElement=function(t,e,i){e+=(i-e)*t.location;var n=this.positionToPoint(e),r=t.length;try{c.used(this.axis.title.measuredWidth)}catch(t){}n.x=c.spritePointToSprite({x:this.line.pixelX,y:0},this.line.parent,this.gridContainer).x,this.opposite?r*=t.inside?-1:1:r*=t.inside?1:-1,t.path=h.moveTo({x:0,y:0})+h.lineTo({x:r,y:0}),this.positionItem(t,n),this.toggleVisibility(t,e,0,1)},e.prototype.updateAxisLine=function(){this.line.path=h.moveTo({x:0,y:0})+h.lineTo({x:0,y:this.axisLength})},e.prototype.updateBaseGridElement=function(){t.prototype.updateBaseGridElement.call(this);var e=this.axis,i=this.getWidth(),n=this.axisLength,r=e.basePoint.y,a=this.baseGrid;if(r<-.2||r>n+.2)a.hide(0);else{var o=c.spritePointToSprite({x:0,y:0},this.gridContainer,a.parent).x;a.path=h.moveTo({x:0,y:0})+h.lineTo({x:i,y:0}),a.moveTo({x:o,y:r}),a.show(0)}},e.prototype.updateLabelElement=function(t,e,i,n){p.hasValue(n)||(n=t.location),e+=(i-e)*n,t.isMeasured=!t.inside;var r,a=this.positionToPoint(e),o=0,s=this.gridContainer.maxWidth;this.opposite?(t.inside?(r="right","left"==t.align&&(o=-s,r="left"),"center"==t.align&&(o=-s/2,r="middle")):r="left",a.x=0+o):(t.inside?(r="left","right"==t.align&&(o=s,r="right"),"center"==t.align&&(o=s/2,r="middle")):r="right",a.x=this.measuredWidth+o),0==t.rotation&&(t.horizontalCenter=r),this.positionItem(t,a),this.toggleVisibility(t,e,this.minLabelPosition,this.maxLabelPosition)},e.prototype.updateBreakElement=function(e){t.prototype.updateBreakElement.call(this,e);var i=e.startLine,n=e.endLine,r=e.fillShape,a=e.startPoint,o=e.endPoint,s=e.pixelMarginLeft,l=this.getWidth()-e.pixelMarginLeft-e.pixelMarginRight;a.y=u.fitToRange(a.y,-1,this.axisLength+1),o.y=u.fitToRange(o.y,-1,this.axisLength+1),a.y==o.y&&(a.y<0||a.y>this.axisLength)?e.fillShape.__disabled=!0:e.fillShape.__disabled=!1;var h=Math.abs(l-s);i.x=s,i.height=0,i.width=h,n.x=s,n.height=0,n.width=h,r.width=h,r.height=Math.abs(o.y-a.y),r.x=s,r.y=o.y},e.prototype.createBreakSprites=function(t){t.startLine=new a.a,t.endLine=new a.a;var e=new o.a;e.setWavedSides(!0,!1,!0,!1),t.fillShape=e},e.prototype.positionToCoordinate=function(t){var e,i=this.axis,n=i.axisFullLength;return e=i.renderer.inversed?(t-i.start)*n:(i.end-t)*n,u.round(e,1)},e.prototype.updateBullet=function(t,e,i){var n=.5;t instanceof f.a&&(n=t.location),e+=(i-e)*n;var r=this.positionToPoint(e);r.x=c.spritePointToSprite({x:this.line.pixelX,y:0},this.line.parent,this.gridContainer).x,this.positionItem(t,r),this.toggleVisibility(t,e,0,1)},e}(r.a);s.c.registeredClasses.AxisRendererY=g,d.c.push({relevant:d.b.widthS,state:function(t,e){if(t instanceof g){var i=t.states.create(e);return i.properties.inside=!0,i.properties.maxLabelPosition=.9,i.properties.minLabelPosition=.1,i}return null}}),d.c.push({relevant:d.b.widthXS,state:function(t,e){if(t instanceof g){var i=t.states.create(e);return i.properties.disabled=!0,i}return null}})},Oe1l:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("zhwk"),r=i("Rpw0"),a=i("hJ5i"),o=function(){function t(t,e){this._disposed=!1,this.directionX=0,this.directionY=0,this.interaction=t,this.keyboardEvent=e,this._startedOn=(new Date).getTime(),Object(n.b)().processDragStart(t),r.b.animations.push(this),this.update()}return t.prototype.update=function(){var t=this.interaction,e=Object(n.b)().getKeyboardOption(t,"speed"),i=Object(n.b)().getKeyboardOption(t,"accelleration"),r=Object(n.b)().getKeyboardOption(t,"accellerationDelay"),a={x:0,y:0};this.keyboardEvent.shiftKey?(e*=.5,i=1):this.keyboardEvent.ctrlKey&&(e*=2);var o=(new Date).getTime()-this._startedOn,s=o-r;if(i>0&&s>0){var l=o/r;o=r,a.x+=this.directionX*(e*i*l*s),a.y+=this.directionY*(e*i*l*s)}a.x+=this.directionX*(e*o),a.y+=this.directionY*(e*o),Object(n.b)().handleTransformMove(t,a,{x:0,y:0},this.keyboardEvent,!0,!1)},t.prototype.isDisposed=function(){return this._disposed},t.prototype.dispose=function(){this._disposed||(Object(n.b)().processDragStop(this.interaction),a.remove(r.b.animations,this))},t}()},OhoW:function(t,e,i){"use strict";var n=i("NZ9V"),r=i("AzDz"),a=i("3weC"),o=i("swFJ"),s=i("Nfo5"),l=i("L0in"),u=i("tHyI"),h=i("Xw1K"),c=i("4Wbs"),p=i("6aQQ"),d=[].push,f=Math.min,g=!p(function(){return!RegExp(4294967295,"y")});n("split",2,function(t,e,i){var n;return n="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,i){var n=String(o(this)),a=void 0===i?4294967295:i>>>0;if(0===a)return[];if(void 0===t)return[n];if(!r(t))return e.call(n,t,a);for(var s,l,u,h=[],p=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),f=0,g=new RegExp(t.source,p+"g");(s=c.call(g,n))&&!((l=g.lastIndex)>f&&(h.push(n.slice(f,s.index)),s.length>1&&s.index<n.length&&d.apply(h,s.slice(1)),u=s[0].length,f=l,h.length>=a));)g.lastIndex===s.index&&g.lastIndex++;return f===n.length?!u&&g.test("")||h.push(""):h.push(n.slice(f)),h.length>a?h.slice(0,a):h}:"0".split(void 0,0).length?function(t,i){return void 0===t&&0===i?[]:e.call(this,t,i)}:e,[function(e,i){var r=o(this),a=void 0==e?void 0:e[t];return void 0!==a?a.call(e,r,i):n.call(String(r),e,i)},function(t,r){var o=i(n,t,this,r,n!==e);if(o.done)return o.value;var c=a(t),p=String(this),d=s(c,RegExp),y=c.unicode,m=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(g?"y":"g"),v=new d(g?c:"^(?:"+c.source+")",m),b=void 0===r?4294967295:r>>>0;if(0===b)return[];if(0===p.length)return null===h(v,p)?[p]:[];for(var x=0,_=0,P=[];_<p.length;){v.lastIndex=g?_:0;var w,O=h(v,g?p:p.slice(_));if(null===O||(w=f(u(v.lastIndex+(g?0:_)),p.length))===x)_=l(p,_,y);else{if(P.push(p.slice(x,_)),P.length===b)return P;for(var T=1;T<=O.length-1;T++)if(P.push(O[T]),P.length===b)return P;_=x=w}}return P.push(p.slice(x)),P}]},!g)},Ox5T:function(t,e,i){var n=i("JZRr"),r=i("7X7h"),a=i("fYap"),o=i("QKtu"),s=a("IE_PROTO"),l=Object.prototype;t.exports=o?Object.getPrototypeOf:function(t){return t=r(t),n(t,s)?t[s]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?l:null}},"Oz+B":function(t,e,i){"use strict";var n=i("0sYB"),r=i("6aQQ"),a=i("mtbW"),o=i("3weC"),s=i("Y8n3"),l=i("tHyI"),u=i("Nfo5"),h=a.ArrayBuffer,c=a.DataView,p=h.prototype.slice;n({target:"ArrayBuffer",proto:!0,unsafe:!0,forced:r(function(){return!new h(2).slice(1,void 0).byteLength})},{slice:function(t,e){if(void 0!==p&&void 0===e)return p.call(o(this),t);for(var i=o(this).byteLength,n=s(t,i),r=s(void 0===e?i:e,i),a=new(u(this,h))(l(r-n)),d=new c(this),f=new c(a),g=0;n<r;)f.setUint8(g++,d.getUint8(n++));return a}})},"P+4d":function(t,e,i){var n=i("0sYB"),r=i("CqLV");n({target:"Number",stat:!0,forced:Number.parseFloat!=r},{parseFloat:r})},"P/bD":function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("Tjl+"),a=i("x79X"),o=i("hJ5i"),s=i("Mtpk"),l=i("JNIx"),u=i("Q4nc"),h=function(t){function e(){var e=t.call(this)||this;return e.adapter=new a.a(e),e._locale=l.a,e._defaultLocale=l.a,e.className="Language",s.hasValue(u.a.defaultLocale)&&(e.locale=u.a.defaultLocale),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.getLocale=function(t){return null==t&&(t=this._locale),this.adapter.apply("locale",{locale:t}).locale},e.prototype.translate=function(t,e){for(var i=[],r=2;r<arguments.length;r++)i[r-2]=arguments[r];e=this.getLocale(e);var a=t,o=this.getTranslations(e)[t];if(null===o)o="";else if(s.hasValue(o))o&&(a=o);else if(e!==this._defaultLocale)return this.translate.apply(this,Object(n.f)([t,this._defaultLocale],i));if(i.length)for(var l=i.length,u=0;u<l;++u)a=a.split("%"+(u+1)).join(i[u]);return this.adapter.apply("translate",{translation:a,locale:e}).translation},e.prototype.translateAny=function(t,e){for(var i=[],n=2;n<arguments.length;n++)i[n-2]=arguments[n];return this.translate(t,e)},e.prototype.translateEmpty=function(t,e){for(var i=[],r=2;r<arguments.length;r++)i[r-2]=arguments[r];var a=this.translate.apply(this,Object(n.f)([t,e],i));return a==t?"":a},e.prototype.translateFunc=function(t,e){e=this.getLocale(e);var i=this.getTranslations(e)[t];return null!=i?i:e!==this._defaultLocale?this.translateFunc(t,this._defaultLocale):function(){return""}},e.prototype.translateAll=function(t,e){var i=this;return this.isDefault()?t:o.map(t,function(t){return i.translate(t,e)})},e.prototype.isDefault=function(){return this._defaultLocale===this._locale},Object.defineProperty(e.prototype,"locale",{get:function(){return this._locale},set:function(t){if(this._locale!=t&&(this._locale=t,this.events.isEnabled("localechanged"))){var e={type:"localechanged",locale:t,target:this};this.events.dispatchImmediately("localechanged",e)}},enumerable:!0,configurable:!0}),e.prototype.getTranslations=function(t){return this.adapter.apply("translations",{translations:t,locale:t}).translations},e}(r.b)},"P7v+":function(t,e,i){"use strict";i.d(e,"a",function(){return s}),e.b=function(){if(null===l){var t=document.createElement("div");t.hidden=!0,document.body.appendChild(t);var e=new a.a(t,!0);l=new s(e.SVGContainer,"ghost")}return l};var n=i("pzs1"),r=i("cOH5"),a=i("HDh7"),o=i("58Sn"),s=function(){function t(t,e){this.container=t,this.id=e;var i=document.createElementNS(o.a,"svg");i.setAttribute("version","1.1"),i.setAttributeNS(o.e,"xmlns",o.a),i.setAttributeNS(o.e,"xmlns:xlink",o.d),i.setAttribute("role","group"),this.container.appendChild(i);var n=document.createElementNS(o.a,"desc");n.appendChild(document.createTextNode("JavaScript chart by amCharts")),i.appendChild(n),this.defs=document.createElementNS(o.a,"defs"),i.appendChild(this.defs),i.style.width="100%",i.style.height="100%",i.style.overflow="visible",this.svg=i}return t.prototype.add=function(t){return new n.a(t)},t.prototype.addGroup=function(t){return new r.a(t)},t.prototype.append=function(t){t&&this.svg.appendChild(t.node)},t.prototype.appendDef=function(t){t&&this.defs.appendChild(t.node)},t.prototype.foreignObject=function(){return new n.a("foreignObject")},t.prototype.supportsForeignObject=function(){return document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Extensibility","1.1")},t}(),l=null},PGhV:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("blink")},{blink:function(){return r(this,"blink","","")}})},PTiM:function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("Vs7R"),a=i("8ZqG"),o=i("sxA1"),s=i("aCit"),l=i("Mtpk"),u=i("Gg2j"),h=function(t){function e(){var e=t.call(this)||this;return e.className="Line",e.element=e.paper.add("line"),e.fill=Object(a.c)(),e.x1=0,e.y1=0,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this),this.x1==this.x2||this.y1==this.y2?this.pixelPerfect=!0:this.pixelPerfect=!1,this.x1=this.x1,this.x2=this.x2,this.y1=this.y1,this.y2=this.y2},Object.defineProperty(e.prototype,"x1",{get:function(){return this.getPropertyValue("x1")},set:function(t){l.isNumber(t)||(t=0);var e=0;this.pixelPerfect&&this.stroke instanceof o.a&&(e=1e-5),this.setPropertyValue("x1",t,!0),this.element.attr({x1:t+e})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"x2",{get:function(){var t=this.getPropertyValue("x2");return l.isNumber(t)||(t=this.pixelWidth),t},set:function(t){l.isNumber(t)||(t=0),this.setPropertyValue("x2",t,!0),this.element.attr({x2:t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y1",{get:function(){return this.getPropertyValue("y1")},set:function(t){l.isNumber(t)||(t=0);var e=0;this.pixelPerfect&&this.stroke instanceof o.a&&(e=1e-5),this.setPropertyValue("y1",t,!0),this.element.attr({y1:t+e})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y2",{get:function(){var t=this.getPropertyValue("y2");return l.isNumber(t)||(t=this.pixelHeight),t},set:function(t){l.isNumber(t)||(t=0),this.setPropertyValue("y2",t,!0),this.element.attr({y2:t})},enumerable:!0,configurable:!0}),e.prototype.positionToPoint=function(t){var e={x:this.x1,y:this.y1},i={x:this.x2,y:this.y2},n=u.getMidPoint(e,i,t),r=u.getAngle(e,i);return{x:n.x,y:n.y,angle:r}},e}(r.a);s.c.registeredClasses.Line=h},Pm8L:function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},PoRT:function(t,e,i){"use strict";var n=i("UseD"),r=i("X/sl").every,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("every",function(t){return r(a(this),t,arguments.length>1?arguments[1]:void 0)})},Puh1:function(t,e,i){"use strict";i.d(e,"b",function(){return p}),i.d(e,"a",function(){return d});var n=i("m4/l"),r=i("AC2I"),a=i("Inf5"),o=i("IbTV"),s=i("BmDP"),l=i("aCit"),u=i("Gg2j"),h=i("Mtpk"),c=i("tjMS"),p=function(t){function e(){var e=t.call(this)||this;return e.className="PieSeriesDataItem",e.values.radiusValue={},e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"radiusValue",{get:function(){return this.values.radiusValue.value},set:function(t){this.setValue("radiusValue",t)},enumerable:!0,configurable:!0}),e.prototype.hide=function(e,i,n,r){return t.prototype.hide.call(this,e,i,0,["value","radiusValue"])},e.prototype.show=function(e,i,n){return t.prototype.show.call(this,e,i,["value","radiusValue"])},e}(r.b),d=function(t){function e(){var e=t.call(this)||this;return e.className="PieSeries",e.alignLabels=!0,e.layout="none",e.labels.template.radius=Object(c.c)(5),e.addDisposer(e.labels.template.events.on("enabled",e.invalidate,e,!1)),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.createSlice=function(){return new a.a},e.prototype.createTick=function(){return new s.a},e.prototype.createLabel=function(){return new o.a},e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),h.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Pie Slice Series"))},e.prototype.createDataItem=function(){return new p},e.prototype.initSlice=function(t){t.isMeasured=!1,t.defaultState.properties.scale=1,t.observe("scale",this.handleSliceScale,this),t.observe(["dx","dy","x","y","shiftRadius"],this.handleSliceMove,this),t.tooltipText="{category}: {value.percent.formatNumber('#.#')}% ({value.value})",t.states.create("hover").properties.scale=1.05,t.defaultState.properties.shiftRadius=0,t.togglable=!0,t.events.on("toggled",function(t){t.target.hideTooltip()}),t.states.create("active").properties.shiftRadius=.1},e.prototype.validate=function(){this._leftItems=[],this._rightItems=[],this._currentStartAngle=this.startAngle,this._arcRect=u.getArcRect(this.startAngle,this.endAngle),this._maxRadiusPercent=0;for(var e=this.startIndex;e<this.endIndex;e++){var i=this.dataItems.getIndex(e).values.radiusValue.percent;i>this._maxRadiusPercent&&(this._maxRadiusPercent=i)}t.prototype.validate.call(this),this.alignLabels&&(this.startAngle>this.endAngle?this._rightItems.reverse():this._leftItems.reverse(),this._rightItems.sort(function(t,e){var i=(t.slice.middleAngle+360)%360,n=(e.slice.middleAngle+360)%360;return i>270&&(i-=360),n>270&&(n-=360),i<n?-1:1}),this._leftItems.sort(function(t,e){return(t.slice.middleAngle+360)%360<(e.slice.middleAngle+360)%360?1:-1}),this.arrangeLabels(this._rightItems),this.arrangeLabels2(this._rightItems),this.arrangeLabels(this._leftItems),this.arrangeLabels2(this._leftItems))},e.prototype.validateDataElement=function(e){if(this.pixelRadius>0){this.ignoreZeroValues&&0==e.value?e.__disabled=!0:e.__disabled=!1;var i=e.slice;if(i.radius=this.pixelRadius,h.isNumber(e.radiusValue)&&(i.radius=this.pixelInnerRadius+(this.pixelRadius-this.pixelInnerRadius)*e.values.radiusValue.percent/this._maxRadiusPercent),i.innerRadius instanceof c.a||(i.innerRadius=this.pixelInnerRadius),i.startAngle=this._currentStartAngle,i.arc=Math.abs(e.values.value.percent)*(this.endAngle-this.startAngle)/100,!this.labels.template.disabled){var n=e.label,r=e.tick;r.slice=i,r.label=n;var a=(i.middleAngle+360)%360,o=void 0;if(this.alignLabels){var s=n.pixelRadius(i.radius),l=r.length+s;n.dx=0,n.dy=0,n.verticalCenter="middle";var u=this._arcRect;a>270||a<=90?(l+=(u.width+u.x)*this.pixelRadius,n.horizontalCenter="left",this._rightItems.push(e)):(l-=u.x*this.pixelRadius,n.horizontalCenter="right",this._leftItems.push(e),l*=-1);var p=i.radius+r.length+s;o={x:l,y:i.iy*p},n.moveTo(o)}else{var d=i.depth;h.isNumber(d)||(d=0),n.fixPosition(i.middleAngle,i.radius,i.radiusY,0,-d)}}this._currentStartAngle+=i.arc,t.prototype.validateDataElement.call(this,e)}},Object.defineProperty(e.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(t){this.setPercentProperty("radius",t,!0,!1,10,!1)&&this.invalidateDataItems()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelRadius",{get:function(){return this._pixelRadius},set:function(t){this._pixelRadius!=t&&(this._pixelRadius=t,this.invalidateDataItems())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelInnerRadius",{get:function(){return this._pixelInnerRadius},set:function(t){this._pixelInnerRadius!=t&&(this._pixelInnerRadius=t,this.invalidateDataItems())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(t){this.setPercentProperty("innerRadius",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startAngle",{get:function(){var t=this.getPropertyValue("startAngle");return h.isNumber(t)?t:this._startAngleInternal},set:function(t){this.setPropertyValue("startAngle",u.normalizeAngle(t),!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endAngle",{get:function(){var t=this.getPropertyValue("endAngle");return h.isNumber(t)?t:this._endAngleInternal},set:function(t){this.setPropertyValue("endAngle",t,!0)},enumerable:!0,configurable:!0}),e.prototype.positionBullet=function(e){t.prototype.positionBullet.call(this,e);var i=e.dataItem.slice,n=e.locationX;h.isNumber(n)||(n=.5);var r=e.locationY;h.isNumber(r)||(r=1);var a=i.startAngle+i.arc*n;e.x=r*i.radius*u.cos(a),e.y=r*i.radiusY*u.sin(a)},e.prototype.handleSliceMove=function(t){if(!this.alignLabels){var e=t.target,i=e.dataItem;if(i){var n=i.label;n&&(n.dx=n.fdx+e.dx+e.pixelX,n.dy=n.fdy+e.dy+e.pixelY)}}},Object.defineProperty(e.prototype,"bbox",{get:function(){if(this.definedBBox)return this.definedBBox;var t=this.chart;return t?u.getArcRect(t.startAngle,t.endAngle,this.pixelRadius):u.getArcRect(this.startAngle,this.endAngle,this.pixelRadius)},enumerable:!0,configurable:!0}),e}(r.a);l.c.registeredClasses.PieSeries=d,l.c.registeredClasses.PieSeriesDataItem=p},Q0ab:function(t,e,i){"use strict";var n=i("0sYB"),r=i("X/sl").map,a=i("ugpH"),o=i("J+FZ"),s=a("map"),l=o("map");n({target:"Array",proto:!0,forced:!s||!l},{map:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},Q4nc:function(t,e,i){"use strict";i.d(e,"a",function(){return n});var n={verbose:!0,commercialLicense:!1,classNamePrefix:"amcharts-",autoSetClassName:!1,minPolylineStep:.5,onlyShowOnViewport:!1,queue:!1,licenses:[]}},QKtu:function(t,e,i){var n=i("6aQQ");t.exports=!n(function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype})},QQDG:function(t,e,i){var n=i("0sYB"),r=i("5SyC"),a=Math.cosh,o=Math.abs,s=Math.E;n({target:"Math",stat:!0,forced:!a||a(710)===1/0},{cosh:function(t){var e=r(o(t)-1)+1;return(e+1/(e*s*s))*(s/2)}})},QgOz:function(t,e,i){"use strict";var n=i("UseD"),r=i("tHyI"),a=i("oxAz"),o=i("7X7h"),s=i("6aQQ"),l=n.aTypedArray;(0,n.exportTypedArrayMethod)("set",function(t){l(this);var e=a(arguments.length>1?arguments[1]:void 0,1),i=this.length,n=o(t),s=r(n.length),u=0;if(s+e>i)throw RangeError("Wrong length");for(;u<s;)this[e+u]=n[u++]},s(function(){new Int8Array(1).set({})}))},Qj4T:function(t,e,i){var n=i("0sYB"),r=i("5SyC"),a=Math.exp;n({target:"Math",stat:!0},{tanh:function(t){var e=r(t=+t),i=r(-t);return e==1/0?1:i==1/0?-1:(e-i)/(a(t)+a(-t))}})},Qkdp:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.entries=function(t){return function(e){for(var i in t)if(s(t,i)&&!e([i,t[i]]))break}},e.keys=a,e.keysOrdered=o,e.hasKey=s,e.getKey=function(t,e){return t[e]},e.eachContinue=l,e.each=function(t,e){l(t,function(t,i){return e(t,i),!0})},e.eachOrdered=function(t,e,i){n.each(o(t,i),function(i){e(i,t[i])})},e.copy=function(t){return Object.assign({},t)},e.merge=function(t,e){return Object.assign({},t,e)},e.copyProperties=u,e.softCopyProperties=function(t,e,i){n.each(i,function(i){r.hasValue(t[i])&&!r.hasValue(e[i])&&(e[i]=t[i])})},e.forceCopyProperties=function(t,e,i){n.each(i,function(i){e[i]=t[i]})},e.copyAllProperties=function(t,e){u(t,e,a(t))};var n=i("hJ5i"),r=i("Mtpk");function a(t){var e=[];for(var i in t)s(t,i)&&e.push(i);return e}function o(t,e){return a(t).sort(e)}function s(t,e){return{}.hasOwnProperty.call(t,e)}function l(t,e){for(var i in t)if(s(t,i)&&!e(i,t[i]))break}function u(t,e,i){n.each(i,function(i){r.hasValue(t[i])&&(e[i]=t[i])})}},"QwL+":function(t,e,i){var n=i("0sYB"),r=i("vRI3"),a=Math.acosh,o=Math.log,s=Math.sqrt,l=Math.LN2;n({target:"Math",stat:!0,forced:!a||710!=Math.floor(a(Number.MAX_VALUE))||a(1/0)!=1/0},{acosh:function(t){return(t=+t)<1?NaN:t>94906265.62425156?o(t)+l:r(t-1+s(t-1)*s(t+1))}})},QzDi:function(t,e,i){var n,r=i("3weC"),a=i("Mdrz"),o=i("XhXf"),s=i("lt6Q"),l=i("fGTV"),u=i("BAfC"),h=i("fYap")("IE_PROTO"),c=function(){},p=function(t){return"<script>"+t+"<\/script>"},d=function(){try{n=document.domain&&new ActiveXObject("htmlfile")}catch(t){}d=n?function(t){t.write(p("")),t.close();var e=t.parentWindow.Object;return t=null,e}(n):function(){var t,e=u("iframe");return e.style.display="none",l.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(p("document.F=Object")),t.close(),t.F}();for(var t=o.length;t--;)delete d.prototype[o[t]];return d()};s[h]=!0,t.exports=Object.create||function(t,e){var i;return null!==t?(c.prototype=r(t),i=new c,c.prototype=null,i[h]=t):i=d(),void 0===e?i:a(i,e)}},R3j0:function(t,e,i){i("6WsA")("hasInstance")},R6wv:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("Vs7R"),a=i("oC3T"),o=i("aCit"),s=i("hGwe"),l=i("Mtpk"),u=function(t){function e(){var e=t.call(this)||this;return e.className="Polygon",e.element=e.paper.add("path"),e.shapeRendering="auto",e._currentPoints=[],e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"points",{get:function(){var t=this.getPropertyValue("points"),e=this.path;if(e&&(!t||0==t.length)){for(var i=e.slice(1,e.length-1).split("ZM"),n=0;n<i.length;n++){var r=i[n];if(r.length>0){var a=r.split("M"),o=a[0],s=a[1];if(o&&o.length>0){var l=o.split("L");if(l.length>0){var u=[],h=[u];t.push(h);for(var c=0;c<l.length;c++){var p=l[c].split(",");u.push({x:+p[0],y:+p[1]})}if(s&&s.length>0){var d=s.split("L");if(d.length>0){var f=[];h.push(f);for(c=d.length-1;c>=0;c--){p=d[c].split(",");f.push({x:+p[0],y:+p[1]})}}}}}}}this.setPropertyValue("points",t),this._currentPoints=t}return t},set:function(t){this.setPropertyValue("points",t,!0),this._currentPoints=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentPoints",{get:function(){return this._currentPoints&&0!=this._currentPoints.length||!this.path||(this._currentPoints=this.points),this._currentPoints},set:function(t){this._currentPoints!=t&&(this._currentPoints=t,this.draw())},enumerable:!0,configurable:!0}),e.prototype.draw=function(){var e,i,n,r,a="",o=this._currentPoints;if(o.length>0){for(var u=0,h=o.length;u<h;u++){var c=o[u][0],p=o[u][1];if(c&&c.length>0){var d=c[0];a+=s.moveTo(d);for(var f=0;f<c.length;f++)d=c[f],a+=s.lineTo(d),(!l.isNumber(i)||i<d.x)&&(i=d.x),(!l.isNumber(e)||e>d.x)&&(e=d.x),(!l.isNumber(n)||n>d.y)&&(n=d.y),(!l.isNumber(r)||r<d.y)&&(r=d.y)}if(p&&p.length>0){d=p[0];a+=s.moveTo(d);for(var g=0,y=p.length;g<y;g++)d=p[g],a+=s.lineTo(d)}}a&&(a+=s.closePath()),this.bbox.x=e,this.bbox.y=n,this.bbox.width=i-e,this.bbox.height=r-n,t.prototype.setPath.call(this,a)}},e.prototype.setPath=function(e){return!!t.prototype.setPath.call(this,e)&&(this.points=[],this._bbox=this.group.getBBox(),!0)},e.prototype.measureElement=function(){},Object.defineProperty(e.prototype,"centerPoint",{get:function(){return{x:this.bbox.x+this.bbox.width/2,y:this.bbox.y+this.bbox.height/2}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"morpher",{get:function(){return this._morpher||(this._morpher=new a.a(this),this._disposers.push(this._morpher)),this._morpher},enumerable:!0,configurable:!0}),e}(r.a);o.c.registeredClasses.Polygon=u},RBX2:function(t,e,i){"use strict";i("0sYB")({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return URL.prototype.toString.call(this)}})},"RIy+":function(t,e,i){"use strict";var n=i("0sYB"),r=i("jnLg").start,a=i("rCh7")("trimStart"),o=a?function(){return r(this)}:"".trimStart;n({target:"String",proto:!0,forced:a},{trimStart:o,trimLeft:o})},RjhM:function(t,e,i){var n=i("1wCr");t.exports=n("navigator","userAgent")||""},RlUG:function(t,e,i){"use strict";var n=i("HMf+"),r=i("JZFm");t.exports=n("Map",function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},r)},Rnbi:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("Vs7R"),a=i("aCit"),o=i("hGwe"),s=function(t){function e(){var e=t.call(this)||this;return e.className="Triangle",e.element=e.paper.add("path"),e.direction="top",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e,i=this.pixelWidth,n=this.pixelHeight;switch(this.direction){case"right":e=o.moveTo({x:0,y:0})+o.lineTo({x:i,y:n/2})+o.lineTo({x:0,y:n})+o.closePath();break;case"left":e=o.moveTo({x:i,y:0})+o.lineTo({x:0,y:n/2})+o.lineTo({x:i,y:n})+o.closePath();break;case"bottom":e=o.moveTo({x:0,y:0})+o.lineTo({x:i,y:0})+o.lineTo({x:i/2,y:n})+o.closePath();break;case"top":e=o.moveTo({x:i/2,y:0})+o.lineTo({x:i,y:n})+o.lineTo({x:0,y:n})+o.closePath()}this.path=e},Object.defineProperty(e.prototype,"direction",{get:function(){return this.getPropertyValue("direction")},set:function(t){this.setPropertyValue("direction",t,!0)},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.Triangle=s},Rpw0:function(t,e,i){"use strict";i.d(e,"a",function(){return u}),i.d(e,"b",function(){return h});var n=i("aCit"),r=i("C6dT"),a=i("/9XX"),o=i("hJ5i"),s=i("Qkdp"),l=i("pjXm"),u=function(){function t(){this._isPaused=!1,this.animations=[],this.uid=n.c.getUniqueId(),this.dummyCounter=0,this._frameRequested=!1,this.updateStepDuration=45,this.time=Date.now()}return t.prototype.reportTime=function(t,e){this.dummyCounter,e&&(this.time=Date.now())},t.prototype.update=function(){var t=this;if(!this._isPaused){this._frameRequested=!1;var e=Date.now();n.c.dispatchImmediately("enterframe");for(var i in n.c.invalidDatas)if(s.hasKey(n.c.invalidDatas,i)){for(var r=n.c.invalidDatas[i];r.length>0;){var l=(u=r[0]).dataProvider;if(u.isDisposed())o.remove(r,u);else if(l&&l.dataInvalid)try{if(l.validateData(),l.dataValidationProgress<1)break}catch(t){o.remove(r,l),l.raiseCriticalError(t)}else try{if(u.validateData(),u.dataValidationProgress<1)break}catch(t){o.remove(r,u),u.raiseCriticalError(t)}}if(Date.now()-e>this.updateStepDuration)break}for(;n.c.invalidRawDatas.length>0;){if((u=n.c.invalidRawDatas[0]).isDisposed())o.remove(n.c.invalidRawDatas,u);else try{u.validateRawData()}catch(t){o.remove(n.c.invalidRawDatas,u),u.raiseCriticalError(t)}}for(;n.c.invalidDataItems.length>0;){l=(u=n.c.invalidDataItems[0]).dataProvider;if(u.isDisposed()||u.dataInvalid||l&&l.dataInvalid);else try{u.validateDataItems()}catch(t){o.remove(n.c.invalidDataItems,u),u.raiseCriticalError(t)}o.remove(n.c.invalidDataItems,u)}for(;n.c.invalidDataRange.length>0;){var u;l=(u=n.c.invalidDataRange[0]).dataProvider;if(u.isDisposed()||u.dataInvalid||l&&l.dataInvalid);else try{u.validateDataRange(),u.skipRangeEvent||u.dispatchImmediately("datarangechanged"),u.skipRangeEvent=!1}catch(t){o.remove(n.c.invalidDataRange,u),u.raiseCriticalError(t)}o.remove(n.c.invalidDataRange,u)}var h=[];s.each(n.c.invalidLayouts,function(e){t.validateLayouts(e)}),s.each(n.c.invalidPositions,function(e){t.validatePositions(e)});var c=!1;if(e=Date.now(),s.each(n.c.invalidSprites,function(i,r){for(var a=0;r.length>0;){if(t.validateLayouts(i),t.validatePositions(i),5==++a){if(Date.now()-e>t.updateStepDuration)break;a=0}var s=r[r.length-1];if(s&&!s.isDisposed()){if(s._systemCheckIfValidate())if(t.checkIfValidate2(s))try{s._systemUpdate(h)}catch(t){s.invalid=!1,o.remove(r,s),s.raiseCriticalError(t)}else h.push(s);else h.push(s);s.invalid=!1}o.remove(r,s)}n.c.invalidSprites[i]=n.c.invalidSprites[i].concat(h)}),s.each(n.c.invalidSprites,function(t,e){e.length>0&&(c=!0)}),s.each(n.c.invalidDatas,function(t,e){e.length>0&&(c=!0)}),o.each(o.copy(this.animations),function(t){t.update()}),s.each(n.c.invalidLayouts,function(e){t.validateLayouts(e)}),s.each(n.c.invalidPositions,function(e){t.validatePositions(e)}),Object(a.d)(),s.each(n.c.invalidLayouts,function(e){t.validateLayouts(e)}),s.each(n.c.invalidPositions,function(e){t.validatePositions(e)}),n.c.dispatchImmediately("exitframe"),(c||this.animations.length>0||[].length>0)&&this.requestFrame(),this.updateStepDuration<200){var p=!0;s.each(n.c.invalidDatas,function(t,e){e.length>0&&(p=!1)}),s.each(n.c.invalidSprites,function(t,e){e.length>0&&(p=!1)}),p&&(this.updateStepDuration=200)}}},t.prototype.checkIfValidate2=function(t){return!(t.dataItem&&t.dataItem.component&&t.dataItem.component.dataInvalid&&!t.dataItem.component.isTemplate)},t.prototype.requestFrame=function(){var t=this;this._frameRequested||(Object(a.b)(function(){t.update()}),this._frameRequested=!0)},t.prototype.softInvalidate=function(t){var e=this;t.children.each(function(t){t instanceof r.a&&e.softInvalidate(t),t.measureFailed&&(Object(n.b)(t,"Label")?t.hardInvalidate():t.invalidate(),t.measureFailed=!1)})},t.prototype.validatePositions=function(t){for(var e=n.c.invalidPositions[t];e.length>0;){var i=e[e.length-1];if(i.isDisposed())o.remove(e,i);else try{i._systemValidatePositions()}catch(t){i.positionInvalid=!1,o.remove(e,i),i.raiseCriticalError(t)}}},t.prototype.validateLayouts=function(t){for(var e=n.c.invalidLayouts[t];e.length>0;){var i=e[e.length-1];if(i.isDisposed())o.remove(e,i);else try{i.children.each(function(t){t._systemValidateLayouts()}),i.validateLayout()}catch(t){i.layoutInvalid=!1,o.remove(e,i),i.raiseCriticalError(t)}}},t.prototype.log=function(t){l.a(t)},Object.defineProperty(t.prototype,"isPaused",{get:function(){return this._isPaused},set:function(t){this._isPaused=t,t||(this._frameRequested=!1,this.requestFrame())},enumerable:!0,configurable:!0}),t.VERSION="4.9.0",t}(),h=new u},Rs0P:function(t,e,i){var n=i("Kg2n"),r=i("o3G/"),a=i("KslR")("species");t.exports=function(t,e){var i;return r(t)&&("function"!=typeof(i=t.constructor)||i!==Array&&!r(i.prototype)?n(i)&&null===(i=i[a])&&(i=void 0):i=void 0),new(void 0===i?Array:i)(0===e?0:e)}},"S+7J":function(t,e,i){var n=i("0sYB"),r=i("L4xm"),a=i("WShl");n({target:"Object",stat:!0},{fromEntries:function(t){var e={};return r(t,function(t,i){a(e,t,i)},void 0,!0),e}})},ScGY:function(t,e,i){"use strict";i.d(e,"f",function(){return n}),i.d(e,"g",function(){return r}),i.d(e,"c",function(){return a}),i.d(e,"a",function(){return o}),i.d(e,"b",function(){return s}),i.d(e,"d",function(){return l}),i.d(e,"e",function(){return u});var n="px",r="string",a="number",o="date",s="duration",l="__§§§__",u="__§§§§__"},ScUe:function(t,e,i){"use strict";var n=i("exNg"),r=i("swFJ");t.exports="".repeat||function(t){var e=String(r(this)),i="",a=n(t);if(a<0||a==1/0)throw RangeError("Wrong number of repetitions");for(;a>0;(a>>>=1)&&(e+=e))1&a&&(i+=e);return i}},SqFF:function(t,e,i){var n,r,a,o=i("JAqT"),s=i("vfdp"),l=i("Kg2n"),u=i("k2B3"),h=i("JZRr"),c=i("fYap"),p=i("lt6Q"),d=s.WeakMap;if(o){var f=new d,g=f.get,y=f.has,m=f.set;n=function(t,e){return m.call(f,t,e),e},r=function(t){return g.call(f,t)||{}},a=function(t){return y.call(f,t)}}else{var v=c("state");p[v]=!0,n=function(t,e){return u(t,v,e),e},r=function(t){return h(t,v)?t[v]:{}},a=function(t){return h(t,v)}}t.exports={set:n,get:r,has:a,enforce:function(t){return a(t)?r(t):n(t,{})},getterFor:function(t){return function(e){var i;if(!l(e)||(i=r(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return i}}}},"TDx+":function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("p9TX"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="AxisLabel",e.isMeasured=!1,e.padding(10,10,10,10),e.location=.5,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"location",{get:function(){return this.getPropertyValue("location")},set:function(t){this.setPropertyValue("location",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inside",{get:function(){return this.getPropertyValue("inside")},set:function(t){this.setPropertyValue("inside",t,!0)},enumerable:!0,configurable:!0}),e.prototype.setDisabled=function(e){var i=t.prototype.setDisabled.call(this,e);return this.axis&&this.axis.invalidateDataItems(),i},e}(r.a);a.c.registeredClasses.AxisLabel=o},TGuK:function(t,e,i){"use strict";i.d(e,"a",function(){return c}),i.d(e,"c",function(){return p}),i.d(e,"b",function(){return d});var n=i("m4/l"),r=i("Tjl+"),a=i("vMqJ"),o=i("x79X"),s=i("aCit"),l=i("Wglt"),u=i("hJ5i"),h=i("Mtpk"),c=function(t){function e(){var e=t.call(this)||this;return e._rules=new a.b,e._appliedRules={},e._appliedTargets=[],e._useDefault=!0,e.adapter=new o.a(e),e._enabled=!1,e._noStates=[],e.className="Responsive",e.rules.events.on("inserted",e.checkRules,!0),e.rules.events.on("removed",e.checkRules,!0),e._disposers.push(e.rules.events),e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"component",{get:function(){return this._component},set:function(t){t!=this._component&&(this._sizeEventDisposer&&this.removeDispose(this._sizeEventDisposer),this._component=t,this._sizeEventDisposer=h.getValue(this.component).events.on("sizechanged",this.checkRules,this),this._disposers.push(this._sizeEventDisposer),this.enabled=!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"enabled",{get:function(){return this.adapter.apply("enabled",this._enabled)},set:function(t){this._enabled!=t&&(this._enabled=t,this.applyRules())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"useDefault",{get:function(){return this.adapter.apply("useDefault",this._useDefault)},set:function(t){this._useDefault!=t&&(this._useDefault=t,this.applyRules())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rules",{get:function(){return this.adapter.apply("rules",this._rules)},set:function(t){this._rules=t,this._enabled=!0,this.applyRules()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"defaultRules",{get:function(){return this.adapter.apply("defaultRules",p)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"allRules",{get:function(){var t=new a.b;return this.useDefault&&t.copyFrom(this.defaultRules),t.copyFrom(this.rules),this.adapter.apply("allRules",t)},enumerable:!0,configurable:!0}),e.prototype.isApplied=function(t){var e=this._appliedRules[t];return!!h.hasValue(e)&&e},e.prototype.checkRules=function(){var t=this,e=this.allRules;if(e&&0!=e.length){var i=!1,n=h.getValue(this.component);if(l.each(e.iterator(),function(e){e.id||(e.id=s.c.getUniqueId());var r=e.relevant(n);(r&&!t.isApplied(e.id)||!r&&t.isApplied(e.id))&&(i=!0),t._appliedRules[e.id]=r}),i){if(!this.component.isReady())return n.hidden=!0,void n.events.once("ready",function(e){e.target.show(0),t.applyRules()});this.dispatchImmediately("ruleschanged"),this.applyRules()}}},e.prototype.applyRules=function(t){var e=this,i=h.hasValue(t)?t:h.getValue(this.component),n=!1;if(this.enabled){var r=!1;l.each(this.allRules.iterator(),function(t){var a=e.getState(t,i);a&&(n||(-1!==u.indexOf(e._appliedTargets,i.uid)&&i.applyCurrentState(0),n=!0),e.isApplied(h.getValue(t.id))&&(a.transitionDuration=0,i.setState(a),e.dispatchImmediately("ruleapplied",{rule:t}),r=!0))}),r?u.replace(this._appliedTargets,i.uid):u.remove(this._appliedTargets,i.uid)}i.children&&l.each(i.children.iterator(),function(t){e.applyRules(t)})},e.prototype.getState=function(t,e){var i="responsive-"+t.id,n=e.uid+"_"+i;if(-1===u.indexOf(this._noStates,n)){if(e.states.hasKey(i))return e.states.getKey(i);var r=t.state(e,i);return r||this._noStates.push(n),r}},e.prototype.getValue=function(t,e){var i=t.getPropertyValue(e);return!h.hasValue(i)&&h.hasValue(t[e])&&(i=t[e]),i},e}(r.b),p=new a.b;p.events.on("inserted",function(t){t.newValue.id=s.c.getUniqueId()});var d=function(){function t(){}return t.widthXXS=function(e){return e.pixelWidth<=t.XXS},t.widthXS=function(e){return e.pixelWidth<=t.XS},t.widthS=function(e){return e.pixelWidth<=t.S},t.widthM=function(e){return e.pixelWidth<=t.M},t.widthL=function(e){return e.pixelWidth<=t.L},t.widthXL=function(e){return e.pixelWidth<=t.XL},t.widthXXL=function(e){return e.pixelWidth<=t.XXL},t.heightXXS=function(e){return e.pixelHeight<=t.XXS},t.heightXS=function(e){return e.pixelHeight<=t.XS},t.heightS=function(e){return e.pixelHeight<=t.S},t.heightM=function(e){return e.pixelHeight<=t.M},t.heightL=function(e){return e.pixelHeight<=t.L},t.heightXL=function(e){return e.pixelHeight<=t.XL},t.heightXXL=function(e){return e.pixelHeight<=t.XXL},t.isXXS=function(e){return e.pixelWidth<=t.XXS&&e.pixelHeight<=t.XXS},t.isXS=function(e){return e.pixelWidth<=t.XS&&e.pixelHeight<=t.XS},t.isS=function(e){return e.pixelWidth<=t.S&&e.pixelHeight<=t.S},t.isM=function(e){return e.pixelWidth<=t.M&&e.pixelHeight<=t.M},t.isL=function(e){return e.pixelWidth<=t.L&&e.pixelHeight<=t.L},t.isXL=function(e){return e.pixelWidth<=t.XL&&e.pixelHeight<=t.XL},t.isXXL=function(e){return e.pixelWidth<=t.XXL&&e.pixelHeight<=t.XXL},t.maybeXXS=function(e){return e.pixelWidth<=t.XXS||e.pixelHeight<=t.XXS},t.maybeXS=function(e){return e.pixelWidth<=t.XS||e.pixelHeight<=t.XS},t.maybeS=function(e){return e.pixelWidth<=t.S||e.pixelHeight<=t.S},t.maybeM=function(e){return e.pixelWidth<=t.M||e.pixelHeight<=t.M},t.maybeL=function(e){return e.pixelWidth<=t.L||e.pixelHeight<=t.L},t.maybeXL=function(e){return e.pixelWidth<=t.XL||e.pixelHeight<=t.XL},t.maybeXXL=function(e){return e.pixelWidth<=t.XXL||e.pixelHeight<=t.XXL},t.XXS=100,t.XS=200,t.S=300,t.M=400,t.L=600,t.XL=800,t.XXL=1e3,t}()},TIsG:function(t,e,i){"use strict";var n=i("0sYB"),r=i("Y8n3"),a=i("exNg"),o=i("tHyI"),s=i("7X7h"),l=i("Rs0P"),u=i("WShl"),h=i("ugpH"),c=i("J+FZ"),p=h("splice"),d=c("splice",{ACCESSORS:!0,0:0,1:2}),f=Math.max,g=Math.min;n({target:"Array",proto:!0,forced:!p||!d},{splice:function(t,e){var i,n,h,c,p,d,y=s(this),m=o(y.length),v=r(t,m),b=arguments.length;if(0===b?i=n=0:1===b?(i=0,n=m-v):(i=b-2,n=g(f(a(e),0),m-v)),m+i-n>9007199254740991)throw TypeError("Maximum allowed length exceeded");for(h=l(y,n),c=0;c<n;c++)(p=v+c)in y&&u(h,c,y[p]);if(h.length=n,i<n){for(c=v;c<m-n;c++)d=c+i,(p=c+n)in y?y[d]=y[p]:delete y[d];for(c=m;c>m-n+i;c--)delete y[c-1]}else if(i>n)for(c=m-n;c>v;c--)d=c+i-1,(p=c+n-1)in y?y[d]=y[p]:delete y[d];for(c=0;c<i;c++)y[c+v]=arguments[c+2];return y.length=m-n+i,h}})},TM0y:function(t,e,i){var n=i("vfdp");i("NRfM")(n.JSON,"JSON",!0)},TQpL:function(t,e,i){"use strict";var n=i("HnbP");t.exports.f=function(t){return new function(t){var e,i;this.promise=new t(function(t,n){if(void 0!==e||void 0!==i)throw TypeError("Bad Promise constructor");e=t,i=n}),this.resolve=n(e),this.reject=n(i)}(t)}},TXRX:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("C6dT"),a=i("aCit"),o=i("TGuK"),s=function(t){function e(){var e=t.call(this)||this;return e.className="Bullet",e.isMeasured=!1,e.tooltipX=0,e.tooltipY=0,e.layout="none",e.applyOnClones=!0,e.copyToLegendMarker=!0,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"locationX",{get:function(){return this.getPropertyValue("locationX")},set:function(t){if(this.setPropertyValue("locationX",t)){var e=this.dataItem;e&&e.component&&e.component.invalidate()}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"locationY",{get:function(){return this.getPropertyValue("locationY")},set:function(t){if(this.setPropertyValue("locationY",t)){var e=this.dataItem;e&&e.component&&e.component.invalidate()}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"xField",{get:function(){return this.getPropertyValue("xField")},set:function(t){this.setPropertyValue("xField",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"yField",{get:function(){return this.getPropertyValue("yField")},set:function(t){this.setPropertyValue("yField",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isDynamic",{get:function(){return this.getPropertyValue("isDynamic")},set:function(t){this.setPropertyValue("isDynamic",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"copyToLegendMarker",{get:function(){return this.getPropertyValue("copyToLegendMarker")},set:function(t){this.setPropertyValue("copyToLegendMarker",t)},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.Bullet=s,o.c.push({relevant:o.b.isXS,state:function(t,e){if(t instanceof s){var i=t.states.create(e);return i.properties.disabled=!0,i}return null}})},TZWN:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("ZLF9"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.properties.radius=2,e._circle=e.paper.add("circle"),e.addElement(e._circle),e.shapeRendering="auto",e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this),this._circle&&this._circle.attr({r:this.radius,cx:this.width/2,cy:this.height/2})},Object.defineProperty(e.prototype,"radius",{get:function(){return this.properties.radius},set:function(t){this.properties.radius=t,this.draw()},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.CirclePattern=o},"Tjl+":function(t,e,i){"use strict";i.d(e,"a",function(){return m}),i.d(e,"b",function(){return v});var n=i("m4/l"),r=i("vMqJ"),a=i("VGgz"),o=i("+qIf"),s=i("hD5A"),l=i("o0Lc"),u=i("x79X"),h=i("8ZqG"),c=i("tjMS"),p=i("aCit"),d=i("eCqC"),f=i("hJ5i"),g=i("Qkdp"),y=i("Mtpk"),m=function(){function t(){this._disposed=!1,this._disposers=[],this.className="BaseObject"}return t.prototype.debug=function(){},Object.defineProperty(t.prototype,"uid",{get:function(){return this._uid||(this._uid=p.c.getUniqueId(),p.c.map.setKey(this._uid,this)),this._uid},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this._id},set:function(t){this._id=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"map",{get:function(){return this._map||(this._map=new o.a),this._map},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"delayedMap",{get:function(){return this._delayedMap||(this._delayedMap=new o.a),this._delayedMap},enumerable:!0,configurable:!0}),t.prototype.addDelayedMap=function(t,e){var i=this.delayedMap;i.hasKey(e)||i.setKey(e,[]),i.getKey(e).push({property:t,target:this})},t.prototype.processDelayedMap=function(){var t=this;this.delayedMap.each(function(e,i){if(t.map.hasKey(e)){var n=t.map.getKey(e);f.each(i,function(t){t.target[t.property]=n}),t.delayedMap.removeKey(e)}})},t.prototype.applyTheme=function(){var t=this;if(p.c){var e=this.getCurrentThemes();e&&f.each(e,function(e,i){e(t)})}},Object.defineProperty(t.prototype,"themes",{get:function(){return this._themes},set:function(t){this._themes=t},enumerable:!0,configurable:!0}),t.prototype.getCurrentThemes=function(){return this.themes||p.c.themes},t.prototype.isDisposed=function(){return this._disposed},t.prototype.dispose=function(){if(!this._disposed){this._disposed=!0;var t=this._disposers;for(this._disposers=null;0!==t.length;){t.shift().dispose()}this.clearCache(),this.clonedFrom&&this.clonedFrom.clones.removeValue(this);var e=this._uid;null!=e&&p.c.map.removeKey(e)}},t.prototype.addDisposer=function(t){this._disposers.push(t)},t.prototype.removeDispose=function(t){if(!this._disposed){var e=f.indexOf(this._disposers,t);e>-1&&this._disposers.splice(e,1)}t.dispose()},t.prototype.clone=function(t){t||(t="clone-"+p.c.getUniqueId());var e=new this.constructor;return e.cloneId=t,e.copyFrom(this),e},Object.defineProperty(t.prototype,"clones",{get:function(){return this._clones||(this._clones=new r.b),this._clones},enumerable:!0,configurable:!0}),t.prototype.copyFrom=function(t){t.clones.push(this),this.clonedFrom=t},Object.defineProperty(t.prototype,"className",{get:function(){return this._className},set:function(t){this._className=t},enumerable:!0,configurable:!0}),t.prototype.setCache=function(t,e,i){d.b.set(this.uid,t,e,i)},t.prototype.getCache=function(t,e){return void 0===e&&(e=void 0),d.b.get(this.uid,t,e)},t.prototype.clearCache=function(){d.b.clear(this.uid)},t.prototype.setTimeout=function(t,e){var i=this,n=setTimeout(function(){i.removeDispose(r),t()},e),r=new s.b(function(){clearTimeout(n)});return this._disposers.push(r),r},t.prototype.setInterval=function(t,e){var i=this,n=setInterval(function(){i.removeDispose(r),t()},e),r=new s.b(function(){clearTimeout(n)});return this._disposers.push(r),r},Object.defineProperty(t.prototype,"config",{set:function(t){try{this.processConfig(t)}catch(t){this.raiseCriticalError(t)}},enumerable:!0,configurable:!0}),t.prototype.processConfig=function(e){var i=this;if(e){var n=this;if(g.eachOrdered(e,function(e,s){var d,f=s;if("callback"==e&&"function"==typeof s&&s.call(n),i.hasProperty(e))if(!y.isObject(f)||!y.hasValue(f.type)||y.isObject(n[e])&&y.hasValue(n[e].className)&&!f.forceCreate&&n[e].className==f.type||i.asIs(e)?d=n[e]:(d=i.createClassInstance(f.type))?n[e]=d:d=n[e],d instanceof u.a)i.processAdapters(d,f);else if(d instanceof l.a)i.processEvents(d,f);else if("locale"==e&&y.isString(f))document["am4lang_"+f]&&(n[e]=document["am4lang_"+f]);else if("parent"==e&&y.isString(f)){var m=i.map.getKey(f);if(!m)throw Error('Non-existing ID in config: "'+f+'".');n[e]=m}else if(i.asIs(e))n[e]=f;else if(i.asFunction(e)&&y.isString(f)){if(!y.hasValue(p.c.registeredClasses[f]))throw Error("Invalid easing function: "+f);n[e]=p.c.registeredClasses[f]}else if(f instanceof t)n[e]=f;else if(d instanceof t)d.config=f;else if(d instanceof r.e||d instanceof a.b||d instanceof a.d){if(y.isArray(f))d instanceof r.e?i.processListTemplate(f,d):i.processOrderedTemplate(f,d);else if(y.isObject(f))if(f instanceof t)d.template=f;else{var v=void 0;v=y.hasValue(f.template)?f.template:f,d.template instanceof t?d.template.config=v:g.each(v,function(e,n){var a=d.template[e];a instanceof u.a?i.processAdapters(a,n):a instanceof l.a?i.processEvents(a,n):a instanceof o.c?i.processDictionaryTemplate(a,n):d.template[e]instanceof t?d.template[e].config=n:y.isObject(n)&&y.hasValue(n.type)?(a=i.createClassInstance(n.type))?(a instanceof t&&(a.config=n),d.template[e]=a):d.template[e]=n:a instanceof r.b?i.processList(n,a):d.template[e]=i.maybeColorOrPercent(n)}),y.hasValue(f.values)&&(d instanceof r.e?i.processListTemplate(f.values,d):i.processOrderedTemplate(f.values,d))}}else d instanceof r.b?"children"==e?i.processList(f,d,i):i.processList(f,d):d instanceof o.c?i.processDictionaryTemplate(d,f):d instanceof o.a?i.processDictionary(d,f):d instanceof h.a||d instanceof c.a?n[e]=i.maybeColorOrPercent(f):y.isObject(d)&&y.isObject(f)?g.copyAllProperties(f,d):(f=i.maybeColorOrPercent(f),n[e]=f);else i.isReserved(e)||(n[e]=f)},this.configOrder),this.processingErrors.length){var s=this.processingErrors.join("\n");throw this._processingErrors=[],Error(s)}}},t.prototype.maybeColorOrPercent=function(t){if(y.isString(t)){if(t.match(/^[\-]?[0-9.]+\%$/))return Object(c.c)(y.toNumber(t));if(t.match(/^\#[0-9abcdef]{3,}$/i))return Object(h.c)(t)}return t},t.prototype.processAdapters=function(t,e){var i=this;y.isArray(e)?f.each(e,function(e,n){t.add(e.key,e.callback,e.priority||0,i)}):y.isObject(e)&&g.each(e,function(e,i){t.has(e,i)||t.add(e,i)})},t.prototype.processEvents=function(t,e){var i=this;y.isObject(e)?g.each(e,function(e,i){t.has(e,i)||t.on(e,i)}):y.isArray(e)&&f.each(e,function(e,n){t.on(e.type,e.callback,i)})},t.prototype.processDictionaryTemplate=function(e,i){y.isObject(i)&&g.each(i,function(i,n){var r;(r="template"==i?e.template:e.hasKey(i)?e.getKey(i):e.create(i))instanceof t?r.config=n:y.isObject(r)&&y.isObject(n)?g.copyAllProperties(n,r):r.setKey(i,n)})},t.prototype.processDictionary=function(t,e){y.isObject(e)&&g.each(e,function(e,i){t.setKey(e,i)})},t.prototype.processListTemplate=function(e,i){var n=this;for(f.each(e,function(e,r){var a,o=n.getConfigEntryType(e);if(i.hasIndex(r)&&!e.forceCreate)a=i.getIndex(r);else{if(e instanceof t)return void i.push(e);a=o?i.create(o):i.create()}e===a||y.isObject(e)&&(a instanceof t?a.config=e:y.isObject(a)&&y.isObject(e)?g.copyAllProperties(e,a):i.setIndex(i.indexOf(a),e))});e.length>i.length;)i.pop()},t.prototype.processOrderedTemplate=function(e,i){var n=this;f.each(e,function(e,r){var a,o=n.getConfigEntryType(e);a=o?i.create(o):i.create(),y.isObject(e)&&(a instanceof t?a.config=e:y.isObject(a)&&y.isObject(e)?g.copyAllProperties(e,a):i.insert(e))})},t.prototype.processList=function(e,i,n){var r=this;y.isArray(e)||(e=[e]);var a=i.length;for(f.each(e,function(e,o){if(y.isObject(e)){var s=void 0;if(o<a&&!e.forceCreate)s=i.getIndex(o);else{if(e instanceof t)return void i.push(e);s=r.createEntryInstance(e),n?s.parent=n:i.push(s)}s instanceof t?s.config=e:y.isObject(s)&&y.isObject(e)&&g.copyAllProperties(e,s)}else i.hasIndex(o)?i.setIndex(o,e):i.push(e)});e.length>i.length;)i.pop()},t.prototype.configOrder=function(t,e){return t==e?0:"language"==t?-1:"language"==e?1:0},t.prototype.asIs=function(t){return-1!=f.indexOf(["locale"],t)},t.prototype.asFunction=function(t){return!1},t.prototype.createClassInstance=function(t){if(y.hasValue(p.c.registeredClasses[t]))return new p.c.registeredClasses[t];throw Error('Invalid type: "'+t+'".')},t.prototype.createEntryInstance=function(t){var e;return y.hasValue(t.type)&&(e=this.createClassInstance(t.type)),e||t},t.prototype.getConfigEntryType=function(t){if(y.hasValue(t.type)){if(y.hasValue(p.c.registeredClasses[t.type]))return p.c.registeredClasses[t.type];throw Error('Invalid type: "'+t.type+'".')}},t.prototype.hasProperty=function(t){return t in this},t.prototype.isReserved=function(t){return-1!==["type","forceCreate"].indexOf(t)},Object.defineProperty(t.prototype,"processingErrors",{get:function(){return this._processingErrors||(this._processingErrors=[]),this._processingErrors},enumerable:!0,configurable:!0}),t}(),v=function(t){function e(){var e=t.call(this)||this;return e.className="BaseObjectEvents",e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"events",{get:function(){return this._eventDispatcher||(this._eventDispatcher=new l.a,this._disposers.push(this._eventDispatcher)),this._eventDispatcher},enumerable:!0,configurable:!0}),e.prototype.dispatch=function(t,e){this._eventDispatcher&&this.events.isEnabled(t)&&(e?(e.type=t,e.target=e.target||this,this.events.dispatch(t,{type:t,target:this})):this.events.dispatch(t,{type:t,target:this}))},e.prototype.dispatchImmediately=function(t,e){this._eventDispatcher&&this.events.isEnabled(t)&&(e?(e.type=t,e.target=e.target||this,this.events.dispatchImmediately(t,e)):this.events.dispatchImmediately(t,{type:t,target:this}))},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),e._eventDispatcher&&this.events.copyFrom(e._eventDispatcher)},e}(m)},Tl3C:function(t,e,i){var n=i("lt6Q"),r=i("Kg2n"),a=i("JZRr"),o=i("8+rI").f,s=i("vfRf"),l=i("6EAy"),u=s("meta"),h=0,c=Object.isExtensible||function(){return!0},p=function(t){o(t,u,{value:{objectID:"O"+ ++h,weakData:{}}})},d=t.exports={REQUIRED:!1,fastKey:function(t,e){if(!r(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!a(t,u)){if(!c(t))return"F";if(!e)return"E";p(t)}return t[u].objectID},getWeakData:function(t,e){if(!a(t,u)){if(!c(t))return!0;if(!e)return!1;p(t)}return t[u].weakData},onFreeze:function(t){return l&&d.REQUIRED&&c(t)&&!a(t,u)&&p(t),t}};n[u]=!0},TqDQ:function(t,e,i){var n=i("3sMl"),r=i("mte+").UNSUPPORTED_Y,a=i("8+rI").f,o=i("SqFF").get,s=RegExp.prototype;n&&r&&a(RegExp.prototype,"sticky",{configurable:!0,get:function(){if(this!==s){if(this instanceof RegExp)return!!o(this).sticky;throw TypeError("Incompatible receiver, RegExp required")}}})},Trvg:function(t,e,i){"use strict";i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("p9TX"),a=i("qCRI"),o=i("MIZb"),s=i("aCit"),l=function(t){function e(){var e=t.call(this)||this;e.className="TextLink",e.selectable=!0;var i=new o.a;return e.fill=i.getFor("primaryButton").brighten(.3),e.states.create("hover").properties.fill=i.getFor("primaryButtonHover").brighten(.3),e.states.create("down").properties.fill=i.getFor("primaryButtonDown").brighten(.3),e.cursorOverStyle=a.a.pointer,e.applyTheme(),e}return Object(n.c)(e,t),e}(r.a);s.c.registeredClasses.TextLink=l},TskY:function(t,e,i){i("0sYB")({target:"Function",proto:!0},{bind:i("uKH8")})},"U+Re":function(t,e,i){var n=i("3sMl"),r=i("8+rI"),a=i("/arR"),o=i("mte+").UNSUPPORTED_Y;n&&("g"!=/./g.flags||o)&&r.f(RegExp.prototype,"flags",{configurable:!0,get:a})},"Uf/F":function(t,e,i){i("0sYB")({target:"Number",stat:!0},{MAX_SAFE_INTEGER:9007199254740991})},Uf57:function(t,e,i){"use strict";i.d(e,"b",function(){return _}),i.d(e,"a",function(){return P});var n=i("m4/l"),r=i("aM7D"),a=i("Vs7R"),o=i("pR7v"),s=i("+qIf"),l=i("hD5A"),u=i("0Mwj"),h=i("VB2N"),c=i("KknQ"),p=i("aCit"),d=i("Wglt"),f=i("Gg2j"),g=i("v9UT"),y=i("Mtpk"),m=i("L91H"),v=i("hJ5i"),b=i("Qkdp"),x=i("hGwe"),_=function(t){function e(){var e=t.call(this)||this;return e.className="XYSeriesDataItem",e.values.customValue={},e.values.valueX={stack:0},e.values.valueY={stack:0},e.values.openValueX={},e.values.openValueY={},e.values.dateX={},e.values.dateY={},e.values.openDateX={},e.values.openDateY={},e.setLocation("dateX",.5,0),e.setLocation("dateY",.5,0),e.setLocation("categoryX",.5,0),e.setLocation("categoryY",.5,0),e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"valueX",{get:function(){return this.values.valueX.value},set:function(t){this.setValue("valueX",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"customValue",{get:function(){return this.values.customValue.value},set:function(t){this.setValue("customValue",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueY",{get:function(){return this.values.valueY.value},set:function(t){this.setValue("valueY",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dateX",{get:function(){return this.getDate("dateX")},set:function(t){this.setDate("dateX",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dateY",{get:function(){return this.getDate("dateY")},set:function(t){this.setDate("dateY",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"categoryX",{get:function(){return this.categories.categoryX},set:function(t){this.setCategory("categoryX",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"categoryY",{get:function(){return this.categories.categoryY},set:function(t){this.setCategory("categoryY",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"openValueX",{get:function(){return this.values.openValueX.value},set:function(t){this.setValue("openValueX",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"openValueY",{get:function(){return this.values.openValueY.value},set:function(t){this.setValue("openValueY",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"openDateX",{get:function(){return this.getDate("openDateX")},set:function(t){this.setDate("openDateX",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"openDateY",{get:function(){return this.getDate("openDateY")},set:function(t){this.setDate("openDateY",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"openCategoryX",{get:function(){return this.categories.openCategoryX},set:function(t){this.setCategory("openCategoryX",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"openCategoryY",{get:function(){return this.categories.openCategoryY},set:function(t){this.setCategory("openCategoryY",t)},enumerable:!0,configurable:!0}),e.prototype.getMin=function(t,e,i){var n,r=this;return y.isNumber(i)||(i=0),v.each(t,function(t){var a;a=e?r.getWorkingValue(t):r.getValue(t),((a+=i)<n||!y.isNumber(n))&&(n=a)}),n},e.prototype.getMax=function(t,e,i){var n,r=this;return y.isNumber(i)||(i=0),v.each(t,function(t){var a;a=e?r.getWorkingValue(t):r.getValue(t),((a+=i)>n||!y.isNumber(n))&&(n=a)}),n},e}(r.b),P=function(t){function e(){var e=t.call(this)||this;return e.groupFields={},e._xAxis=new l.d,e._yAxis=new l.d,e._xValueFields=[],e._yValueFields=[],e._baseInterval={},e.dataGrouped=!1,e.usesShowFields=!1,e._dataSetChanged=!1,e._maxxX=1e5,e._maxxY=1e5,e._propertiesChanged=!1,e.className="XYSeries",e.isMeasured=!1,e.groupFields.valueX="close",e.groupFields.valueY="close",e.groupFields.customValue="close",e.groupFields.openValueX="open",e.groupFields.openValueY="open",e.cursorTooltipEnabled=!0,e.cursorHoverEnabled=!0,e.excludeFromTotal=!1,e.mainContainer.mask=new a.a,e.mainContainer.mask.setElement(e.paper.add("path")),e.stacked=!1,e.snapTooltip=!1,e.tooltip.pointerOrientation="horizontal",e.hideTooltipWhileZooming=!0,e.maskBullets=!0,e.tooltip.events.on("hidden",function(){e.returnBulletDefaultState()},void 0,!1),e._disposers.push(e._xAxis),e._disposers.push(e._yAxis),e.observe(a.b,function(){e.inited&&(e._propertiesChanged=!0,e.legendDataItem&&(e.legendDataItem.childrenCreated=!1),e.chart&&e.chart.legend&&e.chart.legend.invalidateDataItems(),e.invalidate())},void 0,!1),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),y.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("X/Y Series"))},e.prototype.createDataItem=function(){return new _},e.prototype.dataChangeUpdate=function(){this.dataGrouped=!1,this._baseInterval={},this._currentDataSetId="",this._tmin.clear(),this._tmax.clear(),this._smin.clear(),this._smax.clear(),this.xAxis&&this.xAxis.seriesDataChangeUpdate(this),this.yAxis&&this.yAxis.seriesDataChangeUpdate(this)},e.prototype.validateData=function(){this._baseInterval={};var e=this.dataFields;if(e.valueYShow||e.openValueXShow||e.openValueXShow||e.openValueYShow?this.usesShowFields=!0:this.usesShowFields=!1,this.defineFields(),this.data.length>0&&this.dataChangeUpdate(),t.prototype.validateData.call(this),this.updateItemReaderText(),this.chart&&(!y.hasValue(this.dataFields[this._xField])||!y.hasValue(this.dataFields[this._yField])))throw Error('Data fields for series "'+(this.name?this.name:this.uid)+'" are not properly defined.');this.inited&&this.isHidden&&this.hide(0),this.dataGrouped=!1},e.prototype.processDataItem=function(e,i){try{t.prototype.processDataItem.call(this,e,i),this.xAxis.processSeriesDataItem(e,"X"),this.yAxis.processSeriesDataItem(e,"Y"),this.setInitialWorkingValues(e)}catch(t){this._chart&&this._chart.raiseCriticalError(t)}},e.prototype.updateDataItem=function(e){t.prototype.updateDataItem.call(this,e),this.xAxis.processSeriesDataItem(e,"X"),this.yAxis.processSeriesDataItem(e,"Y")},e.prototype.setInitialWorkingValues=function(t){},e.prototype.disposeData=function(){t.prototype.disposeData.call(this);var e=this.xAxis,i=this.yAxis;if(e){var n=this.dataItemsByAxis.getKey(e.uid);n&&n.clear(),e instanceof h.a&&this.clearCatAxis(e)}if(i){var r=this.dataItemsByAxis.getKey(i.uid);r&&r.clear(),i instanceof h.a&&this.clearCatAxis(i)}},e.prototype.clearCatAxis=function(t){var e=this.uid;t.dataItems.each(function(t){t.seriesDataItems[e]&&(t.seriesDataItems[e]=[])})},e.prototype.defineFields=function(){var t=this.xAxis,e=this.yAxis;if(t&&e){var i=t.axisFieldName,n=i+"X",r="open"+g.capitalize(i)+"X",a=e.axisFieldName,o=a+"Y",s="open"+g.capitalize(a)+"Y";this._xField=n,this._yField=o,this.dataFields[r]&&(this._xOpenField=r),this.dataFields[s]&&(this._yOpenField=s),this.dataFields[s]||this.baseAxis!=e||(this._yOpenField=o),this.dataFields[r]||this.baseAxis!=t||(this._xOpenField=n),this.stacked&&this.baseAxis==t&&(this._xOpenField=n),this.stacked&&this.baseAxis==e&&(this._yOpenField=o),t instanceof h.a&&e instanceof h.a&&(this._yOpenField||(this._yOpenField=o)),this._xValueFields=[],this._yValueFields=[],this.addValueField(t,this._xValueFields,this._xField),this.addValueField(t,this._xValueFields,this._xOpenField),this.addValueField(e,this._yValueFields,this._yField),this.addValueField(e,this._yValueFields,this._yOpenField)}},e.prototype.addValueField=function(t,e,i){t instanceof o.a&&y.hasValue(this.dataFields[i])&&-1==e.indexOf(i)&&e.push(i)},e.prototype.setCategoryAxisField=function(t,e){y.hasValue(this.dataFields[t])||(this.dataFields[t]=e.dataFields.category)},e.prototype.setDateAxisField=function(t,e){y.hasValue(this.dataFields[t])||(this.dataFields[t]=e.dataFields.date)},e.prototype.afterDraw=function(){t.prototype.afterDraw.call(this),this.createMask()},e.prototype.createMask=function(){if(this.mainContainer.mask){var t=this.getMaskPath();d.each(this.axisRanges.iterator(),function(e){e.axisFill.fillPath&&(e.axisFill.validate(),t+=e.axisFill.fillPath)}),this.mainContainer.mask.path=t}},e.prototype.getMaskPath=function(){return this.xAxis&&this.yAxis?x.rectToPath({x:0,y:0,width:this.xAxis.axisLength,height:this.yAxis.axisLength}):""},e.prototype.getAxisField=function(t){return t==this.xAxis?this.xField:t==this.yAxis?this.yField:void 0},e.prototype.validateDataItems=function(){this._maxxX=f.max(1e5,2*this.chart.plotContainer.maxWidth),this._maxxY=f.max(1e5,2*this.chart.plotContainer.maxHeight);var e=this.xAxis,i=this.yAxis;e&&i&&(e.updateAxisBySeries(),i.updateAxisBySeries()),t.prototype.validateDataItems.call(this),e&&i&&(e.postProcessSeriesDataItems(),i.postProcessSeriesDataItems())},e.prototype.validateDataRange=function(){var e=this.xAxis,i=this.yAxis;e&&i&&(e.dataRangeInvalid&&e.validateDataRange(),i.dataRangeInvalid&&i.validateDataRange()),t.prototype.validateDataRange.call(this)},e.prototype.validate=function(){var e=this.xAxis,i=this.yAxis;if(e&&i){e.invalid&&e.validate(),i.invalid&&i.validate(),this.y=i.pixelY,this.x=e.pixelX,this._showBullets=!0;var n=this.minBulletDistance;y.isNumber(n)&&this.baseAxis.axisLength/(this.endIndex-this.startIndex)<n&&(this._showBullets=!1)}this.updateTooltip(),t.prototype.validate.call(this)},Object.defineProperty(e.prototype,"xAxis",{get:function(){if(this.chart){if(!this._xAxis.get()){var t=this.chart.xAxes.getIndex(0);if(!t)throw Error("There are no X axes on chart.");this.xAxis=t}return this._xAxis.get()}},set:function(t){this.setXAxis(t)},enumerable:!0,configurable:!0}),e.prototype.setXAxis=function(t){var e=this._xAxis.get();e!=t&&(e&&(this.dataItemsByAxis.removeKey(e.uid),this._xAxis.dispose(),e.series.removeValue(this)),this._xAxis.set(t,t.registerSeries(this)),this.dataItemsByAxis.setKey(t.uid,new s.a),this.invalidateData())},Object.defineProperty(e.prototype,"yAxis",{get:function(){if(this.chart){if(!this._yAxis.get()){var t=this.chart.yAxes.getIndex(0);if(!t)throw Error("There are no Y axes on chart.");this.yAxis=t}return this._yAxis.get()}},set:function(t){this.setYAxis(t)},enumerable:!0,configurable:!0}),e.prototype.setYAxis=function(t){var e=this._yAxis.get();e!=t&&(e&&(this.dataItemsByAxis.removeKey(e.uid),this._yAxis.dispose(),e.series.removeValue(this)),this._yAxis.set(t,t.registerSeries(this)),t.chart instanceof u.a&&t.chart.handleYAxisSet(this),this.dataItemsByAxis.setKey(t.uid,new s.a),this.invalidateData())},Object.defineProperty(e.prototype,"baseAxis",{get:function(){var t=this.xAxis,e=this.yAxis;return!this._baseAxis&&t&&e&&(e instanceof c.a&&(this._baseAxis=e),t instanceof c.a&&(this._baseAxis=t),e instanceof h.a&&(this._baseAxis=e),t instanceof h.a&&(this._baseAxis=t),this._baseAxis||(this._baseAxis=t)),this._baseAxis},set:function(t){this._baseAxis!=t&&(this._baseAxis=t,this.invalidate())},enumerable:!0,configurable:!0}),e.prototype.setDataSet=function(e){var i=t.prototype.setDataSet.call(this,e);if(i){this._dataSetChanged=!0;var n=this.dataItems;this._tmax.clear(),this._tmin.clear(),this._smax.clear(),this._smin.clear();var r=this.xAxis,a=this.yAxis;this._prevStartIndex=void 0,this._prevEndIndex=void 0,this._startIndex=void 0,this._endIndex=void 0,r instanceof c.a&&r==this.baseAxis&&(this._tmin.setKey(r.uid,n.getIndex(0).dateX.getTime()),this._tmax.setKey(r.uid,n.getIndex(n.length-1).dateX.getTime()),this.dispatch("extremeschanged")),a instanceof c.a&&a==this.baseAxis&&(this._tmin.setKey(a.uid,n.getIndex(0).dateY.getTime()),this._tmax.setKey(a.uid,n.getIndex(n.length-1).dateY.getTime()),this.dispatch("extremeschanged"))}return i},e.prototype.processValues=function(e){t.prototype.processValues.call(this,e);var i=this.xAxis,n=this.yAxis;if(i&&n){var r=this.dataItems,a=1/0,s=-1/0,l=1/0,u=-1/0,h=this.startIndex,p=this.endIndex,d=h,g=p;e||(h=0,p=this.dataItems.length);for(var m=h;m<p;m++){var v=r.getIndex(m);this.getStackValue(v,e);var b=v.getValue("valueX","stack"),x=v.getValue("valueY","stack");a=f.min(v.getMin(this._xValueFields,e,b),a),l=f.min(v.getMin(this._yValueFields,e,x),l),s=f.max(v.getMax(this._xValueFields,e,b),s),u=f.max(v.getMax(this._yValueFields,e,x),u),this.stacked&&(this.baseAxis==i&&(x<l&&(l=x),x>u&&(u=x)),this.baseAxis==n&&(b<a&&(a=b),b>s&&(s=b)))}i.processSeriesDataItems(),n.processSeriesDataItems();var _=i.uid,P=n.uid;if(!(this.xAxis instanceof o.a&&(a==1/0||s==-1/0)||this.yAxis instanceof o.a&&(l==1/0||u==-1/0))){if(!e&&(this._tmin.getKey(_)!=a||this._tmax.getKey(_)!=s||this._tmin.getKey(P)!=l||this._tmax.getKey(P)!=u)){this._tmin.setKey(_,a),this._tmax.setKey(_,s),this._tmin.setKey(P,l),this._tmax.setKey(P,u);var w=this.stackedSeries;w&&(w.isDisposed()?this.stackedSeries=void 0:w.processValues(!1)),this.dispatchImmediately("extremeschanged")}if(h!=d||p!=g){a=1/0,s=-1/0,l=1/0,u=-1/0;for(m=d;m<g;m++){v=r.getIndex(m);this.getStackValue(v,e);b=v.getValue("valueX","stack"),x=v.getValue("valueY","stack");a=f.min(v.getMin(this._xValueFields,e,b),a),l=f.min(v.getMin(this._yValueFields,e,x),l),s=f.max(v.getMax(this._xValueFields,e,b),s),u=f.max(v.getMax(this._yValueFields,e,x),u),this.stacked&&(this.baseAxis==i&&(x<l&&(l=x),x>u&&(u=x)),this.baseAxis==n&&(b<a&&(a=b),b>s&&(s=b)))}}if(!(this.xAxis instanceof o.a&&(a==1/0||s==-1/0)||this.yAxis instanceof o.a&&(l==1/0||u==-1/0))){if((this._smin.getKey(_)!=a||this._smax.getKey(_)!=s||this._smin.getKey(P)!=l||this._smax.getKey(P)!=u)&&(this._smin.setKey(_,a),this._smax.setKey(_,s),this._smin.setKey(P,l),this._smax.setKey(P,u),this.appeared||0!=this.start||1!=this.end||this.dataItems!=this.mainDataSet)){var O=!1;if(n instanceof o.a&&!(n instanceof c.a)){var T=this._tmin.getKey(P);(!y.isNumber(T)||(this.usesShowFields||this._dataSetChanged)&&l<T||this.stackedSeries)&&(this._tmin.setKey(P,l),O=!0);var S=this._tmax.getKey(P);(!y.isNumber(S)||(this.usesShowFields||this._dataSetChanged)&&u>S||this.stackedSeries)&&(this._tmax.setKey(P,u),O=!0)}if(i instanceof o.a&&!(i instanceof c.a)){T=this._tmin.getKey(_);(!y.isNumber(T)||(this.usesShowFields||this._dataSetChanged)&&a<T||this.stackedSeries)&&(this._tmin.setKey(_,a),O=!0);S=this._tmax.getKey(_);(!y.isNumber(S)||(this.usesShowFields||this._dataSetChanged)&&s>S||this.stackedSeries)&&(this._tmax.setKey(_,s),O=!0)}O&&this.dispatchImmediately("extremeschanged"),0==this.start&&1==this.end&&(this._dataSetChanged=!1),this.dispatchImmediately("selectionextremeschanged")}!e&&this.stacked&&this.processValues(!0)}}}},e.prototype.hideTooltip=function(){t.prototype.hideTooltip.call(this),this.returnBulletDefaultState(),this._prevTooltipDataItem=void 0},e.prototype.showTooltipAtPosition=function(t,e){var i;if(this.visible&&!this.isHiding&&!this.isShowing){var n=this._xAxis.get(),r=this._yAxis.get();n==this.baseAxis&&(i=n.getSeriesDataItem(this,n.toAxisPosition(t),this.snapTooltip)),r==this.baseAxis&&(i=r.getSeriesDataItem(this,r.toAxisPosition(e),this.snapTooltip));var a=this.showTooltipAtDataItem(i);if(a)return a;if(!this.tooltipText)return}this.hideTooltip()},e.prototype.getAdjustedXLocation=function(t,e){return t.locations[e]},e.prototype.getAdjustedYLocation=function(t,e){return t.locations[e]},e.prototype.showTooltipAtDataItem=function(t){var e,i,r=this.chart.cursor;if(r&&r.hideSeriesTooltipsOnSelection&&r.selection.visible&&r.downPoint)this.hideTooltip();else if(this.returnBulletDefaultState(t),t&&t.visible){if(this.updateLegendValue(t),this.cursorTooltipEnabled){this.tooltipDataItem=t;var a=this.tooltipXField,o=this.tooltipYField;if(y.hasValue(t[a])&&y.hasValue(t[o])){var s=this.getPoint(t,a,o,this.getAdjustedXLocation(t,a),this.getAdjustedYLocation(t,o));if(s){if(this.tooltipX=s.x,this.tooltipY=s.y,this._prevTooltipDataItem!=t&&(this.dispatchImmediately("tooltipshownat",{type:"tooltipshownat",target:this,dataItem:t}),this._prevTooltipDataItem=t),this.cursorHoverEnabled)try{for(var l=Object(n.g)(t.sprites),u=l.next();!u.done;u=l.next()){var h=u.value;!h.parent.visible||h.isHidden||h.__disabled||h.disabled||h.isHiding||(h.isHover=!0)}}catch(t){e={error:t}}finally{try{u&&!u.done&&(i=l.return)&&i.call(l)}finally{if(e)throw e.error}}return this.showTooltip()?g.spritePointToSvg({x:s.x,y:s.y},this):void 0}}}}else this.updateLegendValue(t,!0)},e.prototype.returnBulletDefaultState=function(t){var e,i;if(this._prevTooltipDataItem&&this._prevTooltipDataItem!=t)try{for(var r=Object(n.g)(this._prevTooltipDataItem.sprites),a=r.next();!a.done;a=r.next()){var o=a.value;o.isDisposed()?this._prevTooltipDataItem=void 0:o.isHover=!1}}catch(t){e={error:t}}finally{try{a&&!a.done&&(i=r.return)&&i.call(r)}finally{if(e)throw e.error}}},e.prototype.shouldCreateBullet=function(t,e){var i=e.xField;y.hasValue(i)||(i=this.xField);var n=e.yField;if(y.hasValue(n)||(n=this.yField),this.xAxis instanceof o.a&&!t.hasValue([i])||this.yAxis instanceof o.a&&!t.hasValue([n]))return!1;if(e.disabled){var r=e.propertyFields.disabled,a=t.dataContext;return!(!a||!1!==a[r])}return!0},e.prototype.updateTooltip=function(){this.hideTooltipWhileZooming||!this.tooltip||this.tooltip.isHidden||this.isHiding||this.isHidden||!this.tooltipDataItem||this.showTooltipAtDataItem(this.tooltipDataItem)},e.prototype.positionBullet=function(e){t.prototype.positionBullet.call(this,e);var i=e.dataItem,n=e.xField;y.hasValue(n)||(n=this.xField);var r=e.yField;y.hasValue(r)||(r=this.yField);var a=this.xAxis,s=this.yAxis;if(a instanceof o.a&&!i.hasValue([n])||s instanceof o.a&&!i.hasValue([r]))e.visible=!1;else{var l=this.getBulletLocationX(e,n),u=this.getBulletLocationY(e,r);if(this.getPoint(i,n,r,l,u)){var p=this.xOpenField,d=this.yOpenField,f=void 0,g=void 0;if(a instanceof c.a){y.isNumber(l)||(l=0);var v=void 0,b=i.getWorkingValue(n);if(p?v=i.getWorkingValue(p):a==this.baseAxis&&(v=a.baseValue),y.isNumber(v)||(v=b),(v+=S=i.getValue("valueX","stack"))==(b+=S)){var x=a.baseInterval,_=a.dateFormatter;v=m.round(new Date(v),x.timeUnit,x.count,_.firstDayOfWeek,_.utc).getTime(),b=m.add(new Date(v),x.timeUnit,x.count,_.utc).getTime()}var P=void 0;P=a==this.baseAxis?v+(b-v)*l:v+(b-v)*(1-l),f=a.valueToPosition(P)}else if(a instanceof o.a){y.isNumber(l)||(l=0);v=void 0,b=i.getWorkingValue(n);v=p?i.getWorkingValue(p):a.baseValue;P=(v+=S=i.getValue("valueX","stack"))+((b+=S)-v)*(1-l);f=a.valueToPosition(P)}else if(a instanceof h.a){var w=this.getAdjustedXLocation(i,n),O=this.getAdjustedXLocation(i,p);f=a.categoryToPosition(i[n],w);var T=void 0;p&&(T=a.categoryToPosition(i[p],O)),y.isNumber(T)||(T=1),f=T+(f-T)*l}if(s instanceof c.a){y.isNumber(u)||(u=0);v=void 0,b=i.getWorkingValue(r);if(d?v=i.getWorkingValue(d):s==this.baseAxis&&(v=s.baseValue),y.isNumber(v)||(v=b),(v+=S=i.getValue("valueY","stack"))==(b+=S)){x=s.baseInterval,_=s.dateFormatter;v=m.round(new Date(v),x.timeUnit,x.count,_.firstDayOfWeek,_.utc).getTime(),b=m.add(new Date(v),x.timeUnit,x.count,_.utc).getTime()}P=void 0;P=s==this.baseAxis?v+(b-v)*u:v+(b-v)*(1-u),g=s.valueToPosition(P)}else if(s instanceof o.a){y.isNumber(u)||(u=0);var S;v=void 0,b=i.getWorkingValue(r);v=d?i.getWorkingValue(d):s.baseValue;P=(v+=S=i.getValue("valueY","stack"))+((b+=S)-v)*(1-u);g=s.valueToPosition(P)}else if(s instanceof h.a){g=s.categoryToPosition(i[r],u);var C=this.getAdjustedYLocation(i,r),I=this.getAdjustedYLocation(i,d);g=s.categoryToPosition(i[r],C);var k=void 0;d&&(k=s.categoryToPosition(i[d],I)),y.isNumber(k)||(k=1),g=k+(g-k)*u}e.visible=!0,this.positionBulletReal(e,f,g)}else e.visible=!1}},e.prototype.positionBulletReal=function(t,e,i){t.x=this.xAxis.renderer.positionToPoint(e,i).x,t.y=this.yAxis.renderer.positionToPoint(i,e).y},e.prototype.getBulletLocationX=function(t,e){var i=t.locationX,n=t.dataItem;return y.isNumber(i)||(i=n.workingLocations[e]),i},e.prototype.getBulletLocationY=function(t,e){var i=t.locationY,n=t.dataItem;return y.isNumber(i)||(i=n.workingLocations[e]),i},e.prototype.updateStacking=function(){var t=this;this.invalidateDataItems(),this.chart&&this.chart.series.each(function(e){e.baseAxis==t.baseAxis&&(e.stackedSeries=void 0,e.invalidateDataItems(),e.invalidateProcessedData())})},Object.defineProperty(e.prototype,"stacked",{get:function(){return this.getPropertyValue("stacked")},set:function(t){if(this.setPropertyValue("stacked",t,!0)){this.updateStacking();var e,i=this.xAxis,n=this.yAxis;if(!t)i!=this.baseAxis&&i instanceof o.a&&(e=this.xField),n!=this.baseAxis&&n instanceof o.a&&(e=this.yField),e&&this.dataItems.each(function(t){t.setCalculatedValue(e,0,"stack")})}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"snapTooltip",{get:function(){return this.getPropertyValue("snapTooltip")},set:function(t){this.setPropertyValue("snapTooltip",t)},enumerable:!0,configurable:!0}),e.prototype.show=function(e){var i,n=this;this.xAxis instanceof o.a&&this.xAxis!=this.baseAxis&&(i=this._xValueFields),this.yAxis instanceof o.a&&this.yAxis!=this.baseAxis&&(i=this._yValueFields);var r,a=this.startIndex,s=this.endIndex,l=0,u=this.defaultState.transitionDuration;y.isNumber(e)&&(u=e),d.each(d.indexed(this.dataItems.iterator()),function(t){var e=t[0],o=t[1];n.sequencedInterpolation&&u>0&&(l=n.sequencedInterpolationDelay*e+u*(e-a)/(s-a)),r=o.show(u,l,i)}),this.dataSets.each(function(t,e){e!=n.dataItems&&e.each(function(t){t.events.disable(),t.show(0,0,i),t.events.enable()})}),this.mainDataSet!=this.dataItems&&this.mainDataSet.each(function(t){t.events.disable(),t.show(0,0,i),t.events.enable()});var h=t.prototype.show.call(this,e);return r&&!r.isFinished()&&(h=r),this.hidden&&(this.dispatchImmediately("selectionextremeschanged"),this.hidden=!1),h},e.prototype.hide=function(e){var i,n,r=this,a=this.xAxis;a instanceof o.a&&a!=this.baseAxis&&(i=this._xValueFields,n=this.stacked||a.minZoomed<a.baseValue&&a.maxZoomed>a.baseValue||this.stackedSeries?a.baseValue:a.min);var s=this.yAxis;s instanceof o.a&&s!=this.baseAxis&&(i=this._yValueFields,n=this.stacked||s.minZoomed<s.baseValue&&s.maxZoomed>s.baseValue||this.stackedSeries?s.baseValue:s.min);var l=this.startIndex,u=this.endIndex,h=this.hiddenState.transitionDuration;y.isNumber(e)&&(h=e);var c,p=0;d.each(d.indexed(this.dataItems.iterator()),function(t){var e=t[0],a=t[1];0==h?a.hide(0,0,n,i):(r.sequencedInterpolation&&h>0&&(p=r.sequencedInterpolationDelay*e+h*(e-l)/(u-l)),c=a.hide(h,p,n,i))});var f=t.prototype.hide.call(this,h);return f&&!f.isFinished()&&f.delay(p),c&&!c.isFinished()&&(f=c),this.validateDataElements(),f},e.prototype.handleDataItemWorkingValueChange=function(e,i){t.prototype.handleDataItemWorkingValueChange.call(this,e,i);var n=this.baseAxis.series;d.each(n.iterator(),function(t){(t.stacked||t.stackedSeries)&&t.invalidateProcessedData()})},e.prototype.getStackValue=function(t,e){var i=this,n=this.xAxis,r=this.yAxis;if(this.stacked&&n&&r){var a,s=this.chart,l=s.series.indexOf(this);n!=this.baseAxis&&n instanceof o.a&&(a=this.xField),r!=this.baseAxis&&r instanceof o.a&&(a=this.yField),a&&(t.setCalculatedValue(a,0,"stack"),d.eachContinue(s.series.range(0,l).backwards().iterator(),function(o){if(o.xAxis==n&&o.yAxis==r){o.stackedSeries=i;var s=o.dataItems.getIndex(t.index);if(s&&s.hasValue(i._xValueFields)&&s.hasValue(i._yValueFields)){var l=t.getValue(a),u=void 0,h=s.getValue(a)+s.getValue(a,"stack");if(u=e?s.getWorkingValue(a)+s.getValue(a,"stack"):s.getValue(a)+s.getValue(a,"stack"),l>=0&&h>=0||l<0&&h<0)return t.setCalculatedValue(a,u,"stack"),!1}else if(!o.stacked)return!1}return!0}))}},Object.defineProperty(e.prototype,"xField",{get:function(){return this._xField},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"yField",{get:function(){return this._yField},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"xOpenField",{get:function(){return this._xOpenField},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"yOpenField",{get:function(){return this._yOpenField},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipXField",{get:function(){return this._tooltipXField?this._tooltipXField:this._xField},set:function(t){this._tooltipXField=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipYField",{get:function(){return this._tooltipYField?this._tooltipYField:this._yField},set:function(t){this._tooltipYField=t},enumerable:!0,configurable:!0}),e.prototype.min=function(t){return this._tmin.getKey(t.uid)},e.prototype.max=function(t){return this._tmax.getKey(t.uid)},e.prototype.selectionMin=function(t){var e=this._smin.getKey(t.uid);return y.isNumber(e)||(e=this.min(t)),e},e.prototype.selectionMax=function(t){var e=this._smax.getKey(t.uid);return y.isNumber(e)||(e=this.max(t)),e},e.prototype.processConfig=function(e){if(e){if(y.hasValue(e.baseAxis)&&y.isString(e.baseAxis)&&(this.map.hasKey(e.baseAxis)?e.baseAxis=this.map.getKey(e.baseAxis):(this.processingErrors.push("[XYSeries ("+(this.name||"unnamed")+')] No axis with id "'+e.baseAxis+'" found for `baseAxis`.'),delete e.baseAxis)),y.hasValue(e.xAxis)&&y.isString(e.xAxis)&&(this.map.hasKey(e.xAxis)?e.xAxis=this.map.getKey(e.xAxis):(this.processingErrors.push("[XYSeries ("+(this.name||"unnamed")+')] No axis with id "'+e.xAxis+'" found for `xAxis`.'),delete e.xAxis)),y.hasValue(e.yAxis)&&y.isString(e.yAxis)&&(this.map.hasKey(e.yAxis)?e.yAxis=this.map.getKey(e.yAxis):(this.processingErrors.push("[XYSeries ("+(this.name||"unnamed")+')] No axis with id "'+e.yAxis+'" found for `yAxis`.'),delete e.yAxis)),y.hasValue(e.axisRanges)&&y.isArray(e.axisRanges))for(var i=0,n=e.axisRanges.length;i<n;i++){var r=e.axisRanges[i];y.hasValue(r.type)||(r.type="AxisDataItem"),y.hasValue(r.axis)&&y.isString(r.axis)&&this.map.hasKey(r.axis)?r.component=this.map.getKey(r.axis):y.hasValue(r.component)&&y.isString(r.component)&&this.map.hasKey(r.component)&&(r.component=this.map.getKey(r.component))}y.hasValue(e.dataFields)&&y.isObject(e.dataFields)||this.processingErrors.push("`dataFields` is not set for series ["+(this.name||"unnamed")+"]")}t.prototype.processConfig.call(this,e)},e.prototype.getPoint=function(t,e,i,n,r,a,o){if(this.xAxis&&this.yAxis){var s=this.xAxis.getX(t,e,n),l=this.yAxis.getY(t,i,r);return{x:s=f.fitToRange(s,-this._maxxX,this._maxxX),y:l=f.fitToRange(l,-this._maxxY,this._maxxY)}}},e.prototype.updateItemReaderText=function(){if(!this._itemReaderTextChanged){var t="";b.each(this.dataFields,function(e,i){t+="{"+e+"} "}),this.itemReaderText=t,this._itemReaderTextChanged=!1}},Object.defineProperty(e.prototype,"cursorTooltipEnabled",{get:function(){return this.getPropertyValue("cursorTooltipEnabled")},set:function(t){this.setPropertyValue("cursorTooltipEnabled",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cursorHoverEnabled",{get:function(){return this.getPropertyValue("cursorHoverEnabled")},set:function(t){this.setPropertyValue("cursorHoverEnabled",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"excludeFromTotal",{get:function(){return this.getPropertyValue("excludeFromTotal")},set:function(t){this.setPropertyValue("excludeFromTotal",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hideTooltipWhileZooming",{get:function(){return this.getPropertyValue("hideTooltipWhileZooming")},set:function(t){this.setPropertyValue("hideTooltipWhileZooming",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maskBullets",{get:function(){return this.getPropertyValue("maskBullets")},set:function(t){this.setPropertyValue("maskBullets",t);var e=this.chart;e&&(this.bulletsContainer.parent=t?e.bulletsContainer:e.axisBulletsContainer)},enumerable:!0,configurable:!0}),e}(r.a);p.c.registeredClasses.XYSeries=P,p.c.registeredClasses.XYSeriesDataItem=_},Ui9R:function(t,e,i){i("6WsA")("asyncIterator")},UjlR:function(t,e,i){"use strict";var n=i("o3G/"),r=i("tHyI"),a=i("cLsB"),o=function(t,e,i,s,l,u,h,c){for(var p,d=l,f=0,g=!!h&&a(h,c,3);f<s;){if(f in i){if(p=g?g(i[f],f,e):i[f],u>0&&n(p))d=o(t,e,p,r(p.length),d,u-1)-1;else{if(d>=9007199254740991)throw TypeError("Exceed the acceptable array length");t[d]=p}d++}f++}return d};t.exports=o},Ur2B:function(t,e,i){var n=i("5ou3"),r=i("CNF5"),a=i("KslR")("iterator");t.exports=function(t){if(void 0!=t)return t[a]||t["@@iterator"]||r[n(t)]}},UsNi:function(t,e,i){"use strict";var n=i("m4/l"),r=i("58Sn"),a=i("+qIf"),o=i("hD5A"),s=i("MIZb"),l=new a.a,u=i("x79X"),h=i("Tjl+"),c=i("zhwk"),p=i("WYhe"),d=i("Mtpk"),f=i("Qkdp");i.d(e,"a",function(){return g});var g=function(t){function e(){var e=t.call(this)||this;return e.adapter=new u.a(e),e._elements={},e._IOs={},e._content="",e._title="",e._classPrefix="ampopup",e._defaultStyles=!0,e._showCurtain=!1,e._draggable=!0,e._align="center",e._verticalAlign="middle",e._shift={x:0,y:0},e._tempShift={x:0,y:0},e._readerTitle="",e._closable=!0,e._cssLoaded=!1,e._fitTo="window",e.isTemplate=!1,e._sized=!1,e.className="Popup",e}return Object(n.c)(e,t),e.prototype.open=function(){this.container&&(this._elements.wrapper&&this.container.appendChild(this._elements.wrapper),this._elements.curtain&&(this.container.appendChild(this._elements.curtain),this.showCurtain=this.showCurtain),this.positionElement(),this.dispatchImmediately("opened"))},e.prototype.close=function(){this._elements.wrapper&&this._elements.wrapper.parentElement&&this._elements.wrapper.parentElement.removeChild(this._elements.wrapper),this._elements.curtain&&this._elements.curtain.parentElement&&this._elements.curtain.parentElement.removeChild(this._elements.curtain),this.dispatchImmediately("closed"),this.releasePointers()},e.prototype.dispose=function(){this.close(),t.prototype.dispose.call(this)},e.prototype.positionElement=function(t){var e=this;void 0===t&&(t=!0),this._elements.wrapper&&setTimeout(function(){if(e._elements.wrapper){if(t||!e._sized){if(e._elements.wrapper.style.opacity="0.01",e._elements.wrapper.style.left="0",e._elements.wrapper.style.top="0",e._elements.wrapper.style.margin="0 0 0 0",!e._elements.wrapper.style.width){var i=e._elements.wrapper.getBoundingClientRect();e._elements.wrapper.style.width=i.width+"px",e._elements.wrapper.style.height=i.height+"px"}e._sized=!0}setTimeout(function(){if(e._elements.wrapper){var i;switch(!t&&e._sized||!e._bbox?(i=e._elements.wrapper.getBoundingClientRect(),e._elements.wrapper.style.opacity=""):i=e._bbox,e.align){case"left":e._elements.wrapper.style.left="0",e._elements.wrapper.style.right="auto",e._elements.wrapper.style.marginLeft=e.toStyle(e._shift.x+e._tempShift.x);break;case"center":e._elements.wrapper.style.left="50%",e._elements.wrapper.style.right="auto",e._elements.wrapper.style.marginLeft=e.toStyle(Math.round(-i.width/2)+(e._shift.x+e._tempShift.x));break;case"right":e._elements.wrapper.style.left="auto",e._elements.wrapper.style.right="0",e._elements.wrapper.style.marginLeft=e.toStyle(e._shift.x+e._tempShift.x);break;default:e._elements.wrapper.style.left=e.toStyle(e.left)||"auto",e._elements.wrapper.style.right=e.toStyle(e.right)||"auto",e._elements.wrapper.style.marginLeft=e.toStyle(e._shift.x+e._tempShift.x)}switch(e.verticalAlign){case"top":e._elements.wrapper.style.top="0",e._elements.wrapper.style.bottom="auto",e._elements.wrapper.style.marginTop=e.toStyle(e._shift.y+e._tempShift.y);break;case"middle":e._elements.wrapper.style.top="50%",e._elements.wrapper.style.bottom="auto",e._elements.wrapper.style.marginTop=e.toStyle(Math.round(-i.height/2)+(e._shift.y+e._tempShift.y));break;case"bottom":e._elements.wrapper.style.top="auto",e._elements.wrapper.style.bottom="0",e._elements.wrapper.style.marginTop=e.toStyle(e._shift.y+e._tempShift.y);break;default:e._elements.wrapper.style.top=e.toStyle(e.top)||"auto",e._elements.wrapper.style.bottom=e.toStyle(e.bottom)||"auto",e._elements.wrapper.style.marginTop=e.toStyle(e._shift.y+e._tempShift.y)}}},1)}},1)},e.prototype.setupDragging=function(){var t=this;this.draggable?(this._IOs.header.events.has("drag")||this._IOs.header.events.on("drag",function(e){t._tempShift.x=e.shift.x,t._tempShift.y=e.shift.y,t.positionElement(!1)}),this._IOs.header.events.has("dragstop")||this._IOs.header.events.on("dragstop",function(e){t._shift.x+=t._tempShift.x,t._shift.y+=t._tempShift.y,t._tempShift.x=0,t._tempShift.y=0,t.positionElement(!1)})):this._IOs.header&&(Object(c.b)().unprepElement(this._IOs.header),this._IOs.header.events.has("drag")&&this._IOs.header.events.off("drag"),this._IOs.header.events.has("dragstop")&&this._IOs.header.events.off("dragstop"))},e.prototype.toStyle=function(t){return d.hasValue(t)?d.isNumber(t)?t+"px":t.toString():null},Object.defineProperty(e.prototype,"classPrefix",{get:function(){return this.adapter.apply("classPrefix",this._classPrefix)},set:function(t){this._classPrefix=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"classPrefixRaw",{get:function(){return this._classPrefix},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"content",{get:function(){return this.adapter.apply("content",this._content)},set:function(t){this._content!=t&&(this._content=t,this._elements.content||this.createContentElement(),this._elements.content.innerHTML=t,this.positionElement())},enumerable:!0,configurable:!0}),e.prototype.getClassNames=function(){return this.adapter.apply("classNames",{wrapperClass:this.classPrefix+"",headerClass:this.classPrefix+"-header",titleClass:this.classPrefix+"-title",contentClass:this.classPrefix+"-content",insideClass:this.classPrefix+"-inside",curtainClass:this.classPrefix+"-curtain",closeClass:this.classPrefix+"-close"})},e.prototype.createContentElement=function(){if(!this._elements.wrapper){var t=this.getClassNames(),e=document.createElement("div");e.className=t.contentClass,e.style.opacity="0.01";var i=document.createElement("a");i.className=t.closeClass;var n=document.createElement("div");n.className=t.headerClass;var r=document.createElement("div");r.innerHTML=this.title,r.className=t.titleClass,this.title||(r.style.display="none");var a=document.createElement("div");a.className=t.insideClass,a.innerHTML=this.content,this._IOs.wrapper=Object(c.b)().getInteraction(e),this._IOs.header=Object(c.b)().getInteraction(n),this._disposers.push(this._IOs.wrapper),this._IOs.wrapper.events.on("over",this.disablePointers,this),this._IOs.wrapper.events.on("out",this.releasePointers,this),this._IOs.close=Object(c.b)().getInteraction(i),this._disposers.push(this._IOs.close),i.style.visibility="hidden",e.setAttribute("role","dialog"),n.appendChild(i),n.appendChild(r),e.appendChild(n),e.appendChild(a),this.container.appendChild(e),this._elements.wrapper=e,this._elements.header=n,this._elements.content=a,this._elements.title=r,this._elements.close=i,this.defaultStyles&&this.loadDefaultCSS(),this.createCurtainElement(),this.applyEvents(),this.applyReaderSettings(),this.setupDragging()}},Object.defineProperty(e.prototype,"title",{get:function(){return this.adapter.apply("title",this._title)},set:function(t){this._title!=t&&(this._title=t,this._elements.content||this.createContentElement(),this._elements.title.innerHTML=t,this.positionElement(),this.applyReaderSettings())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerTitle",{get:function(){return this.adapter.apply("readerTitle",""!=this._readerTitle?this._readerTitle:this.title)},set:function(t){this._readerTitle!=t&&(this._readerTitle=t,this.applyReaderSettings())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"closable",{get:function(){return this.adapter.apply("closable",this._closable)},set:function(t){t!==this._closable&&(this._closable=t,this.applyEvents())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fitTo",{get:function(){return this.adapter.apply("fitTo",this._fitTo)},set:function(t){t!=this._fitTo&&(this._fitTo=t,this.positionElement())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"defaultStyles",{get:function(){return this.adapter.apply("defaultStyles",this._defaultStyles)},set:function(t){this._defaultStyles!=t&&(this._defaultStyles=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"showCurtain",{get:function(){return this.adapter.apply("showCurtain",this._showCurtain)},set:function(t){this._showCurtain!=t&&(this._showCurtain=t,this._elements.curtain&&(this._elements.curtain.style.display=t?"block":"none"))},enumerable:!0,configurable:!0}),e.prototype.createCurtainElement=function(){var t=this.getClassNames(),e=document.createElement("div");e.className=t.curtainClass,this.container.appendChild(e),this._IOs.curtain=Object(c.b)().getInteraction(e),this._disposers.push(this._IOs.curtain),this._IOs.curtain.events.on("over",this.disablePointers,this),this._IOs.curtain.events.on("out",this.releasePointers,this),e.style.display=this.showCurtain?"block":"none",this._elements.curtain=e},Object.defineProperty(e.prototype,"draggable",{get:function(){return this.adapter.apply("draggable",this._draggable)},set:function(t){this._draggable!=t&&(this._draggable=t,this.setupDragging())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"align",{get:function(){return this.adapter.apply("align",this._align)},set:function(t){this._align!=t&&(this._align=t,this.positionElement())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"verticalAlign",{get:function(){return this.adapter.apply("verticalAlign",this._verticalAlign)},set:function(t){this._verticalAlign!=t&&(this._verticalAlign=t,this.positionElement())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"left",{get:function(){return this.adapter.apply("left",this._left)},set:function(t){this.left!=t&&(this._left=t,this._align="none",this.positionElement())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"right",{get:function(){return this.adapter.apply("right",this._right)},set:function(t){this.right!=t&&(this._right=t,this._align="none",this.positionElement())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"top",{get:function(){return this.adapter.apply("top",this._top)},set:function(t){this.top!=t&&(this._top=t,this._verticalAlign="none",this.positionElement())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bottom",{get:function(){return this.adapter.apply("bottom",this._bottom)},set:function(t){this.bottom!=t&&(this._bottom=t,this._verticalAlign="none",this.positionElement())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"elements",{get:function(){return this._elements},enumerable:!0,configurable:!0}),e.prototype.loadDefaultCSS=function(){this._cssLoaded||(this._disposers.push(function(t){t||(t="ampopup");var e=new s.a,i=e.getFor("text"),n=e.getFor("background");n.alpha=.8;var a=e.getFor("alternativeBackground");return a.alpha=.05,l.insertKeyIfEmpty(t,function(){var e=new o.c([new r.c("."+t,{overflow:"visible",position:"absolute",top:"0",left:"0","z-index":"2000"}),new r.c("."+t+"-curtain",{width:"100%",height:"100%",position:"absolute",top:"0",left:"0","z-index":"2001","background-color":n.hex,opacity:"0.5"}),new r.c("."+t+"-header",{display:"block",width:"100%","min-height":"1.8em",background:a.rgba}),new r.c("."+t+"-title",{"font-weight":"bold","font-size":"110%",padding:"0.5em 1.2em 0.5em 1em"}),new r.c("."+t+"-content",{background:n.hex,"background-color":n.rgba,color:i.hex,display:"inline-block",position:"absolute",top:"0",left:"0","max-width":"90%","max-height":"90%",overflow:"auto","z-index":"2002"}),new r.c("."+t+"-inside",{padding:"1em"}),new r.c("."+t+"-close",{display:"block",position:"absolute",top:"0.3em",right:"0.3em","background-color":"rgb(100, 100, 100)",background:"rgba(100, 100, 100, 0.1) url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyBoZWlnaHQ9IjUxMiIgdmVyc2lvbj0iMSIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHdpZHRoPSI1MTIiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHBhdGggZD0iTTQ0NS4yIDEwOS4ybC00Mi40LTQyLjRMMjU2IDIxMy42IDEwOS4yIDY2LjhsLTQyLjQgNDIuNEwyMTMuNiAyNTYgNjYuOCA0MDIuOGw0Mi40IDQyLjRMMjU2IDI5OC40bDE0Ni44IDE0Ni44IDQyLjQtNDIuNEwyOTguNCAyNTYiLz48L3N2Zz4=) no-repeat center","background-size":"80%",width:"1.2em",height:"1.2em",cursor:"pointer"})]);return new o.a(function(){l.removeKey(t),e.dispose()})}).increment()}(this.classPrefix)),f.each(this._elements,function(t,e){e.style.display=""}),this._cssLoaded=!0)},e.prototype.applyEvents=function(){var t=this;if(this._IOs.close)if(this.closable){this._IOs.close.element.style.visibility="visible";var e=[Object(c.b)().body.events.on("keyup",function(e){p.b.isKey(e.event,"esc")&&t.closable&&t.close()}),this._IOs.close.events.on("hit",function(e){t.close()})];e.push(this._IOs.curtain.events.on("hit",function(e){t.showCurtain&&t.close()})),this._disposers.push(new o.c(e))}else this._IOs.close.element.style.visibility="hidden"},e.prototype.disablePointers=function(){this.sprite&&(this._spriteInteractionsEnabled=this.sprite.interactionsEnabled,this.sprite.interactionsEnabled=!1)},e.prototype.releasePointers=function(){d.hasValue(this._spriteInteractionsEnabled)&&(this.sprite.interactionsEnabled=this._spriteInteractionsEnabled,this._spriteInteractionsEnabled=void 0)},e.prototype.applyReaderSettings=function(){this.elements.wrapper.setAttribute("aria-label",this.readerTitle)},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.container=e.container,this.sprite=e.sprite,this.classPrefix=e.classPrefixRaw,this.content=e.content,this.title=e.title,this.readerTitle=e.readerTitle,this.defaultStyles=e.defaultStyles,this.showCurtain=e.showCurtain,this.align=e.align,this.verticalAlign=e.verticalAlign,this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.adapter.copyFrom(e.adapter)},e}(h.b)},UseD:function(t,e,i){"use strict";var n,r=i("jqyf"),a=i("3sMl"),o=i("vfdp"),s=i("Kg2n"),l=i("JZRr"),u=i("5ou3"),h=i("k2B3"),c=i("z3p0"),p=i("8+rI").f,d=i("Ox5T"),f=i("KJuV"),g=i("KslR"),y=i("vfRf"),m=o.Int8Array,v=m&&m.prototype,b=o.Uint8ClampedArray,x=b&&b.prototype,_=m&&d(m),P=v&&d(v),w=Object.prototype,O=w.isPrototypeOf,T=g("toStringTag"),S=y("TYPED_ARRAY_TAG"),C=r&&!!f&&"Opera"!==u(o.opera),I=!1,k={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},D=function(t){return s(t)&&l(k,u(t))};for(n in k)o[n]||(C=!1);if((!C||"function"!=typeof _||_===Function.prototype)&&(_=function(){throw TypeError("Incorrect invocation")},C))for(n in k)o[n]&&f(o[n],_);if((!C||!P||P===w)&&(P=_.prototype,C))for(n in k)o[n]&&f(o[n].prototype,P);if(C&&d(x)!==P&&f(x,P),a&&!l(P,T))for(n in I=!0,p(P,T,{get:function(){return s(this)?this[S]:void 0}}),k)o[n]&&h(o[n],S,n);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:C,TYPED_ARRAY_TAG:I&&S,aTypedArray:function(t){if(D(t))return t;throw TypeError("Target is not a typed array")},aTypedArrayConstructor:function(t){if(f){if(O.call(_,t))return t}else for(var e in k)if(l(k,n)){var i=o[e];if(i&&(t===i||O.call(i,t)))return t}throw TypeError("Target is not a typed array constructor")},exportTypedArrayMethod:function(t,e,i){if(a){if(i)for(var n in k){var r=o[n];r&&l(r.prototype,t)&&delete r.prototype[t]}P[t]&&!i||c(P,t,i?e:C&&v[t]||e)}},exportTypedArrayStaticMethod:function(t,e,i){var n,r;if(a){if(f){if(i)for(n in k)(r=o[n])&&l(r,t)&&delete r[t];if(_[t]&&!i)return;try{return c(_,t,i?e:C&&m[t]||e)}catch(t){}}for(n in k)!(r=o[n])||r[t]&&!i||c(r,t,e)}},isView:function(t){var e=u(t);return"DataView"===e||l(k,e)},isTypedArray:D,TypedArray:_,TypedArrayPrototype:P}},Uskt:function(t,e,i){var n=i("vfdp"),r=i("jnLg").trim,a=i("DUr5"),o=n.parseInt,s=/^[+-]?0[Xx]/,l=8!==o(a+"08")||22!==o(a+"0x16");t.exports=l?function(t,e){var i=r(String(t));return o(i,e>>>0||(s.test(i)?16:10))}:o},Uslz:function(t,e,i){"use strict";i.d(e,"a",function(){return c});var n=i("m4/l"),r=i("C6dT"),a=i("hD5A"),o=i("ND2/"),s=i("vMqJ"),l=i("aCit"),u=i("8ZqG"),h=i("MIZb"),c=function(t){function e(){var e=t.call(this)||this;e._axis=new a.d,e.dataItems=new s.b,e.className="AxisBreak",e.breakSize=.01,e.marginLeft=-5,e.marginRight=-5,e.marginTop=-5,e.marginBottom=-5;var i=new h.a,n=new o.a;n.fill=i.getFor("background"),n.stroke=Object(u.c)(),n.fillOpacity=.9,n.zIndex=0,e._fillShape=n;var r=new o.a;r.fill=Object(u.c)(),r.stroke=i.getFor("grid"),r.strokeOpacity=.3,r.zIndex=1,e._startLine=r;var l=new o.a;return l.fill=Object(u.c)(),l.stroke=Object(u.c)("#000000"),l.strokeOpacity=.3,l.zIndex=2,e._endLine=l,e._disposers.push(e._axis),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.dispose=function(){t.prototype.dispose.call(this),this._fillShape&&this._fillShape.dispose(),this._startLine&&this._startLine.dispose(),this._endLine&&this._endLine.dispose()},Object.defineProperty(e.prototype,"startLine",{get:function(){return this._startLine},set:function(t){this._startLine&&this._startLine.dispose(),this._startLine=t,this.addBreakSprite(t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endLine",{get:function(){return this._endLine},set:function(t){this._endLine&&this._endLine.dispose(),this._endLine=t,this.addBreakSprite(t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fillShape",{get:function(){return this._fillShape},set:function(t){this._fillShape&&this._fillShape.dispose(),this._fillShape=t,this.addBreakSprite(t)},enumerable:!0,configurable:!0}),e.prototype.addBreakSprite=function(t){t.parent=this,t.isMeasured=!1,this._disposers.push(t)},Object.defineProperty(e.prototype,"axis",{get:function(){return this._axis.get()},set:function(t){if(this._axis.get()!==t){this._axis.set(t,t.renderer.gridContainer.events.on("transformed",this.invalidate,this,!1)),t.renderer.createBreakSprites(this);var e=t.axisBreaks.template;this.startLine.copyFrom(e.startLine),this.endLine.copyFrom(e.endLine),this.fillShape.copyFrom(e.fillShape)}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"breakSize",{get:function(){return this.getPropertyValue("breakSize")},set:function(t){this.setPropertyValue("breakSize",t)&&this.axis&&(this.axis.invalidate(),this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startPoint",{get:function(){var t=this.axis.renderer;if(t)return t.positionToPoint(this.startPosition)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endPoint",{get:function(){var t=this.axis.renderer;if(t)return t.positionToPoint(this.endPosition)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startPosition",{get:function(){},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endPosition",{get:function(){},enumerable:!0,configurable:!0}),e.prototype.draw=function(){(t.prototype.draw.call(this),this.axis)&&this.axis.renderer.updateBreakElement(this)},Object.defineProperty(e.prototype,"startValue",{get:function(){return this.getPropertyValue("startValue")},set:function(t){this.setPropertyValue("startValue",t)&&this.axis&&(this.axis.invalidate(),this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endValue",{get:function(){return this.getPropertyValue("endValue")},set:function(t){this.setPropertyValue("endValue",t)&&this.axis&&(this.axis.invalidate(),this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),e}(r.a);l.c.registeredClasses.AxisBreak=c},VAFc:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("ohjg"),a=i("8ZqG"),o=i("aCit"),s=function(t){function e(){var e=t.call(this)||this;return e.className="DropShadowFilter",e.color=Object(a.c)("#000"),e.feGaussianBlur=e.paper.add("feGaussianBlur"),e.feGaussianBlur.attr({result:"blurOut",in:"SourceGraphic"}),e.filterPrimitives.push(e.feGaussianBlur),e.feOffset=e.paper.add("feOffset"),e.feOffset.attr({result:"offsetBlur"}),e.filterPrimitives.push(e.feOffset),e.feFlood=e.paper.add("feFlood"),e.feFlood.attr({"flood-color":e.color}),e.filterPrimitives.push(e.feFlood),e.feComposite=e.paper.add("feComposite"),e.feComposite.attr({in2:"offsetBlur",operator:"in"}),e.filterPrimitives.push(e.feComposite),e.feMerge=e.paper.addGroup("feMerge"),e.feMerge.add(e.paper.add("feMergeNode")),e.feMerge.add(e.paper.add("feMergeNode").attr({in:"SourceGraphic"})),e.filterPrimitives.push(e.feMerge),e.width=200,e.height=200,e.blur=1.5,e.dx=3,e.dy=3,e.opacity=.5,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"color",{get:function(){return this.properties.color},set:function(t){this.properties.color=t,this.feFlood&&this.feFlood.attr({"flood-color":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"opacity",{get:function(){return this.properties.opacity},set:function(t){this.properties.opacity=t,this.feFlood.attr({"flood-opacity":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dx",{get:function(){return this.properties.dx},set:function(t){this.properties.dx=t,this.feOffset.attr({dx:t/this.scale})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dy",{get:function(){return this.properties.dy},set:function(t){this.properties.dy=t,this.feOffset.attr({dy:t/this.scale})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"blur",{get:function(){return this.properties.blur},set:function(t){this.properties.blur=t,this.feGaussianBlur.attr({stdDeviation:t/this.scale})},enumerable:!0,configurable:!0}),e.prototype.updateScale=function(){this.dx=this.dx,this.dy=this.dy,this.blur=this.blur},e}(r.a);o.c.registeredClasses.DropShadowFilter=s},VB2N:function(t,e,i){"use strict";i.d(e,"b",function(){return f}),i.d(e,"a",function(){return g});var n=i("m4/l"),r=i("AAkI"),a=i("k6kv"),o=i("OXm9"),s=i("aCit"),l=i("+qIf"),u=i("+K/x"),h=i("Gg2j"),c=i("Mtpk"),p=i("Wglt"),d=i("x79X"),f=function(t){function e(){var e=t.call(this)||this;return e.seriesDataItems={},e.className="CategoryAxisDataItem",e.text="{category}",e.locations.category=0,e.locations.endCategory=1,e.deltaPosition=0,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"adapter",{get:function(){return this._adapterO||(this._adapterO=new d.a(this)),this._adapterO},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"category",{get:function(){return this._adapterO&&this._adapterO.isEnabled("category")?this._adapterO.apply("category",this.properties.category):this.properties.category},set:function(t){this.setProperty("category",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endCategory",{get:function(){return this.properties.endCategory},set:function(t){this.setProperty("endCategory",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"deltaPosition",{get:function(){return this.properties.deltaCoordinate},set:function(t){t!=this.properties.deltaCoordinate&&(this.setProperty("deltaCoordinate",t),this.component&&(this.component.invalidateDataItems(),this.component.invalidateSeries()))},enumerable:!0,configurable:!0}),e}(r.b),g=function(t){function e(){var e=t.call(this)||this;return e.dataItemsByCategory=new l.a,e.className="CategoryAxis",e.axisFieldName="category",e._lastDataItem=e.createDataItem(),e._lastDataItem.component=e,e._disposers.push(e._lastDataItem),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.createDataItem=function(){return new f},e.prototype.createAxisBreak=function(){return new u.a},e.prototype.processSeriesDataItem=function(e,i){t.prototype.processSeriesDataItem.call(this,e,i);var n=e["category"+this.axisLetter];if(c.hasValue(n)){var r=this.dataItemsByCategory.getKey(n);if(r){var a=e.component.uid,o=r.seriesDataItems[a];o||(o=[],r.seriesDataItems[a]=o),o.push(e)}}else e.component.dataItems.remove(e)},e.prototype.validateDataRange=function(){var i=this;t.prototype.validateDataRange.call(this),p.each(this._series.iterator(),function(t){if(t.xAxis instanceof e&&t.yAxis instanceof e)t.invalidateDataRange();else{var n=i.positionToIndex(i.start),r=i.positionToIndex(i.end);r>=i.dataItems.length&&r--;for(var a=t.uid,o=void 0,s=void 0,l=n;l<=r;l++){var u=i.dataItems.getIndex(l);if(u){var h=u.seriesDataItems[a];if(h)for(var p=0;p<h.length;p++){var d=h[p];if(d){var f=d.index;(!c.isNumber(o)||f<o)&&(o=f),(!c.isNumber(s)||f>s)&&(s=f)}}}}c.isNumber(o)?t.startIndex=o:t.start=i.start,c.isNumber(s)?t.endIndex=s+1:t.end=i.end,i._axisBreaks&&i._axisBreaks.length>0&&t.invalidateDataRange()}})},e.prototype.validate=function(){var e=this;t.prototype.validate.call(this);var i=this.dataItems.length,n=h.fitToRange(Math.floor(this.start*i-1),0,i),r=h.fitToRange(Math.ceil(this.end*i),0,i);this.renderer.invalid&&this.renderer.validate();var a=this.renderer.axisLength/this.renderer.minGridDistance,o=Math.min(this.dataItems.length,Math.ceil((r-n)/a));if(this._startIndex=Math.floor(n/o)*o,this._endIndex=Math.ceil(this.end*i),this.fixAxisBreaks(),this._startIndex==this._endIndex&&this._endIndex++,this._frequency=o,!(this.axisLength<=0)){this.maxZoomFactor=this.dataItems.length,this.dataItems.length<=0&&(this.maxZoomFactor=1),this.resetIterators(),n=h.max(0,this._startIndex-this._frequency),r=h.min(this.dataItems.length,this._endIndex+this._frequency);for(var s=0,l=0;l<n;l++){(c=this.dataItems.getIndex(l)).__disabled=!0}l=r;for(var u=this.dataItems.length;l<u;l++){(c=this.dataItems.getIndex(l)).__disabled=!0}for(l=n;l<r;l++)if(l<this.dataItems.length){var c=this.dataItems.getIndex(l);if(l/this._frequency==Math.round(l/this._frequency))this.isInBreak(l)||(this.appendDataItem(c),this.validateDataElement(c,s)),s++;else c.__disabled=!0}if(this.appendDataItem(this._lastDataItem),this.validateDataElement(this._lastDataItem,s+1,this.dataItems.length),this._axisBreaks)this._axisBreaks.each(function(t){var i=t.adjustedStartValue,n=t.adjustedEndValue;if(h.intersect({start:i,end:n},{start:e._startIndex,end:e._endIndex}))for(var r=h.fitToRange(Math.ceil(e._frequency/t.breakSize),1,n-i),a=0,o=i;o<=n;o+=r){var s=e.dataItems.getIndex(o);e.appendDataItem(s),e.validateDataElement(s,a),a++}});this.validateBreaks(),this.validateAxisRanges(),this.ghostLabel.invalidate(),this.renderer.invalidateLayout()}},e.prototype.validateDataElement=function(e,i,n){t.prototype.validateDataElement.call(this,e),e.itemIndex=this._axisItemCount,this._axisItemCount++;var r=this.renderer;c.isNumber(n)||(n=this.categoryToIndex(e.category));var s=this.categoryToIndex(e.endCategory);c.isNumber(s)||(s=n);var l,u,h,p=this.indexToPosition(n,e.locations.category),d=this.indexToPosition(s,e.locations.endCategory);e.position=p,e.isRange&&(l=s,u=this.indexToPosition(n,e.locations.category),h=this.indexToPosition(l,e.locations.endCategory)),e.point=r.positionToPoint(p);var f=e.tick;f&&!f.disabled&&r.updateTickElement(f,p,d);var g=e.grid;g&&!g.disabled&&r.updateGridElement(g,p,d);var y=e.label;y&&!y.disabled&&(e.isRange&&void 0!=y.text||(e.text=e.text),r.updateLabelElement(y,p,d),(r instanceof o.a&&e.label.measuredWidth>this.ghostLabel.measuredWidth||r instanceof a.a&&e.label.measuredHeight>this.ghostLabel.measuredHeight)&&(e.label.html?this.ghostLabel.html=e.label.currentText:this.ghostLabel.text=e.label.currentText));var m=e.axisFill;m&&!m.disabled&&(e.isRange||(l=n+this._frequency,u=this.indexToPosition(n,m.location),h=this.indexToPosition(l,m.location)),r.updateFillElement(m,u,h),e.isRange||this.fillRule(e,i)),e.bullet&&r.updateBullet(e.bullet,p,d);var v=e.mask;v&&r.updateFillElement(v,u,h)},e.prototype.disposeData=function(){this.dataItemsByCategory.clear(),t.prototype.disposeData.call(this)},e.prototype.processDataItem=function(e,i){e&&(t.prototype.processDataItem.call(this,e,i),c.hasValue(e.category)&&this.dataItemsByCategory.setKey(e.category,e))},e.prototype.getDataItem=function(t){var e=t[this.dataFields.category];if(c.hasValue(e)){var i=this.dataItemsByCategory.getKey(e);return i||this.dataItems.create()}},e.prototype.indexToPosition=function(t,e){c.isNumber(e)||(e=.5);var i=this.startIndex,n=this.endIndex,r=this.adjustDifference(i,n),a=this.startLocation;if(r-=a,r-=1-this.endLocation,this._axisBreaks){var o=this._axisBreaks;p.eachContinue(o.iterator(),function(e){var r=e.adjustedStartValue,a=e.adjustedEndValue;if(t<i)return!1;if(h.intersect({start:r,end:a},{start:i,end:n})){r=Math.max(i,r),a=Math.min(n,a);var o=e.breakSize;t>a?i+=(a-r)*(1-o):t<r||(t=r+(t-r)*o)}return!0})}var s=0,l=this.dataItems.getIndex(t);return l&&(s=l.deltaPosition),h.round(s+(t+e-a-i)/r,5)},e.prototype.categoryToPosition=function(t,e){var i=this.categoryToIndex(t);return this.indexToPosition(i,e)},e.prototype.categoryToPoint=function(t,e){var i=this.categoryToPosition(t,e),n=this.renderer.positionToPoint(i),r=this.renderer.positionToAngle(i);return{x:n.x,y:n.y,angle:r}},e.prototype.anyToPoint=function(t,e){return this.categoryToPoint(t,e)},e.prototype.anyToPosition=function(t,e){return this.categoryToPosition(t,e)},e.prototype.categoryToIndex=function(t){if(c.hasValue(t)){var e=this.dataItemsByCategory.getKey(t);if(e)return e.index}},e.prototype.zoomToCategories=function(t,e){this.zoomToIndexes(this.categoryToIndex(t),this.categoryToIndex(e)+1)},e.prototype.getAnyRangePath=function(t,e,i,n){var r=this.categoryToPosition(t,i),a=this.categoryToPosition(e,n);return this.getPositionRangePath(r,a)},e.prototype.roundPosition=function(t,e){var i=this.positionToIndex(t);return this.indexToPosition(i,e)},e.prototype.getFirstSeriesDataItem=function(t,e){for(var i=0;i<t.dataItems.length;i++){var n=t.dataItems.getIndex(i);if(t.xAxis==this&&n.categoryX==e)return n;if(t.yAxis==this&&n.categoryY==e)return n}},e.prototype.getLastSeriesDataItem=function(t,e){for(var i=t.dataItems.length-1;i>=0;i--){var n=t.dataItems.getIndex(i);if(t.xAxis==this&&n.categoryX==e)return n;if(t.yAxis==this&&n.categoryY==e)return n}},e.prototype.getSeriesDataItemByCategory=function(t,e){var i,n=this;return e.dataItems.each(function(r){e.xAxis==n?r.categoryX==t&&(i=r):e.yAxis==n&&r.categoryY==t&&(i=r)}),i},e.prototype.getSeriesDataItem=function(t,e,i){var n=this;if(c.isNumber(e)){var r=this.positionToIndex(e);r>=this.dataItems.length&&r--;var a=this.dataItems.getIndex(r);if(a){var o,s=a.category,l=t.dataItems.getIndex(r);if(l){if(t.xAxis==this&&l.categoryX==s)return l;if(t.yAxis==this&&l.categoryY==s)return l}return t.dataItems.each(function(e){t.xAxis==n&&e.categoryX==s&&(o||(o=e),Math.abs(r-o.index)>Math.abs(r-e.index)&&(o=e)),t.yAxis==n&&e.categoryY==s&&(o||(o=e),Math.abs(r-o.index)>Math.abs(r-e.index)&&(o=e))}),o}}},e.prototype.getX=function(t,e,i,n,r){var a=this.getPositionX(t,e,i,n,r);return c.isNaN(a)?this.basePoint.x:this.renderer.positionToPoint(a).x},e.prototype.getPositionX=function(t,e,i,n,r){var a;return c.hasValue(e)&&(a=this.categoryToPosition(t.categories[e],i)),r&&(a=h.fitToRange(a,r.start,r.end)),a},e.prototype.getY=function(t,e,i,n,r){var a=this.getPositionY(t,e,i,n,r);return c.isNaN(a)?this.basePoint.y:this.renderer.positionToPoint(a).y},e.prototype.getPositionY=function(t,e,i,n,r){var a;return c.hasValue(e)&&(a=this.categoryToPosition(t.categories[e],i)),r&&(a=h.fitToRange(a,r.start,r.end)),a},e.prototype.getAngle=function(t,e,i,n,r){var a=this.categoryToPosition(t.categories[e],i);return r&&(a=h.fitToRange(a,r.start,r.end)),this.positionToAngle(a)},e.prototype.getCellStartPosition=function(t){return this.roundPosition(t,0)},e.prototype.getCellEndPosition=function(t){return this.roundPosition(t,1)},e.prototype.getTooltipText=function(t){var e=this.dataItems.getIndex(this.positionToIndex(t));if(e)return this.tooltipDataItem=e,this.tooltip.dataItem=e,this.tooltipText?this.tooltipText:this._adapterO?this._adapterO.apply("getTooltipText",e.category):e.category},e.prototype.positionToIndex=function(t){(t=h.round(t,10))<0&&(t=0),t>1&&(t=1);var e=this.startIndex,i=this.endIndex,n=i-e-this.startLocation-(1-this.endLocation);t+=1/n*this.startLocation;var r=null;if(this._axisBreaks){var a=this._axisBreaks;p.eachContinue(a.iterator(),function(a){var o=a.startPosition,s=a.endPosition,l=a.adjustedStartValue,u=a.adjustedEndValue;l=h.max(l,e),u=h.min(u,i);var c=a.breakSize;if(n-=(u-l)*(1-c),t>s)e+=(u-l)*(1-c);else if(!(t<o)){var p=(t-o)/(s-o);return r=l+Math.round(p*(u-l)),!1}return!0})}return c.isNumber(r)||(r=Math.floor(t*n+e)),r>=this.dataItems.length&&(r=this.dataItems.length-1),r},e.prototype.positionToCategory=function(t){return this.getPositionLabel(t)},e.prototype.getPositionLabel=function(t){var e=this.dataItems.getIndex(this.positionToIndex(t));if(e)return e.category},Object.defineProperty(e.prototype,"basePoint",{get:function(){return this.renderer.positionToPoint(1)},enumerable:!0,configurable:!0}),e.prototype.initRenderer=function(){t.prototype.initRenderer.call(this),this.renderer.baseGrid.disabled=!0},Object.defineProperty(e.prototype,"frequency",{get:function(){return this._frequency},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sortBySeries",{get:function(){return this.getPropertyValue("sortBySeries")},set:function(t){this.setPropertyValue("sortBySeries",t,!0)},enumerable:!0,configurable:!0}),e.prototype.processConfig=function(e){e&&c.hasValue(e.sortBySeries)&&c.isString(e.sortBySeries)&&(this.map.hasKey(e.sortBySeries)?e.sortBySeries=this.map.getKey(e.sortBySeries):(this.addDelayedMap("sortBySeries",e.sortBySeries),delete e.sortBySeries)),t.prototype.processConfig.call(this,e)},e}(r.a);s.c.registeredClasses.CategoryAxis=g,s.c.registeredClasses.CategoryAxisDataItem=f},VGgz:function(t,e,i){"use strict";i.d(e,"a",function(){return l}),i.d(e,"c",function(){return u}),i.d(e,"b",function(){return h}),i.d(e,"d",function(){return c});var n=i("m4/l"),r=i("o0Lc"),a=i("hJ5i"),o=i("Wglt"),s=i("Mtpk"),l=function(){function t(t){this._values=[],this.events=new r.a,null!=t&&this.setAll(t)}return Object.defineProperty(t.prototype,"values",{get:function(){return this._values},enumerable:!0,configurable:!0}),t.prototype._insert=function(t){return this._values.push(t),this._values.length-1},Object.defineProperty(t.prototype,"length",{get:function(){return this._values.length},enumerable:!0,configurable:!0}),t.prototype.indexOf=function(t){return a.indexOf(this._values,t)},t.prototype.contains=function(t){return-1!==this.indexOf(t)},t.prototype.getIndex=function(t){return this._values[t]},Object.defineProperty(t.prototype,"first",{get:function(){return this._values[0]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"last",{get:function(){return this._values[this._values.length-1]},enumerable:!0,configurable:!0}),t.prototype.insert=function(t){var e=this._insert(t);this.events.isEnabled("inserted")&&this.events.dispatchImmediately("inserted",{type:"inserted",target:this,index:e,newValue:t})},t.prototype.remove=function(t){var e=this.indexOf(t);if(-1!==e){var i=this._values[e];a.removeIndex(this._values,e),this.events.isEnabled("removed")&&this.events.dispatchImmediately("removed",{type:"removed",target:this,index:e,oldValue:i})}},t.prototype.setAll=function(t){var e=this;a.eachReverse(this._values,function(t,i){e._values.pop(),e.events.isEnabled("removed")&&e.events.dispatchImmediately("removed",{type:"removed",target:e,index:i,oldValue:t})}),a.each(t,function(t){e.insert(t)})},t.prototype.clear=function(){this.setAll([])},t.prototype.slice=function(e,i){var n=new t;return n._values=this._values.slice(e,i),n},t.prototype.findClosestIndex=function(t,e,i){void 0===i&&(i="any");var n,r,a=-1,l=0;return o.eachContinue(this.iterator(),function(o){var u=e(o);if("any"===i){if(u===t)return a=l,!1;var h=Math.abs(t-u);(!s.hasValue(r)||r>h)&&(a=l,n=u,r=h)}else"left"===i&&u<t?(!s.hasValue(n)||n<u)&&(a=l,n=u):"right"===i&&u>=t&&(!s.hasValue(n)||n>=u)&&(a=l,n=u);return++l,!0}),-1===a&&("left"===i?a=0:"right"===i&&(a=this.length-1)),a},t.prototype.iterator=function(){return o.fromArray(this._values)},t.prototype[Symbol.iterator]=function(){var t,e;return Object(n.d)(this,function(i){switch(i.label){case 0:t=this._values.length,e=0,i.label=1;case 1:return e<t?[4,this._values[e]]:[3,4];case 2:i.sent(),i.label=3;case 3:return++e,[3,1];case 4:return[2]}})},t.prototype.each=function(t){a.each(this._values,t)},t}(),u=function(t){function e(e){var i=t.call(this)||this;return i._ordering=e,i}return Object(n.c)(e,t),e.prototype._insert=function(t){var e=a.getSortedIndex(this._values,this._ordering,t).index;return a.insertIndex(this._values,e,t),e},e.prototype.indexOf=function(t){var e=a.getSortedIndex(this._values,this._ordering,t),i=e.found,n=e.index;return i?n:-1},e.prototype.update=function(t){var e=a.indexOf(this._values,t);if(-1!==e){var i=this._values.length-1;(0===e||this._ordering(this._values[e-1],t)<0)&&(e===i||this._ordering(t,this._values[e+1])<0)||(a.removeIndex(this._values,e),this._insert(t))}},e}(l),h=function(t){function e(e){var i=t.call(this)||this;return i.template=e,i}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"template",{get:function(){return this._template},set:function(t){t.isTemplate=!0,this._template=t},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(t){var e=this;o.each(t.iterator(),function(t){e.insert(t.clone())})},e.prototype.slice=function(t,i){var n=new e(this.template);return n._values=this._values.slice(t,i),n},e.prototype.create=function(t){var e=null!=t?new t:this.template.clone();return this.insert(e),e},e}(l),c=function(t){function e(e,i){var n=t.call(this,i)||this;return n.template=e,n}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"template",{get:function(){return this._template},set:function(t){t.isTemplate=!0,this._template=t},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(t){var e=this;o.each(t.iterator(),function(t){e.insert(t.clone())})},e.prototype.create=function(t){var e=null!=t?new t:this.template.clone();return this.insert(e),e},e}(u)},VIOb:function(t,e,i){"use strict";var n=i("m4/l"),r=i("aCit"),a=i("Y9w3"),o=i("hD5A"),s=i("vMqJ"),l=i("C6dT"),u=i("p9TX"),h=i("aGXA"),c=i("Vs7R"),p=i("MIZb"),d=i("tjMS"),f=i("hGwe"),g=function(t){function e(){var e=t.call(this)||this;e.className="Grip";var i=new p.a;e.layout="absolute",e.padding(10,10,10,10),e.margin(3,3,3,3),e.background.fillOpacity=.3,e.background.cornerRadius(10,10,10,10);var n=new c.a;n.element=e.paper.add("path");var r=f.moveTo({x:-6,y:0});return r+=f.lineTo({x:6,y:0}),r+=f.moveTo({x:-8,y:-6}),r+=f.lineTo({x:0,y:-12}),r+=f.lineTo({x:8,y:-6}),r+=f.moveTo({x:-8,y:6}),r+=f.lineTo({x:0,y:12}),r+=f.lineTo({x:8,y:6}),n.path=r,n.strokeWidth=2,n.fillOpacity=0,n.pixelPerfect=!0,n.padding(0,4,0,4),n.stroke=i.getFor("text"),n.strokeOpacity=.7,n.align="center",n.valign="middle",e.icon=n,e.label.dispose(),e.label=void 0,e.position="right",e.autoHideDelay=3e3,e.events.on("shown",function(t){e._autoHideTimeout&&e._autoHideTimeout.dispose(),e.autoHideDelay&&(e._autoHideTimeout=e.setTimeout(function(){e.hide()},e.autoHideDelay))}),e.events.on("down",function(t){e._autoHideTimeout&&e._autoHideTimeout.dispose()}),e.events.on("out",function(t){e.autoHideDelay&&(e._autoHideTimeout=e.setTimeout(function(){e.hide()},e.autoHideDelay))}),e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"position",{get:function(){return this.getPropertyValue("position")},set:function(t){if(this.setPropertyValue("position",t))switch(t){case"left":this.align="left",this.valign="middle",this.horizontalCenter="left",this.verticalCenter="middle",this.icon.rotation=0,this.width=void 0,this.height=Object(d.c)(30);break;case"right":this.align="right",this.valign="middle",this.horizontalCenter="right",this.verticalCenter="middle",this.icon.rotation=0,this.width=void 0,this.height=Object(d.c)(30);break;case"top":this.align="center",this.valign="top",this.horizontalCenter="middle",this.verticalCenter="top",this.icon.rotation=90,this.width=Object(d.c)(30),this.height=void 0;break;case"bottom":this.align="center",this.valign="bottom",this.horizontalCenter="middle",this.verticalCenter="bottom",this.icon.rotation=90,this.width=Object(d.c)(30),this.height=void 0;break;default:this.align="center",this.valign="middle",this.horizontalCenter="middle",this.verticalCenter="middle",this.icon.rotation=90,this.width=Object(d.c)(30),this.height=void 0}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoHideDelay",{get:function(){return this.getPropertyValue("autoHideDelay")},set:function(t){this.setPropertyValue("autoHideDelay",t)},enumerable:!0,configurable:!0}),e}(h.a);r.c.registeredClasses.Grip=g;var y=i("A6AV"),m=i("Wglt"),v=i("Mtpk"),b=i("TGuK");i.d(e,"b",function(){return x}),i.d(e,"a",function(){return _});var x=function(t){function e(){var e=t.call(this)||this;return e.className="ChartDataItem",e.applyTheme(),e}return Object(n.c)(e,t),e}(y.a),_=function(t){function e(){var i=t.call(this)||this;if(i._legend=new o.d,i.constructor===e)throw new Error("'Chart' cannot be instantiated directly. Please use a specific chart type.");i.className="Chart";var n=new u.a;i.titles=new s.e(n),i._disposers.push(new s.c(i.titles)),i._disposers.push(n),i.width=Object(d.c)(100),i.height=Object(d.c)(100),i.layout="vertical";var r=i.createChild(l.a);r.shouldClone=!1,r.layout="vertical",r.width=Object(d.c)(100),r.height=Object(d.c)(100),i.chartAndLegendContainer=r;var a=r.createChild(l.a);return a.shouldClone=!1,a.width=Object(d.c)(100),a.height=Object(d.c)(100),i.chartContainer=a,i.showOnInit=!0,i._disposers.push(i._legend),i.titles.events.on("inserted",function(t){i.processTitle(t),i.updateReaderTitleReferences()},i,!1),i.titles.events.on("removed",function(t){i.updateReaderTitleReferences()},i,!1),i.role="region",i.defaultState.transitionDuration=1,i.applyTheme(),i}return Object(n.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),v.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Chart"))},e.prototype.draw=function(){this.fixLayout(),t.prototype.draw.call(this)},e.prototype.fixLayout=function(){var t=this.legend;if(t){var e=this.chartAndLegendContainer,i=this.chartContainer;switch(i.x=void 0,i.y=void 0,t.x=void 0,t.y=void 0,t.position){case"left":e.layout="horizontal",t.toBack();break;case"right":e.layout="horizontal",t.toFront();break;case"top":e.layout="vertical",t.toBack();break;case"bottom":e.layout="vertical",t.toFront()}}},e.prototype.feedLegend=function(){},e.prototype.processTitle=function(t){var e=t.newValue;return e.parent=this,e.toBack(),e.shouldClone=!1,e.align="center",e.uidAttr(),e},e.prototype.updateReaderTitleReferences=function(){if(this.titles.length){var t=[];m.each(this.titles.iterator(),function(e){t.push(e.uid)}),this.setSVGAttribute({"aria-labelledby":t.join(" ")})}else this.removeSVGAttribute("aria-labelledby")},Object.defineProperty(e.prototype,"legend",{get:function(){return this._legend.get()},set:function(t){this.setLegend(t)},enumerable:!0,configurable:!0}),e.prototype.setLegend=function(t){var e=this;this._legend.get()!==t&&(t?(t.maxWidth=200,t.parent=this.chartAndLegendContainer,this._legend.set(t,t.events.on("propertychanged",function(t){"position"==t.property&&e.fixLayout()},void 0,!1))):this._legend.reset(),this.feedLegend())},e.prototype.dispose=function(){this.legend&&this.legend.dispose(),t.prototype.dispose.call(this)},e.prototype.processConfig=function(e){e&&v.hasValue(e.legend)&&!v.hasValue(e.legend.type)&&(e.legend.type="Legend"),t.prototype.processConfig.call(this,e)},e.prototype.copyFrom=function(e){this.titles.copyFrom(e.titles),this.chartContainer.copyFrom(e.chartContainer),e.legend&&(this.legend=e.legend.clone(),this.legend.removeChildren()),t.prototype.copyFrom.call(this,e)},Object.defineProperty(e.prototype,"dragGrip",{get:function(){var t=this;if(!this._dragGrip){var e=this.tooltipContainer.createChild(g);e.align="right",e.valign="middle",e.hide(0),e.events.on("down",function(e){e.touch&&(t.interactionsEnabled=!1)}),e.events.on("up",function(e){t.interactionsEnabled=!0}),this.events.on("down",function(t){t.touch&&e.show()}),this._dragGrip=e}return this._dragGrip},set:function(t){this._dragGrip=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"focusable",{get:function(){return this.parent.focusable},set:function(t){this.parent.focusable=!0},enumerable:!0,configurable:!0}),e}(a.a);r.c.registeredClasses.Chart=_,b.c.push({relevant:b.b.widthXS,state:function(t,e){if(t instanceof _){var i=t.states.create(e);return t.pixelPaddingLeft>10&&(i.properties.paddingLeft=10),t.pixelPaddingRight>10&&(i.properties.paddingRight=10),i}return null}}),b.c.push({relevant:b.b.heightXS,state:function(t,e){if(t instanceof _){var i=t.states.create(e);return t.pixelPaddingTop>10&&(i.properties.paddingTop=10),t.pixelPaddingBottom>10&&(i.properties.paddingBottom=10),i}return null}}),b.c.push({relevant:b.b.widthXXS,state:function(t,e){if(t instanceof _){var i=t.states.create(e);return i.properties.paddingLeft=0,i.properties.paddingRight=0,i}return null}}),b.c.push({relevant:b.b.heightXXS,state:function(t,e){if(t instanceof _){var i=t.states.create(e);return i.properties.paddingTop=0,i.properties.paddingBottom=0,i}return null}})},VTyh:function(t,e){var i;i=function(){return this}();try{i=i||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(i=window)}t.exports=i},Vk33:function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("FzPm"),a=i("aCit"),o=i("hGwe"),s=i("Gg2j"),l=i("v9UT"),u=i("aFzC"),h=function(t){function e(){var e=t.call(this)||this;return e.className="WavedCircle",e.element=e.paper.add("path"),e.waveLength=16,e.waveHeight=4,e.fill=void 0,e.fillOpacity=0,e.tension=.8,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){var t="",e=this.pixelRadius;if(e>0){var i=this.getPoints(e);t=o.moveTo(i[0])+new u.b(this.tension,this.tension).smooth(i)}var n=this.pixelInnerRadius;n>0&&((i=this.getPoints(n)).reverse(),t+=o.moveTo(i[0])+new u.b(this.tension,this.tension).smooth(i));this.path=t},e.prototype.getPoints=function(t){for(var e=t*Math.PI*2,i=this.waveHeight/2,n=e/Math.round(e/this.waveLength),r=n/2,a=[],o=e/n,l=0;l<=o;l++){var u=l*n/e*360,h=(l*n+r)/e*360;a.push({x:(t-i)*s.cos(u),y:(t-i)*s.sin(u)}),a.push({x:(t+i)*s.cos(h),y:(t+i)*s.sin(h)})}return a.pop(),a},Object.defineProperty(e.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(t){this.setPercentProperty("innerRadius",t,!0,!1,10,!1),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelInnerRadius",{get:function(){return l.relativeToValue(this.innerRadius,s.min(this.innerWidth/2,this.innerHeight/2))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"waveLength",{get:function(){return this.getPropertyValue("waveLength")},set:function(t){this.setPropertyValue("waveLength",t),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"waveHeight",{get:function(){return this.getPropertyValue("waveHeight")},set:function(t){this.setPropertyValue("waveHeight",t),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tension",{get:function(){return this.getPropertyValue("tension")},set:function(t){this.setPropertyValue("tension",t),this.invalidate()},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.WavedCircle=h},VlLm:function(t,e,i){"use strict";var n=i("0sYB"),r=i("3sMl"),a=i("vfdp"),o=i("JZRr"),s=i("Kg2n"),l=i("8+rI").f,u=i("z4fB"),h=a.Symbol;if(r&&"function"==typeof h&&(!("description"in h.prototype)||void 0!==h().description)){var c={},p=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof p?new h(t):void 0===t?h():h(t);return""===t&&(c[e]=!0),e};u(p,h);var d=p.prototype=h.prototype;d.constructor=p;var f=d.toString,g="Symbol(test)"==String(h("test")),y=/^Symbol\((.*)\)[^)]+$/;l(d,"description",{configurable:!0,get:function(){var t=s(this)?this.valueOf():this,e=f.call(t);if(o(c,t))return"";var i=g?e.slice(7,-1):e.replace(y,"$1");return""===i?void 0:i}}),n({global:!0,forced:!0},{Symbol:p})}},Vs7R:function(t,e,i){"use strict";i.d(e,"b",function(){return R}),i.d(e,"a",function(){return N});var n=i("m4/l"),r=i("ux7t"),a=i("kQxV"),o=i("Tjl+"),s=i("x79X"),l=i("+qIf"),u=i("vMqJ"),h=i("hD5A"),c=i("1yyj"),p=i("P7v+"),d=i("C6dT"),f=i("ZLF9"),g=i("sxA1"),y=i("CuFa"),m=i("8ZqG"),v=i("zhwk"),b=i("qCRI"),x=i("Q4nc"),_=i("aCit"),P=i("CTEm"),w=i("7XB+"),O=i("akNo"),T=i("MipW"),S=i("P/bD"),C=i("GAaQ"),I=i("v9UT"),k=i("Gg2j"),D=i("ScGY"),j=i("hJ5i"),V=i("Qkdp"),A=i("Mtpk"),M=i("Wglt"),F=i("Rpw0"),E=i("tjMS"),R=["fill","fillOpacity","stroke","strokeOpacity","strokeWidth","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin"],N=function(t){function e(){var e=t.call(this)||this;return e.properties={},e._eventDispatcher=new a.a(e),e._bindings={},e._isTemplate=!1,e._isPath=!1,e._inited=!1,e._ready=!1,e.isHiding=!1,e._isHidden=!1,e.isShowing=!1,e.isStandaloneInstance=!1,e._isActive=!1,e._mask=new h.d,e._positionPrecision=3,e._language=new h.d,e._exporting=new h.d,e._exportable=!0,e._bbox={x:0,y:0,width:0,height:0},e.invalid=!1,e.positionInvalid=!1,e.propertyFields={},e.applyOnClones=!1,e._measuredWidthSelf=0,e._measuredHeightSelf=0,e.maxLeft=0,e.maxRight=0,e.maxTop=0,e.maxBottom=0,e.maxLeftSelf=0,e.maxRightSelf=0,e.maxTopSelf=0,e.maxBottomSelf=0,e._isDragged=!1,e._isResized=!1,e._disabled=!1,e._internalDisabled=!1,e._updateDisabled=!1,e._internalDefaultsApplied=!1,e.rollOutDelay=0,e.isBaseSprite=!1,e.shouldClone=!0,e.appeared=!1,e.ex=0,e.ey=0,e.dragWhileResize=!1,e.measureFailed=!1,e.preventShow=!1,e.cloneTooltip=!0,e.className="Sprite",e._disposers.push(e._eventDispatcher),I.used(e.uid),e.group=e.paper.addGroup("g"),e.setPropertyValue("scale",1),e.setPropertyValue("rotation",0),e.setPropertyValue("align","none"),e.setPropertyValue("valign","none"),e.setPropertyValue("pixelPerfect",!1),e.setPropertyValue("visible",!0),e.setPropertyValue("tooltipPosition","fixed"),e.setPropertyValue("verticalCenter","none"),e.setPropertyValue("horizontalCenter","none"),e.setPropertyValue("tooltipX",Object(E.c)(50)),e.setPropertyValue("tooltipX",Object(E.c)(50)),e.setPropertyValue("marginTop",0),e.setPropertyValue("marginBottom",0),e.setPropertyValue("marginLeft",0),e.setPropertyValue("marginRight",0),e.setPropertyValue("dx",0),e.setPropertyValue("dy",0),e.setPropertyValue("paddingTop",0),e.setPropertyValue("paddingBottom",0),e.setPropertyValue("paddingRight",0),e.setPropertyValue("paddingLeft",0),e.setPropertyValue("togglable",!1),e.setPropertyValue("hidden",!1),e.setPropertyValue("urlTarget","_self"),e.setPropertyValue("alwaysShowTooltip",!1),e.setPropertyValue("showTooltipOn","hover"),e._prevMeasuredWidth=0,e._prevMeasuredHeight=0,e._measuredWidth=0,e._measuredHeight=0,e._isMeasured=!0,e.invalidate(),e.applyTheme(),e._disposers.push(e.events),e._disposers.push(e.group),e._disposers.push(e._mask),e._disposers.push(e._language),e._disposers.push(e._exporting),e._disposers.push(new h.b(function(){V.each(e._bindings,function(t,e){e.dispose()})})),e.setPropertyValue("interactionsEnabled",!0),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"events",{get:function(){return this._eventDispatcher},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"adapter",{get:function(){return this._adapterO||(this._adapterO=new s.a(this)),this._adapterO},enumerable:!0,configurable:!0}),e.prototype.applyTheme=function(){t.prototype.applyTheme.call(this),x.a.autoSetClassName&&this.setClassName()},e.prototype.getCurrentThemes=function(){var t=this._themes;if(t)return t;var e=this.parent;return e?e.getCurrentThemes():_.c.themes},e.prototype.applyInternalDefaults=function(){this._internalDefaultsApplied=!0},e.prototype.invalidate=function(){this.disabled||this._isTemplate||this.invalid||(this.invalid=!0,_.c.addToInvalidSprites(this),F.b.requestFrame())},e.prototype.validate=function(){this.dispatchImmediately("beforevalidated"),this._internalDefaultsApplied||this.applyInternalDefaults(),this.beforeDraw(),this.draw(),this.invalid=!1,_.c.removeFromInvalidSprites(this),this.afterDraw()},e.prototype.invalidatePosition=function(){this.disabled||this._isTemplate||this.positionInvalid||(this.positionInvalid=!0,_.c.addToInvalidPositions(this),F.b.requestFrame())},e.prototype.validatePosition=function(){var t=this.pixelX,e=this.pixelY,i=this.dx,n=this.dy,r=t+i,a=e+n;this._updateDisabled&&(this._internalDisabled?this.group.attr({display:"none"}):this.disabled||this.removeSVGAttribute("display"),this._updateDisabled=!1);var o=this.measure(),s=this.group.transformString;this.group.moveTo({x:r,y:a}),this.group.rotation=this.rotation,this.nonScaling?this.group.scale=this.scale/this.globalScale:this.group.scale=this.scale,(s!=this.group.transformString||o)&&(null==s?this.dispatch("transformed"):this.dispatchImmediately("transformed"),this.dispatch("positionchanged"),"hit"!=this.showTooltipOn&&"always"!=this.showTooltipOn||this.updateTooltipPosition()),t+i==r&&e+n==a&&(_.c.removeFromInvalidPositions(this),this.positionInvalid=!1);var l=this._maskRectangle;l&&this._clipElement.moveTo({x:l.x-t,y:l.y-e})},e.prototype.beforeDraw=function(){},e.prototype.draw=function(){},e.prototype.afterDraw=function(){var t,e;if((this.isMeasured||"none"!==this.horizontalCenter||"none"!==this.verticalCenter)&&this.measureElement(),this._inited)this.dispatch("validated");else{if(this._adapterO)try{for(var i=Object(n.g)(this._adapterO.keys()),r=i.next();!r.done;r=i.next()){var a=r.value;switch(a){case"mask":case"fill":case"opacity":case"fillOpacity":case"stroke":case"strokeOpacity":case"strokeWidth":case"shapeRendering":case"strokeDasharray":case"strokeDashoffset":case"strokeLinecap":case"strokeLinejoin":case"textDecoration":case"fontSize":case"fontFamily":case"fontWeight":this[a]=this[a]}}}catch(e){t={error:e}}finally{try{r&&!r.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}this.applyFilters(),this.visible=this.visible,this.interactionsEnabled=this.getPropertyValue("interactionsEnabled"),this._inited=!0,this.showOnInit||(this.appeared=!0),this.hidden&&this.hide(0),this.applyMask(),this.dispatch("validated"),this.dispatch("inited"),this.dispatchReady()}"always"==this.showTooltipOn&&(!this.visible||this.disabled||this.__disabled?this.hideTooltip(0):this.showTooltip())},e.prototype.dispatchReady=function(){this.isReady()||(this._ready=!0,this.dispatch("ready"))},e.prototype.reinit=function(){this._inited=!1,this.setState(this.defaultState),this.invalidate()},e.prototype.handleGlobalScale=function(){this.dispatch("globalscalechanged"),this.nonScalingStroke&&(this.strokeWidth=this.strokeWidth),this.nonScaling&&this.validatePosition(),this.updateFilterScale()},e.prototype.updateFilterScale=function(){var t=this;M.each(this.filters.iterator(),function(e){e.scale=t.globalScale})},e.prototype.removeFromInvalids=function(){_.c.removeFromInvalidSprites(this),_.c.removeFromInvalidPositions(this)},e.prototype.copyFrom=function(e){var i=this;t.prototype.copyFrom.call(this,e),this.isMeasured=e.isMeasured,this.states.copyFrom(e.states),e.filters.length>0&&e.filters.each(function(t){i.filters.push(t.clone())}),e._adapterO&&this.adapter.copyFrom(e._adapterO),e._interaction&&this.interactions.copyFrom(e.interactions),e._plugins&&this.plugins.copyFrom(e.plugins),this.configField=e.configField,this.applyOnClones=e.applyOnClones,this.disabled=e.disabled,this.virtualParent=e.virtualParent,this.exportable=e.exportable,e._tooltip&&(this._tooltip?this._tooltip.copyFrom(e.tooltip):e.cloneTooltip?this.tooltip=e.tooltip.clone():this._tooltip=e.tooltip),this._showSystemTooltip=e.showSystemTooltip,I.copyProperties(e.propertyFields,this.propertyFields),I.copyProperties(e.properties,this),e.fillModifier&&(this.fillModifier=e.fillModifier.clone()),e.strokeModifier&&(this.strokeModifier=e.strokeModifier.clone())},e.prototype.dispose=function(){if(!this.isDisposed()){if("always"==this.showTooltipOn&&this.tooltip&&this.tooltip.hide(),this.dispatchImmediately("beforedisposed"),this.isBaseSprite){if(this.htmlContainer)for(;this.htmlContainer.childNodes.length>0;)this.htmlContainer.removeChild(this.htmlContainer.firstChild);this.isBaseSprite=!1}if(t.prototype.dispose.call(this),this._adapterO&&this._adapterO.clear(),this.applyOnClones&&this._clones)for(var e=this._clones.length-1;e>=0;e--){this._clones.getIndex(e).dispose()}this._svgContainer&&this._svgContainer.dispose(),this._interactionDisposer&&(this._interactionDisposer.dispose(),this._interactionDisposer=void 0),this._urlDisposer&&this._urlDisposer.dispose(),this.removeFromInvalids(),this.element&&this.element.dispose(),this.group&&this.group.dispose(),this._numberFormatter&&this._numberFormatter.dispose(),this._focusFilter&&this._focusFilter.dispose();var i=this.stroke;!i||i instanceof m.a||!i.dispose||this.clonedFrom&&this.clonedFrom.stroke==i||i.dispose();var n=this.fill;if(!n||n instanceof m.a||!n.dispose||this.clonedFrom&&this.clonedFrom.fill==n||n.dispose(),A.hasValue(this.id)&&this.map.removeKey(this.id),this.parent=void 0,this._filters)for(;this._filters.length>0;){var r=this._filters.getIndex(0);r.dispose(),this._filters.removeValue(r)}this._alwaysShowDisposers=void 0}},Object.defineProperty(e.prototype,"isTemplate",{get:function(){return this._isTemplate},set:function(t){t=A.toBoolean(t),this._isTemplate!=t&&(this._isTemplate=t,this instanceof d.a&&M.each(this.children.iterator(),function(e){e.isTemplate=t}),t?(this.parent=this.parent,this.removeFromInvalids()):this.invalidate())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"showSystemTooltip",{get:function(){return A.hasValue(this._showSystemTooltip)?this._showSystemTooltip:this.virtualParent?this.virtualParent.showSystemTooltip:!!this.parent&&this.parent.showSystemTooltip},set:function(t){t=A.toBoolean(t),this._showSystemTooltip!=t&&(this._showSystemTooltip=t,this.applyAccessibility())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"topParent",{get:function(){return this._topParent?this._topParent:this.parent?this.parent.topParent:void 0},set:function(t){this._topParent=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parent",{get:function(){return this._parent},set:function(t){if(!this._isTemplate){I.used(this.paper);var e=this._parent;e!=t&&(e&&e.children.removeValue(this),this._parent=t,t?(this.topParent=t.topParent,t.isTemplate&&(this.isTemplate=!0),this.baseId=t.baseId,t.children.push(this),this._tooltip&&!this._tooltipContainer&&(this._tooltip.parent=t.tooltipContainer),this._dataItem||(this.dataItem=t.dataItem),this.handleAlwaysShowTooltip(),this.dispatchImmediately("parentset")):this.topParent=void 0)}},enumerable:!0,configurable:!0}),e.prototype.handleAlwaysShow=function(){this.showTooltip()},e.prototype.handleAlwaysShowTooltip=function(){var t=this,e=this._alwaysShowDisposers;if(e&&j.each(e,function(t){t.dispose()}),this._alwaysShowDisposers=[],"always"==this.showTooltipOn)for(;void 0!=t;){var i=t.events.on("visibilitychanged",this.handleAlwaysShow,this,!1);this.addDisposer(i),this._alwaysShowDisposers.push(i),t=t.parent}},Object.defineProperty(e.prototype,"virtualParent",{get:function(){return this._virtualParent},set:function(t){this._virtualParent=t},enumerable:!0,configurable:!0}),e.prototype.appendDefs=function(){this.filterElement&&this.paper.appendDef(this.filterElement);var t=this.fill;t&&t.element&&this.paper.appendDef(t.element);var e=this.stroke;if(e&&e.element&&this.paper.appendDef(e.element),this.fillModifier&&this.fill instanceof m.a){var i=this.fillModifier.modify(this.fill);i&&i.element&&this.paper.appendDef(i.element)}if(this.strokeModifier&&this.stroke instanceof m.a){var n=this.strokeModifier.modify(this.stroke);n&&n.element&&this.paper.appendDef(n.element)}this._clipPath&&this.paper.appendDef(this._clipPath),!1===this._exportable&&(this.exportable=!1)},Object.defineProperty(e.prototype,"map",{get:function(){var t=this.topParent;return t?t.map:(this._map||(this._map=new l.a),this._map)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"delayedMap",{get:function(){var t=this.topParent;return t?t.delayedMap:(this._delayedMap||(this._delayedMap=new l.a),this._delayedMap)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this._id},set:function(t){if(this._id!=t){if(this._id=t,this.map.hasKey(t))throw Error("Duplicate id ("+t+") used on multiple objects.");this.map.setKey(t,this),x.a.autoSetClassName&&this.setClassName()}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dom",{get:function(){return this.group.node},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"paper",{get:function(){return this._paper?this._paper:this.parent?this.parent.paper:Object(p.b)()},set:function(t){this.setPaper(t)},enumerable:!0,configurable:!0}),e.prototype.setPaper=function(t){return this._paper!=t&&(this._paper=t,this.appendDefs(),!0)},Object.defineProperty(e.prototype,"htmlContainer",{get:function(){return this._htmlContainer?this._htmlContainer:this.parent?this.parent.htmlContainer:void 0},set:function(t){this._htmlContainer=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"titleElement",{get:function(){return this._titleElement||(this._titleElement=this.paper.add("title"),this.group.add(this._titleElement)),this._titleElement},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"descriptionElement",{get:function(){return this._descriptionElement||(this._descriptionElement=this.paper.add("desc"),this.group.add(this._descriptionElement)),this._descriptionElement},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filters",{get:function(){return this._filters||(this._filters=new u.b,this._disposers.push(this._filters.events.onAll(this.applyFilters,this)),this._disposers.push(new u.c(this._filters))),this._filters},enumerable:!0,configurable:!0}),e.prototype.setSVGAttributes=function(){this.fill=this.fill,this.opacity=this.opacity,this.fillOpacity=this.fillOpacity,this.stroke=this.stroke,this.strokeOpacity=this.strokeOpacity,this.shapeRendering=this.shapeRendering,this.strokeDasharray=this.strokeDasharray,this.strokeDashoffset=this.strokeDashoffset,this.strokeLinecap=this.strokeLinecap,this.strokeLinejoin=this.strokeLinejoin,this.focusable=this.focusable,this.tabindex=this.tabindex,this.role=this.role},e.prototype.setSVGAttribute=function(t){this.group.attr(t)},e.prototype.removeSVGAttribute=function(t){this.group.removeAttr(t)},e.prototype.setClassName=function(){var t=this.className,e=x.a.classNamePrefix;this.element&&this.element.addClass(e+t),this.group.addClass(e+t+"-group"),A.hasValue(this.id)&&this.group.addClass(e+this.id)},e.prototype.uidAttr=function(){return this.setSVGAttribute({id:this.uid}),this.uid},e.prototype.updateClipPath=function(){var t=this._clipElement;t&&t.moveTo({x:this.mask.pixelX,y:this.mask.pixelY})},e.prototype.createClipPath=function(){if(!this._clipPath){this._clipPath=this.paper.addGroup("clipPath"),this.paper.appendDef(this._clipPath),this._disposers.push(this._clipPath);var t=_.c.getUniqueId();this._clipPath.attr({id:t}),this.group.attr({"clip-path":'url("'+I.getBaseURI()+t+'")'})}},e.prototype.applyMask=function(){var t=this.mask;if(this._clipPath&&t)if(t instanceof d.a){this._clipElement.attr({width:k.max(0,t.pixelWidth),height:k.max(0,t.pixelHeight)});var e=I.spritePointToSprite({x:t.pixelX,y:t.pixelY},t.parent,this);this._clipPath.x=e.x,this._clipPath.y=e.y}else t.element&&t.element!=this._clipElement&&(this._clipElement=t.element,this._clipPath.add(this._clipElement)),this._clipPath.scale=t.scale,this._clipPath.x=t.pixelX,this._clipPath.y=t.pixelY,this._clipPath.rotation=t.rotation},e.prototype.applyFilters=function(){var t=this;if(this._filters&&this._filters.length>0){var e=100,i=100;this.filterElement?this.filterElement.removeChildNodes():(this.filterElement=this.paper.addGroup("filter"),this._disposers.push(this.filterElement)),this.paper.appendDef(this.filterElement);var n="filter-"+this.uid;this.filterElement.attr({id:n}),M.each(this.filters.iterator(),function(n){n.sprite=t,n.paper=t.paper,n.appendPrimitives(t.filterElement),n.width>e&&(e=n.width),n.height>i&&(i=n.height),n.scale=t.globalScale});var r=e+"%",a=i+"%";this.filterElement.attr({width:r,height:a,x:-(e-100)/2+"%",y:-(i-100)/2+"%"}),this.group.attr({filter:'url("'+I.getBaseURI()+n+'")'})}else this.filterElement&&(this.group.removeAttr("filter"),this.filterElement.removeChildNodes())},e.prototype.removeClipPath=function(){this._clipPath&&(this.removeDispose(this._clipPath),this._clipPath=void 0)},e.prototype.setElement=function(t){this.element=t,this.setSVGAttributes(),this.applyAccessibility()},Object.defineProperty(e.prototype,"element",{get:function(){return this._element},set:function(t){this.removeElement(),this._element=t,this.group.add(t),t.node instanceof SVGPathElement&&(this._isPath=!0),this.invalid||this.validate(),x.a.autoSetClassName&&this.setClassName()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"svgContainer",{get:function(){return this._svgContainer?this._svgContainer:this.parent?this.parent.svgContainer:void 0},set:function(t){this._svgContainer=t},enumerable:!0,configurable:!0}),e.prototype.measureElement=function(){if(this.element)if(this.definedBBox)this._bbox=this.definedBBox;else{var t=this.element.getBBox();this._bbox={x:t.x,y:t.y,width:t.width,height:t.height}}},e.prototype.updateCenter=function(){if(this.element){var t=this.element.transformString,e=this.bbox,i=0,n=0,r=e.x,a=e.y,o=e.width,s=e.height,l=this.pixelPaddingLeft,u=this.pixelPaddingRight,h=this.pixelPaddingTop,c=this.pixelPaddingBottom,p=k.max(o+l+u,this.pixelWidth),d=k.max(s+h+c,this.pixelHeight),f=e.x,g=e.x+p,y=e.y,m=e.y+d,v=this.horizontalCenter,b=this.verticalCenter;switch(v){case"none":i=r+l;break;case"left":i=l;break;case"middle":i=l-(o+u+l)/2;break;case"right":i=-u-o}switch(b){case"none":n=a+h;break;case"top":n=h;break;case"middle":n=h-(s+c+h)/2;break;case"bottom":n=-c-s}this._measuredHeight=d,this._measuredWidth=p;var x=k.round(i-r,this._positionPrecision,!0),_=k.round(n-a,this._positionPrecision,!0);this.ex=x-l,this.ey=_-h,this.maxLeft=f+x-l,this.maxRight=g+x-l,this.maxTop=y+_-h,this.maxBottom=m+_-h,this.pixelPerfect&&(x-=.5,_-=.5),this.element.moveTo({x:x,y:_}),t!=this.element.transformString&&this.dispatchImmediately("transformed")}},e.prototype.measure=function(){this.updateCenter();var t=this._measuredWidth,e=this._measuredHeight,i=this.maxLeft,n=this.maxRight,r=this.maxTop,a=this.maxBottom;this._measuredWidthSelf=t,this._measuredHeightSelf=e;var o=this._positionPrecision;if(this.maxLeftSelf=this.maxLeft,this.maxRightSelf=this.maxRight,this.maxTopSelf=this.maxTop,this.maxBottomSelf=this.maxBottom,0!==this.rotation||1!==this.scale){this.nonScalingStroke&&(this.strokeWidth=this.strokeWidth);var s=this.paper.svg,l=s.createSVGMatrix(),u=this.rotation;l.a=k.cos(u)*this.scale,l.c=-k.sin(u)*this.scale,l.e=0,l.b=k.sin(u)*this.scale,l.d=k.cos(u)*this.scale,l.f=0;var h=s.createSVGPoint();h.x=i,h.y=r;var c=s.createSVGPoint();c.x=n,c.y=r;var p=s.createSVGPoint();p.x=n,p.y=a;var d=s.createSVGPoint();d.x=i,d.y=a;var f=h.matrixTransform(l),g=c.matrixTransform(l),y=p.matrixTransform(l),m=d.matrixTransform(l);i=Math.min(f.x,g.x,y.x,m.x),n=Math.max(f.x,g.x,y.x,m.x),r=Math.min(f.y,g.y,y.y,m.y),t=n-i,e=(a=Math.max(f.y,g.y,y.y,m.y))-r,this.maxLeft=k.round(i,o,!0),this.maxRight=k.round(n,o,!0),this.maxTop=k.round(r,o,!0),this.maxBottom=k.round(a,o,!0)}return this._measuredWidth=k.round(t,o,!0),this._measuredHeight=k.round(e,o,!0),(this._measuredWidth!=this._prevMeasuredWidth||this._measuredHeight!=this._prevMeasuredHeight)&&(this._prevMeasuredHeight=this._measuredHeight,this._prevMeasuredWidth=this._measuredWidth,this.dispatch("sizechanged"),(this.isHover||"hit"==this.showTooltipOn||"always"==this.showTooltipOn)&&this.tooltip&&this.tooltip.visible&&(A.hasValue(this.tooltipText)||A.hasValue(this.tooltipHTML))&&this.updateTooltipPosition(),!0)},e.prototype.insertBefore=function(t){var e=this.parent;if(e){var i=e.children.indexOf(t);-1!==i&&(e.children.moveValue(this,i),e.sortChildren())}return this},e.prototype.insertAfter=function(t){var e=this.parent;if(e){var i=e.children.indexOf(t);-1!==i&&(e.children.moveValue(this,i+1),e.sortChildren())}return this},e.prototype.removeElement=function(){this._element&&(this.removeDispose(this._element),this._element=void 0)},e.prototype.getRelativeX=function(t){return t instanceof E.a?t.value:this.parent?t/this.parent.innerWidth:0},e.prototype.getRelativeY=function(t){return t instanceof E.a?t.value:this.parent?t/this.parent.innerHeight:0},e.prototype.getPixelX=function(t){var e=0;if(A.isNumber(t))e=t;else if(t instanceof E.a){var i=t.value;this.parent&&(e=k.round(this.parent.innerWidth*i,this._positionPrecision,!0))}return e},e.prototype.getPixelY=function(t){var e=0;if(A.isNumber(t))e=t;else if(t instanceof E.a){var i=t.value;this.parent&&(e=k.round(this.parent.innerHeight*i,this._positionPrecision,!0))}return e},e.prototype.moveTo=function(t,e,i,n){this.isDragged&&!n||(t&&(A.isNumber(t.x)&&this.setPropertyValue("x",k.round(t.x,this._positionPrecision,!0)),A.isNumber(t.y)&&this.setPropertyValue("y",k.round(t.y,this._positionPrecision,!0))),A.isNumber(e)&&(this.rotation=e),A.isNumber(i)&&(this.scale=i),this.invalidatePosition())},Object.defineProperty(e.prototype,"mask",{get:function(){return this._adapterO?this._adapterO.apply("mask",this._mask.get()):this._mask.get()},set:function(t){var e=this;this._mask.get()!==t&&(t?(this.createClipPath(),t instanceof d.a?this._clipElement=this.paper.add("rect"):(t.isMeasured=!1,t.element&&(this._clipElement=t.element)),this._clipElement&&this._clipPath.add(this._clipElement),this._mask.set(t,new h.c([t.events.on("maxsizechanged",function(){e.inited&&e.applyMask()},void 0,!1),t.events.on("validated",this.applyMask,this,!1),t.events.on("positionchanged",this.applyMask,this,!1)])),this.applyMask()):(this._mask.reset(),this.group.removeAttr("clip-path"),this.removeClipPath()))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maskRectangle",{get:function(){return this._maskRectangle},set:function(t){t?(this.createClipPath(),this._clipElement||(this._clipElement=this.paper.add("rect"),this._clipPath.add(this._clipElement)),this._clipElement.attr({width:t.width,height:t.height})):(this.removeClipPath(),this._clipElement=void 0),this._maskRectangle=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isMeasured",{get:function(){return this._isMeasured},set:function(t){(t=A.toBoolean(t))||(this._measuredWidth=0,this._measuredHeight=0),this._isMeasured!=t&&(this._isMeasured=t,this.invalidatePosition())},enumerable:!0,configurable:!0}),e.prototype.hitTest=function(t){this.invalid&&this.validate(),t.invalid&&t.validate();var e=this.pixelX,i=this.pixelY,n=e+this.measuredWidth,r=i+this.measuredHeight,a=t.pixelX,o=t.pixelY,s=a+t.measuredWidth,l=o+t.measuredHeight;return!(a>n||s<e||o>r||l<i)},Object.defineProperty(e.prototype,"inited",{get:function(){return this._inited},enumerable:!0,configurable:!0}),e.prototype.isReady=function(){return this._ready},Object.defineProperty(e.prototype,"states",{get:function(){if(!this._states){var t=new r.a;this._states=new l.c(t),this._disposers.push(this._states.events.on("insertKey",this.processState,this,!1)),this._disposers.push(this._states.events.on("setKey",this.processState,this,!1)),this._disposers.push(new l.b(this._states)),this._disposers.push(t)}return this._states},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hiddenState",{get:function(){if(!this.states.getKey("hidden")){var t=this.states.create("hidden");t.properties.opacity=0,t.properties.visible=!1}return this.states.getKey("hidden")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"defaultState",{get:function(){this.states.getKey("default")||(this.states.create("default").properties.opacity=1);return this.states.getKey("default")},enumerable:!0,configurable:!0}),e.prototype.processState=function(t){var e=t.newValue;if(e.sprite=this,e.name=t.key,(this.states.hasKey("hover")||"hover"==this.showTooltipOn&&(A.hasValue(this.tooltipHTML)||A.hasValue(this.tooltipText)))&&(this.hoverable=!0),(this.states.hasKey("down")||"hover"==this.showTooltipOn&&(A.hasValue(this.tooltipHTML)||A.hasValue(this.tooltipText)))&&(this.clickable=!0),this.states.hasKey("focus")&&(this.focusable=!0),this.applyOnClones)for(var i=this.clones.values,n=i.length,r=0;r<n;++r){var a=i[r];a.isDisposed()||a.states.setKey(e.name,e)}},Object.defineProperty(e.prototype,"animations",{get:function(){return this._animations||(this._animations=[],this._disposers.push(new c.b(this._animations))),this._animations},enumerable:!0,configurable:!0}),e.prototype.getSvgPoint=function(t){try{var e=this.htmlContainer.getBoundingClientRect();return{x:t.x-e.left,y:t.y-e.top}}catch(e){return t}},e.prototype.animate=function(t,e,i){return new c.a(this,t,e,i).start()},e.prototype.setState=function(t,e,i){var n;if(t instanceof r.a)this.states.setKey(t.name,t),n=t;else if(!(n=this.states.getKey(t)))return;if("hover"==n.name){if(this.isHidden)return;this.isHover=!0}return"hidden"==n.name?this.isHiding=!0:this.visible||this.setVisibility(n.properties.visible||this.defaultState.properties.visible),"active"==n.name&&(this.isActive=!0),A.isNumber(e)||(e=n.transitionDuration),A.hasValue(i)||(i=n.transitionEasing),this.transitTo(n,e,i)},e.prototype.applyCurrentState=function(t){var e=this.setState(this.defaultState,t);return this.isHover&&(e=this.setState("hover",t)),this.isDown&&this.interactions.downPointers.length&&(e=this.setState("down",t)),this.isFocused=this.isFocused,this.isActive&&(e=this.setState("active",t),this.isHover&&this.states.hasKey("hoverActive")&&(e=this.setState("hoverActive",t))),e},e.prototype.transitTo=function(t,e,i){var n,r=this,a=[],o=t.allValues;if(V.each(o,function(t,e){var i=r[t];if(e!=i&&void 0==r.defaultState.properties[t]&&(r.defaultState.properties[t]=i),"__unset"!=e){var n={from:i,to:e,property:t};a.push(n)}}),a.length>0&&((n=this.animate(a,e,i))&&!n.isFinished()?this._disposers.push(n.events.on("animationended",function(){r.dispatchImmediately("transitionended")})):this.dispatchImmediately("transitionended")),t.filters.length>0){var s=[];M.each(t.filters.iterator(),function(t){var n=t.clone();s.push(n);var a=[];M.each(r.filters.iterator(),function(t){t.className==n.className&&(M.contains(r.defaultState.filters.iterator(),function(t){return t.className===n.className})||r.defaultState.filters.push(t),V.each(n.properties,function(e,i){var n=t.properties[e];n!=i&&a.push({property:e,from:n,to:i})}))}),n.animate(a,e,i)}),this.filters.clear(),this.filters.pushAll(s)}return n},e.prototype.isInTransition=function(){return this.animations.length>0},Object.defineProperty(e.prototype,"isHover",{get:function(){return!!this.isInteractive()&&this.interactions.isHover},set:function(t){(t=A.toBoolean(t))!==this.isHover&&this.isInteractive()&&(this.interactions.isHover=t,t?this.handleOver():this.handleOut())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isDragged",{get:function(){return this._isDragged},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isResized",{get:function(){return this._isResized},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isDown",{get:function(){return!!this.isInteractive()&&this.interactions.isDown},set:function(t){t=A.toBoolean(t),this.isInteractive()&&this.isDown!=t&&(this.interactions.isDown=t,t?this.handleDown():this.handleUp())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isFocused",{get:function(){return!!this.isInteractive()&&this.interactions.isFocused},set:function(t){t=A.toBoolean(t),this.focusable&&this.isFocused!=t&&this.isInteractive()&&(this.interactions.isFocused=t,!0===t?this.handleFocus():this.handleBlur())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isActive",{get:function(){return this._isActive},set:function(t){this.setActive(t)},enumerable:!0,configurable:!0}),e.prototype.setActive=function(t){t=A.toBoolean(t),this._isActive!==t&&(this._isActive=t,t&&this.states.hasKey("active")?(this.setState("active"),this.isHover&&this.states.hasKey("hoverActive")&&this.setState("hoverActive")):this.applyCurrentState(),this.dispatchImmediately("toggled"))},Object.defineProperty(e.prototype,"disabled",{get:function(){var t=this.getPropertyValue("disabled");return A.hasValue(t)?t:this.virtualParent?this.virtualParent.disabled:!!this.parent&&this.parent.disabled},set:function(t){this.setDisabled(t)},enumerable:!0,configurable:!0}),e.prototype.setDisabled=function(t){if(t=A.toBoolean(t),this.getPropertyValue("disabled")!=t){if(this.setPropertyValue("disabled",t,!0),t)this.parent=this.parent,this.removeFromInvalids(),this.group.attr({display:"none"}),this.dispatch("disabled");else{if(this.parent){var e=this.parent.element;e.hasChild(this.group)||e.add(this.group)}this instanceof d.a?(this.deepInvalidate(),this._background&&this._background.invalidate()):this.invalidate(),this.__disabled||this.removeSVGAttribute("display"),this.dispatch("enabled")}return this.dispatch("transformed"),F.b.requestFrame(),!0}return!1},Object.defineProperty(e.prototype,"__disabled",{get:function(){return this._internalDisabled},set:function(t){this._internalDisabled!=t&&(this._internalDisabled=t,this._updateDisabled=!0,this.invalidatePosition())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"numberFormatter",{get:function(){return this._numberFormatter?this._numberFormatter:this.virtualParent?this.virtualParent.numberFormatter:this.parent?this.parent.numberFormatter:(this._numberFormatter=new P.a,this._numberFormatter.language=this.language,this.numberFormatter)},set:function(t){this._numberFormatter=t,this._numberFormatter.language=this.language},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dateFormatter",{get:function(){return this._dateFormatter?this._dateFormatter:this.virtualParent?this.virtualParent.dateFormatter:this.parent?this.parent.dateFormatter:(this._dateFormatter=new w.a,this._dateFormatter.language=this.language,this.dateFormatter)},set:function(t){this._dateFormatter=t,this._dateFormatter.language=this.language},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"durationFormatter",{get:function(){return this._durationFormatter?this._durationFormatter:this.virtualParent?this.virtualParent.durationFormatter:this.parent?this.parent.durationFormatter:(this._durationFormatter=new O.a,this._durationFormatter.language=this.language,this.durationFormatter)},set:function(t){this._durationFormatter=t,this._durationFormatter.language=this.language},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"language",{get:function(){var t=this._language.get();return t||(this.virtualParent?this.virtualParent.language:this.parent?this.parent.language:(t=new S.a,this.language=t,t))},set:function(t){var e=this;this._language.get()!==t&&this._language.set(t,t.events.on("localechanged",function(t){if(e._numberFormatter&&(e._numberFormatter.language=e.language),e._dateFormatter&&(e._dateFormatter.language=e.language),e._durationFormatter&&(e._durationFormatter.language=e.language),e._exporting.get()){var i=e._exporting.get();i.numberFormatter.language=e.language,i.dateFormatter.language=e.language,i.durationFormatter.language=e.language,i.language=e.language}e instanceof d.a&&e.deepInvalidate()}))},enumerable:!0,configurable:!0}),e.prototype.populateString=function(t,e){if(A.hasValue(t)){t=A.castString(t);var i=(t=Object(T.b)().escape(t)).match(/\{([^}]+)\}/g),n=void 0;if(i)for(n=0;n<i.length;n++){var r=i[n].replace(/\{([^}]+)\}/,"$1"),a=this.getTagValue(r,"",e);A.hasValue(a)||(a=""),t=t.split(i[n]).join(a)}t=Object(T.b)().unescape(t)}else t="";return this._adapterO?this._adapterO.apply("populateString",t):t},e.prototype.getTagValue=function(t,e,i){var n;A.hasValue(i)||(i=this.dataItem);for(var r,a=[],o=/([^.]+)\(([^)]*)\)|([^.]+)/g;null!==(r=o.exec(t));)if(r[3])a.push({prop:r[3]});else{var s=[];if(""!=I.trim(r[2]))for(var l=/'([^']*)'|"([^"]*)"|([0-9\-]+)/g,u=void 0;null!==(u=l.exec(r[2]));)s.push(u[1]||u[2]||u[3]);a.push({method:r[1],params:s})}if(i){n=this.getTagValueFromObject(a,i.values),A.hasValue(n)&&!A.isObject(n)||(n=this.getTagValueFromObject(a,i));var h=i.dataContext;!A.hasValue(n)&&h&&(n=this.getTagValueFromObject(a,i.dataContext),!A.hasValue(n)&&h.dataContext&&(n=this.getTagValueFromObject(a,h.dataContext))),!A.hasValue(n)&&i.component&&i.component.dataItem!==i&&(n=i.component.getTagValue(t,e))}return A.hasValue(n)||(n=this.getTagValueFromObject(a,this.populateStringFrom||this)),!A.hasValue(n)&&this.parent&&(n=this.parent.getTagValue(t,e)),n},e.prototype.getTagValueFromObject=function(t,e,i){for(var n=e,r=!1,a=0,o=t.length;a<o;a++){var s=t[a];if(s.prop){if(n=n[s.prop],!A.hasValue(n))return}else switch(s.method){case"formatNumber":var l=I.anyToNumber(n);A.hasValue(l)&&(n=this.numberFormatter.format(l,i||s.params[0]||void 0),r=!0);break;case"formatDate":var u=void 0;if(u=A.isString(n)?this.dateFormatter.parse(n):I.anyToDate(n),!A.isDate(u)||A.isNaN(u.getTime()))return;A.hasValue(u)&&(n=this.dateFormatter.format(u,i||s.params[0]||void 0),r=!0);break;case"formatDuration":var h=I.anyToNumber(n);A.hasValue(h)&&(n=this.durationFormatter.format(h,i||s.params[0]||void 0,s.params[1]||void 0),r=!0);break;case"urlEncode":case"encodeURIComponent":n=encodeURIComponent(n);break;default:n[s.method]&&n[s.method].apply(this,s.params)}}if(!r){var c=[{method:"",params:i}];if(A.hasValue(i)){var p=I.getFormat(i);p===D.c?c[0].method="formatNumber":p===D.a?c[0].method="formatDate":p===D.b&&(c[0].method="formatDuration")}else A.isNumber(n)?(c[0].method="formatNumber",c[0].params=""):A.isDate(n)&&(c[0].method="formatDate",c[0].params="");c[0].method&&(n=this.getTagValueFromObject(c,n))}return n},Object.defineProperty(e.prototype,"dataItem",{get:function(){if(!this._dataItem){if(this.virtualParent)return this.virtualParent.dataItem;if(this.parent)return this.parent.dataItem}return this._dataItem},set:function(t){this.setDataItem(t)},enumerable:!0,configurable:!0}),e.prototype.setDataItem=function(t){var e=this;if(this._dataItem!=t){if(this._dataItem=t,t){if(this.configField){var i=t.dataContext;i&&(this.config=i[this.configField],!this.config&&i.dataContext&&(this.config=i.dataContext[this.configField]))}var n=t.dataContext;if(n){var r=n.dataContext;V.each(this.propertyFields,function(t,i){if(A.hasValue(n[i]))e[t]=n[i];else if(r){var a=r[i];if(A.hasValue(a))e[t]=a}})}}this.invalidate()}},e.prototype.getPropertyValue=function(t){var e=this.properties[t];return this._isTemplate||this._adapterO&&(e=this._adapterO.apply(t,e)),e},e.prototype.setColorProperty=function(t,e,i){var n=this.properties[t];return!(e instanceof m.a&&n instanceof m.a&&e.toString()==n.toString())&&this.setPropertyValue(t,e,i)},e.prototype.setPercentProperty=function(t,e,i,n,r,a){if(e=A.toNumberOrPercent(e),A.isNumber(e))return e=k.round(e,r,a),this.setPropertyValue(t,e,i,n);var o=this.properties[t];return!(e instanceof E.a&&o instanceof E.a&&e.value==o.value)&&this.setPropertyValue(t,e,i,n)},e.prototype.setPropertyValue=function(t,e,i,n){if(this.properties[t]!==e&&!this.isDisposed()){if(this.properties[t]=e,this.events.isEnabled("propertychanged")){var r={type:"propertychanged",target:this,property:t};this.events.dispatchImmediately("propertychanged",r)}if(i&&this.invalidate(),n&&this.invalidatePosition(),this.applyOnClones)for(var a=this.clones.values,o=a.length,s=0;s<o;++s){var l=a[s];l.isDisposed()||(l[t]=e)}return!0}return!1},e.prototype.bind=function(t,e,i,n){var r=this;void 0===i&&(i=t),A.hasValue(this._bindings[t])&&this._bindings[t].dispose(),this[t]=e[i],this._bindings[t]=e.events.on("propertychanged",function(a){if(a.property===i){var o=e[i];n&&(o=n(o)),r[t]=o}})},e.prototype.observe=function(t,e,i,n){var r=this;return new h.c(j.map(j.toArray(t),function(t){return r.events.on("propertychanged",function(n){n.property===t&&e.call(i,n)},i,n)}))},e.prototype.applyAccessibility=function(){var t=this.readerTitle,e=this.readerDescription,i=this.role,n=this.readerHidden,r=this.readerChecked,a=this.readerControls,o=this.readerLive,s=this.readerOrientation,l=this.readerValueNow,u=this.readerValueText,h=[],c=[],p=this.readerLabelledBy;p&&h.push(p);var d=this.readerDescribedBy;if(d&&c.push(d),!this.showSystemTooltip&&t&&(e=e?t+" -- "+e:t,t=void 0),!t||e||this.showSystemTooltip){if(t){var f=this.titleElement,g=this.uid+"-title";f.node.textContent!=t&&(f.node.textContent=t,f.attr({id:g})),h.push(g)}else this._titleElement&&(this.group.removeElement(this._titleElement),this._titleElement=void 0);var y=this.uid+"-description";if(e){var m=this.descriptionElement;m.node.textContent!=e&&(m.node.textContent=e,m.attr({id:y})),c.push(y)}else this._descriptionElement&&(this.group.removeElement(this._descriptionElement),this._descriptionElement=void 0,j.remove(c,y))}else this.setSVGAttribute({"aria-label":t}),this.removeSVGAttribute("aria-description"),this._titleElement&&(this.group.removeElement(this._titleElement),this._titleElement=void 0),this._descriptionElement&&(this.group.removeElement(this._descriptionElement),this._descriptionElement=void 0);h.length?this.setSVGAttribute({"aria-labelledby":h.join(" ")}):this.removeSVGAttribute("aria-labelledby"),c.length?this.setSVGAttribute({"aria-describedby":c.join(" ")}):this.removeSVGAttribute("aria-describedby"),i?this.setSVGAttribute({role:i}):this.removeSVGAttribute("role"),n?this.setSVGAttribute({"aria-hidden":"true"}):this.removeSVGAttribute("aria-hidden"),r?this.setSVGAttribute({"aria-checked":"true"}):!1===r?this.setSVGAttribute({"aria-checked":"false"}):this.removeSVGAttribute("aria-checked"),a?this.setSVGAttribute({"aria-controls":a}):this.removeSVGAttribute("aria-controls"),o?this.setSVGAttribute({"aria-live":o}):this.removeSVGAttribute("aria-live"),s?this.setSVGAttribute({"aria-orientation":s}):this.removeSVGAttribute("aria-orientation"),l?this.setSVGAttribute({"aria-valuenow":l}):this.removeSVGAttribute("aria-valuenow"),u?this.setSVGAttribute({"aria-valuetext":u}):this.removeSVGAttribute("aria-valuetext")},Object.defineProperty(e.prototype,"readerTitle",{get:function(){var t=this.getPropertyValue("readerTitle");return A.hasValue(t)&&this.dataItem?this.populateString(t):t},set:function(t){t=A.toText(t),this.setPropertyValue("readerTitle",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerDescription",{get:function(){return this.getPropertyValue("readerDescription")},set:function(t){t=A.toText(t),this.setPropertyValue("readerDescription",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"role",{get:function(){return this.getPropertyValue("role")},set:function(t){t=A.toText(t),this.setPropertyValue("role",t)&&(this.applyAccessibility(),"slider"==t&&(this.setSVGAttribute({"aria-valuemin":"0"}),this.setSVGAttribute({"aria-valuemax":"100"})))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerHidden",{get:function(){return this.getPropertyValue("readerHidden")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("readerHidden",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerChecked",{get:function(){return this.getPropertyValue("readerChecked")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("readerChecked",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerControls",{get:function(){return this.getPropertyValue("readerControls")},set:function(t){t=A.toText(t),this.setPropertyValue("readerControls",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerLive",{get:function(){return this.getPropertyValue("readerLive")},set:function(t){t=A.toText(t),this.setPropertyValue("readerLive",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerLabelledBy",{get:function(){return this.getPropertyValue("readerLabelledBy")},set:function(t){t=A.toText(t),this.setPropertyValue("readerLabelledBy",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerDescribedBy",{get:function(){return this.getPropertyValue("readerDescribedBy")},set:function(t){t=A.toText(t),this.setPropertyValue("readerDescribedBy",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerOrientation",{get:function(){return this.getPropertyValue("readerOrientation")},set:function(t){t=A.toText(t),this.setPropertyValue("readerOrientation",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerValueNow",{get:function(){return this.getPropertyValue("readerValueNow")},set:function(t){t=A.toText(t),this.setPropertyValue("readerValueNow",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"readerValueText",{get:function(){return this.getPropertyValue("readerValueText")},set:function(t){t=A.toText(t),this.setPropertyValue("readerValueText",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"keyboardOptions",{get:function(){if(!this.interactions.keyboardOptions){if(this.virtualParent)return this.virtualParent.keyboardOptions;if(this.parent)return this.parent.keyboardOptions}return this.interactions.keyboardOptions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"mouseOptions",{get:function(){if(!this.interactions.mouseOptions){if(this.virtualParent)return this.virtualParent.mouseOptions;if(this.parent)return this.parent.mouseOptions}return this.interactions.mouseOptions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"interactions",{get:function(){if(!this._interaction){var t=Object(v.b)().getInteraction(this.dom);this._interaction=t,this._interaction.clickable=this.clickable,this._interaction.hoverable=this.hoverable,this._interaction.trackable=this.trackable,this._interaction.draggable=this.draggable,this._interaction.swipeable=this.swipeable,this._interaction.resizable=this.resizable,this._interaction.wheelable=this.wheelable,this._interaction.contextMenuDisabled=this.contextMenuDisabled,this._interaction.inert=this.inert,this._interaction.sprite=this,this._disposers.push(this._interaction)}return this._interaction},enumerable:!0,configurable:!0}),e.prototype.isInteractive=function(){return!!this._interaction},Object.defineProperty(e.prototype,"focusable",{get:function(){return this.getPropertyValue("focusable")},set:function(t){var e=this;t=A.toBoolean(t),this.setPropertyValue("focusable",t)&&(t||this.isInteractive())&&(this.interactions.focusable=t,t?(this.setSVGAttribute({focusable:t}),this._tabindex||(this.tabindex=0)):(this.removeSVGAttribute("focusable"),this.tabindex=void 0),this.interactions.setEventDisposer("sprite-focusable",t,function(){return new h.c([e.events.on("blur",e.handleBlur,e,!1),e.events.on("focus",e.handleFocus,e,!1)])}))},enumerable:!0,configurable:!0}),e.prototype.handleFocus=function(t){this.focusable&&(this.topParent&&(this.topParent.hasFocused=!0),this.focusFilter&&this.filters.push(this.focusFilter),this.hoverOnFocus&&(this.isHover=!0,this.handleOver()))},e.prototype.handleBlur=function(t){this.focusable&&(this.topParent&&(this.topParent.hasFocused=!1),this.focusFilter&&this.filters.removeValue(this.focusFilter),this.hoverOnFocus&&(this.isHover=!1,this.handleOut()))},Object.defineProperty(e.prototype,"focusFilter",{get:function(){var t=this._focusFilter;return t||(this.virtualParent?this.virtualParent.focusFilter:this.parent?this.parent.focusFilter:void 0)},set:function(t){this._focusFilter=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hoverOnFocus",{get:function(){return this.getPropertyValue("hoverOnFocus")},set:function(t){t!==this.hoverOnFocus&&this.setPropertyValue("hoverOnFocus",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tabindex",{get:function(){var t=this._tabindex;return null!=t?t:this.virtualParent?this.virtualParent.tabindex:this.parent?this.parent.tabindex:void 0},set:function(t){t=A.toNumber(t),this.setPropertyValue("tabindex",t)&&A.isNumber(t)&&(this.interactions.tabindex=t,this.setSVGAttribute({tabindex:t}),this.focusable=t>-1||void 0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inertiaOptions",{get:function(){return!this.interactions.inertiaOptions&&this.parent?this.parent.inertiaOptions:this.interactions.inertiaOptions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"draggable",{get:function(){return this.getPropertyValue("draggable")},set:function(t){var e=this;t=A.toBoolean(t),this.setPropertyValue("draggable",t)&&(t||this.isInteractive())&&(this.applyCursorStyle(),this.interactions.draggable=t,this.interactions.setEventDisposer("sprite-draggable",t,function(){return new h.c([e.events.on("down",e.handleDown,e,!1),e.events.on("dragstart",e.handleDragStart,e,!1),e.events.on("drag",e.handleDragMove,e,!1),e.events.on("dragstop",e.handleDragStop,e,!1)])}))},enumerable:!0,configurable:!0}),e.prototype.handleDragStart=function(t){this.interactions.isTouchProtected&&t.touch||(this.interactions.originalPosition={x:this.pixelX,y:this.pixelY},this._isDragged=!0,this.hideTooltip(0))},e.prototype.dragStart=function(t){this._isDragged=!0,Object(v.b)().dragStart(this.interactions,t)},e.prototype.handleDragStop=function(t){this.interactions.isTouchProtected&&t.touch||(this._isDragged=!1,this.showTooltip(),this.interactions.originalPosition=void 0)},e.prototype.dragStop=function(t){this._isDragged=!1,Object(v.b)().dragStop(this.interactions,t)},e.prototype.handleDragMove=function(t){if(!this.interactions.isTouchProtected||!t.touch){var e=this.interactions.originalPosition;if(e&&this._isDragged){var i=this.parent.globalScale*this.svgContainer.cssScale;this.moveTo({x:e.x+t.shift.x/i,y:e.y+t.shift.y/i},void 0,void 0,!0)}this.dispatchImmediately("dragged",t)}},Object.defineProperty(e.prototype,"inert",{get:function(){return this.getPropertyValue("inert")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("inert",t)&&(t||this.isInteractive())&&(this.interactions.inert=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hoverOptions",{get:function(){if(!this.interactions.hoverOptions){if(this.virtualParent)return this.virtualParent.hoverOptions;if(this.parent)return this.parent.hoverOptions}return this.interactions.hoverOptions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hoverable",{get:function(){return this.getPropertyValue("hoverable")},set:function(t){var e=this;t=A.toBoolean(t),this.setPropertyValue("hoverable",t)&&(t||this.isInteractive())&&(this.applyCursorStyle(),this.interactions.hoverable=t,this.interactions.setEventDisposer("sprite-hoverable",t,function(){return new h.c([e.events.on("over",e.handleOver,e,!1),e.events.on("out",e.handleOut,e,!1)])}))},enumerable:!0,configurable:!0}),e.prototype.handleOver=function(t){if(this._outTimeout&&this._outTimeout.dispose(),this.isHover){this.states.hasKey("hover")&&(this.isHidden||this.applyCurrentState());var e=void 0;t&&t.pointer&&(e=I.documentPointToSvg(t.pointer.point,this.svgContainer.SVGContainer,this.svgContainer.cssScale)),"hover"==this.showTooltipOn&&this.showTooltip(e)}else"hover"==this.showTooltipOn&&this.hideTooltip(),!this.isHidden&&this.states.hasKey("hover")&&this.applyCurrentState()},e.prototype.handleOut=function(t){var e=this;this.tooltip&&this.tooltip.targetSprite==this&&this.tooltip.keepTargetHover?this._outTimeout=this.setTimeout(function(){e.tooltip.isHover||(e.tooltip.targetSprite==e&&e.hideTooltip(),e._outTimeout=e.setTimeout(e.handleOutReal.bind(e),e.rollOutDelay))},10):("hover"==this.showTooltipOn&&this.hideTooltip(),this._outTimeout=this.setTimeout(this.handleOutReal.bind(this),this.rollOutDelay))},e.prototype.handleOutReal=function(){this.isHidden||this.isHiding||!this.states.hasKey("hover")||this.applyCurrentState()},Object.defineProperty(e.prototype,"hitOptions",{get:function(){if(!this.interactions.hitOptions){if(this.virtualParent)return this.virtualParent.hitOptions;if(this.parent)return this.parent.hitOptions}return this.interactions.hitOptions},enumerable:!0,configurable:!0}),e.prototype.handleDown=function(t){1===this.interactions.downPointers.length&&(this.interactions.originalPosition={x:this.pixelX,y:this.pixelY},this.interactions.originalAngle=this.rotation,this.interactions.originalScale=this.scale,this.states.hasKey("down")&&this.setState("down"))},e.prototype.handleUp=function(t){var e=this;this._isResized=!1,this.states.hasKey("down")&&this.applyCurrentState(),"hit"==this.showTooltipOn&&(this.showTooltip(),this._disposers.push(Object(v.b)().body.events.once("down",function(t){e.hideTooltip()})))},Object.defineProperty(e.prototype,"clickable",{get:function(){return this.getPropertyValue("clickable")},set:function(t){var e=this;t=A.toBoolean(t),this.setPropertyValue("clickable",t)&&(t||this.isInteractive())&&(this.applyCursorStyle(),this.interactions.clickable=t,this.interactions.setEventDisposer("sprite-clickable",t,function(){return new h.c([e.events.on("down",e.handleDown,e,!1),e.events.on("up",e.handleUp,e,!1)])}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"togglable",{get:function(){return this.getPropertyValue("togglable")},set:function(t){var e=this;t=A.toBoolean(t),this.setPropertyValue("togglable",t)&&(t||this.isInteractive())&&this.interactions.setEventDisposer("sprite-togglable",t,function(){return e.events.on("hit",e.handleToggle,e,!1)})},enumerable:!0,configurable:!0}),e.prototype.handleToggle=function(t){this.isActive=!this.isActive},Object.defineProperty(e.prototype,"contextMenuDisabled",{get:function(){return this.getPropertyValue("contextMenuDisabled")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("contextMenuDisabled",t)&&(this.interactions.contextMenuDisabled=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"url",{get:function(){return this.getPropertyValue("url")},set:function(t){this.setPropertyValue("url",t)&&(this._urlDisposer&&this._urlDisposer.dispose(),I.isNotEmpty(t)&&(this._urlDisposer=this.events.on("hit",this.urlHandler,this,!1),this.clickable=!0,this.cursorOverStyle=b.a.pointer))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"baseId",{get:function(){return!this._baseId&&this.parent&&(this.baseId=this.parent.baseId),this._baseId},set:function(t){this.setBaseId(t)},enumerable:!0,configurable:!0}),e.prototype.setBaseId=function(t){t!=this._baseId&&(this.invalid&&(this.invalid=!1,_.c.removeFromInvalidSprites(this),this.invalidate()),this._baseId=t)},Object.defineProperty(e.prototype,"baseSprite",{get:function(){return this.isBaseSprite?this:this.parent?this.parent.baseSprite:void 0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"urlTarget",{get:function(){return this.getPropertyValue("urlTarget")},set:function(t){this.setPropertyValue("urlTarget",t)},enumerable:!0,configurable:!0}),e.prototype.urlHandler=function(t){if(I.isNotEmpty(this.url)){var e=this.populateString(this.url);"_self"===this.urlTarget?window.location.href=e:window.open(e,this.urlTarget)}},Object.defineProperty(e.prototype,"swipeOptions",{get:function(){if(!this.interactions.swipeOptions){if(this.virtualParent)return this.virtualParent.swipeOptions;if(this.parent)return this.parent.swipeOptions}return this.interactions.swipeOptions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"swipeable",{get:function(){return this.getPropertyValue("swipeable")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("swipeable",t)&&(this.applyCursorStyle(),(t||this.isInteractive())&&(this.interactions.swipeable=t))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"trackable",{get:function(){return this.getPropertyValue("trackable")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("trackable",t)&&(t||this.isInteractive())&&(this.applyCursorStyle(),this.interactions.trackable=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"wheelable",{get:function(){return this.getPropertyValue("wheelable")},set:function(t){this.setPropertyValue("wheelable",t)&&(t||this.isInteractive())&&(this.applyCursorStyle(),this.interactions.wheelable=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"resizable",{get:function(){return this.getPropertyValue("resizable")},set:function(t){var e=this;t=A.toBoolean(t),this.setPropertyValue("resizable",t)&&(t||this.isInteractive())&&(this.applyCursorStyle(),this.interactions.resizable=t,this.interactions.setEventDisposer("sprite-resizable",t,function(){return new h.c([e.events.on("down",e.handleDown,e,!1),e.events.on("resize",e.handleResize,e,!1)])}))},enumerable:!0,configurable:!0}),e.prototype.handleResize=function(t){if((!this.interactions.isTouchProtected||!t.touch)&&(this._isResized=!0,this.scale=this.interactions.originalScale*t.scale,this.validatePosition(),this.draggable||this.dragWhileResize)){this._isDragged=!1;var e=I.documentPointToSvg(t.point1,this.htmlContainer,this.svgContainer.cssScale),i=I.documentPointToSvg(t.point2,this.htmlContainer,this.svgContainer.cssScale),n=k.getMidPoint(e,i),r=I.documentPointToSprite(t.startPoint1,this.parent),a=I.documentPointToSprite(t.startPoint2,this.parent),o=this.interactions.originalPosition,s=this.interactions.originalScale;if(o){var l={x:(r.x-o.x)/s,y:(r.y-o.y)/s},u={x:(a.x-o.x)/s,y:(a.y-o.y)/s},h=k.getMidPoint(l,u),c=I.svgPointToSprite(n,this.parent);this.moveTo({x:c.x-h.x*this.scale,y:c.y-h.y*this.scale},void 0,void 0,!0)}}},Object.defineProperty(e.prototype,"cursorOptions",{get:function(){if(!this.interactions.cursorOptions){if(this.virtualParent)return this.virtualParent.cursorOptions;if(this.parent)return this.parent.cursorOptions}return this.interactions.cursorOptions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cursorOverStyle",{set:function(t){this.cursorOptions.overStyle||(this.interactions.cursorOptions={defaultStyle:this.cursorOptions.defaultStyle}),this.cursorOptions.overStyle=t,Object(v.b)().applyCursorOverStyle(this.interactions)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cursorDownStyle",{set:function(t){this.cursorOptions.downStyle=t},enumerable:!0,configurable:!0}),e.prototype.applyCursorStyle=function(){},Object.defineProperty(e.prototype,"interactionsEnabled",{get:function(){return!1!==this.getPropertyValue("interactionsEnabled")&&(this.virtualParent?this.virtualParent.interactionsEnabled:!this.parent||this.parent.interactionsEnabled)},set:function(t){if(t=A.toBoolean(t),this.setPropertyValue("interactionsEnabled",t)){var e=null;t?this.group.node.style.pointerEvents="":e="none",this.group.node.style.pointerEvents=e}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"exporting",{get:function(){return this.getExporting()},set:function(t){this._exporting.set(t,t)},enumerable:!0,configurable:!0}),e.prototype.getExporting=function(){var t=this._exporting.get();return t||(!this.isStandaloneInstance&&this.parent?this.parent.exporting:((t=new C.a(this.svgContainer.SVGContainer)).sprite=this,t.language=this.language,t.numberFormatter=this.numberFormatter,t.dateFormatter=this.dateFormatter,t.durationFormatter=this.durationFormatter,this._exporting.set(t,t),t))},Object.defineProperty(e.prototype,"exportable",{get:function(){return this._exportable},set:function(t){var e=this.svgContainer;this._exportable=t,e&&(t?j.remove(e.nonExportableSprites,this):-1==j.indexOf(e.nonExportableSprites,this)&&e.nonExportableSprites.push(this))},enumerable:!0,configurable:!0}),e.prototype.modalPrefix=function(t){return t=x.a.classNamePrefix+t},Object.defineProperty(e.prototype,"modal",{get:function(){var t=this.svgContainer;if(t){var e=t.modal;return e.adapter.has("classPrefix",this.modalPrefix)||e.adapter.add("classPrefix",this.modalPrefix),e}},enumerable:!0,configurable:!0}),e.prototype.openModal=function(t,e){var i=this.svgContainer;if(i)return i.openModal(t,e)},e.prototype.closeModal=function(){var t=this.svgContainer;t&&t.closeModal()},Object.defineProperty(e.prototype,"popups",{get:function(){var t=this.svgContainer;if(t){var e=t.popups;return e.template.sprite=this,e.template.adapter.has("classPrefix",this.modalPrefix)||e.template.adapter.add("classPrefix",this.modalPrefix),e}},enumerable:!0,configurable:!0}),e.prototype.openPopup=function(t,e){var i=this.svgContainer;if(i)return i.openPopup(t,e)},e.prototype.closeAllPopups=function(){var t=this.svgContainer;t&&t.closeAllPopups()},Object.defineProperty(e.prototype,"x",{get:function(){return this.getPropertyValue("x")},set:function(t){this.isDragged||this.setPercentProperty("x",t,!1,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelX",{get:function(){var t=k.fitToRange(this.getPixelX(this.x),this.minX,this.maxX);return this._adapterO?this._adapterO.apply("pixelX",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativeX",{get:function(){return this._adapterO?this._adapterO.apply("relativeX",this.getRelativeX(this.x)):this.getRelativeX(this.x)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minX",{get:function(){return this.getPropertyValue("minX")},set:function(t){A.isNumber(t)&&(t=k.round(t,this._positionPrecision,!0),this.setPropertyValue("minX",t,!1,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxX",{get:function(){return this.getPropertyValue("maxX")},set:function(t){A.isNumber(t)&&(t=k.round(t,this._positionPrecision,!0),this.setPropertyValue("maxX",t,!1,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this.getPropertyValue("y")},set:function(t){this.isDragged||this.setPercentProperty("y",t,!1,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelY",{get:function(){var t=k.fitToRange(this.getPixelY(this.y),this.minY,this.maxY);return this._adapterO?this._adapterO.apply("pixelY",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativeY",{get:function(){return this._adapterO?this._adapterO.apply("relativeY",this.getRelativeX(this.y)):this.getRelativeX(this.y)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minY",{get:function(){return this.getPropertyValue("minY")},set:function(t){A.isNumber(t)&&(t=k.round(t,this._positionPrecision,!0),this.setPropertyValue("minY",t,!1,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxY",{get:function(){return this.getPropertyValue("maxY")},set:function(t){A.isNumber(t)&&(t=k.round(t,this._positionPrecision,!0),this.setPropertyValue("maxY",t,!1,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dx",{get:function(){return this.getPropertyValue("dx")},set:function(t){A.isNumber(t)&&(t=k.round(t,this._positionPrecision,!0),this.setPropertyValue("dx",t,!1,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dy",{get:function(){return this.getPropertyValue("dy")},set:function(t){A.isNumber(t)&&(t=k.round(t,this._positionPrecision,!0),this.setPropertyValue("dy",t,!1,!0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rotation",{get:function(){return this.getPropertyValue("rotation")},set:function(t){t=A.toNumber(t),A.isNumber(t)||(t=0),this.setPropertyValue("rotation",t,!1,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"align",{get:function(){return this.getPropertyValue("align")},set:function(t){t=A.toText(t),this.setPropertyValue("align",t)&&this.parent&&this.parent.invalidateLayout()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valign",{get:function(){return this.getPropertyValue("valign")},set:function(t){t=A.toText(t),this.setPropertyValue("valign",t)&&this.parent&&this.parent.invalidateLayout()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"horizontalCenter",{get:function(){return this.getPropertyValue("horizontalCenter")},set:function(t){t=A.toText(t),this.setPropertyValue("horizontalCenter",t)&&this.updateCenter()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"verticalCenter",{get:function(){return this.getPropertyValue("verticalCenter")},set:function(t){t=A.toText(t),this.setPropertyValue("verticalCenter",t)&&this.updateCenter()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxWidth",{get:function(){var t=this.getPropertyValue("maxWidth");if(!A.isNumber(t)&&this.parent){var e=this.parent.maxWidth;return"absolute"!=this.parent.layout&&"none"!=this.align&&void 0!=this.align&&(e=e-this.pixelMarginLeft-this.pixelMarginRight),e}return t},set:function(t){this.setMaxWidth(t)},enumerable:!0,configurable:!0}),e.prototype.setMaxWidth=function(t){var e=this.maxWidth,i=this.maxHeight;if(this.setPropertyValue("maxWidth",t)){A.isNumber(this.relativeWidth)&&this.invalidate();var n={type:"maxsizechanged",target:this,previousWidth:e,previousHeight:i};this.dispatchImmediately("maxsizechanged",n)}},Object.defineProperty(e.prototype,"maxHeight",{get:function(){var t=this.getPropertyValue("maxHeight");if(!A.isNumber(t)&&this.parent){var e=this.parent.maxHeight;return"absolute"!=this.parent.layout&&"none"!=this.valign&&void 0!=this.valign&&(e=e-this.pixelMarginTop-this.pixelMarginBottom),e}return t},set:function(t){this.setMaxHeight(t)},enumerable:!0,configurable:!0}),e.prototype.setMaxHeight=function(t){var e=this.maxWidth,i=this.maxHeight;if(this.setPropertyValue("maxHeight",t)){A.isNumber(this.relativeHeight)&&this.invalidate();var n={type:"maxsizechanged",target:this,previousWidth:e,previousHeight:i};this.dispatchImmediately("maxsizechanged",n)}},Object.defineProperty(e.prototype,"minWidth",{get:function(){return this.getPropertyValue("minWidth")},set:function(t){this.setPropertyValue("minWidth",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minHeight",{get:function(){return this.getPropertyValue("minHeight")},set:function(t){this.setPropertyValue("minHeight",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this.getPropertyValue("width")},set:function(t){this.setPercentProperty("width",t,!0,!1,this._positionPrecision,!0)&&(this.percentWidth=void 0,this.relativeWidth=void 0,t instanceof E.a?(this.percentWidth=t.percent,A.isNumber(this._pixelWidth)&&(this.maxWidth=void 0),this._pixelWidth=void 0):(this._pixelWidth=Number(t),this.maxWidth=this._pixelWidth),this.invalidatePosition())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this.getPropertyValue("height")},set:function(t){this.setPercentProperty("height",t,!0,!1,this._positionPrecision,!0)&&(this.percentHeight=void 0,this._relativeHeight=void 0,t instanceof E.a?(this.percentHeight=t.percent,A.isNumber(this._pixelHeight)&&(this.maxHeight=void 0),this._pixelHeight=void 0):(this._pixelHeight=Number(t),this.maxHeight=this._pixelHeight),this.invalidatePosition())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelWidth",{get:function(){var t;t=A.isNumber(this.percentWidth)?this.maxWidth:A.isNumber(this._pixelWidth)?this._pixelWidth:0;var e=this.minWidth;null!=e&&t<e&&(t=e);var i=k.round(t,this._positionPrecision,!0);return this._adapterO?this._adapterO.apply("pixelWidth",i):i},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelHeight",{get:function(){var t;t=A.isNumber(this.percentHeight)?this.maxHeight:A.isNumber(this._pixelHeight)?this._pixelHeight:0;var e=this.minHeight;null!=e&&t<e&&(t=e);var i=k.round(t,this._positionPrecision,!0);return this._adapterO?this._adapterO.apply("pixelHeight",i):i},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativeWidth",{get:function(){var t=this._relativeWidth;if(A.isNumber(t))return this._adapterO?this._adapterO.apply("relativeWidth",t):t},set:function(t){this._relativeWidth!=t&&(this._relativeWidth=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativeHeight",{get:function(){var t=this._relativeHeight;if(A.isNumber(t))return this._adapterO?this._adapterO.apply("relativeHeight",t):t},set:function(t){this._relativeHeight!=t&&(this._relativeHeight=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"measuredWidth",{get:function(){return this.disabled||this.__disabled?0:this._adapterO?this._adapterO.apply("measuredWidth",this._measuredWidth):this._measuredWidth},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"measuredHeight",{get:function(){return this.disabled||this.__disabled?0:this._adapterO?this._adapterO.apply("measuredHeight",this._measuredHeight):this._measuredHeight},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outerWidth",{get:function(){var t=this.pixelWidth+this.pixelMarginRight+this.pixelMarginLeft;return this._adapterO?this._adapterO.apply("outerWidth",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outerHeight",{get:function(){var t=this.pixelHeight+this.pixelMarginTop+this.pixelMarginBottom;return this._adapterO?this._adapterO.apply("outerHeight",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"innerWidth",{get:function(){var t=Math.max(0,this.pixelWidth-this.pixelPaddingRight-this.pixelPaddingLeft);return this._adapterO?this._adapterO.apply("innerWidth",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"innerHeight",{get:function(){var t=Math.max(0,this.pixelHeight-this.pixelPaddingTop-this.pixelPaddingBottom);return this._adapterO?this._adapterO.apply("innerHeight",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"globalScale",{get:function(){var t=this.scale;return this.parent&&(t*=this.parent.globalScale),this._adapterO?this._adapterO.apply("globalScale",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"scale",{get:function(){return this.getPropertyValue("scale")},set:function(t){(t=A.toNumber(t))<0&&(t=0),t!=this.getPropertyValue("scale")&&(this.setPropertyValue("scale",t,!1,!0),this.handleGlobalScale())},enumerable:!0,configurable:!0}),e.prototype.margin=function(t,e,i,n){return this.marginTop=t,this.marginRight=e,this.marginBottom=i,this.marginLeft=n,this},Object.defineProperty(e.prototype,"marginLeft",{get:function(){return this.getPropertyValue("marginLeft")},set:function(t){this.setPercentProperty("marginLeft",t,!0,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"marginRight",{get:function(){return this.getPropertyValue("marginRight")},set:function(t){this.setPercentProperty("marginRight",t,!0,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"marginTop",{get:function(){return this.getPropertyValue("marginTop")},set:function(t){this.setPercentProperty("marginTop",t,!0,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"marginBottom",{get:function(){return this.getPropertyValue("marginBottom")},set:function(t){this.setPercentProperty("marginBottom",t,!0,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelMarginRight",{get:function(){var t=this.getPixelX(this.marginRight);return this._adapterO?this._adapterO.apply("pixelMarginRight",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativeMarginRight",{get:function(){var t=this.getRelativeX(this.marginRight);return this._adapterO?this._adapterO.apply("relativeMarginRight",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelMarginLeft",{get:function(){var t=this.getPixelX(this.marginLeft);return this._adapterO?this._adapterO.apply("pixelMarginLeft",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativeMarginLeft",{get:function(){var t=this.getRelativeX(this.marginLeft);return this._adapterO?this._adapterO.apply("relativeMarginLeft",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelMarginTop",{get:function(){var t=this.getPixelY(this.marginTop);return this._adapterO?this._adapterO.apply("pixelMarginTop",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativeMarginTop",{get:function(){var t=this.getRelativeY(this.marginTop);return this._adapterO?this._adapterO.apply("relativeMarginTop",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelMarginBottom",{get:function(){var t=this.getPixelY(this.marginBottom);return this._adapterO?this._adapterO.apply("pixelMarginBottom",t):t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativeMarginBottom",{get:function(){var t=this.getRelativeY(this.marginBottom);return this._adapterO?this._adapterO.apply("relativeMarginBottom",t):t},enumerable:!0,configurable:!0}),e.prototype.padding=function(t,e,i,n){return this.paddingTop=t,this.paddingRight=e,this.paddingBottom=i,this.paddingLeft=n,this},Object.defineProperty(e.prototype,"paddingLeft",{get:function(){return this.getPropertyValue("paddingLeft")},set:function(t){this.setPercentProperty("paddingLeft",t,!0,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"paddingRight",{get:function(){return this.getPropertyValue("paddingRight")},set:function(t){this.setPercentProperty("paddingRight",t,!0,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"paddingTop",{get:function(){return this.getPropertyValue("paddingTop")},set:function(t){this.setPercentProperty("paddingTop",t,!0,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"paddingBottom",{get:function(){return this.getPropertyValue("paddingBottom")},set:function(t){this.setPercentProperty("paddingBottom",t,!0,!0,this._positionPrecision,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelPaddingRight",{get:function(){return this.getPixelX(this.paddingRight)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativePaddingRight",{get:function(){return this.getRelativeX(this.paddingRight)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelPaddingLeft",{get:function(){return this.getPixelX(this.paddingLeft)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativePaddingLeft",{get:function(){return this.getRelativeX(this.paddingLeft)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelPaddingTop",{get:function(){return this.getPixelY(this.paddingTop)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativePaddingTop",{get:function(){return this.getRelativeY(this.paddingTop)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelPaddingBottom",{get:function(){return this.getPixelY(this.paddingBottom)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"relativePaddingBottom",{get:function(){return this.getRelativeY(this.paddingBottom)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"path",{get:function(){return this.getPropertyValue("path")},set:function(t){this.setPath(t)},enumerable:!0,configurable:!0}),e.prototype.setPath=function(t){return!!this.setPropertyValue("path",t)&&(this._isPath||(this.element&&(!this.element.node||this.element.node instanceof SVGPathElement)||(this.element=this.paper.add("path")),this._isPath=!0),A.hasValue(t)?this.element.attr({d:t}):this.element.removeAttr("d"),this.invalidatePosition(),this.inited||this.events.once("inited",this.validatePosition,this,!1),!0)},Object.defineProperty(e.prototype,"fillModifier",{get:function(){return this.getPropertyValue("fillModifier")},set:function(t){this.setPropertyValue("fillModifier",t)&&this.setFill(this.fill)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeModifier",{get:function(){return this.getPropertyValue("strokeModifier")},set:function(t){this.setPropertyValue("strokeModifier",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fillOpacity",{get:function(){return this.getPropertyValue("fillOpacity")},set:function(t){t=k.toNumberRange(t,0,1),this.setPropertyValue("fillOpacity",t)&&this.setSVGAttribute({"fill-opacity":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fill",{get:function(){return this.getPropertyValue("fill")},set:function(t){this.setFill(t)},enumerable:!0,configurable:!0}),e.prototype.setFill=function(t){if(A.isObject(t)||(t=Object(m.e)(t)),this.setColorProperty("fill",t)||this.fillModifier)if(t instanceof m.a&&this.fillModifier&&(t=this.fillModifier.modify(t)),this.realFill=t,t instanceof m.a)this.setSVGAttribute({fill:t.toString()});else if(A.hasValue(t)){if(t instanceof f.a||t instanceof g.a||t instanceof y.a){var e=t;e.paper=this.paper,this.setSVGAttribute({fill:'url("'+I.getBaseURI()+e.id+'")'})}}else this.removeSVGAttribute("fill")},Object.defineProperty(e.prototype,"opacity",{get:function(){return this.getPropertyValue("opacity")},set:function(t){t=k.toNumberRange(t,0,1),this.setPropertyValue("opacity",t)&&this.setSVGAttribute({opacity:t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"stroke",{get:function(){return this.getPropertyValue("stroke")},set:function(t){this.setStroke(t)},enumerable:!0,configurable:!0}),e.prototype.setStroke=function(t){if(A.isObject(t)||(t=Object(m.e)(t)),this.setColorProperty("stroke",t)||this.strokeModifier)if(t instanceof m.a&&this.strokeModifier&&(t=this.strokeModifier.modify(t)),this.realStroke=t,t instanceof m.a)"none"==t.hex?this.removeSVGAttribute("stroke"):this.setSVGAttribute({stroke:t.toString()});else if(A.hasValue(t)){if(t instanceof f.a||t instanceof g.a||t instanceof y.a){var e=t;e.paper=this.paper,this.setSVGAttribute({stroke:'url("'+I.getBaseURI()+e.id+'")'})}}else this.removeSVGAttribute("stroke")},Object.defineProperty(e.prototype,"strokeOpacity",{get:function(){return this.getPropertyValue("strokeOpacity")},set:function(t){t=k.toNumberRange(t,0,1),this.setPropertyValue("strokeOpacity",t)&&this.setSVGAttribute({"stroke-opacity":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nonScalingStroke",{get:function(){return this.getPropertyValue("nonScalingStroke")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("nonScalingStroke",t)&&(this.strokeWidth=this.strokeWidth)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nonScaling",{get:function(){return this.getPropertyValue("nonScaling")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("nonScaling",t,!1,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeWidth",{get:function(){return this.getPropertyValue("strokeWidth")},set:function(t){t=A.toNumber(t),this.setPropertyValue("strokeWidth",t,!0),this.nonScalingStroke&&(A.isNumber(t)||(t=1),t/=this.globalScale),this.setSVGAttribute({"stroke-width":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeDasharray",{get:function(){return this.getPropertyValue("strokeDasharray")},set:function(t){t=A.toText(t),this.setPropertyValue("strokeDasharray",t)&&this.setSVGAttribute({"stroke-dasharray":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeDashoffset",{get:function(){return this.getPropertyValue("strokeDashoffset")},set:function(t){t=A.toNumber(t),this.setPropertyValue("strokeDashoffset",t)&&this.setSVGAttribute({"stroke-dashoffset":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeLinecap",{get:function(){return this.getPropertyValue("strokeLinecap")},set:function(t){this.setPropertyValue("strokeLinecap",t)&&this.setSVGAttribute({"stroke-linecap":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeLinejoin",{get:function(){return this.getPropertyValue("strokeLinejoin")},set:function(t){this.setPropertyValue("strokeLinejoin",t)&&this.setSVGAttribute({"stroke-linejoin":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shapeRendering",{get:function(){return this.getPropertyValue("shapeRendering")},set:function(t){t=A.toText(t),this.setPropertyValue("shapeRendering",t)&&this.setSVGAttribute({"shape-rendering":t})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pixelPerfect",{get:function(){return this.getPropertyValue("pixelPerfect")},set:function(t){t=A.toBoolean(t),this._positionPrecision=t?0:3,this.setPropertyValue("pixelPerfect",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rtl",{get:function(){return A.hasValue(this._rtl)?this._rtl:this.virtualParent?this.virtualParent.rtl:!!this.parent&&this.parent.rtl},set:function(t){t=A.toBoolean(t),this._rtl=t},enumerable:!0,configurable:!0}),e.prototype.show=function(t){return this.showReal(t)},e.prototype.showReal=function(t){var e=this;if(!this.preventShow){var i,n=this.defaultState.properties;if(!this.disabled&&(this.isHidden||!this.visible||this.isHiding||null!=n.opacity&&this.opacity<n.opacity&&!this.isShowing)&&!this.isDisposed()){this.invalid&&this.validate(),this.positionInvalid&&this.validatePosition(),A.isNumber(t)||(t=this.defaultState.transitionDuration),this._hideAnimation&&(this._hideAnimation.kill(),this._hideAnimation=void 0),this._showHideDisposer&&this.removeDispose(this._showHideDisposer),this._isHidden=!1,this.isHiding=!1,this.isShowing=!0,(i=this.applyCurrentState(t))&&!i.isFinished()?(this._showHideDisposer=i.events.on("animationended",function(){e.isShowing=!1}),this._disposers.push(this._showHideDisposer)):this.isShowing=!1;var r=this.defaultState.properties.visible;A.hasValue(r)||(r=!0),this.visible=r,this.readerHidden=!1,this.dispatchImmediately("shown")}return i}},e.prototype.hide=function(t){return this.hideReal(t)},e.prototype.hideReal=function(t){var e,i=this;if(!this.isHiding&&this.visible&&!this.isDisposed()){this.tooltip&&this.tooltip.currentSprite==this&&this.hideTooltip(0),this._hideAnimation&&(this._hideAnimation.kill(),this._hideAnimation=void 0),this.isShowing=!1,this._showHideDisposer&&this.removeDispose(this._showHideDisposer);var n=this.hiddenState;n?(e=this.setState(n,t,void 0))&&!e.isFinished()?(this._hideAnimation=e,this._showHideDisposer=e.events.on("animationended",function(){i.isHiding=!1,i._isHidden=!0},this),this._disposers.push(this._showHideDisposer),this._disposers.push(e)):(this.isHiding=!1,this._isHidden=!0):(this.visible=!1,this.isHiding=!1,this._isHidden=!0),this.readerHidden=!0,this.dispatchImmediately("hidden"),this.invalidate()}return A.isNumber(t)||(t=this.hiddenState.transitionDuration),e},Object.defineProperty(e.prototype,"visible",{get:function(){return this.getVisibility()},set:function(t){t=A.toBoolean(t),this.setVisibility(t)},enumerable:!0,configurable:!0}),e.prototype.getVisibility=function(){var t=this.getPropertyValue("visible");return A.hasValue(t)||(t=!0),t},e.prototype.setVisibility=function(t){if(this.setPropertyValue("visible",t)&&(t?this.group.removeAttr("visibility"):this.group.attr({visibility:"hidden"}),this.events.isEnabled("visibilitychanged"))){var e={type:"visibilitychanged",target:this,visible:t};this.events.dispatchImmediately("visibilitychanged",e)}},Object.defineProperty(e.prototype,"zIndex",{get:function(){return this.getPropertyValue("zIndex")},set:function(t){t=A.toNumber(t),this.setPropertyValue("zIndex",t)&&this.dispatch("zIndexChanged")},enumerable:!0,configurable:!0}),e.prototype.toFront=function(){var t=this.parent;t&&t.children.indexOf(this)!=t.children.length-1&&(t.children.moveValue(this,t.children.length-1),this.dispatch("zIndexChanged"))},e.prototype.toBack=function(){var t=this.parent;t&&0!=t.children.indexOf(this)&&(t.children.moveValue(this,0),this.dispatch("zIndexChanged"))},Object.defineProperty(e.prototype,"tooltip",{get:function(){return this._tooltip?this._tooltip:this.virtualParent?this.virtualParent.tooltip:this.parent?this.parent.tooltip:void 0},set:function(t){this._tooltip&&this.removeDispose(this._tooltip),this._tooltip=t,t&&(t.parent=this.tooltipContainer)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipDataItem",{get:function(){var t=this._tooltipDataItem;return t||this.dataItem},set:function(t){this._tooltipDataItem=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipColorSource",{get:function(){return this._tooltipColorSource},set:function(t){this._tooltipColorSource=t},enumerable:!0,configurable:!0}),e.prototype.showTooltip=function(t){"always"==this.showTooltipOn&&!this._tooltip&&this.tooltip&&(this._tooltip=this.tooltip.clone());for(var e=this;void 0!=e;){if(!e.visible||e.disabled||e.__disabled)return void(this._tooltip&&this._tooltip.visible&&this._tooltip.hide(0));e=e.parent}if(A.hasValue(this.tooltipText)||A.hasValue(this.tooltipHTML)){var i=this.tooltip,n=this.tooltipDataItem;if(i){i.targetSprite=this;var r=this,a=this.tooltipColorSource;if((i.getStrokeFromObject||i.getFillFromObject)&&a&&(a.isTemplate?n&&j.eachContinue(n.sprites,function(t){return t.clonedFrom!=a||(r=t,!1)}):r=a),i.getStrokeFromObject){for(var o=this.stroke,s=r;void 0!=s.parent&&(void 0==(o=s.stroke)&&(s=s.parent),void 0==o););o instanceof m.a?i.background.animate({property:"stroke",to:o},i.animationDuration):i.background.stroke=o}if(i.dataItem=n,i.label.populateStringFrom=this,i.getFillFromObject){var l=this.fill;for(s=r;void 0!=s.parent;)if(void 0==(l=s.fill)||l instanceof m.a&&void 0==l.rgb)s=s.parent;else if(void 0!=l)break;void 0==l&&(l=Object(m.c)("#000000")),l instanceof m.a&&i.visible?i.background.animate({property:"fill",to:l},i.animationDuration):i.background.fill=l,i.autoTextColor&&l instanceof m.a&&(i.label.fill=l.alternative)}var u="";if(this.tooltipHTML&&(i.html=this.tooltipHTML,u=this.tooltipHTML),this.tooltipText&&(i.text=this.tooltipText,u=this.tooltipText),this.updateTooltipPosition(t)){if(i.readerDescribedBy=this.uidAttr(),i.label.invalid&&i.label.validate(),void 0!=u&&""!=u&&""!=i.label.currentText){i&&!i.parent&&(i.parent=this.tooltipContainer);var h=i.defaultState.transitionDuration;return h<=0&&(h=1),i.show(h),i.currentSprite=this,!0}this.hideTooltip(0)}else this.hideTooltip(0)}}return!1},e.prototype.updateTooltipPosition=function(t){var e=this;if("pointer"!=this.tooltipPosition){var i=I.spritePointToSvg({x:this.getTooltipX(),y:this.getTooltipY()},this);return this.pointTooltipTo(i)}if(this._interactionDisposer&&this._interactionDisposer.dispose(),this._interactionDisposer=Object(v.b)().body.events.on("track",function(t){return e.pointTooltipTo(I.documentPointToSvg(t.point,e.svgContainer.SVGContainer,e.svgContainer.cssScale),!0)}),t)return this.pointTooltipTo(t,!0)},e.prototype.pointTooltipTo=function(t,e){var i=this.tooltip;if(i&&this.topParent){if(i.showInViewport)return i.pointTo(t,e),!0;if(k.isInRectangle(t,{x:0,y:0,width:this.topParent.maxWidth,height:this.topParent.maxHeight}))return i.pointTo(t,e),!0}return!1},e.prototype.hideTooltip=function(t){if("always"!=this.showTooltipOn){var e=this.tooltip;e&&(e.targetSprite==this&&(e.targetSprite=void 0),e.hide(t),this._interactionDisposer&&(this._interactionDisposer.dispose(),this._interactionDisposer=void 0))}},Object.defineProperty(e.prototype,"tooltipHTML",{get:function(){return this.getPropertyValue("tooltipHTML")},set:function(t){t=A.toText(t),this.hoverable=!0,this.setPropertyValue("tooltipHTML",t)&&this.tooltip&&this.tooltip.visible&&this.showTooltip()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipText",{get:function(){return this.getPropertyValue("tooltipText")},set:function(t){(t=A.toText(t))&&(this.hoverable=!0),this.setPropertyValue("tooltipText",t)&&this.tooltip&&this.tooltip.visible&&this.showTooltip()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipContainer",{get:function(){return this._tooltipContainer?this._tooltipContainer:this.parent?this.parent.tooltipContainer:void 0},set:function(t){this._tooltipContainer=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipX",{get:function(){return this.getTooltipX()},set:function(t){this.setPercentProperty("tooltipX",t)&&this.tooltip&&this.tooltip.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"alwaysShowTooltip",{get:function(){return"always"==this.getPropertyValue("showTooltipOn")},set:function(t){(t=A.toBoolean(t))&&(this.showTooltipOn="always")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"showTooltipOn",{get:function(){return this.getPropertyValue("showTooltipOn")},set:function(t){this.setPropertyValue("showTooltipOn",t)&&("hit"==t&&(this.clickable=!0),this.tooltip&&("always"==t?this.showTooltip():this.handleAlwaysShowTooltip()))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipPosition",{get:function(){return this.getPropertyValue("tooltipPosition")},set:function(t){this.setPropertyValue("tooltipPosition",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltipY",{get:function(){return this.getTooltipY()},set:function(t){this.setPercentProperty("tooltipY",t)&&this.tooltip&&this.tooltip.invalidate()},enumerable:!0,configurable:!0}),e.prototype.getTooltipX=function(){var t,e=this.getPropertyValue("tooltipX");return A.hasValue(e)||(e=Object(E.c)(50)),A.isNumber(e)&&(t=e),e instanceof E.a&&(t=this.maxLeftSelf+this._measuredWidthSelf*e.value-this.pixelPaddingLeft-this.ex),A.isNumber(t)||(t=0),t},e.prototype.getTooltipY=function(){var t,e=this.getPropertyValue("tooltipY");return A.hasValue(e)||(e=Object(E.c)(50)),A.isNumber(e)&&(t=e),e instanceof E.a&&(t=this.maxTopSelf+this._measuredHeightSelf*e.value-this.pixelPaddingTop-this.ey),A.isNumber(t)||(t=0),t},e.prototype.raiseCriticalError=function(t){this.svgContainer&&(this._adapterO?this.modal.content=this._adapterO.apply("criticalError",t).message:this.modal.content=t.message,this.modal.closable=!1,this.modal.open(),this.disabled=!0),x.a.verbose&&console.log(t)},e.prototype.processConfig=function(e){e&&(A.hasValue(e.tooltipColorSource)&&A.isString(e.tooltipColorSource)&&this.map.hasKey(e.tooltipColorSource)&&(e.tooltipColorSource=this.map.getKey(e.tooltipColorSource)),A.hasValue(e.cursorOverStyle)&&A.isString(e.cursorOverStyle)&&(e.cursorOverStyle=this.getCursorStyle(e.cursorOverStyle)),A.hasValue(e.cursorDowntyle)&&A.isString(e.cursorDowntyle)&&(e.cursorDowntyle=this.getCursorStyle(e.cursorDowntyle)),A.hasValue(e.cursorOptions)&&(A.hasValue(e.cursorOptions.overStyle)&&A.isString(e.cursorOptions.overStyle)&&(e.cursorOptions.overStyle=this.getCursorStyle(e.cursorOptions.overStyle)),A.hasValue(e.cursorOptions.downStyle)&&A.isString(e.cursorOptions.downStyle)&&(e.cursorOptions.downStyle=this.getCursorStyle(e.cursorOptions.downStyle)))),t.prototype.processConfig.call(this,e),this.processDelayedMap()},e.prototype.getCursorStyle=function(t){switch(t){case"grab":return b.a.grab;case"grabbing":return b.a.grabbing;case"pointer":return b.a.pointer;case"horizontalResize":return b.a.horizontalResize;case"verticalResize":return b.a.verticalResize;default:return b.a.default}},e.prototype.configOrder=function(e,i){return e==i?0:"tooltipColorSource"==e?1:"tooltipColorSource"==i?-1:t.prototype.configOrder.call(this,e,i)},Object.defineProperty(e.prototype,"isHidden",{get:function(){return this._isHidden?this._isHidden:!!this._parent&&this._parent.isHidden},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"showOnInit",{get:function(){return this.getPropertyValue("showOnInit")},set:function(t){t=A.toBoolean(t),this.setShowOnInit(t)},enumerable:!0,configurable:!0}),e.prototype.setShowOnInit=function(t){this.setPropertyValue("showOnInit",t)&&(this.isTemplate||(!t||this.inited||this.hidden?this._showOnInitDisposer&&this._showOnInitDisposer.dispose():(this._showOnInitDisposer=new h.c([_.c.events.once("enterframe",this.hideInitially,this),this.events.once("beforevalidated",this.hideInitially,this,!1),this.events.on("inited",this.appear,this,!1)]),this._disposers.push(this._showOnInitDisposer))))},e.prototype.hideInitially=function(){this.isDisposed()||(this.appeared=!1,this.inited||this.hide(0))},e.prototype.appear=function(){var t=this;if(this.appeared=!1,this.hidden||this.isHidden||this.hide(0),this.hidden)this.appeared=!0,this.dispatch("appeared");else{var e=this.show();e&&!e.isFinished()?e.events.on("animationended",function(){t.appeared=!0,t.dispatch("appeared")}):(this.appeared=!0,this.dispatch("appeared"))}},Object.defineProperty(e.prototype,"hidden",{get:function(){return this.getPropertyValue("hidden")},set:function(t){t=A.toBoolean(t),this.setPropertyValue("hidden",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bbox",{get:function(){return this.definedBBox?this.definedBBox:this._bbox},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"plugins",{get:function(){var t=this;return this._plugins||(this._plugins=new u.b,this._disposers.push(this._plugins.events.on("inserted",function(e){e.newValue.target=t,e.newValue.init()})),this._disposers.push(new u.c(this._plugins))),this._plugins},enumerable:!0,configurable:!0}),e.prototype._systemUpdate=function(t){this.validate()},e.prototype._systemCheckIfValidate=function(){return!0},e.prototype._systemValidatePositions=function(){this.validatePosition()},e.prototype._systemValidateLayouts=function(){},e}(o.b);_.c.registeredClasses.Sprite=N},Vwc7:function(t,e,i){"use strict";var n=i("0sYB"),r=i("vfdp"),a=i("1wCr"),o=i("lnCe"),s=i("3sMl"),l=i("xaIW"),u=i("7W4+"),h=i("6aQQ"),c=i("JZRr"),p=i("o3G/"),d=i("Kg2n"),f=i("3weC"),g=i("7X7h"),y=i("9XRO"),m=i("EErT"),v=i("Pm8L"),b=i("QzDi"),x=i("kcMx"),_=i("GtmK"),P=i("YG4I"),w=i("KSd4"),O=i("gxUV"),T=i("8+rI"),S=i("EVp9"),C=i("k2B3"),I=i("z3p0"),k=i("LO3D"),D=i("fYap"),j=i("lt6Q"),V=i("vfRf"),A=i("KslR"),M=i("0irS"),F=i("6WsA"),E=i("NRfM"),R=i("SqFF"),N=i("X/sl").forEach,L=D("hidden"),B=A("toPrimitive"),U=R.set,W=R.getterFor("Symbol"),Y=Object.prototype,H=r.Symbol,z=a("JSON","stringify"),X=O.f,G=T.f,K=P.f,q=S.f,Z=k("symbols"),Q=k("op-symbols"),J=k("string-to-symbol-registry"),$=k("symbol-to-string-registry"),tt=k("wks"),et=r.QObject,it=!et||!et.prototype||!et.prototype.findChild,nt=s&&h(function(){return 7!=b(G({},"a",{get:function(){return G(this,"a",{value:7}).a}})).a})?function(t,e,i){var n=X(Y,e);n&&delete Y[e],G(t,e,i),n&&t!==Y&&G(Y,e,n)}:G,rt=function(t,e){var i=Z[t]=b(H.prototype);return U(i,{type:"Symbol",tag:t,description:e}),s||(i.description=e),i},at=u?function(t){return"symbol"==typeof t}:function(t){return Object(t)instanceof H},ot=function(t,e,i){t===Y&&ot(Q,e,i),f(t);var n=m(e,!0);return f(i),c(Z,n)?(i.enumerable?(c(t,L)&&t[L][n]&&(t[L][n]=!1),i=b(i,{enumerable:v(0,!1)})):(c(t,L)||G(t,L,v(1,{})),t[L][n]=!0),nt(t,n,i)):G(t,n,i)},st=function(t,e){f(t);var i=y(e),n=x(i).concat(ct(i));return N(n,function(e){s&&!lt.call(i,e)||ot(t,e,i[e])}),t},lt=function(t){var e=m(t,!0),i=q.call(this,e);return!(this===Y&&c(Z,e)&&!c(Q,e))&&(!(i||!c(this,e)||!c(Z,e)||c(this,L)&&this[L][e])||i)},ut=function(t,e){var i=y(t),n=m(e,!0);if(i!==Y||!c(Z,n)||c(Q,n)){var r=X(i,n);return!r||!c(Z,n)||c(i,L)&&i[L][n]||(r.enumerable=!0),r}},ht=function(t){var e=K(y(t)),i=[];return N(e,function(t){c(Z,t)||c(j,t)||i.push(t)}),i},ct=function(t){var e=t===Y,i=K(e?Q:y(t)),n=[];return N(i,function(t){!c(Z,t)||e&&!c(Y,t)||n.push(Z[t])}),n};(l||(I((H=function(){if(this instanceof H)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=V(t),i=function(t){this===Y&&i.call(Q,t),c(this,L)&&c(this[L],e)&&(this[L][e]=!1),nt(this,e,v(1,t))};return s&&it&&nt(Y,e,{configurable:!0,set:i}),rt(e,t)}).prototype,"toString",function(){return W(this).tag}),I(H,"withoutSetter",function(t){return rt(V(t),t)}),S.f=lt,T.f=ot,O.f=ut,_.f=P.f=ht,w.f=ct,M.f=function(t){return rt(A(t),t)},s&&(G(H.prototype,"description",{configurable:!0,get:function(){return W(this).description}}),o||I(Y,"propertyIsEnumerable",lt,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:H}),N(x(tt),function(t){F(t)}),n({target:"Symbol",stat:!0,forced:!l},{for:function(t){var e=String(t);if(c(J,e))return J[e];var i=H(e);return J[e]=i,$[i]=e,i},keyFor:function(t){if(!at(t))throw TypeError(t+" is not a symbol");if(c($,t))return $[t]},useSetter:function(){it=!0},useSimple:function(){it=!1}}),n({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(t,e){return void 0===e?b(t):st(b(t),e)},defineProperty:ot,defineProperties:st,getOwnPropertyDescriptor:ut}),n({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:ht,getOwnPropertySymbols:ct}),n({target:"Object",stat:!0,forced:h(function(){w.f(1)})},{getOwnPropertySymbols:function(t){return w.f(g(t))}}),z)&&n({target:"JSON",stat:!0,forced:!l||h(function(){var t=H();return"[null]"!=z([t])||"{}"!=z({a:t})||"{}"!=z(Object(t))})},{stringify:function(t,e,i){for(var n,r=[t],a=1;arguments.length>a;)r.push(arguments[a++]);if(n=e,(d(e)||void 0!==t)&&!at(t))return p(e)||(e=function(t,e){if("function"==typeof n&&(e=n.call(this,t,e)),!at(e))return e}),r[1]=e,z.apply(null,r)}});H.prototype[B]||C(H.prototype,B,H.prototype.valueOf),E(H,"Symbol"),j[L]=!0},VwzZ:function(t,e,i){var n=i("3weC");t.exports=function(t,e,i,r){try{return r?e(n(i)[0],i[1]):e(i)}catch(e){var a=t.return;throw void 0!==a&&n(a.call(t)),e}}},W0E6:function(t,e,i){"use strict";i.d(e,"a",function(){return c});var n=i("m4/l"),r=i("Tjl+"),a=i("8ZqG"),o=i("MIZb"),s=i("WODi"),l=i("2gKx"),u=i("TZWN"),h=i("aCit"),c=function(t){function e(){var e=t.call(this)||this;e._list=[],e._currentStep=0,e._startIndex=0,e._currentPass=0,e.baseColor=new a.a({r:103,g:183,b:220}),e.className="PatternSet";var i=new o.a;return e.list=[e.getLinePattern(1e3,45,1,6),e.getRectPattern(10,0,4),e.getLinePattern(1e3,-45,1,6),e.getCirclePattern(11,2,!0),e.getLinePattern(6,90,1),e.getRectPattern(12,45,6,!0),e.getLinePattern(6,0,1),e.getRectPattern(7,0,4),e.getLinePattern(1e3,45,2,3,"4,2"),e.getCirclePattern(9,3,!1),e.getLinePattern(1e3,-45,2,3,"4,2"),e.getRectPattern(10,45,Math.sqrt(50)),e.getLinePattern(1e3,-45,2,1),e.getRectPattern(10,0,9),e.getLinePattern(1e3,45,2,1),e.getLinePattern(1e3,0,3,1),e.getRectPattern(10,45,10),e.getLinePattern(1e3,90,3,1)],e.baseColor=i.getFor("stroke"),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.getLinePattern=function(t,e,i,n,r){var a=new s.a;return a.width=t,a.height=t,a.stroke=this.baseColor,a.gap=n,a.strokeDasharray=r,a.strokeWidth=i,a.rotation=e,a},e.prototype.getRectPattern=function(t,e,i,n){var r=new l.a;return r.width=t,r.height=t,r.rectWidth=i,r.rectHeight=i,n?(r.stroke=this.baseColor,r.strokeWidth=1,r.fillOpacity=0):(r.fill=this.baseColor,r.strokeWidth=0),0!=e&&(r.shapeRendering="auto"),r.rotation=e,r},e.prototype.getCirclePattern=function(t,e,i){var n=new u.a;return n.width=t,n.height=t,n.shapeRendering="auto",n.radius=e,i?(n.stroke=this.baseColor,n.strokeWidth=1,n.fillOpacity=0):(n.fill=this.baseColor,n.strokeWidth=0),n},Object.defineProperty(e.prototype,"list",{get:function(){return this._list},set:function(t){this._list=t,this.reset()},enumerable:!0,configurable:!0}),e.prototype.next=function(){var t=this.getIndex(this.currentStep);return this._currentStep++,t},e.prototype.getIndex=function(t){for(;this.list.length<=t;)this.generatePatterns();return this.list[t].clone()},e.prototype.generatePatterns=function(){var t=this.list.length/(this._currentPass+1);this._currentPass++;for(var e=0;e<t;e++)this.list.push(this.list[e].clone())},e.prototype.reset=function(){this._currentStep=this._startIndex},Object.defineProperty(e.prototype,"currentStep",{get:function(){return this._currentStep},set:function(t){this._currentStep=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startIndex",{get:function(){return this._startIndex},set:function(t){this._startIndex=t,this.reset()},enumerable:!0,configurable:!0}),e.prototype.processConfig=function(e){t.prototype.processConfig.call(this,e)},e}(r.a);h.c.registeredClasses.PatternSet=c},W8Sc:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("UsNi"),a=i("x79X"),o=function(t){function e(){var e=t.call(this)||this;return e.adapter=new a.a(e),e.className="Modal",e.showCurtain=!0,e.draggable=!1,e}return Object(n.c)(e,t),e}(r.a)},WAWz:function(t,e,i){i("6WsA")("split")},WODi:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("ZLF9"),a=i("aCit"),o=i("hGwe"),s=function(t){function e(){var e=t.call(this)||this;return e.properties.gap=0,e._line=e.paper.add("path"),e.addElement(e._line),e}return Object(n.c)(e,t),e.prototype.draw=function(){if(t.prototype.draw.call(this),Math.round(this.rotation/90)!=this.rotation/90&&(this.properties.shapeRendering="auto"),this._line){var e=this.width,i=this.height,n="";if(this.gap)for(var r=this.gap+this.strokeWidth,a=this.height/r,s=-a/2;s<1.5*a;s++)Math.round(this.rotation/90)!=this.rotation/90?(n+=o.moveTo({x:-e,y:(s+.5)*r})+o.lineTo({x:2*e,y:(s+.5)*r}),this.properties.rotationX=this.width/2,this.properties.rotationY=this.height/2):n+=o.moveTo({x:-e,y:s*r})+o.lineTo({x:2*e,y:s*r});else Math.round(this.rotation/90)!=this.rotation/90?(n=o.moveTo({x:-e,y:i/2})+o.lineTo({x:2*e,y:i/2}),this.properties.rotationX=this.width/2,this.properties.rotationY=this.height/2):n=o.moveTo({x:0,y:0})+o.lineTo({x:e,y:0});this._line.attr({d:n})}},Object.defineProperty(e.prototype,"gap",{get:function(){return this.properties.gap},set:function(t){this.properties.gap=t,this.draw()},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.LinePattern=s},WShl:function(t,e,i){"use strict";var n=i("EErT"),r=i("8+rI"),a=i("Pm8L");t.exports=function(t,e,i){var o=n(e);o in t?r.f(t,o,a(0,i)):t[o]=i}},WYhe:function(t,e,i){"use strict";i.d(e,"a",function(){return r}),i.d(e,"b",function(){return a});var n=i("Mtpk"),r=function(){function t(){}return t.prototype.getEventKey=function(t){var e;switch(t.keyCode||t.which){case 38:e="up";break;case 40:e="down";break;case 37:e="left";break;case 39:e="right";break;case 13:e="enter";break;case 27:e="esc";break;case 36:e="home";break;case 35:e="end";break;case 9:e="tab";break;case 17:e="ctrl";break;case 18:e="alt";break;case 16:e="shift";break;case 32:e="space";break;case 36:e="home";break;case 35:e="end";break;case 33:e="pgup";break;case 34:e="pgdn";break;case 45:e="ins";break;case 46:e="del";break;case 107:e="plus";break;case 109:e="minus";break;default:e="other"}return e},t.prototype.isKey=function(t,e){var i=this.getEventKey(t);return n.isString(e)&&(e=[e]),-1!==e.indexOf(i)},t.prototype.shiftKey=function(t){return t.shiftKey},t.prototype.ctrlKey=function(t){return t.ctrlKey},t.prototype.altKey=function(t){return t.altKey},t.prototype.metaKey=function(t){return t.metaKey},t}(),a=new r},WeDP:function(t,e,i){"use strict";var n,r,a,o=i("Ox5T"),s=i("k2B3"),l=i("JZRr"),u=i("KslR"),h=i("lnCe"),c=u("iterator"),p=!1;[].keys&&("next"in(a=[].keys())?(r=o(o(a)))!==Object.prototype&&(n=r):p=!0),void 0==n&&(n={}),h||l(n,c)||s(n,c,function(){return this}),t.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:p}},Wglt:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.fromArray=r,e.length=function(t){var e=0;return t(function(t){return++e,!0}),e},e.toArray=a,e.eachContinue=function(t,e){t(e)},e.each=function(t,e){t(function(t){return e(t),!0})},e.sort=function(t,e){return r(a(t).sort(e))},e.map=function(t,e){return function(i){return t(function(t){return i(e(t))})}},e.filter=function(t,e){return function(i){return t(function(t){return!e(t)||i(t)})}},e.concat=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return function(e){for(var i=!0,n=function(t){return i=e(t)},r=t.length,a=0;a<r&&(t[a](n),i);++a);}},e.flatten=function(t){return function(e){var i=!0,n=function(t){return i=e(t)};t(function(t){return t(n),i})}},e.indexed=function(t){return function(e){var i=0;t(function(t){return e([i++,t])})}},e.findIndex=function(t,e){var i=!1,n=0;return t(function(t){return e(t)?(i=!0,!1):(++n,!0)}),i?n:-1},e.find=function(t,e){var i;return t(function(t){return!e(t)||(i=t,!1)}),i},e.findMap=function(t,e){var i;return t(function(t){var n=e(t);return null===n||(i=n,!1)}),i},e.contains=function(t,e){var i=!1;return t(function(t){return!e(t)||(i=!0,!1)}),i},e.foldl=o,e.min=function(t){return o(t,null,s)},e.max=function(t){return o(t,null,l)},e.join=function(t,e){void 0===e&&(e="");var i=!0,n="";return t(function(t){return i?i=!1:n+=e,n+=t,!0}),n},i.d(e,"ListIterator",function(){return u});var n=i("hJ5i");function r(t){return function(e){for(var i=t.length,n=0;n<i&&e(t[n]);++n);}}function a(t){var e=[];return t(function(t){return e.push(t),!0}),e}function o(t,e,i){return t(function(t){return e=i(e,t),!0}),e}function s(t,e){return null==t||e<t?e:t}function l(t,e){return null==t||e>t?e:t}var u=function(){function t(t,e){this.createNewItems=!1,this.list=t,this._create=e,this.reset()}return t.prototype.reset=function(){this._listCopy=a(this.list.iterator())},t.prototype.clear=function(){this._listCopy.length=0},t.prototype.getFirst=function(){return this.returnItem(0)},t.prototype.getLast=function(){return this.returnItem(this._listCopy.length-1)},t.prototype.find=function(t){var e=n.findIndex(this._listCopy,t);if(-1!==e){var i=this._listCopy[e];return n.remove(this._listCopy,i),i}return this.getLast()},t.prototype.removeItem=function(t){return n.remove(this._listCopy,t)},t.prototype.returnItem=function(t){if(t>=0&&t<this._listCopy.length){var e=this._listCopy[t];return n.remove(this._listCopy,e),e}if(this.createNewItems)return this._create()},t.prototype.iterator=function(){return r(this._listCopy)},t}()},Wqjq:function(t,e,i){var n=i("exNg"),r=i("swFJ"),a=function(t){return function(e,i){var a,o,s=String(r(e)),l=n(i),u=s.length;return l<0||l>=u?t?"":void 0:(a=s.charCodeAt(l))<55296||a>56319||l+1===u||(o=s.charCodeAt(l+1))<56320||o>57343?t?s.charAt(l):a:t?s.slice(l,l+2):o-56320+(a-55296<<10)+65536}};t.exports={codeAt:a(!1),charAt:a(!0)}},"X/sl":function(t,e,i){var n=i("cLsB"),r=i("tNpr"),a=i("7X7h"),o=i("tHyI"),s=i("Rs0P"),l=[].push,u=function(t){var e=1==t,i=2==t,u=3==t,h=4==t,c=6==t,p=5==t||c;return function(d,f,g,y){for(var m,v,b=a(d),x=r(b),_=n(f,g,3),P=o(x.length),w=0,O=y||s,T=e?O(d,P):i?O(d,0):void 0;P>w;w++)if((p||w in x)&&(v=_(m=x[w],w,b),t))if(e)T[w]=v;else if(v)switch(t){case 3:return!0;case 5:return m;case 6:return w;case 2:l.call(T,m)}else if(h)return!1;return c?-1:u||h?h:T}};t.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6)}},XDqO:function(t,e,i){var n=i("0sYB"),r=i("IpLv"),a=Math.abs;n({target:"Number",stat:!0},{isSafeInteger:function(t){return r(t)&&a(t)<=9007199254740991}})},XDyS:function(t,e,i){i("0sYB")({target:"Reflect",stat:!0},{has:function(t,e){return e in t}})},XUj0:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("bold")},{bold:function(){return r(this,"b","","")}})},XaED:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("anchor")},{anchor:function(t){return r(this,"a","name",t)}})},XhXf:function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},XqN8:function(t,e,i){"use strict";var n={value:function(){}};function r(){for(var t,e=0,i=arguments.length,n={};e<i;++e){if(!(t=arguments[e]+"")||t in n||/[\s.]/.test(t))throw new Error("illegal type: "+t);n[t]=[]}return new a(n)}function a(t){this._=t}function o(t,e){for(var i,n=0,r=t.length;n<r;++n)if((i=t[n]).name===e)return i.value}function s(t,e,i){for(var r=0,a=t.length;r<a;++r)if(t[r].name===e){t[r]=n,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=i&&t.push({name:e,value:i}),t}a.prototype=r.prototype={constructor:a,on:function(t,e){var i,n=this._,r=function(t,e){return t.trim().split(/^|\s+/).map(function(t){var i="",n=t.indexOf(".");if(n>=0&&(i=t.slice(n+1),t=t.slice(0,n)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:i}})}(t+"",n),a=-1,l=r.length;if(!(arguments.length<2)){if(null!=e&&"function"!=typeof e)throw new Error("invalid callback: "+e);for(;++a<l;)if(i=(t=r[a]).type)n[i]=s(n[i],t.name,e);else if(null==e)for(i in n)n[i]=s(n[i],t.name,null);return this}for(;++a<l;)if((i=(t=r[a]).type)&&(i=o(n[i],t.name)))return i},copy:function(){var t={},e=this._;for(var i in e)t[i]=e[i].slice();return new a(t)},call:function(t,e){if((i=arguments.length-2)>0)for(var i,n,r=new Array(i),a=0;a<i;++a)r[a]=arguments[a+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(a=0,i=(n=this._[t]).length;a<i;++a)n[a].value.apply(e,r)},apply:function(t,e,i){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var n=this._[t],r=0,a=n.length;r<a;++r)n[r].value.apply(e,i)}};var l=r;i.d(e,"a",function(){return l})},XqrT:function(t,e,i){var n=i("KslR")("iterator"),r=!1;try{var a=0,o={next:function(){return{done:!!a++}},return:function(){r=!0}};o[n]=function(){return this},Array.from(o,function(){throw 2})}catch(t){}t.exports=function(t,e){if(!e&&!r)return!1;var i=!1;try{var a={};a[n]=function(){return{next:function(){return{done:i=!0}}}},t(a)}catch(t){}return i}},Xroj:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("strike")},{strike:function(){return r(this,"strike","","")}})},Xw1K:function(t,e,i){var n=i("2xmP"),r=i("4Wbs");t.exports=function(t,e){var i=t.exec;if("function"==typeof i){var a=i.call(t,e);if("object"!=typeof a)throw TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==n(t))throw TypeError("RegExp#exec called on incompatible receiver");return r.call(t,e)}},Y2i6:function(t,e,i){var n=i("vfdp");t.exports=function(t,e){var i=n.console;i&&i.error&&(1===arguments.length?i.error(t):i.error(t,e))}},Y8n3:function(t,e,i){var n=i("exNg"),r=Math.max,a=Math.min;t.exports=function(t,e){var i=n(t);return i<0?r(i+e,0):a(i,e)}},Y8ws:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("small")},{small:function(){return r(this,"small","","")}})},Y9w3:function(t,e,i){"use strict";i.d(e,"a",function(){return _});var n=i("m4/l"),r=i("C6dT"),a=i("vMqJ"),o=i("VGgz"),s=i("+qIf"),l=i("hD5A"),u=i("EjGA"),h=i("TGuK"),c=i("Rpw0"),p=i("A6AV"),d=i("aCit"),f=i("Gg2j"),g=i("hJ5i"),y=i("0FpR"),m=i("v9UT"),v=i("Wglt"),b=i("Qkdp"),x=i("Mtpk"),_=function(t){function e(){var e=t.call(this)||this;return e.dataFields={},e._dataSources={},e._parseDataFrom=0,e._dataDisposers=[],e._currentDataSetId="",e._start=0,e._end=1,e.skipRangeEvent=!1,e.rangeChangeDuration=0,e.rangeChangeEasing=y.cubicOut,e.parsingStepDuration=50,e.dataInvalid=!1,e.rawDataInvalid=!1,e.dataRangeInvalid=!1,e.dataItemsInvalid=!1,e.interpolationDuration=0,e.interpolationEasing=y.cubicOut,e.sequencedInterpolation=!0,e.sequencedInterpolationDelay=0,e.dataValidationProgress=0,e._addAllDataItems=!0,e._usesData=!0,e.className="Component",e.minZoomCount=1,e.maxZoomCount=0,e._dataItems=new o.b(e.createDataItem()),e._dataItems.events.on("inserted",e.handleDataItemAdded,e,!1),e._dataItems.events.on("removed",e.handleDataItemRemoved,e,!1),e._disposers.push(new a.c(e._dataItems)),e._disposers.push(e._dataItems.template),e.invalidateData(),e.dataUsers.events.on("inserted",e.handleDataUserAdded,e,!1),e._disposers.push(new l.c(e._dataDisposers)),e._start=0,e._end=1,e.maxZoomDeclination=1,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.createDataItem=function(){return new p.a},e.prototype.handleDataUserAdded=function(t){t.newValue.dataProvider=this},e.prototype.handleDataItemValueChange=function(t,e){this.dataItemsInvalid||this.invalidateDataItems()},e.prototype.handleDataItemWorkingValueChange=function(t,e){},e.prototype.handleDataItemWorkingLocationChange=function(t,e){},e.prototype.handleDataItemCalculatedValueChange=function(t,e){},e.prototype.handleDataItemPropertyChange=function(t,e){},e.prototype.processDataItem=function(t,e){var i=this;if(t){e||(e={}),t.dataContext=e;var n=!1;b.each(this.dataFields,function(r,s){var l=r,u=e[s];if(i._adapterO&&i._adapterO.isEnabled("dataContextValue")&&(u=i._adapterO.apply("dataContextValue",{field:l,value:u,dataItem:t}).value),t.hasChildren[l]){if(x.hasValue(u)){n=!0;var h=i.createDataItem();h.copyFrom(i.mainDataSet.template);var c=new o.b(h);c.events.on("inserted",i.handleDataItemAdded,i,!1),c.events.on("removed",i.handleDataItemRemoved,i,!1),i._dataDisposers.push(new a.c(c));for(var p=u.length,d=0;d<p;d++){var f=u[d],g=c.create();g.parent=t,i.processDataItem(g,f)}t[l]=c}}else x.hasValue(u)&&(n=!0,t[l]=u)}),b.each(this.propertyFields,function(i,r){var a=i,o=e[r];x.hasValue(o)&&(n=!0,t.setProperty(a,o))}),this._addAllDataItems||n||this.mainDataSet.remove(t)}},e.prototype.updateDataItem=function(t){var e=this;if(t){var i=t.dataContext;b.each(this.dataFields,function(n,r){var a=n,o=i[r];if(e._adapterO&&(o=e._adapterO.apply("dataContextValue",{field:a,value:o,dataItem:t}).value),t.hasChildren[a]){if(o){var s=t[a];v.each(s.iterator(),function(t){e.updateDataItem(t)})}}else x.hasValue(o)&&(t[a]=o)}),b.each(this.propertyFields,function(e,n){var r=e,a=i[n];x.hasValue(a)&&t.setProperty(r,a)})}},e.prototype.validateDataElements=function(){for(var t=this.endIndex,e=this.startIndex;e<t;e++){var i=this.dataItems.getIndex(e);i&&this.validateDataElement(i)}},e.prototype.validate=function(){this.validateDataElements(),t.prototype.validate.call(this)},e.prototype.validateDataElement=function(t){},e.prototype.addData=function(t,e){var i=this;if(!this.dataInvalid&&this.inited&&(this._parseDataFrom=this.data.length),t instanceof Array?g.each(t,function(t){i.data.push(t)}):this.data.push(t),this.inited)this.removeData(e);else if(x.isNumber(e))for(;e>0;)this.data.shift(),e--;this.invalidateData()},e.prototype.removeData=function(t){if(x.isNumber(t)&&t>0){for(;t>0;){var e=this.mainDataSet.getIndex(0);e&&this.mainDataSet.remove(e),this.dataUsers.each(function(t){if(!t.data||0==t.data.length){var e=t.dataItems.getIndex(0);e&&t.dataItems.remove(e)}}),this.data.shift(),this._parseDataFrom>0&&this._parseDataFrom--,t--}this.invalidateDataItems()}},e.prototype.invalidateData=function(){this.disabled||this.isTemplate||(d.c.addToInvalidComponents(this),c.b.requestFrame(),this.dataInvalid=!0,v.each(this.dataUsers.iterator(),function(t){t.invalidateDataItems()}))},e.prototype.invalidateDataUsers=function(){v.each(this.dataUsers.iterator(),function(t){t.invalidate()})},e.prototype.invalidateDataItems=function(){this.disabled||this.isTemplate||(g.move(d.c.invalidDataItems,this),c.b.requestFrame(),this.dataItemsInvalid=!0,v.each(this.dataUsers.iterator(),function(t){t.invalidateDataItems()}))},e.prototype.invalidateDataRange=function(){this.disabled||this.isTemplate||(this.dataRangeInvalid=!0,g.move(d.c.invalidDataRange,this),c.b.requestFrame())},e.prototype.validateDataRange=function(){g.remove(d.c.invalidDataRange,this),this.dataRangeInvalid=!1,this.startIndex==this._prevStartIndex&&this.endIndex==this._prevEndIndex||(this.rangeChangeUpdate(),this.appendDataItems(),this.invalidate(),this.dispatchImmediately("datarangechanged"))},e.prototype.sliceData=function(){this._workingStartIndex=this.startIndex,this._workingEndIndex=this.endIndex},e.prototype.rangeChangeUpdate=function(){this.sliceData(),this._prevStartIndex=this.startIndex,this._prevEndIndex=this.endIndex},e.prototype.appendDataItems=function(){for(var t=this.endIndex,e=this.startIndex;e<t;e++){(i=this.dataItems.getIndex(e))&&(i.__disabled=!1)}for(e=0;e<this.startIndex;e++){(i=this.dataItems.getIndex(e)).__disabled=!0}for(e=this.endIndex;e<this.dataItems.length;e++){var i;(i=this.dataItems.getIndex(e)).__disabled=!0}},e.prototype.invalidateRawData=function(){this.disabled||this.isTemplate||(g.move(d.c.invalidRawDatas,this),c.b.requestFrame(),this.rawDataInvalid=!0,v.each(this.dataUsers.iterator(),function(t){t.invalidateRawData()}))},e.prototype.validateRawData=function(){var t=this;g.remove(d.c.invalidRawDatas,this),v.each(this.mainDataSet.iterator(),function(e){e&&t.updateDataItem(e)})},e.prototype.dispose=function(){var e=this;this.mainDataSet.template.clones.clear(),b.each(this._dataSources,function(t,i){e.removeDispose(i)}),t.prototype.dispose.call(this)},e.prototype.disposeData=function(){this.mainDataSet.template.clones.clear(),g.each(this._dataDisposers,function(t){t.dispose()}),v.each(this.dataUsers.iterator(),function(t){t.disposeData()}),this._dataDisposers.length=0,this._startIndex=void 0,this._endIndex=void 0,this.mainDataSet.clear(),this.mainDataSet.template.clones.clear(),this._dataSets&&this._dataSets.clear()},e.prototype.getDataItem=function(t){return this.mainDataSet.create()},e.prototype.validateData=function(){if(this.dispatchImmediately("beforedatavalidated"),this.dataInvalid=!1,d.c.removeFromInvalidComponents(this),!this.__disabled){if(this.dataValidationProgress=0,this._prevStartIndex=void 0,this._prevEndIndex=void 0,this._startIndex=void 0,this._endIndex=void 0,this.dataFields.data&&this.dataItem){var t=this.dataItem.dataContext;this._data=t[this.dataFields.data]}if(0===this._parseDataFrom&&this.data.length>0&&this.disposeData(),this.data.length>0){var e=this.preloader;v.each(this.dataUsers.iterator(),function(t){t._startIndex=void 0,t._endIndex=void 0});for(var i=0,n=Date.now(),r=this._parseDataFrom,a=this.data.length,o=function(){var t=s.data[r];if(s._usesData){var a=s.getDataItem(t);s.processDataItem(a,t)}if((s.dataUsers.each(function(e){if(0==e.data.length){var i=e.getDataItem(t);e.processDataItem(i,t)}}),100==++i)&&(i=0,Date.now()-n>s.parsingStepDuration&&r<s.data.length-10))return s._parseDataFrom=r+1,e&&(r/s.data.length>.5&&!e.visible||(e.progress=r/s.data.length)),s.dataValidationProgress=r/s.data.length,r=s.data.length,s.invalidateData(),{value:void 0}},s=this;r<a;r++){var l=o();if("object"==typeof l)return l.value}e&&(e.progress=1),this.dataUsers.each(function(t){t.hidden&&t.hide(0)})}this.dataValidationProgress=1,this._parseDataFrom=0,this.invalidateDataItems(),this._internalDefaultsApplied||this.applyInternalDefaults(),this.dispatch("datavalidated")}},e.prototype.validateDataItems=function(){g.remove(d.c.invalidDataItems,this),this.dataItemsInvalid=!1,this.invalidateDataRange(),this.invalidate(),this.dispatch("dataitemsvalidated")},Object.defineProperty(e.prototype,"data",{get:function(){return this._data||(this._data=[]),this._adapterO?this._adapterO.apply("data",this._data):this._data},set:function(t){this.setData(t)},enumerable:!0,configurable:!0}),e.prototype.setData=function(t){this._parseDataFrom=0,this.disposeData(),this._data=t,t&&t.length>0?this.invalidateData():(this.dispatchImmediately("beforedatavalidated"),this.dispatch("datavalidated"))},e.prototype.getDataSource=function(t){var e=this;return x.hasValue(this._dataSources[t])||(this._dataSources[t]=new u.a,this._dataSources[t].component=this,this.setDataSourceEvents(this._dataSources[t],t),this._dataSources[t].adapter.add("dateFields",function(t){return e.dataSourceDateFields(t)}),this._dataSources[t].adapter.add("numberFields",function(t){return e.dataSourceNumberFields(t)}),this.events.on("inited",function(){e.loadData(t)},this,!1)),this._dataSources[t]},Object.defineProperty(e.prototype,"dataSource",{get:function(){return this._dataSources.data||this.getDataSource("data"),this._dataSources.data},set:function(t){var e=this;this._dataSources.data&&this.removeDispose(this._dataSources.data),this._dataSources.data=t,this._dataSources.data.component=this,this.events.on("inited",function(){e.loadData("data")},this,!1),this.setDataSourceEvents(t,"data")},enumerable:!0,configurable:!0}),e.prototype.loadData=function(t){this._dataSources[t].load()},e.prototype.dataSourceDateFields=function(t){return t},e.prototype.dataSourceNumberFields=function(t){return t},e.prototype.populateDataSourceFields=function(t,e,i){return g.each(i,function(i){e[i]&&-1===g.indexOf(t,e[i])&&t.push(e[i])}),t},e.prototype.setDataSourceEvents=function(t,e){var i=this;t.events.on("started",function(t){var e=i.preloader;e&&(e.progress=0)},void 0,!1),t.events.on("loadstarted",function(t){var e=i.preloader;e&&(e.progress=.25)},void 0,!1),t.events.on("loadended",function(t){var e=i.preloader;e&&(e.progress=.5)},void 0,!1),t.events.on("parseended",function(t){var e=i.preloader;e&&(e.progress=.75)},void 0,!1),t.events.on("ended",function(t){var e=i.preloader;e&&(e.progress=1)},void 0,!1),t.events.on("error",function(t){var e=i.preloader;e&&(e.progress=1),i.openModal(t.message)},void 0,!1),e&&t.events.on("done",function(n){var r=i.preloader;r&&(r.progress=1),"data"!=e||x.isArray(n.data)||(n.data=[n.data]),t.incremental&&"data"==e&&i.data.length?i.addData(n.data,t.keepCount?n.data.length:0):t.updateCurrentData&&"data"==e&&i.data.length?(g.each(i.data,function(t,e){x.hasValue(n.data[e])&&b.each(t,function(i,r){x.hasValue(n.data[e][i])&&(t[i]=n.data[e][i])})}),i.invalidateRawData()):i[e]=n.data})},Object.defineProperty(e.prototype,"responsive",{get:function(){return this._responsive||(this._responsive=new h.a,this._responsive.component=this),this._responsive},set:function(t){this._responsive=t,this._responsive.component=this},enumerable:!0,configurable:!0}),e.prototype.zoom=function(t,e,i,n){var r=this;void 0===e&&(e=!1),void 0===i&&(i=!1);var a=t.start,o=t.end,s=t.priority;if(t.start==t.end&&(t.start=t.start-.5/this.maxZoomFactor,t.end=t.end+.5/this.maxZoomFactor),"end"==s&&1==o&&0!=a&&a<this.start&&(s="start"),"start"==s&&0==a&&o>this.end&&(s="end"),x.isNumber(n)||(n=this.maxZoomDeclination),!x.isNumber(a)||!x.isNumber(o))return{start:this.start,end:this.end};if(this._finalStart!=a||this._finalEnd!=o){var l=this.maxZoomFactor/this.minZoomCount,u=this.maxZoomFactor/this.maxZoomCount;if("start"==s?(this.maxZoomCount>0&&1/(o-a)<u&&(o=a+1/u),1/(o-a)>l&&(o=a+1/l),o>1&&o-a<1/l&&(a=o-1/l)):(this.maxZoomCount>0&&1/(o-a)<u&&(a=o-1/u),1/(o-a)>l&&(a=o-1/l),a<0&&o-a<1/l&&(o=a+1/l)),a<-n&&(a=-n),1/(o-a)>l&&(o=a+1/l),o>1+n&&(o=1+n),1/(o-a)>l&&(a=o-1/l),this._finalEnd=o,this._finalStart=a,this.skipRangeEvent=e,this.dispatchImmediately("rangechangestarted"),this.rangeChangeDuration>0&&!i){var h=this.rangeChangeAnimation;if(h&&h.progress<1){var c=h.animationOptions;if(c.length>1){if(c[0].to==a&&c[1].to==o)return{start:a,end:o};h.isDisposed()||h.stop()}}this.rangeChangeAnimation&&this.rangeChangeAnimation.kill(),h=this.animate([{property:"start",to:a},{property:"end",to:o}],this.rangeChangeDuration,this.rangeChangeEasing),this.rangeChangeAnimation=h,h&&!h.isFinished()?h.events.on("animationended",function(){r.dispatchImmediately("rangechangeended")}):this.dispatchImmediately("rangechangeended")}else this.start=a,this.end=o,this.dispatch("rangechangeended")}return{start:a,end:o}},e.prototype.zoomToIndexes=function(t,e,i,n){if(x.isNumber(t)&&x.isNumber(e)){var r=t/this.dataItems.length,a=e/this.dataItems.length;this.zoom({start:r,end:a},i,n)}},Object.defineProperty(e.prototype,"zoomFactor",{get:function(){return f.fitToRange(1/(this.end-this.start),1,this.maxZoomFactor)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxZoomFactor",{get:function(){return this.getPropertyValue("maxZoomFactor")},set:function(t){this.setPropertyValue("maxZoomFactor",t)&&(1==t&&(this.maxZoomDeclination=0),this.invalidateDataRange())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxZoomDeclination",{get:function(){return this.getPropertyValue("maxZoomDeclination")},set:function(t){this.setPropertyValue("maxZoomDeclination",t)&&this.invalidateDataRange()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"startIndex",{get:function(){return x.isNumber(this._startIndex)||(this._startIndex=0),this._startIndex},set:function(t){this._startIndex=f.fitToRange(Math.round(t),0,this.dataItems.length),this.start=this.indexToPosition(this._startIndex)},enumerable:!0,configurable:!0}),e.prototype.indexToPosition=function(t){return t/this.dataItems.length},Object.defineProperty(e.prototype,"endIndex",{get:function(){var t=this.dataItems.length;return(!x.isNumber(this._endIndex)||this._endIndex>t)&&(this._endIndex=t),this._endIndex},set:function(t){this._endIndex=f.fitToRange(Math.round(t),0,this.dataItems.length),this.end=this.indexToPosition(this._endIndex)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"start",{get:function(){return this._adapterO?this._adapterO.apply("start",this._start):this._start},set:function(t){if(this._start!=t){this._start=t;var e=Math.max(0,Math.floor(this.dataItems.length*t)||0);this._startIndex=Math.min(e,this.dataItems.length),this.invalidateDataRange(),this.invalidate(),this.dispatchImmediately("startchanged"),this.dispatch("startendchanged")}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"end",{get:function(){return this._adapterO?this._adapterO.apply("end",this._end):this._end},set:function(t){this._end!=t&&(this._end=t,this._endIndex=Math.min(this.dataItems.length,Math.ceil(this.dataItems.length*t)||0),this.invalidateDataRange(),this.invalidate(),this.dispatchImmediately("endchanged"),this.dispatch("startendchanged"))},enumerable:!0,configurable:!0}),e.prototype.removeFromInvalids=function(){t.prototype.removeFromInvalids.call(this),d.c.removeFromInvalidComponents(this),g.remove(d.c.invalidDataItems,this),g.remove(d.c.invalidDataRange,this),g.remove(d.c.invalidRawDatas,this)},Object.defineProperty(e.prototype,"dataItems",{get:function(){if(""!=this._currentDataSetId){var t=this.dataSets.getKey(this._currentDataSetId);if(t)return t}return this._dataItems},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dataSets",{get:function(){return this._dataSets||(this._dataSets=new s.a),this._dataSets},enumerable:!0,configurable:!0}),e.prototype.setDataSet=function(t){if(this._currentDataSetId!=t){if(this.dataSets.getKey(t))return this.dataItems.each(function(t){t.__disabled=!0}),this._currentDataSetId=t,this.invalidateDataRange(),this._prevStartIndex=void 0,this.dataItems.each(function(t){t.__disabled=!1}),!0;if(""!=this._currentDataSetId)return this.dataItems.each(function(t){t.__disabled=!0}),this._currentDataSetId="",this.invalidateDataRange(),this._prevStartIndex=void 0,this.dataItems.each(function(t){t.__disabled=!1}),!0}return!1},Object.defineProperty(e.prototype,"currentDataSetId",{get:function(){return this._currentDataSetId},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"mainDataSet",{get:function(){return this._dataItems},enumerable:!0,configurable:!0}),e.prototype._updateDataItemIndexes=function(t){for(var e=this.mainDataSet.values,i=e.length,n=t;n<i;++n)e[n]._index=n},e.prototype.handleDataItemAdded=function(t){t.newValue.component=this,this._updateDataItemIndexes(t.index),this.dataItemsInvalid||this.invalidateDataItems()},e.prototype.handleDataItemRemoved=function(t){this._updateDataItemIndexes(t.index),this.dataItemsInvalid||this.invalidateDataItems()},e.prototype.bindDataField=function(t,e){this.dataFields[t]=e,this.invalidateDataRange()},e.prototype.invalidateProcessedData=function(){this.resetProcessedRange(),this.invalidateDataRange()},e.prototype.resetProcessedRange=function(){this._prevEndIndex=null,this._prevStartIndex=null},Object.defineProperty(e.prototype,"dataUsers",{get:function(){var t=this;return this._dataUsers||(this._dataUsers=new a.b,this._disposers.push(new l.b(function(){v.each(t._dataUsers.iterator(),function(t){t.dispose()})}))),this._dataUsers},enumerable:!0,configurable:!0}),e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e.dataFields=m.copyProperties(this.dataFields,{}),e},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.data=e.data,this.sequencedInterpolation=e.sequencedInterpolation,this.sequencedInterpolationDelay=e.sequencedInterpolationDelay,this.interpolationDuration=e.interpolationDuration,this.interpolationEasing=e.interpolationEasing},e.prototype.reinit=function(){this._inited=!1,this.deepInvalidate()},e.prototype.getExporting=function(){var e=t.prototype.getExporting.call(this);return e.adapter.has("data",this._exportData,-1,this)||(e.adapter.add("data",this._exportData,-1,this),this.events.on("datavalidated",function(t){e.menu&&e.menu.invalidate(),e.handleDataUpdated()})),e},e.prototype._exportData=function(t){return t.data=this.data,t},e.prototype.setDisabled=function(e){var i=t.prototype.setDisabled.call(this,e);return i&&this.invalidateData(),i},e.prototype.setShowOnInit=function(e){e!=this.getPropertyValue("showOnInit")&&(!e||this.inited||this.hidden?this._showOnInitDisposer2&&this.removeDispose(this._showOnInitDisposer2):(this._showOnInitDisposer2=this.events.once("dataitemsvalidated",this.hideInitially,this,!1),this._disposers.push(this._showOnInitDisposer2))),t.prototype.setShowOnInit.call(this,e)},e.prototype.setBaseId=function(e){e!=this._baseId&&this.dataInvalid&&(this.dataInvalid=!1,d.c.removeFromInvalidComponents(this),this._baseId=e,this.invalidateData()),t.prototype.setBaseId.call(this,e)},Object.defineProperty(e.prototype,"minZoomCount",{get:function(){return this.getPropertyValue("minZoomCount")},set:function(t){this.setPropertyValue("minZoomCount",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxZoomCount",{get:function(){return this.getPropertyValue("maxZoomCount")},set:function(t){this.setPropertyValue("maxZoomCount",t)},enumerable:!0,configurable:!0}),e.prototype._systemCheckIfValidate=function(){return!(this.dataInvalid||this.dataProvider&&this.dataProvider.dataInvalid)},e.prototype.asFunction=function(e){return"interpolationEasing"==e||"rangeChangeEasing"==e||t.prototype.asIs.call(this,e)},e}(r.a);d.c.registeredClasses.Component=_},YG4I:function(t,e,i){var n=i("9XRO"),r=i("GtmK").f,a={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return o&&"[object Window]"==a.call(t)?function(t){try{return r(t)}catch(t){return o.slice()}}(t):r(n(t))}},YOID:function(t,e,i){"use strict";i.d(e,"a",function(){return p});var n=i("m4/l"),r=i("C6dT"),a=i("Vs7R"),o=i("aCit"),s=i("hGwe"),l=i("Qkdp"),u=i("Mtpk"),h=i("8ZqG"),c=i("aFzC"),p=function(t){function e(){var e=t.call(this)||this;e.className="LineSeriesSegment",e.isMeasured=!1,e.interactionsEnabled=!1,e.layout="none";var i=e.createChild(a.a);e.fillSprite=i,i.shouldClone=!1,i.setElement(e.paper.add("path")),i.isMeasured=!1,e._disposers.push(i);var n=e.createChild(a.a);return e.strokeSprite=n,n.shouldClone=!1,n.fill=Object(h.c)(),n.setElement(e.paper.add("path")),n.isMeasured=!1,e._disposers.push(n),e}return Object(n.c)(e,t),e.prototype.drawSegment=function(t,e,i,n){if(!this.disabled)if(t.length>0&&e.length>0){var r=s.moveTo({x:t[0].x-.2,y:t[0].y-.2})+s.moveTo(t[0])+new c.b(i,n).smooth(t);0==this.strokeOpacity||0==this.strokeSprite.strokeOpacity||(this.strokeSprite.path=r),(this.fillOpacity>0||this.fillSprite.fillOpacity>0)&&u.isNumber(e[0].x)&&u.isNumber(e[0].y)&&(r+=s.lineTo(e[0])+new c.b(i,n).smooth(e),r+=s.lineTo(t[0]),r+=s.closePath(),this.fillSprite.path=r)}else this.fillSprite.path="",this.strokeSprite.path=""},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e);var i=this.strokeSprite;l.copyProperties(e,i.properties,a.b),i.events.copyFrom(e.strokeSprite.events),i.fillOpacity=0;var n=this.fillSprite;l.copyProperties(e,n.properties,a.b),n.events.copyFrom(e.fillSprite.events),n.strokeOpacity=0},e}(r.a);o.c.registeredClasses.LineSeriesSegment=p},"YRD/":function(t,e,i){"use strict";var n=i("1wCr"),r=i("8+rI"),a=i("KslR"),o=i("3sMl"),s=a("species");t.exports=function(t){var e=n(t),i=r.f;o&&e&&!e[s]&&i(e,s,{configurable:!0,get:function(){return this}})}},YWS7:function(t,e,i){var n=i("0sYB"),r=i("9XRO"),a=i("tHyI");n({target:"String",stat:!0},{raw:function(t){for(var e=r(t.raw),i=a(e.length),n=arguments.length,o=[],s=0;i>s;)o.push(String(e[s++])),s<n&&o.push(String(arguments[s]));return o.join("")}})},Ybtf:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("FzPm"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="Ellipse",e.element=e.paper.add("ellipse"),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this),this.element.attr({rx:this.radius}),this.element.attr({ry:this.radiusY})},Object.defineProperty(e.prototype,"radiusY",{get:function(){return this.innerHeight/2},set:function(t){this.height=2*t,this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"radius",{get:function(){return this.innerWidth/2},set:function(t){this.width=2*t,this.invalidate()},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.Ellipse=o},YcPX:function(t,e,i){var n=i("0sYB"),r=i("Kg2n"),a=i("Tl3C").onFreeze,o=i("6EAy"),s=i("6aQQ"),l=Object.preventExtensions;n({target:"Object",stat:!0,forced:s(function(){l(1)}),sham:!o},{preventExtensions:function(t){return l&&r(t)?l(a(t)):t}})},Ygeo:function(t,e,i){"use strict";var n=i("UseD"),r=i("7dku").right,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("reduceRight",function(t){return r(a(this),t,arguments.length,arguments.length>1?arguments[1]:void 0)})},YotE:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("o0Lc"),a=i("hD5A"),o=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e._domEvents={},e}return Object(n.c)(e,t),e.prototype._addDOMEvent=function(t,e,i,n){var r=this;if(!this._domEvents[t]){var o=function(t){i.call(n,e,t)};this.target.element.addEventListener(t,o,!1),this._domEvents[t]=new a.a(function(){delete r._domEvents[t],r.target.element.removeEventListener(t,o,!1)})}return this._domEvents[t].increment()},e.prototype._dispatchKeyboardEvent=function(t,e){this.target.events.isEnabled(t)&&this.target.events.dispatchImmediately(t,{type:t,target:this.target,event:e})},e.prototype._on=function(e,i,n,r,o,s){var l=t.prototype._on.call(this,e,i,n,r,o,s),u=[l.disposer];switch(i){case"hit":case"doublehit":case"rightclick":case"down":case"up":this.target.clickable=!0;break;case"drag":case"dragstart":case"dragstop":this.target.draggable=!0;break;case"track":this.target.trackable=!0;break;case"resize":this.target.resizable=!0;break;case"swipe":case"swipeleft":case"swiperight":this.target.swipeable=!0;break;case"wheel":case"wheelup":case"wheeldown":case"wheelleft":case"wheelright":this.target.wheelable=!0;break;case"over":case"out":this.target.hoverable=!0;break;case"focus":case"blur":case"focusin":case"focusout":this.target.focusable=!0;break;case"keydown":case"keyup":case"keypress":case"input":u.push(this._addDOMEvent(i,i,this._dispatchKeyboardEvent,this))}return l.disposer=new a.c(u),l},e}(r.b)},ZKUO:function(t,e,i){i("0sYB")({target:"Reflect",stat:!0},{ownKeys:i("grfs")})},ZLF9:function(t,e,i){"use strict";i.d(e,"a",function(){return d});var n=i("m4/l"),r=i("Tjl+"),a=i("P7v+"),o=i("vMqJ"),s=i("1yyj"),l=i("aCit"),u=i("MIZb"),h=i("Wglt"),c=i("Qkdp"),p=i("Mtpk"),d=function(t){function e(){var e=t.call(this)||this;e._elements=new o.b,e.properties={},e.className="Pattern",e.width=10,e.height=10,e.x=0,e.y=0,e.patternUnits="userSpaceOnUse";var i=new u.a;return e.backgroundFill=i.getFor("background"),e.backgroundOpacity=0,e.fillOpacity=1,e.fill=i.getFor("alternativeBackground"),e.stroke=i.getFor("alternativeBackground"),e.strokeOpacity=1,e.strokeWidth=1,e.shapeRendering="crispEdges",e.rotation=0,e.element=e.paper.addGroup("pattern"),e.id="pattern-"+l.c.getUniqueId(),e.element.attr({id:e.id}),e._disposers.push(e.element),e._disposers.push(new o.c(e._elements)),e.patternUnits=e.patternUnits,e.width=e.width,e.height=e.height,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){var t=this,e=this.element;if(e){e.removeChildNodes();var i=this.paper.add("rect");i.attr({width:this.width,height:this.height,"shape-rendering":"crispEdges",fill:this.backgroundFill.hex,"fill-opacity":this.backgroundOpacity,stroke:this.backgroundFill.hex,"stroke-opacity":this.backgroundOpacity}),e.add(i),e.attr({x:this.x,y:this.y,width:this.width,height:this.height,stroke:this.stroke.hex,fill:this.fill.hex,"fill-opacity":this.fillOpacity,"stroke-opacity":this.strokeOpacity,"stroke-width":this.strokeWidth,"shape-rendering":this.shapeRendering,patternUnits:this.patternUnits,"stroke-dasharray":this.strokeDasharray}),h.each(this._elements.iterator(),function(e){e.rotation=t.rotation,e.rotationX=t.properties.rotationX,e.rotationY=t.properties.rotationY,t.element.add(e)})}},e.prototype.animate=function(t,e,i){return new s.a(this,t,e,i).start()},e.prototype.addElement=function(t){this._elements.push(t),this._disposers.push(t)},e.prototype.removeElement=function(t){this._elements.removeValue(t),this.removeDispose(t)},Object.defineProperty(e.prototype,"elements",{get:function(){return this._elements},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fillOpacity",{get:function(){return this.properties.fillOpacity},set:function(t){this.properties.fillOpacity=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fill",{get:function(){return this.properties.fill},set:function(t){this.properties.fill=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"backgroundFill",{get:function(){return this.properties.backgroundFill},set:function(t){this.properties.backgroundFill=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"backgroundOpacity",{get:function(){return this.properties.backgroundOpacity},set:function(t){this.properties.backgroundOpacity=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"stroke",{get:function(){return this.properties.stroke},set:function(t){this.properties.stroke=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeOpacity",{get:function(){return this.properties.strokeOpacity},set:function(t){this.properties.strokeOpacity=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeWidth",{get:function(){return this.properties.strokeWidth},set:function(t){this.properties.strokeWidth=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shapeRendering",{get:function(){return this.properties.shapeRendering},set:function(t){this.properties.shapeRendering=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rotation",{get:function(){return this.properties.rotation},set:function(t){this.properties.rotation=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"patternUnits",{get:function(){return this.properties.patternUnits},set:function(t){this.properties.patternUnits=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this.properties.width},set:function(t){this.properties.width=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this.properties.height},set:function(t){this.properties.height=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"x",{get:function(){return this.properties.x},set:function(t){this.properties.x=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this.properties.y},set:function(t){this.properties.y=t,this.draw()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"paper",{get:function(){return this._paper?this._paper:Object(a.b)()},set:function(t){this._paper!=t&&(this._paper=t,this.draw(),t.appendDef(this.element))},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){var i=this;t.prototype.copyFrom.call(this,e),c.each(e.properties,function(t,e){i[t]=e})},Object.defineProperty(e.prototype,"animations",{get:function(){return this._animations||(this._animations=[],this._disposers.push(new s.b(this._animations))),this._animations},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"strokeDasharray",{get:function(){return this.properties.strokeDashArray},set:function(t){this.properties.strokeDashArray=t,this.draw()},enumerable:!0,configurable:!0}),e.prototype.processConfig=function(e){if(e&&p.hasValue(e.elements)&&p.isArray(e.elements))for(var i=0,n=e.elements.length;i<n;i++){var a=e.elements[i];if(p.hasValue(a.type)){var o=this.createEntryInstance(a);o instanceof r.a&&(o.config=a),this.addElement(p.hasValue(a.typeProperty)?o[a.typeProperty]:o.element)}}t.prototype.processConfig.call(this,e)},e}(r.a);l.c.registeredClasses.Pattern=d},ZYec:function(t,e,i){i("0sYB")({target:"Object",stat:!0},{is:i("fXYt")})},ZhuL:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("mIpt"),a=i("Qkdp"),o=i("Mtpk"),s=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.contentType="application/json",e.options={},e}return Object(n.c)(e,t),e.isJSON=function(t){try{return JSON.parse(t),!0}catch(t){return!1}},e.prototype.parse=function(t){var e,i=this;try{o.hasValue(JSON)&&(e=JSON.parse(t))}catch(t){return}var n=o.hasValue(this.options.emptyAs),r=this.parsableNumbers,s=this.parsableDates;if(Array.isArray(e)&&(r||s||n))for(var l=function(t,o){var l=e[t];a.each(l,function(t,e){n&&(l[t]=i.maybeToEmpty(l[t])),r&&(l[t]=i.maybeToNumber(t,l[t])),s&&(l[t]=i.maybeToDate(t,l[t]))})},u=0,h=e.length;u<h;u++)l(u);return e},e}(r.a)},ZjxQ:function(t,e,i){"use strict";var n=i("UseD"),r=n.aTypedArray,a=n.exportTypedArrayMethod,o=[].join;a("join",function(t){return o.apply(r(this),arguments)})},ZoDA:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("Uslz"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="ValueAxisBreak",e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"startPosition",{get:function(){if(this.axis)return this.axis.valueToPosition(this.adjustedStartValue)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endPosition",{get:function(){if(this.axis)return this.axis.valueToPosition(this.adjustedEndValue)},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.ValueAxisBreak=o},aCit:function(t,e,i){"use strict";i.d(e,"a",function(){return u}),i.d(e,"c",function(){return h}),e.b=function(t,e){var i=h.registeredClasses[e];return null!=i&&t instanceof i};var n=i("o0Lc"),r=i("+qIf"),a=i("eCqC"),o=i("Mtpk"),s=i("wUYf"),l=i("hJ5i"),u=function(){function t(){this.events=new n.a,this.themes=[],this.loadedThemes={},this._uidCount=0,this.registeredClasses={},this._placeholders={},this.invalidSprites={},this.invalidDatas={},this.invalidRawDatas=[],this.invalidDataItems=[],this.invalidDataRange=[],this.invalidPositions={},this.invalidLayouts={},this.baseSprites=[],this.baseSpritesByUid={},this.queue=[],this.uid=this.getUniqueId(),this.invalidSprites.noBase=[],this.invalidDatas.noBase=[],this.invalidLayouts.noBase=[],this.invalidPositions.noBase=[]}return t.prototype.getUniqueId=function(){var t=this._uidCount;return this._uidCount+=1,"id-"+t},Object.defineProperty(t.prototype,"map",{get:function(){return this._map||(this._map=new r.a),this._map},enumerable:!0,configurable:!0}),t.prototype.setCache=function(t,e,i){a.b.set(this.uid,t,e,i)},t.prototype.getCache=function(t,e){return void 0===e&&(e=void 0),a.b.get(this.uid,t,e)},t.prototype.dispatch=function(t,e){this.events.isEnabled(t)&&(e?(e.type=t,e.target=e.target||this,this.events.dispatch(t,{type:t,target:this})):this.events.dispatch(t,{type:t,target:this}))},t.prototype.dispatchImmediately=function(t,e){this.events.isEnabled(t)&&(e?(e.type=t,e.target=e.target||this,this.events.dispatchImmediately(t,e)):this.events.dispatchImmediately(t,{type:t,target:this}))},t.prototype.getPlaceholder=function(t){return o.hasValue(this._placeholders[t])?this._placeholders[t]:(this._placeholders[t]="__amcharts_"+t+"_"+s.random(8)+"__",this._placeholders[t])},t.prototype.addToInvalidComponents=function(t){t.baseId?l.move(this.invalidDatas[t.baseId],t):l.move(this.invalidDatas.noBase,t)},t.prototype.removeFromInvalidComponents=function(t){t.baseId&&l.remove(this.invalidDatas[t.baseId],t),l.remove(this.invalidDatas.noBase,t)},t.prototype.addToInvalidSprites=function(t){t.baseId?l.add(this.invalidSprites[t.baseId],t):l.add(this.invalidSprites.noBase,t)},t.prototype.removeFromInvalidSprites=function(t){t.baseId&&l.remove(this.invalidSprites[t.baseId],t),l.remove(this.invalidSprites.noBase,t)},t.prototype.addToInvalidPositions=function(t){t.baseId?l.add(this.invalidPositions[t.baseId],t):l.add(this.invalidPositions.noBase,t)},t.prototype.removeFromInvalidPositions=function(t){t.baseId&&l.remove(this.invalidPositions[t.baseId],t),l.remove(this.invalidPositions.noBase,t)},t.prototype.addToInvalidLayouts=function(t){t.baseId?l.add(this.invalidLayouts[t.baseId],t):l.add(this.invalidLayouts.noBase,t)},t.prototype.removeFromInvalidLayouts=function(t){t.baseId&&l.remove(this.invalidLayouts[t.baseId],t),l.remove(this.invalidLayouts.noBase,t)},t}(),h=new u},aFzC:function(t,e,i){"use strict";i.d(e,"b",function(){return l}),e.c=function(t,e,i,a,u,h){var c=t.x,p=t.y,d=e.x,f=e.y,g=s.getDistance(t,e);h&&(i=g/Math.round(g/i));var y=n.c.getCache(o.stringify(["wavedLine",t.x,e.x,t.y,e.y,i,a]));if(!y){if(g>0){var m=Math.atan2(f-p,d-c),v=Math.cos(m),b=Math.sin(m),x=i*v,_=i*b;if(i<=1||a<=1)y=r.lineTo(e);else{var P=Math.round(2*g/i),w=[],O=1;d<c&&(O*=-1),f<p&&(O*=-1);for(var T=0;T<=P;T++){var S=c+T*x/2+(O*=-1)*a/2*b,C=p+T*_/2-O*a/2*v;w.push({x:S,y:C})}y=new l(u,u).smooth(w)}}else y="";n.c.setCache(o.stringify(["wavedLine",t.x,e.x,t.y,e.y,i,a]),y)}return y},i.d(e,"a",function(){return u});var n=i("aCit"),r=i("hGwe"),a=i("hJ5i"),o=i("v9UT"),s=i("Gg2j"),l=function(){function t(t,e){this._tensionX=t,this._tensionY=e}return t.prototype.smooth=function(t){var e=this._tensionX,i=this._tensionY;if(t.length<3||e>=1&&i>=1)return r.polyline(t);var n=t[0],a=t[t.length-1],o=!1;s.round(n.x,3)==s.round(a.x)&&s.round(n.y)==s.round(a.y)&&(o=!0);for(var l="",u=0,h=t.length-1;u<h;u++){var c=t[u-1],p=t[u],d=t[u+1],f=t[u+2];0===u?c=o?t[t.length-2]:t[u]:u==t.length-2&&(f=o?t[1]:t[u+1]);var g=s.getCubicControlPointA(c,p,d,f,e,i),y=s.getCubicControlPointB(c,p,d,f,e,i);l+=r.cubicCurveTo(d,g,y)}return l},t}();var u=function(){function t(t){this._closed=t.closed}return t.prototype.smooth=function(t){var e=this,i=NaN,n=NaN,o=NaN,s=NaN,l=NaN,u=NaN,h=NaN,c=NaN,p=NaN,d=NaN,f=0,g="",y=function(t,e){g+=r.cubicCurveTo({x:(i+4*n+t)/6,y:(u+4*h+e)/6},{x:(2*i+n)/3,y:(2*u+h)/3},{x:(i+2*n)/3,y:(u+2*h)/3})},m=function(t){var a=t.x,m=t.y;switch(f){case 0:f=1,e._closed?(o=a,c=m):g+=r.lineTo({x:a,y:m});break;case 1:f=2,e._closed&&(s=a,p=m);break;case 2:if(f=3,e._closed){l=a,d=m,g+=r.moveTo({x:(i+4*n+a)/6,y:(u+4*h+m)/6});break}g+=r.lineTo({x:(5*i+n)/6,y:(5*u+h)/6});default:y(a,m)}i=n,n=a,u=h,h=m};if(a.each(t,m),this._closed)switch(f){case 1:g+=r.moveTo({x:o,y:c}),g+=r.closePath();break;case 2:g+=r.moveTo({x:(o+2*s)/3,y:(c+2*p)/3}),g+=r.lineTo({x:(s+2*o)/3,y:(p+2*c)/3}),g+=r.closePath();break;case 3:m({x:o,y:c}),m({x:s,y:p}),m({x:l,y:d})}else{switch(f){case 3:y(n,h);case 2:g+=r.lineTo({x:n,y:h})}g+=r.closePath()}return g},t}()},aGXA:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("C6dT"),a=i("p9TX"),o=i("CnhP"),s=i("MIZb"),l=i("aCit"),u=function(t){function e(){var e=t.call(this)||this;e.className="Button",e.tooltipY=0,e.iconPosition="left",e.layout="horizontal",e.contentAlign="center",e.contentValign="middle",e.padding(8,16,8,16);var i=new s.a,n=e.background;n.fill=i.getFor("secondaryButton"),n.stroke=i.getFor("secondaryButtonStroke"),n.fillOpacity=1,n.strokeOpacity=1,n.cornerRadius(3,3,3,3),e.label=new a.a,e.label.fill=i.getFor("secondaryButtonText");var r=n.states.create("hover");r.properties.fillOpacity=1,r.properties.fill=i.getFor("secondaryButtonHover");var o=n.states.create("down");return o.transitionDuration=100,o.properties.fill=i.getFor("secondaryButtonDown"),o.properties.fillOpacity=1,e.role="button",e.focusable=!0,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"icon",{get:function(){return this.getPropertyValue("icon")},set:function(t){var e=this.getPropertyValue("icon");e&&(e.parent=void 0),t&&(this.setPropertyValue("icon",t),t.parent=this,t.interactionsEnabled=!1,this.iconPosition=this.iconPosition,this._disposers.push(t))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"iconPosition",{get:function(){return this.getPropertyValue("iconPosition")},set:function(t){this.setPropertyValue("iconPosition",t),this.icon&&("left"==t?this.icon.toBack():this.icon.toFront())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"label",{get:function(){return this._label},set:function(t){this._label&&this.removeDispose(this._label),this._label=t,t&&(t.parent=this,t.interactionsEnabled=!1,this._disposers.push(this._label))},enumerable:!0,configurable:!0}),e.prototype.createBackground=function(){return new o.a},e}(r.a);l.c.registeredClasses.Button=u},aHAe:function(t,e,i){"use strict";var n=i("cLsB"),r=i("7X7h"),a=i("VwzZ"),o=i("3Ok2"),s=i("tHyI"),l=i("WShl"),u=i("Ur2B");t.exports=function(t){var e,i,h,c,p,d,f=r(t),g="function"==typeof this?this:Array,y=arguments.length,m=y>1?arguments[1]:void 0,v=void 0!==m,b=u(f),x=0;if(v&&(m=n(m,y>2?arguments[2]:void 0,2)),void 0==b||g==Array&&o(b))for(i=new g(e=s(f.length));e>x;x++)d=v?m(f[x],x):f[x],l(i,x,d);else for(p=(c=b.call(f)).next,i=new g;!(h=p.call(c)).done;x++)d=v?a(c,m,[h.value,x],!0):h.value,l(i,x,d);return i.length=x,i}},aM7D:function(t,e,i){"use strict";i.d(e,"b",function(){return O}),i.d(e,"a",function(){return T});var n=i("m4/l"),r=i("Y9w3"),a=i("Vs7R"),o=i("vMqJ"),s=i("+qIf"),l=i("A6AV"),u=i("C6dT"),h=i("cxKZ"),c=i("TXRX"),p=i("uWmK"),d=i("Q4nc"),f=i("8ZqG"),g=i("aCit"),y=i("Wglt"),m=i("Gg2j"),v=i("0FpR"),b=i("v9UT"),x=i("Qkdp"),_=i("Mtpk"),P=i("hJ5i"),w=i("hxI2"),O=function(t){function e(){var e=t.call(this)||this;return e.className="SeriesDataItem",e.values.value={},e.values.value={},e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"bullets",{get:function(){return this._bullets||(this._bullets=new s.a,this._disposers.push(new s.b(this._bullets))),this._bullets},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){this.bullets.clear(),t.prototype.dispose.call(this)},Object.defineProperty(e.prototype,"value",{get:function(){return this.values.value.value},set:function(t){this.setValue("value",t)},enumerable:!0,configurable:!0}),e}(l.a),T=function(t){function e(){var i=t.call(this)||this;if(i._ignoreMinMax=!1,i._showBullets=!0,i.legendSettings=new p.c,i._tmin=new s.a,i._tmax=new s.a,i._smin=new s.a,i._smax=new s.a,i.dataItemsByAxis=new s.a,i.skipFocusThreshold=20,i._itemReaderTextChanged=!1,i.calculatePercent=!1,i.autoDispose=!0,i.simplifiedProcessing=!1,i.constructor===e)throw new Error("'Series' cannot be instantiated directly. Please use a specific series type.");i.className="Series",i.isMeasured=!1,i.layout="none",i.shouldClone=!1,i.setPropertyValue("hidden",!1),i.axisRanges=new o.b,i.axisRanges.events.on("inserted",i.processAxisRange,i,!1),i.minBulletDistance=0,i.mainContainer=i.createChild(u.a),i.mainContainer.shouldClone=!1,i.mainContainer.mask=i.createChild(a.a),i._disposers.push(i.mainContainer);var n=i.mainContainer.createChild(u.a);return i._shouldBeReady.push(n),n.shouldClone=!1,n.layout="none",n.virtualParent=i,i._disposers.push(n),i.bulletsContainer=n,i.tooltip=new h.a,i.tooltip.virtualParent=i,i._disposers.push(i.tooltip),i.hiddenState.transitionEasing=v.cubicIn,i.dataItem=i.createDataItem(),i._disposers.push(i.dataItem),i.dataItem.component=i,i.role="group",i.applyTheme(),i}return Object(n.c)(e,t),e.prototype.applyTheme=function(){t.prototype.applyTheme.call(this),d.a.autoSetClassName&&this.bulletsContainer&&(this.bulletsContainer.className=this.className+"-bullets",this.bulletsContainer.setClassName())},e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),_.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Series"))},e.prototype.createDataItem=function(){return new O},Object.defineProperty(e.prototype,"chart",{get:function(){return this._chart},set:function(t){this._chart=t},enumerable:!0,configurable:!0}),e.prototype.positionBullet=function(t){},e.prototype.processBullet=function(t){var e=this,i=t.newValue;i.isTemplate=!0,this.events.once("datavalidated",function(t){e.itemsFocusable()&&(i.focusable=!0)})},e.prototype.removeBullet=function(t){var e=t.oldValue;this.dataItems.each(function(t){var i=t.bullets.getKey(e.uid);i&&i.dispose()}),this.invalidate()},e.prototype.validateDataItems=function(){t.prototype.validateDataItems.call(this),this.processValues(!1)},e.prototype.getFirstValue=function(t,e){e>0&&e<this.dataItems.length-1&&e++;for(var i=e;i>=0;i--){var n=this.dataItems.getIndex(i).getActualWorkingValue(t);if(_.isNumber(n))return n}return null},e.prototype.getAbsoluteFirstValue=function(t){for(var e=0;e<this.dataItems.length;e++){var i=this.dataItems.getIndex(e).values[t].value;if(_.isNumber(i))return i}return null},e.prototype.rangeChangeUpdate=function(){t.prototype.rangeChangeUpdate.call(this),this.processValues(!0)},e.prototype.processValues=function(t){var e=this;if(!this.simplifiedProcessing){var i=this.dataItems,n={},r={},a={},o={},s={},l={},u={},h={},c={},p={},d=m.max(0,this._workingStartIndex);d=m.min(d,this.dataItems.length);var f=m.min(this._workingEndIndex,this.dataItems.length);if(_.isNumber(d)||(d=0),_.isNumber(f)||(f=this.dataItems.length),d>0){var g=i.getIndex(d-1);x.each(g.values,function(t,e){var i=g.getActualWorkingValue(t);_.isNumber(i)&&(h[t]=i)})}for(var y=function(t){var f=i.getIndex(t);x.each(f.values,function(t,i){var g=f.getActualWorkingValue(t);if(_.isNumber(g)){_.isNumber(n[t])||(n[t]=0),n[t]++,_.isNumber(r[t])||(r[t]=0),r[t]+=g,_.isNumber(a[t])||(a[t]=0),a[t]+=Math.abs(g),_.isNumber(l[t])||(l[t]=g),u[t]=g,_.isNumber(o[t])?o[t]>g&&(o[t]=g):o[t]=g,_.isNumber(s[t])?s[t]<g&&(s[t]=g):s[t]=g,_.isNumber(c[t])||(c[t]=e.getFirstValue(t,d)),_.isNumber(p[t])||(p[t]=e.getAbsoluteFirstValue(t)),f.setCalculatedValue(t,g-c[t],"change"),f.setCalculatedValue(t,(g-c[t])/c[t]*100,"changePercent"),f.setCalculatedValue(t,g-p[t],"startChange"),f.setCalculatedValue(t,(g-p[t])/p[t]*100,"startChangePercent");var y=h[t];_.isNumber(y)||(y=g),f.setCalculatedValue(t,g-y,"previousChange"),f.setCalculatedValue(t,(g-y)/y*100,"previousChangePercent"),h[t]=g}})},v=d;v<f;v++)y(v);if(this.calculatePercent){var b=function(t){var e=i.getIndex(t);x.each(e.values,function(t){var i=a[t],n=e.getActualWorkingValue(t);if(_.isNumber(n))if(i>0){n==i&&(i=e.values[t].value);var r=n/i*100;e.setCalculatedValue(t,r,"percent")}else e.setCalculatedValue(t,0,"percent")})};for(v=d;v<f;v++)b(v)}if(d>0){var P=i.getIndex(d-1);x.each(P.values,function(t){var e=P.values[t].value;P.setCalculatedValue(t,e-l[t],"change"),P.setCalculatedValue(t,(e-l[t])/l[t]*100,"changePercent")})}var w=this.dataItem;x.each(w.values,function(t){w.setCalculatedValue(t,r[t],"sum"),w.setCalculatedValue(t,a[t],"absoluteSum"),w.setCalculatedValue(t,r[t]/n[t],"average"),w.setCalculatedValue(t,l[t],"open"),w.setCalculatedValue(t,u[t],"close"),w.setCalculatedValue(t,o[t],"low"),w.setCalculatedValue(t,s[t],"high"),w.setCalculatedValue(t,n[t],"count")})}},e.prototype.validate=function(){y.each(this.axisRanges.iterator(),function(t){t.validate()}),t.prototype.validate.call(this);var e=this.bulletsContainer;if(e.fill=this.fill,e.stroke=this.stroke,e.x=this.pixelX,e.y=this.pixelY,this.bulletsContainer.children.length>0)if(this._showBullets){for(var i=0;i<this.startIndex;i++){(n=this.dataItems.getIndex(i))&&n.bullets.each(function(t,e){e.__disabled=!0})}for(i=this.dataItems.length-1;i>this.endIndex;i--){var n;(n=this.dataItems.getIndex(i))&&n.bullets.each(function(t,e){e.__disabled=!0})}}else this.bulletsContainer.children.each(function(t){t.__disabled=!0});this.updateTooltipBounds()},e.prototype.updateTooltipBounds=function(){if(this.topParent){var t={x:0,y:0,width:this.topParent.maxWidth,height:this.topParent.maxHeight};this.tooltip.setBounds(t)}},e.prototype.shouldCreateBullet=function(t,e){return!0},e.prototype.validateDataElement=function(e){var i=this;t.prototype.validateDataElement.call(this,e),this._showBullets?(this.isHidden||(this.bulletsContainer.visible=!0),this.bullets.each(function(t){var n=e.bullets.getKey(t.uid);if(i.shouldCreateBullet(e,t)){if(!n){var r=t.propertyFields.disabled,a=e.dataContext;r&&a&&!1===a[r]?(t.applyOnClones=!1,t.disabled=!1,n=t.clone(),t.disabled=!0,t.applyOnClones=!0):n=t.clone(),n.shouldClone=!1,e.addSprite(n),i.visible&&!i.isHiding||n.hide(0)}var o=n.dataItem;if(o!=e){o&&o.bullets.setKey(t.uid,void 0);var s=i.itemReaderText;n instanceof c.a&&(s||(s="{"+n.xField+"}: {"+n.yField+"}"),n.isDynamic&&(e.events.on("workingvaluechanged",n.deepInvalidate,n,!1),i.dataItem.events.on("workingvaluechanged",n.deepInvalidate,n,!1)),n.deepInvalidate()),n.focusable&&(n.events.on("focus",function(t){n.readerTitle=i.populateString(s,n.dataItem)},void 0,!1),n.events.on("blur",function(t){n.readerTitle=""},void 0,!1)),n.hoverable&&(n.events.on("over",function(t){n.readerTitle=i.populateString(s,n.dataItem)},void 0,!1),n.events.on("out",function(t){n.readerTitle=""},void 0,!1))}n.parent=i.bulletsContainer,e.bullets.setKey(t.uid,n),n.maxWidth=e.itemWidth,n.maxHeight=e.itemHeight,n.__disabled=!1,i.positionBullet(n)}})):this.bulletsContainer.visible=!1},e.prototype.handleDataItemWorkingValueChange=function(t,e){this.dataRangeInvalid||this.invalidateProcessedData()},Object.defineProperty(e.prototype,"ignoreMinMax",{get:function(){return this._ignoreMinMax},set:function(t){this._ignoreMinMax=t,this.invalidateDataItems()},enumerable:!0,configurable:!0}),e.prototype.createMask=function(){},e.prototype.processAxisRange=function(t){this.rangesContainer||(this.rangesContainer=this.createChild(u.a),this.rangesContainer.shouldClone=!1,this.rangesContainer.isMeasured=!1);var e=t.newValue;e&&(e.contents.parent=this.rangesContainer,e.isRange=!0,e.events.on("valuechanged",this.invalidateDataItems,this,!1))},e.prototype.getAxisField=function(t){},e.prototype.showTooltipAtPosition=function(t,e){},Object.defineProperty(e.prototype,"minBulletDistance",{get:function(){return this.getPropertyValue("minBulletDistance")},set:function(t){this.setPropertyValue("minBulletDistance",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bullets",{get:function(){return this._bullets||(this._bullets=new o.e(new c.a),this._bullets.template.virtualParent=this,this._bullets.events.on("inserted",this.processBullet,this,!1),this._bullets.events.on("removed",this.removeBullet,this,!1),this._disposers.push(new o.c(this._bullets)),this._disposers.push(this._bullets.template)),this._bullets},enumerable:!0,configurable:!0}),e.prototype.createLegendMarker=function(t){},Object.defineProperty(e.prototype,"hiddenInLegend",{get:function(){return this.getPropertyValue("hiddenInLegend")},set:function(t){this.setPropertyValue("hiddenInLegend",t)&&this.chart&&this.chart.feedLegend()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this.getPropertyValue("name")},set:function(t){this.setPropertyValue("name",t);var e=this.legendDataItem;e&&(e.component.invalidate(),e.component.invalidateRawData()),this.readerTitle=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"itemReaderText",{get:function(){var t=this._itemReaderText;return t||(this.tooltipText?t=b.plainText(this.tooltipText):this.tooltipHTML&&(t=b.plainText(this.tooltipHTML))),this._adapterO?this._adapterO.apply("itemReaderText",t):t},set:function(t){this._itemReaderText=t,this._itemReaderTextChanged=!0},enumerable:!0,configurable:!0}),e.prototype.itemsFocusable=function(){return!(this.dataItems.length>=this.skipFocusThreshold)},Object.defineProperty(e.prototype,"legendDataItem",{get:function(){return this._legendDataItem},set:function(t){this._legendDataItem=t,this._legendDataItem.itemContainer.deepInvalidate()},enumerable:!0,configurable:!0}),e.prototype.updateLegendValue=function(t,e){if(this.legendDataItem){var i=this.legendSettings,n=this.legendDataItem,r=n.label,a=n.valueLabel;t||e?(a&&(i.itemValueText&&(a.text=i.itemValueText),a.dataItem=t),r&&(i.itemLabelText&&(r.text=i.itemLabelText),r.dataItem=t)):(r&&((i.labelText||void 0!=i.itemLabelText)&&(r.text=i.labelText),r.dataItem=this.dataItem),a&&((i.valueText||void 0!=i.itemValueText)&&(a.text=i.valueText),a.dataItem=this.dataItem))}},e.prototype.copyFrom=function(e){this.bullets.copyFrom(e.bullets),this.bulletsContainer.copyFrom(e.bulletsContainer),this.calculatePercent=e.calculatePercent,this.simplifiedProcessing=e.simplifiedProcessing,t.prototype.copyFrom.call(this,e)},e.prototype.raiseCriticalError=function(t){this._chart&&this._chart.modal&&(this._chart.modal.content=this._chart.adapter.apply("criticalError",t).message,this._chart.modal.closable=!1,this._chart.modal.open(),this._chart.disabled=!0),d.a.verbose&&console.log(t)},e.prototype.applyFilters=function(){var e=this;t.prototype.applyFilters.call(this),this.bulletsContainer.filters.clear(),y.each(this.filters.iterator(),function(t){e.bulletsContainer.filters.push(t.clone())})},Object.defineProperty(e.prototype,"heatRules",{get:function(){var t=this;return this._heatRules||(this._heatRules=new o.b,this._heatRules.events.on("inserted",function(e){var i=e.newValue,n=i.target;if(n){var r=i.dataField;_.hasValue(r)||(r="value");var o=i.min,s=i.max,l=t.dataItem,h=i.property,c=_.toNumber(i.minValue),p=_.toNumber(i.maxValue);_.isNumber(c)||_.isNumber(p)||t.dataItem.events.on("calculatedvaluechanged",function(e){e.property==r&&y.each(t.dataItems.iterator(),function(t){var e=!1;P.each(t.sprites,function(t){if(t.clonedFrom==n){var i=t;i[h]=i[h],e=!0}}),e||P.each(t.sprites,function(t){t instanceof u.a&&y.each(t.children.iterator(),function(t){if(t.className==n.className){var e=t;e[h]=e[h]}else t instanceof u.a&&t.deepInvalidate()})})})}),t.dataItems.template.events.on("workingvaluechanged",function(t){if(t.property==r){var e=t.target,i=!1;P.each(e.sprites,function(t){if(t.clonedFrom==n){var e=t;e[h]=e[h],i=!0}}),i||P.each(e.sprites,function(t){t instanceof u.a&&y.each(t.children.iterator(),function(t){if(t.className==n.className){var e=t;e[h]=e[h]}else t instanceof u.a&&t.deepInvalidate()})})}}),n.adapter.add(h,function(t,e,n){var u=_.toNumber(i.minValue),h=_.toNumber(i.maxValue);if(e instanceof a.a){var c=e.propertyFields[n];if(c&&e.dataItem){var p=e.dataItem.dataContext;if(p&&_.hasValue(p[c]))return t}}var d=e.dataItem;if((_.isNumber(u)||(u=l.values[r].low),_.isNumber(h)||(h=l.values[r].high),d)&&d.values[r]){var g=d.getActualWorkingValue(r);if(_.hasValue(o)&&_.hasValue(s)&&_.isNumber(u)&&_.isNumber(h)&&_.isNumber(g)){var y=(g-u)/(h-u);if(_.isNumber(g)&&!_.isNumber(y)&&(y=.5),_.isNumber(o))return o+(s-o)*y;if(o instanceof f.a)return new f.a(w.interpolate(o.rgb,s.rgb,y))}}return t})}})),this._heatRules},enumerable:!0,configurable:!0}),e.prototype.processConfig=function(e){var i;if(e){if(_.hasValue(e.bullets)&&_.isArray(e.bullets))for(var n=0,r=e.bullets.length;n<r;n++){var a=e.bullets[n];_.hasValue(a.type)||(a.type="Bullet")}_.hasValue(e.heatRules)&&_.isArray(e.heatRules)&&(i=e.heatRules,delete e.heatRules)}if(t.prototype.processConfig.call(this,e),i){for(n=0,r=i.length;n<r;n++){var s=i[n],l=this;if(_.hasValue(s.target)&&_.isString(s.target))if(this.map.hasKey(s.target))l=this.map.getKey(s.target);else for(var u=s.target.split("."),h=0;h<u.length;h++)if(l instanceof o.b){var c=l.getIndex(_.toNumber(u[h]));l=c||l[u[h]]}else l=l[u[h]];s.target=l,_.hasValue(s.min)&&(s.min=this.maybeColorOrPercent(s.min)),_.hasValue(s.max)&&(s.max=this.maybeColorOrPercent(s.max))}t.prototype.processConfig.call(this,{heatRules:i})}},e.prototype.configOrder=function(e,i){return e==i?0:"heatRules"==e?1:"heatRules"==i?-1:t.prototype.configOrder.call(this,e,i)},e.prototype.setVisibility=function(e){t.prototype.setVisibility.call(this,e),this.bulletsContainer.visible=e},e}(r.a);g.c.registeredClasses.Series=T,g.c.registeredClasses.SeriesDataItem=O},aSLB:function(t,e,i){"use strict";var n=i("0sYB"),r=i("3sMl"),a=i("hqo8"),o=i("7X7h"),s=i("HnbP"),l=i("8+rI");r&&n({target:"Object",proto:!0,forced:a},{__defineSetter__:function(t,e){l.f(o(this),t,{set:s(e),enumerable:!0,configurable:!0})}})},abrF:function(t,e,i){var n=i("0sYB"),r=i("6aQQ"),a=i("YG4I").f;n({target:"Object",stat:!0,forced:r(function(){return!Object.getOwnPropertyNames(1)})},{getOwnPropertyNames:a})},akNo:function(t,e,i){"use strict";i.d(e,"a",function(){return d});var n=i("m4/l"),r=i("P/bD"),a=i("Tjl+"),o=i("MipW"),s=i("aCit"),l=i("ScGY"),u=i("Qkdp"),h=i("v9UT"),c=i("Mtpk"),p=i("Gg2j"),d=function(t){function e(){var e=t.call(this)||this;return e._negativeBase=0,e._baseUnit="second",e._outputFormat="svg",e._unitValues={millisecond:1,second:1e3,minute:6e4,hour:36e5,day:864e5,week:6048e5,month:2592e6,year:31536e6},e._unitAliases={Y:"y",D:"d",H:"h",K:"h",k:"h",n:"S"},e.className="DurationFormatter",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.format=function(t,e,i){this.language||(this.sprite?this.language=this.sprite.language:this.language=new r.a);var n=i||this._baseUnit;void 0!==e&&""!==e||(e=c.hasValue(this.durationFormat)?this.durationFormat:this.getFormat(c.toNumber(t),null,n)),e=h.cleanFormat(e);var a,o=this.parseFormat(e,n),s=Number(t);a=s>this._negativeBase?o.positive:s<this._negativeBase?o.negative:o.zero;var l=this.applyFormat(s,a);return""!==a.color&&("svg"===this._outputFormat?l="<tspan fill='"+a.color+"'>"+l+"</tspan>":"html"===this._outputFormat&&(l="<span style='color: "+a.color+";'>"+l+"</span>")),l},e.prototype.parseFormat=function(t,e){var i=this,n=this.getCache(t);if(c.hasValue(n))return n;var r=e||this._baseUnit,a={positive:{color:"",template:"",parts:[],source:"",baseUnit:r,parsed:!1,absolute:!1},negative:{color:"",template:"",parts:[],source:"",baseUnit:r,parsed:!1,absolute:!1},zero:{color:"",template:"",parts:[],source:"",baseUnit:r,parsed:!1,absolute:!1}},s=(t=t.replace("||",l.e)).split("|");return a.positive.source=s[0],void 0===s[2]?a.zero=a.positive:a.zero.source=s[2],void 0===s[1]?a.negative=a.positive:a.negative.source=s[1],u.each(a,function(t,e){if(!e.parsed)if(void 0===i.getCache(e.source)){var n,r=e.source;(n=e.source.match(/^\[([^\]]*)\]/))&&n.length&&""!==n[0]&&(r=e.source.substr(n[0].length),e.color=n[1]);for(var s=Object(o.b)().chunk(r,!0),u=0;u<s.length;u++){var h=s[u];if(h.text=h.text.replace(l.e,"|"),"value"===h.type){h.text.match(/[yYMdDwhHKkmsSn]+a/)&&(e.absolute=!0,h.text=h.text.replace(/([yYMdDwhHKkmsSn]+)a/,"$1"));var p=h.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);if(p)for(var d=0;d<p.length;d++)c.hasValue(p[d])||(p[d]=i._unitAliases[p[d]]),e.parts.push(p[d]),h.text=h.text.replace(p[d],l.d)}e.template+=h.text}i.setCache(e.source,e),e.parsed=!0}else a[t]=i.getCache(e.source)}),this.setCache(t,a),a},e.prototype.applyFormat=function(t,e){var i=!e.absolute&&t<this._negativeBase;t=Math.abs(t);for(var n=this.toTimeStamp(t,e.baseUnit),r=e.template,a=0,o=e.parts.length;a<o;a++){var s=e.parts[a],u=this.toTimeUnit(s.substr(0,1)),c=s.length,p=Math.floor(n/this._unitValues[u]);r=r.replace(l.d,h.padString(p,c,"0")),n-=p*this._unitValues[u]}return i&&(r="-"+r),r},e.prototype.toTimeStamp=function(t,e){return t*this._unitValues[e]},e.prototype.toTimeUnit=function(t){switch(t){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"w":return"week";case"M":return"month";case"y":return"year"}},e.prototype.invalidateSprite=function(){this.sprite&&this.sprite.invalidate()},Object.defineProperty(e.prototype,"baseUnit",{get:function(){return this._baseUnit},set:function(t){this._baseUnit=t,this.invalidateSprite()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputFormat",{get:function(){return this._outputFormat},set:function(t){this._outputFormat=t.toLowerCase(),this.invalidateSprite()},enumerable:!0,configurable:!0}),e.prototype.getFormat=function(t,e,i){if(c.hasValue(this.durationFormat))return this.durationFormat;if(i||(i=this.baseUnit),c.hasValue(e)&&t!=e){t=Math.abs(t),e=Math.abs(e);var n=this.getValueUnit(p.max(t,e),i);return this.durationFormats[i][n]}var r=this.getValueUnit(t,i);return this.durationFormats[i][r]},e.prototype.getValueUnit=function(t,e){var i;e||(e=this.baseUnit);var n=this.getMilliseconds(t,e);return u.eachContinue(this._unitValues,function(t,r){if(t==e||i){if(n/r<=1)return i||(i=t),!1;i=t}return!0}),i},e.prototype.getMilliseconds=function(t,e){return e||(e=this.baseUnit),t*this._unitValues[e]},Object.defineProperty(e.prototype,"durationFormat",{get:function(){return this._durationFormat},set:function(t){this._durationFormat!=t&&(this._durationFormat=t,this.invalidateSprite())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"durationFormats",{get:function(){return this._durationFormats||(this._durationFormats={millisecond:{millisecond:this.language.translate("_duration_millisecond"),second:this.language.translate("_duration_millisecond_second"),minute:this.language.translate("_duration_millisecond_minute"),hour:this.language.translate("_duration_millisecond_hour"),day:this.language.translate("_duration_millisecond_day"),week:this.language.translate("_duration_millisecond_week"),month:this.language.translate("_duration_millisecond_month"),year:this.language.translate("_duration_millisecond_year")},second:{second:this.language.translate("_duration_second"),minute:this.language.translate("_duration_second_minute"),hour:this.language.translate("_duration_second_hour"),day:this.language.translate("_duration_second_day"),week:this.language.translate("_duration_second_week"),month:this.language.translate("_duration_second_month"),year:this.language.translate("_duration_second_year")},minute:{minute:this.language.translate("_duration_minute"),hour:this.language.translate("_duration_minute_hour"),day:this.language.translate("_duration_minute_day"),week:this.language.translate("_duration_minute_week"),month:this.language.translate("_duration_minute_month"),year:this.language.translate("_duration_minute_year")},hour:{hour:this.language.translate("_duration_hour"),day:this.language.translate("_duration_hour_day"),week:this.language.translate("_duration_hour_week"),month:this.language.translate("_duration_hour_month"),year:this.language.translate("_duration_hour_year")},day:{day:this.language.translate("_duration_day"),week:this.language.translate("_duration_day_week"),month:this.language.translate("_duration_day_month"),year:this.language.translate("_duration_day_year")},week:{week:this.language.translate("_duration_week"),month:this.language.translate("_duration_week_month"),year:this.language.translate("_duration_week_year")},month:{month:this.language.translate("_duration_month"),year:this.language.translate("_duration_month_year")},year:{year:this.language.translate("_duration_year")}}),this._durationFormats},set:function(t){this._durationFormats=t,this.invalidateSprite()},enumerable:!0,configurable:!0}),e}(a.a);s.c.registeredClasses.DurationFormatter=d},bS9u:function(t,e,i){"use strict";var n,r,a=0,o=0,s=0,l=1e3,u=0,h=0,c=0,p="object"==typeof performance&&performance.now?performance:Date,d="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function f(){return h||(d(g),h=p.now()+c)}function g(){h=0}function y(){this._call=this._time=this._next=null}function m(t,e,i){var n=new y;return n.restart(t,e,i),n}function v(){f(),++a;for(var t,e=n;e;)(t=h-e._time)>=0&&e._call.call(null,t),e=e._next;--a}function b(){h=(u=p.now())+c,a=o=0;try{v()}finally{a=0,function(){var t,e,i=n,a=1/0;for(;i;)i._call?(a>i._time&&(a=i._time),t=i,i=i._next):(e=i._next,i._next=null,i=t?t._next=e:n=e);r=t,_(a)}(),h=0}}function x(){var t=p.now(),e=t-u;e>l&&(c-=e,u=t)}function _(t){a||(o&&(o=clearTimeout(o)),t-h>24?(t<1/0&&(o=setTimeout(b,t-p.now()-c)),s&&(s=clearInterval(s))):(s||(u=p.now(),s=setInterval(x,l)),a=1,d(b)))}y.prototype=m.prototype={constructor:y,restart:function(t,e,i){if("function"!=typeof t)throw new TypeError("callback is not a function");i=(null==i?f():+i)+(null==e?0:+e),this._next||r===this||(r?r._next=this:n=this,r=this),this._call=t,this._time=i,_()},stop:function(){this._call&&(this._call=null,this._time=1/0,_())}};var P=function(t,e,i){var n=new y;return e=null==e?0:+e,n.restart(function(i){n.stop(),t(i+e)},e,i),n},w=function(t,e,i){var n=new y,r=e;return null==e?(n.restart(t,e,i),n):(e=+e,i=null==i?f():+i,n.restart(function a(o){o+=r,n.restart(a,r+=e,i),t(o)},e,i),n)};i.d(e,"a",function(){return f}),i.d(e,"c",function(){return m}),i.d(e,!1,function(){return v}),i.d(e,"b",function(){return P}),i.d(e,!1,function(){return w})},bUwg:function(t,e,i){i("0sYB")({target:"Object",stat:!0,sham:!i("3sMl")},{create:i("QzDi")})},bZFJ:function(t,e,i){var n=i("0sYB"),r=i("8nEM"),a=Math.abs,o=Math.pow;n({target:"Math",stat:!0},{cbrt:function(t){return r(t=+t)*o(a(t),1/3)}})},bvi0:function(t,e,i){var n=i("vfdp"),r=i("29Us"),a=n["__core-js_shared__"]||r("__core-js_shared__",{});t.exports=a},cBFz:function(t,e,i){"use strict";var n=i("vfdp"),r=i("UseD"),a=i("6aQQ"),o=n.Int8Array,s=r.aTypedArray,l=r.exportTypedArrayMethod,u=[].toLocaleString,h=[].slice,c=!!o&&a(function(){u.call(new o(1))});l("toLocaleString",function(){return u.apply(c?h.call(s(this)):s(this),arguments)},a(function(){return[1,2].toLocaleString()!=new o([1,2]).toLocaleString()})||!a(function(){o.prototype.toLocaleString.call([1,2])}))},cLsB:function(t,e,i){var n=i("HnbP");t.exports=function(t,e,i){if(n(t),void 0===e)return t;switch(i){case 0:return function(){return t.call(e)};case 1:return function(i){return t.call(e,i)};case 2:return function(i,n){return t.call(e,i,n)};case 3:return function(i,n,r){return t.call(e,i,n,r)}}return function(){return t.apply(e,arguments)}}},cOH5:function(t,e,i){"use strict";i.d(e,"a",function(){return r});var n=i("m4/l"),r=function(t){function e(e){return t.call(this,e)||this}return Object(n.c)(e,t),e.prototype.add=function(t){t&&this.node.appendChild(t.node)},e.prototype.addToBack=function(t){if(t){var e=this.node.childNodes[0];e?e!=t.node&&this.node.insertBefore(t.node,e):this.node.appendChild(t.node)}},e.prototype.removeElement=function(t){if(t)try{t.node&&t.node.parentNode==this.node&&this.node.removeChild(t.node)}catch(t){}},e.prototype.hasChild=function(t){for(var e=0;e<this.node.childNodes.length;e++)if(this.node.childNodes[e]==t.node)return!0;return!1},Object.defineProperty(e.prototype,"content",{get:function(){return this.node.innerHTML},set:function(t){this.node.innerHTML=t},enumerable:!0,configurable:!0}),e.prototype.removeChildren=function(){if(this.node.childNodes)for(;this.node.childNodes.length>0;){var t=this.node.firstChild;t&&t.parentNode&&t.parentNode.removeChild(t)}},e}(i("pzs1").a)},cSfM:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("sup")},{sup:function(){return r(this,"sup","","")}})},"cXJ+":function(t,e,i){"use strict";var n=i("0sYB"),r=i("7dku").right,a=i("xlUI"),o=i("J+FZ"),s=a("reduceRight"),l=o("reduce",{1:0});n({target:"Array",proto:!0,forced:!s||!l},{reduceRight:function(t){return r(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},cxKZ:function(t,e,i){"use strict";i.d(e,"a",function(){return f});var n=i("m4/l"),r=i("C6dT"),a=i("aCit"),o=i("MZQ8"),s=i("p9TX"),l=i("1yyj"),u=i("8ZqG"),h=i("VAFc"),c=i("Gg2j"),p=i("0FpR"),d=i("v9UT"),f=function(t){function e(){var e=t.call(this)||this;e._boundingRect={x:-4e4,y:-4e4,width:8e4,height:8e4},e._pointTo={x:0,y:0},e.fitPointerToBounds=!1,e._verticalOrientation="up",e.className="Tooltip",e.isMeasured=!1,e.getFillFromObject=!0,e.margin(5,5,5,5),e.defaultState.transitionDuration=1,e.hiddenState.transitionDuration=1;var i=e.background;i.interactionsEnabled=!1,i.fillOpacity=.9,i.strokeWidth=1,i.strokeOpacity=1,i.stroke=Object(u.c)("#ffffff"),i.cornerRadius=3,i.pointerLength=6,i.pointerBaseWidth=10;var n=new h.a;n.dy=1,n.dx=1,n.opacity=.5,i.filters.push(n),e.autoTextColor=!0;var r=e.createChild(s.a);return r.shouldClone=!1,e.label=r,r.padding(7,12,4,12),r.interactionsEnabled=!1,r.horizontalCenter="middle",r.fill=Object(u.c)("#ffffff"),e._disposers.push(r),e.label.events.on("sizechanged",e.drawBackground,e),e.label.zIndex=1,e.pointerOrientation="vertical",e.animationDuration=0,e.animationEasing=p.cubicOut,e.setPropertyValue("showInViewport",!1),e.role="tooltip",e.visible=!1,e.opacity=0,e.x=0,e.y=0,e.events.on("visibilitychanged",e.handleVisibility,e),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.handleVisibility=function(){this.visible&&this.label.invalidate()},Object.defineProperty(e.prototype,"getStrokeFromObject",{get:function(){return this.getPropertyValue("getStrokeFromObject")},set:function(t){this.setPropertyValue("getStrokeFromObject",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoTextColor",{get:function(){return this.getPropertyValue("autoTextColor")},set:function(t){this.setPropertyValue("autoTextColor",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"keepTargetHover",{get:function(){return this.getPropertyValue("keepTargetHover")},set:function(t){var e=this;this.setPropertyValue("keepTargetHover",t,!0)&&t&&(this.hoverable=!0,this.background.interactionsEnabled=!0,this._disposers.push(this.events.on("over",function(t){e.targetSprite&&e.targetSprite.hoverable&&(e.targetSprite.isHover=!0)})),this._disposers.push(this.events.on("out",function(t){e.targetSprite&&e.targetSprite.hoverable&&(e.targetSprite.isHover=!1)})))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"showInViewport",{get:function(){return this.getPropertyValue("showInViewport")},set:function(t){this.setPropertyValue("showInViewport",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getFillFromObject",{get:function(){return this.getPropertyValue("getFillFromObject")},set:function(t){this.setPropertyValue("getFillFromObject",t,!0)},enumerable:!0,configurable:!0}),e.prototype.createBackground=function(){return new o.a},Object.defineProperty(e.prototype,"pointerOrientation",{get:function(){return this.getPropertyValue("pointerOrientation")},set:function(t){this.setPropertyValue("pointerOrientation",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"animationDuration",{get:function(){return this.getPropertyValue("animationDuration")},set:function(t){this.setPropertyValue("animationDuration",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"animationEasing",{get:function(){return this.getPropertyValue("animationEasing")},set:function(t){this.setPropertyValue("animationEasing",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"html",{get:function(){return this.label.html},set:function(t){this.label.html!=t&&(this.label.html=t,this.invalidate())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"text",{get:function(){return this.label.text},set:function(t){this.label.text!=t&&(this.label.text=t,this.invalidate())},enumerable:!0,configurable:!0}),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.label;e.invalid&&e.validate();var i,n,r=this._pointTo.x,a=this._pointTo.y,o=this._boundingRect,s=e.measuredWidth,l=e.measuredHeight,u=this.background.pointerLength;if(s>o.width){d.spritePointToDocument({x:o.x,y:o.y},this.parent);var h=d.spritePointToDocument({x:o.x+o.width,y:o.y+o.height},this.parent),p=document.body.offsetWidth;d.used(document.body.offsetHeight),h.x>p/2?o.x=o.width-s:o.width=o.x+s}var f=this.pointerOrientation;"horizontal"==f||"left"==f||"right"==f?(n=-l/2,i="horizontal"==f?r>o.x+o.width/2?-s/2-u:s/2+u:"left"==f?s/2+u:-s/2-u):(i=c.fitToRange(0,o.x-r+s/2,o.x-r+o.width-s/2),"vertical"==f?a>o.y+l+u?(n=-l-u,this._verticalOrientation="up"):(n=u,this._verticalOrientation="down"):"down"==f?(n=-l-u,this._verticalOrientation="up"):(n=u,this._verticalOrientation="down")),n=c.fitToRange(n,o.y-a,o.y+o.height-l-a),e.x=i,e.y=n,this.drawBackground()},e.prototype.updateBackground=function(){this.group.addToBack(this.background.group)},e.prototype.drawBackground=function(){var t=this.label,e=this.background,i=t.measuredWidth,n=t.measuredHeight,r=this._boundingRect,a=i,o=t.pixelX-i/2,s=n,l=t.pixelY,u=this._pointTo.x,h=this._pointTo.y,p=r.x-u,d=p+r.width,f=r.y-h,g=f+r.height;e.x=o,e.y=l,e.width=a,e.height=s,this.fitPointerToBounds?(e.pointerX=c.fitToRange(-e.x,p-e.x,d-e.x),e.pointerY=c.fitToRange(-e.y,f-e.y,g-e.y)):(e.pointerX=-e.x,e.pointerY=-e.y),e.validate()},e.prototype.pointTo=function(t,e){this._pointTo.x==t.x&&this._pointTo.y==t.y||(this._pointTo=t,this.invalidate(),!this.visible||e?(this.moveTo(this._pointTo),this._animation&&this._animation.kill()):0==this.pixelX&&0==this.pixelY?this.moveTo(this._pointTo):(this._animation&&this._animation.kill(),this._animation=new l.a(this,[{property:"x",to:t.x,from:this.pixelX},{property:"y",to:t.y,from:this.pixelY}],this.animationDuration,this.animationEasing).start()))},e.prototype.setBounds=function(t){var e=this._boundingRect;e.x==t.x&&e.y==t.y&&e.width==t.width&&e.height==t.height||(this._boundingRect=t,this.invalidate())},Object.defineProperty(e.prototype,"boundingContainer",{set:function(t){this._boundingContainer=t,t.events.on("sizechanged",this.updateBounds,this),t.events.on("positionchanged",this.updateBounds,this)},enumerable:!0,configurable:!0}),e.prototype.updateBounds=function(){var t=this._boundingContainer,e=d.spriteRectToSvg({x:t.pixelX,y:t.pixelY,width:t.maxWidth,height:t.maxHeight},t);this.setBounds(e)},Object.defineProperty(e.prototype,"verticalOrientation",{get:function(){return this._verticalOrientation},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tooltip",{get:function(){},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.label.copyFrom(e.label),e._boundingRect&&(this._boundingRect=e._boundingRect)},e.prototype.asFunction=function(e){return"animationEasing"==e||t.prototype.asIs.call(this,e)},e}(r.a);a.c.registeredClasses.Tooltip=f},dAGi:function(t,e,i){"use strict";var n=i("NZ9V"),r=i("3weC"),a=i("swFJ"),o=i("fXYt"),s=i("Xw1K");n("search",1,function(t,e,i){return[function(e){var i=a(this),n=void 0==e?void 0:e[t];return void 0!==n?n.call(e,i):new RegExp(e)[t](String(i))},function(t){var n=i(e,t,this);if(n.done)return n.value;var a=r(t),l=String(this),u=a.lastIndex;o(u,0)||(a.lastIndex=0);var h=s(a,l);return o(a.lastIndex,u)||(a.lastIndex=u),null===h?-1:h.index}]})},dEJP:function(t,e,i){var n=i("0sYB"),r=i("Uskt");n({target:"Number",stat:!0,forced:Number.parseInt!=r},{parseInt:r})},dlbc:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("fontcolor")},{fontcolor:function(t){return r(this,"font","color",t)}})},dzqq:function(t,e,i){var n=i("0sYB"),r=i("ibOM").values;n({target:"Object",stat:!0},{values:function(t){return r(t)}})},e71F:function(t,e,i){var n=i("0sYB"),r=i("6aQQ"),a=i("Kg2n"),o=Object.isExtensible;n({target:"Object",stat:!0,forced:r(function(){o(1)})},{isExtensible:function(t){return!!a(t)&&(!o||o(t))}})},eAid:function(t,e,i){"use strict";i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("Vs7R"),a=i("aCit"),o=i("8ZqG"),s=i("MIZb"),l=function(t){function e(){var e=t.call(this)||this;e.className="AxisLine",e.element=e.paper.add("path");var i=new s.a;return e.stroke=i.getFor("grid"),e.strokeOpacity=.15,e.pixelPerfect=!0,e.fill=Object(o.c)(),e.applyTheme(),e.interactionsEnabled=!1,e}return Object(n.c)(e,t),e}(r.a);a.c.registeredClasses.AxisLine=l},eCqC:function(t,e,i){"use strict";i.d(e,"a",function(){return a}),i.d(e,"b",function(){return o});var n=i("+qIf"),r=i("Mtpk"),a=function(){function t(){this._storage=new n.a,this.ttl=1e3}return t.prototype.set=function(t,e,i,a){var o=this._storage.insertKeyIfEmpty(t,function(){return new n.a}),s={touched:(new Date).getTime(),ttl:r.isNumber(a)?a:this.ttl,value:i};o.setKey(e,s)},t.prototype.get=function(t,e,i){if(void 0===i&&(i=void 0),this._storage.hasKey(t)){var n=this._storage.getKey(t);if(n.hasKey(e)){var r=n.getKey(e);return r.ttl&&r.touched+r.ttl<(new Date).getTime()&&(r.expired=!0),r.expired?(n.removeKey(e),i):r.value}return i}return i},t.prototype.clear=function(t){t?this._storage.removeKey(t):this._storage.clear()},t}(),o=new a},eK2B:function(t,e,i){i("6WsA")("matchAll")},eKCf:function(t,e,i){var n=i("0sYB"),r=i("1wCr"),a=i("3weC");n({target:"Reflect",stat:!0,sham:!i("6EAy")},{preventExtensions:function(t){a(t);try{var e=r("Object","preventExtensions");return e&&e(t),!0}catch(t){return!1}}})},eKg1:function(t,e,i){var n=i("0sYB"),r=Math.asinh,a=Math.log,o=Math.sqrt;n({target:"Math",stat:!0,forced:!(r&&1/r(0)>0)},{asinh:function t(e){return isFinite(e=+e)&&0!=e?e<0?-t(-e):a(e+o(e*e+1)):e}})},eN1s:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("m4/l"),r=i("qzbU"),a=i("aCit"),o=function(t){function e(){var e=t.call(this)||this;return e.className="AxisTick",e.element=e.paper.add("path"),e.location=.5,e.above=!1,e.isMeasured=!1,e.pixelPerfect=!0,e.strokeOpacity=0,e.length=5,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"location",{get:function(){return this.getPropertyValue("location")},set:function(t){this.setPropertyValue("location",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inside",{get:function(){return this.getPropertyValue("inside")},set:function(t){this.setPropertyValue("inside",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"above",{get:function(){return this.getPropertyValue("above")},set:function(t){this.setPropertyValue("above",t,!0)},enumerable:!0,configurable:!0}),e.prototype.setDisabled=function(e){var i=t.prototype.setDisabled.call(this,e);return this.axis&&this.axis.invalidateDataItems(),i},e}(r.a);a.c.registeredClasses.AxisTick=o},eVN0:function(t,e,i){var n=i("KslR")("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(i){try{return e[n]=!1,"/./"[t](e)}catch(t){}}return!1}},exNg:function(t,e){var i=Math.ceil,n=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?n:i)(t)}},eygo:function(t,e,i){"use strict";var n=i("0sYB"),r=i("vfdp"),a=i("3sMl"),o=i("NSJ1"),s=i("UseD"),l=i("mtbW"),u=i("L56b"),h=i("Pm8L"),c=i("k2B3"),p=i("tHyI"),d=i("E+A3"),f=i("oxAz"),g=i("EErT"),y=i("JZRr"),m=i("5ou3"),v=i("Kg2n"),b=i("QzDi"),x=i("KJuV"),_=i("GtmK").f,P=i("3Fha"),w=i("X/sl").forEach,O=i("YRD/"),T=i("8+rI"),S=i("gxUV"),C=i("SqFF"),I=i("047P"),k=C.get,D=C.set,j=T.f,V=S.f,A=Math.round,M=r.RangeError,F=l.ArrayBuffer,E=l.DataView,R=s.NATIVE_ARRAY_BUFFER_VIEWS,N=s.TYPED_ARRAY_TAG,L=s.TypedArray,B=s.TypedArrayPrototype,U=s.aTypedArrayConstructor,W=s.isTypedArray,Y=function(t,e){for(var i=0,n=e.length,r=new(U(t))(n);n>i;)r[i]=e[i++];return r},H=function(t,e){j(t,e,{get:function(){return k(this)[e]}})},z=function(t){var e;return t instanceof F||"ArrayBuffer"==(e=m(t))||"SharedArrayBuffer"==e},X=function(t,e){return W(t)&&"symbol"!=typeof e&&e in t&&String(+e)==String(e)},G=function(t,e){return X(t,e=g(e,!0))?h(2,t[e]):V(t,e)},K=function(t,e,i){return!(X(t,e=g(e,!0))&&v(i)&&y(i,"value"))||y(i,"get")||y(i,"set")||i.configurable||y(i,"writable")&&!i.writable||y(i,"enumerable")&&!i.enumerable?j(t,e,i):(t[e]=i.value,t)};a?(R||(S.f=G,T.f=K,H(B,"buffer"),H(B,"byteOffset"),H(B,"byteLength"),H(B,"length")),n({target:"Object",stat:!0,forced:!R},{getOwnPropertyDescriptor:G,defineProperty:K}),t.exports=function(t,e,i){var a=t.match(/\d+$/)[0]/8,s=t+(i?"Clamped":"")+"Array",l="get"+t,h="set"+t,g=r[s],y=g,m=y&&y.prototype,T={},S=function(t,e){j(t,e,{get:function(){return function(t,e){var i=k(t);return i.view[l](e*a+i.byteOffset,!0)}(this,e)},set:function(t){return function(t,e,n){var r=k(t);i&&(n=(n=A(n))<0?0:n>255?255:255&n),r.view[h](e*a+r.byteOffset,n,!0)}(this,e,t)},enumerable:!0})};R?o&&(y=e(function(t,e,i,n){return u(t,y,s),I(v(e)?z(e)?void 0!==n?new g(e,f(i,a),n):void 0!==i?new g(e,f(i,a)):new g(e):W(e)?Y(y,e):P.call(y,e):new g(d(e)),t,y)}),x&&x(y,L),w(_(g),function(t){t in y||c(y,t,g[t])}),y.prototype=m):(y=e(function(t,e,i,n){u(t,y,s);var r,o,l,h=0,c=0;if(v(e)){if(!z(e))return W(e)?Y(y,e):P.call(y,e);r=e,c=f(i,a);var g=e.byteLength;if(void 0===n){if(g%a)throw M("Wrong length");if((o=g-c)<0)throw M("Wrong length")}else if((o=p(n)*a)+c>g)throw M("Wrong length");l=o/a}else l=d(e),r=new F(o=l*a);for(D(t,{buffer:r,byteOffset:c,byteLength:o,length:l,view:new E(r)});h<l;)S(t,h++)}),x&&x(y,L),m=y.prototype=b(B)),m.constructor!==y&&c(m,"constructor",y),N&&c(m,N,s),T[s]=y,n({global:!0,forced:y!=g,sham:!R},T),"BYTES_PER_ELEMENT"in y||c(y,"BYTES_PER_ELEMENT",a),"BYTES_PER_ELEMENT"in m||c(m,"BYTES_PER_ELEMENT",a),O(s)}):t.exports=function(){}},f3Fu:function(t,e,i){var n=i("0sYB"),r=i("1wCr"),a=i("HnbP"),o=i("3weC"),s=i("Kg2n"),l=i("QzDi"),u=i("uKH8"),h=i("6aQQ"),c=r("Reflect","construct"),p=h(function(){function t(){}return!(c(function(){},[],t)instanceof t)}),d=!h(function(){c(function(){})}),f=p||d;n({target:"Reflect",stat:!0,forced:f,sham:f},{construct:function(t,e){a(t),o(e);var i=arguments.length<3?t:a(arguments[2]);if(d&&!p)return c(t,e,i);if(t==i){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var n=[null];return n.push.apply(n,e),new(u.apply(t,n))}var r=i.prototype,h=l(s(r)?r:Object.prototype),f=Function.apply.call(t,h,e);return s(f)?f:h}})},"fG/y":function(t,e,i){"use strict";var n=i("UseD"),r=n.aTypedArray,a=n.exportTypedArrayMethod,o=Math.floor;a("reverse",function(){for(var t,e=r(this).length,i=o(e/2),n=0;n<i;)t=this[n],this[n++]=this[--e],this[e]=t;return this})},fGTV:function(t,e,i){var n=i("1wCr");t.exports=n("document","documentElement")},fXYt:function(t,e){t.exports=Object.is||function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}},fYap:function(t,e,i){var n=i("LO3D"),r=i("vfRf"),a=n("keys");t.exports=function(t){return a[t]||(a[t]=r(t))}},ffjw:function(t,e,i){"use strict";var n=i("0sYB"),r=i("X/sl").find,a=i("0FA2"),o=!0,s=i("J+FZ")("find");"find"in[]&&Array(1).find(function(){o=!1}),n({target:"Array",proto:!0,forced:o||!s},{find:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),a("find")},fjAw:function(t,e,i){i("6WsA")("unscopables")},flUP:function(t,e,i){"use strict";var n=i("0sYB"),r=i("gxUV").f,a=i("tHyI"),o=i("qK31"),s=i("swFJ"),l=i("eVN0"),u=i("lnCe"),h="".startsWith,c=Math.min,p=l("startsWith");n({target:"String",proto:!0,forced:!(!u&&!p&&!!function(){var t=r(String.prototype,"startsWith");return t&&!t.writable}())&&!p},{startsWith:function(t){var e=String(s(this));o(t);var i=a(c(arguments.length>1?arguments[1]:void 0,e.length)),n=String(t);return h?h.call(e,n,i):e.slice(i,i+n.length)===n}})},fluH:function(t,e,i){"use strict";var n=i("UseD"),r=i("+s7l"),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("lastIndexOf",function(t){return r.apply(a(this),arguments)})},g3YV:function(t,e,i){var n=i("0sYB"),r=i("3sMl"),a=i("grfs"),o=i("9XRO"),s=i("gxUV"),l=i("WShl");n({target:"Object",stat:!0,sham:!r},{getOwnPropertyDescriptors:function(t){for(var e,i,n=o(t),r=s.f,u=a(n),h={},c=0;u.length>c;)void 0!==(i=r(n,e=u[c++]))&&l(h,e,i);return h}})},gBcN:function(t,e,i){var n,r,a,o=i("vfdp"),s=i("6aQQ"),l=i("2xmP"),u=i("cLsB"),h=i("fGTV"),c=i("BAfC"),p=i("q8hm"),d=o.location,f=o.setImmediate,g=o.clearImmediate,y=o.process,m=o.MessageChannel,v=o.Dispatch,b=0,x={},_=function(t){if(x.hasOwnProperty(t)){var e=x[t];delete x[t],e()}},P=function(t){return function(){_(t)}},w=function(t){_(t.data)},O=function(t){o.postMessage(t+"",d.protocol+"//"+d.host)};f&&g||(f=function(t){for(var e=[],i=1;arguments.length>i;)e.push(arguments[i++]);return x[++b]=function(){("function"==typeof t?t:Function(t)).apply(void 0,e)},n(b),b},g=function(t){delete x[t]},"process"==l(y)?n=function(t){y.nextTick(P(t))}:v&&v.now?n=function(t){v.now(P(t))}:m&&!p?(a=(r=new m).port2,r.port1.onmessage=w,n=u(a.postMessage,a,1)):!o.addEventListener||"function"!=typeof postMessage||o.importScripts||s(O)?n="onreadystatechange"in c("script")?function(t){h.appendChild(c("script")).onreadystatechange=function(){h.removeChild(this),_(t)}}:function(t){setTimeout(P(t),0)}:(n=O,o.addEventListener("message",w,!1))),t.exports={set:f,clear:g}},gaw2:function(t,e,i){var n=i("vfdp"),r=i("pVcl"),a=i("HgTb"),o=i("k2B3");for(var s in r){var l=n[s],u=l&&l.prototype;if(u&&u.forEach!==a)try{o(u,"forEach",a)}catch(t){u.forEach=a}}},gqvf:function(t,e,i){"use strict";i.d(e,"a",function(){return y});var n=i("m4/l"),r=i("1Fjw"),a=i("Vs7R"),o=i("hD5A"),s=i("aCit"),l=i("8ZqG"),u=i("MIZb"),h=i("zhwk"),c=i("qCRI"),p=i("Gg2j"),d=i("v9UT"),f=i("Mtpk"),g=i("hGwe"),y=function(t){function e(){var e=t.call(this)||this;e._lineX=new o.d,e._lineY=new o.d,e._xAxis=new o.d,e._yAxis=new o.d,e.className="XYCursor",e.behavior="zoomX",e.maxPanOut=.1;var i=new u.a,n=e.createChild(a.a);n.shouldClone=!1,n.fillOpacity=.2,n.fill=i.getFor("alternativeBackground"),n.isMeasured=!1,n.visible=!1,n.interactionsEnabled=!1,e.selection=n,e._disposers.push(e.selection);var r=e.createChild(a.a);r.shouldClone=!1,r.stroke=i.getFor("grid"),r.fill=Object(l.c)(),r.strokeDasharray="3,3",r.isMeasured=!1,r.strokeOpacity=.4,r.interactionsEnabled=!1,r.y=0,e.lineX=r,e._disposers.push(e.lineX);var s=e.createChild(a.a);return s.shouldClone=!1,s.stroke=i.getFor("grid"),s.fill=Object(l.c)(),s.strokeDasharray="3,3",s.isMeasured=!1,s.strokeOpacity=.4,s.interactionsEnabled=!1,s.x=0,e.lineY=s,e._disposers.push(e.lineY),e.events.on("sizechanged",e.updateSize,e,!1),e._disposers.push(e._lineX),e._disposers.push(e._lineY),e._disposers.push(e._xAxis),e._disposers.push(e._yAxis),e.mask=e,e.hideSeriesTooltipsOnSelection=!0,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.updateSize=function(){this.lineX&&(this.lineX.path=g.moveTo({x:0,y:0})+g.lineTo({x:0,y:this.innerHeight})),this.lineY&&(this.lineY.path=g.moveTo({x:0,y:0})+g.lineTo({x:this.innerWidth,y:0}))},e.prototype.updateSelection=function(){if(this._usesSelection){var t=this.downPoint,e=this.behavior;if(t){var i=this.point;this.lineX&&(i.x=this.lineX.pixelX),this.lineY&&(i.y=this.lineY.pixelY);var n=this.selection,r=Math.min(i.x,t.x),a=Math.min(i.y,t.y),o=p.round(Math.abs(t.x-i.x),this._positionPrecision),s=p.round(Math.abs(t.y-i.y),this._positionPrecision);switch(e){case"zoomX":a=0,s=this.pixelHeight;break;case"zoomY":r=0,o=this.pixelWidth;break;case"selectX":a=0,s=this.pixelHeight;break;case"selectY":r=0,o=this.pixelWidth}n.x=r,n.y=a,n.path=g.rectangle(o,s),n.validatePosition()}else"select"!=this._generalBehavior&&this.selection.hide()}},e.prototype.fixPoint=function(t){return t.x=Math.max(0,t.x),t.y=Math.max(0,t.y),t.x=Math.min(this.pixelWidth,t.x),t.y=Math.min(this.pixelHeight,t.y),t},e.prototype.triggerMoveReal=function(e){t.prototype.triggerMoveReal.call(this,e),this.snapToSeries&&!this.snapToSeries.isHidden||this.updateLinePositions(e),this.downPoint&&p.getDistance(this.downPoint,e)>3&&"pan"==this._generalBehavior&&(this.getPanningRanges(),this.dispatch("panning"))},e.prototype.updateLinePositions=function(t){t=this.fixPoint(this.point),this.lineX&&this.lineX.visible&&!this.xAxis&&(this.lineX.x=t.x),this.lineY&&this.lineY.visible&&!this.yAxis&&(this.lineY.y=t.y),this.updateSelection()},e.prototype.triggerDownReal=function(e){if(this.visible&&!this.isHiding)if("select"==this._generalBehavior&&(this.selection.parent=this.parent),this.fitsToBounds(e)){this.downPoint={x:e.x,y:e.y},this.updatePoint(e),this.point.x=this.downPoint.x,this.point.y=this.downPoint.y;var i=this.selection,n=this.downPoint.x,r=this.downPoint.y;this._usesSelection&&(i.x=n,i.y=r,i.path="",i.show()),t.prototype.triggerDownReal.call(this,e)}else this.downPoint=void 0;else this.downPoint=void 0},e.prototype.updatePoint=function(t){this.lineX&&(t.x=this.lineX.pixelX),this.lineY&&(t.y=this.lineY.pixelY)},e.prototype.triggerUpReal=function(e){if(this.hasMoved())this.downPoint&&(this.upPoint=e,this.updatePoint(this.upPoint),"pan"!=this._generalBehavior&&this.getRanges(),"select"!=this._generalBehavior&&this.selection.hide(),t.prototype.triggerUpReal.call(this,e));else{if("select"!=this._generalBehavior?this.selection.hide(0):(this.xRange=void 0,this.yRange=void 0,this.dispatchImmediately("selectended")),"pan"==this._generalBehavior)Object(h.b)().setGlobalStyle(c.a.default);this.dispatchImmediately("behaviorcanceled")}this.downPoint=void 0,this.dispatch("cursorpositionchanged")},e.prototype.hasMoved=function(){return("zoomX"==this.behavior||"panX"==this.behavior?p.getHorizontalDistance(this._upPointOrig,this._downPointOrig):"zoomY"==this.behavior||"panY"==this.behavior?p.getVerticalDistance(this._upPointOrig,this._downPointOrig):p.getDistance(this._upPointOrig,this._downPointOrig))>Object(h.b)().getHitOption(this.interactions,"hitTolerance")},e.prototype.getPanningRanges=function(){var t=p.round(this.downPoint.x/this.innerWidth,5),e=1-p.round(this.downPoint.y/this.innerHeight,5),i=t-p.round(this.point.x/this.innerWidth,5),n=e-(1-p.round(this.point.y/this.innerHeight,5));this.xRange={start:i,end:1+i},this.yRange={start:n,end:1+n},"panX"==this.behavior&&(this.yRange.start=0,this.yRange.end=1),"panY"==this.behavior&&(this.xRange.start=0,this.xRange.end=1)},e.prototype.getRanges=function(){this.lineX&&(this.upPoint.x=this.lineX.pixelX),this.lineY&&(this.upPoint.y=this.lineY.pixelY),d.used(this.selection);var t=p.round(this.downPoint.x/this.innerWidth,5),e=p.round(this.upPoint.x/this.innerWidth,5),i=1-p.round(this.downPoint.y/this.innerHeight,5),n=1-p.round(this.upPoint.y/this.innerHeight,5);this.xRange={start:p.min(t,e),end:p.max(t,e)},this.yRange={start:p.min(i,n),end:p.max(i,n)}},Object.defineProperty(e.prototype,"behavior",{get:function(){return this.getPropertyValue("behavior")},set:function(t){this.setPropertyValue("behavior",t,!0),this._usesSelection=!1,-1!=t.indexOf("zoom")&&(this._generalBehavior="zoom",this._usesSelection=!0),-1!=t.indexOf("select")&&(this._generalBehavior="select",this._usesSelection=!0),-1!=t.indexOf("pan")&&(this._generalBehavior="pan",this._usesSelection=!1)},enumerable:!0,configurable:!0}),e.prototype.shouldPreventGestures=function(t){return!(this.interactions.isTouchProtected&&t||"none"==this.behavior)},Object.defineProperty(e.prototype,"fullWidthLineX",{get:function(){return this.getPropertyValue("fullWidthLineX")},set:function(t){this.setPropertyValue("fullWidthLineX",t),t||this.updateSize()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fullWidthLineY",{get:function(){return this.getPropertyValue("fullWidthLineY")},set:function(t){this.setPropertyValue("fullWidthLineY",t),t||this.updateSize()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hideSeriesTooltipsOnSelection",{get:function(){return this.getPropertyValue("hideSeriesTooltipsOnSelection")},set:function(t){this.setPropertyValue("hideSeriesTooltipsOnSelection",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxTooltipDistance",{get:function(){return this.getPropertyValue("maxTooltipDistance")},set:function(t){this.setPropertyValue("maxTooltipDistance",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxPanOut",{get:function(){return this.getPropertyValue("maxPanOut")},set:function(t){this.setPropertyValue("maxPanOut",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"xAxis",{get:function(){return this._xAxis.get()},set:function(t){var e=this;this._xAxis.get()!=t&&this._xAxis.set(t,new o.c([t.tooltip.events.on("positionchanged",this.handleXTooltipPosition,this,!1),t.events.on("rangechangestarted",function(t){e.hide(0),e.preventShow=!0},void 0,!1),t.events.on("rangechangeended",function(t){e.preventShow=!1,e.hide(0),e.dispatch("cursorpositionchanged")},void 0,!1)]))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"yAxis",{get:function(){return this._yAxis.get()},set:function(t){var e=this;this._yAxis.get()!=t&&this._yAxis.set(t,new o.c([t.tooltip.events.on("positionchanged",this.handleYTooltipPosition,this,!1),t.events.on("rangechangestarted",function(t){e.hide(0),e.__disabled=!0},void 0,!1),t.events.on("rangechangeended",function(t){e.__disabled=!1,e.hide(0),e.dispatch("cursorpositionchanged")},void 0,!1)]))},enumerable:!0,configurable:!0}),e.prototype.handleXTooltipPosition=function(t){var e=this.xAxis.tooltip,i=d.svgPointToSprite({x:e.pixelX,y:e.pixelY},this),n=i.x;if(i.y=1,this.lineX&&(this.lineX.x=n,this.fitsToBounds(i)||this.hide()),this.xAxis&&this.fullWidthLineX){var r=this.xAxis.currentItemStartPoint,a=this.xAxis.currentItemEndPoint;if(r&&a){this.lineX.x=n;var o=a.x-r.x;this.lineX.path=g.rectangle(o,this.innerHeight,-o/2)}}},e.prototype.handleYTooltipPosition=function(t){var e=this.yAxis.tooltip,i=d.svgPointToSprite({x:e.pixelX,y:e.pixelY},this),n=i.y;if(i.x=1,this.lineY&&(this.lineY.y=n,this.fitsToBounds(i)||this.hide()),this.yAxis&&this.fullWidthLineY){var r=this.yAxis.currentItemStartPoint,a=this.yAxis.currentItemEndPoint;if(r&&a){this.lineY.y=n;var o=a.y-r.y;this.lineY.path=g.rectangle(this.innerWidth,o,0,-o/2)}}},Object.defineProperty(e.prototype,"lineX",{get:function(){return this._lineX.get()},set:function(t){t?(t.setElement(this.paper.add("path")),this._lineX.set(t,t.events.on("positionchanged",this.updateSelection,this,!1)),t.interactionsEnabled=!1,t.parent=this):this._lineX.reset()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"lineY",{get:function(){return this._lineY.get()},set:function(t){t?(t.setElement(this.paper.add("path")),this._lineY.set(t,t.events.on("positionchanged",this.updateSelection,this,!1)),t.parent=this,t.interactionsEnabled=!1):this._lineY.reset()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selection",{get:function(){return this._selection},set:function(t){this._selection=t,t&&(t.element=this.paper.add("path"),t.parent=this)},enumerable:!0,configurable:!0}),e.prototype.processConfig=function(e){e&&(f.hasValue(e.xAxis)&&f.isString(e.xAxis)&&(this.map.hasKey(e.xAxis)?e.xAxis=this.map.getKey(e.xAxis):(this.processingErrors.push('[XYCursor] No axis with id "'+e.xAxis+'" found for `xAxis`'),delete e.xAxis)),f.hasValue(e.yAxis)&&f.isString(e.yAxis)&&(this.map.hasKey(e.yAxis)?e.yAxis=this.map.getKey(e.yAxis):(this.processingErrors.push('[XYCursor] No axis with id "'+e.yAxis+'" found for `yAxis`'),delete e.yAxis)),f.hasValue(e.snapToSeries)&&f.isString(e.snapToSeries)&&(this.map.hasKey(e.snapToSeries)?e.snapToSeries=this.map.getKey(e.snapToSeries):(this.processingErrors.push('[XYCursor] No series with id "'+e.snapToSeries+'" found for `series`'),delete e.snapToSeries))),t.prototype.processConfig.call(this,e)},Object.defineProperty(e.prototype,"snapToSeries",{get:function(){return this.getPropertyValue("snapToSeries")},set:function(t){this.setPropertyValue("snapToSeries",t)&&(this._snapToDisposer&&this._snapToDisposer.dispose(),t&&(this._snapToDisposer=t.events.on("tooltipshownat",this.handleSnap,this,!1)))},enumerable:!0,configurable:!0}),e.prototype.handleSnap=function(){var t=this.snapToSeries,e=t.getTooltipX(),i=t.getTooltipY();this.xAxis&&this.xAxis.renderer.opposite&&(i-=this.pixelHeight),this.point={x:e,y:i},this.getPositions();var n=e,r=i;e-=this.pixelWidth,this.yAxis&&this.yAxis.renderer.opposite&&(e+=this.pixelWidth);var a=t.tooltip,o=a.animationDuration,s=a.animationEasing;t.baseAxis==t.xAxis&&t.yAxis.showTooltipAtPosition(this.yPosition),t.baseAxis==t.yAxis&&t.xAxis.showTooltipAtPosition(this.xPosition),this.lineX.animate([{property:"y",to:i}],o,s),this.lineY.animate([{property:"x",to:e}],o,s),this.xAxis||this.lineX.animate([{property:"x",to:n}],o,s),this.yAxis||this.lineY.animate([{property:"y",to:r}],o,s)},e.prototype.dispose=function(){this.hide(0),t.prototype.dispose.call(this)},e}(r.a);s.c.registeredClasses.XYCursor=y},grfs:function(t,e,i){var n=i("1wCr"),r=i("GtmK"),a=i("KSd4"),o=i("3weC");t.exports=n("Reflect","ownKeys")||function(t){var e=r.f(o(t)),i=a.f;return i?e.concat(i(t)):e}},gxUV:function(t,e,i){var n=i("3sMl"),r=i("EVp9"),a=i("Pm8L"),o=i("9XRO"),s=i("EErT"),l=i("JZRr"),u=i("t+NF"),h=Object.getOwnPropertyDescriptor;e.f=n?h:function(t,e){if(t=o(t),e=s(e,!0),u)try{return h(t,e)}catch(t){}if(l(t,e))return a(!r.f.call(t,e),t[e])}},"h+H5":function(t,e,i){var n=i("0sYB"),r=i("ibOM").entries;n({target:"Object",stat:!0},{entries:function(t){return r(t)}})},hD5A:function(t,e,i){"use strict";i.d(e,"b",function(){return o}),i.d(e,"c",function(){return s}),i.d(e,"d",function(){return l}),i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("hJ5i"),a=i("Mtpk"),o=function(){function t(t){this._disposed=!1,this._dispose=t}return t.prototype.isDisposed=function(){return this._disposed},t.prototype.dispose=function(){this._disposed||(this._disposed=!0,this._dispose())},t}(),s=function(t){function e(e){return t.call(this,function(){r.each(e,function(t){t.dispose()})})||this}return Object(n.c)(e,t),e}(o),l=function(t){function e(){var e=t.call(this,function(){a.hasValue(e._disposer)&&(e._disposer.dispose(),e._disposer=void 0)})||this;return e}return Object(n.c)(e,t),e.prototype.get=function(){return this._value},e.prototype.set=function(t,e){a.hasValue(this._disposer)&&this._disposer.dispose(),this._disposer=e,this._value=t},e.prototype.reset=function(){this.set(void 0,void 0)},e}(o),u=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e._counter=0,e}return Object(n.c)(e,t),e.prototype.increment=function(){var t=this;return++this._counter,new o(function(){--t._counter,0===t._counter&&t.dispose()})},e}(o)},hGwe:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.polyline=function(t){var e=l(t[0]),i={x:0,y:0},a=o.a.minPolylineStep;r.isNumber(a)||(a=.5);for(var s=0,u=t.length;s<u;s++){var h=t[s];n.getDistance(h,i)>a&&(e+=l(h),i=h)}return e},e.moveTo=s,e.lineTo=l,e.quadraticCurveTo=function(t,e){return" Q"+n.round(e.x,4)+","+n.round(e.y,4)+" "+n.round(t.x,4)+","+n.round(t.y,4)},e.cubicCurveTo=function(t,e,i){return" C"+n.round(e.x,4)+","+n.round(e.y,4)+" "+n.round(i.x,4)+","+n.round(i.y,4)+" "+n.round(t.x,4)+","+n.round(t.y,4)},e.closePath=u,e.arcTo=h,e.arc=function(t,e,i,a,o,u,p){if(0==e)return"";r.isNumber(a)||(a=0);if(0==i&&a<=0)return"";if(i<a){var d=i;i=a,a=d,r.isNumber(o)&&(o=o/a*i)}360==(e=n.min(e,360))&&(u=0,p=0);var f=t+e,g=n.sin(n.min(e,45)/2);o=r.isNumber(o)?o:i,u=u||0,p=r.isNumber(p)?p:u;var y=o/i*a,m=o/i*u,v=o/i*p;u=n.fitToRange(u,0,(i-a)/2),m=n.fitToRange(m,0,(o-y)/2),p=n.fitToRange(p,0,(i-a)/2),v=n.fitToRange(v,0,(o-y)/2),u=n.round(n.fitToRange(u,0,i*g),4),m=n.round(n.fitToRange(m,0,o*g),4),p=n.round(n.fitToRange(p,0,a*g),4),v=n.round(n.fitToRange(v,0,y*g),4);var b=Math.asin(u/i/2)*n.DEGREES*2,x=Math.asin(m/o/2)*n.DEGREES*2;a<p&&(a=p);y<v&&(y=v);var _=Math.asin(p/a/2)*n.DEGREES*2,P=Math.asin(v/y/2)*n.DEGREES*2;r.isNumber(_)||(_=0);r.isNumber(P)||(P=0);var w=t+e/2,O={x:n.round(n.cos(w)*a,4),y:n.sin(w)*y},T={x:n.cos(t)*(a+p),y:n.sin(t)*(y+v)},S={x:n.cos(t)*(i-u),y:n.sin(t)*(o-m)},C={x:n.cos(f)*(i-u),y:n.sin(f)*(o-m)},I={x:n.cos(f)*(a+p),y:n.sin(f)*(y+v)},k={x:n.cos(t+b)*i,y:n.sin(t+x)*o},D={x:n.cos(f-_)*a,y:n.sin(f-P)*y};p+=p*n.sin(_/2),v+=v*n.sin(P/2),_>(f-t)/2&&(D=O);var j="";360==e?j=s(S):(j=s(T),j+=l(S),j+=c(k,u,m,!0));j+=h(t+b,e-2*b,i,o),r.isNumber(a)&&0!=a?(360==e&&0==u?j+=s(I):(j+=c(C,u,m,!0),j+=l(I),j+=c(D,p,v,!0)),j+=h(f-_,-(e-2*_),a,y),(e<360||u>0)&&(j+=c(T,p,v,!0)),j+=l(T)):(j+=c(C,u,m,!0),e<360&&(j+=l(T)));return j},e.arcToPoint=c,e.rectangle=function(t,e,i,n){r.isNumber(i)||(i=0);r.isNumber(n)||(n=0);return s({x:i,y:n})+l({x:i+t,y:n})+l({x:i+t,y:n+e})+l({x:i,y:n+e})+" Z"},e.rectToPath=function(t,e){var i=",",n=" L";return e?"M"+t.x+i+t.y+n+t.x+i+(t.y+t.height)+n+(t.x+t.width)+i+(t.y+t.height)+n+(t.x+t.width)+i+t.y+n+t.x+i+t.y:"M"+t.x+i+t.y+n+(t.x+t.width)+i+t.y+n+(t.x+t.width)+i+(t.y+t.height)+n+t.x+i+(t.y+t.height)+n+t.x+i+t.y},e.pathToPoints=function(t,e){var i=Object(a.b)().add("path").node;if(i.setAttribute("d",t),i.getPointAtLength&&i.getTotalLength){for(var n=i.getTotalLength(),r=[],o=0;o<e;o++){var s=i.getPointAtLength(o/e*n);r.push({x:s.x,y:s.y})}return r}i.remove()},e.spiralPoints=function(t,e,i,a,o,s,l,u,h){r.isNumber(u)||(u=0);r.isNumber(u)||(h=u);var c=o+.01,p=u*n.RADIANS,d=[];for(;c<i+l;){var f=s;if(f/2>c&&(f=2*c),(p+=2*Math.asin(f/2/c))*n.DEGREES>h+(i-o)/l*360)break;var g=p*n.DEGREES,y={x:t+c*Math.cos(p),y:e+c*a/i*Math.sin(p)};d.push(y),c=o+g/360*l}return d.shift(),d},e.pointsToPath=function(t){if(!t||0==t.length)return"";var e=s(t[0]);if(t&&t.length>0)for(var i=1;i<t.length;i++)e+=l(t[i]);return e};var n=i("Gg2j"),r=i("Mtpk"),a=i("P7v+"),o=i("Q4nc");function s(t){return" M"+n.round(t.x,4)+","+n.round(t.y,4)+" "}function l(t){return" L"+n.round(t.x,4)+","+n.round(t.y,4)+" "}function u(){return" Z"}function h(t,e,i,a){if(0==e)return"";r.isNumber(a)||(a=i);var o="",s=",",u=Math.ceil(Math.abs(e)/180),h=1;e<0&&(h=0);var c=0,p=0,d=-n.cos(t)*i,f=-n.sin(t)*a;if(e<.5&&i>3e3){var g=t+e;return l({x:m=n.round(n.cos(g)*i,4),y:v=n.round(n.sin(g)*a,4)})}for(var y=0;y<u;y++){var m,v;g=t+e/u*(y+1);o+=" a"+i+s+a+s+0+s+0+s+h+s+(m=n.round(n.cos(g)*i+d-c,4))+s+(v=n.round(n.sin(g)*a+f-p,4)),c=m,p=v}return o}function c(t,e,i,r,a,o){if(0==e)return"";var s=",";return" A"+e+s+i+s+(o=o||0)+s+ +(a=Boolean(a))+s+ +(r=Boolean(r))+s+n.round(t.x,4)+s+n.round(t.y,4)}},hJ5i:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.indexOf=a,e.any=function(t,e){for(var i=t.length,n=0;n<i;++n)if(e(t[n]))return!0;return!1},e.map=function(t,e){for(var i=t.length,n=new Array(i),r=0;r<i;++r)n[r]=e(t[r],r);return n},e.each=function(t,e){for(var i=t.length,n=0;n<i;++n)e(t[n],n)},e.eachReverse=function(t,e){var i=t.length;for(;i--;)e(t[i],i)},e.eachContinue=function(t,e){for(var i=t.length,n=0;n<i&&e(t[n],n);++n);},e.shiftLeft=function(t,e){for(var i=t.length,n=e;n<i;++n)t[n-e]=t[n];t.length=i-e},e.last=function(t){var e=t.length;return e?t[e-1]:void 0},e.first=function(t){return t[0]},e.insert=o,e.setIndex=function(t,e,i){s(t,e),o(t,e,i)},e.pushAll=function(t,e){for(var i=e.length,n=0;n<i;++n)t.push(e[n])},e.remove=s,e.move=function(t,e,i){var n=a(t,e);-1!==n&&u(t,n);null==i?t.push(e):l(t,i,e)},e.add=function(t,e,i){r.isNumber(i)?0===i?t.unshift(e):t.splice(i,0,e):t.push(e)},e.replace=function(t,e,i){var n=t.indexOf(e);-1!==n&&t.splice(n,1);r.isNumber(i)?t.splice(i,0,e):t.push(e)},e.toArray=function(t){return Array.isArray(t)?t:[t]},e.has=function(t,e){return-1!==a(t,e)},e.copy=function(t){for(var e=t.length,i=new Array(e),n=0;n<e;++n)i[n]=t[n];return i},e.slice=function(t,e,i){void 0===i&&(i=t.length);for(var n=new Array(i-e),r=e;r<i;++r)n[r-e]=t[r];return n},e.insertIndex=l,e.removeIndex=u,e.getSortedIndex=function(t,e,i){var n=0,r=t.length,a=!1;for(;n<r;){var o=n+r>>1,s=e(i,t[o]);s<0?r=o:0===s?(a=!0,n=o+1):n=o+1}return{found:a,index:a?n-1:n}},e.findIndex=h,e.find=function(t,e){var i=h(t,e);if(-1!==i)return t[i]},e.shuffle=function(t){var e,i,n=t.length;for(;0!==n;)i=Math.floor(Math.random()*n),e=t[n-=1],t[n]=t[i],t[i]=e};var n=i("Gg2j"),r=i("Mtpk");function a(t,e){for(var i=t.length,n=0;n<i;++n)if(t[n]===e)return n;return-1}function o(t,e,i){i=n.fitToRange(i,0,t.length),t.splice(i,0,e)}function s(t,e){var i=!1,n=t.indexOf(e);if(-1!==n){i=!0,t.splice(n,1);for(var r=t.length;n<r;)t[n]===e?(t.splice(n,1),--r):++n}return i}function l(t,e,i){t.splice(e,0,i)}function u(t,e){t.splice(e,1)}function h(t,e){for(var i=t.length,n=0;n<i;++n)if(e(t[n],n))return n;return-1}},ha1R:function(t,e,i){var n=i("0sYB"),r=i("6aQQ"),a=i("Kg2n"),o=Object.isFrozen;n({target:"Object",stat:!0,forced:r(function(){o(1)})},{isFrozen:function(t){return!a(t)||!!o&&o(t)}})},hpNl:function(t,e,i){"use strict";i.d(e,"a",function(){return r});var n=i("8ZqG"),r=function(){function t(){}return t.opacity=1,t.strokeOpacity=1,t.strokeWidth=1,t.fillOpacity=1,t.fill=Object(n.c)("#000000"),t.stroke=Object(n.c)("#000000"),t.focusable=void 0,t.tabindex=0,t}()},hqo8:function(t,e,i){"use strict";var n=i("lnCe"),r=i("vfdp"),a=i("6aQQ");t.exports=n||!a(function(){var t=Math.random();__defineSetter__.call(null,t,function(){}),delete r[t]})},hvfb:function(t,e,i){var n,r,a=i("vfdp"),o=i("RjhM"),s=a.process,l=s&&s.versions,u=l&&l.v8;u?r=(n=u.split("."))[0]+n[1]:o&&(!(n=o.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=o.match(/Chrome\/(\d+)/))&&(r=n[1]),t.exports=r&&+r},hxI2:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.rgb=function(t,e){var i;a[t]?i=a[t]:"#"===t.charAt(0)?i=o(t):t.match(/^rgba?\(/)&&(i=s(t));i||(i={r:0,g:0,b:0,a:1});r.hasValue(e)&&(i.a=e);return i},e.hexToRgb=o,e.rgbaToRgb=s,e.rgbToHex=function(t){return"#"+l(t.r.toString(16))+l(t.g.toString(16))+l(t.b.toString(16))},e.rgbToRGBA=function(t){return r.hasValue(t.a)&&1!==t.a?"rgba("+t.r+","+t.g+","+t.b+","+t.a+")":"rgb("+t.r+","+t.g+","+t.b+")"},e.pad2=l,e.interpolate=function(t,e,i){return i=n.fitToRange(i,0,1),t?e?{r:t.r+Math.round((e.r-t.r)*i),g:t.g+Math.round((e.g-t.g)*i),b:t.b+Math.round((e.b-t.b)*i),a:(t.a||1)+Math.round(((e.a||1)-(t.a||1))*i)}:t:e||t},e.lighten=function(t,e){return t?{r:Math.max(0,Math.min(255,t.r+u(t.r,e))),g:Math.max(0,Math.min(255,t.g+u(t.g,e))),b:Math.max(0,Math.min(255,t.b+u(t.b,e))),a:t.a}:t},e.getLightnessStep=u,e.brighten=function(t,e){if(t){var i=Math.min(Math.max(t.r,t.g,t.b),230),n=u(i,e);return{r:Math.max(0,Math.min(255,Math.round(t.r+n))),g:Math.max(0,Math.min(255,Math.round(t.g+n))),b:Math.max(0,Math.min(255,Math.round(t.b+n))),a:t.a}}return t},e.getBrightnessStep=function(t,e){return Math.round(255*e)},e.saturate=function(t,e){if(null==t||1==e)return t;var i=c(t);return i.s=e,h(i)},e.hslToRgb=h,e.rgbToHsl=c,e.rgbToHsv=function(t){var e=t.r/255,i=t.g/255,n=t.b/255,r=Math.max(e,i,n),a=Math.min(e,i,n),o=0,s=0,l=r,u=r-a;if(s=0==r?0:u/r,r==a)o=0;else{switch(r){case e:o=(i-n)/u+(i<n?6:0);break;case i:o=(n-e)/u+2;break;case n:o=(e-i)/u+4}o/=6}return{h:o,s:s,v:l}},e.hsvToRgb=function(t){var e=0,i=0,n=0,r=t.h,a=t.s,o=t.v,s=Math.floor(6*r),l=6*r-s,u=o*(1-a),h=o*(1-l*a),c=o*(1-(1-l)*a);switch(s%6){case 0:e=o,i=c,n=u;break;case 1:e=h,i=o,n=u;break;case 2:e=u,i=o,n=c;break;case 3:e=u,i=h,n=o;break;case 4:e=c,i=u,n=o;break;case 5:e=o,i=u,n=h}return{r:Math.round(255*e),g:Math.round(255*i),b:Math.round(255*n)}},e.isLight=function(t){return(299*t.r+587*t.g+114*t.b)/1e3>=128};var n=i("Gg2j"),r=i("Mtpk"),a={aliceblue:{r:240,g:248,b:255},antiquewhite:{r:250,g:235,b:215},aqua:{r:0,g:255,b:255},aquamarine:{r:127,g:255,b:212},azure:{r:240,g:255,b:255},beige:{r:245,g:245,b:220},bisque:{r:255,g:228,b:196},black:{r:0,g:0,b:0},blanchedalmond:{r:255,g:235,b:205},blue:{r:0,g:0,b:255},blueviolet:{r:138,g:43,b:226},brown:{r:165,g:42,b:42},burlywood:{r:222,g:184,b:135},cadetblue:{r:95,g:158,b:160},chartreuse:{r:127,g:255,b:0},chocolate:{r:210,g:105,b:30},coral:{r:255,g:127,b:80},cornflowerblue:{r:100,g:149,b:237},cornsilk:{r:255,g:248,b:220},crimson:{r:220,g:20,b:60},cyan:{r:0,g:255,b:255},darkblue:{r:0,g:0,b:139},darkcyan:{r:0,g:139,b:139},darkgoldenrod:{r:184,g:134,b:11},darkgray:{r:169,g:169,b:169},darkgrey:{r:169,g:169,b:169},darkgreen:{r:0,g:100,b:0},darkkhaki:{r:189,g:183,b:107},darkmagenta:{r:139,g:0,b:139},darkolivegreen:{r:85,g:107,b:47},darkorange:{r:255,g:140,b:0},darkorchid:{r:153,g:50,b:204},darkred:{r:139,g:0,b:0},darksalmon:{r:233,g:150,b:122},darkseagreen:{r:143,g:188,b:143},darkslateblue:{r:72,g:61,b:139},darkslategray:{r:47,g:79,b:79},darkslategrey:{r:47,g:79,b:79},darkturquoise:{r:0,g:206,b:209},darkviolet:{r:148,g:0,b:211},deeppink:{r:255,g:20,b:147},deepskyblue:{r:0,g:191,b:255},dimgray:{r:105,g:105,b:105},dimgrey:{r:105,g:105,b:105},dodgerblue:{r:30,g:144,b:255},firebrick:{r:178,g:34,b:34},floralwhite:{r:255,g:250,b:240},forestgreen:{r:34,g:139,b:34},fuchsia:{r:255,g:0,b:255},gainsboro:{r:220,g:220,b:220},ghostwhite:{r:248,g:248,b:255},gold:{r:255,g:215,b:0},goldenrod:{r:218,g:165,b:32},gray:{r:128,g:128,b:128},grey:{r:128,g:128,b:128},green:{r:0,g:128,b:0},greenyellow:{r:173,g:255,b:47},honeydew:{r:240,g:255,b:240},hotpink:{r:255,g:105,b:180},indianred:{r:205,g:92,b:92},indigo:{r:75,g:0,b:130},ivory:{r:255,g:255,b:240},khaki:{r:240,g:230,b:140},lavender:{r:230,g:230,b:250},lavenderblush:{r:255,g:240,b:245},lawngreen:{r:124,g:252,b:0},lemonchiffon:{r:255,g:250,b:205},lightblue:{r:173,g:216,b:230},lightcoral:{r:240,g:128,b:128},lightcyan:{r:224,g:255,b:255},lightgoldenrodyellow:{r:250,g:250,b:210},lightgray:{r:211,g:211,b:211},lightgrey:{r:211,g:211,b:211},lightgreen:{r:144,g:238,b:144},lightpink:{r:255,g:182,b:193},lightsalmon:{r:255,g:160,b:122},lightseagreen:{r:32,g:178,b:170},lightskyblue:{r:135,g:206,b:250},lightslategray:{r:119,g:136,b:153},lightslategrey:{r:119,g:136,b:153},lightsteelblue:{r:176,g:196,b:222},lightyellow:{r:255,g:255,b:224},lime:{r:0,g:255,b:0},limegreen:{r:50,g:205,b:50},linen:{r:250,g:240,b:230},magenta:{r:255,g:0,b:255},maroon:{r:128,g:0,b:0},mediumaquamarine:{r:102,g:205,b:170},mediumblue:{r:0,g:0,b:205},mediumorchid:{r:186,g:85,b:211},mediumpurple:{r:147,g:112,b:219},mediumseagreen:{r:60,g:179,b:113},mediumslateblue:{r:123,g:104,b:238},mediumspringgreen:{r:0,g:250,b:154},mediumturquoise:{r:72,g:209,b:204},mediumvioletred:{r:199,g:21,b:133},midnightblue:{r:25,g:25,b:112},mintcream:{r:245,g:255,b:250},mistyrose:{r:255,g:228,b:225},moccasin:{r:255,g:228,b:181},navajowhite:{r:255,g:222,b:173},navy:{r:0,g:0,b:128},oldlace:{r:253,g:245,b:230},olive:{r:128,g:128,b:0},olivedrab:{r:107,g:142,b:35},orange:{r:255,g:165,b:0},orangered:{r:255,g:69,b:0},orchid:{r:218,g:112,b:214},palegoldenrod:{r:238,g:232,b:170},palegreen:{r:152,g:251,b:152},paleturquoise:{r:175,g:238,b:238},palevioletred:{r:219,g:112,b:147},papayawhip:{r:255,g:239,b:213},peachpuff:{r:255,g:218,b:185},peru:{r:205,g:133,b:63},pink:{r:255,g:192,b:203},plum:{r:221,g:160,b:221},powderblue:{r:176,g:224,b:230},purple:{r:128,g:0,b:128},rebeccapurple:{r:102,g:51,b:153},red:{r:255,g:0,b:0},rosybrown:{r:188,g:143,b:143},royalblue:{r:65,g:105,b:225},saddlebrown:{r:139,g:69,b:19},salmon:{r:250,g:128,b:114},sandybrown:{r:244,g:164,b:96},seagreen:{r:46,g:139,b:87},seashell:{r:255,g:245,b:238},sienna:{r:160,g:82,b:45},silver:{r:192,g:192,b:192},skyblue:{r:135,g:206,b:235},slateblue:{r:106,g:90,b:205},slategray:{r:112,g:128,b:144},slategrey:{r:112,g:128,b:144},snow:{r:255,g:250,b:250},springgreen:{r:0,g:255,b:127},steelblue:{r:70,g:130,b:180},tan:{r:210,g:180,b:140},teal:{r:0,g:128,b:128},thistle:{r:216,g:191,b:216},tomato:{r:255,g:99,b:71},turquoise:{r:64,g:224,b:208},violet:{r:238,g:130,b:238},wheat:{r:245,g:222,b:179},white:{r:255,g:255,b:255},whitesmoke:{r:245,g:245,b:245},yellow:{r:255,g:255,b:0},yellowgreen:{r:154,g:205,b:50}};function o(t){t=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(t,e,i,n){return e+e+i+i+n+n});var e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)}:void 0}function s(t){var e=(t=t.replace(/[ ]/g,"")).match(/^rgb\(([0-9]*),([0-9]*),([0-9]*)\)/i);if(e)e.push("1");else if(!(e=t.match(/^rgba\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\)/i)))return;return{r:parseInt(e[1]),g:parseInt(e[2]),b:parseInt(e[3]),a:parseFloat(e[4])}}function l(t){return 1==t.length?"0"+t:""+t}function u(t,e){var i=e>0?255-t:t;return Math.round(i*e)}function h(t){var e,i,n,r=t.h,a=t.s,o=t.l;if(0==a)e=i=n=o;else{var s=function(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+(e-t)*(2/3-i)*6:t},l=o<.5?o*(1+a):o+a-o*a,u=2*o-l;e=s(u,l,r+1/3),i=s(u,l,r),n=s(u,l,r-1/3)}return{r:Math.round(255*e),g:Math.round(255*i),b:Math.round(255*n)}}function c(t){var e=t.r/255,i=t.g/255,n=t.b/255,r=Math.max(e,i,n),a=Math.min(e,i,n),o=0,s=0,l=(r+a)/2;if(r===a)o=s=0;else{var u=r-a;switch(s=l>.5?u/(2-r-a):u/(r+a),r){case e:o=(i-n)/u+(i<n?6:0);break;case i:o=(n-e)/u+2;break;case n:o=(e-i)/u+4}o/=6}return{h:o,s:s,l:l}}},hznD:function(t,e,i){"use strict";var n=i("oRlD"),r=i("5ou3");t.exports=n?{}.toString:function(){return"[object "+r(this)+"]"}},ibOM:function(t,e,i){var n=i("3sMl"),r=i("kcMx"),a=i("9XRO"),o=i("EVp9").f,s=function(t){return function(e){for(var i,s=a(e),l=r(s),u=l.length,h=0,c=[];u>h;)i=l[h++],n&&!o.call(s,i)||c.push(t?[i,s[i]]:s[i]);return c}};t.exports={entries:s(!0),values:s(!1)}},ilXn:function(t,e,i){"use strict";var n=/[^\0-\u007E]/,r=/[.\u3002\uFF0E\uFF61]/g,a="Overflow: input needs wider integers to process",o=Math.floor,s=String.fromCharCode,l=function(t){return t+22+75*(t<26)},u=function(t,e,i){var n=0;for(t=i?o(t/700):t>>1,t+=o(t/e);t>455;n+=36)t=o(t/35);return o(n+36*t/(t+38))},h=function(t){var e,i,n=[],r=(t=function(t){for(var e=[],i=0,n=t.length;i<n;){var r=t.charCodeAt(i++);if(r>=55296&&r<=56319&&i<n){var a=t.charCodeAt(i++);56320==(64512&a)?e.push(((1023&r)<<10)+(1023&a)+65536):(e.push(r),i--)}else e.push(r)}return e}(t)).length,h=128,c=0,p=72;for(e=0;e<t.length;e++)(i=t[e])<128&&n.push(s(i));var d=n.length,f=d;for(d&&n.push("-");f<r;){var g=2147483647;for(e=0;e<t.length;e++)(i=t[e])>=h&&i<g&&(g=i);var y=f+1;if(g-h>o((2147483647-c)/y))throw RangeError(a);for(c+=(g-h)*y,h=g,e=0;e<t.length;e++){if((i=t[e])<h&&++c>2147483647)throw RangeError(a);if(i==h){for(var m=c,v=36;;v+=36){var b=v<=p?1:v>=p+26?26:v-p;if(m<b)break;var x=m-b,_=36-b;n.push(s(l(b+x%_))),m=o(x/_)}n.push(s(l(m))),p=u(c,y,f==d),c=0,++f}}++c,++h}return n.join("")};t.exports=function(t){var e,i,a=[],o=t.toLowerCase().replace(r,".").split(".");for(e=0;e<o.length;e++)i=o[e],a.push(n.test(i)?"xn--"+h(i):i);return a.join(".")}},"jC/1":function(t,e,i){"use strict";var n=i("0sYB"),r=i("HnbP"),a=i("7X7h"),o=i("6aQQ"),s=i("xlUI"),l=[],u=l.sort,h=o(function(){l.sort(void 0)}),c=o(function(){l.sort(null)}),p=s("sort");n({target:"Array",proto:!0,forced:h||!c||!p},{sort:function(t){return void 0===t?u.call(a(this)):u.call(a(this),r(t))}})},jFX2:function(t,e,i){"use strict";var n=i("0sYB"),r=i("F/ei"),a=i("swFJ"),o=i("tHyI"),s=i("HnbP"),l=i("3weC"),u=i("2xmP"),h=i("AzDz"),c=i("/arR"),p=i("k2B3"),d=i("6aQQ"),f=i("KslR"),g=i("Nfo5"),y=i("L0in"),m=i("SqFF"),v=i("lnCe"),b=f("matchAll"),x=m.set,_=m.getterFor("RegExp String Iterator"),P=RegExp.prototype,w=P.exec,O="".matchAll,T=!!O&&!d(function(){"a".matchAll(/./)}),S=r(function(t,e,i,n){x(this,{type:"RegExp String Iterator",regexp:t,string:e,global:i,unicode:n,done:!1})},"RegExp String",function(){var t=_(this);if(t.done)return{value:void 0,done:!0};var e=t.regexp,i=t.string,n=function(t,e){var i,n=t.exec;if("function"==typeof n){if("object"!=typeof(i=n.call(t,e)))throw TypeError("Incorrect exec result");return i}return w.call(t,e)}(e,i);return null===n?{value:void 0,done:t.done=!0}:t.global?(""==String(n[0])&&(e.lastIndex=y(i,o(e.lastIndex),t.unicode)),{value:n,done:!1}):(t.done=!0,{value:n,done:!1})}),C=function(t){var e,i,n,r,a,s,u=l(this),h=String(t);return e=g(u,RegExp),void 0===(i=u.flags)&&u instanceof RegExp&&!("flags"in P)&&(i=c.call(u)),n=void 0===i?"":String(i),r=new e(e===RegExp?u.source:u,n),a=!!~n.indexOf("g"),s=!!~n.indexOf("u"),r.lastIndex=o(u.lastIndex),new S(r,h,a,s)};n({target:"String",proto:!0,forced:T},{matchAll:function(t){var e,i,n,r=a(this);if(null!=t){if(h(t)&&!~String(a("flags"in P?t.flags:c.call(t))).indexOf("g"))throw TypeError("`.matchAll` does not allow non-global regexes");if(T)return O.apply(r,arguments);if(void 0===(i=t[b])&&v&&"RegExp"==u(t)&&(i=C),null!=i)return s(i).call(t,r)}else if(T)return O.apply(r,arguments);return e=String(r),n=new RegExp(t,"g"),v?C.call(n,e):n[b](e)}}),v||b in P||p(P,b,C)},jViO:function(t,e,i){var n=i("0sYB"),r=i("1wCr"),a=i("HnbP"),o=i("3weC"),s=i("6aQQ"),l=r("Reflect","apply"),u=Function.apply;n({target:"Reflect",stat:!0,forced:!s(function(){l(function(){})})},{apply:function(t,e,i){return a(t),o(i),l?l(t,e,i):u.call(t,e,i)}})},jfaP:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("Vs7R"),a=i("8ZqG"),o=i("aCit"),s=i("hGwe"),l=i("Gg2j"),u=function(t){function e(){var e=t.call(this)||this;return e._distance=0,e.className="Polyline",e.element=e.paper.add("path"),e.shapeRendering="auto",e.fill=Object(a.c)(),e.strokeOpacity=1,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.makePath=function(){this._distance=0;var t=this.segments;if(t&&t.length>0){for(var e="",i=0,n=t.length;i<n;i++){var r=t[i];if(r.length>0){e+=s.moveTo(r[0]);for(var a=1;a<r.length;a++){var o=r[a];e+=s.lineTo(o),this._distance+=l.getDistance(r[a-1],o)}}}this.path=e}this._realSegments=t},Object.defineProperty(e.prototype,"segments",{get:function(){return this.getPropertyValue("segments")},set:function(t){this.setPropertyValue("segments",t),this.makePath()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"distance",{get:function(){return this._distance},enumerable:!0,configurable:!0}),e.prototype.positionToPoint=function(t){var e=0;t<0&&(t=Math.abs(t),e=180);var i=this._realSegments;if(i){for(var n=this.distance,r=0,a=0,o=0,s=void 0,u=void 0,h=0;h<i.length;h++){var c=i[h];if(c.length>1){for(var p=1;p<c.length;p++)if(s=c[p-1],u=c[p],a=r/n,o=(r+=l.getDistance(s,u))/n,a<=t&&o>t){h=i.length;break}}else 1==c.length&&(s=c[0],u=c[0],a=0,o=1)}if(s&&u){var d=(t-a)/(o-a),f=l.getMidPoint(s,u,d);return{x:f.x,y:f.y,angle:e+l.getAngle(s,u)}}}return{x:0,y:0,angle:0}},Object.defineProperty(e.prototype,"realSegments",{get:function(){return this._realSegments},enumerable:!0,configurable:!0}),e}(r.a);o.c.registeredClasses.Polyline=u},jgaU:function(t,e,i){i("gaw2"),i("Hp8y"),i("/NC3"),i("M44V"),i("ybeA"),i("w2pQ"),i("RBX2"),i("Ecdy");var n=i("lCww");t.exports=n},jmmR:function(t,e,i){var n=i("0sYB"),r=i("7X7h"),a=i("kcMx");n({target:"Object",stat:!0,forced:i("6aQQ")(function(){a(1)})},{keys:function(t){return a(r(t))}})},jnLg:function(t,e,i){var n=i("swFJ"),r="["+i("DUr5")+"]",a=RegExp("^"+r+r+"*"),o=RegExp(r+r+"*$"),s=function(t){return function(e){var i=String(n(e));return 1&t&&(i=i.replace(a,"")),2&t&&(i=i.replace(o,"")),i}};t.exports={start:s(1),end:s(2),trim:s(3)}},jqnv:function(t,e,i){var n=i("0sYB"),r=i("3weC"),a=i("ucqQ"),o=i("KJuV");o&&n({target:"Reflect",stat:!0},{setPrototypeOf:function(t,e){r(t),a(e);try{return o(t,e),!0}catch(t){return!1}}})},jqyf:function(t,e){t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},k2B3:function(t,e,i){var n=i("3sMl"),r=i("8+rI"),a=i("Pm8L");t.exports=n?function(t,e,i){return r.f(t,e,a(1,i))}:function(t,e,i){return t[e]=i,t}},k6kv:function(t,e,i){"use strict";i.d(e,"a",function(){return g});var n=i("m4/l"),r=i("Meme"),a=i("5xph"),o=i("ND2/"),s=i("w4m0"),l=i("aCit"),u=i("tjMS"),h=i("Gg2j"),c=i("hGwe"),p=i("v9UT"),d=i("Mtpk"),f=i("TGuK"),g=function(t){function e(){var e=t.call(this)||this;return e.className="AxisRendererX",e.minGridDistance=120,e.opposite=!1,e.rotation=0,e.width=Object(u.c)(100),e.labels.template.horizontalCenter="middle",e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.setAxis=function(e){t.prototype.setAxis.call(this,e),e.layout="vertical"},e.prototype.updateGridContainer=function(){var t=this.axis;if(t){var e=this.gridContainer;e.x=t.pixelX,e.width=t.axisLength}},e.prototype.processRenderer=function(){t.prototype.processRenderer.call(this);var e=this.axis;if(e){e.width instanceof u.a||(e.width=Object(u.c)(100)),p.used(this.line);var i=e.title;i.rotation=0,i.align="center",this.opposite?(this.line.toFront(),i.toBack()):(i.toFront(),this.toBack(),this.line.toBack())}},e.prototype.updateTooltip=function(){if(this.axis){var t=this.line.pixelX,e=this.line.pixelY,i=this.axisLength,n=1e3;this.opposite?this.inside||(e=-1e3,n=1e3):this.inside&&(e=-1e3,n=1e3),this.axis.updateTooltip("vertical",{x:t,y:e,width:i,height:n})}},e.prototype.updateLabelElement=function(t,e,i,n){d.hasValue(n)||(n=t.location),e+=(i-e)*n;var r=this.positionToPoint(e);t.isMeasured=!t.inside;var a,o=0,s=this.gridContainer.maxHeight;this.opposite?(t.inside?(a="top","bottom"==t.valign&&(o=s,a="bottom"),"middle"==t.valign&&(o=s/2,a="middle")):a="bottom",r.y=o):(t.inside?(a="bottom","top"==t.valign&&(o=-s,a="top"),"middle"==t.valign&&(o=-s/2,a="middle")):a="top",r.y+=o),0==t.rotation&&(t.verticalCenter=a),this.positionItem(t,r),this.toggleVisibility(t,e,this.minLabelPosition,this.maxLabelPosition)},Object.defineProperty(e.prototype,"axisLength",{get:function(){var t=this.axis;return t.measuredWidth-t.pixelPaddingRight-t.pixelPaddingLeft||0},enumerable:!0,configurable:!0}),e.prototype.positionToPoint=function(t,e){return{x:this.positionToCoordinate(t),y:0}},e.prototype.pointToPosition=function(t){return this.coordinateToPosition(t.x,t.y)},e.prototype.getPositionRangePath=function(t,e){var i=h.fitToRange(this.positionToCoordinate(t),0,this.axisLength),n=h.fitToRange(this.positionToCoordinate(e),0,this.axisLength),r=Math.abs(n-i),a=this.getHeight(),o=Math.min(i,n);return c.rectToPath({x:o,y:0,width:r,height:a},!0)},e.prototype.updateBreakElement=function(e){t.prototype.updateBreakElement.call(this,e);var i=e.startLine,n=e.endLine,r=e.fillShape,a=e.startPoint,o=e.endPoint,s=e.pixelMarginLeft,l=this.getHeight()-e.pixelMarginTop-e.pixelMarginBottom;a.x=h.fitToRange(a.x,-1,this.axisLength+1),o.x=h.fitToRange(o.x,-1,this.axisLength+1),a.x==o.x&&(a.x<0||a.x>this.axisLength)?e.fillShape.__disabled=!0:e.fillShape.__disabled=!1,i.y=s,i.width=0,i.height=l,n.y=s,n.width=0,n.height=l,r.height=l,r.width=Math.abs(o.x-a.x),r.y=s,r.x=a.x},e.prototype.updateGridElement=function(t,e,i){e+=(i-e)*t.location;var n=this.positionToPoint(e);t.path=c.moveTo({x:0,y:0})+c.lineTo({x:0,y:this.getHeight()}),this.positionItem(t,n),this.toggleVisibility(t,e,0,1)},e.prototype.updateTickElement=function(t,e,i){e+=(i-e)*t.location;var n=this.positionToPoint(e),r=t.length;n.y=p.spritePointToSprite({x:0,y:this.line.pixelY},this.line.parent,this.gridContainer).y,this.opposite?r*=t.inside?1:-1:r*=t.inside?-1:1,t.path=c.moveTo({x:0,y:0})+c.lineTo({x:0,y:r}),this.positionItem(t,n),this.toggleVisibility(t,e,0,1)},e.prototype.updateAxisLine=function(){this.line.path=c.moveTo({x:0,y:0})+c.lineTo({x:this.axisLength,y:0})},e.prototype.updateBaseGridElement=function(){t.prototype.updateBaseGridElement.call(this);var e=this.axis,i=this.getHeight(),n=this.axisLength,r=this.baseGrid,a=e.basePoint.x;if(a<-.2||a>n+.2)r.hide(0);else{var o=p.spritePointToSprite({x:0,y:0},this.gridContainer,r.parent).y;r.path=c.moveTo({x:0,y:0})+c.lineTo({x:0,y:i}),r.moveTo({x:a,y:o}),r.show(0)}},e.prototype.createBreakSprites=function(t){t.startLine=new o.a,t.endLine=new o.a;var e=new s.a;e.setWavedSides(!1,!0,!1,!0),t.fillShape=e},e.prototype.toAxisPosition=function(t){var e=t,i=this.axis;if(i){var n=i.relativePositionSprite,r=i.pixelX;if(n?r=p.spritePointToSprite({x:this.pixelX,y:0},this.parent,n).x:n=i.parent,n)return(e-r/n.innerWidth)/(i.axisLength/n.innerWidth)}return t},e.prototype.updateBullet=function(t,e,i){var n=.5;t instanceof a.a&&(n=t.location),e+=(i-e)*n;var r=this.positionToPoint(e);r.y=p.spritePointToSprite({x:0,y:this.line.pixelY},this.line.parent,this.gridContainer).y,this.positionItem(t,r),this.toggleVisibility(t,e,0,1)},e}(r.a);l.c.registeredClasses.AxisRendererX=g,f.c.push({relevant:f.b.heightXS,state:function(t,e){if(t instanceof g){var i=t.states.create(e);return i.properties.inside=!0,i.properties.maxLabelPosition=.9,i.properties.minLabelPosition=.1,i}return null}}),f.c.push({relevant:f.b.heightXXS,state:function(t,e){if(t instanceof g){var i=t.states.create(e);return i.properties.disabled=!0,i}return null}})},kHz4:function(t,e,i){"use strict";var n=i("0sYB"),r=i("HnbP"),a=i("TQpL"),o=i("AYiJ"),s=i("L4xm");n({target:"Promise",stat:!0},{allSettled:function(t){var e=this,i=a.f(e),n=i.resolve,l=i.reject,u=o(function(){var i=r(e.resolve),a=[],o=0,l=1;s(t,function(t){var r=o++,s=!1;a.push(void 0),l++,i.call(e,t).then(function(t){s||(s=!0,a[r]={status:"fulfilled",value:t},--l||n(a))},function(t){s||(s=!0,a[r]={status:"rejected",reason:t},--l||n(a))})}),--l||n(a)});return u.error&&l(u.value),i.promise}})},kQxV:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("+qIf"),a=i("o0Lc"),o=i("hD5A"),s=i("v9UT"),l=i("Qkdp"),u=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e._interactionEvents=new r.a,e}return Object(n.c)(e,t),e.prototype._dispatchSpriteEvent=function(t){if(!this.target.disabled&&!this.target.isTemplate&&this.target.events.isEnabled(t.type)){var e=l.merge(t,{target:this.target});this.target.events.dispatchImmediately(e.type,e)}},e.prototype._dispatchSpritePointEvent=function(t){if(!this.target.disabled&&!this.target.isTemplate&&this.target.events.isEnabled(t.type)){var e=l.merge(t,{target:this.target,spritePoint:s.documentPointToSprite(t.point,this.target),svgPoint:this.target.getSvgPoint(t.point)});this.target.events.dispatchImmediately(e.type,e)}},e.prototype._addInteractionObjectEvent=function(t,e,i,n){var r=this;return this._interactionEvents.insertKeyIfEmpty(t,function(){var a=r.target.interactions.events.on(t,e,i,n);return new o.a(function(){r._interactionEvents.removeKey(t),a.dispose()})}).increment()},e.prototype._on=function(e,i,n,r,a,s){var l=t.prototype._on.call(this,e,i,n,r,a,s),u=[l.disposer];switch(i){case"hit":case"track":case"doublehit":case"wheel":case"wheelup":case"wheeldown":case"wheelleft":case"wheelright":u.push(this._addInteractionObjectEvent(i,this._dispatchSpritePointEvent,this,a));break;case"rightclick":case"down":case"up":case"drag":case"dragged":case"dragstart":case"dragstop":case"over":case"out":case"swipe":case"swipeleft":case"swiperight":case"resize":case"focus":case"blur":case"toggled":u.push(this._addInteractionObjectEvent(i,this._dispatchSpriteEvent,this,a))}switch(i){case"hit":case"doublehit":case"rightclick":case"down":case"up":this.target.clickable=!0;break;case"toggled":this.target.togglable=!0;break;case"drag":case"dragstart":case"dragstop":this.target.draggable=!0;break;case"track":this.target.trackable=!0;break;case"resize":this.target.resizable=!0;break;case"swipe":case"swipeleft":case"swiperight":this.target.swipeable=!0;break;case"wheel":case"wheelup":case"wheeldown":case"wheelleft":case"wheelright":this.target.wheelable=!0;break;case"over":this.target.hoverable=!0;case"out":this.target.hoverable=!0;break;case"focus":case"blur":this.target.focusable=!0}return l.disposer=new o.c(u),l},e}(a.b)},"kZk/":function(t,e,i){"use strict";var n=i("0sYB"),r=i("jnLg").trim;n({target:"String",proto:!0,forced:i("rCh7")("trim")},{trim:function(){return r(this)}})},kcMx:function(t,e,i){var n=i("3pky"),r=i("XhXf");t.exports=Object.keys||function(t){return n(t,r)}},keeN:function(t,e,i){i("eygo")("Int8",function(t){return function(e,i,n){return t(this,e,i,n)}})},kwkr:function(t,e,i){var n=i("0sYB"),r=i("uPlY");n({target:"Date",proto:!0,forced:Date.prototype.toISOString!==r},{toISOString:r})},lCww:function(t,e,i){var n=i("vfdp");t.exports=n},lL3t:function(t,e,i){"use strict";var n=i("0sYB"),r=i("X/sl").some,a=i("xlUI"),o=i("J+FZ"),s=a("some"),l=o("some");n({target:"Array",proto:!0,forced:!s||!l},{some:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},lOhE:function(t,e,i){var n=i("0sYB"),r=Math.log,a=Math.LOG10E;n({target:"Math",stat:!0},{log10:function(t){return r(t)*a}})},lPoY:function(t,e,i){"use strict";var n=i("0sYB"),r=i("ojxk").indexOf,a=i("xlUI"),o=i("J+FZ"),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,u=a("indexOf"),h=o("indexOf",{ACCESSORS:!0,1:0});n({target:"Array",proto:!0,forced:l||!u||!h},{indexOf:function(t){return l?s.apply(this,arguments)||0:r(this,t,arguments.length>1?arguments[1]:void 0)}})},leaB:function(t,e,i){var n=i("6aQQ"),r=i("KslR"),a=i("lnCe"),o=r("iterator");t.exports=!n(function(){var t=new URL("b?a=1&b=2&c=3","http://a"),e=t.searchParams,i="";return t.pathname="c%20d",e.forEach(function(t,n){e.delete("b"),i+=n+t}),a&&!t.toJSON||!e.sort||"http://a/c%20d?a=1&c=3"!==t.href||"3"!==e.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!e[o]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://тест").host||"#%D0%B1"!==new URL("http://a#б").hash||"a1c3"!==i||"x"!==new URL("http://x",void 0).host})},lkeQ:function(t,e,i){"use strict";var n=i("vfdp"),r=i("UseD"),a=i("yBTm"),o=i("KslR")("iterator"),s=n.Uint8Array,l=a.values,u=a.keys,h=a.entries,c=r.aTypedArray,p=r.exportTypedArrayMethod,d=s&&s.prototype[o],f=!!d&&("values"==d.name||void 0==d.name),g=function(){return l.call(c(this))};p("entries",function(){return h.call(c(this))}),p("keys",function(){return u.call(c(this))}),p("values",g,!f),p(o,g,!f)},lm74:function(t,e,i){"use strict";var n=i("0sYB"),r=i("o3G/"),a=[].reverse,o=[1,2];n({target:"Array",proto:!0,forced:String(o)===String(o.reverse())},{reverse:function(){return r(this)&&(this.length=this.length),a.call(this)}})},lnCe:function(t,e){t.exports=!1},lt6Q:function(t,e){t.exports={}},lzhD:function(t,e,i){i("eygo")("Uint32",function(t){return function(e,i,n){return t(this,e,i,n)}})},"m4/l":function(t,e,i){"use strict";e.c=function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},i.d(e,"a",function(){return r}),e.b=function(t,e,i,n){return new(i||(i=Promise))(function(r,a){function o(t){try{l(n.next(t))}catch(t){a(t)}}function s(t){try{l(n.throw(t))}catch(t){a(t)}}function l(t){t.done?r(t.value):new i(function(e){e(t.value)}).then(o,s)}l((n=n.apply(t,e||[])).next())})},e.d=function(t,e){var i,n,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(i)throw new TypeError("Generator is already executing.");for(;o;)try{if(i=1,n&&(r=2&a[0]?n.return:a[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,a[1])).done)return r;switch(n=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,n=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=(r=o.trys).length>0&&r[r.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],n=0}finally{i=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},e.g=a,e.e=o,e.f=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(o(arguments[e]));return t};var n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)};var r=function(){return(r=Object.assign||function(t){for(var e,i=1,n=arguments.length;i<n;i++)for(var r in e=arguments[i])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};function a(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}}function o(t,e){var i="function"==typeof Symbol&&t[Symbol.iterator];if(!i)return t;var n,r,a=i.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(n=a.next()).done;)o.push(n.value)}catch(t){r={error:t}}finally{try{n&&!n.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}return o}},"mF5+":function(t,e,i){i("Vwc7"),i("Ui9R"),i("VlLm"),i("R3j0"),i("zNr0"),i("uAB6"),i("t/IY"),i("eK2B"),i("ORGY"),i("06/b"),i("ywCi"),i("WAWz"),i("1Er2"),i("ruXs"),i("fjAw"),i("16a9"),i("bUwg"),i("vIej"),i("w+oS"),i("h+H5"),i("Hfxi"),i("S+7J"),i("LoW2"),i("g3YV"),i("abrF"),i("sB9f"),i("ZYec"),i("e71F"),i("ha1R"),i("wgyV"),i("jmmR"),i("YcPX"),i("GzrW"),i("EyBv"),i("dzqq"),i("ywzu"),i("/fwt"),i("aSLB"),i("s4go"),i("NI+5"),i("TskY"),i("DDWt"),i("09Lt"),i("ntrI"),i("5tyj"),i("xbKe"),i("2MCn"),i("xv7a"),i("JezW"),i("LPN9"),i("tCdX"),i("6Ah2"),i("ffjw"),i("onIP"),i("5hgO"),i("NKcy"),i("8xQt"),i("nK49"),i("lPoY"),i("+Pwd"),i("MS5+"),i("Q0ab"),i("FL8s"),i("cXJ+"),i("lm74"),i("Jdjl"),i("lL3t"),i("jC/1"),i("TIsG"),i("KvVN"),i("FZ9I"),i("M1hx"),i("yBTm"),i("oxU5"),i("YWS7"),i("+APs"),i("wLyq"),i("1t1Z"),i("FE89"),i("jFX2"),i("Ibl2"),i("3XS/"),i("LV//"),i("3Z2E"),i("dAGi"),i("OhoW"),i("flUP"),i("kZk/"),i("RIy+"),i("sgPD"),i("sSOU"),i("XaED"),i("NWlt"),i("PGhV"),i("XUj0"),i("Djm3"),i("dlbc"),i("5FpK"),i("u5pl"),i("FBxm"),i("Y8ws"),i("Xroj"),i("BKHV"),i("cSfM"),i("2gbO"),i("1M4z"),i("U+Re"),i("TqDQ"),i("Gkqv"),i("8Cf/"),i("DMUu"),i("0KD/"),i("3mR7"),i("zYbq"),i("yv8f"),i("HyBf"),i("sVTF"),i("XDqO"),i("Uf/F"),i("5rWR"),i("P+4d"),i("dEJP"),i("onRi"),i("mSSX"),i("QwL+"),i("eKg1"),i("ocaP"),i("bZFJ"),i("pkYH"),i("QQDG"),i("qcEY"),i("+uwN"),i("oe0p"),i("Ca8x"),i("lOhE"),i("zQLg"),i("02tF"),i("xLUE"),i("L7fL"),i("Qj4T"),i("NR9A"),i("G83T"),i("pNDo"),i("2K9G"),i("kwkr"),i("OMnz"),i("ob/C"),i("57vZ"),i("TM0y"),i("MC1b"),i("kHz4"),i("wGwV"),i("RlUG"),i("IbQD"),i("vi/P"),i("9bPn"),i("DUzp"),i("2ih1"),i("Oz+B"),i("0aVp"),i("keeN"),i("tqfd"),i("9PYb"),i("sEiD"),i("mukW"),i("oq5N"),i("lzhD"),i("DgVf"),i("xtHw"),i("wfEi"),i("36nV"),i("Fhpb"),i("PoRT"),i("KWTK"),i("tEse"),i("wyAw"),i("Gmkj"),i("/XmW"),i("KWPb"),i("+Z4/"),i("lkeQ"),i("ZjxQ"),i("fluH"),i("D3TA"),i("IN7q"),i("Ygeo"),i("fG/y"),i("QgOz"),i("7gIX"),i("1ayE"),i("32Y2"),i("tg9j"),i("cBFz"),i("oa9N"),i("jViO"),i("f3Fu"),i("9lsj"),i("/SU0"),i("J+05"),i("1dhw"),i("olmY"),i("XDyS"),i("1E9r"),i("ZKUO"),i("eKCf"),i("9HTT"),i("jqnv");var n=i("lCww");t.exports=n},mIpt:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("7XB+"),r=i("v9UT"),a=i("Mtpk"),o=function(){function t(){}return t.prototype.parse=function(t){return[]},Object.defineProperty(t.prototype,"parsableNumbers",{get:function(){return this.options.numberFields&&this.options.numberFields.length>0},enumerable:!0,configurable:!0}),t.prototype.maybeToNumber=function(t,e){return-1!==this.options.numberFields.indexOf(t)?r.anyToNumber(e):e},Object.defineProperty(t.prototype,"parsableDates",{get:function(){return this.options.dateFields&&this.options.dateFields.length>0},enumerable:!0,configurable:!0}),t.prototype.maybeToDate=function(t,e){return-1!==this.options.dateFields.indexOf(t)?this.options.dateFormatter.parse(e,this.dateFormat):e},t.prototype.maybeToEmpty=function(t){return a.hasValue(t)&&""!=t||!a.hasValue(this.options.emptyAs)?t:this.options.emptyAs},Object.defineProperty(t.prototype,"dateFormatter",{get:function(){return this.options.dateFormatter||(this.options.dateFormatter=new n.a,this.options.dateFormat&&(this.options.dateFormat=this.options.dateFormat)),this.options.dateFormatter},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dateFormat",{get:function(){return this.options.dateFormat||this.dateFormatter.inputDateFormat},enumerable:!0,configurable:!0}),t}()},mSSX:function(t,e,i){"use strict";var n=i("0sYB"),r=i("6aQQ"),a=i("4BZe"),o=1..toPrecision;n({target:"Number",proto:!0,forced:r(function(){return"1"!==o.call(1,void 0)})||!r(function(){o.call({})})},{toPrecision:function(t){return void 0===t?o.call(a(this)):o.call(a(this),t)}})},mtbW:function(t,e,i){"use strict";var n=i("vfdp"),r=i("3sMl"),a=i("jqyf"),o=i("k2B3"),s=i("/vWR"),l=i("6aQQ"),u=i("L56b"),h=i("exNg"),c=i("tHyI"),p=i("E+A3"),d=i("MfFr"),f=i("Ox5T"),g=i("KJuV"),y=i("GtmK").f,m=i("8+rI").f,v=i("vjgd"),b=i("NRfM"),x=i("SqFF"),_=x.get,P=x.set,w=n.ArrayBuffer,O=w,T=n.DataView,S=T&&T.prototype,C=Object.prototype,I=n.RangeError,k=d.pack,D=d.unpack,j=function(t){return[255&t]},V=function(t){return[255&t,t>>8&255]},A=function(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]},M=function(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]},F=function(t){return k(t,23,4)},E=function(t){return k(t,52,8)},R=function(t,e){m(t.prototype,e,{get:function(){return _(this)[e]}})},N=function(t,e,i,n){var r=p(i),a=_(t);if(r+e>a.byteLength)throw I("Wrong index");var o=_(a.buffer).bytes,s=r+a.byteOffset,l=o.slice(s,s+e);return n?l:l.reverse()},L=function(t,e,i,n,r,a){var o=p(i),s=_(t);if(o+e>s.byteLength)throw I("Wrong index");for(var l=_(s.buffer).bytes,u=o+s.byteOffset,h=n(+r),c=0;c<e;c++)l[u+c]=h[a?c:e-c-1]};if(a){if(!l(function(){w(1)})||!l(function(){new w(-1)})||l(function(){return new w,new w(1.5),new w(NaN),"ArrayBuffer"!=w.name})){for(var B,U=(O=function(t){return u(this,O),new w(p(t))}).prototype=w.prototype,W=y(w),Y=0;W.length>Y;)(B=W[Y++])in O||o(O,B,w[B]);U.constructor=O}g&&f(S)!==C&&g(S,C);var H=new T(new O(2)),z=S.setInt8;H.setInt8(0,2147483648),H.setInt8(1,2147483649),!H.getInt8(0)&&H.getInt8(1)||s(S,{setInt8:function(t,e){z.call(this,t,e<<24>>24)},setUint8:function(t,e){z.call(this,t,e<<24>>24)}},{unsafe:!0})}else O=function(t){u(this,O,"ArrayBuffer");var e=p(t);P(this,{bytes:v.call(new Array(e),0),byteLength:e}),r||(this.byteLength=e)},T=function(t,e,i){u(this,T,"DataView"),u(t,O,"DataView");var n=_(t).byteLength,a=h(e);if(a<0||a>n)throw I("Wrong offset");if(a+(i=void 0===i?n-a:c(i))>n)throw I("Wrong length");P(this,{buffer:t,byteLength:i,byteOffset:a}),r||(this.buffer=t,this.byteLength=i,this.byteOffset=a)},r&&(R(O,"byteLength"),R(T,"buffer"),R(T,"byteLength"),R(T,"byteOffset")),s(T.prototype,{getInt8:function(t){return N(this,1,t)[0]<<24>>24},getUint8:function(t){return N(this,1,t)[0]},getInt16:function(t){var e=N(this,2,t,arguments.length>1?arguments[1]:void 0);return(e[1]<<8|e[0])<<16>>16},getUint16:function(t){var e=N(this,2,t,arguments.length>1?arguments[1]:void 0);return e[1]<<8|e[0]},getInt32:function(t){return M(N(this,4,t,arguments.length>1?arguments[1]:void 0))},getUint32:function(t){return M(N(this,4,t,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(t){return D(N(this,4,t,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(t){return D(N(this,8,t,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(t,e){L(this,1,t,j,e)},setUint8:function(t,e){L(this,1,t,j,e)},setInt16:function(t,e){L(this,2,t,V,e,arguments.length>2?arguments[2]:void 0)},setUint16:function(t,e){L(this,2,t,V,e,arguments.length>2?arguments[2]:void 0)},setInt32:function(t,e){L(this,4,t,A,e,arguments.length>2?arguments[2]:void 0)},setUint32:function(t,e){L(this,4,t,A,e,arguments.length>2?arguments[2]:void 0)},setFloat32:function(t,e){L(this,4,t,F,e,arguments.length>2?arguments[2]:void 0)},setFloat64:function(t,e){L(this,8,t,E,e,arguments.length>2?arguments[2]:void 0)}});b(O,"ArrayBuffer"),b(T,"DataView"),t.exports={ArrayBuffer:O,DataView:T}},"mte+":function(t,e,i){"use strict";var n=i("6aQQ");function r(t,e){return RegExp(t,e)}e.UNSUPPORTED_Y=n(function(){var t=r("a","y");return t.lastIndex=2,null!=t.exec("abcd")}),e.BROKEN_CARET=n(function(){var t=r("^r","gy");return t.lastIndex=2,null!=t.exec("str")})},mukW:function(t,e,i){i("eygo")("Uint16",function(t){return function(e,i,n){return t(this,e,i,n)}})},nK49:function(t,e,i){"use strict";var n=i("0sYB"),r=i("ojxk").includes,a=i("0FA2");n({target:"Array",proto:!0,forced:!i("J+FZ")("indexOf",{ACCESSORS:!0,1:0})},{includes:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),a("includes")},nPzZ:function(t,e,i){"use strict";i.d(e,"a",function(){return d});var n=i("m4/l"),r=i("Inf5"),a=i("Vs7R"),o=i("Gg2j"),s=i("hGwe"),l=i("Mtpk"),u=i("8ZqG"),h=i("CuFa"),c=i("sxA1"),p=i("C84C"),d=function(t){function e(){var e=t.call(this)||this;e.className="Slice3D",e.layout="none";var i=e.createChild(a.a);e.edge=i,i.shouldClone=!1,i.isMeasured=!1,i.toBack(),e.angle=30,e.depth=20;var n=e.createChild(a.a);e.sideA=n,n.shouldClone=!1,n.isMeasured=!1;var r=e.createChild(a.a);return e.sideB=r,r.shouldClone=!1,r.isMeasured=!1,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.setFill=function(e){var i;if(t.prototype.setFill.call(this,e),e instanceof u.a)i=e.hex;else if(e instanceof c.a||e instanceof h.a)i=e.stops.getIndex(0).color.hex;else{var n=new p.a;n.lightness=-.25,this.edge.filters.push(n),this.sideA.filters.push(n.clone()),this.sideB.filters.push(n.clone())}if(i){var r=Object(u.c)(i).lighten(-.25);this.edge.fill=r,this.sideA.fill=r,this.sideB.fill=r,this.edge.stroke=r,this.sideA.stroke=r,this.sideB.stroke=r}},e.prototype.draw=function(){if(this.cornerRadius=0,this.innerCornerRadius=0,t.prototype.draw.call(this),0!==this.arc&&this.radius>0&&this.depth>0){this.sideB.show(0),this.sideA.show(0),this.edge.show(0);for(var e=this.startAngle,i=this.arc,n=this.pixelInnerRadius||0,r=this.radiusY||0,a=this.radius,l=e+i,u=r/a*n,h={x:o.cos(e)*n,y:o.sin(e)*u},c={x:o.cos(e)*a,y:o.sin(e)*r},p={x:o.cos(l)*a,y:o.sin(l)*r},d={x:o.cos(l)*n,y:o.sin(l)*u},f=this.depth,g={x:h.x,y:h.y-f},y={x:c.x,y:c.y-f},m={x:p.x,y:p.y-f},v={x:d.x,y:d.y-f},b="",x=Math.ceil(i/5),_=i/x,P=e,w=y,O=0;O<x;O++)if((P+=_)>0&&P<180){b+=s.moveTo(w);var T={x:o.cos(P)*a,y:o.sin(P)*r-f};b+=s.lineTo({x:w.x,y:w.y+f}),b+=s.arcToPoint({x:T.x,y:T.y+f},a,r,!0),b+=s.lineTo(T),b+=s.arcToPoint(w,a,r),b+="z",w=T}else{b+=s.moveTo(w);T={x:o.cos(P)*a,y:o.sin(P)*r-f};b+=s.arcToPoint(T,a,r,!0),b+=s.lineTo({x:T.x,y:T.y+f}),b+=s.arcToPoint({x:w.x,y:w.y+f},a,r),b+=s.lineTo(w),b+="z",w=T}w=g,P=e;for(O=0;O<x;O++)if((P+=_)>0&&P<180){b+=s.moveTo(w);T={x:o.cos(P)*n,y:o.sin(P)*u-f};b+=s.lineTo({x:w.x,y:w.y+f}),b+=s.arcToPoint({x:T.x,y:T.y+f},n,u,!0),b+=s.lineTo(T),b+=s.arcToPoint(w,n,u),b+="z",w=T}else{b+=s.moveTo(w);T={x:o.cos(P)*n,y:o.sin(P)*u-f};b+=s.arcToPoint(T,n,u,!0),b+=s.lineTo({x:T.x,y:T.y+f}),b+=s.arcToPoint({x:w.x,y:w.y+f},n,u),b+=s.lineTo(w),b+="z",w=T}this.edge.path=b,this.sideA.path=s.moveTo(h)+s.lineTo(c)+s.lineTo(y)+s.lineTo(g)+s.closePath(),this.sideB.path=s.moveTo(p)+s.lineTo(d)+s.lineTo(v)+s.lineTo(m)+s.closePath(),this.startAngle<90?this.sideA.toBack():this.sideA.toFront(),this.startAngle+this.arc>90?this.sideB.toBack():this.sideB.toFront(),this.slice.dy=-f}else this.sideA.hide(0),this.sideB.hide(0),this.edge.hide(0)},Object.defineProperty(e.prototype,"depth",{get:function(){return this.getPropertyValue("depth")},set:function(t){this.setPropertyValue("depth",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"angle",{get:function(){var t=this.getPropertyValue("angle");return l.isNumber(t)||(t=0),t},set:function(t){this.setPropertyValue("angle",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"radiusY",{get:function(){var t=this.getPropertyValue("radiusY");return l.isNumber(t)||(t=this.radius-this.radius*this.angle/90),t},set:function(t){this.setPropertyValue("radiusY",t,!0)},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.edge.copyFrom(e.edge),this.sideA.copyFrom(e.sideA),this.sideB.copyFrom(e.sideB)},e}(r.a)},ncT3:function(t,e,i){"use strict";i.d(e,"a",function(){return c});var n=i("m4/l"),r=i("C6dT"),a=i("Vs7R"),o=i("Ybtf"),s=i("/e9j"),l=i("tjMS"),u=i("Qkdp"),h=i("hGwe"),c=function(t){function e(){var e=t.call(this)||this;return e.className="Cone",e.angle=30,e.radius=Object(l.c)(100),e.topRadius=Object(l.c)(100),e.top=e.createChild(o.a),e.top.shouldClone=!1,e.bottom=e.createChild(o.a),e.bottom.shouldClone=!1,e.body=e.createChild(a.a),e.body.shouldClone=!1,e.body.setElement(e.paper.add("path")),e.layout="none",e.bodyFillModifier=new s.a,e.bodyFillModifier.lightnesses=[0,-.25,0],e.body.fillModifier=e.bodyFillModifier,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this),u.copyProperties(this,this.top,a.b),u.copyProperties(this,this.bottom,a.b),u.copyProperties(this,this.body,a.b);var e,i,n,r=this.innerWidth,o=this.innerHeight,s=this.bottom,l=this.top,c=this.angle;"horizontal"==this.orientation?(e=o/2,s.y=o/2,l.y=o/2,l.x=r,i=(90-c)/90,n=0,this.bodyFillModifier.gradient.rotation=90):(i=0,n=(90-c)/90,e=r/2,s.y=o,s.x=r/2,l.x=r/2,this.bodyFillModifier.gradient.rotation=0);var p,d=this.radius.value*e,f=this.topRadius.value*e;s.radius=d-d*i,s.radiusY=d-d*n,l.radius=f-f*i,l.radiusY=f-f*n,p="horizontal"==this.orientation?h.moveTo({x:0,y:o/2-s.radiusY})+h.arcTo(-90,-180,s.radius,s.radiusY)+h.lineTo({x:r,y:o/2+l.radiusY})+h.arcTo(90,180,l.radius,l.radiusY)+h.closePath():h.moveTo({x:r/2-l.radius,y:0})+h.arcTo(180,-180,l.radius,l.radiusY)+h.lineTo({x:r/2+s.radius,y:o})+h.arcTo(0,180,s.radius,s.radiusY)+h.closePath(),this.body.path=p},Object.defineProperty(e.prototype,"angle",{get:function(){return this.getPropertyValue("angle")},set:function(t){this.setPropertyValue("angle",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(t){this.setPropertyValue("radius",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"topRadius",{get:function(){return this.getPropertyValue("topRadius")},set:function(t){this.setPropertyValue("topRadius",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"orientation",{get:function(){return this.getPropertyValue("orientation")},set:function(t){this.setPropertyValue("orientation",t,!0)},enumerable:!0,configurable:!0}),e}(r.a)},ncgu:function(t,e,i){"use strict";i.d(e,"b",function(){return s}),i.d(e,"a",function(){return l});var n=i("m4/l"),r=i("pR7v"),a=i("aCit"),o=i("Gg2j"),s=function(t){function e(){var e=t.call(this)||this;return e.className="DurationAxisDataItem",e.applyTheme(),e}return Object(n.c)(e,t),e}(r.b),l=function(t){function e(){var e=t.call(this)||this;return e._baseUnit="second",e.className="DurationAxis",e.setPropertyValue("maxZoomFactor",1e6),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.formatLabel=function(t,e){return this.durationFormatter.format(t,e||this.axisDurationFormat)},e.prototype.adjustMinMax=function(e,i,r,a,s){var l,u,h,c=this.baseUnit;if(this.setPropertyValue("maxPrecision",0),"millisecond"==c||"second"==c||"minute"==c||"hour"==c){a<=1&&(a=1),a=Math.round(a);var p=e,d=i;0===r&&(r=Math.abs(i));var f,g=[60,30,20,15,10,2,1],y=1;"hour"==c&&(g=[24,12,6,4,2,1]);try{for(var m=Object(n.g)(g),v=m.next();!v.done;v=m.next()){var b=v.value;if(r/b>a){y=b;break}}}catch(t){l={error:t}}finally{try{v&&!v.done&&(u=m.return)&&u.call(m)}finally{if(l)throw l.error}}var x=Math.ceil((i-e)/y/a),_=Math.log(Math.abs(x))*Math.LOG10E,P=Math.pow(10,Math.floor(_))/10,w=x/P;f=y*(x=o.closest(g,w)*P),this.durationFormatter.getValueUnit(f,this.baseUnit),e=Math.floor(e/f)*f,i=Math.ceil(i/f)*f,s&&((e-=f)<0&&p>=0&&(e=0),(i+=f)>0&&d<=0&&(i=0)),h={min:e,max:i,step:f}}else h=t.prototype.adjustMinMax.call(this,e,i,r,a,s);return this.axisDurationFormat=this.durationFormatter.getFormat(h.step,h.max,this.baseUnit),h},Object.defineProperty(e.prototype,"tooltipDurationFormat",{get:function(){return this._tooltipDurationFormat},set:function(t){this._tooltipDurationFormat=t},enumerable:!0,configurable:!0}),e.prototype.getTooltipText=function(t){var e=o.round(this.positionToValue(t),this._stepDecimalPlaces),i=this.formatLabel(e,this.tooltipDurationFormat);return this._adapterO?this._adapterO.apply("getTooltipText",i):i},Object.defineProperty(e.prototype,"baseUnit",{get:function(){return this._baseUnit},set:function(t){this._baseUnit!=t&&(this._baseUnit=t,this.durationFormatter.baseUnit=t,this.invalidate())},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.baseUnit=e.baseUnit},e}(r.a);a.c.registeredClasses.DurationAxis=l,a.c.registeredClasses.DurationAxisDataItem=s},nj15:function(t,e,i){i("mF5+"),i("jgaU");var n=i("lCww");t.exports=n},ntrI:function(t,e,i){i("0sYB")({global:!0},{globalThis:i("vfdp")})},o0Lc:function(t,e,i){"use strict";i.d(e,"a",function(){return l}),i.d(e,"b",function(){return u});var n=i("m4/l"),r=i("hD5A"),a=i("hJ5i"),o=i("/9XX"),s=i("Mtpk"),l=function(){function t(){this._listeners=[],this._killed=[],this._disabled={},this._iterating=0,this._enabled=!0,this._disposed=!1}return t.prototype.isDisposed=function(){return this._disposed},t.prototype.dispose=function(){if(!this._disposed){this._disposed=!0;var t=this._listeners;this._iterating=1,this._listeners=null,this._disabled=null;try{a.each(t,function(t){t.disposer.dispose()})}finally{this._killed=null,this._iterating=null}}},t.prototype.hasListeners=function(){return 0!==this._listeners.length},t.prototype.hasListenersByType=function(t){return a.any(this._listeners,function(e){return(null===e.type||e.type===t)&&!e.killed})},t.prototype.enable=function(){this._enabled=!0},t.prototype.disable=function(){this._enabled=!1},t.prototype.enableType=function(t){delete this._disabled[t]},t.prototype.disableType=function(t,e){void 0===e&&(e=1/0),this._disabled[t]=e},t.prototype._removeListener=function(t){if(0===this._iterating){var e=this._listeners.indexOf(t);if(-1===e)throw new Error("Invalid state: could not remove listener");this._listeners.splice(e,1)}else this._killed.push(t)},t.prototype._removeExistingListener=function(t,e,i,n){if(this._disposed)throw new Error("EventDispatcher is disposed");this._eachListener(function(r){r.once!==t||r.type!==e||null!=i&&r.callback!==i||r.context!==n||r.disposer.dispose()})},t.prototype.isEnabled=function(t){if(this._disposed)throw new Error("EventDispatcher is disposed");return this._enabled&&this._listeners.length>0&&this.hasListenersByType(t)&&null==this._disabled[t]},t.prototype.has=function(t,e,i){return-1!==a.findIndex(this._listeners,function(n){return!0!==n.once&&n.type===t&&(null==e||n.callback===e)&&n.context===i})},t.prototype._shouldDispatch=function(t){if(this._disposed)throw new Error("EventDispatcher is disposed");var e=this._disabled[t];return s.isNumber(e)?(e<=1?delete this._disabled[t]:--this._disabled[t],!1):this._enabled},t.prototype._eachListener=function(t){var e=this;++this._iterating;try{a.each(this._listeners,t)}finally{--this._iterating,0===this._iterating&&0!==this._killed.length&&(a.each(this._killed,function(t){e._removeListener(t)}),this._killed.length=0)}},t.prototype.dispatchImmediately=function(t,e){this._shouldDispatch(t)&&this._eachListener(function(i){i.killed||null!==i.type&&i.type!==t||i.dispatch(t,e)})},t.prototype.dispatch=function(t,e){this._shouldDispatch(t)&&this._eachListener(function(i){i.killed||null!==i.type&&i.type!==t||o.e(function(){i.killed||i.dispatch(t,e)})})},t.prototype._on=function(t,e,i,n,a,o){var s=this;if(this._disposed)throw new Error("EventDispatcher is disposed");this._removeExistingListener(t,e,i,n);var l={type:e,callback:i,context:n,shouldClone:a,dispatch:o,killed:!1,once:t,disposer:new r.b(function(){l.killed=!0,s._removeListener(l)})};return this._listeners.push(l),l},t.prototype.onAll=function(t,e,i){return void 0===i&&(i=!0),this._on(!1,null,t,e,i,function(i,n){return t.call(e,i,n)}).disposer},t.prototype.on=function(t,e,i,n){return void 0===n&&(n=!0),this._on(!1,t,e,i,n,function(t,n){return e.call(i,n)}).disposer},t.prototype.once=function(t,e,i,n){void 0===n&&(n=!0);var r=this._on(!0,t,e,i,n,function(t,n){r.disposer.dispose(),e.call(i,n)});return r.disposer},t.prototype.off=function(t,e,i){this._removeExistingListener(!1,t,e,i)},t.prototype.copyFrom=function(t){var e=this;if(this._disposed)throw new Error("EventDispatcher is disposed");if(t===this)throw new Error("Cannot copyFrom the same TargetedEventDispatcher");a.each(t._listeners,function(t){!t.killed&&t.shouldClone&&(null===t.type?e.onAll(t.callback,t.context):t.once?e.once(t.type,t.callback,t.context):e.on(t.type,t.callback,t.context))})},t}(),u=function(t){function e(e){var i=t.call(this)||this;return i.target=e,i}return Object(n.c)(e,t),e.prototype.copyFrom=function(t){var e=this;if(this._disposed)throw new Error("EventDispatcher is disposed");if(t===this)throw new Error("Cannot copyFrom the same TargetedEventDispatcher");a.each(t._listeners,function(i){i.context!==t.target&&!i.killed&&i.shouldClone&&(null===i.type?e.onAll(i.callback,i.context):i.once?e.once(i.type,i.callback,i.context):e.on(i.type,i.callback,i.context))})},e}(l)},"o3G/":function(t,e,i){var n=i("2xmP");t.exports=Array.isArray||function(t){return"Array"==n(t)}},oC3T:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("Tjl+"),a=i("1yyj"),o=i("Gg2j"),s=i("0FpR"),l=i("Mtpk"),u=function(t){function e(e){var i=t.call(this)||this;return i._bboxes=[],i.morphDuration=800,i.morphEasing=s.cubicOut,i.morphToSingle=!0,i.scaleRatio=1,i.className="Morpher",i.morphable=e,i.applyTheme(),i}return Object(n.c)(e,t),e.prototype.morphToPolygon=function(t,e,i){var n=this.morphable.currentPoints;if(n&&t){this.sortPoints(n),this.sortPoints(t),this._morphFromPointsReal=[],this._morphToPointsReal=[],l.hasValue(e)||(e=this.morphDuration),l.hasValue(i)||(i=this.morphEasing),this._morphFromPointsReal=this.normalizePoints(t,n),this._morphToPointsReal=this.normalizePoints(n,t),this.morphable.currentPoints=this._morphFromPointsReal;var r=new a.a(this,{property:"morphProgress",from:0,to:1},e,i);return this._disposers.push(r),r.start(),r}},e.prototype.normalizePoints=function(t,e){for(var i=0,n=t.length;i<n;i++){var r=t[i][0],a=t[i][1],s=l.getValue(o.getBBox(r)),u=s.x+s.width,h=s.y+s.height;if(e[i]||(e[i]=[]),r&&!e[i][0]&&(e[i][0]=[{x:u,y:h},{x:u,y:h}]),e[i][0]){e[i][0]=this.addPoints(e[i][0],r.length);for(var c=1/0,p=0,d=0;d<e[i][0].length;d++){var f=o.getDistance(e[i][0][d],r[0]);f<c&&(p=d,c=f)}var g=e[i][0].slice(0,p),y=e[i][0].slice(p);e[i][0]=y.concat(g)}a&&(e[i][1]||(e[i][1]=[{x:u,y:h},{x:u,y:h}]),e[i][1]=this.addPoints(e[i][1],a.length))}return e},e.prototype.sortPoints=function(t){t.sort(function(t,e){var i=l.getValue(o.getBBox(t[0])),n=l.getValue(o.getBBox(e[0]));return i.width*i.height>n.width*n.height?-1:1});for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i][0];r&&e.push(l.getValue(o.getBBox(r)))}return o.getCommonRectangle(e)},e.prototype.morphToCircle=function(t,e,i){var n=this.morphable.points,r=this.sortPoints(n);this._morphFromPointsReal=[],this._morphToPointsReal=[],l.hasValue(e)||(e=this.morphDuration),l.hasValue(i)||(i=this.morphEasing);for(var s=0,u=n.length;s<u;s++){var h=n[s][0],c=n[s][1];if(this._morphFromPointsReal[s]=[],this._morphToPointsReal[s]=[],h){var p=h,d=h,f=l.getValue(o.getBBox(d));this.morphToSingle&&(f=l.getValue(r));var g=f.x+f.width/2,y=f.y+f.height/2,m=t;l.isNumber(m)||(m=Math.min(f.width/2,f.height/2)),p=[];var v=o.getAngle({x:g,y:y},h[0]),b=100;h.length>b&&(b=h.length);for(var x=360/((b=(d=this.addPoints(h,b)).length)-1),_=0;_<b;_++){var P=x*_+v,w={x:g+m*o.cos(P),y:y+m*o.sin(P)};p[_]=w}if(c&&c.length>0)for(var O=0,T=c.length;O<T;O++)p.push({x:g,y:y});this._morphFromPointsReal[s][0]=d,this._morphToPointsReal[s][0]=p}}this.morphable.currentPoints=this._morphFromPointsReal;var S=new a.a(this,{property:"morphProgress",from:0,to:1},e,i);return this._disposers.push(S),S.start(),S},e.prototype.addPoints=function(t,e){for(var i=Math.round(e/t.length),n=[],r=0,a=t.length;r<a;r++){var o=t[r],s=void 0;s=r==t.length-1?t[0]:t[r+1],n.push(o);for(var l=1;l<i;l++){var u=l/i,h={x:o.x+(s.x-o.x)*u,y:o.y+(s.y-o.y)*u};n.push(h)}n.length+t.length-r==e&&(i=0)}if(n.length<e&&t.length>0){var c=t[t.length-1];for(l=n.length;l<e;l++)n.push({x:c.x,y:c.y})}return n},e.prototype.morphToRectangle=function(t,e,i,n){var r=this.morphable.points;this.sortPoints(r),this._morphFromPointsReal=[],this._morphToPointsReal=[],l.hasValue(i)||(i=this.morphDuration),l.hasValue(n)||(n=this.morphEasing);for(var o=0,s=r.length;o<s;o++){var u=r[o][0],h=r[o][1];if(this._morphFromPointsReal[o]=[],this._morphToPointsReal[o]=[],u){var c=u,p=u,d=this._bboxes[o];this.morphToSingle;var f=d.x,g=d.y,y=t,m=e;if(l.isNumber(y)||(y=d.width),l.isNumber(m)||(m=d.height),c=[{x:f,y:g},{x:f+y,y:g},{x:f+y,y:g+m},{x:f,y:g+m}],c=this.addPoints(c,u.length),u.length<4)for(var v=u.length;v<4;v++)c.push({x:u[v].x,y:u[v].y});if(h&&h.length>0)for(var b=d.x+d.width/2,x=d.y+d.height/2,_=0,P=h.length;_<P;_++)c.push({x:b,y:x});this._morphFromPointsReal[o][0]=p,this._morphToPointsReal[o][0]=c}}this.morphable.currentPoints=this._morphFromPointsReal;var w=new a.a(this,{property:"morphProgress",from:0,to:1},i,n);return this._disposers.push(w),w.start(),w},Object.defineProperty(e.prototype,"morphProgress",{get:function(){return this._morphProgress},set:function(t){this._morphProgress=t;var e=[];if(null!=t){var i=this._morphFromPointsReal,n=this._morphToPointsReal;if(null!=i&&null!=n)for(var r=0,a=i.length;r<a;r++){var o=[];e.push(o);var s=i[r][0],l=i[r][1],u=n[r][0],h=n[r][1];if(s&&s.length>0&&u&&u.length>0){for(var c=[],p=0,d=s.length;p<d;p++){var f=s[p],g=u[p],y={x:f.x+(g.x*this.scaleRatio-f.x)*t,y:f.y+(g.y*this.scaleRatio-f.y)*t};c.push(y)}o[0]=c}if(l&&l.length>0&&h&&h.length>0){for(var m=[],v=0,b=l.length;v<b;v++){f=l[v],g=h[v],y={x:f.x+(g.x*this.scaleRatio-f.x)*t,y:f.y+(g.y*this.scaleRatio-f.y)*t};m.push(y)}o[1]=m}}}this.morphable.currentPoints=e},enumerable:!0,configurable:!0}),e.prototype.morphBack=function(t,e){this._morphToPointsReal=this._morphFromPointsReal,this._morphFromPointsReal=this.morphable.currentPoints,l.hasValue(t)||(t=this.morphDuration),l.hasValue(e)||(e=this.morphEasing);var i=new a.a(this,{property:"morphProgress",from:0,to:1},t,e);return this._disposers.push(i),i.start(),i},Object.defineProperty(e.prototype,"animations",{get:function(){return this._animations||(this._animations=[],this._disposers.push(new a.b(this._animations))),this._animations},enumerable:!0,configurable:!0}),e}(r.a)},oRlD:function(t,e,i){var n={};n[i("KslR")("toStringTag")]="z",t.exports="[object z]"===String(n)},oa9N:function(t,e,i){"use strict";var n=i("UseD").exportTypedArrayMethod,r=i("6aQQ"),a=i("vfdp").Uint8Array,o=a&&a.prototype||{},s=[].toString,l=[].join;r(function(){s.call({})})&&(s=function(){return l.call(this)});var u=o.toString!=s;n("toString",s,u)},"ob/C":function(t,e,i){var n=i("k2B3"),r=i("NK3S"),a=i("KslR")("toPrimitive"),o=Date.prototype;a in o||n(o,a,r)},ocaP:function(t,e,i){var n=i("0sYB"),r=Math.atanh,a=Math.log;n({target:"Math",stat:!0,forced:!(r&&1/r(-0)<0)},{atanh:function(t){return 0==(t=+t)?t:a((1+t)/(1-t))/2}})},oe0p:function(t,e,i){var n=i("0sYB"),r=Math.hypot,a=Math.abs,o=Math.sqrt;n({target:"Math",stat:!0,forced:!!r&&r(1/0,NaN)!==1/0},{hypot:function(t,e){for(var i,n,r=0,s=0,l=arguments.length,u=0;s<l;)u<(i=a(arguments[s++]))?(r=r*(n=u/i)*n+1,u=i):r+=i>0?(n=i/u)*n:i;return u===1/0?1/0:u*o(r)}})},ohjg:function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("Tjl+"),a=i("P7v+"),o=i("1yyj"),s=i("vMqJ"),l=i("Qkdp"),u=i("Wglt"),h=function(t){function e(){var e=t.call(this)||this;return e.properties={},e.isTemplate=!1,e._scale=1,e._nonScaling=!0,e.className="Filter",e.filterPrimitives=new s.b,e.filterPrimitives.events.on("inserted",function(t){e._disposers.push(t.newValue)}),e.width=120,e.height=120,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.appendPrimitives=function(t){u.each(this.filterPrimitives.iterator(),function(e){t.add(e)})},e.prototype.animate=function(t,e,i){return new o.a(this,t,e,i).start()},Object.defineProperty(e.prototype,"width",{get:function(){return this.properties.width},set:function(t){this.properties.width=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this.properties.height},set:function(t){this.properties.height=t},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){var i=this;t.prototype.copyFrom.call(this,e),l.each(e.properties,function(t,e){i[t]=e})},Object.defineProperty(e.prototype,"paper",{get:function(){return this._paper?this._paper:Object(a.b)()},set:function(t){this._paper!=t&&(this._paper=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"animations",{get:function(){return this._animations||(this._animations=[],this._disposers.push(new o.b(this._animations))),this._animations},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"scale",{get:function(){return this._scale},set:function(t){this._scale=t,this.updateScale()},enumerable:!0,configurable:!0}),e.prototype.updateScale=function(){},Object.defineProperty(e.prototype,"nonScaling",{get:function(){return this._nonScaling},set:function(t){this._nonScaling=t,t||(this._scale=1),this.updateScale()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"sprite",{set:function(t){this.setSprite(t)},enumerable:!0,configurable:!0}),e.prototype.setSprite=function(t){this._sprite&&this._sprite!=t&&this._sprite.filters.removeValue(this),this._sprite=t},e}(r.a)},ojxk:function(t,e,i){var n=i("9XRO"),r=i("tHyI"),a=i("Y8n3"),o=function(t){return function(e,i,o){var s,l=n(e),u=r(l.length),h=a(o,u);if(t&&i!=i){for(;u>h;)if((s=l[h++])!=s)return!0}else for(;u>h;h++)if((t||h in l)&&l[h]===i)return t||h||0;return!t&&-1}};t.exports={includes:o(!0),indexOf:o(!1)}},olmY:function(t,e,i){var n=i("0sYB"),r=i("3weC"),a=i("Ox5T");n({target:"Reflect",stat:!0,sham:!i("QKtu")},{getPrototypeOf:function(t){return a(r(t))}})},onIP:function(t,e,i){"use strict";var n=i("0sYB"),r=i("X/sl").findIndex,a=i("0FA2"),o=!0,s=i("J+FZ")("findIndex");"findIndex"in[]&&Array(1).findIndex(function(){o=!1}),n({target:"Array",proto:!0,forced:o||!s},{findIndex:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),a("findIndex")},onRi:function(t,e,i){"use strict";var n=i("0sYB"),r=i("exNg"),a=i("4BZe"),o=i("ScUe"),s=i("6aQQ"),l=1..toFixed,u=Math.floor,h=function(t,e,i){return 0===e?i:e%2==1?h(t,e-1,i*t):h(t*t,e/2,i)};n({target:"Number",proto:!0,forced:l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!s(function(){l.call({})})},{toFixed:function(t){var e,i,n,s,l=a(this),c=r(t),p=[0,0,0,0,0,0],d="",f="0",g=function(t,e){for(var i=-1,n=e;++i<6;)n+=t*p[i],p[i]=n%1e7,n=u(n/1e7)},y=function(t){for(var e=6,i=0;--e>=0;)i+=p[e],p[e]=u(i/t),i=i%t*1e7},m=function(){for(var t=6,e="";--t>=0;)if(""!==e||0===t||0!==p[t]){var i=String(p[t]);e=""===e?i:e+o.call("0",7-i.length)+i}return e};if(c<0||c>20)throw RangeError("Incorrect fraction digits");if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return String(l);if(l<0&&(d="-",l=-l),l>1e-21)if(i=(e=function(t){for(var e=0,i=t;i>=4096;)e+=12,i/=4096;for(;i>=2;)e+=1,i/=2;return e}(l*h(2,69,1))-69)<0?l*h(2,-e,1):l/h(2,e,1),i*=4503599627370496,(e=52-e)>0){for(g(0,i),n=c;n>=7;)g(1e7,0),n-=7;for(g(h(10,n,1),0),n=e-1;n>=23;)y(1<<23),n-=23;y(1<<n),g(1,1),y(2),f=m()}else g(0,i),g(1<<-e,0),f=m()+o.call("0",c);return f=c>0?d+((s=f.length)<=c?"0."+o.call("0",c-s)+f:f.slice(0,s-c)+"."+f.slice(s-c)):d+f}})},oq5N:function(t,e,i){i("eygo")("Int32",function(t){return function(e,i,n){return t(this,e,i,n)}})},oxAz:function(t,e,i){var n=i("sxi3");t.exports=function(t,e){var i=n(t);if(i%e)throw RangeError("Wrong offset");return i}},oxU5:function(t,e,i){var n=i("0sYB"),r=i("Y8n3"),a=String.fromCharCode,o=String.fromCodePoint;n({target:"String",stat:!0,forced:!!o&&1!=o.length},{fromCodePoint:function(t){for(var e,i=[],n=arguments.length,o=0;n>o;){if(e=+arguments[o++],r(e,1114111)!==e)throw RangeError(e+" is not a valid code point");i.push(e<65536?a(e):a(55296+((e-=65536)>>10),e%1024+56320))}return i.join("")}})},p9TX:function(t,e,i){"use strict";i.d(e,"a",function(){return f});var n=i("m4/l"),r=i("C6dT"),a=i("aCit"),o=i("MipW"),s=i("hD5A"),l=i("MIZb"),u=i("Gg2j"),h=i("v9UT"),c=i("Mtpk"),p=i("58Sn"),d=i("TGuK"),f=function(t){function e(){var e=t.call(this)||this;return e.isOversized=!1,e.className="Label",e.fill=(new l.a).getFor("text"),e.wrap=!1,e.truncate=!1,e.fullWords=!0,e.ellipsis="…",e.textAlign="start",e.textValign="top",e.layout="absolute",e.baseLineRatio=-.27,e._positionPrecision=1,e.events.on("maxsizechanged",function(){e.inited&&e.handleMaxSize()},e,!1),e.events.once("validated",e.handleValidate,e,!1),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.afterDraw=function(){t.prototype.afterDraw.call(this),this.validatePosition()},e.prototype.setPaper=function(e){var i=t.prototype.setPaper.call(this,e);return i&&this.hardInvalidate(),i},e.prototype.handleValidate=function(){!this.currentText&&!this.text||0!=this.bbox.width&&0!=this.bbox.height||a.c.events.once("exitframe",this.hardInvalidate,this)},e.prototype.handleMaxSize=function(){this.bbox.width>this.availableWidth||this.bbox.width<this.availableWidth&&(this.isOversized||this.truncate)||this.bbox.height>this.availableHeight||this.bbox.height<this.availableHeight&&this.isOversized?this.invalidate():this.alignSVGText()},e.prototype.arrange=function(){},e.prototype.updateCurrentText=function(){var t,e;h.isNotEmpty(this.html)&&this.paper.supportsForeignObject()?(t="html",e=this.html):(t="svg",e=this.text),c.isObject(e)&&(e=e.toString()),c.hasValue(e)&&""!==e&&(e=this.populateString(e,this.dataItem)),"html"==t?this._adapterO&&(e=this._adapterO.apply("htmlOutput",e)):this._adapterO&&(e=this._adapterO.apply("textOutput",e));var i=e!=this.currentText||t!=this._currentFormat;return this.currentText=e,this._currentFormat=t,i},e.prototype.hardInvalidate=function(){this._prevStatus="",this.invalidate()},e.prototype.getLineBBox=function(t){var e=t&&t.element,i=e&&e.node;i&&i.parentNode&&(t.bbox=e.getBBox())},e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.bbox.width,i=this.bbox.height,n=this.topParent;if(!n||n.maxWidth&&n.maxHeight){var r=u.max(this.availableWidth-this.pixelPaddingLeft-this.pixelPaddingRight,0),a=u.max(this.availableHeight-this.pixelPaddingTop-this.pixelPaddingBottom,0),s=a+","+r+this.wrap+this.truncate+this.fullWords+this.rtl+this.ellipsis;if(this.updateCurrentText()||!this.inited||this._prevStatus!=s){this._measuredWidth=0,this._measuredHeight=0,this.isOversized=!1;var l=this._currentFormat,p=this.currentText;if(c.hasValue(p)&&""!=p){var d=p.split("\n");this._prevStatus=s,this.textAlign=this.textAlign;var f=this.group.getAttr("display");if("none"==f&&this.group.removeAttr("display"),this.textPathElement&&this.textPathElement.removeChildren(),"svg"===l){this.element.removeAttr("display");var g=this.element;this.resetBBox();for(var y=0,m="",v=0;v<d.length;v++){var b=d[v];if(""!=b){var x=Object(o.b)().chunk(b,null,this.ignoreFormatting),_=0,P=!0,w=!1,O=this.getLineInfo(v);O?(O.text="",O.element.textContent=""):(O={text:"",element:this.getSVGLineElement("",0),complex:!1},g.add(O.element)),O.element.removeAttr("display"),O.element.removeChildren(),this.textPathElement&&O.element.add(this.textPathElement);for(var T=0;T<x.length;T++){T&&(O.complex=!0);var S=x[T];if("format"===S.type)m=S.text;else{if(w)continue;O.text=S.text,O.style=Object(o.b)().translateStyleShortcuts(m);var C=this.getSvgElement(O.text,O.style);if(this.textPathElement?this.textPathElement.add(C):O.element.add(C),this.getLineBBox(O),O.bbox.width=Math.ceil(O.bbox.width),_<O.bbox.height&&(_=O.bbox.height),(this.wrap||this.truncate)&&O.bbox.width>r){this.isOversized=!0;var I=O.element.textContent,k=O.bbox.width/I.length,D=u.min(Math.ceil((O.bbox.width-r)/k),I.length);if(this.truncate){var j=!1,V=O.element.node;if(V&&V.childNodes)for(var A=O.element.node.childNodes.length-1;A>=0;A--){var M=O.element.node.childNodes[A];if(j&&O.bbox.width<=r&&(M.textContent+=" "+this.ellipsis,O.bbox=O.element.getBBox(),O.bbox.width=Math.floor(O.bbox.width),O.bbox.width<=r))break;j=!1;var F=M.textContent;for(I=O.element.textContent,D=u.min(Math.ceil((O.bbox.width-r)/k),I.length);O.bbox.width>r&&D<=I.length&&D>0;){(N=u.max(I.length-D-this.ellipsis.length,1))<=1&&(D=0,A>0&&(j=!0,O.element.node.removeChild(M))),(F=h.truncateWithEllipsis(F,N,this.ellipsis,this.fullWords,this.rtl)).length>N&&this.fullWords&&(F=h.truncateWithEllipsis(F,N,this.ellipsis,!1,this.rtl)),M.textContent=F,O.bbox=O.element.getBBox(),O.bbox.width=Math.floor(O.bbox.width),D=Math.ceil(1.1*D)}w=!0}}else{if(O.element.node){for(var E=O.element.node.lastChild,R=void 0;O.bbox.width>r&&D<=I.length&&D>0;){var N=u.max(S.text.length-D,1);P?R=h.splitTextByCharCount(S.text,N,!0,this.rtl):((R=h.splitTextByCharCount(S.text,N,!0,this.rtl))[0].length>N||1===N)&&(O.element.node.removeChild(E),D=0),D>0&&(E.textContent=Object(o.b)().cleanUp(h.trim(R.shift()))),O.bbox=O.element.getBBox(),O.bbox.width=Math.floor(O.bbox.width),D=Math.ceil(1.1*D)}if(R.length>0){var L="";c.hasValue(R)&&(this.rtl?L+=R.join("")+m:L+=m+R.join("").replace(/([\[\]]{1})/g,"$1$1"));for(var B=T+1;B<x.length;B++)"value"==x[B].type?L+=x[B].text.replace(/([\[\]]{1})/g,"$1$1"):L+=x[B].text;d.splice(v+1,0,L)}w=!0}}}this.bbox.width<O.bbox.width&&(this.bbox.width=O.bbox.width),this.bbox.height=y+_,this.textPathElement?O.element.attr({dy:-this.paddingBottom.toString()}):O.element.attr({x:"0",y:y+_,dy:u.round(this.baseLineRatio*_,3).toString()}),P=!1}}var U=O.element.node;if(U)(E=U.lastChild)&&(E.textContent=this.rtl?h.ltrim(E.textContent):h.rtrim(E.textContent));y+=_,this.addLineInfo(O,v)}else{var W=this.getSVGLineElement("",0);W.add(this.getSvgElement(".",Object(o.b)().translateStyleShortcuts(m))),g.add(W);var Y=Math.ceil(W.getBBox().height);Y>0&&(y+=Y),g.removeElement(W);var H=this.getLineInfo(v);H&&(H.text="",H.element.textContent="")}}this.maybeHideOversized(),this.measureFailed=!1,0!=this.bbox.width&&0!=this.bbox.height||(this.measureFailed=!0),this._measuredWidth=u.round(u.max(this.bbox.width,this.pixelWidth-this.pixelPaddingLeft-this.pixelPaddingRight)),this._measuredHeight=u.round(u.max(this.bbox.height,this.pixelHeight-this.pixelPaddingTop-this.pixelPaddingBottom)),this.alignSVGText(),this.bbox.width=this._measuredWidth,this.bbox.height=this._measuredHeight,i==this._measuredHeight&&e==this._measuredWidth||this.dispatch("transformed"),this.hideUnused(d.length)}else{this.element.removeAttr("display"),this.resetBBox(),(g=this.element).removeChildren();var z=this.paper.foreignObject();g.add(z),this.maxWidth&&z.attr({width:this.maxWidth}),this.maxHeight&&z.attr({height:this.maxHeight});var X=this.getHTMLLineElement(p);z.node.appendChild(X),X.style.display="inline-block";var G=X.clientWidth,K=X.clientHeight;X.style.display="block",this._bbox={x:0,y:0,width:G,height:K},z.attr({width:G,height:K}),this.maybeHideOversized(),this._measuredWidth=u.max(this.bbox.width,this.pixelWidth-this.pixelPaddingLeft-this.pixelPaddingRight),this._measuredHeight=u.max(this.bbox.height,this.pixelHeight-this.pixelPaddingTop-this.pixelPaddingBottom),this.bbox.width=this._measuredWidth,this.bbox.height=this._measuredHeight,this.truncate&&(X.style.overflow="hidden"),(G>r||K>a)&&(this.isOversized=!0)}this.setStyles(),this.updateCenter(),this.updateBackground(),"none"==f&&this.group.attr({display:"none"}),this.pathElement&&this.paper.appendDef(this.pathElement)}else this.element.attr({display:"none"})}}else n.events.once("maxsizechanged",this.hardInvalidate,this,!1)},e.prototype.maybeHideOversized=function(){this.hideOversized&&(this.availableWidth<this.bbox.width||this.availableHeight<this.bbox.height?(this.element.attr({display:"none"}),this.isOversized=!0):(this.element.removeAttr("display"),this.isOversized=!1))},e.prototype.alignSVGText=function(){var t=this.element,e=t.node.children||t.node.childNodes;if(e&&(!e||0!=e.length)){var i=this._measuredWidth,n=this._measuredHeight;h.used(this.pixelPaddingLeft),h.used(this.pixelPaddingRight),h.used(this.pixelPaddingTop),h.used(this.pixelPaddingBottom);for(var r=e.length-1;r>=0;r--){var a=e[r];if(a.setAttribute("text-anchor",this.textAlign),this.textPathElement)a.removeAttribute("x"),a.removeAttribute("y");else{switch(this.textAlign){case"middle":a.setAttribute("x",(i/2).toString()+"px");break;case"end":this.rtl||a.setAttribute("x",i.toString());break;default:this.rtl?a.setAttribute("x",i.toString()):a.removeAttribute("text-anchor")}var o=c.toNumber(a.getAttribute("y"));switch(this.textValign){case"middle":a.setAttribute("y",(o+(n-this.bbox.height)/2).toString());break;case"bottom":a.setAttribute("y",(o+n-this.bbox.height).toString());break;default:a.setAttribute("y",o.toString())}}}}},e.prototype.getSVGLineElement=function(t,e){var i=this.paper.addGroup("text");return i.textContent=t,i.attr({x:"0"}),c.hasValue(e)&&i.attr({y:e.toString()}),(this.truncate||this.wrap)&&i.attr({overflow:"hidden"}),this.rtl&&i.attr({direction:"rtl"}),i},e.prototype.resetBBox=function(){this._bbox={x:0,y:0,width:0,height:0}},e.prototype.getHTMLLineElement=function(t){var e=document.createElement("div");switch(e.innerHTML=t,this.textAlign){case"middle":e.style.textAlign="center";break;case"end":e.style.textAlign="right"}return this.wrap?e.style.wordWrap="break-word":e.style.whiteSpace="nowrap",this.rtl&&(e.style.direction="rtl"),c.hasValue(this.fill)&&(e.style.color=this.fill.toString()),e},e.prototype.setStyles=function(){var t=this.element;!this.selectable||this.draggable||this.resizable||this.swipeable?t.addStyle({webkitUserSelect:"none",msUserSelect:"none"}):this.selectable&&(t.removeStyle("webkitUserSelect"),t.removeStyle("msUserSelect"))},e.prototype.hideUnused=function(t){this.initLineCache();var e=this.getCache("lineInfo");if(e.length>=t)for(var i=t;i<e.length;i++){var n=e[i];n&&n.element&&n.element.attr({display:"none"})}},Object.defineProperty(e.prototype,"text",{get:function(){return this.getPropertyValue("text")},set:function(t){this.setPropertyValue("text",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"path",{get:function(){return this.getPropertyValue("path")},set:function(t){this.setPropertyValue("path",t,!0)&&(this.pathElement&&this.pathElement.dispose(),this.textPathElement&&this.textPathElement.dispose(),this.pathElement=this.paper.add("path"),this.pathElement.attr({d:t}),this.pathElement.attr({id:"text-path-"+this.uid}),this._disposers.push(this.pathElement),this.textPathElement=this.paper.addGroup("textPath"),this.textPathElement.attrNS(p.d,"xlink:href","#text-path-"+this.uid),this.textPathElement.attr({path:t}),this._disposers.push(this.textPathElement),this.hardInvalidate())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"locationOnPath",{get:function(){return this.getPropertyValue("locationOnPath")},set:function(t){this.setPropertyValue("locationOnPath",t),this.textPathElement&&this.textPathElement.attr({startOffset:100*t+"%"})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"baseLineRatio",{get:function(){return this.getPropertyValue("baseLineRatio")},set:function(t){this.setPropertyValue("baseLineRatio",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"wrap",{get:function(){return this.getPropertyValue("wrap")},set:function(t){this.resetBBox(),this.setPropertyValue("wrap",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"truncate",{get:function(){return this.getPropertyValue("truncate")},set:function(t){this.resetBBox(),this.setPropertyValue("truncate",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fullWords",{get:function(){return this.getPropertyValue("fullWords")},set:function(t){this.setPropertyValue("fullWords",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ellipsis",{get:function(){return this.getPropertyValue("ellipsis")},set:function(t){this.setPropertyValue("ellipsis",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selectable",{get:function(){return this.getPropertyValue("selectable")},set:function(t){this.setPropertyValue("selectable",t,!0),this.setStyles()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"textAlign",{get:function(){return this.getPropertyValue("textAlign")},set:function(t){this.setPropertyValue("textAlign",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"textValign",{get:function(){return this.getPropertyValue("textValign")},set:function(t){this.setPropertyValue("textValign",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"html",{get:function(){return this.getPropertyValue("html")},set:function(t){this.setPropertyValue("html",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hideOversized",{get:function(){return this.getPropertyValue("hideOversized")},set:function(t){this.setPropertyValue("hideOversized",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ignoreFormatting",{get:function(){return this.getPropertyValue("ignoreFormatting")},set:function(t){this.setPropertyValue("ignoreFormatting",t,!0)},enumerable:!0,configurable:!0}),e.prototype.measureElement=function(){},e.prototype.getLineInfo=function(t){this.initLineCache();var e=this.getCache("lineInfo");return e.length>t?e[t]:void 0},e.prototype.addLineInfo=function(t,e){this.initLineCache(),this.getCache("lineInfo")[e]=t},e.prototype.initLineCache=function(){c.hasValue(this.getCache("lineInfo"))||this.setCache("lineInfo",[],0)},e.prototype.setDataItem=function(e){this._sourceDataItemEvents&&this._sourceDataItemEvents.dispose(),e&&(this._sourceDataItemEvents=new s.c([e.events.on("valuechanged",this.invalidate,this,!1),e.events.on("workingvaluechanged",this.invalidate,this,!1),e.events.on("calculatedvaluechanged",this.invalidate,this,!1),e.events.on("propertychanged",this.invalidate,this,!1)])),t.prototype.setDataItem.call(this,e)},Object.defineProperty(e.prototype,"availableWidth",{get:function(){return c.hasValue(this.maxWidth)?this.maxWidth:this.pixelWidth},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"availableHeight",{get:function(){return c.hasValue(this.maxHeight)?this.maxHeight:this.pixelHeight},enumerable:!0,configurable:!0}),e.prototype.getSvgElement=function(t,e){var i=this.paper.add("tspan");return i.textContent=t,e&&i.node.setAttribute("style",e),i},e.prototype.deepInvalidate=function(){t.prototype.deepInvalidate.call(this),this.hardInvalidate()},Object.defineProperty(e.prototype,"readerTitle",{get:function(){var t=this.getPropertyValue("readerTitle");return t||(t=this.populateString(h.plainText(h.isNotEmpty(this.html)?this.html:this.text))),t},set:function(t){t=c.toText(t),this.setPropertyValue("readerTitle",t)&&this.applyAccessibility()},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.Label=f,d.c.push({relevant:d.b.heightXS,state:function(t,e){if(t instanceof f&&t.parent&&t.parent.isBaseSprite){var i=t.states.create(e);return i.properties.disabled=!0,i}return null}})},pNDo:function(t,e,i){i("0sYB")({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}})},pR7v:function(t,e,i){"use strict";i.d(e,"b",function(){return f}),i.d(e,"a",function(){return g});var n=i("m4/l"),r=i("AAkI"),a=i("OXm9"),o=i("hD5A"),s=i("aCit"),l=i("ZoDA"),u=i("Gg2j"),h=i("Wglt"),c=i("Qkdp"),p=i("Mtpk"),d=i("v9UT"),f=function(t){function e(){var e=t.call(this)||this;return e.className="ValueAxisDataItem",e.values.value={},e.values.endValue={},e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"value",{get:function(){return this.values.value.value},set:function(t){this.setValue("value",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endValue",{get:function(){return this.values.endValue.value},set:function(t){this.setValue("endValue",t)},enumerable:!0,configurable:!0}),e}(r.b),g=function(t){function e(){var e=t.call(this)||this;return e._stepDecimalPlaces=0,e._baseValue=0,e._adjustedStart=0,e._adjustedEnd=1,e._extremesChanged=!1,e._deltaMinMax=1,e.calculateTotals=!1,e.className="ValueAxis",e.axisFieldName="value",e.setPropertyValue("maxZoomFactor",1e3),e.setPropertyValue("extraMin",0),e.setPropertyValue("extraMax",0),e.setPropertyValue("strictMinMax",!1),e.setPropertyValue("maxPrecision",Number.MAX_VALUE),e.setPropertyValue("extraTooltipPrecision",0),e.keepSelection=!1,e.includeRangesInMinMax=!1,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.fillRule=function(t){var e=t.value,i=t.component;t.axisFill.disabled||(u.round(e/i.step/2,5)==Math.round(e/i.step/2)?t.axisFill.__disabled=!0:t.axisFill.__disabled=!1)},e.prototype.createDataItem=function(){return new f},e.prototype.createAxisBreak=function(){return new l.a},e.prototype.dataChangeUpdate=function(){this.clearCache(),this.keepSelection?(0!=this._start&&this.dispatchImmediately("startchanged"),1!=this._end&&this.dispatchImmediately("endchanged"),0==this._start&&1==this._end||this.dispatchImmediately("startendchanged")):0==this._start&&1==this._end||(this._start=0,this._end=1,this.dispatchImmediately("startendchanged")),this._maxZoomed=this._maxDefined,this._minZoomed=this._minDefined,this._maxAdjusted=this._maxDefined,this._minAdjusted=this._minDefined},e.prototype.processSeriesDataItems=function(){if(this.calculateTotals){var t=this.series.getIndex(0),e=t.startIndex;if(t.dataItems.length>0){e>0&&e--;var i=t.endIndex;i<t.dataItems.length&&i++;for(var n=function(t){var e={},i={};r.series.each(function(n){if(!n.excludeFromTotal){var r=n.dataItems.getIndex(t);r&&c.each(r.values,function(t){var n=r.values[t].workingValue;p.isNumber(n)&&(p.isNumber(e[t])?e[t]+=Math.abs(n):e[t]=Math.abs(n),p.isNumber(i[t])?i[t]+=n:i[t]=n)})}}),r.series.each(function(n){if(!n.excludeFromTotal){var r=n.dataItems.getIndex(t);r&&c.each(r.values,function(t){var n=r.values[t].workingValue;p.isNumber(n)&&(r.setCalculatedValue(t,e[t],"total"),r.setCalculatedValue(t,100*n/e[t],"totalPercent"),r.setCalculatedValue(t,i[t],"sum"))})}})},r=this,a=e;a<i;++a)n(a)}}},e.prototype.validate=function(){this.axisLength<=0||(t.prototype.validate.call(this),this.getMinMax(),this.fixAxisBreaks(),this.calculateZoom(),this.validateAxisElements(),this.validateAxisRanges(),this.validateBreaks(),this.hideUnusedDataItems(),this.renderer.invalidateLayout())},e.prototype.calculateZoom=function(){if(p.isNumber(this.min)&&p.isNumber(this.max)){var t=this.positionToValue(this.start),e=this.positionToValue(this.end),i=this.adjustDifference(t,e),n=this.adjustMinMax(t,e,i,this._gridCount,!0),r=d.decimalPlaces(n.step);this._stepDecimalPlaces=r,t=u.round(t,r),e=u.round(e,r);var a=(n=this.adjustMinMax(t,e,i,this._gridCount,!0)).step;if(this.syncWithAxis){var o=this.getCache(t+"-"+e);p.isNumber(o)&&(a=o)}else t=n.min,e=n.max;this._minZoomed==t&&this._maxZoomed==e&&this._step==a||(this._minZoomed=t,this._maxZoomed=e,this._step=a,this.dispatchImmediately("selectionextremeschanged"))}},e.prototype.validateAxisElements=function(){var t=this;if(p.isNumber(this.max)&&p.isNumber(this.min)){var e=this.minZoomed-2*this._step;if(this.logarithmic)Math.log(this.max)*Math.LOG10E-Math.log(this.min)*Math.LOG10E>1?e=Math.pow(10,Math.log(this.min)*Math.LOG10E):0==(e=Math.floor(this.minZoomed/this._step)*this._step)&&(e=this.minZoomed);else e=Math.floor(e/this._step)*this._step;var i=this._maxZoomed+this._step;this.resetIterators();for(var n=this._dataItemsIterator,r=0;e<=i;){if(!this.isInBreak(e)){var a=n.find(function(t){return t.value===e});a.__disabled&&(a.__disabled=!1),this.appendDataItem(a),a.axisBreak=void 0,a.value!=e&&(a.value=e,a.text=this.formatLabel(e),a.label&&a.label.invalid&&a.label.validate(),a.value>=this.min&&a.value<=this.max&&a.label&&("Y"==this.axisLetter&&a.label.measuredWidth>this.ghostLabel.measuredWidth||"X"==this.axisLetter&&a.label.measuredHeight>this.ghostLabel.measuredHeight)&&(this.ghostLabel.text=a.label.currentText,this.ghostLabel.validate())),this.validateDataElement(a)}if(r++,this.logarithmic)Math.log(this.max)*Math.LOG10E-Math.log(this.min)*Math.LOG10E>1?e=Math.pow(10,Math.log(this.min)*Math.LOG10E+r):e+=this._step;else e+=this._step;var o=Math.pow(10,Math.floor(Math.log(Math.abs(this._step))*Math.LOG10E));if(o<1){var s=Math.round(Math.abs(Math.log(Math.abs(o))*Math.LOG10E))+2;e=u.round(e,s)}}var l=this._axisBreaks;if(l){var c=this.renderer;h.each(l.iterator(),function(e){if(e.breakSize>0&&u.getDistance(e.startPoint,e.endPoint)>c.minGridDistance)for(var i=e.adjustedMin;i<=e.adjustedMax;){if(i>=e.adjustedStartValue&&i<=e.adjustedEndValue){var r=n.find(function(t){return t.value===i});r.__disabled&&(r.__disabled=!1),t.appendDataItem(r),r.axisBreak=e,r.value!=i&&(r.value=i,r.text=t.formatLabel(i),r.label&&r.label.invalid&&r.label.validate()),t.validateDataElement(r)}i+=e.adjustedStep}})}}},e.prototype.validateDataElement=function(e){t.prototype.validateDataElement.call(this,e),e.itemIndex=this._axisItemCount,this._axisItemCount++;var i=this.renderer,n=e.value,r=e.endValue,a=this.valueToPosition(n);e.position=a;var o=a,s=this.valueToPosition(n+this._step);p.isNumber(r)&&(s=o=this.valueToPosition(r)),e.point=i.positionToPoint(a);var l=e.tick;l&&!l.disabled&&i.updateTickElement(l,a,o);var u=e.grid;u&&!u.disabled&&i.updateGridElement(u,a,o);var h=e.label;h&&!h.disabled&&i.updateLabelElement(h,a,o);var c=e.axisFill;c&&!c.disabled&&(i.updateFillElement(c,a,s),e.isRange||this.fillRule(e)),e.bullet&&i.updateBullet(e.bullet,a,o);var d=e.mask;d&&i.updateFillElement(d,a,s)},e.prototype.formatLabel=function(t){return this.numberFormatter.format(t)},Object.defineProperty(e.prototype,"basePoint",{get:function(){var t=this.baseValue,e=this.valueToPosition(t);return this.renderer.positionToPoint(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"baseValue",{get:function(){var t=this._baseValue;return this.logarithmic&&(t=this.min),this._adapterO?this._adapterO.apply("baseValue",t):t},set:function(t){this._baseValue=t,this.invalidateLayout(),this.invalidateSeries()},enumerable:!0,configurable:!0}),e.prototype.anyToPosition=function(t){return this.valueToPosition(t)},e.prototype.valueToPoint=function(t){var e=this.valueToPosition(t),i=this.renderer.positionToPoint(e),n=this.renderer.positionToAngle(e);return{x:i.x,y:i.y,angle:n}},e.prototype.anyToPoint=function(t){return this.valueToPoint(t)},e.prototype.valueToPosition=function(t){if(p.isNumber(t)){var e=this.min,i=this.max;if(p.isNumber(e)&&p.isNumber(i)){var n=this._difference,r=this._axisBreaks;r&&r.length>0&&h.eachContinue(r.iterator(),function(n){var r=n.adjustedStartValue,a=n.adjustedEndValue;if(p.isNumber(r)&&p.isNumber(a)){if(t<r)return!1;if(u.intersect({start:r,end:a},{start:e,end:i})){r=Math.max(r,e),a=Math.min(a,i);var o=n.breakSize;t>a?e+=(a-r)*(1-o):t<r||(t=r+(t-r)*o)}}return!0});return this.logarithmic?(Math.log(t)*Math.LOG10E-Math.log(this.min)*Math.LOG10E)/(Math.log(this.max)*Math.LOG10E-Math.log(this.min)*Math.LOG10E):(t-e)/n}}return 0},e.prototype.invalidateLabels=function(){t.prototype.invalidateLabels.call(this),this.dataItems&&(this.dataItems.each(function(t){t.value=void 0}),this.invalidate())},e.prototype.positionToValue=function(t){t=u.round(t,10);var e=this.min,i=this.max;if(p.isNumber(e)&&p.isNumber(i)){var n=i-e,r=null,a=this._axisBreaks;return a&&a.length>0&&h.eachContinue(a.iterator(),function(a){var o=a.startPosition,s=a.endPosition,l=a.adjustedStartValue,h=a.adjustedEndValue;if(p.isNumber(l)&&p.isNumber(h)){if(l>i)return!1;if(u.intersect({start:l,end:h},{start:e,end:i})){l=u.max(l,e),h=u.min(h,i);var c=a.breakSize;if(n-=(h-l)*(1-c),t>s)e+=(h-l)*(1-c);else if(!(t<o))return r=l+(t-o)/(s-o)*(h-l),!1}return!0}}),p.isNumber(r)||(r=this.logarithmic?Math.pow(Math.E,(t*(Math.log(this.max)*Math.LOG10E-Math.log(this.min)*Math.LOG10E)+Math.log(this.min)*Math.LOG10E)/Math.LOG10E):t*n+e),r}},e.prototype.xToValue=function(t){return this.positionToValue(this.pointToPosition({x:t,y:0}))},e.prototype.yToValue=function(t){return this.positionToValue(this.pointToPosition({x:0,y:t}))},e.prototype.pointToPosition=function(t){return this.renderer instanceof a.a?1-this.renderer.pointToPosition(t):this.renderer.pointToPosition(t)},e.prototype.animateMinMax=function(t,e){return this.animate([{property:"_minAdjusted",from:this._minAdjusted,to:t},{property:"_maxAdjusted",from:this._maxAdjusted,to:e}],this.rangeChangeDuration,this.rangeChangeEasing)},e.prototype.getMinMax=function(){var t=this;this.updateGridCount();var e=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;if(p.isNumber(this._minDefined)&&p.isNumber(this._maxDefined)||(this.series.each(function(n){if(!n.ignoreMinMax){var r=n.min(t);p.isNumber(r)&&r<e&&(e=r);var a=n.max(t);p.isNumber(a)&&a>i&&(i=a)}}),this.includeRangesInMinMax&&this.axisRanges.each(function(t){if(!t.ignoreMinMax){var n=u.min(t.value,t.endValue),r=u.max(t.value,t.endValue);(n<e||!p.isNumber(e))&&(e=n),(r>i||!p.isNumber(i))&&(i=r)}})),this.logarithmic&&e<=0)throw Error("Logarithmic value axis can not have values <= 0.");if(0==e&&0==i&&(i=.9,e=-.9),p.isNumber(this._minDefined)&&(e=this._minDefined),p.isNumber(this._maxDefined)&&(i=this._maxDefined),this._adapterO&&(e=this._adapterO.apply("min",e)),this._adapterO&&(i=this._adapterO.apply("max",i)),p.isNumber(e)&&p.isNumber(i)){this._minReal=e,this._maxReal=i,e==Number.POSITIVE_INFINITY&&(e=void 0),i==Number.NEGATIVE_INFINITY&&(i=void 0);var n=this.adjustDifference(e,i);if(e=this.fixMin(e),(i=this.fixMax(i))-e<=1/Math.pow(10,15)){if(i-e!=0)this._deltaMinMax=(i-e)/2;else{var r=Math.log(Math.abs(i))*Math.LOG10E,a=Math.pow(10,Math.floor(r));a/=10,this._deltaMinMax=a}e-=this._deltaMinMax,i+=this._deltaMinMax}e-=(i-e)*this.extraMin,i+=(i-e)*this.extraMax;var o=this.strictMinMax;p.isNumber(this._maxDefined)&&(o=!0);var s=this.adjustMinMax(e,i,n,this._gridCount,o);if(e=s.min,n=(i=s.max)-e,s=this.adjustMinMax(e,i,i-e,this._gridCount,!0),e=s.min,i=s.max,this.strictMinMax&&(e=p.isNumber(this._minDefined)?this._minDefined:this._minReal,(i=p.isNumber(this._maxDefined)?this._maxDefined:this._maxReal)-e<=1e-8&&(e-=this._deltaMinMax,i+=this._deltaMinMax),e-=(i-e)*this.extraMin,i+=(i-e)*this.extraMax),this._adapterO&&(e=this._adapterO.apply("min",e)),this._adapterO&&(i=this._adapterO.apply("max",i)),this._step=s.step,(this._minAdjusted!=e||this._maxAdjusted!=i)&&p.isNumber(e)&&p.isNumber(i)){var l=this._minMaxAnimation;if(this._extremesChanged&&p.isNumber(this._minAdjusted)&&p.isNumber(this._maxAdjusted)&&this.inited){if(l&&!l.isFinished()&&this._finalMax==i&&this._finalMin==e)return;this._finalMin=e,this._finalMax=i,(l=this.animateMinMax(e,i))&&!l.isFinished()?(l.events.on("animationprogress",this.validateDataItems,this),l.events.on("animationended",function(){t.series.each(function(t){t.validate()}),t.validateDataItems(),t.handleSelectionExtremesChange()}),this._minMaxAnimation=l):this.series.each(function(t){t.validate()}),this.validateDataItems(),this.dispatchImmediately("extremeschanged"),this.handleSelectionExtremesChange()}else{if(l&&!l.isFinished()&&this._finalMax==i&&this._finalMin==e)return;this._minAdjusted=e,this._maxAdjusted=i,this._finalMin=e,this._finalMax=i,this.invalidateDataItems(),this.dispatchImmediately("extremeschanged")}}this._extremesChanged=!1,this._difference=this.adjustDifference(e,i)}},e.prototype.fixMin=function(t){return t},e.prototype.fixMax=function(t){return t},e.prototype.adjustMinMax=function(t,e,i,n,r){n<=1&&(n=1),n=Math.round(n);var a=t,o=e;0===i&&(i=Math.abs(e));var s=Math.log(Math.abs(i))*Math.LOG10E,l=Math.pow(10,Math.floor(s)),h=l/=10;r&&(h=0),this.logarithmic?(t<=0&&(t=this.baseValue),t==1/0&&(t=1),e==-1/0&&(e=10),t=Math.pow(10,Math.floor(Math.log(Math.abs(t))*Math.LOG10E)),e=Math.pow(10,Math.ceil(Math.log(Math.abs(e))*Math.LOG10E))):(r?(t=Math.floor(t/l)*l,e=Math.ceil(e/l)*l):(t=Math.ceil(t/l)*l-h,e=Math.floor(e/l)*l+h),t<0&&a>=0&&(t=0),e>0&&o<=0&&(e=0)),s=Math.log(Math.abs(i))*Math.LOG10E,l=Math.pow(10,Math.floor(s)),l/=10;var c=Math.ceil(i/n/l)*l,p=Math.pow(10,Math.floor(Math.log(Math.abs(c))*Math.LOG10E)),d=Math.ceil(c/p);d>5?d=10:d<=5&&d>2&&(d=5),c=Math.ceil(c/(p*d))*p*d,this.maxPrecision<Number.MAX_VALUE&&c!=u.ceil(c,this.maxPrecision)&&(c=u.ceil(c,this.maxPrecision));var f=0;if(p<1&&(f=Math.round(Math.abs(Math.log(Math.abs(p))*Math.LOG10E))+1,c=u.round(c,f)),!this.logarithmic){var g=Math.floor(t/c);t=u.round(c*g,f);var y=void 0;(y=r?Math.floor(e/c):Math.ceil(e/c))==g&&y++,(e=u.round(c*y,f))<o&&(e+=c),t>a&&(t-=c)}return{min:t,max:e,step:c}},Object.defineProperty(e.prototype,"min",{get:function(){var t=this._minAdjusted;return p.isNumber(t)||(t=this._minDefined),t},set:function(t){this._minDefined!=t&&(this._minDefined=t,this.invalidate())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"minDefined",{get:function(){return this._minDefined},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxDefined",{get:function(){return this._maxDefined},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"extraMin",{get:function(){return this.getPropertyValue("extraMin")},set:function(t){this.setPropertyValue("extraMin",t)&&this.invalidateDataItems()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"extraMax",{get:function(){return this.getPropertyValue("extraMax")},set:function(t){this.setPropertyValue("extraMax",t)&&this.invalidateDataItems()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"step",{get:function(){return this._step},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"max",{get:function(){var t=this._maxAdjusted;return p.isNumber(t)||(t=this._maxDefined),t},set:function(t){this._maxDefined!=t&&(this._maxDefined=t,this.invalidate())},enumerable:!0,configurable:!0}),e.prototype.registerSeries=function(e){return new o.c([t.prototype.registerSeries.call(this,e),e.events.on("extremeschanged",this.handleExtremesChange,this,!1),e.events.on("selectionextremeschanged",this.handleSelectionExtremesChange,this,!1),this.events.on("extremeschanged",e.invalidate,e,!1)])},e.prototype.handleSelectionExtremesChange=function(){var t,e,i=this,n=!0;if(h.each(this.series.iterator(),function(r){if(!r.ignoreMinMax&&!r.isHidden){r.visible&&!r.isHiding&&(n=!1);var a=r.selectionMin(i),o=r.selectionMax(i);p.isNumber(a)&&(!p.isNumber(t)||a<t)&&(t=a),p.isNumber(o)&&(!p.isNumber(e)||o>e)&&(e=o)}}),this.includeRangesInMinMax&&this.axisRanges.each(function(t){if(!t.ignoreMinMax){var i=u.min(t.value,t.endValue),n=u.max(t.value,t.endValue);i<e&&(e=i),n>e&&(e=n)}}),p.isNumber(this._minDefined)?t=this.strictMinMax?this._minDefined:this.min:this.strictMinMax&&(t=this._minReal),p.isNumber(this._maxDefined)?e=this.strictMinMax?this._maxDefined:this.max:this.strictMinMax&&(e=this._maxReal),t==e){t-=this._deltaMinMax,e+=this._deltaMinMax;var r=this.adjustMinMax(t,e,0,this._gridCount,this.strictMinMax);t=r.min,e=r.max}var a=this.adjustDifference(t,e),o=this.adjustMinMax(t,e,a,this._gridCount);t=o.min,e=o.max,t-=(e-t)*this.extraMin,e+=(e-t)*this.extraMax,t=u.fitToRange(t,this.min,this.max),e=u.fitToRange(e,this.min,this.max),a=this.adjustDifference(t,e),o=this.adjustMinMax(t,e,a,this._gridCount,!0),t=o.min,e=o.max,this.strictMinMax&&(t=u.max(t,this._minDefined),e=u.min(e,this._maxDefined));var s=o.step;this.syncWithAxis&&(o=this.syncAxes(t,e,s),t=o.min,e=o.max,this.invalidate()),s=o.step,this._difference=this.adjustDifference(this.min,this.max);var l=this.valueToPosition(t),c=this.valueToPosition(e);n&&!this.syncWithAxis&&(l=0,c=1);var d=0;this.syncWithAxis?(d=5,this.setCache(t+"-"+e,s)):(this._step=s,this._minZoomed=t,this._maxZoomed=e),this.keepSelection||this.zoom({start:l,end:c},!1,!1,d)},Object.defineProperty(e.prototype,"strictMinMax",{get:function(){return this.getPropertyValue("strictMinMax")},set:function(t){this.setPropertyValue("strictMinMax",t)&&this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"logarithmic",{get:function(){return this.getPropertyValue("logarithmic")},set:function(t){this.setPropertyValue("logarithmic",t)&&this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"keepSelection",{get:function(){return this.getPropertyValue("keepSelection")},set:function(t){this.setPropertyValue("keepSelection",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"includeRangesInMinMax",{get:function(){return this.getPropertyValue("includeRangesInMinMax")},set:function(t){this.setPropertyValue("includeRangesInMinMax",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxPrecision",{get:function(){return this.getPropertyValue("maxPrecision")},set:function(t){this.setPropertyValue("maxPrecision",t)&&this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"extraTooltipPrecision",{get:function(){return this.getPropertyValue("extraTooltipPrecision")},set:function(t){this.setPropertyValue("extraTooltipPrecision",t)&&this.invalidate()},enumerable:!0,configurable:!0}),e.prototype.handleExtremesChange=function(){var t=this;if(this._extremesChanged=!0,this.getMinMax(),this.ghostLabel){this.dataItems.each(function(e){e.label&&e.label.pixelWidth>0&&(t.ghostLabel.text=e.label.currentText)})}},e.prototype.getX=function(t,e,i,n,r){return this.renderer.positionToPoint(this.getPositionX(t,e,i,n,r)).x},e.prototype.getPositionX=function(t,e,i,n,r){var a=t.getWorkingValue(e);p.hasValue(n)||(n="valueX");var o=t.getValue(n,"stack");p.isNumber(a)||(a=this.baseValue,this.logarithmic&&o>0&&(a=0));var s=this.valueToPosition(a+o);return r&&(s=u.fitToRange(s,r.start,r.end)),s},e.prototype.getY=function(t,e,i,n,r){return this.renderer.positionToPoint(this.getPositionY(t,e,i,n,r)).y},e.prototype.getPositionY=function(t,e,i,n,r){var a=t.getWorkingValue(e);p.hasValue(n)||(n="valueY");var o=t.getValue(n,"stack");p.isNumber(a)||(a=this.baseValue,this.logarithmic&&o>0&&(a=0));var s=this.valueToPosition(a+o);return r&&(s=u.fitToRange(s,r.start,r.end)),s},e.prototype.getAngle=function(t,e,i,n,r){var a=t.getWorkingValue(e),o=t.getValue(n,"stack");p.isNumber(a)||(a=this.baseValue);var s=this.valueToPosition(a+o);return r&&(s=u.fitToRange(s,r.start,r.end)),this.positionToAngle(s)},e.prototype.getAnyRangePath=function(t,e,i){var n=this.valueToPosition(t),r=this.valueToPosition(e);return this.getPositionRangePath(n,r)},e.prototype.getTooltipText=function(t){var e=u.round(this.positionToValue(t),this._stepDecimalPlaces+this.extraTooltipPrecision),i=this.tooltip.numberFormatter.format(e);return this._adapterO?this._adapterO.apply("getTooltipText",i):i},e.prototype.zoomToValues=function(t,e,i,n){var r=(t-this.min)/(this.max-this.min),a=(e-this.min)/(this.max-this.min);this.zoom({start:r,end:a},i,n)},Object.defineProperty(e.prototype,"minZoomed",{get:function(){return this.syncWithAxis?this._minZoomed:u.max(this.min,this._minZoomed)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"maxZoomed",{get:function(){return this.syncWithAxis?this._maxZoomed:u.min(this.max,this._maxZoomed)},enumerable:!0,configurable:!0}),e.prototype.fixAxisBreaks=function(){var e=this;t.prototype.fixAxisBreaks.call(this);var i=this._axisBreaks;i&&i.length>0&&i.each(function(t){var i=t.adjustedStartValue,n=t.adjustedEndValue,r=n-i,a=Math.ceil(r*t.breakSize)*e._gridCount/(e.max-e.min),o=e.adjustMinMax(i,n,r,a,!0);t.adjustedStep=o.step,t.adjustedMin=o.min,t.adjustedMax=o.max}),this._difference=this.adjustDifference(this.min,this.max)},e.prototype.getPositionLabel=function(t){var e=this.positionToValue(t);return this.numberFormatter.format(e)},e.prototype.showTooltipAt=function(t){this.showTooltipAtPosition(this.valueToPosition(t))},e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.min=e.min,this.max=e.max,this.calculateTotals=e.calculateTotals,this._baseValue=e.baseValue},Object.defineProperty(e.prototype,"syncWithAxis",{get:function(){return this.getPropertyValue("syncWithAxis")},set:function(t){var e=this;this.setPropertyValue("syncWithAxis",t,!0)&&t&&(this._disposers.push(t.events.on("extremeschanged",this.handleSelectionExtremesChange,this,!1)),this._disposers.push(t.events.on("selectionextremeschanged",this.handleSelectionExtremesChange,this,!1)),this.events.on("shown",this.handleSelectionExtremesChange,this,!1),this.events.on("maxsizechanged",function(){e.clearCache(),e._disposers.push(s.c.events.once("exitframe",function(){e.handleSelectionExtremesChange()}))},this,!1))},enumerable:!0,configurable:!0}),e.prototype.syncAxes=function(t,e,i){var n=this.syncWithAxis;if(n){p.isNumber(t)||(t=this.min),p.isNumber(e)||(e=this.max),p.isNumber(i)||(i=this._step);var r=Math.round((n.maxZoomed-n.minZoomed)/n.step),a=Math.round((e-t)/i);if(p.isNumber(r)&&p.isNumber(a))for(var o=!1,s=0,l=.01*(e-t),u=t,h=e,c=i;1!=o;)if(o=this.checkSync(u,h,c,r),++s>1e3&&(o=!0),o)t=u,e=h,i=c;else{s/3==Math.round(s/3)?u=t-l*s:h=e+l*s;var d=this.adjustMinMax(u,h,h-u,this._gridCount,!0);u=d.min,h=d.max,c=d.step}}return{min:t,max:e,step:i}},e.prototype.checkSync=function(t,e,i,n){for(var r=(e-t)/i,a=1;a<n;a++)if(u.round(r/a,1)==n||r*a==n)return!0;return!1},e.prototype.processConfig=function(e){e&&p.hasValue(e.syncWithAxis)&&p.isString(e.syncWithAxis)&&(this.map.hasKey(e.syncWithAxis)?e.syncWithAxis=this.map.getKey(e.syncWithAxis):(this.processingErrors.push('[ValueAxis] No axis with id "'+e.syncWithAxis+'" found for `syncWithAxis`'),delete e.xAxis)),t.prototype.processConfig.call(this,e)},e}(r.a);s.c.registeredClasses.ValueAxis=g,s.c.registeredClasses.ValueAxisDataItem=f},pVcl:function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},pjXm:function(t,e,i){"use strict";e.a=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];r.a.verbose&&console&&console.log.apply(console,Object(n.f)(t))},e.b=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];console&&console.warn.apply(console,Object(n.f)(t))};var n=i("m4/l"),r=i("Q4nc")},pkYH:function(t,e,i){var n=i("0sYB"),r=Math.floor,a=Math.log,o=Math.LOG2E;n({target:"Math",stat:!0},{clz32:function(t){return(t>>>=0)?31-r(a(t+.5)*o):32}})},pzs1:function(t,e,i){"use strict";i.d(e,"a",function(){return o});var n=i("58Sn"),r=i("Qkdp"),a=i("Mtpk"),o=function(){function t(t){this._isDisposed=!1,this._x=0,this._y=0,this._rotationY=0,this._rotationX=0,this._rotation=0,this._scale=1,this.node="string"==typeof t?document.createElementNS(n.a,t):t}return t.prototype.removeNode=function(){this.node&&this.node.parentNode&&this.node.parentNode.removeChild(this.node)},Object.defineProperty(t.prototype,"transformString",{get:function(){if(this.node)return this._transformString},enumerable:!0,configurable:!0}),t.prototype.transform=function(){var t="translate("+this._x+","+this._y+")";if(1!=this._scale&&(t+=(t?" ":"")+"scale("+this._scale+")"),0!=this._rotation){var e="rotate("+this._rotation+")";this._rotationX&&this._rotationY&&(e="rotate("+this._rotation+" "+this._rotationX+" "+this._rotationY+")"),t+=(t?" ":"")+e}this._transformString=t,this.node.setAttribute("transform",t)},t.prototype.getBBox=function(){var t={width:0,height:0,x:0,y:0};if(this.node&&this.node.parentNode)try{var e=this.node.getBBox();t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height}catch(t){}return t},t.prototype.moveTo=function(t){if(t){var e=t.x,i=t.y;this._x==e&&this._y==i||(this._x=e,this._y=i,this.transform())}},Object.defineProperty(t.prototype,"content",{get:function(){return this.node.innerHTML||""},set:function(t){this.node.innerHTML=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textContent",{get:function(){return this.node.textContent||""},set:function(t){this.node.textContent=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"x",{get:function(){return this._x},set:function(t){this._x!=t&&(this._x=t,this.transform())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._y},set:function(t){this._y!=t&&(this._y=t,this.transform())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rotation",{get:function(){return this._rotation},set:function(t){this._rotation!=t&&(this._rotation=t,this.transform())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rotationX",{get:function(){return this._rotationX},set:function(t){this._rotationX!=t&&(this._rotationX=t,this.transform())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rotationY",{get:function(){return this._rotationY},set:function(t){this._rotationY!=t&&(this._rotationY=t,this.transform())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"scale",{get:function(){return this._scale},set:function(t){this._scale!=t&&(this._scale=t,this.transform())},enumerable:!0,configurable:!0}),t.prototype.removeAttr=function(t){this.node.removeAttribute(t)},t.prototype.attr=function(t){var e=this;return r.each(t,function(t,i){a.hasValue(i)?e.node.setAttribute(t,i):e.node.removeAttribute(t)}),this},t.prototype.getAttr=function(t){return this.node.getAttribute(t)},t.prototype.attrNS=function(t,e,i){return this.node.setAttributeNS(t,e,i),this},t.prototype.getAttrNS=function(t,e){return this.node.getAttributeNS(t,e)},t.prototype.removeStyle=function(t){delete this.node.style[t]},t.prototype.getStyle=function(t){return this.node.style[t]},t.prototype.addStyle=function(t){var e=this;return r.each(t,function(t,i){a.hasValue(i)?e.node.style[t]=i:e.removeStyle(t)}),this},t.prototype.addClass=function(t){n.f(this.node,t)},t.prototype.removeClass=function(t){n.x(this.node,t)},t.prototype.setClass=function(t){this.node.setAttribute("class",t)},t.prototype.removeChildNodes=function(){for(;this.node.childNodes.length>0;)this.node.removeChild(this.node.firstChild)},t.prototype.isDisposed=function(){return this._isDisposed},t.prototype.dispose=function(){this.removeNode()},t}()},q8hm:function(t,e,i){var n=i("RjhM");t.exports=/(iphone|ipod|ipad).*applewebkit/i.test(n)},qCRI:function(t,e,i){"use strict";i.d(e,"a",function(){return n});var n=function(){function t(){}return t.grab=[{property:"cursor",value:"move"},{property:"cursor",value:"grab"},{property:"cursor",value:"-webkit-grab"}],t.grabbing=[{property:"cursor",value:"move"},{property:"cursor",value:"grabbing"},{property:"cursor",value:"-webkit-grabbing"}],t.pointer=[{property:"cursor",value:"pointer"}],t.default=[{property:"cursor",value:"default"}],t.horizontalResize=[{property:"cursor",value:"ew-resize"}],t.verticalResize=[{property:"cursor",value:"ns-resize"}],t.notAllowed=[{property:"cursor",value:"not-allowed"}],t}()},qJno:function(t,e,i){"use strict";var n=i("m4/l"),r=i("58Sn"),a=i("MIZb"),o=i("+qIf"),s=i("hD5A"),l=new o.a,u=i("x79X"),h=i("vMqJ"),c=i("zhwk"),p=i("P/bD"),d=i("/IEW"),f=i("WYhe"),g=i("v9UT"),y=i("Wglt"),m=i("Mtpk");i.d(e,"a",function(){return v});var v=function(t){function e(){var e=t.call(this)||this;return e.adapter=new u.a(e),e.closeDelay=1e3,e.closeOnClick=!0,e._language=new s.d,e._menuTag="ul",e._itemTag="li",e._labelTag="a",e._iconTag="img",e._classPrefix="amexport",e._defaultStyles=!0,e._align="right",e._verticalAlign="top",e._tabindex=0,e._ignoreNextClose=!1,e._items=[{label:"...",menu:[{label:"Image",menu:[{type:"png",label:"PNG"},{type:"jpg",label:"JPG"},{type:"svg",label:"SVG"},{type:"pdf",label:"PDF"}]},{label:"Data",menu:[{type:"json",label:"JSON"},{type:"csv",label:"CSV"},{type:"xlsx",label:"XLSX"},{type:"html",label:"HTML"},{type:"pdfdata",label:"PDF"}]},{label:"Print",type:"print"}]}],e.className="ExportMenu",e._disposers.push(e._language),e.invalidate(),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.validate=function(){this.draw(),t.prototype.validate.call(this)},e.prototype.draw=function(){var t=this;this._element?(this._element.innerHTML="",this._element.className=this.getMenuItemClass(0)):this._element=this.createMenuElement(0),this.defaultStyles&&(this._element.style.display="none"),m.getValue(this._container).appendChild(this._element);for(var e=this.adapter.apply("items",{items:this._items}).items,i=e.length,n=0;n<i;n++)this.drawBranch(this._element,e[n],0);this._element=this.adapter.apply("menuElement",{menuElement:this._element}).menuElement,this._disposers.push(Object(c.b)().body.events.on("down",function(e){e.pointer.touch||(t._ignoreNextClose=!1),t.close()})),this._disposers.push(Object(c.b)().body.events.on("keyup",function(e){var i=f.b.getEventKey(e.event);switch(i){case"esc":t.close();break;case"up":case"down":case"left":case"right":t.moveSelection(i)}})),this.defaultStyles&&this.loadDefaultCSS()},e.prototype.drawBranch=function(t,e,i){var n=this;if(!0!==(e=this.adapter.apply("branch",{branch:e,level:i}).branch).unsupported){e.ascendants||(e.ascendants=new h.b);var r,a=e.type,o=this.createItemElement(i,a);e.icon?((r=this.createIconElement(i,a)).src=e.icon,e.label&&(r.title=e.label)):e.svg?(r=this.createSvgElement(i,a,e.svg),e.label&&(r.title=e.label)):(r=this.createLabelElement(i,a)).innerHTML=e.label?this.language.translate(e.label):"";var s=this.getReaderLabel(e,r.innerHTML);r.setAttribute("aria-label",s),o.appendChild(r),e.interactions=Object(c.b)().getInteraction(r),e.element=o,this.typeClickable(a)&&(e.interactions.events.on("hit",function(t){if(n.events.isEnabled("hit")){var i={type:"hit",event:t.event,target:n,branch:e};n.events.dispatchImmediately("hit",i)}}),e.interactions.events.on("keyup",function(t){if(f.b.isKey(t.event,"enter")&&n.events.isEnabled("enter")){var i={type:"enter",event:t.event,target:n,branch:e};n.events.dispatchImmediately("enter",i)}}));var l=this.getSubMenu(e);null!=l&&(e.interactions.events.on("keyup",function(t){f.b.isKey(t.event,"enter")&&(n.selectBranch(l[0]),n.setFocus(l[0]))}),e.interactions.events.on("hit",function(t){n.selectBranch(e)})),e.interactions.events.on("over",function(t){if(t.pointer.touch&&(n._ignoreNextClose=!0),n.selectBranch(e),n.events.isEnabled("over")){var i={type:"over",event:t.event,target:n,branch:e};n.events.dispatchImmediately("over",i)}}),e.interactions.events.on("out",function(t){if(t.pointer.touch||n.delayUnselectBranch(e),n.events.isEnabled("out")){var i={type:"out",event:t.event,target:n,branch:e};n.events.dispatchImmediately("out",i)}}),e.interactions.events.on("focus",function(t){n.selectBranch(e)}),e.interactions.events.on("blur",function(t){n.delayUnselectBranch(e)});var u=i+1;if(e.menu){for(var p=this.createMenuElement(u),d=e.menu.length,g=0;g<d;g++){var y=new h.b;e.menu[g].ascendants=y,e.ascendants.length&&y.copyFrom(e.ascendants),y.push(e),this.drawBranch(p,e.menu[g],u)}if(""==p.innerHTML)return;o.appendChild(p)}e.hidden&&this.hideBranch(e),e.id&&o.setAttribute("id",e.id),e.color&&(o.style.backgroundColor=e.color.hex),t.appendChild(o)}},e.prototype.createMenuElement=function(t){var e=document.createElement(this.menuTag);return e.className=this.getMenuItemClass(t),0===t&&e.setAttribute("role","menu"),e},e.prototype.getMenuItemClass=function(t){var e=this.classPrefix+"-menu "+this.classPrefix+"-menu-level-"+t;return 0===t&&(e+=" "+this.classPrefix+"-menu-root "+this.classPrefix+"-"+this.align+" "+this.classPrefix+"-"+this.verticalAlign),this.adapter.apply("menuClass",{className:e,level:t}).className},e.prototype.createItemElement=function(t,e){var i=document.createElement(this.itemTag),n=this.classPrefix+"-item "+this.classPrefix+"-item-level-"+t+" "+this.classPrefix+"-item-"+(e||"blank");return i.className=this.adapter.apply("itemClass",{className:n,level:t,type:e}).className,i},e.prototype.createLabelElement=function(t,e){var i=document.createElement(this.labelTag),n=this.classPrefix+"-label "+this.classPrefix+"-label-level-"+t+" "+this.classPrefix+"-item-"+(e||"blank");return this.typeClickable(e)&&(n+=" "+this.classPrefix+"-clickable"),i.className=this.adapter.apply("labelClass",{className:n,level:t,type:e}).className,i.setAttribute("tabindex",this.tabindex.toString()),i.setAttribute("role","menuitem"),i},e.prototype.createIconElement=function(t,e){var i=document.createElement(this.iconTag),n=this.classPrefix+"-icon "+this.classPrefix+"-icon-level-"+t+" "+this.classPrefix+"-item-"+(e||"blank");return this.typeClickable(e)&&(n+=" "+this.classPrefix+"-clickable"),i.className=this.adapter.apply("labelClass",{className:n,level:t,type:e}).className,i.setAttribute("tabindex",this.tabindex.toString()),i.setAttribute("role","menuitem"),i},e.prototype.createSvgElement=function(t,e,i){var n=(new DOMParser).parseFromString(i,"image/svg+xml").documentElement,r=this.classPrefix+"-icon "+this.classPrefix+"-icon-level-"+t+" "+this.classPrefix+"-item-"+(e||"blank");return this.typeClickable(e)&&(r+=" "+this.classPrefix+"-clickable"),n.setAttribute("class",this.adapter.apply("labelClass",{className:r,level:t,type:e}).className),n.setAttribute("tabindex",this.tabindex.toString()),n.setAttribute("role","menuitem"),n},e.prototype.dispose=function(){this._disposed||(t.prototype.dispose.call(this),this._element&&this._element.parentNode&&this._element.parentNode.removeChild(this._element))},e.prototype.typeClickable=function(t){return m.hasValue(t)},e.prototype.hasSubMenu=function(t){return!(!t.menu||!t.menu.length)},e.prototype.getSubMenu=function(t){if(t.menu&&t.menu.length)return t.menu},e.prototype.getReaderLabel=function(t,e){return e=g.stripTags(e),this.hasSubMenu(t)?e+=" ["+this.language.translate("Click, tap or press ENTER to open")+"]":"print"==t.type?e=this.language.translate("Click, tap or press ENTER to print."):this.typeClickable(t.type)&&(e=this.language.translate("Click, tap or press ENTER to export as %1.",void 0,e)),this.adapter.apply("rederLabel",{label:e,branch:t}).label},Object.defineProperty(e.prototype,"container",{get:function(){return this._container},set:function(t){this._container=t,this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"items",{get:function(){return this._items},set:function(t){this._items=t,this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tag",{set:function(t){this._menuTag=t,this._itemTag="ul"==t?"li":"div",this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"menuTag",{get:function(){return this.adapter.apply("menuTag",{tag:this._menuTag}).tag},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"itemTag",{get:function(){return this.adapter.apply("itemTag",{tag:this._itemTag}).tag},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"labelTag",{get:function(){return this.adapter.apply("labelTag",{tag:this._labelTag}).tag},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"iconTag",{get:function(){return this.adapter.apply("iconTag",{tag:this._iconTag}).tag},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"align",{get:function(){return this.adapter.apply("align",{align:this._align}).align},set:function(t){this._align=t,this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"verticalAlign",{get:function(){return this.adapter.apply("verticalAlign",{verticalAlign:this._verticalAlign}).verticalAlign},set:function(t){this._verticalAlign=t,this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"classPrefix",{get:function(){return this.adapter.apply("classPrefix",{classPrefix:this._classPrefix}).classPrefix},set:function(t){this._classPrefix=t,this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"defaultStyles",{get:function(){return this.adapter.apply("defaultStyles",{defaultStyles:this._defaultStyles}).defaultStyles},set:function(t){this._defaultStyles!=t&&(this._defaultStyles=t,t&&this.loadDefaultCSS()),this.invalidate()},enumerable:!0,configurable:!0}),e.prototype.loadDefaultCSS=function(){this._disposers.push(function(t){var e=t||"amexport",i=new a.a;return l.insertKeyIfEmpty(e,function(){var t=new s.c([new r.c("."+e+"-menu *",{"box-sizing":"border-box"}),new r.c("."+e+"-menu-level-0",{position:"absolute",top:"5px",right:"5px"}),new r.c("."+e+"-menu-level-0."+e+"-left",{right:"auto",left:"5px"}),new r.c("."+e+"-menu-level-0."+e+"-right",{right:"5px",left:"auto"}),new r.c("."+e+"-menu-level-0."+e+"-top",{top:"5px",bottom:"auto"}),new r.c("."+e+"-menu-level-0."+e+"-bottom",{top:"auto",bottom:"5px"}),new r.c("."+e+"-item."+e+"-item-level-0",{opacity:"0.3",width:"30px","min-height":"30px",transition:"all 100ms ease-in-out"}),new r.c("div:hover ."+e+"-item."+e+"-item-level-0, ."+e+"-item."+e+"-item-level-0.active",{opacity:"0.9"}),new r.c("."+e+"-item."+e+"-item-level-0 > a",{padding:"0","text-align":"center",overflow:"hidden"}),new r.c("."+e+"-item."+e+"-item-level-0:before",{display:"block"}),new r.c("."+e+"-item",{position:"relative",display:"block",opacity:"0","z-index":"1","border-radius":"3px","background-color":i.getFor("secondaryButton").hex,padding:"0",margin:"1px 1px 0 0",color:i.getFor("secondaryButton").alternative.hex,transition:"all 100ms ease-in-out, opacity 0.5s ease 0.5s"}),new r.c("."+e+"-left ."+e+"-item",{margin:"1px 0 0 1px"}),new r.c("."+e+"-item:hover, ."+e+"-item.active",{background:i.getFor("secondaryButtonHover").hex,color:i.getFor("secondaryButtonText").hex}),new r.c("."+e+"-item > ."+e+"-menu",{position:"absolute",top:"-1px",right:"0","margin-right":"100%"}),new r.c("."+e+"-left ."+e+"-item > ."+e+"-menu",{left:"0",right:"auto","margin-left":"100%","margin-right":"auto"}),new r.c("."+e+"-right ."+e+"-item > ."+e+"-menu",{left:"auto",right:"0","margin-left":"auto","margin-right":"100%"}),new r.c("."+e+"-top ."+e+"-item > ."+e+"-menu",{top:"-1px",bottom:"auto"}),new r.c("."+e+"-bottom ."+e+"-item > ."+e+"-menu",{top:"auto",bottom:"0"}),new r.c("."+e+"-item > ."+e+"-menu",{display:"none"}),new r.c("."+e+"-item:hover > ."+e+"-menu, ."+e+"-item.active > ."+e+"-menu",{display:"block"}),new r.c("."+e+"-item:hover > ."+e+"-menu > ."+e+"-item, ."+e+"-item.active > ."+e+"-menu > ."+e+"-item",{opacity:"1"}),new r.c("."+e+"-menu",{display:"block","list-style":"none",margin:"0",padding:"0"}),new r.c("."+e+"-label",{display:"block",cursor:"default",padding:"0.5em 1em"}),new r.c("."+e+"-icon",{display:"block",cursor:"default",padding:"0.2em 0.4em",width:"1.2em",height:"1.2em","min-width":"32px","min-height":"32px",margin:"auto auto","border-radius":"3px"}),new r.c("."+e+"-item-level-0 > ."+e+"-icon",{padding:"0.1em 0.2em"}),new r.c("."+e+"-clickable",{cursor:"pointer"})]);return new s.a(function(){l.removeKey(e),t.dispose()})}).increment()}(this.classPrefix)),this._element&&(this._element.style.display="")},Object.defineProperty(e.prototype,"tabindex",{get:function(){return this.adapter.apply("tabindex",{tabindex:this._tabindex}).tabindex},set:function(t){this._tabindex=t,this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"language",{get:function(){var t=this,e=this._language.get();return null==e&&(e=new p.a,this._language.set(e,e.events.on("localechanged",function(e){t.invalidate()}))),e},set:function(t){var e=this;this._language.set(t,t.events.on("localechanged",function(t){e.invalidate()})),this.invalidate()},enumerable:!0,configurable:!0}),e.prototype.close=function(){var t=this;if(this._ignoreNextClose)this._ignoreNextClose=!1;else{if(this.closeOnClick&&(this._element.style.pointerEvents="none",setTimeout(function(){t._element.style.pointerEvents="auto"},100)),this._currentSelection&&(this.setBlur(this._currentSelection),this._currentSelection=void 0),this._element)for(var e=this._element.getElementsByClassName("active"),i=e.length-1;i>=0;i--)e[i]&&r.x(e[i],"active");this.events.dispatchImmediately("closed",{type:"closed",target:this})}},e.prototype.selectBranch=function(t){var e=this;if(t.closeTimeout&&(this.removeDispose(t.closeTimeout),t.closeTimeout=void 0),r.f(t.interactions.element.parentElement,"active"),this._currentSelection&&this._currentSelection!==t&&this._currentSelection.ascendants&&y.each(y.concat(y.fromArray([this._currentSelection]),this._currentSelection.ascendants.iterator()),function(i){t.ascendants.contains(i)||t===i||e.unselectBranch(i,!0)}),y.each(t.ascendants.iterator(),function(t){t.closeTimeout&&(e.removeDispose(t.closeTimeout),t.closeTimeout=void 0),r.f(t.interactions.element.parentElement,"active")}),this._currentSelection=t,this.events.isEnabled("branchselected")){var i={type:"branchselected",target:this,branch:t};this.events.dispatchImmediately("branchselected",i)}},e.prototype.unselectBranch=function(t,e){if(r.x(t.interactions.element.parentElement,"active"),this._currentSelection==t&&(this._currentSelection=void 0),this.events.isEnabled("branchunselected")){var i={type:"branchunselected",target:this,branch:t};this.events.dispatchImmediately("branchunselected",i)}},e.prototype.delayUnselectBranch=function(t,e){var i=this;t.closeTimeout&&(this.removeDispose(t.closeTimeout),t.closeTimeout=void 0),t.closeTimeout=this.setTimeout(function(){i.unselectBranch(t,e)},this.closeDelay),!0!==e&&t.ascendants&&y.each(t.ascendants.iterator(),function(t){i.delayUnselectBranch(t,!0)})},e.prototype.moveSelection=function(t){if(this._currentSelection){var e;if("up"==t)e=this.getPrevSibling(this._currentSelection);else if("down"==t)e=this.getNextSibling(this._currentSelection);else if("left"==t&&"right"==this.align||"right"==t&&"left"==this.align){var i=this.getSubMenu(this._currentSelection);null!=i&&(e=i[0])}else("right"==t&&"right"==this.align||"left"==t&&"left"==this.align)&&(e=this.getParentItem(this._currentSelection));e&&e!==this._currentSelection&&(this.selectBranch(e),this.setFocus(e),this._currentSelection=e)}},e.prototype.getSiblings=function(t){var e=this.getParentItem(t);return e&&e.menu?e.menu:[]},e.prototype.getParentItem=function(t){return t.ascendants&&t.ascendants.length?t.ascendants.getIndex(t.ascendants.length-1):void 0},e.prototype.getNextSibling=function(t){var e=this.getSiblings(t);if(e.length>1){var i=e.indexOf(t)+1;return e[i=e.length==i?0:i].unsupported?this.getNextSibling(e[i]):e[i]}return t},e.prototype.getPrevSibling=function(t){var e=this.getSiblings(t);if(e.length>1){var i=e.indexOf(t)-1;return e[i=-1==i?e.length-1:i].unsupported?this.getPrevSibling(e[i]):e[i]}return t},e.prototype.setFocus=function(t){if(t.interactions)try{t.interactions.element.focus()}catch(t){}},e.prototype.setBlur=function(t){if(t.interactions)try{t.interactions.element.blur()}catch(t){}},e.prototype.hideBranch=function(t){t.element.style.display="none"},e.prototype.showBranch=function(t){t.element.style.display=""},e}(d.a)},qK31:function(t,e,i){var n=i("AzDz");t.exports=function(t){if(n(t))throw TypeError("The method doesn't accept regular expressions");return t}},qcEY:function(t,e,i){var n=i("0sYB"),r=i("5SyC");n({target:"Math",stat:!0,forced:r!=Math.expm1},{expm1:r})},quKg:function(t,e,i){"use strict";i.d(e,"b",function(){return p}),i.d(e,"a",function(){return d});var n=i("m4/l"),r=i("DXFp"),a=i("tjMS"),o=i("Puh1"),s=i("aCit"),l=i("Wglt"),u=i("v9UT"),h=i("Gg2j"),c=i("Mtpk"),p=function(t){function e(){var e=t.call(this)||this;return e.className="PieChartDataItem",e.applyTheme(),e}return Object(n.c)(e,t),e}(r.b),d=function(t){function e(){var e=t.call(this)||this;e.className="PieChart",e.innerRadius=0,e.radius=Object(a.c)(80),e.align="none",e.valign="none",e.startAngle=-90,e.endAngle=270;var i=e.seriesContainer;return i.isMeasured=!0,i.valign="middle",i.align="center",i.layout="absolute",i.width=void 0,i.height=void 0,e.chartContainer.minHeight=50,e.chartContainer.minWidth=50,e.chartContainer.events.on("maxsizechanged",e.updateRadius,e,!1),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),c.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Pie chart"))},e.prototype.validateLayout=function(){t.prototype.validateLayout.call(this),this.updateRadius()},e.prototype.handleSeriesAdded=function(e){t.prototype.handleSeriesAdded.call(this,e),this._chartPixelRadius=void 0,this.updateSeriesAngles()},e.prototype.updateSeriesAngles=function(){var t=this;this.series.each(function(e){e._startAngleInternal=t.startAngle,e._endAngleInternal=t.endAngle})},e.prototype.updateRadius=function(){var t=this.chartContainer,e=h.getArcRect(this.startAngle,this.endAngle,1),i={x:0,y:0,width:0,height:0},n=this.innerRadius;n instanceof a.a&&(i=h.getArcRect(this.startAngle,this.endAngle,n.value)),e=h.getCommonRectangle([e,i]);var r=Math.min(t.innerWidth/e.width,t.innerHeight/e.height);c.isNumber(r)||(r=0);var o=u.relativeRadiusToValue(this.radius,r),s=u.relativeRadiusToValue(this.innerRadius,r),p=(o-s)/this.series.length;o==this._chartPixelRadius&&s==this._chartPixelInnerRadius||(this._chartPixelRadius=o,this._chartPixelInnerRadius=s,l.each(l.indexed(this.series.iterator()),function(t){var e=t[0],i=t[1],n=s+u.relativeRadiusToValue(i.radius,o-s),r=s+u.relativeRadiusToValue(i.innerRadius,o-s);c.isNumber(n)||(n=s+p*(e+1)),c.isNumber(r)||(r=s+p*e),i.pixelRadius=n,i.pixelInnerRadius=r}),this.seriesContainer.definedBBox={x:o*e.x,y:o*e.y,width:o*e.width,height:o*e.height},this.seriesContainer.invalidateLayout(),this.bulletsContainer.x=this.seriesContainer.x,this.bulletsContainer.y=this.seriesContainer.y)},Object.defineProperty(e.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(t){this.setPercentProperty("radius",t,!0,!1,10,!1)&&this.invalidateLayout()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(t){this.setPercentProperty("innerRadius",t,!0,!1,10,!1)},enumerable:!0,configurable:!0}),e.prototype.createSeries=function(){return new o.a},Object.defineProperty(e.prototype,"startAngle",{get:function(){return this.getPropertyValue("startAngle")},set:function(t){this.setPropertyValue("startAngle",t)&&(this.updateRadius(),this.updateSeriesAngles())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"endAngle",{get:function(){return this.getPropertyValue("endAngle")},set:function(t){this.setPropertyValue("endAngle",t)&&(this.updateRadius(),this.updateSeriesAngles())},enumerable:!0,configurable:!0}),e}(r.a);s.c.registeredClasses.PieChart=d,s.c.registeredClasses.PieChartDataItem=p},qzbU:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("Vs7R"),a=i("aCit"),o=i("MIZb"),s=function(t){function e(){var e=t.call(this)||this;e.className="Tick";var i=new o.a;return e.fillOpacity=0,e.length=6,e.strokeOpacity=.2,e.stroke=i.getFor("grid"),e.isMeasured=!1,e.nonScalingStroke=!0,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"length",{get:function(){return this.disabled?0:this.getPropertyValue("length")},set:function(t){this.setPropertyValue("length",t,!0)},enumerable:!0,configurable:!0}),e}(r.a);a.c.registeredClasses.Tick=s},rCh7:function(t,e,i){var n=i("6aQQ"),r=i("DUr5");t.exports=function(t){return n(function(){return!!r[t]()||"​᠎"!="​᠎"[t]()||r[t].name!==t})}},"rhk+":function(t,e,i){var n=i("tHyI"),r=i("ScUe"),a=i("swFJ"),o=Math.ceil,s=function(t){return function(e,i,s){var l,u,h=String(a(e)),c=h.length,p=void 0===s?" ":String(s),d=n(i);return d<=c||""==p?h:(l=d-c,(u=r.call(p,o(l/p.length))).length>l&&(u=u.slice(0,l)),t?h+u:u+h)}};t.exports={start:s(!1),end:s(!0)}},ruXs:function(t,e,i){i("6WsA")("toStringTag")},s4go:function(t,e,i){"use strict";var n=i("0sYB"),r=i("3sMl"),a=i("hqo8"),o=i("7X7h"),s=i("EErT"),l=i("Ox5T"),u=i("gxUV").f;r&&n({target:"Object",proto:!0,forced:a},{__lookupGetter__:function(t){var e,i=o(this),n=s(t,!0);do{if(e=u(i,n))return e.get}while(i=l(i))}})},sB9f:function(t,e,i){var n=i("0sYB"),r=i("6aQQ"),a=i("7X7h"),o=i("Ox5T"),s=i("QKtu");n({target:"Object",stat:!0,forced:r(function(){o(1)}),sham:!s},{getPrototypeOf:function(t){return o(a(t))}})},sEiD:function(t,e,i){i("eygo")("Int16",function(t){return function(e,i,n){return t(this,e,i,n)}})},sSOU:function(t,e,i){"use strict";var n=i("Wqjq").charAt,r=i("SqFF"),a=i("vBfr"),o=r.set,s=r.getterFor("String Iterator");a(String,"String",function(t){o(this,{type:"String Iterator",string:String(t),index:0})},function(){var t,e=s(this),i=e.string,r=e.index;return r>=i.length?{value:void 0,done:!0}:(t=n(i,r),e.index+=t.length,{value:t,done:!1})})},sVTF:function(t,e,i){i("0sYB")({target:"Number",stat:!0},{isNaN:function(t){return t!=t}})},saPf:function(t,e,i){var n=i("swFJ"),r=/"/g;t.exports=function(t,e,i,a){var o=String(n(t)),s="<"+e;return""!==i&&(s+=" "+i+'="'+String(a).replace(r,"&quot;")+'"'),s+">"+o+"</"+e+">"}},sgPD:function(t,e,i){"use strict";var n=i("0sYB"),r=i("jnLg").end,a=i("rCh7")("trimEnd"),o=a?function(){return r(this)}:"".trimEnd;n({target:"String",proto:!0,forced:a},{trimEnd:o,trimRight:o})},swFJ:function(t,e){t.exports=function(t){if(void 0==t)throw TypeError("Can't call method on "+t);return t}},sxA1:function(t,e,i){"use strict";i.d(e,"a",function(){return c});var n=i("m4/l"),r=i("Tjl+"),a=i("vMqJ"),o=i("P7v+"),s=i("aCit"),l=i("Wglt"),u=i("Gg2j"),h=i("Mtpk"),c=function(t){function e(){var e=t.call(this)||this;return e._stops=new a.b,e._rotation=0,e.className="LinearGradient",e._stops.events.on("setIndex",e.validate,e),e._stops.events.on("inserted",e.validate,e),e.element=e.paper.addGroup("linearGradient"),e.id="gradient-"+s.c.getUniqueId(),e.element.attr({id:e.id}),e._disposers.push(e.element),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.validate=function(){var t=this,e=(this._rotation+90)*u.RADIANS,i=Math.round(50+50*Math.sin(e+Math.PI))+"%",n=Math.round(50+50*Math.cos(e))+"%",r=Math.round(50+50*Math.sin(e))+"%",a=Math.round(50+50*Math.cos(e+Math.PI))+"%",o=this.element;o.removeChildNodes(),o.attr({x1:i,x2:r,y1:n,y2:a}),l.each(l.indexed(this._stops.iterator()),function(e){var i=e[0],n=e[1],r=n.offset;h.isNumber(r)||(r=i/(t._stops.length-1));var a=t.paper.add("stop");h.hasValue(n.color)&&a.attr({"stop-color":n.color.toString()}),h.isNumber(n.opacity)&&a.attr({"stop-opacity":n.opacity}),h.isNumber(r)&&a.attr({offset:r}),o.add(a)})},e.prototype.clear=function(){this._stops.clear()},e.prototype.addColor=function(t,e,i){this._stops.push({color:t,opacity:e,offset:i})},Object.defineProperty(e.prototype,"stops",{get:function(){return this._stops},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"paper",{get:function(){return this._paper?this._paper:Object(o.b)()},set:function(t){this._paper!=t&&(this._paper=t,this.validate(),t.appendDef(this.element))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rotation",{get:function(){return this._rotation},set:function(t){this._rotation=t,this.validate()},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.stops.copyFrom(e.stops),this._rotation=e.rotation},e}(r.a);s.c.registeredClasses.LinearGradient=c},sxi3:function(t,e,i){var n=i("exNg");t.exports=function(t){var e=n(t);if(e<0)throw RangeError("The argument can't be less than 0");return e}},"t+NF":function(t,e,i){var n=i("3sMl"),r=i("6aQQ"),a=i("BAfC");t.exports=!n&&!r(function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a})},"t/IY":function(t,e,i){i("6WsA")("match")},tCdX:function(t,e,i){var n=i("0sYB"),r=i("vjgd"),a=i("0FA2");n({target:"Array",proto:!0},{fill:r}),a("fill")},tEse:function(t,e,i){"use strict";var n=i("UseD"),r=i("X/sl").filter,a=i("Nfo5"),o=n.aTypedArray,s=n.aTypedArrayConstructor;(0,n.exportTypedArrayMethod)("filter",function(t){for(var e=r(o(this),t,arguments.length>1?arguments[1]:void 0),i=a(this,this.constructor),n=0,l=e.length,u=new(s(i))(l);l>n;)u[n]=e[n++];return u})},tHyI:function(t,e,i){var n=i("exNg"),r=Math.min;t.exports=function(t){return t>0?r(n(t),9007199254740991):0}},tNpr:function(t,e,i){var n=i("6aQQ"),r=i("2xmP"),a="".split;t.exports=n(function(){return!Object("z").propertyIsEnumerable(0)})?function(t){return"String"==r(t)?a.call(t,""):Object(t)}:Object},tf09:function(t,e,i){var n=i("RjhM");t.exports=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(n)},tg9j:function(t,e,i){"use strict";var n=i("UseD"),r=i("tHyI"),a=i("Y8n3"),o=i("Nfo5"),s=n.aTypedArray;(0,n.exportTypedArrayMethod)("subarray",function(t,e){var i=s(this),n=i.length,l=a(t,n);return new(o(i,i.constructor))(i.buffer,i.byteOffset+l*i.BYTES_PER_ELEMENT,r((void 0===e?n:a(e,n))-l))})},tjMS:function(t,e,i){"use strict";i.d(e,"a",function(){return n}),e.c=function(t){return new n(t)},e.b=function(t){return t instanceof n};var n=function(){function t(t){this._value=t}return Object.defineProperty(t.prototype,"value",{get:function(){return this._value/100},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"percent",{get:function(){return this._value},enumerable:!0,configurable:!0}),t.prototype.toString=function(){return this._value+"%"},t}()},tqfd:function(t,e,i){i("eygo")("Uint8",function(t){return function(e,i,n){return t(this,e,i,n)}})},u5pl:function(t,e,i){"use strict";var n=i("0sYB"),r=i("saPf");n({target:"String",proto:!0,forced:i("v0oN")("italics")},{italics:function(){return r(this,"i","","")}})},uAB6:function(t,e,i){i("6WsA")("iterator")},uKH8:function(t,e,i){"use strict";var n=i("HnbP"),r=i("Kg2n"),a=[].slice,o={};t.exports=Function.bind||function(t){var e=n(this),i=a.call(arguments,1),s=function(){var n=i.concat(a.call(arguments));return this instanceof s?function(t,e,i){if(!(e in o)){for(var n=[],r=0;r<e;r++)n[r]="a["+r+"]";o[e]=Function("C,a","return new C("+n.join(",")+")")}return o[e](t,i)}(e,n.length,n):e.apply(t,n)};return r(e.prototype)&&(s.prototype=e.prototype),s}},uPlY:function(t,e,i){"use strict";var n=i("6aQQ"),r=i("rhk+").start,a=Math.abs,o=Date.prototype,s=o.getTime,l=o.toISOString;t.exports=n(function(){return"0385-07-25T07:06:39.999Z"!=l.call(new Date(-5e13-1))})||!n(function(){l.call(new Date(NaN))})?function(){if(!isFinite(s.call(this)))throw RangeError("Invalid time value");var t=this.getUTCFullYear(),e=this.getUTCMilliseconds(),i=t<0?"-":t>9999?"+":"";return i+r(a(t),i?6:4,0)+"-"+r(this.getUTCMonth()+1,2,0)+"-"+r(this.getUTCDate(),2,0)+"T"+r(this.getUTCHours(),2,0)+":"+r(this.getUTCMinutes(),2,0)+":"+r(this.getUTCSeconds(),2,0)+"."+r(e,3,0)+"Z"}:l},uWmK:function(t,e,i){"use strict";i.d(e,"b",function(){return w}),i.d(e,"c",function(){return O}),i.d(e,"a",function(){return T});var n=i("m4/l"),r=i("Y9w3"),a=i("A6AV"),o=i("vMqJ"),s=i("CnhP"),l=i("C6dT"),u=i("p9TX"),h=i("WYhe"),c=i("aCit"),p=i("zhwk"),d=i("tjMS"),f=i("MIZb"),g=i("v9UT"),y=i("Mtpk"),m=i("Gg2j"),v=i("Vs7R"),b=i("hD5A"),x=i("qCRI"),_=i("TGuK"),P=i("ISWh"),w=function(t){function e(){var e=t.call(this)||this;return e.childrenCreated=!1,e.className="LegendDataItem",e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"label",{get:function(){var t=this;if(!this._label){var e=this.component.labels.create();this._label=e,this.addSprite(e),this._disposers.push(e),e.parent=this.itemContainer,this._disposers.push(new b.b(function(){y.hasValue(t.component)&&t.component.labels.removeValue(e)}))}return this._label},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"color",{get:function(){return this.properties.color},set:function(t){this.setProperty("color",t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valueLabel",{get:function(){var t=this;if(!this._valueLabel){var e=this.component.valueLabels.create();this._valueLabel=e,this.addSprite(e),this._disposers.push(e),e.parent=this.itemContainer,this._disposers.push(new b.b(function(){y.hasValue(t.component)&&t.component.valueLabels.removeValue(e)}))}return this._valueLabel},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"itemContainer",{get:function(){var t=this;if(!this._itemContainer){var e=this.component,i=e.itemContainers.create();i.parent=e,this._itemContainer=i,this.addSprite(i),this._disposers.push(i),i.togglable&&i.events.on("toggled",function(t){e.toggleDataItem(t.target.dataItem)},void 0,!1),i.focusable&&(i.events.on("focus",function(t){e.focusedItem=t.target.dataItem},void 0,!1),i.events.on("blur",function(t){e.focusedItem=void 0},void 0,!1)),this._disposers.push(new b.b(function(){y.hasValue(t.component)&&t.component.itemContainers.removeValue(i)})),this.dataContext.uidAttr&&(i.readerControls=this.dataContext.uidAttr(),i.readerLabelledBy=this.dataContext.uidAttr());var n=this.dataContext;if((n instanceof a.a||n instanceof v.a)&&!n.isDisposed()){var r=function(t){i.readerChecked=t.visible,i.events.disableType("toggled"),i.isActive=!t.visible,i.events.enableType("toggled")};n.addDisposer(new b.b(function(){t.component&&t.component.dataItems.remove(t)})),n instanceof v.a?(i.addDisposer(n.events.on("visibilitychanged",r,void 0,!1)),i.addDisposer(n.events.on("hidden",function(t){i.readerChecked=!1,i.events.disableType("toggled"),i.isActive=!0,i.events.enableType("toggled")},void 0,!1)),i.addDisposer(n.events.on("shown",function(t){i.readerChecked=!0,i.events.disableType("toggled"),i.isActive=!1,i.events.enableType("toggled")},void 0,!1))):i.addDisposer(n.events.on("visibilitychanged",r,void 0,!1))}}return this._itemContainer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"marker",{get:function(){var t=this;if(!this._marker){var e=this.component.markers.create();this._marker=e,e.parent=this.itemContainer,this.addSprite(e),this._disposers.push(e),this._disposers.push(new b.b(function(){y.hasValue(t.component)&&t.component.markers.removeValue(e)}))}return this._marker},enumerable:!0,configurable:!0}),e}(a.a),O=function(){return function(){this.createMarker=!0}}(),T=function(t){function e(){var e=t.call(this)||this;e.className="Legend",e.layout="grid",e.setPropertyValue("useDefaultMarker",!1),e.setPropertyValue("scrollable",!1),e.setPropertyValue("contentAlign","center");var i=new l.a;i.applyOnClones=!0,i.padding(8,0,8,0),i.margin(0,10,0,10),i.layout="horizontal",i.clickable=!0,i.focusable=!0,i.role="switch",i.togglable=!0,i.cursorOverStyle=x.a.pointer,i.background.fillOpacity=0,e.itemContainers=new o.e(i),e._disposers.push(new o.c(e.itemContainers)),e._disposers.push(e.itemContainers.template),e._disposers.push(Object(p.b)().body.events.on("keyup",function(t){h.b.isKey(t.event,"enter")&&e.focusedItem&&e.focusedItem.itemContainer.clickable&&e.toggleDataItem(e.focusedItem)},e));var n=new f.a,r=new l.a;r.width=23,r.height=23,r.interactionsEnabled=!1,r.applyOnClones=!0,r.setStateOnChildren=!0,r.background.fillOpacity=0,r.background.strokeOpacity=0,r.propertyFields.fill="fill",r.valign="middle";var a=n.getFor("disabledBackground");r.events.on("childadded",function(t){var e=t.newValue.states.create("active");e.properties.stroke=a,e.properties.fill=a}),e.markers=new o.e(r),e._disposers.push(new o.c(e.markers)),e._disposers.push(e.markers.template);var c=r.createChild(s.a);c.width=Object(d.c)(100),c.height=Object(d.c)(100),c.applyOnClones=!0,c.propertyFields.fill="fill",c.strokeOpacity=0;var g=new u.a;g.text="{name}",g.margin(0,5,0,5),g.valign="middle",g.applyOnClones=!0,g.states.create("active").properties.fill=n.getFor("disabledBackground"),e.labels=new o.e(g),e._disposers.push(new o.c(e.labels)),e._disposers.push(e.labels.template),g.interactionsEnabled=!1,g.truncate=!0,g.fullWords=!1;var y=new u.a;return y.margin(0,5,0,0),y.valign="middle",y.width=50,y.align="right",y.textAlign="end",y.applyOnClones=!0,y.states.create("active").properties.fill=n.getFor("disabledBackground"),y.interactionsEnabled=!1,e.valueLabels=new o.e(y),e._disposers.push(new o.c(e.valueLabels)),e._disposers.push(e.valueLabels.template),e.position="bottom",i.states.create("active"),i.setStateOnChildren=!0,e.role="group",e.events.on("layoutvalidated",e.handleScrollbar,e,!1),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),y.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Legend"))},e.prototype.createDataItem=function(){return new w},e.prototype.validateDataElement=function(e){t.prototype.validateDataElement.call(this,e);var i=e.itemContainer,n=e.marker;g.used(e.label);var r=e.valueLabel;i.readerChecked=e.dataContext.visible,e.dataContext.legendDataItem=e,e.label.width=void 0,"right"==r.align&&(r.width=void 0);var a=e.dataContext.legendSettings,o=e.dataContext;!o.createLegendMarker||this.useDefaultMarker&&o instanceof v.a||e.childrenCreated||(o.createLegendMarker(n),e.childrenCreated=!0),o.updateLegendValue&&o.updateLegendValue(),o.component&&o.component.updateLegendValue&&o.component.updateLegendValue(o),r.invalid&&r.validate(),""==r.text||void 0==r.text?r.__disabled=!0:r.__disabled=!1,!a||void 0==a.itemValueText&&void 0==a.valueText||(r.__disabled=!1);var s=e.dataContext.visible;void 0===s&&(s=!0),s=y.toBoolean(s),e.dataContext.visible=s,i.events.disableType("toggled"),i.isActive=!s,i.isActive?i.setState("active",0):i.setState("default",0),i.events.enableType("toggled")},e.prototype.afterDraw=function(){var e=this,i=this.getPropertyValue("maxWidth"),n=0;this.labels.each(function(t){t.invalid&&t.validate(),t.measuredWidth+t.pixelMarginLeft+t.pixelMarginRight>n&&(n=t.measuredWidth+t.pixelMarginLeft+t.pixelMarginRight)});var r=0;this.valueLabels.each(function(t){t.invalid&&t.validate(),t.measuredWidth+t.pixelMarginLeft+t.pixelMarginRight>r&&(r=t.measuredWidth+t.pixelMarginLeft+t.pixelMarginRight)});var a=0;this.markers.each(function(t){t.invalid&&t.validate(),t.measuredWidth+t.pixelMarginLeft+t.pixelMarginRight>a&&(a=t.measuredWidth+t.pixelMarginLeft+t.pixelMarginRight)});var o,s=this.itemContainers.template,l=s.pixelMarginRight+s.pixelMarginLeft,u=n+r+a;y.isNumber(i)?((i-=l)>u&&(i=u),o=i-a-r):o=n,this.labels.each(function(t){("right"==e.valueLabels.template.align||t.measuredWidth>o)&&(t.width=o-t.pixelMarginLeft-t.pixelMarginRight)}),"right"==this.valueLabels.template.align&&this.valueLabels.each(function(t){t.width=r}),t.prototype.afterDraw.call(this)},e.prototype.handleScrollbar=function(){var t=this.scrollbar;this.scrollable&&t&&(t.height=this.measuredHeight,t.x=this.measuredWidth-t.pixelWidth-t.pixelMarginLeft,this.contentHeight>this.measuredHeight?(t.visible=!0,t.thumb.height=t.height*this.measuredHeight/this.contentHeight,this.paddingRight=t.pixelWidth+t.pixelMarginLeft+ +t.pixelMarginRight):t.visible=!1,this.updateMasks())},Object.defineProperty(e.prototype,"position",{get:function(){return this.getPropertyValue("position")},set:function(t){this.setPropertyValue("position",t)&&("left"==t||"right"==t?(this.margin(10,5,10,10),this.valign="middle",this.valueLabels.template.align="right",y.isNumber(this.maxColumns)||(this.maxColumns=1),this.width=void 0,this.maxWidth=220):(this.maxColumns=void 0,this.width=Object(d.c)(100),this.valueLabels.template.align="left"),this.invalidate())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"useDefaultMarker",{get:function(){return this.getPropertyValue("useDefaultMarker")},set:function(t){this.setPropertyValue("useDefaultMarker",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"scrollable",{get:function(){return this.getPropertyValue("scrollable")},set:function(t){if(this.setPropertyValue("scrollable",t,!0))if(t){var e=this.createChild(P.a);this.scrollbar=e,e.isMeasured=!1,e.orientation="vertical",e.endGrip.__disabled=!0,e.startGrip.__disabled=!0,e.visible=!1,e.marginLeft=5,this._mouseWheelDisposer=this.events.on("wheel",this.handleWheel,this,!1),this._disposers.push(this._mouseWheelDisposer),this._disposers.push(e.events.on("rangechanged",this.updateMasks,this,!1))}else this._mouseWheelDisposer&&(this._mouseWheelDisposer.dispose(),this.scrollbar&&(this.scrollbar.dispose(),this.scrollbar=void 0))},enumerable:!0,configurable:!0}),e.prototype.handleWheel=function(t){var e=t.shift.y,i=this.scrollbar;if(i){var n=e/1e3*this.measuredHeight/this.contentHeight,r=i.end-i.start;e>0?(i.start=m.max(0,i.start-n),i.end=i.start+r):(i.end=m.min(1,i.end-n),i.start=i.end-r)}},e.prototype.updateMasks=function(){var t=this;this.scrollbar&&this.itemContainers.each(function(e){e.dy=-t.scrollbar.thumb.pixelY*t.contentHeight/t.measuredHeight,e.maskRectangle={x:0,y:-e.dy,width:t.measuredWidth,height:t.measuredHeight}})},e.prototype.toggleDataItem=function(t){var e=t.dataContext;!e.visible||e.isHiding||e instanceof v.a&&e.isHidden?(t.color=t.colorOrig,t.itemContainer.isActive=!1,!0===e.hidden&&(e.hidden=!1),e.show?e.show():e.visible=!0):(t.itemContainer.isActive=!0,e.hide?e.hide():e.visible=!1,t.color=(new f.a).getFor("disabledBackground"))},Object.defineProperty(e.prototype,"preloader",{get:function(){},enumerable:!0,configurable:!0}),e.prototype.handleDataItemPropertyChange=function(t,e){t.valueLabel.invalidate(),t.label.invalidate()},e}(r.a);c.c.registeredClasses.Legend=T,_.c.push({relevant:_.b.widthXS,state:function(t,e){if(t instanceof T&&("left"==t.position||"right"==t.position)){var i=t.states.create(e);return i.properties.position="bottom",i}return null}}),_.c.push({relevant:_.b.heightXS,state:function(t,e){if(t instanceof T&&("top"==t.position||"bottom"==t.position)){var i=t.states.create(e);return i.properties.position="right",i}return null}}),_.c.push({relevant:_.b.isXS,state:function(t,e){if(t instanceof T){var i=t.states.create(e);return i.properties.disabled=!0,i}return null}})},ucqQ:function(t,e,i){var n=i("Kg2n");t.exports=function(t){if(!n(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype");return t}},ugpH:function(t,e,i){var n=i("6aQQ"),r=i("KslR"),a=i("hvfb"),o=r("species");t.exports=function(t){return a>=51||!n(function(){var e=[];return(e.constructor={})[o]=function(){return{foo:1}},1!==e[t](Boolean).foo})}},ux7t:function(t,e,i){"use strict";i.d(e,"a",function(){return f});var n=i("m4/l"),r=i("Tjl+"),a=i("aCit"),o=i("x79X"),s=i("vMqJ"),l=i("8ZqG"),u=i("tjMS"),h=i("v9UT"),c=i("0FpR"),p=i("Qkdp"),d=i("Mtpk"),f=function(t){function e(){var e=t.call(this)||this;return e.transitionDuration=0,e.transitionEasing=c.cubicOut,e.properties={},e.propertyFields={},e.filters=new s.b,e.isTemplate=!1,e.className="SpriteState",e._disposers.push(new s.c(e.filters)),e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"adapter",{get:function(){var t=this;return this._adapterO||(this._adapterO=new o.a(this),this._adapterO.events.on("inserted",function(e){t[e.newValue.key]=t[e.newValue.key]},void 0,!1),this._adapterO.events.on("removed",function(e){t[e.newValue.key]=t[e.newValue.key]},void 0,!1)),this._adapterO},enumerable:!0,configurable:!0}),e.prototype.getPropertyValue=function(t){var e=this.properties[t],i=this.sprite;if(i){var n=this.propertyFields[t];if(d.hasValue(n)&&(i.dataItem&&(e=i.dataItem.dataContext[n]),void 0==e&&(e="__unset")),d.hasValue(e))this._adapterO&&(e=this._adapterO.apply(t,e));else{var r=i.getPropertyValue(t);(e=this._adapterO?this._adapterO.apply(t,r):r)==r&&(e=void 0)}}return e},e.prototype.copyFrom=function(t){t&&t!=this&&(this.transitionDuration=t.transitionDuration,this.transitionEasing=t.transitionEasing,h.copyProperties(t.properties,this.properties),h.copyProperties(t.propertyFields,this.propertyFields),this.filters.copyFrom(t.filters),t._adapterO&&this.adapter.copyFrom(t._adapterO))},Object.defineProperty(e.prototype,"allValues",{get:function(){var t=this,e={};if(p.each(this.properties,function(i,n){e[i]=t.getPropertyValue(i)}),this._adapterO){var i=this._adapterO.keys();p.each(i,function(i,n){var r=t.getPropertyValue(n);e[n]=r})}var n=this.propertyFields;return p.each(n,function(i){var n=t.getPropertyValue(i);e[i]=n}),e},enumerable:!0,configurable:!0}),e.prototype.reset=function(){this.properties={},this.filters.clear()},e.prototype.processConfig=function(e){d.hasValue(e)&&d.hasValue(e.properties)&&p.each(e.properties,function(t,i){d.isString(i)&&(i.match(/^[0-9.\-]+\%$/)?e.properties[t]=Object(u.c)(d.toNumber(i)):i.match(/^\#[0-9abcdef]{3,}$/i)&&(e.properties[t]=Object(l.e)(i)))}),t.prototype.processConfig.call(this,e)},e.prototype.asFunction=function(e){return"transitionEasing"==e||t.prototype.asIs.call(this,e)},e}(r.a);a.c.registeredClasses.SpriteState=f},v0oN:function(t,e,i){var n=i("6aQQ");t.exports=function(t){return n(function(){var e=""[t]('"');return e!==e.toLowerCase()||e.split('"').length>3})}},v36H:function(t,e,i){"use strict";i.d(e,"b",function(){return P}),i.d(e,"a",function(){return w});var n=i("m4/l"),r=i("Uf57"),a=i("Vs7R"),o=i("C6dT"),s=i("vMqJ"),l=i("YOID"),u=i("pR7v"),h=i("KknQ"),c=i("ncgu"),p=i("VB2N"),d=i("aCit"),f=i("PTiM"),g=i("p9TX"),y=i("GtDR"),m=i("Wglt"),v=i("Qkdp"),b=i("Mtpk"),x=i("hJ5i"),_=i("TXRX"),P=function(t){function e(){var e=t.call(this)||this;return e.className="LineSeriesDataItem",e}return Object(n.c)(e,t),e}(r.b),w=function(t){function e(){var e=t.call(this)||this;return e.minDistance=.5,e.segments=new s.e(e.createSegment()),e.segments.template.applyOnClones=!0,e._disposers.push(new s.c(e.segments)),e._disposers.push(e.segments.template),e._segmentsIterator=new m.ListIterator(e.segments,function(){return e.segments.create()}),e._segmentsIterator.createNewItems=!0,e.className="LineSeries",e.strokeOpacity=1,e.fillOpacity=0,e.connect=!0,e.tensionX=1,e.tensionY=1,e.autoGapCount=1.1,e.segmentsContainer=e.mainContainer.createChild(o.a),e.segmentsContainer.isMeasured=!1,e.bulletsContainer.toFront(),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.applyInternalDefaults=function(){t.prototype.applyInternalDefaults.call(this),b.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Line Series"))},e.prototype.createSegment=function(){return new l.a},e.prototype.createDataItem=function(){return new P},e.prototype.setInitialWorkingValues=function(t){var e=this._yAxis.get(),i=this._xAxis.get();if(this.appeared&&this.visible){var n=this.dataItems.getIndex(t.index-1);if(t.component=this,this.baseAxis==i&&e instanceof u.a){var r=e.minZoomed;if(n&&(r=n.values.valueY.workingValue),t.setWorkingValue("valueY",r,0),t.setWorkingValue("valueY",t.values.valueY.value),i instanceof h.a)t.setWorkingLocation("dateX",t.locations.dateX-1,0),t.setWorkingLocation("dateX",t.locations.dateX);else if(i instanceof c.a&&n){var a=t.valueX;t.setWorkingValue("valueX",n.valueX,0),t.setWorkingValue("valueX",a)}}if(this.baseAxis==e&&i instanceof u.a){var o=i.minZoomed;if(n&&(o=n.values.valueX.workingValue),t.setWorkingValue("valueX",o,0),t.setWorkingValue("valueX",t.values.valueX.value),e instanceof h.a)t.setWorkingLocation("dateY",t.locations.dateX-1,0),t.setWorkingLocation("dateY",t.locations.dateY);else if(e instanceof c.a&&n){a=t.valueY;t.setWorkingValue("valueY",n.valueY,0),t.setWorkingValue("valueY",a)}}}else this.baseAxis==i&&e instanceof u.a&&(i instanceof h.a&&t.setWorkingLocation("dateX",t.locations.dateX),i instanceof p.a&&t.setWorkingLocation("categoryX",t.locations.categoryX)),this.baseAxis==e&&i instanceof u.a&&(e instanceof h.a&&t.setWorkingLocation("dateY",t.locations.dateY),e instanceof p.a&&t.setWorkingLocation("categoryY",t.locations.categoryY))},e.prototype.updateLegendValue=function(e,i){t.prototype.updateLegendValue.call(this,e,i),e&&e.segment&&(this.tooltipColorSource=e.segment)},e.prototype.validate=function(){var e=this;t.prototype.validate.call(this),this.xAxis&&this.yAxis&&(this._segmentsIterator.reset(),this.openSegmentWrapper(this._adjustedStartIndex),m.each(this.axisRanges.iterator(),function(t){e.openSegmentWrapper(e._adjustedStartIndex,t)}),m.each(this._segmentsIterator.iterator(),function(t){t.__disabled=!0}))},e.prototype.sliceData=function(){for(var t=this.startIndex,e=this.endIndex,i=this.startIndex-1;i>=0;i--){if((r=this.dataItems.getIndex(i))&&r.hasValue(this._xValueFields)&&r.hasValue(this._yValueFields)){t=i;break}}this._adjustedStartIndex=this.findAdjustedIndex(t,["stroke","strokeWidth","strokeDasharray","strokeOpacity","fill","fillOpacity","opacity"]);i=this.endIndex;for(var n=this.dataItems.length;i<n;i++){var r;if((r=this.dataItems.getIndex(i))&&r.hasValue(this._xValueFields)&&r.hasValue(this._yValueFields)){e=i+1;break}}this._workingStartIndex=t,this._workingEndIndex=e},e.prototype.findAdjustedIndex=function(t,e){var i=this,n=this.propertyFields,r=t;return x.each(e,function(e){if(b.hasValue(n[e]))for(var a=r;a>=0;a--){var o=i.dataItems.getIndex(a);if(o&&b.hasValue(o.properties[e])){t>a&&(t=a);break}}}),t},e.prototype.openSegmentWrapper=function(t,e){var i={index:t,axisRange:e};do{i=this.openSegment(i.index,i.axisRange)}while(i)},e.prototype.openSegment=function(t,e){var i=!1,n=[];t=Math.min(t,this.dataItems.length);var r,o=Math.min(this._workingEndIndex,this.dataItems.length);this._workingEndIndex=Math.min(this._workingEndIndex,this.dataItems.length);var s=!1,l=this._segmentsIterator.getFirst();l.__disabled=!1,e?(l.parent=e.contents,v.copyProperties(e.contents,l,a.b)):(v.copyProperties(this,l,a.b),l.filters.clear(),l.parent=this.segmentsContainer);for(var u=this.connect,c=!1,p=t;p<o;p++){var d=this.dataItems.getIndex(p);if(d.segment=l,d.hasProperties&&(p==t?this.updateSegmentProperties(d.properties,l):s=this.updateSegmentProperties(d.properties,l,!0)),d.hasValue(this._xValueFields)&&d.hasValue(this._yValueFields))this.addPoints(n,d,this.xField,this.yField),c=!0;else{if(p==t)continue;if(!u&&c){r=p;break}}if(r=p,this.baseAxis instanceof h.a){var f=this.dataItems.getIndex(p+1);if(f&&this.baseAxis.makeGap(f,d)){i=!0;break}}if(s)break}return this.closeSegment(l,n,t,r,e,i)},e.prototype.addPoints=function(t,e,i,n,r){var a=this.getPoint(e,i,n,e.workingLocations[i],e.workingLocations[n]);r||(e.point=a),t.push(a)},e.prototype.closeSegment=function(t,e,i,n,r,a){var o=[];if(this.dataFields[this._xOpenField]||this.dataFields[this._yOpenField]||this.stacked)for(var s=n;s>=i;s--){var l=this.dataItems.getIndex(s);l.hasValue(this._xValueFields)&&l.hasValue(this._yValueFields)&&this.addPoints(o,l,this.xOpenField,this.yOpenField,!0)}else{var u=this.baseAxis,h=e.length,c=this.xAxis,p=this.yAxis;h>0&&(u==c?(o.push({x:e[h-1].x,y:p.basePoint.y}),o.push({x:e[0].x,y:p.basePoint.y})):(o.push({x:c.basePoint.x,y:e[h-1].y}),o.push({x:c.basePoint.x,y:e[0].y})))}return this.drawSegment(t,e,o),a&&n++,n<this._workingEndIndex-1?{index:n,axisRange:r}:null},e.prototype.drawSegment=function(t,e,i){t.drawSegment(e,i,this.tensionX,this.tensionY)},e.prototype.updateSegmentProperties=function(t,e,i){var n=!1;return v.each(t,function(t,r){if(b.hasValue(r)){var a=e[t],o=void 0;a&&(o=a.toString?a.toString():a);var s=void 0;r&&(s=r.toString?r.toString():r),a==r||void 0!=o&&void 0!=s&&o==s||(i||(e[t]=r),n=!0)}}),n},Object.defineProperty(e.prototype,"connect",{get:function(){return this.getPropertyValue("connect")},set:function(t){this.setPropertyValue("connect",t)&&this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tensionX",{get:function(){return this.getPropertyValue("tensionX")},set:function(t){this.setPropertyValue("tensionX",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tensionY",{get:function(){return this.getPropertyValue("tensionY")},set:function(t){this.setPropertyValue("tensionY",t,!0)},enumerable:!0,configurable:!0}),e.prototype.createLegendMarker=function(t){var e=this,i=t.pixelWidth,n=t.pixelHeight;t.disposeChildren();var r=t.createChild(f.a);if(r.shouldClone=!1,v.copyProperties(this,r,a.b),r.x2=i,r.y=n/2,r.visible=!0,this.fillOpacity>0){var s=t.createChild(y.a);v.copyProperties(this,s,a.b),s.width=i,s.height=n,s.y=0,s.strokeOpacity=0,s.visible=!0,r.y=0}var l=t.dataItem;l.color=this.stroke,l.colorOrig=this.fill,m.eachContinue(this.bullets.iterator(),function(r){if(r instanceof _.a&&!r.copyToLegendMarker)return!1;var a=!1;if(r instanceof o.a&&m.each(r.children.iterator(),function(t){if(t instanceof g.a)return a=!0,!0}),!a){var s=r.clone();return s.parent=t,s.isMeasured=!0,s.tooltipText=void 0,s.x=i/2,e.fillOpacity>0?s.y=0:s.y=n/2,s.visible=!0,b.hasValue(s.fill)||(s.fill=e.fill),b.hasValue(s.stroke)||(s.stroke=e.stroke),!1}})},e.prototype.disposeData=function(){t.prototype.disposeData.call(this),this.segments.clear()},Object.defineProperty(e.prototype,"autoGapCount",{get:function(){return this.getPropertyValue("autoGapCount")},set:function(t){this.setPropertyValue("autoGapCount",t,!0)},enumerable:!0,configurable:!0}),e}(r.a);d.c.registeredClasses.LineSeries=w,d.c.registeredClasses.LineSeriesDataItem=P},v9UT:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.used=function(t){},e.copyProperties=function(t,e){return u.each(t,function(t,i){o.hasValue(i)&&(e[t]=i)}),e},e.stripHash=c,e.getBaseURI=function(){var t="#";if(Object(r.b)()){var e=document.baseURI;if(e){e=c(e);var i=c(location.href);e!==i&&(t=i+t)}}return t},e.softCopyProperties=function(t,e){return u.each(t,function(t,i){o.hasValue(i)&&!o.hasValue(e[t])&&(e[t]=i)}),e},e.copy=function(t,e){return u.each(t,function(t,i){e[t]=i}),e},e.isNotEmpty=function(t){return o.hasValue(t)&&""!==t.toString()},e.relativeToValue=function(t,e){return o.isNumber(t)?t:null!=t&&o.isNumber(t.value)&&o.isNumber(e)?e*t.value:0},e.relativeRadiusToValue=function(t,e,i){var n;o.isNumber(t)?(n=t)<0&&(n=i?e+n:e-n):null!=t&&o.isNumber(t.value)&&(n=e*t.value);return n},e.valueToRelative=function(t,e){return t instanceof n.a?t.value:t/e},e.getPixelRatio=function(){return window.devicePixelRatio||1},e.camelToDashed=function(t){return t.replace(/\W+/g,"-").replace(/([a-z\d])([A-Z])/g,"$1-$2").toLowerCase()},e.capitalize=function(t){var e=t.split("");return e[0]=e[0].toUpperCase(),e.join("")},e.stringify=function(t){return JSON.stringify(t)},e.escapeForRgex=function(t){return t.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},e.splitTextByCharCount=p,e.truncateWithEllipsis=function(t,e,i,n,r){if(t.length<=e)return t;(e-=i.length)<1&&(e=1);return(p(t,e,n,r)[0]||"")+i},e.trim=function(t){return t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")},e.rtrim=function(t){return t.replace(/[\s\uFEFF\xA0]+$/g,"")},e.ltrim=function(t){return t.replace(/^[\s\uFEFF\xA0]+/g,"")},e.reverseString=d,e.unquote=function(t){var e=t.trim();(e=t.replace(/^'(.*)'$/,"$1"))==t&&(e=t.replace(/^"(.*)"$/,"$1"));return e},e.padString=function(t,e,i){void 0===e&&(e=0);void 0===i&&(i="0");"string"!=typeof t&&(t=t.toString());return e>t.length?Array(e-t.length+1).join(i)+t:t},e.getFormat=function(t){if(void 0===t)return l.g;var e=(t=(t=(t=t.toLowerCase().replace(/^\[[^\]]*\]/,"")).replace(/\[[^\]]+\]/,"")).trim()).match(/\/(date|number|duration)$/);if(e)return e[1];if(t===l.c)return l.c;if(t===l.a)return l.a;if(t===l.b)return l.b;if(t.match(/[#0]/))return l.c;if(t.match(/[ymwdhnsqaxkzgtei]/))return l.a;return l.g},e.cleanFormat=function(t){return t.replace(/\/(date|number|duration)$/i,"")},e.stripTags=f,e.plainText=function(t){return t?f(t.replace(/[\n\r]+/g,". ")):t},e.numberToString=function(t){if(o.isNaN(t))return"NaN";if(t===1/0)return"Infinity";if(t===-1/0)return"-Infinity";if(0===t&&1/t==-1/0)return"-0";var e=t<0;t=Math.abs(t);var i,n=o.getValue(/^([0-9]+)(?:\.([0-9]+))?(?:e[\+\-]([0-9]+))?$/.exec(""+t)),r=n[1],a=n[2]||"";if(null==n[3])i=""===a?r:r+"."+a;else{var l=+n[3];if(t<1){var u=l-1;i="0."+s.repeat("0",u)+r+a}else{var u=l-a.length;i=0===u?r+a:u<0?r+a.slice(0,u)+"."+a.slice(u):r+a+s.repeat("0",u)}}return e?"-"+i:i},e.anyToDate=function(t){if(o.isDate(t))return new Date(t);if(o.isNumber(t))return new Date(t);var e=Number(t);return o.isNumber(e)?new Date(e):new Date(t)},e.anyToNumber=function(t){if(o.isDate(t))return t.getTime();if(o.isNumber(t))return t;if(o.isString(t)){var e=Number(t);return o.isNumber(e)?e:void 0}},e.getYearDay=g,e.getWeek=y,e.getMonthWeek=function(t,e){void 0===e&&(e=!1);var i=y(new Date(t.getFullYear(),t.getMonth(),1),e),n=y(t,e);1==n&&(n=53);return n-i+1},e.getDayFromWeek=function(t,e,i,n){void 0===i&&(i=1);void 0===n&&(n=!1);var r=new Date(e,0,4,0,0,0,0);n&&r.setUTCFullYear(e);return 7*t+i-((r.getDay()||7)+3)},e.get12Hours=function(t,e){t>12?t-=12:0===t&&(t=12);return o.hasValue(e)?t+(e-1):t},e.getTimeZone=function(t,e,i,n){void 0===e&&(e=!1);void 0===i&&(i=!1);void 0===n&&(n=!1);if(n)return e?"Coordinated Universal Time":"UTC";var r=t.toLocaleString("UTC"),a=t.toLocaleString("UTC",{timeZoneName:e?"long":"short"}).substr(r.length);!1===i&&(a=a.replace(/ (standard|daylight|summer|winter) /i," "));return a},e.random=function(t,e){return Math.floor(Math.random()*e)+t},e.fitNumber=function(t,e,i){if(t>i)return i;if(t<e)return e;return t},e.fitNumberRelative=function(t,e,i){var n=i-e;t>i?t=e+(t-n*Math.floor(t/n)):t<e&&(t=e+(t-n*Math.floor(t/n)));return t},e.svgPointToSprite=m,e.spritePointToSvg=v,e.spritePointToSprite=function(t,e,i){return m(v(t,e),i)},e.svgRectToSprite=function(t,e){var i=m(t,e),n=m({x:t.x+t.width,y:t.y+t.height},e);return{x:i.x,y:i.y,width:n.x-i.x,height:n.y-i.y}},e.spriteRectToSvg=function(t,e){var i=v(t,e),n=v({x:t.x+t.width,y:t.y+t.height},e);return{x:i.x,y:i.y,width:n.x-i.x,height:n.y-i.y}},e.documentPointToSvg=b,e.svgPointToDocument=x,e.documentPointToSprite=function(t,e){if(e&&e.htmlContainer){var i=b(t,o.getValue(e.htmlContainer),e.svgContainer.cssScale);return m(i,e)}return t},e.spritePointToDocument=function(t,e){if(e&&e.htmlContainer){var i=v(t,e);return x(i,o.getValue(e.htmlContainer))}return t},e.width=function(t){var e=getComputedStyle(t),i=parseFloat(e.paddingLeft)+parseFloat(e.paddingRight),n=parseFloat(e.borderLeftWidth)+parseFloat(e.borderRightWidth);return t.clientWidth-i-n},e.height=function(t){var e=getComputedStyle(t),i=parseFloat(e.paddingTop)+parseFloat(e.paddingBottom),n=parseFloat(e.borderTopWidth)+parseFloat(e.borderBottomWidth);return t.clientHeight-i-n},e.decimalPlaces=function(t){var e=(""+t).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);if(!e)return 0;return Math.max(0,(e[1]?e[1].length:0)-(e[2]?+e[2]:0))},e.parseUrl=P,e.serializeUrl=w,e.joinUrl=function(t,e){var i=P(t),n=P(e);if(O(i))throw new Error("Left URL is not absolute");if(O(n)){if(""!==n.path)if("/"===n.path[0])i.path=n.path;else{var r=i.path.split(/\//),a=n.path.split(/\//);if(0===r.length?0!==a.length&&r.push(""):r.length>1&&r.pop(),h.pushAll(r,a),i.path=r.join("/"),""!==i.path&&"/"!==i.path[0])throw new Error("URL path must start with /")}return i.query=n.query,i.hash=n.hash,w(i)}return w(n)},e.isIE=function(){return!!window.MSInputMethodContext&&!!document.documentMode};var n=i("tjMS"),r=i("LBDG"),a=i("Gg2j"),o=i("Mtpk"),s=i("wUYf"),l=i("ScGY"),u=i("Qkdp"),h=i("hJ5i");function c(t){return/^[^#]*/.exec(t)[0]}function p(t,e,i,n){if(t.length<=e)return[t];var r=[];if(i)for(var a=-1,o=t.replace(/([,;:!?\\\/\.]+[\s]+|[\s])/g,l.d+"$1"+l.d).split(l.d),s=0;s<o.length;s++){var u=o[s],h=u.length;if(0!==h){var c;if(h>e){if(n&&(u=d(u)),c=u.match(new RegExp(".{1,"+e+"}","g"))){if(n)for(var p=0;p<c.length;p++)c[p]=d(c[p]);r=r.concat(c)}}else-1===a&&(r.push(""),a=0),r[a].length+h+1>e&&""!==r[a]&&(r.push(""),a++),r[a]+=u;a=r.length-1}}else if(c=t.match(new RegExp(".{1,"+e+"}","g"))){if(n)for(p=0;p<c.length;p++)c[p]=d(c[p]);r=c}return 1==r.length&&i&&r[0].length>e&&(r=[]),r}function d(t){return t.split("").reverse().join("")}function f(t){return t?t.replace(/<[^>]*>/g,""):t}function g(t,e){void 0===e&&(e=!1);var i=new Date(t.getFullYear(),0,1,0,0,0,0);return Math.floor((t.getTime()-i.getTime())/864e5)+1}function y(t,e){void 0===e&&(e=!1);var i=g(t,e)-1,n=Math.floor((i-(t.getDay()||7)+10)/7);return 0===n?n=53:53===n&&(n=1),n}function m(t,e){var i=t.x,n=t.y,r=[];if(e){for(;o.hasValue(e.parent);)r.push(e),e=e.parent;r.reverse();for(var s=0;s<r.length;s++){var l=r[s],u=l.rotation,h=i-l.pixelX-l.ex,c=n-l.pixelY-l.ey;l.dx&&(i-=l.dx),l.dy&&(n-=l.dy);var p=l.scale;l.group&&(p=l.group.scale),i=(a.cos(-u)*h-a.sin(-u)*c)/p-l.pixelPaddingLeft,n=(a.cos(-u)*c+a.sin(-u)*h)/p-l.pixelPaddingTop}}return{x:i,y:n}}function v(t,e){var i=t.x,n=t.y;if(e)for(;o.hasValue(e.parent);){var r=e.rotation;i+=e.pixelPaddingLeft+e.ex,n+=e.pixelPaddingTop+e.ey,e.dx&&(i+=e.dx),e.dy&&(n+=e.dy);var s=e.scale;e.group&&(s=e.group.scale);var l=e.pixelX+(i*a.cos(r)-n*a.sin(r))*s,u=e.pixelY+(i*a.sin(r)+n*a.cos(r))*s;i=l,n=u,e=e.parent}return{x:i,y:n}}function b(t,e,i){try{var n=e.getBoundingClientRect();return o.isNumber(i)||(i=1),{x:(t.x-n.left)/i,y:(t.y-n.top)/i}}catch(e){return t}}function x(t,e){try{var i=e.getBoundingClientRect();return{x:t.x+i.left,y:t.y+i.top}}catch(e){return t}}var _=/^([a-zA-Z][a-zA-Z0-9\+\.\-]*:)?(?:(\/\/)([^\@]+\@)?([^\/\?\#\:]*)(\:[0-9]+)?)?([^\?\#]*)(\?[^\#]*)?(\#.*)?$/;function P(t){var e=_.exec(t);return{protocol:e&&e[1]||"",separator:e&&e[2]||"",authority:e&&e[3]||"",domain:e&&e[4]||"",port:e&&e[5]||"",path:e&&e[6]||"",query:e&&e[7]||"",hash:e&&e[8]||""}}function w(t){return t.protocol+t.separator+t.authority+t.domain+t.port+t.path+t.query+t.hash}function O(t){return""===t.protocol&&""===t.separator&&""===t.authority&&""===t.domain&&""===t.port}},vBfr:function(t,e,i){"use strict";var n=i("0sYB"),r=i("F/ei"),a=i("Ox5T"),o=i("KJuV"),s=i("NRfM"),l=i("k2B3"),u=i("z3p0"),h=i("KslR"),c=i("lnCe"),p=i("CNF5"),d=i("WeDP"),f=d.IteratorPrototype,g=d.BUGGY_SAFARI_ITERATORS,y=h("iterator"),m=function(){return this};t.exports=function(t,e,i,h,d,v,b){r(i,e,h);var x,_,P,w=function(t){if(t===d&&I)return I;if(!g&&t in S)return S[t];switch(t){case"keys":case"values":case"entries":return function(){return new i(this,t)}}return function(){return new i(this)}},O=e+" Iterator",T=!1,S=t.prototype,C=S[y]||S["@@iterator"]||d&&S[d],I=!g&&C||w(d),k="Array"==e&&S.entries||C;if(k&&(x=a(k.call(new t)),f!==Object.prototype&&x.next&&(c||a(x)===f||(o?o(x,f):"function"!=typeof x[y]&&l(x,y,m)),s(x,O,!0,!0),c&&(p[O]=m))),"values"==d&&C&&"values"!==C.name&&(T=!0,I=function(){return C.call(this)}),c&&!b||S[y]===I||l(S,y,I),p[e]=I,d)if(_={values:w("values"),keys:v?I:w("keys"),entries:w("entries")},b)for(P in _)!g&&!T&&P in S||u(S,P,_[P]);else n({target:e,proto:!0,forced:g||T},_);return _}},vIej:function(t,e,i){var n=i("0sYB"),r=i("3sMl");n({target:"Object",stat:!0,forced:!r,sham:!r},{defineProperty:i("8+rI").f})},vMqJ:function(t,e,i){"use strict";i.d(e,"a",function(){return l}),i.d(e,"d",function(){return u}),i.d(e,"c",function(){return h}),i.d(e,"b",function(){return p}),i.d(e,"e",function(){return d});var n=i("m4/l"),r=i("hD5A"),a=i("o0Lc"),o=i("hJ5i"),s=i("Wglt"),l=function(){function t(t,e,i){this._array=t,this._start=e,this._end=i}return t.prototype.iterator=function(){var t=this;return function(e){if(t._start!==t._end)if(t._start<t._end)for(var i=t._start;i<t._end&&e(t._array[i]);++i);else for(i=t._start-1;i>=t._end&&e(t._array[i]);--i);}},t.prototype.backwards=function(){return new t(this._array,this._end,this._start)},t.prototype.range=function(e,i){if(e<=i){if(this._start===this._end)return this;if(this._start<this._end){var n=i-e;return e=Math.max(this._start+e,this._start),i=Math.min(e+n,this._end),new t(this._array,e,i)}n=i-e;return e=Math.max(this._start-e,this._end),i=Math.max(e-n,this._end),new t(this._array,e,i)}throw new Error("Start index must be lower than end index")},t}(),u=function(t){function e(e,i,n){var r=t.call(this,[e.events.on("inserted",function(t){var i=t.newValue,n=r._getKey(i),a=0;s.eachContinue(e.iterator(),function(t){return t!==i&&(r._getKey(t)===n&&++a,!0)}),r._insert(i,n,a)},void 0,!1),e.events.on("removed",function(t){r._remove(t.oldValue)},void 0,!1)])||this;return r._keys=[],r._groups={},r._getKey=i,r._sort=n,s.each(e.iterator(),function(t){r._insert(t,i(t))}),r}return Object(n.c)(e,t),e.prototype._insert=function(t,e,i){if(null==this._groups[e]){this._groups[e]=[];var n=o.getSortedIndex(this._keys,this._sort,e),r=n.found,a=n.index;if(r)throw new Error("Key already exists: "+e);o.insertIndex(this._keys,a,e)}null==i?this._groups[e].push(t):o.insertIndex(this._groups[e],i,t)},e.prototype._remove=function(t){var e=this._getKey(t),i=this._groups[e];if(null!=i&&(o.remove(i,t),0===i.length)){delete this._groups[e];var n=o.getSortedIndex(this._keys,this._sort,e),r=n.found,a=n.index;if(!r)throw new Error("Key doesn't exist: "+e);o.removeIndex(this._keys,a)}},e.prototype.iterator=function(){var t=this;return s.flatten(s.map(s.fromArray(this._keys),function(e){return s.fromArray(t._groups[e])}))},e}(r.c),h=function(t){function e(e){var i=e.events.on("removed",function(t){t.oldValue.dispose()},void 0,!1);return t.call(this,function(){i.dispose(),s.each(e.iterator(),function(t){t.dispose()})})||this}return Object(n.c)(e,t),e}(r.b);function c(t,e){if(!(t>=0&&t<e))throw new Error("Index out of bounds: "+t)}var p=function(){function t(t){void 0===t&&(t=[]),this.events=new a.a,this._values=t}return Object.defineProperty(t.prototype,"values",{get:function(){return this._values},enumerable:!0,configurable:!0}),t.prototype.contains=function(t){return-1!==this._values.indexOf(t)},t.prototype.removeValue=function(t){for(var e=0,i=this._values.length;e<i;)this._values[e]===t?(this.removeIndex(e),--i):++e},t.prototype.indexOf=function(t){return o.indexOf(this._values,t)},Object.defineProperty(t.prototype,"length",{get:function(){return this._values.length},enumerable:!0,configurable:!0}),t.prototype.hasIndex=function(t){return t>=0&&t<this._values.length},t.prototype.getIndex=function(t){return this._values[t]},t.prototype.setIndex=function(t,e){c(t,this._values.length);var i=this._values[t];return i!==e&&(this._values[t]=e,this.events.isEnabled("setIndex")&&this.events.dispatchImmediately("setIndex",{type:"setIndex",target:this,index:t,oldValue:i,newValue:e}),this.events.isEnabled("removed")&&this.events.dispatchImmediately("removed",{type:"removed",target:this,oldValue:i}),this.events.isEnabled("inserted")&&this.events.dispatchImmediately("inserted",{type:"inserted",target:this,newValue:e})),i},t.prototype.insertIndex=function(t,e){c(t,this._values.length+1),o.insertIndex(this._values,t,e),this.events.isEnabled("insertIndex")&&this.events.dispatchImmediately("insertIndex",{type:"insertIndex",target:this,index:t,newValue:e}),this.events.isEnabled("inserted")&&this.events.dispatchImmediately("inserted",{type:"inserted",target:this,newValue:e})},t.prototype._sortQuicksort=function(t,e,i){if(t<e){var n=this._sortPartition(t,e,i);this._sortQuicksort(t,n,i),this._sortQuicksort(n+1,e,i)}},t.prototype._sortPartition=function(t,e,i){for(var n=this._values,r=n[t],a=t-1,o=e+1;;){do{++a}while(i(n[a],r)<0);do{--o}while(i(n[o],r)>0);if(a>=o)return o;this.swap(a,o)}},t.prototype.sort=function(t){this._sortQuicksort(0,this._values.length-1,t)},t.prototype.swap=function(t,e){var i=this._values.length;if(c(t,i),c(e,i),t!==e){var n=this._values[t],r=this._values[e];this._values[t]=r,this.events.isEnabled("setIndex")&&this.events.dispatchImmediately("setIndex",{type:"setIndex",target:this,index:t,oldValue:n,newValue:r}),this._values[e]=n,this.events.isEnabled("setIndex")&&this.events.dispatchImmediately("setIndex",{type:"setIndex",target:this,index:e,oldValue:r,newValue:n})}},t.prototype.removeIndex=function(t){c(t,this._values.length);var e=this._values[t];return o.removeIndex(this._values,t),this.events.isEnabled("removeIndex")&&this.events.dispatchImmediately("removeIndex",{type:"removeIndex",target:this,index:t,oldValue:e}),this.events.isEnabled("removed")&&this.events.dispatchImmediately("removed",{type:"removed",target:this,oldValue:e}),e},t.prototype.moveValue=function(t,e){var i=this.indexOf(t);if(-1!==i){var n=this._values[i];o.removeIndex(this._values,i),this.events.isEnabled("removeIndex")&&this.events.dispatchImmediately("removeIndex",{type:"removeIndex",target:this,index:i,oldValue:n})}null==e?(e=this._values.length,this._values.push(t)):o.insertIndex(this._values,e,t),this.events.isEnabled("insertIndex")&&this.events.dispatchImmediately("insertIndex",{type:"insertIndex",target:this,index:e,newValue:t}),-1===i&&this.events.isEnabled("inserted")&&this.events.dispatchImmediately("inserted",{type:"inserted",target:this,newValue:t})},t.prototype.push=function(t){var e=this._values.push(t)-1;return this.events.isEnabled("insertIndex")&&this.events.dispatchImmediately("insertIndex",{type:"insertIndex",target:this,index:e,newValue:t}),this.events.isEnabled("inserted")&&this.events.dispatchImmediately("inserted",{type:"inserted",target:this,newValue:t}),t},t.prototype.unshift=function(t){this.insertIndex(0,t)},t.prototype.pushAll=function(t){var e=this;o.each(t,function(t){e.push(t)})},t.prototype.copyFrom=function(t){this.pushAll(t._values)},t.prototype.pop=function(){return this._values.length-1<0?void 0:this.removeIndex(this._values.length-1)},t.prototype.shift=function(){return this._values.length?this.removeIndex(0):void 0},t.prototype.setAll=function(t){var e=this,i=o.copy(this._values);this._values.length=0,o.each(t,function(t){e._values.push(t)}),this.events.isEnabled("setAll")&&this.events.dispatchImmediately("setAll",{type:"setAll",target:this,oldArray:i,newArray:this._values}),this.events.isEnabled("removed")&&o.each(i,function(t){e.events.dispatchImmediately("removed",{type:"removed",target:e,oldValue:t})}),this.events.isEnabled("inserted")&&o.each(this._values,function(t){e.events.dispatchImmediately("inserted",{type:"inserted",target:e,newValue:t})})},t.prototype.clear=function(){this.setAll([])},t.prototype.iterator=function(){return s.fromArray(this._values)},t.prototype[Symbol.iterator]=function(){var t,e;return Object(n.d)(this,function(i){switch(i.label){case 0:t=this._values.length,e=0,i.label=1;case 1:return e<t?[4,this._values[e]]:[3,4];case 2:i.sent(),i.label=3;case 3:return++e,[3,1];case 4:return[2]}})},t.prototype.each=function(t){o.each(this._values,t)},t.prototype.range=function(t,e){if(t<=e){var i=e-t;return t=Math.max(t,0),e=Math.min(t+i,this._values.length),new l(this._values,t,e)}throw new Error("Start index must be lower than end index")},t.prototype.backwards=function(){return new l(this._values,this._values.length,0)},t}(),d=function(t){function e(e){var i=t.call(this)||this;return i.template=e,i}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"template",{get:function(){return this._template},set:function(t){t.isTemplate=!0,this._template=t},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(t){var e=this;s.each(t.iterator(),function(t){e.push(t.clone())})},e.prototype.create=function(t){var e=null!=t?new t:this.template.clone();return this.push(e),e},e.prototype.clone=function(){for(var t=new e(this.template),i=this.values,n=i.length,r=0;r<n;++r)t.push(i[r].clone());return t},e}(p)},vRI3:function(t,e){var i=Math.log;t.exports=Math.log1p||function(t){return(t=+t)>-1e-8&&t<1e-8?t-t*t/2:i(1+t)}},vbOF:function(t,e,i){"use strict";i.d(e,"a",function(){return h});var n=i("m4/l"),r=i("YotE"),a=i("Tjl+"),o=i("vMqJ"),s=i("+qIf"),l=i("zhwk"),u=i("Mtpk"),h=function(t){function e(e){var i=t.call(this)||this;return i._eventDispatcher=new r.a(i),i.eventDisposers=new s.a,i.replacedStyles=new s.a,i._clickable=!1,i._contextMenuDisabled=!1,i._hoverable=!1,i._trackable=!1,i._draggable=!1,i._swipeable=!1,i._resizable=!1,i._wheelable=!1,i._inert=!1,i._isHover=!1,i._isHoverByTouch=!1,i._isDown=!1,i._isFocused=!1,i._isTouchProtected=!1,i._inertiaOptions=new s.a,i.inertias=new s.a,i._hitOptions={},i._hoverOptions={},i._swipeOptions={},i._keyboardOptions={},i._mouseOptions={},i._cursorOptions={defaultStyle:[{property:"cursor",value:"default"}]},i._disposers.push(i._eventDispatcher),i._element=e,i.className="InteractionObject",i._disposers.push(new s.b(i.inertias)),i._disposers.push(new s.b(i.eventDisposers)),i.applyTheme(),i}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"events",{get:function(){return this._eventDispatcher},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isHover",{get:function(){return this._isHover},set:function(t){this.isHover!=t&&(this._isHover=t,t?Object(l.b)().overObjects.moveValue(this):Object(l.b)().overObjects.removeValue(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isHoverByTouch",{get:function(){return this._isHoverByTouch},set:function(t){this.isHoverByTouch!=t&&(this._isHoverByTouch=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"overPointers",{get:function(){return this._overPointers||(this._overPointers=new o.b),this._overPointers},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isDown",{get:function(){return this._isDown},set:function(t){this.isDown!=t&&(this._isDown=t,t?Object(l.b)().downObjects.moveValue(this):Object(l.b)().downObjects.removeValue(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"downPointers",{get:function(){return this._downPointers||(this._downPointers=new o.b),this._downPointers},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isFocused",{get:function(){return this._isFocused},set:function(t){this.isFocused!=t&&(this._isFocused=t,Object(l.b)().focusedObject=t?this:void 0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isTouchProtected",{get:function(){return this._isTouchProtected},set:function(t){this._isTouchProtected!=t&&(this._isTouchProtected=t,t?Object(l.b)().unprepElement(this):(this.draggable||this.swipeable||this.trackable||this.resizable)&&Object(l.b)().prepElement(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"clickable",{get:function(){return this._clickable},set:function(t){this._clickable!==t&&(this._clickable=t,Object(l.b)().processClickable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"contextMenuDisabled",{get:function(){return this._contextMenuDisabled},set:function(t){this._contextMenuDisabled!==t&&(this._contextMenuDisabled=t,Object(l.b)().processContextMenu(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hoverable",{get:function(){return this._hoverable},set:function(t){this._hoverable!==t&&(this._hoverable=t,Object(l.b)().processHoverable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"trackable",{get:function(){return this._trackable},set:function(t){this._trackable!==t&&(this._trackable=t,Object(l.b)().processTrackable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"draggable",{get:function(){return this._draggable},set:function(t){this._draggable!==t&&(this._draggable=t,Object(l.b)().processDraggable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"swipeable",{get:function(){return this._swipeable},set:function(t){this._swipeable!==t&&(this._swipeable=t,Object(l.b)().processSwipeable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"resizable",{get:function(){return this._resizable},set:function(t){this._resizable!==t&&(this._resizable=t,Object(l.b)().processResizable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"wheelable",{get:function(){return this._wheelable},set:function(t){this._wheelable!==t&&(this._wheelable=t,Object(l.b)().processWheelable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inert",{get:function(){return this._inert},set:function(t){this._inert!==t&&(this._inert=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"focusable",{get:function(){return this._focusable},set:function(t){this._focusable!==t&&(this._focusable=t,this._focusable&&-1==this.tabindex&&(this._tabindex=1),Object(l.b)().processFocusable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tabindex",{get:function(){return u.getValueDefault(this._tabindex,-1)},set:function(t){this._tabindex!==t&&(this._tabindex=t,t>-1&&(this.focusable=!0),Object(l.b)().processFocusable(this))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"element",{get:function(){return this._element},set:function(t){this._element=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"originalPosition",{get:function(){return this._originalPosition||{x:0,y:0}},set:function(t){this._originalPosition=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"originalScale",{get:function(){return u.getValueDefault(this._originalScale,1)},set:function(t){this._originalScale!==t&&(this._originalScale=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"originalAngle",{get:function(){return u.getValueDefault(this._originalAngle,0)},set:function(t){this._originalAngle!==t&&(this._originalAngle=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inertiaOptions",{get:function(){return this.sprite&&this.sprite._adapterO?this.sprite._adapterO.apply("inertiaOptions",this._inertiaOptions):this._inertiaOptions},set:function(t){this._inertiaOptions=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hitOptions",{get:function(){return this.sprite&&this.sprite._adapterO?this.sprite._adapterO.apply("hitOptions",this._hitOptions):this._hitOptions},set:function(t){this._hitOptions=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hoverOptions",{get:function(){return this.sprite&&this.sprite._adapterO?this.sprite._adapterO.apply("hoverOptions",this._hoverOptions):this._hoverOptions},set:function(t){this._hoverOptions=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"swipeOptions",{get:function(){return this.sprite&&this.sprite._adapterO?this.sprite._adapterO.apply("swipeOptions",this._swipeOptions):this._swipeOptions},set:function(t){this._swipeOptions=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"keyboardOptions",{get:function(){return this.sprite&&this.sprite._adapterO?this.sprite._adapterO.apply("keyboardOptions",this._keyboardOptions):this._keyboardOptions},set:function(t){this._keyboardOptions=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"mouseOptions",{get:function(){return this.sprite&&this.sprite._adapterO?this.sprite._adapterO.apply("mouseOptions",this._mouseOptions):this._mouseOptions},set:function(t){this._mouseOptions=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cursorOptions",{get:function(){return this.sprite&&this.sprite._adapterO?this.sprite._adapterO.apply("cursorOptions",this._cursorOptions):this._cursorOptions},set:function(t){this._cursorOptions=t},enumerable:!0,configurable:!0}),e.prototype.copyFrom=function(e){t.prototype.copyFrom.call(this,e),this.inertiaOptions=e.inertiaOptions,this.hitOptions=e.hitOptions,this.hoverOptions=e.hoverOptions,this.swipeOptions=e.swipeOptions,this.keyboardOptions=e.keyboardOptions,this.cursorOptions=e.cursorOptions,this.contextMenuDisabled=e.contextMenuDisabled,Object(l.b)().applyCursorOverStyle(this)},e.prototype.setEventDisposer=function(t,e,i){var n=this.eventDisposers.getKey(t);e?null==n&&this.eventDisposers.setKey(t,i()):null!=n&&(n.dispose(),this.eventDisposers.removeKey(t))},e.prototype.dispose=function(){t.prototype.dispose.call(this);var e=Object(l.b)();e.overObjects.removeValue(this),e.downObjects.removeValue(this),e.trackedObjects.removeValue(this),e.transformedObjects.removeValue(this),this.isHover&&this.wheelable&&e.unlockWheel(),e.focusedObject===this&&(e.focusedObject=void 0)},e}(a.b)},vfRf:function(t,e){var i=0,n=Math.random();t.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++i+n).toString(36)}},vfdp:function(t,e,i){(function(e){var i=function(t){return t&&t.Math==Math&&t};t.exports=i("object"==typeof globalThis&&globalThis)||i("object"==typeof window&&window)||i("object"==typeof self&&self)||i("object"==typeof e&&e)||Function("return this")()}).call(e,i("VTyh"))},"vi/P":function(t,e,i){"use strict";var n,r=i("vfdp"),a=i("/vWR"),o=i("Tl3C"),s=i("HMf+"),l=i("NNEa"),u=i("Kg2n"),h=i("SqFF").enforce,c=i("JAqT"),p=!r.ActiveXObject&&"ActiveXObject"in r,d=Object.isExtensible,f=function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},g=t.exports=s("WeakMap",f,l);if(c&&p){n=l.getConstructor(f,"WeakMap",!0),o.REQUIRED=!0;var y=g.prototype,m=y.delete,v=y.has,b=y.get,x=y.set;a(y,{delete:function(t){if(u(t)&&!d(t)){var e=h(this);return e.frozen||(e.frozen=new n),m.call(this,t)||e.frozen.delete(t)}return m.call(this,t)},has:function(t){if(u(t)&&!d(t)){var e=h(this);return e.frozen||(e.frozen=new n),v.call(this,t)||e.frozen.has(t)}return v.call(this,t)},get:function(t){if(u(t)&&!d(t)){var e=h(this);return e.frozen||(e.frozen=new n),v.call(this,t)?b.call(this,t):e.frozen.get(t)}return b.call(this,t)},set:function(t,e){if(u(t)&&!d(t)){var i=h(this);i.frozen||(i.frozen=new n),v.call(this,t)?x.call(this,t,e):i.frozen.set(t,e)}else x.call(this,t,e);return this}})}},vjgd:function(t,e,i){"use strict";var n=i("7X7h"),r=i("Y8n3"),a=i("tHyI");t.exports=function(t){for(var e=n(this),i=a(e.length),o=arguments.length,s=r(o>1?arguments[1]:void 0,i),l=o>2?arguments[2]:void 0,u=void 0===l?i:r(l,i);u>s;)e[s++]=t;return e}},"w+oS":function(t,e,i){var n=i("0sYB"),r=i("3sMl");n({target:"Object",stat:!0,forced:!r,sham:!r},{defineProperties:i("Mdrz")})},w2pQ:function(t,e,i){"use strict";i("sSOU");var n,r=i("0sYB"),a=i("3sMl"),o=i("leaB"),s=i("vfdp"),l=i("Mdrz"),u=i("z3p0"),h=i("L56b"),c=i("JZRr"),p=i("HZlQ"),d=i("aHAe"),f=i("Wqjq").codeAt,g=i("ilXn"),y=i("NRfM"),m=i("Ecdy"),v=i("SqFF"),b=s.URL,x=m.URLSearchParams,_=m.getState,P=v.set,w=v.getterFor("URL"),O=Math.floor,T=Math.pow,S=/[A-Za-z]/,C=/[\d+\-.A-Za-z]/,I=/\d/,k=/^(0x|0X)/,D=/^[0-7]+$/,j=/^\d+$/,V=/^[\dA-Fa-f]+$/,A=/[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,M=/[\u0000\u0009\u000A\u000D #/:?@[\\]]/,F=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,E=/[\u0009\u000A\u000D]/g,R=function(t,e){var i,n,r;if("["==e.charAt(0)){if("]"!=e.charAt(e.length-1))return"Invalid host";if(!(i=L(e.slice(1,-1))))return"Invalid host";t.host=i}else if(G(t)){if(e=g(e),A.test(e))return"Invalid host";if(null===(i=N(e)))return"Invalid host";t.host=i}else{if(M.test(e))return"Invalid host";for(i="",n=d(e),r=0;r<n.length;r++)i+=z(n[r],U);t.host=i}},N=function(t){var e,i,n,r,a,o,s,l=t.split(".");if(l.length&&""==l[l.length-1]&&l.pop(),(e=l.length)>4)return t;for(i=[],n=0;n<e;n++){if(""==(r=l[n]))return t;if(a=10,r.length>1&&"0"==r.charAt(0)&&(a=k.test(r)?16:8,r=r.slice(8==a?1:2)),""===r)o=0;else{if(!(10==a?j:8==a?D:V).test(r))return t;o=parseInt(r,a)}i.push(o)}for(n=0;n<e;n++)if(o=i[n],n==e-1){if(o>=T(256,5-e))return null}else if(o>255)return null;for(s=i.pop(),n=0;n<i.length;n++)s+=i[n]*T(256,3-n);return s},L=function(t){var e,i,n,r,a,o,s,l=[0,0,0,0,0,0,0,0],u=0,h=null,c=0,p=function(){return t.charAt(c)};if(":"==p()){if(":"!=t.charAt(1))return;c+=2,h=++u}for(;p();){if(8==u)return;if(":"!=p()){for(e=i=0;i<4&&V.test(p());)e=16*e+parseInt(p(),16),c++,i++;if("."==p()){if(0==i)return;if(c-=i,u>6)return;for(n=0;p();){if(r=null,n>0){if(!("."==p()&&n<4))return;c++}if(!I.test(p()))return;for(;I.test(p());){if(a=parseInt(p(),10),null===r)r=a;else{if(0==r)return;r=10*r+a}if(r>255)return;c++}l[u]=256*l[u]+r,2!=++n&&4!=n||u++}if(4!=n)return;break}if(":"==p()){if(c++,!p())return}else if(p())return;l[u++]=e}else{if(null!==h)return;c++,h=++u}}if(null!==h)for(o=u-h,u=7;0!=u&&o>0;)s=l[u],l[u--]=l[h+o-1],l[h+--o]=s;else if(8!=u)return;return l},B=function(t){var e,i,n,r;if("number"==typeof t){for(e=[],i=0;i<4;i++)e.unshift(t%256),t=O(t/256);return e.join(".")}if("object"==typeof t){for(e="",n=function(t){for(var e=null,i=1,n=null,r=0,a=0;a<8;a++)0!==t[a]?(r>i&&(e=n,i=r),n=null,r=0):(null===n&&(n=a),++r);return r>i&&(e=n,i=r),e}(t),i=0;i<8;i++)r&&0===t[i]||(r&&(r=!1),n===i?(e+=i?":":"::",r=!0):(e+=t[i].toString(16),i<7&&(e+=":")));return"["+e+"]"}return t},U={},W=p({},U,{" ":1,'"':1,"<":1,">":1,"`":1}),Y=p({},W,{"#":1,"?":1,"{":1,"}":1}),H=p({},Y,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),z=function(t,e){var i=f(t,0);return i>32&&i<127&&!c(e,t)?t:encodeURIComponent(t)},X={ftp:21,file:null,http:80,https:443,ws:80,wss:443},G=function(t){return c(X,t.scheme)},K=function(t){return""!=t.username||""!=t.password},q=function(t){return!t.host||t.cannotBeABaseURL||"file"==t.scheme},Z=function(t,e){var i;return 2==t.length&&S.test(t.charAt(0))&&(":"==(i=t.charAt(1))||!e&&"|"==i)},Q=function(t){var e;return t.length>1&&Z(t.slice(0,2))&&(2==t.length||"/"===(e=t.charAt(2))||"\\"===e||"?"===e||"#"===e)},J=function(t){var e=t.path,i=e.length;!i||"file"==t.scheme&&1==i&&Z(e[0],!0)||e.pop()},$=function(t){return"."===t||"%2e"===t.toLowerCase()},tt=function(t){return".."===(t=t.toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t},et={},it={},nt={},rt={},at={},ot={},st={},lt={},ut={},ht={},ct={},pt={},dt={},ft={},gt={},yt={},mt={},vt={},bt={},xt={},_t={},Pt=function(t,e,i,r){var a,o,s,l,u=i||et,h=0,p="",f=!1,g=!1,y=!1;for(i||(t.scheme="",t.username="",t.password="",t.host=null,t.port=null,t.path=[],t.query=null,t.fragment=null,t.cannotBeABaseURL=!1,e=e.replace(F,"")),e=e.replace(E,""),a=d(e);h<=a.length;){switch(o=a[h],u){case et:if(!o||!S.test(o)){if(i)return"Invalid scheme";u=nt;continue}p+=o.toLowerCase(),u=it;break;case it:if(o&&(C.test(o)||"+"==o||"-"==o||"."==o))p+=o.toLowerCase();else{if(":"!=o){if(i)return"Invalid scheme";p="",u=nt,h=0;continue}if(i&&(G(t)!=c(X,p)||"file"==p&&(K(t)||null!==t.port)||"file"==t.scheme&&!t.host))return;if(t.scheme=p,i)return void(G(t)&&X[t.scheme]==t.port&&(t.port=null));p="","file"==t.scheme?u=ft:G(t)&&r&&r.scheme==t.scheme?u=rt:G(t)?u=lt:"/"==a[h+1]?(u=at,h++):(t.cannotBeABaseURL=!0,t.path.push(""),u=bt)}break;case nt:if(!r||r.cannotBeABaseURL&&"#"!=o)return"Invalid scheme";if(r.cannotBeABaseURL&&"#"==o){t.scheme=r.scheme,t.path=r.path.slice(),t.query=r.query,t.fragment="",t.cannotBeABaseURL=!0,u=_t;break}u="file"==r.scheme?ft:ot;continue;case rt:if("/"!=o||"/"!=a[h+1]){u=ot;continue}u=ut,h++;break;case at:if("/"==o){u=ht;break}u=vt;continue;case ot:if(t.scheme=r.scheme,o==n)t.username=r.username,t.password=r.password,t.host=r.host,t.port=r.port,t.path=r.path.slice(),t.query=r.query;else if("/"==o||"\\"==o&&G(t))u=st;else if("?"==o)t.username=r.username,t.password=r.password,t.host=r.host,t.port=r.port,t.path=r.path.slice(),t.query="",u=xt;else{if("#"!=o){t.username=r.username,t.password=r.password,t.host=r.host,t.port=r.port,t.path=r.path.slice(),t.path.pop(),u=vt;continue}t.username=r.username,t.password=r.password,t.host=r.host,t.port=r.port,t.path=r.path.slice(),t.query=r.query,t.fragment="",u=_t}break;case st:if(!G(t)||"/"!=o&&"\\"!=o){if("/"!=o){t.username=r.username,t.password=r.password,t.host=r.host,t.port=r.port,u=vt;continue}u=ht}else u=ut;break;case lt:if(u=ut,"/"!=o||"/"!=p.charAt(h+1))continue;h++;break;case ut:if("/"!=o&&"\\"!=o){u=ht;continue}break;case ht:if("@"==o){f&&(p="%40"+p),f=!0,s=d(p);for(var m=0;m<s.length;m++){var v=s[m];if(":"!=v||y){var b=z(v,H);y?t.password+=b:t.username+=b}else y=!0}p=""}else if(o==n||"/"==o||"?"==o||"#"==o||"\\"==o&&G(t)){if(f&&""==p)return"Invalid authority";h-=d(p).length+1,p="",u=ct}else p+=o;break;case ct:case pt:if(i&&"file"==t.scheme){u=yt;continue}if(":"!=o||g){if(o==n||"/"==o||"?"==o||"#"==o||"\\"==o&&G(t)){if(G(t)&&""==p)return"Invalid host";if(i&&""==p&&(K(t)||null!==t.port))return;if(l=R(t,p))return l;if(p="",u=mt,i)return;continue}"["==o?g=!0:"]"==o&&(g=!1),p+=o}else{if(""==p)return"Invalid host";if(l=R(t,p))return l;if(p="",u=dt,i==pt)return}break;case dt:if(!I.test(o)){if(o==n||"/"==o||"?"==o||"#"==o||"\\"==o&&G(t)||i){if(""!=p){var x=parseInt(p,10);if(x>65535)return"Invalid port";t.port=G(t)&&x===X[t.scheme]?null:x,p=""}if(i)return;u=mt;continue}return"Invalid port"}p+=o;break;case ft:if(t.scheme="file","/"==o||"\\"==o)u=gt;else{if(!r||"file"!=r.scheme){u=vt;continue}if(o==n)t.host=r.host,t.path=r.path.slice(),t.query=r.query;else if("?"==o)t.host=r.host,t.path=r.path.slice(),t.query="",u=xt;else{if("#"!=o){Q(a.slice(h).join(""))||(t.host=r.host,t.path=r.path.slice(),J(t)),u=vt;continue}t.host=r.host,t.path=r.path.slice(),t.query=r.query,t.fragment="",u=_t}}break;case gt:if("/"==o||"\\"==o){u=yt;break}r&&"file"==r.scheme&&!Q(a.slice(h).join(""))&&(Z(r.path[0],!0)?t.path.push(r.path[0]):t.host=r.host),u=vt;continue;case yt:if(o==n||"/"==o||"\\"==o||"?"==o||"#"==o){if(!i&&Z(p))u=vt;else if(""==p){if(t.host="",i)return;u=mt}else{if(l=R(t,p))return l;if("localhost"==t.host&&(t.host=""),i)return;p="",u=mt}continue}p+=o;break;case mt:if(G(t)){if(u=vt,"/"!=o&&"\\"!=o)continue}else if(i||"?"!=o)if(i||"#"!=o){if(o!=n&&(u=vt,"/"!=o))continue}else t.fragment="",u=_t;else t.query="",u=xt;break;case vt:if(o==n||"/"==o||"\\"==o&&G(t)||!i&&("?"==o||"#"==o)){if(tt(p)?(J(t),"/"==o||"\\"==o&&G(t)||t.path.push("")):$(p)?"/"==o||"\\"==o&&G(t)||t.path.push(""):("file"==t.scheme&&!t.path.length&&Z(p)&&(t.host&&(t.host=""),p=p.charAt(0)+":"),t.path.push(p)),p="","file"==t.scheme&&(o==n||"?"==o||"#"==o))for(;t.path.length>1&&""===t.path[0];)t.path.shift();"?"==o?(t.query="",u=xt):"#"==o&&(t.fragment="",u=_t)}else p+=z(o,Y);break;case bt:"?"==o?(t.query="",u=xt):"#"==o?(t.fragment="",u=_t):o!=n&&(t.path[0]+=z(o,U));break;case xt:i||"#"!=o?o!=n&&("'"==o&&G(t)?t.query+="%27":t.query+="#"==o?"%23":z(o,U)):(t.fragment="",u=_t);break;case _t:o!=n&&(t.fragment+=z(o,W))}h++}},wt=function(t){var e,i,n=h(this,wt,"URL"),r=arguments.length>1?arguments[1]:void 0,o=String(t),s=P(n,{type:"URL"});if(void 0!==r)if(r instanceof wt)e=w(r);else if(i=Pt(e={},String(r)))throw TypeError(i);if(i=Pt(s,o,null,e))throw TypeError(i);var l=s.searchParams=new x,u=_(l);u.updateSearchParams(s.query),u.updateURL=function(){s.query=String(l)||null},a||(n.href=Tt.call(n),n.origin=St.call(n),n.protocol=Ct.call(n),n.username=It.call(n),n.password=kt.call(n),n.host=Dt.call(n),n.hostname=jt.call(n),n.port=Vt.call(n),n.pathname=At.call(n),n.search=Mt.call(n),n.searchParams=Ft.call(n),n.hash=Et.call(n))},Ot=wt.prototype,Tt=function(){var t=w(this),e=t.scheme,i=t.username,n=t.password,r=t.host,a=t.port,o=t.path,s=t.query,l=t.fragment,u=e+":";return null!==r?(u+="//",K(t)&&(u+=i+(n?":"+n:"")+"@"),u+=B(r),null!==a&&(u+=":"+a)):"file"==e&&(u+="//"),u+=t.cannotBeABaseURL?o[0]:o.length?"/"+o.join("/"):"",null!==s&&(u+="?"+s),null!==l&&(u+="#"+l),u},St=function(){var t=w(this),e=t.scheme,i=t.port;if("blob"==e)try{return new URL(e.path[0]).origin}catch(t){return"null"}return"file"!=e&&G(t)?e+"://"+B(t.host)+(null!==i?":"+i:""):"null"},Ct=function(){return w(this).scheme+":"},It=function(){return w(this).username},kt=function(){return w(this).password},Dt=function(){var t=w(this),e=t.host,i=t.port;return null===e?"":null===i?B(e):B(e)+":"+i},jt=function(){var t=w(this).host;return null===t?"":B(t)},Vt=function(){var t=w(this).port;return null===t?"":String(t)},At=function(){var t=w(this),e=t.path;return t.cannotBeABaseURL?e[0]:e.length?"/"+e.join("/"):""},Mt=function(){var t=w(this).query;return t?"?"+t:""},Ft=function(){return w(this).searchParams},Et=function(){var t=w(this).fragment;return t?"#"+t:""},Rt=function(t,e){return{get:t,set:e,configurable:!0,enumerable:!0}};if(a&&l(Ot,{href:Rt(Tt,function(t){var e=w(this),i=String(t),n=Pt(e,i);if(n)throw TypeError(n);_(e.searchParams).updateSearchParams(e.query)}),origin:Rt(St),protocol:Rt(Ct,function(t){var e=w(this);Pt(e,String(t)+":",et)}),username:Rt(It,function(t){var e=w(this),i=d(String(t));if(!q(e)){e.username="";for(var n=0;n<i.length;n++)e.username+=z(i[n],H)}}),password:Rt(kt,function(t){var e=w(this),i=d(String(t));if(!q(e)){e.password="";for(var n=0;n<i.length;n++)e.password+=z(i[n],H)}}),host:Rt(Dt,function(t){var e=w(this);e.cannotBeABaseURL||Pt(e,String(t),ct)}),hostname:Rt(jt,function(t){var e=w(this);e.cannotBeABaseURL||Pt(e,String(t),pt)}),port:Rt(Vt,function(t){var e=w(this);q(e)||(""==(t=String(t))?e.port=null:Pt(e,t,dt))}),pathname:Rt(At,function(t){var e=w(this);e.cannotBeABaseURL||(e.path=[],Pt(e,t+"",mt))}),search:Rt(Mt,function(t){var e=w(this);""==(t=String(t))?e.query=null:("?"==t.charAt(0)&&(t=t.slice(1)),e.query="",Pt(e,t,xt)),_(e.searchParams).updateSearchParams(e.query)}),searchParams:Rt(Ft),hash:Rt(Et,function(t){var e=w(this);""!=(t=String(t))?("#"==t.charAt(0)&&(t=t.slice(1)),e.fragment="",Pt(e,t,_t)):e.fragment=null})}),u(Ot,"toJSON",function(){return Tt.call(this)},{enumerable:!0}),u(Ot,"toString",function(){return Tt.call(this)},{enumerable:!0}),b){var Nt=b.createObjectURL,Lt=b.revokeObjectURL;Nt&&u(wt,"createObjectURL",function(t){return Nt.apply(b,arguments)}),Lt&&u(wt,"revokeObjectURL",function(t){return Lt.apply(b,arguments)})}y(wt,"URL"),r({global:!0,forced:!o,sham:!a},{URL:wt})},w4m0:function(t,e,i){"use strict";i.d(e,"a",function(){return s});var n=i("m4/l"),r=i("GtDR"),a=i("aFzC"),o=i("hGwe"),s=function(t){function e(){var e=t.call(this)||this;return e.className="WavedRectangle",e.element=e.paper.add("path"),e.waveLength=16,e.waveHeight=4,e.tension=.8,e.setPropertyValue("wavedLeft",!0),e.setPropertyValue("wavedRight",!0),e.setPropertyValue("wavedTop",!0),e.setPropertyValue("wavedBottom",!0),e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.draw=function(){t.prototype.draw.call(this);var e=this.pixelWidth,i=this.pixelHeight;if(e>0&&i>0){var n={x:0,y:0},r={x:e,y:0},s={x:e,y:i},l={x:0,y:i},u=Math.min(e,this.waveLength),h=Math.min(i,this.waveHeight),c=Math.min(i,this.waveLength),p=Math.min(e,this.waveHeight),d="",f="",g="",y="";this.wavedTop&&(d=Object(a.c)(n,r,u,h,this.tension,!0)),this.wavedRight&&(f=Object(a.c)(r,s,c,p,this.tension,!0)),this.wavedBottom&&(g=Object(a.c)(s,l,u,h,this.tension,!0)),this.wavedLeft&&(y=Object(a.c)(l,n,c,p,this.tension,!0)),this.path=o.moveTo(n)+d+o.lineTo(r)+f+o.lineTo(s)+g+o.lineTo(l)+y+"z"}},Object.defineProperty(e.prototype,"waveLength",{get:function(){return this.getPropertyValue("waveLength")},set:function(t){this.setPropertyValue("waveLength",t),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"waveHeight",{get:function(){return this.getPropertyValue("waveHeight")},set:function(t){this.setPropertyValue("waveHeight",t),this.invalidate()},enumerable:!0,configurable:!0}),e.prototype.setWavedSides=function(t,e,i,n){this.wavedTop=t,this.wavedRight=e,this.wavedBottom=i,this.wavedLeft=n},Object.defineProperty(e.prototype,"tension",{get:function(){return this.getPropertyValue("tension")},set:function(t){this.setPropertyValue("tension",t),this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"wavedRight",{get:function(){return this.getPropertyValue("wavedRight")},set:function(t){this.setPropertyValue("wavedRight",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"wavedLeft",{get:function(){return this.getPropertyValue("wavedLeft")},set:function(t){this.setPropertyValue("wavedLeft",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"wavedTop",{get:function(){return this.getPropertyValue("wavedTop")},set:function(t){this.setPropertyValue("wavedTop",t,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"wavedBottom",{get:function(){return this.getPropertyValue("wavedBottom")},set:function(t){this.setPropertyValue("wavedBottom",t,!0)},enumerable:!0,configurable:!0}),e}(r.a)},wGwV:function(t,e,i){"use strict";var n=i("0sYB"),r=i("lnCe"),a=i("97TN"),o=i("6aQQ"),s=i("1wCr"),l=i("Nfo5"),u=i("E81g"),h=i("z3p0");n({target:"Promise",proto:!0,real:!0,forced:!!a&&o(function(){a.prototype.finally.call({then:function(){}},function(){})})},{finally:function(t){var e=l(this,s("Promise")),i="function"==typeof t;return this.then(i?function(i){return u(e,t()).then(function(){return i})}:t,i?function(i){return u(e,t()).then(function(){throw i})}:t)}}),r||"function"!=typeof a||a.prototype.finally||h(a.prototype,"finally",s("Promise").prototype.finally)},wLyq:function(t,e,i){"use strict";var n=i("0sYB"),r=i("gxUV").f,a=i("tHyI"),o=i("qK31"),s=i("swFJ"),l=i("eVN0"),u=i("lnCe"),h="".endsWith,c=Math.min,p=l("endsWith");n({target:"String",proto:!0,forced:!(!u&&!p&&!!function(){var t=r(String.prototype,"endsWith");return t&&!t.writable}())&&!p},{endsWith:function(t){var e=String(s(this));o(t);var i=arguments.length>1?arguments[1]:void 0,n=a(e.length),r=void 0===i?n:c(a(i),n),l=String(t);return h?h.call(e,l,r):e.slice(r-l.length,r)===l}})},wUYf:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.order=function(t,e){return t===e?0:t<e?-1:1},e.repeat=function(t,e){return new Array(e+1).join(t)},e.random=function(t){for(var e="",i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n=0;n<t;n++)e+=i.charAt(Math.floor(Math.random()*i.length));return e}},wfEi:function(t,e,i){"use strict";var n=i("NSJ1");(0,i("UseD").exportTypedArrayStaticMethod)("from",i("3Fha"),n)},wgyV:function(t,e,i){var n=i("0sYB"),r=i("6aQQ"),a=i("Kg2n"),o=Object.isSealed;n({target:"Object",stat:!0,forced:r(function(){o(1)})},{isSealed:function(t){return!a(t)||!!o&&o(t)}})},wyAw:function(t,e,i){"use strict";var n=i("UseD"),r=i("X/sl").find,a=n.aTypedArray;(0,n.exportTypedArrayMethod)("find",function(t){return r(a(this),t,arguments.length>1?arguments[1]:void 0)})},x79X:function(t,e,i){"use strict";i.d(e,"b",function(){return u}),i.d(e,"c",function(){return h}),i.d(e,"a",function(){return c});var n=i("VGgz"),r=i("3Cxr"),a=i("MlsF"),o=i("Wglt"),s=i("hJ5i"),l=i("Mtpk"),u=function(){function t(){this._callbackId=0,this._callbacks=new n.c(function(t,e){return a.a(r.order(t.priority,e.priority),r.order(t.id,e.id))})}return t.prototype.addAll=function(t,e,i,n,r){void 0===n&&(n=0),this._callbacks.insert({id:++this._callbackId,key:e,callback:i,priority:n,scope:r,type:t})},t.prototype.isEnabled=function(t,e){return s.any(this._callbacks.values,function(i){return i.key===e&&t instanceof i.type})},t.prototype.applyAll=function(t,e,i){var n=this._callbacks.values,r=n.length;if(0==r)return i;for(var a=0;a<r;++a){var o=n[a];o.key===e&&t instanceof o.type&&(i=o.callback.call(o.scope,i,t,e))}return i},t}(),h=new u,c=function(){function t(t){this._callbackId=0,this._callbacks=new n.c(function(t,e){return a.a(r.order(t.priority,e.priority),r.order(t.id,e.id))}),this._disabled={},this.object=t,this.events=this._callbacks.events}return t.prototype.add=function(t,e,i,n){void 0===i&&(i=0),this._callbacks.insert({id:++this._callbackId,key:t,callback:e,priority:i,scope:n})},t.prototype.has=function(t,e,i,n){return void 0===i&&(i=0),o.contains(this._callbacks.iterator(),function(r){return r.key===t&&r.callback===e&&r.priority===i&&r.scope===n})},t.prototype.remove=function(t,e){var i=this;s.each(o.toArray(this._callbacks.iterator()),function(n){n.key!==t||l.isNumber(e)&&e!==n.priority||i._callbacks.remove(n)})},t.prototype.enableKey=function(t){delete this._disabled[t]},t.prototype.disableKey=function(t,e){void 0===e&&(e=1/0),this._disabled[t]=e},t.prototype._hasListenersByType=function(t){return s.any(this._callbacks.values,function(e){return e.key===t})},t.prototype.isEnabled=function(t){return null==this._disabled[t]&&(this._hasListenersByType(t)||h.isEnabled(this.object,t))},t.prototype._shouldDispatch=function(t){var e=this._disabled[t];return!l.isNumber(e)||(e<=1?delete this._disabled[t]:--this._disabled[t],!1)},t.prototype.apply=function(t,e){if(this._shouldDispatch(t)){var i=this._callbacks.values,n=i.length;if(n>0)for(var r=0;r<n;++r){var a=i[r];a.key===t&&(e=a.callback.call(a.scope,e,this.object,t))}return e=h.applyAll(this.object,t,e)}return e},t.prototype.keys=function(){return o.toArray(o.map(this._callbacks.iterator(),function(t){return t.key}))},t.prototype.copyFrom=function(t){var e=this;o.each(t._callbacks.iterator(),function(t){e.add(t.key,t.callback,t.priority,t.scope)})},t.prototype.clear=function(){this._callbacks.clear()},t}()},xIv9:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("aGXA"),a=i("Vs7R"),o=i("MIZb"),s=i("aCit"),l=i("hGwe"),u=function(t){function e(){var e=t.call(this)||this;e.className="ResizeButton",e.orientation="horizontal",e.layout="absolute",e.horizontalCenter="middle",e.verticalCenter="middle",e.draggable=!0,e.padding(8,8,8,8),e.background.cornerRadius(20,20,20,20);var i=new a.a;i.element=e.paper.add("path");var n=l.moveTo({x:-2,y:-6});return n+=l.lineTo({x:-2,y:6}),n+=l.moveTo({x:2,y:-6}),n+=l.lineTo({x:2,y:6}),i.path=n,i.pixelPerfect=!0,i.padding(0,4,0,4),i.stroke=(new o.a).getFor("alternativeText"),i.strokeOpacity=.7,e.icon=i,e.label.dispose(),e.label=void 0,e.applyTheme(),e}return Object(n.c)(e,t),Object.defineProperty(e.prototype,"orientation",{set:function(t){var e=this.icon;e&&(e.rotation="horizontal"==t?0:-90)},enumerable:!0,configurable:!0}),e}(r.a);s.c.registeredClasses.ResizeButton=u},xLUE:function(t,e,i){i("0sYB")({target:"Math",stat:!0},{sign:i("8nEM")})},xaIW:function(t,e,i){var n=i("6aQQ");t.exports=!!Object.getOwnPropertySymbols&&!n(function(){return!String(Symbol())})},xbKe:function(t,e,i){i("0sYB")({target:"Array",stat:!0},{isArray:i("o3G/")})},xgTw:function(t,e,i){"use strict";i.d(e,"a",function(){return u});var n=i("m4/l"),r=i("jfaP"),a=i("aCit"),o=i("Gg2j"),s=i("Mtpk"),l=i("hGwe"),u=function(t){function e(){var e=t.call(this)||this;return e.className="Polyspline",e.tensionX=.5,e.tensionY=.5,e.applyTheme(),e}return Object(n.c)(e,t),e.prototype.makePath=function(){this._distance=0;var t=this.segments,e=this.tensionX,i=this.tensionY;if(this.allPoints=[],t&&t.length>0){var n="";this._realSegments=[];for(var r=0,a=t.length;r<a;r++){var s=t[r],u=[];if(this._realSegments.push(u),s.length>0){var h=s[0],c=s[s.length-1],p=!1;o.round(h.x,3)==o.round(c.x)&&o.round(h.y)==o.round(c.y)&&(p=!0),n+=l.moveTo(s[0]);for(var d=0;d<s.length-1;d++){var f=s[d-1],g=s[d],y=s[d+1],m=s[d+2];0===d?f=s[d]:d==s.length-2&&(m=s[d+1]),m||(m=y),0===d?f=p?s[s.length-2]:s[r]:d==s.length-2&&(m=p?s[1]:s[d+1]);var v=o.getCubicControlPointA(f,g,y,m,e,i),b=o.getCubicControlPointB(f,g,y,m,e,i);n+=l.cubicCurveTo(y,v,b);var x=1.2*Math.ceil(o.getCubicCurveDistance(g,y,v,b,20)),_=g;if(x>0)for(var P=0;P<=x;P++){var w=o.getPointOnCubicCurve(g,y,v,b,P/x);if(w.x!=_.x||w.y!=_.y){u.push(w);var O=o.round(o.getAngle(_,w),5);this._distance+=o.getDistance(_,w),this.allPoints[Math.floor(this._distance)]={x:w.x,y:w.y,angle:O},_=w}}else u.push(f)}}var T=this.allPoints;if(T.length>1)for(var S=0;S<T.length;S++)if(!T[S])if(S>1)T[S]=T[S-1];else for(var C=1;C<T.length;C++)if(T[C]){T[S]=T[C];break}}this.path=n}},e.prototype.getClosestPointIndex=function(t){var e,i=this.allPoints,n=1/0;if(i.length>1)for(var r=1;r<i.length;r++){var a=o.getDistance(t,i[r]);a<n&&(e=r,n=a)}return e},Object.defineProperty(e.prototype,"tensionX",{get:function(){return this.getPropertyValue("tensionX")},set:function(t){this.setPropertyValue("tensionX",t),this.makePath()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tensionY",{get:function(){return this.getPropertyValue("tensionY")},set:function(t){this.setPropertyValue("tensionY",t,!0),this.makePath()},enumerable:!0,configurable:!0}),e.prototype.positionToPoint=function(t,e){var i=0,n=this.allPoints,r=n.length;if(s.isNumber(t)||(t=0),r>1){if(e&&r>3){if(t<0){t<-.01&&(t=-.01);var a=n[0],l=n[1];return{x:u=a.x-(a.x-l.x)*r*t,y:h=a.y-(a.y-l.y)*r*t,angle:o.getAngle(a,l)}}if(t>1){t>1.01&&(t=1.01);var u,h;a=n[n.length-2],l=n[n.length-3];return{x:u=a.x+(a.x-l.x)*r*(t-1),y:h=a.y+(a.y-l.y)*r*(t-1),angle:o.getAngle(a,{x:u,y:h})}}if(1==t){var c=n[n.length-1];return{x:c.x,y:c.y,angle:c.angle}}}else t<0&&(t=Math.abs(t),i=180),t>=1&&(t=.9999999999999);var p;return{x:(p=n[Math.floor(t*r)]).x,y:p.y,angle:p.angle+i}}return 1==r?{x:(p=n[0]).x,y:p.y,angle:p.angle}:{x:0,y:0,angle:0}},e}(r.a);a.c.registeredClasses.Polyspline=u},xlUI:function(t,e,i){"use strict";var n=i("6aQQ");t.exports=function(t,e){var i=[][t];return!!i&&n(function(){i.call(null,e||function(){throw 1},1)})}},xtHw:function(t,e,i){i("eygo")("Float64",function(t){return function(e,i,n){return t(this,e,i,n)}})},xv7a:function(t,e,i){"use strict";var n=i("0sYB"),r=i("6aQQ"),a=i("o3G/"),o=i("Kg2n"),s=i("7X7h"),l=i("tHyI"),u=i("WShl"),h=i("Rs0P"),c=i("ugpH"),p=i("KslR"),d=i("hvfb"),f=p("isConcatSpreadable"),g=d>=51||!r(function(){var t=[];return t[f]=!1,t.concat()[0]!==t}),y=c("concat"),m=function(t){if(!o(t))return!1;var e=t[f];return void 0!==e?!!e:a(t)};n({target:"Array",proto:!0,forced:!g||!y},{concat:function(t){var e,i,n,r,a,o=s(this),c=h(o,0),p=0;for(e=-1,n=arguments.length;e<n;e++)if(a=-1===e?o:arguments[e],m(a)){if(p+(r=l(a.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(i=0;i<r;i++,p++)i in a&&u(c,p,a[i])}else{if(p>=9007199254740991)throw TypeError("Maximum allowed index exceeded");u(c,p++,a)}return c.length=p,c}})},yBTm:function(t,e,i){"use strict";var n=i("9XRO"),r=i("0FA2"),a=i("CNF5"),o=i("SqFF"),s=i("vBfr"),l=o.set,u=o.getterFor("Array Iterator");t.exports=s(Array,"Array",function(t,e){l(this,{type:"Array Iterator",target:n(t),index:0,kind:e})},function(){var t=u(this),e=t.target,i=t.kind,n=t.index++;return!e||n>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==i?{value:n,done:!1}:"values"==i?{value:e[n],done:!1}:{value:[n,e[n]],done:!1}},"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},ybeA:function(t,e,i){var n=i("0sYB"),r=i("vfdp"),a=i("RjhM"),o=[].slice,s=function(t){return function(e,i){var n=arguments.length>2,r=n?o.call(arguments,2):void 0;return t(n?function(){("function"==typeof e?e:Function(e)).apply(this,r)}:e,i)}};n({global:!0,bind:!0,forced:/MSIE .\./.test(a)},{setTimeout:s(r.setTimeout),setInterval:s(r.setInterval)})},yv8f:function(t,e,i){i("0sYB")({target:"Number",stat:!0},{isFinite:i("IwOK")})},ywCi:function(t,e,i){i("6WsA")("species")},ywzu:function(t,e,i){var n=i("oRlD"),r=i("z3p0"),a=i("hznD");n||r(Object.prototype,"toString",a,{unsafe:!0})},z3p0:function(t,e,i){var n=i("vfdp"),r=i("k2B3"),a=i("JZRr"),o=i("29Us"),s=i("2fPu"),l=i("SqFF"),u=l.get,h=l.enforce,c=String(String).split("String");(t.exports=function(t,e,i,s){var l=!!s&&!!s.unsafe,u=!!s&&!!s.enumerable,p=!!s&&!!s.noTargetGet;"function"==typeof i&&("string"!=typeof e||a(i,"name")||r(i,"name",e),h(i).source=c.join("string"==typeof e?e:"")),t!==n?(l?!p&&t[e]&&(u=!0):delete t[e],u?t[e]=i:r(t,e,i)):u?t[e]=i:o(e,i)})(Function.prototype,"toString",function(){return"function"==typeof this&&u(this).source||s(this)})},z4fB:function(t,e,i){var n=i("JZRr"),r=i("grfs"),a=i("gxUV"),o=i("8+rI");t.exports=function(t,e){for(var i=r(e),s=o.f,l=a.f,u=0;u<i.length;u++){var h=i[u];n(t,h)||s(t,h,l(e,h))}}},zNr0:function(t,e,i){i("6WsA")("isConcatSpreadable")},zQLg:function(t,e,i){i("0sYB")({target:"Math",stat:!0},{log1p:i("vRI3")})},zYbq:function(t,e,i){i("0sYB")({target:"Number",stat:!0},{EPSILON:Math.pow(2,-52)})},zhwk:function(t,e,i){"use strict";i.d(e,"a",function(){return x}),e.b=P;var n=i("m4/l"),r=i("Tjl+"),a=i("vMqJ"),o=i("1yyj"),s=i("hD5A"),l=i("vbOF"),u=i("Oe1l"),h=i("+qIf"),c=i("0PyG"),p=i("58Sn"),d=i("WYhe"),f=i("Rpw0"),g=i("0FpR"),y=i("Gg2j"),m=i("Wglt"),v=i("Mtpk"),b=i("L91H"),x=function(t){function e(){var i=t.call(this)||this;return i._globalEventsAdded=!1,i._pointerEvents={pointerdown:"mousedown",pointerup:"mouseup",pointermove:"mousemove",pointercancel:"mouseup",pointerover:"mouseover",pointerout:"mouseout",wheel:"wheel"},i._usePointerEventsOnly=!1,i._useTouchEventsOnly=!1,i._addHoverEvents=!0,i._passiveSupported=!1,i._delayedEvents={out:[]},i.overObjects=new a.b,i.downObjects=new a.b,i.trackedObjects=new a.b,i.transformedObjects=new a.b,i.pointers=new h.a,i.inertiaOptions=new h.a,i.hitOptions={doubleHitTime:300,hitTolerance:10,noFocus:!0},i.hoverOptions={touchOutBehavior:"leave",touchOutDelay:1e3},i.swipeOptions={time:500,verticalThreshold:75,horizontalThreshold:30},i.keyboardOptions={speed:.1,accelleration:1.2,accellerationDelay:2e3},i.mouseOptions={sensitivity:1},i.className="Interaction",i.body=i.getInteraction(document.body),i._disposers.push(i.body),window.hasOwnProperty("PointerEvent")?(i._pointerEvents.pointerdown="pointerdown",i._pointerEvents.pointerup="pointerup",i._pointerEvents.pointermove="pointermove",i._pointerEvents.pointercancel="pointercancel",i._pointerEvents.pointerover="pointerover",i._pointerEvents.pointerout="pointerout"):window.hasOwnProperty("MSPointerEvent")?(i._pointerEvents.pointerdown="MSPointerDown",i._pointerEvents.pointerup="MSPointerUp",i._pointerEvents.pointermove="MSPointerMove",i._pointerEvents.pointercancel="MSPointerUp",i._pointerEvents.pointerover="MSPointerOver",i._pointerEvents.pointerout="MSPointerOut"):"undefined"!=typeof matchMedia&&matchMedia("(pointer:fine)").matches?"ontouchstart"in window&&(i._addHoverEvents=!1,i._useTouchEventsOnly=!0):window.navigator.userAgent.match(/MSIE /)?i._usePointerEventsOnly=!0:i.fullFF()?i._usePointerEventsOnly=!0:i._useTouchEventsOnly=!0,"onwheel"in document.createElement("div")?i._pointerEvents.wheel="wheel":v.hasValue(document.onmousewheel)&&(i._pointerEvents.wheel="mousewheel"),i.inertiaOptions.setKey("move",{time:100,duration:500,factor:1,easing:g.polyOut3}),i.inertiaOptions.setKey("resize",{time:100,duration:500,factor:1,easing:g.polyOut3}),i._passiveSupported=e.passiveSupported,i.applyTheme(),i}return Object(n.c)(e,t),e.prototype.fullFF=function(){return window.navigator.userAgent.match(/Firefox/)&&!window.navigator.userAgent.match(/Android/)},e.prototype.debug=function(){},e.prototype.addGlobalEvents=function(){var t=this;this._globalEventsAdded||(this._useTouchEventsOnly||(this._disposers.push(Object(p.g)(document,this._pointerEvents.pointerdown,function(e){t.handleGlobalPointerDown(e)})),this._disposers.push(Object(p.g)(document,this._pointerEvents.pointermove,function(e){t.handleGlobalPointerMove(e)})),this._disposers.push(Object(p.g)(document,this._pointerEvents.pointerup,function(e){t.handleGlobalPointerUp(e)})),this._disposers.push(Object(p.g)(document,this._pointerEvents.pointercancel,function(e){t.handleGlobalPointerUp(e,!0)}))),this._usePointerEventsOnly||(this._disposers.push(Object(p.g)(document,"touchstart",function(e){t.handleGlobalTouchStart(e)})),this._disposers.push(Object(p.g)(document,"touchmove",function(e){t.handleGlobalTouchMove(e)})),this._disposers.push(Object(p.g)(document,"touchend",function(e){t.handleGlobalTouchEnd(e)}))),this._disposers.push(Object(p.g)(document,"keydown",function(e){t.handleGlobalKeyDown(e)})),this._disposers.push(Object(p.g)(document,"keyup",function(e){t.handleGlobalKeyUp(e)})),this._globalEventsAdded=!0)},e.prototype.processClickable=function(t){this.processTouchable(t)},e.prototype.processContextMenu=function(t){t.contextMenuDisabled?t.eventDisposers.hasKey("contextMenuDisabled")||t.eventDisposers.setKey("contextMenuDisabled",Object(p.g)(t.element,"contextmenu",function(t){t.preventDefault()})):t.eventDisposers.hasKey("contextMenuDisabled")&&t.eventDisposers.getKey("contextMenuDisabled").dispose()},e.prototype.processHoverable=function(t){var e=this;if(t.hoverable||t.trackable)this.addGlobalEvents(),this.applyCursorOverStyle(t),!t.eventDisposers.hasKey("hoverable")&&this._addHoverEvents&&t.eventDisposers.setKey("hoverable",new s.c([Object(p.g)(t.element,this._pointerEvents.pointerout,function(i){return e.handlePointerOut(t,i)}),Object(p.g)(t.element,this._pointerEvents.pointerover,function(i){return e.handlePointerOver(t,i)})])),t.trackable;else{var i=t.eventDisposers.getKey("hoverable");null!=i&&(i.dispose(),t.eventDisposers.removeKey("hoverable"))}this.processTouchable(t)},e.prototype.processMovable=function(t){(t.draggable||t.swipeable||t.trackable||t.resizable)&&(this.isGlobalElement(t)||t.isTouchProtected||this.prepElement(t),this.applyCursorOverStyle(t)),this.processTouchable(t)},e.prototype.processTrackable=function(t){this.processHoverable(t),this.processMovable(t),t.trackable?this.trackedObjects.moveValue(t):this.trackedObjects.removeValue(t)},e.prototype.processDraggable=function(t){this.processMovable(t)},e.prototype.processSwipeable=function(t){this.processMovable(t)},e.prototype.processResizable=function(t){this.processMovable(t)},e.prototype.processWheelable=function(t){var e=this;if(t.wheelable)t.eventDisposers.hasKey("wheelable")||t.eventDisposers.setKey("wheelable",new s.c([Object(p.g)(t.element,this._pointerEvents.wheel,function(i){return e.handleMouseWheel(t,i)},!!this._passiveSupported&&{passive:!1}),t.events.on("out",function(i){t.wheelable&&e.unlockWheel()}),t.events.on("over",function(i){t.wheelable&&e.lockWheel()})]));else{var i=t.eventDisposers.getKey("wheelable");null!=i&&(i.dispose(),t.eventDisposers.removeKey("wheelable"))}},e.prototype.processFocusable=function(t){var e=this;if(!0===t.focusable&&t.tabindex>-1&&!this._useTouchEventsOnly)t.eventDisposers.hasKey("focusable")||t.eventDisposers.setKey("focusable",new s.c([Object(p.g)(t.element,"focus",function(i){return e.handleFocus(t,i)}),Object(p.g)(t.element,"blur",function(i){return e.handleBlur(t,i)}),Object(p.g)(t.element,this._pointerEvents.pointerdown,function(i){return e.handleFocusBlur(t,i)}),Object(p.g)(t.element,"touchstart",function(i){return e.handleFocusBlur(t,i)},!!this._passiveSupported&&{passive:!1})]));else{var i=t.eventDisposers.getKey("focusable");null!=i&&(i.dispose(),t.eventDisposers.removeKey("focusable"))}},e.prototype.processTouchable=function(t){var e=this;if(t.clickable||t.hoverable||t.trackable||t.draggable||t.swipeable||t.resizable)this.addGlobalEvents(),t.eventDisposers.hasKey("touchable")||(this._useTouchEventsOnly||this._usePointerEventsOnly?this._useTouchEventsOnly?this._usePointerEventsOnly||t.eventDisposers.setKey("touchable",Object(p.g)(t.element,"touchstart",function(i){return e.handleTouchDown(t,i)},!!this._passiveSupported&&{passive:!1})):t.eventDisposers.setKey("touchable",Object(p.g)(t.element,this._pointerEvents.pointerdown,function(i){return e.handlePointerDown(t,i)})):t.eventDisposers.setKey("touchable",new s.c([Object(p.g)(t.element,this._pointerEvents.pointerdown,function(i){return e.handlePointerDown(t,i)}),Object(p.g)(t.element,"touchstart",function(i){return e.handleTouchDown(t,i)},!!this._passiveSupported&&{passive:!1})])));else{var i=t.eventDisposers.getKey("touchable");null!=i&&(i.dispose(),t.eventDisposers.removeKey("touchable"))}},e.prototype.handleFocus=function(t,e){if(t.focusable){if(t.isFocused=!0,t.events.isEnabled("focus")&&!f.b.isPaused){var i={type:"focus",target:t,event:e};t.events.dispatchImmediately("focus",i)}}else e.preventDefault()},e.prototype.handleFocusBlur=function(t,e){!1!==t.focusable&&this.getHitOption(t,"noFocus")&&t.events.once("focus",function(){t.events.disableType("blur"),p.h(),t.sprite&&t.sprite.handleBlur(),t.events.enableType("blur")})},e.prototype.handleBlur=function(t,e){if(t.focusable){if(t.isFocused=!1,t.events.isEnabled("blur")&&!f.b.isPaused){var i={type:"blur",target:t,event:e};t.events.dispatchImmediately("blur",i)}}else e.preventDefault()},e.prototype.handleGlobalKeyDown=function(t){if(this.focusedObject)if(d.b.isKey(t,"esc"))p.h();else if(this.focusedObject.draggable&&d.b.isKey(t,["up","down","left","right"])){t.preventDefault();var e=this.focusedObject;if(e.eventDisposers.hasKey("interactionKeyboardObject"))return;var i=new u.a(e,t);switch(e.eventDisposers.setKey("interactionKeyboardObject",i),d.b.getEventKey(t)){case"up":i.directionY=-1;break;case"down":i.directionY=1;break;case"left":i.directionX=-1;break;case"right":i.directionX=1}}},e.prototype.handleGlobalKeyUp=function(t){if(this.focusedObject){var e=this.focusedObject.eventDisposers.getKey("interactionKeyboardObject");null!=e&&(t.preventDefault(),e.dispose(),this.focusedObject.eventDisposers.removeKey("interactionKeyboardObject"))}},e.prototype.handleGlobalPointerMove=function(t){var e=this.getPointer(t);if(e.point=this.getPointerPoint(t),this.events.isEnabled("track")&&!f.b.isPaused){var i={type:"track",target:this,event:t,pointer:e,touch:e.touch};this.events.dispatchImmediately("track",i)}this.addBreadCrumb(e,e.point),this.handleGlobalMove(e,t)},e.prototype.handleGlobalPointerDown=function(t){this.processDelayed();var e=this.getPointer(t);if(this.events.isEnabled("down")&&!f.b.isPaused){var i={type:"down",target:this,event:t,pointer:e,touch:e.touch};this.events.dispatchImmediately("down",i)}},e.prototype.preventTouchAction=function(t){t.defaultPrevented||t.preventDefault()},e.prototype.handleGlobalPointerUp=function(t,e){void 0===e&&(e=!1);var i=this.getPointer(t);if(this.events.isEnabled("up")&&!f.b.isPaused){var n={type:"up",target:this,event:t,pointer:i,touch:i.touch};this.events.dispatchImmediately("up",n)}this.handleGlobalUp(i,t,e)},e.prototype.handleGlobalTouchMove=function(t){for(var e=0;e<t.changedTouches.length;e++){var i=this.getPointer(t.changedTouches[e]);if(i.point=this.getPointerPoint(t.changedTouches[e]),this.events.isEnabled("track")&&!f.b.isPaused){var n={type:"track",target:this,event:t,pointer:i,touch:i.touch};this.events.dispatchImmediately("track",n)}this.addBreadCrumb(i,i.point),this.handleGlobalMove(i,t)}},e.prototype.handleGlobalTouchStart=function(t){this.processDelayed();for(var e=0;e<t.changedTouches.length;e++){var i=this.getPointer(t.changedTouches[e]);if(!this._usePointerEventsOnly&&this.events.isEnabled("down")&&!f.b.isPaused){var n={type:"down",target:this,event:t,pointer:i,touch:i.touch};this.events.dispatchImmediately("down",n)}}},e.prototype.handleGlobalTouchEnd=function(t){for(var e=0;e<t.changedTouches.length;e++){var i=this.getPointer(t.changedTouches[e]);if(this.events.isEnabled("up")&&!f.b.isPaused){var n={type:"up",target:this,event:t,pointer:i,touch:i.touch};this.events.dispatchImmediately("up",n)}this.handleGlobalUp(i,t)}},e.prototype.handlePointerDown=function(t,e){var i=this.getPointer(e);(i.touch||1==e.which||3==e.which)&&(i.button=e.which,this.resetPointer(i,e),this.handleDown(t,i,e))},e.prototype.handlePointerOver=function(t,e){var i=this.getPointer(e);this.handleOver(t,i,e)},e.prototype.handlePointerOut=function(t,e){var i=this.getPointer(e);this.handleOut(t,i,e)},e.prototype.handleMouseWheel=function(t,e){var i=this.getPointer(e);i.point=this.getPointerPoint(e);var n=0,r=0,a=1;if(1==e.deltaMode&&(a=50),a*=this.getMouseOption(t,"sensitivity"),!(e instanceof WheelEvent))throw new Error("Invalid event type");n=Math.round(-1*e.wheelDeltaX||e.deltaX)*a,r=Math.round(-1*e.wheelDeltaY||e.deltaY)*a,this.handleWheel(t,i,n,r,e)},e.prototype.handleTouchDown=function(t,e){for(var i=0;i<e.changedTouches.length;i++){var n=this.getPointer(e.changedTouches[i]);this.maybePreventDefault(t,e,n),this.resetPointer(n,e.changedTouches[i]),this.handleDown(t,n,e)}},e.prototype.handleHit=function(t,e,i){var n=b.getTime();if(t.lastHit&&t.lastHit>=n-this.getHitOption(t,"doubleHitTime")){if(n-t.lastHit<100)return;if(t.lastHit=void 0,t.lastHitPointer=void 0,t.events.isEnabled("doublehit")&&!f.b.isPaused){var r={type:"doublehit",target:t,point:e.point,event:i,touch:e.touch};t.events.dispatchImmediately("doublehit",r)}}else if(t.lastHit=n,t.lastHitPointer=e,3===e.button){if(t.events.isEnabled("rightclick")&&!f.b.isPaused){r={type:"rightclick",target:t,event:i};t.events.dispatchImmediately("rightclick",r)}}else if(t.events.isEnabled("hit")&&!f.b.isPaused){r={type:"hit",target:t,event:i,point:e.point,touch:e.touch};t.events.dispatchImmediately("hit",r)}},e.prototype.handleOver=function(t,e,i,n){if(void 0===n&&(n=!1),t.hoverable&&(this.processDelayed(),t.overPointers.moveValue(e),!t.isHover&&(t.isHover=!0,this.overObjects.moveValue(t),this.handleTrack(this.body,e,i,!0),t.events.isEnabled("over")&&!f.b.isPaused))){var r={type:"over",target:t,event:i,pointer:e,touch:e.touch};t.events.dispatchImmediately("over",r)}},e.prototype.handleOut=function(t,e,i,n,r){var a=this;if(void 0===n&&(n=!1),void 0===r&&(r=!1),t.hoverable&&(t.overPointers.removeValue(e),t.isHover&&(!t.hasDelayedOut||r))){if(n&&t.overPointers.length)return;if(e.touch&&!r&&!this.old(e)){var o=this.getHoverOption(t,"touchOutBehavior");if("leave"==o)return this._delayedEvents.out.push({type:"out",io:t,pointer:e,event:i,keepUntil:b.getTime()+500}),void(t.hasDelayedOut=!0);if("delay"==o&&this.getHoverOption(t,"touchOutDelay"))return void this._delayedEvents.out.push({type:"out",io:t,pointer:e,event:i,keepUntil:b.getTime()+500,timeout:this.setTimeout(function(){a.handleOut(t,e,i,!0)},this.getHoverOption(t,"touchOutDelay"))})}if(t.isHover=!1,this.overObjects.removeValue(t),t.events.isEnabled("out")&&!f.b.isPaused){var s={type:"out",target:t,event:i,pointer:e,touch:e.touch};t.events.dispatchImmediately("out",s)}t.overPointers.clear(),t.hasDelayedOut=!1}},e.prototype.processDelayed=function(){for(var t;t=this._delayedEvents.out.pop();)t.timeout&&t.timeout.dispose(),this.handleOut(t.io,t.pointer,t.event,!1,!0)},e.prototype.handleDown=function(t,e,i){if(this.maybePreventDefault(t,i,e),t.inert&&this.stopInertia(t),this.handleOver(t,e,i,!0),t.downPointers.moveValue(e),this.applyCursorDownStyle(t,e),t.isDown||(!1!==t.focusable&&this.getHitOption(t,"noFocus")&&this.focusedObject&&p.h(),t.isDown=!0,this.downObjects.moveValue(t),t.draggable&&this.processDragStart(t,e,i),t.resizable&&this.processResizeStart(t,e,i)),t.events.isEnabled("down")&&!f.b.isPaused){var n={type:"down",target:t,event:i,pointer:e,touch:e.touch};t.events.dispatchImmediately("down",n)}},e.prototype.handleGlobalUp=function(t,e,i){var n=this;void 0===i&&(i=!1),m.each(this.downObjects.backwards().iterator(),function(r){r&&r.downPointers.contains(t)&&n.handleUp(r,t,e,i)})},e.prototype.handleUp=function(t,e,i,n){if(void 0===n&&(n=!1),this.restoreCursorDownStyle(t,e),t.downPointers.removeValue(e),(e.touch||this._useTouchEventsOnly)&&this.handleOut(t,e,i,!0),t.isDown){if(0==t.downPointers.length&&(t.isDown=!1,this.downObjects.removeValue(t)),t.events.isEnabled("up")&&!f.b.isPaused){var r={type:"up",target:t,event:i,pointer:e,touch:e.touch};t.events.dispatchImmediately("up",r)}n||(t.swipeable&&this.swiped(t,e)?this.handleSwipe(t,e,i):(t.clickable&&!this.moved(e,this.getHitOption(t,"hitTolerance"))&&this.handleHit(t,e,i),t.inert&&this.moved(e,this.getHitOption(t,"hitTolerance"))?this.handleInertia(t,e):t.draggable&&this.processDragStop(t,e,i),t.resizable&&this.processResizeStop(t,e,i)))}},e.prototype.maybePreventDefault=function(t,e,i){!v.hasValue(e)||!(t.draggable||t.swipeable||t.trackable||t.resizable)||this.isGlobalElement(t)||!1===e.cancelable||t.isTouchProtected&&i&&i.touch||e.preventDefault()},e.prototype.handleGlobalMove=function(t,e){var i=this;if(!t.touch){var n=p.k(t.lastEvent);m.each(this.overObjects.backwards().iterator(),function(r){if(r&&r.overPointers.contains(t)&&r.hoverable){var a=!1;r.element&&t.lastEvent&&p.i(r.element,n)||(a=!0),a&&i.handleOut(r,t,e,!0)}})}m.each(this.transformedObjects.backwards().iterator(),function(n){!n.downPointers.contains(t)||n.swipeable&&i.swiping(n,t)||!n.draggable&&!n.resizable||i.handleTransform(n,e)}),m.each(this.trackedObjects.backwards().iterator(),function(n){n.overPointers.contains(t)||i.handleTrack(n,t,e)})},e.prototype.handleTrack=function(t,e,i,n){if(void 0===n&&(n=!1),(n||this.moved(e,0))&&t.events.isEnabled("track")&&!f.b.isPaused){var r={type:"track",target:t,event:i,point:e.point,pointer:e,touch:e.touch};t.events.dispatchImmediately("track",r)}},e.prototype.handleSwipe=function(t,e,i){if(t.events.isEnabled("swipe")&&!f.b.isPaused){var n={type:"swipe",target:t,event:i,touch:e.touch};t.events.dispatchImmediately("swipe",n)}if(e.startPoint.x<e.point.x){if(t.events.isEnabled("swiperight")&&!f.b.isPaused){n={type:"swiperight",target:t,event:i,touch:e.touch};t.events.dispatchImmediately("swiperight",n)}}else if(t.events.isEnabled("swipeleft")&&!f.b.isPaused){n={type:"swipeleft",target:t,event:i,touch:e.touch};t.events.dispatchImmediately("swipeleft",n)}},e.prototype.handleWheel=function(t,e,i,n,r){var a={x:i,y:n};t.events.isEnabled("wheel")&&!f.b.isPaused&&t.events.dispatchImmediately("wheel",{type:"wheel",target:t,event:r,point:e.point,shift:a}),i<0?t.events.isEnabled("wheelleft")&&!f.b.isPaused&&t.events.dispatchImmediately("wheelleft",{type:"wheelleft",target:t,event:r,point:e.point,shift:a}):i>0?t.events.isEnabled("swiperight")&&!f.b.isPaused&&t.events.dispatchImmediately("wheelright",{type:"wheelright",target:t,event:r,point:e.point,shift:a}):n<0?t.events.isEnabled("wheelup")&&!f.b.isPaused&&t.events.dispatchImmediately("wheelup",{type:"wheelup",target:t,event:r,point:e.point,shift:a}):n>0&&t.events.isEnabled("wheeldown")&&!f.b.isPaused&&t.events.dispatchImmediately("wheeldown",{type:"wheeldown",target:t,event:r,point:e.point,shift:a})},e.prototype.handleInertia=function(t,e){t.draggable&&0===t.downPointers.length&&this.handleMoveInertia(t,e),t.resizable&&t.downPointers.length>1&&this.handleResizeInertia(t,e)},e.prototype.handleMoveInertia=function(t,e){var i=t,n={x:e.point.x,y:e.point.y},r={x:e.startPoint.x,y:e.startPoint.y},a=new c.a(i,"move",n,r),s=this.getTrailPoint(e,b.getTime()-this.getInertiaOption(t,"move","time"));if(void 0!==s){var l=this.getInertiaOption(t,"move","factor"),u=[{to:e.point.x+(e.point.x-s.point.x)*l,property:"x"},{to:e.point.y+(e.point.y-s.point.y)*l,property:"y"}],h=new o.a(a,u,this.getInertiaOption(t,"move","duration"),this.getInertiaOption(t,"move","easing")).start();this._disposers.push(h.events.on("animationended",function(t){a.done()})),t.inertias.setKey("move",a)}else this.processDragStop(t,e,e.lastUpEvent)},e.prototype.handleResizeInertia=function(t,e){},e.prototype.handleTransform=function(t,e){var i,n,r,a=t.downPointers.getIndex(0),o=null,s=null;a&&(o=a.point,s=a.startPoint),r=n={x:t.originalPosition.x,y:t.originalPosition.y};for(var l=!0,u=1;u<t.downPointers.length;u++){var h=t.downPointers.getIndex(u);if(s.x!=h.startPoint.x&&s.y!=h.startPoint.y){l=!1,n=(i=h).point,r=i.startPoint;break}}var c=a&&this.moved(a,0);if(t.draggable&&a&&a.dragStartEvents&&a.dragStartEvents.length&&c&&t.events.isEnabled("dragstart")&&!f.b.isPaused&&t.events.dispatchImmediately("dragstart",a.dragStartEvents.shift()),l&&t.draggable)this.handleTransformMove(t,o,s,e,c,a.touch);else{var p=i&&this.moved(i,0);t.draggable&&t.resizable?(this.handleTransformMove(t,o,s,e,c&&p,a.touch),this.handleTransformResize(t,o,s,n,r,e,c&&p,a.touch)):(t.draggable&&this.handleTransformMove(t,o,s,e,c,a.touch),!t.resizable||l&&!e.ctrlKey||this.handleTransformResize(t,o,s,n,r,e,c&&p,a.touch))}},e.prototype.handleTransformMove=function(t,e,i,n,r,a){if(r&&t.events.isEnabled("drag")&&!f.b.isPaused&&(!t.isTouchProtected||!a)){var o={type:"drag",target:t,event:n,shift:{x:e.x-i.x,y:e.y-i.y},startPoint:i,point:e,touch:a};t.events.dispatchImmediately("drag",o)}},e.prototype.handleTransformResize=function(t,e,i,n,r,a,o,s){if(t.events.isEnabled("resize")&&!f.b.isPaused&&(!t.isTouchProtected||!s)){var l={type:"resize",target:t,event:a,scale:y.getScale(e,i,n,r),startPoint1:i,point1:e,startPoint2:r,point2:n,touch:s};t.events.dispatchImmediately("resize",l)}},e.prototype.processDragStart=function(t,e,i){this.transformedObjects.moveValue(t);var n={type:"dragstart",target:t,event:i,touch:!!e&&e.touch};e&&(e.dragTarget=t),e&&e.dragStartEvents?e.dragStartEvents.push(n):f.b.isPaused||t.dispatchImmediately("dragstart",n)},e.prototype.processDragStop=function(t,e,i){if(e||(e=this.getDragPointer(t)),e&&(e.dragTarget=void 0),this.transformedObjects.removeValue(t),(!e||this.moved(e,0))&&t.events.isEnabled("dragstop")&&!f.b.isPaused){var n={type:"dragstop",target:t,touch:!!e&&e.touch};t.events.dispatchImmediately("dragstop",n)}},e.prototype.processResizeStart=function(t,e,i){this.transformedObjects.moveValue(t)},e.prototype.processResizeStop=function(t,e,i){this.transformedObjects.removeValue(t)},e.prototype.dragStart=function(t,e){e||(e=this.getDragPointer(t)),e&&this.handleDown(t,e,e.lastDownEvent)},e.prototype.dragStop=function(t,e){e||(e=this.getDragPointer(t)),e&&this.handleGlobalUp(e,e.lastUpEvent)},e.prototype.getDragPointer=function(t){return t?t.downPointers.getIndex(0):this.transformedObjects.length?this.getDragPointer(this.transformedObjects.getIndex(0)):void 0},e.prototype.getPointerId=function(t){return(v.hasValue(t.identifier)?""+t.identifier:v.hasValue(t.pointerId)?""+t.pointerId:"m").replace("-","")},e.prototype.getPointerPoint=function(t){return{x:t.clientX,y:t.clientY}},e.prototype.getPointer=function(t){var e,i=this.getPointerId(t),n=this.getPointerPoint(t);return this.pointers.hasKey(i)?(e=this.pointers.getKey(i)).touch=this.isPointerTouch(t):(e={id:i,touch:this.isPointerTouch(t),startPoint:n,startTime:b.getTime(),point:n,track:[],swipeCanceled:!1,dragStartEvents:[]},this.addBreadCrumb(e,n),this.pointers.setKey(i,e)),e.lastEvent=t,e},e.prototype.isPointerTouch=function(t){if("undefined"!=typeof Touch&&t instanceof Touch)return!0;if("undefined"!=typeof PointerEvent&&t instanceof PointerEvent&&v.hasValue(t.pointerType))switch(t.pointerType){case"touch":case"pen":case 2:return!0;case"mouse":case 4:return!1;default:return!(t instanceof MouseEvent)}else if(v.hasValue(t.type)&&t.type.match(/^mouse/))return!1;return!0},e.prototype.resetPointer=function(t,e){var i=this.getPointerPoint(e);t.startTime=b.getTime(),t.startPoint={x:i.x,y:i.y},t.point={x:i.x,y:i.y},t.track=[],t.swipeCanceled=!1},e.prototype.addBreadCrumb=function(t,e){t.track.push({timestamp:b.getTime(),point:e})},e.prototype.lockDocument=function(){this.prepElement(this.body)},e.prototype.unlockDocument=function(){0==this.transformedObjects.length&&this.restoreAllStyles(this.body)},e.prototype.lockElement=function(t){this.prepElement(t)},e.prototype.unlockElement=function(t){this.restoreAllStyles(t)},e.prototype.lockWheel=function(){window.addEventListener(this._pointerEvents.wheel,this.wheelLockEvent,!!this._passiveSupported&&{passive:!1})},e.prototype.unlockWheel=function(){window.removeEventListener(this._pointerEvents.wheel,this.wheelLockEvent)},e.prototype.isLocalElement=function(t,e,i){var n=this.getCache("local_pointer_"+t.id);if(v.hasValue(n))return n;var r=(p.r(e)||document).elementFromPoint(t.point.x,t.point.y),a=r&&p.i(e,r);return this.setCache("local_pointer_"+t.id+"_"+i,a,100),a},e.prototype.wheelLockEvent=function(t){return t.preventDefault(),!1},e.prototype.prepElement=function(t){var e=t.element;if(e){for(var i=["touchAction","webkitTouchAction","MozTouchAction","MSTouchAction","msTouchAction","oTouchAction","userSelect","webkitUserSelect","MozUserSelect","MSUserSelect","msUserSelect","oUserSelect","touchSelect","webkitTouchSelect","MozTouchSelect","MSTouchSelect","msTouchSelect","oTouchSelect","touchCallout","webkitTouchCallout","MozTouchCallout","MSTouchCallout","msTouchCallout","oTouchCallout","contentZooming","webkitContentZooming","MozContentZooming","MSContentZooming","msContentZooming","oContentZooming","userDrag","webkitUserDrag","MozUserDrag","MSUserDrag","msUserDrag","oUserDrag"],n=0;n<i.length;n++)i[n]in e.style&&this.setTemporaryStyle(t,i[n],"none");this.setTemporaryStyle(t,"tapHighlightColor","rgba(0, 0, 0, 0)")}},e.prototype.unprepElement=function(t){var e=t.element;if(e){for(var i=["touchAction","webkitTouchAction","MozTouchAction","MSTouchAction","msTouchAction","oTouchAction","userSelect","webkitUserSelect","MozUserSelect","MSUserSelect","msUserSelect","oUserSelect","touchSelect","webkitTouchSelect","MozTouchSelect","MSTouchSelect","msTouchSelect","oTouchSelect","touchCallout","webkitTouchCallout","MozTouchCallout","MSTouchCallout","msTouchCallout","oTouchCallout","contentZooming","webkitContentZooming","MozContentZooming","MSContentZooming","msContentZooming","oContentZooming","userDrag","webkitUserDrag","MozUserDrag","MSUserDrag","msUserDrag","oUserDrag"],n=0;n<i.length;n++)i[n]in e.style&&this.restoreStyle(t,i[n]);this.restoreStyle(t,"tapHighlightColor")}},e.prototype.getHitOption=function(t,e){var i=t.hitOptions[e];return void 0===i&&(i=this.hitOptions[e]),i},e.prototype.getHoverOption=function(t,e){var i=t.hoverOptions[e];return void 0===i&&(i=this.hoverOptions[e]),i},e.prototype.getSwipeOption=function(t,e){var i=t.swipeOptions[e];return void 0===i&&(i=this.swipeOptions[e]),i},e.prototype.getKeyboardOption=function(t,e){var i=t.keyboardOptions[e];return void 0===i&&(i=this.keyboardOptions[e]),i},e.prototype.getMouseOption=function(t,e){var i=t.mouseOptions[e];return void 0===i&&(i=this.mouseOptions[e]),i},e.prototype.getInertiaOption=function(t,e,i){var n=t.inertiaOptions.getKey(e);return n&&v.hasValue(n[i])?n[i]:this.inertiaOptions.getKey(e)[i]},e.prototype.stopInertia=function(t){for(var e,i=["move","resize"],n=0;n<i.length;n++)if(e=i[n],t.inertias.hasKey(e)){var r=t.inertias.getKey(e);if(r){r.dispose();continue}}},e.prototype.swiping=function(t,e){var i=b.getTime();return!(e.swipeCanceled||!t.swipeable)&&(Math.abs(e.startPoint.y-e.point.y)<this.getSwipeOption(t,"verticalThreshold")&&e.startTime>i-this.getSwipeOption(t,"time"))},e.prototype.swiped=function(t,e){var i=b.getTime();return!e.swipeCanceled&&(Math.abs(e.startPoint.x-e.point.x)>this.getSwipeOption(t,"horizontalThreshold")&&Math.abs(e.startPoint.y-e.point.y)<this.getSwipeOption(t,"verticalThreshold")&&e.startTime>i-this.getSwipeOption(t,"time"))},e.prototype.applyCursorOverStyle=function(t){var e=t.cursorOptions;if(v.hasValue(e.overStyle))for(var i=0;i<e.overStyle.length;i++)p.y(t.element,e.overStyle[i].property,e.overStyle[i].value)},e.prototype.applyCursorDownStyle=function(t,e){if(!e.touch){var i=t.cursorOptions.downStyle;if(t.downPointers.contains(e)&&v.hasValue(i))for(var n=0;n<i.length;n++)this.setTemporaryStyle(this.body,i[n].property,i[n].value),this.setTemporaryStyle(t,i[n].property,i[n].value)}},e.prototype.restoreCursorDownStyle=function(t,e){if(!e.touch){var i=t.cursorOptions.downStyle;if(t.downPointers.contains(e)&&v.hasValue(i))for(var n=0;n<i.length;n++)this.restoreStyle(this.body,i[n].property),this.restoreStyle(t,i[n].property)}},e.prototype.setGlobalStyle=function(t){for(var e=P().body,i=v.isArray(t)?t:[t],n=0;n<i.length;n++)this.setTemporaryStyle(e,i[n].property,i[n].value)},e.prototype.restoreGlobalStyle=function(t){for(var e=P().body,i=v.isArray(t)?t:[t],n=0;n<i.length;n++)this.restoreStyle(e,i[n].property)},e.prototype.isGlobalElement=function(t){return document.body===t.element},e.prototype.moved=function(t,e,i){void 0===i&&(i=300);var n=this.getShift(t);return Math.abs(n.x)>e||Math.abs(n.y)>e},e.prototype.old=function(t,e){return void 0===e&&(e=300),b.getTime()-t.startTime>e},e.prototype.getShift=function(t){return{x:t.startPoint.x-t.point.x,y:t.startPoint.y-t.point.y}},e.prototype.getTrailPoint=function(t,e){for(var i,n=0;n<t.track.length;n++)if(t.track[n].timestamp>=e){i=t.track[n];break}return i},e.prototype.pointerExists=function(t,e){var i=!1;return t.each(function(t){t!=e&&(i=t.point.x==e.point.x&&t.point.y==e.point.y)}),i},e.prototype.getInteraction=function(t){return new l.a(t)},e.prototype.setTemporaryStyle=function(t,e,i){var n=t.element;v.hasValue(n.style[e])&&!t.replacedStyles.hasKey(e)&&t.replacedStyles.setKey(e,n.style[e]),p.y(n,e,i)},e.prototype.restoreStyle=function(t,e){t.replacedStyles.hasKey(e)?(t.element.style[e]=t.replacedStyles.getKey(e),t.replacedStyles.removeKey(e)):delete t.element.style[e]},e.prototype.restoreAllStyles=function(t){m.each(t.replacedStyles.iterator(),function(e){var i=e[0],n=e[1];t.element.style[i]=n,t.replacedStyles.removeKey(i)})},e.prototype.dispose=function(){this.isDisposed()||(t.prototype.dispose.call(this),this.restoreAllStyles(this.body),this.unlockWheel())},e.prototype.log=function(t,e,i){if(e.changedTouches)for(var n=0;n<e.changedTouches.length;n++)this.logTouch(t,e.type,e.changedTouches[n]);else{var r="";if(e.pointerType)switch(e.pointerType){case 2:r="touch";break;case 4:r="mouse";break;default:r=e.pointerType}else r="undefined"!=typeof TouchEvent&&e instanceof TouchEvent?"touch":e.type.match(/^mouse/)?"mouse":"???";var a="";a=v.hasValue(e.identifier)?e.identifier:v.hasValue(e.pointerId)?e.pointerId:"???",i?console.log(t+" ("+i.uid+")  "+e.type+"  "+r+"  "+a):console.log(t+"  "+e.type+"  "+r+"  "+a)}},e.prototype.logTouch=function(t,e,i){console.log(t+"  "+e+"  touch  "+i.identifier)},Object.defineProperty(e,"passiveSupported",{get:function(){var t=this;if(null==this._passiveSupported)try{var e=Object.defineProperty({},"passive",{get:function(){t._passiveSupported=!0}});window.addEventListener("test",e,e),window.removeEventListener("test",e,e)}catch(t){this._passiveSupported=!1}return this._passiveSupported},enumerable:!0,configurable:!0}),e}(r.b),_=null;function P(){return null==_&&(_=new x),_}}});
//# sourceMappingURL=core.js.map
/**
 * @license
 * Copyright (c) 2018 amCharts (Antanas Marcelionis, Martynas Majeris)
 *
 * This sofware is provided under multiple licenses. Please see below for
 * links to appropriate usage.
 *
 * Free amCharts linkware license. Details and conditions:
 * https://github.com/amcharts/amcharts4/blob/master/LICENSE
 *
 * One of the amCharts commercial licenses. Details and pricing:
 * https://www.amcharts.com/online-store/
 * https://www.amcharts.com/online-store/licenses-explained/
 *
 * If in doubt, contact amCharts at contact@amcharts.com
 *
 * PLEASE DO NOT REMOVE THIS COPYRIGHT NOTICE.
 * @hidden
 */
am4internal_webpackJsonp(["689e"],{XFs4:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={};i.d(n,"GaugeChartDataItem",function(){return F}),i.d(n,"GaugeChart",function(){return Y}),i.d(n,"RadarChartDataItem",function(){return L}),i.d(n,"RadarChart",function(){return S}),i.d(n,"XYChartDataItem",function(){return a.b}),i.d(n,"XYChart",function(){return a.a}),i.d(n,"SerialChartDataItem",function(){return X.b}),i.d(n,"SerialChart",function(){return X.a}),i.d(n,"PieChart3DDataItem",function(){return E}),i.d(n,"PieChart3D",function(){return G}),i.d(n,"PieChartDataItem",function(){return W.b}),i.d(n,"PieChart",function(){return W.a}),i.d(n,"SlicedChart",function(){return U}),i.d(n,"SlicedChartDataItem",function(){return K}),i.d(n,"FlowDiagramDataItem",function(){return ye}),i.d(n,"FlowDiagram",function(){return ge}),i.d(n,"SankeyDiagramDataItem",function(){return Ae}),i.d(n,"SankeyDiagram",function(){return De}),i.d(n,"ChordDiagramDataItem",function(){return _e}),i.d(n,"ChordDiagram",function(){return ke}),i.d(n,"TreeMapDataItem",function(){return Fe}),i.d(n,"TreeMap",function(){return Ye}),i.d(n,"XYChart3DDataItem",function(){return qe}),i.d(n,"XYChart3D",function(){return Ke}),i.d(n,"ChartDataItem",function(){return Z.b}),i.d(n,"Chart",function(){return Z.a}),i.d(n,"LegendDataItem",function(){return re.b}),i.d(n,"Legend",function(){return re.a}),i.d(n,"LegendSettings",function(){return re.c}),i.d(n,"HeatLegend",function(){return Ue.a}),i.d(n,"SeriesDataItem",function(){return Ze.b}),i.d(n,"Series",function(){return Ze.a}),i.d(n,"XYSeriesDataItem",function(){return Qe.b}),i.d(n,"XYSeries",function(){return Qe.a}),i.d(n,"LineSeriesDataItem",function(){return s.b}),i.d(n,"LineSeries",function(){return s.a}),i.d(n,"LineSeriesSegment",function(){return Je.a}),i.d(n,"CandlestickSeriesDataItem",function(){return et}),i.d(n,"CandlestickSeries",function(){return tt}),i.d(n,"OHLCSeriesDataItem",function(){return nt}),i.d(n,"OHLCSeries",function(){return rt}),i.d(n,"ColumnSeriesDataItem",function(){return Se.b}),i.d(n,"ColumnSeries",function(){return Se.a}),i.d(n,"StepLineSeriesDataItem",function(){return ot}),i.d(n,"StepLineSeries",function(){return st}),i.d(n,"RadarSeriesDataItem",function(){return c}),i.d(n,"RadarSeries",function(){return p}),i.d(n,"RadarColumnSeriesDataItem",function(){return ut}),i.d(n,"RadarColumnSeries",function(){return ht}),i.d(n,"PieSeriesDataItem",function(){return M.b}),i.d(n,"PieSeries",function(){return M.a}),i.d(n,"FunnelSeries",function(){return ft}),i.d(n,"FunnelSeriesDataItem",function(){return gt}),i.d(n,"PyramidSeries",function(){return vt}),i.d(n,"PyramidSeriesDataItem",function(){return mt}),i.d(n,"PictorialStackedSeries",function(){return bt}),i.d(n,"PictorialStackedSeriesDataItem",function(){return xt}),i.d(n,"PieTick",function(){return Pt.a}),i.d(n,"FunnelSlice",function(){return pt}),i.d(n,"PieSeries3DDataItem",function(){return B}),i.d(n,"PieSeries3D",function(){return z}),i.d(n,"TreeMapSeriesDataItem",function(){return Re}),i.d(n,"TreeMapSeries",function(){return je}),i.d(n,"ColumnSeries3DDataItem",function(){return Ee}),i.d(n,"ColumnSeries3D",function(){return Ge}),i.d(n,"ConeSeriesDataItem",function(){return Dt}),i.d(n,"ConeSeries",function(){return It}),i.d(n,"CurvedColumnSeries",function(){return Vt}),i.d(n,"CurvedColumnSeriesDataItem",function(){return Ot}),i.d(n,"AxisDataItem",function(){return _t.b}),i.d(n,"Axis",function(){return _t.a}),i.d(n,"Grid",function(){return x.a}),i.d(n,"AxisTick",function(){return kt.a}),i.d(n,"AxisLabel",function(){return Lt.a}),i.d(n,"AxisLine",function(){return St.a}),i.d(n,"AxisFill",function(){return f.a}),i.d(n,"AxisRenderer",function(){return g.a}),i.d(n,"AxisBreak",function(){return Rt.a}),i.d(n,"AxisBullet",function(){return A.a}),i.d(n,"ValueAxisDataItem",function(){return Le.b}),i.d(n,"ValueAxis",function(){return Le.a}),i.d(n,"CategoryAxisDataItem",function(){return T.b}),i.d(n,"CategoryAxis",function(){return T.a}),i.d(n,"CategoryAxisBreak",function(){return jt.a}),i.d(n,"DateAxisDataItem",function(){return wt.b}),i.d(n,"DateAxis",function(){return wt.a}),i.d(n,"DurationAxisDataItem",function(){return Nt.b}),i.d(n,"DurationAxis",function(){return Nt.a}),i.d(n,"DateAxisBreak",function(){return Ft.a}),i.d(n,"ValueAxisBreak",function(){return Yt.a}),i.d(n,"AxisRendererX",function(){return Xe.a}),i.d(n,"AxisRendererY",function(){return I.a}),i.d(n,"AxisRendererRadial",function(){return _}),i.d(n,"AxisLabelCircular",function(){return P.a}),i.d(n,"AxisRendererCircular",function(){return D}),i.d(n,"AxisFillCircular",function(){return v}),i.d(n,"GridCircular",function(){return b}),i.d(n,"AxisRendererX3D",function(){return We}),i.d(n,"AxisRendererY3D",function(){return Me}),i.d(n,"Tick",function(){return dt.a}),i.d(n,"Bullet",function(){return se.a}),i.d(n,"LabelBullet",function(){return me}),i.d(n,"CircleBullet",function(){return Xt}),i.d(n,"ErrorBullet",function(){return Wt}),i.d(n,"XYChartScrollbar",function(){return Mt.a}),i.d(n,"ClockHand",function(){return N}),i.d(n,"FlowDiagramNode",function(){return ae}),i.d(n,"FlowDiagramLink",function(){return ce}),i.d(n,"SankeyNode",function(){return ve}),i.d(n,"SankeyLink",function(){return Pe}),i.d(n,"ChordNode",function(){return Te}),i.d(n,"ChordLink",function(){return Ve}),i.d(n,"NavigationBarDataItem",function(){return Gt}),i.d(n,"NavigationBar",function(){return qt}),i.d(n,"Column",function(){return He.a}),i.d(n,"Candlestick",function(){return $e}),i.d(n,"OHLC",function(){return it}),i.d(n,"RadarColumn",function(){return lt}),i.d(n,"Column3D",function(){return ze}),i.d(n,"ConeColumn",function(){return At}),i.d(n,"CurvedColumn",function(){return Tt}),i.d(n,"XYCursor",function(){return Kt.a}),i.d(n,"Cursor",function(){return Ut.a}),i.d(n,"RadarCursor",function(){return Zt});var r=i("m4/l"),a=i("0Mwj"),o=i("tjMS"),s=i("v36H"),l=i("aCit"),u=i("Gg2j"),h=i("hGwe"),c=function(e){function t(){var t=e.call(this)||this;return t.className="RadarSeriesDataItem",t.setLocation("dateX",0,0),t.setLocation("dateY",0,0),t.setLocation("categoryX",0,0),t.setLocation("categoryY",0,0),t.applyTheme(),t}return Object(r.c)(t,e),t}(s.b),p=function(e){function t(){var t=e.call(this)||this;return t.className="RadarSeries",t.connectEnds=!0,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.validate=function(){this.chart.invalid&&this.chart.validate(),e.prototype.validate.call(this)},t.prototype.createDataItem=function(){return new c},t.prototype.getPoint=function(e,t,i,n,r,a,o){a||(a="valueX"),o||(o="valueY");var s=this.yAxis.getX(e,i,r,o),l=this.yAxis.getY(e,i,r,o),h=u.getDistance({x:s,y:l});0==h&&(h=1e-5);var c=this.xAxis.getAngle(e,t,n,a),p=this.chart.startAngle,d=this.chart.endAngle;return c<p||c>d?void 0:{x:h*u.cos(c),y:h*u.sin(c)}},t.prototype.addPoints=function(e,t,i,n,r){var a=this.getPoint(t,i,n,t.locations[i],t.locations[n]);a&&e.push(a)},t.prototype.getMaskPath=function(){var e=this.yAxis.renderer;return h.arc(e.startAngle,e.endAngle-e.startAngle,e.pixelRadius,e.pixelInnerRadius)},t.prototype.drawSegment=function(t,i,n){var r=this.yAxis.renderer;this.connectEnds&&360==Math.abs(r.endAngle-r.startAngle)&&(this.dataFields[this._xOpenField]||this.dataFields[this._yOpenField]||this.stacked)&&(i.push(i[0]),n.length>0&&n.unshift(n[n.length-1])),e.prototype.drawSegment.call(this,t,i,n)},Object.defineProperty(t.prototype,"connectEnds",{get:function(){return this.getPropertyValue("connectEnds")},set:function(e){this.setPropertyValue("connectEnds",e,!0)},enumerable:!0,configurable:!0}),t.prototype.positionBulletReal=function(e,t,i){var n=this.xAxis,r=this.yAxis;(t<n.start||t>n.end||i<r.start||i>r.end)&&(e.visible=!1),e.moveTo(this.xAxis.renderer.positionToPoint(t,i))},t.prototype.setXAxis=function(t){e.prototype.setXAxis.call(this,t),this.updateRendererRefs()},t.prototype.setYAxis=function(t){e.prototype.setYAxis.call(this,t),this.updateRendererRefs()},t.prototype.updateRendererRefs=function(){var e=this.xAxis.renderer,t=this.yAxis.renderer;e.axisRendererY=t},t}(s.a);l.c.registeredClasses.RadarSeries=p,l.c.registeredClasses.RadarSeriesDataItem=c;var d=i("C6dT"),y=i("FzPm"),g=i("Meme"),f=i("8EhG"),m=i("Mtpk"),v=function(e){function t(t){var i=e.call(this,t)||this;return i.className="AxisFillCircular",i.element=i.paper.add("path"),i.radius=Object(o.c)(100),i.applyTheme(),i}return Object(r.c)(t,e),t.prototype.draw=function(){if(e.prototype.draw.call(this),!this.__disabled&&!this.disabled&&this.axis){var t=this.axis.renderer;this.fillPath=t.getPositionRangePath(this.startPosition,this.endPosition,this.radius,m.hasValue(this.innerRadius)?this.innerRadius:t.innerRadius,this.cornerRadius),this.path=this.fillPath}},Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(e){this.setPercentProperty("innerRadius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPercentProperty("radius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"cornerRadius",{get:function(){return this.getPropertyValue("cornerRadius")},set:function(e){this.setPropertyValue("cornerRadius",e,!0)},enumerable:!0,configurable:!0}),t}(f.a);l.c.registeredClasses.AxisFillCircular=v;var x=i("AaJ4"),b=function(e){function t(){var t=e.call(this)||this;return t.className="GridCircular",t.pixelPerfect=!1,t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(e){this.setPercentProperty("innerRadius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPercentProperty("radius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),t}(x.a);l.c.registeredClasses.GridCircular=b;var P=i("IbTV"),C=i("v9UT"),A=i("5xph"),D=function(e){function t(){var t=e.call(this)||this;return t.pixelRadiusReal=0,t.layout="none",t.className="AxisRendererCircular",t.isMeasured=!1,t.startAngle=-90,t.endAngle=270,t.useChartAngles=!0,t.radius=Object(o.c)(100),t.isMeasured=!1,t.grid.template.location=0,t.labels.template.location=0,t.labels.template.radius=15,t.ticks.template.location=0,t.ticks.template.pixelPerfect=!1,t.tooltipLocation=0,t.line.strokeOpacity=0,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.setAxis=function(t){var i=this;e.prototype.setAxis.call(this,t),t.isMeasured=!1;var n=t.tooltip;n.adapter.add("dx",function(e,t){var n=C.svgPointToSprite({x:t.pixelX,y:t.pixelY},i);return i.pixelRadius*Math.cos(Math.atan2(n.y,n.x))-n.x}),n.adapter.add("dy",function(e,t){var n=C.svgPointToSprite({x:t.pixelX,y:t.pixelY},i);return i.pixelRadius*Math.sin(Math.atan2(n.y,n.x))-n.y})},t.prototype.validate=function(){this.chart&&this.chart.invalid&&this.chart.validate(),e.prototype.validate.call(this)},Object.defineProperty(t.prototype,"axisLength",{get:function(){return 2*Math.PI*this.pixelRadius},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPercentProperty("radius",e,!1,!1,10,!1)&&this.axis&&this.axis.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pixelRadius",{get:function(){return C.relativeRadiusToValue(this.radius,this.pixelRadiusReal)||0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(e){this.setPercentProperty("innerRadius",e,!1,!1,10,!1)&&this.axis&&this.axis.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"useChartAngles",{get:function(){return this.getPropertyValue("useChartAngles")},set:function(e){this.setPropertyValue("useChartAngles",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pixelInnerRadius",{get:function(){return C.relativeRadiusToValue(this.innerRadius,this.pixelRadiusReal)||0},enumerable:!0,configurable:!0}),t.prototype.positionToPoint=function(e,t){m.isNumber(t)||(t=1);var i=this.positionToCoordinate(e),n=this.startAngle+(this.endAngle-this.startAngle)*i/this.axisLength,r=this.pixelRadius,a=this.pixelInnerRadius;if(this.axisRendererY){var o=u.fitToRange(this.axisRendererY.positionToCoordinate(t),0,1/0);return{x:o*u.cos(n),y:o*u.sin(n)}}return{x:u.cos(n)*a+(r-a)*u.cos(n)*t,y:u.sin(n)*a+(r-a)*u.sin(n)*t}},t.prototype.positionToAngle=function(e){var t,i=this.axis,n=(this.endAngle-this.startAngle)/(i.end-i.start);return t=i.renderer.inversed?this.startAngle+(i.end-e)*n:this.startAngle+(e-i.start)*n,u.round(t,3)},t.prototype.angleToPosition=function(e){var t,i=this.axis,n=(this.endAngle-this.startAngle)/(i.end-i.start);return t=i.renderer.inversed?i.end-(e-this.startAngle)/n:(e-this.startAngle)/n+i.start,u.round(t,5)},t.prototype.updateAxisLine=function(){var e=this.pixelRadius,t=this.startAngle,i=this.endAngle-t;this.line.path=h.moveTo({x:e*u.cos(t),y:e*u.sin(t)})+h.arcTo(t,i,e,e)},t.prototype.updateGridElement=function(e,t,i){t+=(i-t)*e.location;var n=this.positionToPoint(t);if(m.isNumber(n.x)&&m.isNumber(n.y)&&e.element){var r=u.DEGREES*Math.atan2(n.y,n.x),a=C.relativeRadiusToValue(m.hasValue(e.radius)?e.radius:Object(o.c)(100),this.pixelRadius),s=C.relativeRadiusToValue(e.innerRadius,this.pixelRadius);e.zIndex=0;var l=C.relativeRadiusToValue(m.isNumber(s)?s:this.innerRadius,this.pixelRadius,!0);e.path=h.moveTo({x:l*u.cos(r),y:l*u.sin(r)})+h.lineTo({x:a*u.cos(r),y:a*u.sin(r)})}this.toggleVisibility(e,t,0,1)},t.prototype.updateTickElement=function(e,t,i){t+=(i-t)*e.location;var n=this.positionToPoint(t);if(e.element){var r=this.pixelRadius,a=u.DEGREES*Math.atan2(n.y,n.x),o=e.length;e.inside&&(o=-o),e.zIndex=1,e.path=h.moveTo({x:r*u.cos(a),y:r*u.sin(a)})+h.lineTo({x:(r+o)*u.cos(a),y:(r+o)*u.sin(a)})}this.toggleVisibility(e,t,0,1)},t.prototype.updateBullet=function(e,t,i){var n=.5;e instanceof A.a&&(n=e.location),t+=(i-t)*n;var r=this.positionToPoint(t),a=this.pixelRadius,o=u.DEGREES*Math.atan2(r.y,r.x);r={x:a*u.cos(o),y:a*u.sin(o)},this.positionItem(e,r),this.toggleVisibility(e,t,0,1)},t.prototype.updateLabelElement=function(e,t,i,n){m.hasValue(n)||(n=e.location),t+=(i-t)*n,e.fixPosition(this.positionToAngle(t),this.pixelRadius),e.zIndex=2,this.toggleVisibility(e,t,this.minLabelPosition,this.maxLabelPosition)},t.prototype.fitsToBounds=function(e){return!0},Object.defineProperty(t.prototype,"startAngle",{get:function(){return this.getPropertyValue("startAngle")},set:function(e){this.setPropertyValue("startAngle",e)&&(this.invalidateAxisItems(),this.axis&&this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endAngle",{get:function(){return this.getPropertyValue("endAngle")},set:function(e){this.setPropertyValue("endAngle",e)&&(this.invalidateAxisItems(),this.axis&&this.axis.invalidateSeries())},enumerable:!0,configurable:!0}),t.prototype.getPositionRangePath=function(e,t,i,n,r){var a="";if(m.isNumber(e)&&m.isNumber(t)){m.hasValue(i)||(i=this.radius),e=u.max(e,this.axis.start),(t=u.min(t,this.axis.end))<e&&(t=e);var o=C.relativeRadiusToValue(i,this.pixelRadius),s=C.relativeRadiusToValue(n,this.pixelRadius,!0),l=this.positionToAngle(e),c=this.positionToAngle(t)-l;a=h.arc(l,c,o,s,o,r)}return a},t.prototype.createGrid=function(){return new b},t.prototype.createFill=function(e){return new v(e)},t.prototype.createLabel=function(){return new P.a},t.prototype.pointToPosition=function(e){var t=u.fitAngleToRange(u.getAngle(e),this.startAngle,this.endAngle);return this.coordinateToPosition((t-this.startAngle)/360*this.axisLength)},t}(g.a);l.c.registeredClasses.AxisRendererCircular=D;var I=i("OXm9"),T=i("VB2N"),O=i("Vk33"),V=i("hD5A"),_=function(e){function t(){var t=e.call(this)||this;return t._chart=new V.d,t.pixelRadiusReal=0,t.className="AxisRendererRadial",t.isMeasured=!1,t.startAngle=-90,t.endAngle=270,t.minGridDistance=30,t.gridType="circles",t.axisAngle=-90,t.isMeasured=!1,t.layout="none",t.radius=Object(o.c)(100),t.line.strokeOpacity=0,t.labels.template.horizontalCenter="middle",t._disposers.push(t._chart),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.validate=function(){this.chart&&this.chart.invalid&&this.chart.validate(),e.prototype.validate.call(this)},Object.defineProperty(t.prototype,"axisLength",{get:function(){return this.pixelRadius-this.pixelInnerRadius},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPercentProperty("radius",e,!1,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pixelRadius",{get:function(){return C.relativeRadiusToValue(this.radius,this.pixelRadiusReal)||0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(e){this.setPercentProperty("innerRadius",e,!1,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pixelInnerRadius",{get:function(){return C.relativeRadiusToValue(this.innerRadius,this.pixelRadiusReal)||0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"chart",{get:function(){return this._chart.get()},set:function(e){this._chart.set(e,null)},enumerable:!0,configurable:!0}),t.prototype.positionToPoint=function(e,t){var i=u.fitToRange(this.positionToCoordinate(e),0,1/0);return{x:i*u.cos(this.axisAngle),y:i*u.sin(this.axisAngle)}},t.prototype.updateAxisLine=function(){this.line.path=h.moveTo({x:this.pixelInnerRadius*u.cos(this.axisAngle),y:this.pixelInnerRadius*u.sin(this.axisAngle)})+h.lineTo({x:this.pixelRadius*u.cos(this.axisAngle),y:this.pixelRadius*u.sin(this.axisAngle)});var e=this.axis.title;e.valign="none",e.horizontalCenter="middle",e.verticalCenter="bottom",e.y=-this.axisLength/2;var t=90;this.opposite?this.inside||(t=-90):this.inside&&(t=-90),e.rotation=t},t.prototype.updateGridElement=function(e,t,i){t+=(i-t)*e.location;var n,r=this.positionToPoint(t),a=u.getDistance(r),o=this.startAngle,s=this.endAngle;if(m.isNumber(a)&&e.element){var l=this.chart,c=l.xAxes.getIndex(0),p=0,d=l.series.getIndex(0);if(d&&(p=d.dataItems.length),"polygons"==this.gridType&&p>0&&d&&c&&c instanceof T.a){var y=c.renderer.grid.template.location,g=c.getAngle(d.dataItems.getIndex(0),"categoryX",y);n=h.moveTo({x:a*u.cos(g),y:a*u.sin(g)});for(var f=1;f<p;f++)g=c.getAngle(d.dataItems.getIndex(f),"categoryX",y),n+=h.lineTo({x:a*u.cos(g),y:a*u.sin(g)});g=c.getAngle(d.dataItems.getIndex(p-1),"categoryX",c.renderer.cellEndLocation),n+=h.lineTo({x:a*u.cos(g),y:a*u.sin(g)})}else n=h.moveTo({x:a*u.cos(o),y:a*u.sin(o)})+h.arcTo(o,s-o,a,a);e.path=n}this.toggleVisibility(e,t,0,1)},t.prototype.updateLabelElement=function(e,t,i,n){m.hasValue(n)||(n=e.location),t+=(i-t)*n;var r=this.positionToPoint(t);this.positionItem(e,r),this.toggleVisibility(e,t,this.minLabelPosition,this.maxLabelPosition)},t.prototype.updateBaseGridElement=function(){},t.prototype.fitsToBounds=function(e){return!0},Object.defineProperty(t.prototype,"startAngle",{get:function(){return this.getPropertyValue("startAngle")},set:function(e){this.setPropertyValue("startAngle",e)&&this.invalidateAxisItems()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endAngle",{get:function(){return this.getPropertyValue("endAngle")},set:function(e){this.setPropertyValue("endAngle",e)&&this.invalidateAxisItems()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axisAngle",{get:function(){return this.getPropertyValue("axisAngle")},set:function(e){this.setPropertyValue("axisAngle",u.normalizeAngle(e)),this.invalidateAxisItems()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"gridType",{get:function(){return this.chart.xAxes.getIndex(0)instanceof T.a?this.getPropertyValue("gridType"):"circles"},set:function(e){this.setPropertyValue("gridType",e,!0)},enumerable:!0,configurable:!0}),t.prototype.getPositionRangePath=function(e,t){var i,n=this.pixelInnerRadius,r=this.axisLength+n,a=u.fitToRange(this.positionToCoordinate(e),n,r),o=u.fitToRange(this.positionToCoordinate(t),n,r),s=this.startAngle,l=this.endAngle-s,c=this.chart,p=c.xAxes.getIndex(0),d=c.series.getIndex(0),y=0;if(d&&(y=d.dataItems.length),"polygons"==this.gridType&&y>0&&d&&p&&p instanceof T.a){var g=p.renderer.grid.template.location,f=p.getAngle(d.dataItems.getIndex(0),"categoryX",g);i=h.moveTo({x:o*u.cos(f),y:o*u.sin(f)});for(var m=1;m<y;m++)f=p.getAngle(d.dataItems.getIndex(m),"categoryX",g),i+=h.lineTo({x:o*u.cos(f),y:o*u.sin(f)});f=p.getAngle(d.dataItems.getIndex(y-1),"categoryX",p.renderer.cellEndLocation),i+=h.lineTo({x:o*u.cos(f),y:o*u.sin(f)}),i+=h.moveTo({x:a*u.cos(f),y:a*u.sin(f)});for(m=y-1;m>=0;m--)f=p.getAngle(d.dataItems.getIndex(m),"categoryX",g),i+=h.lineTo({x:a*u.cos(f),y:a*u.sin(f)})}else i=h.arc(s,l,o,a);return i},t.prototype.updateBreakElement=function(e){var t=e.startLine,i=e.endLine,n=e.fillShape,r=e.startPoint,a=e.endPoint;t.radius=Math.abs(r.y),i.radius=Math.abs(a.y),n.radius=Math.abs(a.y),n.innerRadius=Math.abs(r.y)},t.prototype.createBreakSprites=function(e){e.startLine=new O.a,e.endLine=new O.a,e.fillShape=new O.a},t.prototype.updateTooltip=function(){if(this.axis){var e=this.axisAngle;e<0&&(e+=360);var t="vertical";(e>45&&e<135||e>225&&e<315)&&(t="horizontal"),this.axis.updateTooltip(t,{x:-4e3,y:-4e3,width:8e3,height:8e3})}},t.prototype.updateTickElement=function(e,t,i){t+=(i-t)*e.location;var n=this.positionToPoint(t);if(e.element){var r=u.normalizeAngle(this.axisAngle+90);r/90!=Math.round(r/90)?e.pixelPerfect=!1:e.pixelPerfect=!0;var a=-e.length;e.inside&&(a*=-1),e.path=h.moveTo({x:0,y:0})+h.lineTo({x:a*u.cos(r),y:a*u.sin(r)})}this.positionItem(e,n),this.toggleVisibility(e,t,0,1)},t.prototype.updateBullet=function(e,t,i){var n=.5;e instanceof A.a&&(n=e.location),t+=(i-t)*n;var r=this.positionToPoint(t);this.positionItem(e,r),this.toggleVisibility(e,t,0,1)},t.prototype.positionToCoordinate=function(e){var t,i=this.axis,n=i.axisFullLength,r=this.pixelInnerRadius;return t=i.renderer.inversed?(i.end-e)*n+r:(e-i.start)*n+r,u.round(t,1)},t.prototype.pointToPosition=function(e){var t=u.getDistance(e)-this.pixelInnerRadius;return this.coordinateToPosition(t)},t}(I.a);l.c.registeredClasses.AxisRendererRadial=_;var k=i("Wglt"),L=function(e){function t(){var t=e.call(this)||this;return t.className="RadarChartDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(a.b),S=function(e){function t(){var t=e.call(this)||this;t._axisRendererX=D,t._axisRendererY=_,t.innerRadiusModifyer=1,t.className="RadarChart",t.startAngle=-90,t.endAngle=270,t.radius=Object(o.c)(80),t.innerRadius=0;var i=t.plotContainer.createChild(d.a);return i.shouldClone=!1,i.layout="absolute",i.align="center",i.valign="middle",t.seriesContainer.parent=i,t.radarContainer=i,t.bulletsContainer.parent=i,t.axisBulletsContainer=i,t._cursorContainer=i,t.chartContainer.events.on("maxsizechanged",t.invalidate,t,!1),t._bulletMask=i.createChild(y.a),t._bulletMask.shouldClone=!1,t._bulletMask.element=t.paper.add("path"),t._bulletMask.opacity=0,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Radar chart"))},t.prototype.processAxis=function(t){e.prototype.processAxis.call(this,t);var i=t.renderer;i.gridContainer.parent=i,i.breakContainer.parent=i,t.parent=this.radarContainer,i.toBack()},t.prototype.handleXAxisRangeChange=function(){e.prototype.handleXAxisRangeChange.call(this),k.each(this.yAxes.iterator(),function(e){e.invalidate()})},t.prototype.handleYAxisRangeChange=function(){e.prototype.handleYAxisRangeChange.call(this),k.each(this.xAxes.iterator(),function(e){e.invalidate()})},t.prototype.processConfig=function(t){if(t&&(m.hasValue(t.cursor)&&!m.hasValue(t.cursor.type)&&(t.cursor.type="RadarCursor"),m.hasValue(t.series)&&m.isArray(t.series)))for(var i=0,n=t.series.length;i<n;i++)t.series[i].type=t.series[i].type||"RadarSeries";e.prototype.processConfig.call(this,t)},t.prototype.beforeDraw=function(){e.prototype.beforeDraw.call(this);var t=this.plotContainer,i=u.getArcRect(this.startAngle,this.endAngle,1),n={x:0,y:0,width:0,height:0},r=t.innerWidth/i.width,a=t.innerHeight/i.height,s=this.innerRadius;if(s instanceof o.a){var l=s.value,c=Math.min(r,a);l=Math.max(c*l,c-Math.min(t.innerHeight,t.innerWidth))/c,n=u.getArcRect(this.startAngle,this.endAngle,l),this.innerRadiusModifyer=l/s.value,s=Object(o.c)(100*l)}i=u.getCommonRectangle([i,n]);var p=Math.min(t.innerWidth/i.width,t.innerHeight/i.height),d=2*C.relativeRadiusToValue(this.radius,p)||0,y=d/2,g=this.startAngle,f=this.endAngle;this._pixelInnerRadius=C.relativeRadiusToValue(s,y),this._bulletMask.path=h.arc(g,f-g,y,this._pixelInnerRadius),k.each(this.xAxes.iterator(),function(e){e.renderer.useChartAngles&&(e.renderer.startAngle=g,e.renderer.endAngle=f),e.width=d,e.height=d,e.renderer.pixelRadiusReal=y,e.renderer.innerRadius=s}),k.each(this.yAxes.iterator(),function(e){e.renderer.startAngle=g,e.renderer.endAngle=f,e.width=d,e.height=d,e.renderer.pixelRadiusReal=y,e.renderer.innerRadius=s});var m=this.cursor;m&&(m.width=d,m.height=d,m.startAngle=g,m.endAngle=f),this.radarContainer.definedBBox={x:y*i.x,y:y*i.y,width:y*i.width,height:y*i.height},this.radarContainer.validatePosition()},t.prototype.createSeries=function(){return new p},Object.defineProperty(t.prototype,"startAngle",{get:function(){return this.getPropertyValue("startAngle")},set:function(e){this.setPropertyValue("startAngle",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endAngle",{get:function(){return this.getPropertyValue("endAngle")},set:function(e){this.setPropertyValue("endAngle",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPercentProperty("radius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pixelInnerRadius",{get:function(){return this._pixelInnerRadius},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(e){this.setPercentProperty("innerRadius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),t.prototype.updateXAxis=function(e){e&&e.processRenderer()},t.prototype.updateYAxis=function(e){e&&e.processRenderer()},t}(a.a);l.c.registeredClasses.RadarChart=S;var R=i("vMqJ"),j=i("DziZ"),w=i("MIZb"),N=function(e){function t(){var t=e.call(this)||this;t._axis=new V.d,t.className="ClockHand";var i=new w.a;t.fill=i.getFor("alternativeBackground"),t.stroke=t.fill;var n=new y.a;n.radius=5,t.pin=n,t.isMeasured=!1,t.startWidth=5,t.endWidth=1,t.width=Object(o.c)(100),t.height=Object(o.c)(100),t.radius=Object(o.c)(100),t.innerRadius=Object(o.c)(0);var r=new j.a;return t.hand=r,t._disposers.push(t._axis),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.validate=function(){e.prototype.validate.call(this);var t=this.hand;t.width=this.pixelWidth;var i=Math.max(this.startWidth,this.endWidth);if(t.height=i,t.leftSide=Object(o.c)(this.startWidth/i*100),t.rightSide=Object(o.c)(this.endWidth/i*100),this.axis){var n=this.axis.renderer,r=C.relativeRadiusToValue(this.innerRadius,n.pixelRadius),a=C.relativeRadiusToValue(this.radius,n.pixelRadius);t.x=r,t.y=-i/2,t.width=a-r}},Object.defineProperty(t.prototype,"pin",{get:function(){return this._pin},set:function(e){this._pin&&this.removeDispose(this._pin),e&&(this._pin=e,e.parent=this,this._disposers.push(e))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hand",{get:function(){return this._hand},set:function(e){this._hand&&this.removeDispose(this._hand),e&&(this._hand=e,e.parent=this,this._disposers.push(e))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPercentProperty("radius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(e){this.setPercentProperty("innerRadius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startWidth",{get:function(){return this.getPropertyValue("startWidth")},set:function(e){this.setPropertyValue("startWidth",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endWidth",{get:function(){return this.getPropertyValue("endWidth")},set:function(e){this.setPropertyValue("endWidth",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rotationDirection",{get:function(){return this.getPropertyValue("rotationDirection")},set:function(e){this.setPropertyValue("rotationDirection",e)},enumerable:!0,configurable:!0}),t.prototype.showValue=function(e,t,i){if(this._value=e,void 0!=e&&(m.isNumber(t)||(t=0),this.axis)){var n=this.axis.renderer.positionToAngle(this.axis.anyToPosition(e)),r=this.rotation;"clockWise"==this.rotationDirection&&n<r&&(this.rotation=r-360),"counterClockWise"==this.rotationDirection&&n>r&&(this.rotation=r+360),this.animate({property:"rotation",to:n},t,i)}},Object.defineProperty(t.prototype,"currentPosition",{get:function(){if(this.axis)return this.axis.renderer.angleToPosition(this.rotation)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this._value},set:function(e){this.showValue(e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"axis",{get:function(){return this._axis.get()},set:function(e){if(this.axis!=e&&this._axis.set(e,new V.c([e.events.on("datavalidated",this.updateValue,this,!1),e.events.on("datarangechanged",this.updateValue,this,!1),e.events.on("dataitemsvalidated",this.updateValue,this,!1),e.events.on("propertychanged",this.invalidate,this,!1)])),e){var t=e.chart;t&&(this.rotation=t.startAngle)}this.parent=e.renderer,this.zIndex=5},enumerable:!0,configurable:!0}),t.prototype.updateValue=function(){this.value=this.value},t.prototype.processConfig=function(t){t&&m.hasValue(t.axis)&&m.isString(t.axis)&&this.map.hasKey(t.axis)&&(t.axis=this.map.getKey(t.axis)),e.prototype.processConfig.call(this,t)},t}(d.a);l.c.registeredClasses.ClockHand=N;var F=function(e){function t(){var t=e.call(this)||this;return t.className="GaugeChartDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(L),Y=function(e){function t(){var t=e.call(this)||this;return t.className="GaugeChart",t.startAngle=180,t.endAngle=360,t.hands=new R.e(new N),t.hands.events.on("inserted",t.processHand,t,!1),t._disposers.push(new R.c(t.hands)),t._disposers.push(t.hands.template),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Gauge chart"))},t.prototype.processHand=function(e){var t=e.newValue;t.axis||(t.axis=this.xAxes.getIndex(0))},t.prototype.configOrder=function(t,i){return t==i?0:"hands"==t?1:"hands"==i?-1:e.prototype.configOrder.call(this,t,i)},t}(S);l.c.registeredClasses.GaugeChart=Y;var X=i("2I/e"),W=i("quKg"),M=i("Puh1"),H=i("nPzZ"),B=function(e){function t(){var t=e.call(this)||this;return t.className="PieSeries3DDataItem",t.values.depthValue={},t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"depthValue",{get:function(){return this.values.depthValue.value},set:function(e){this.setValue("depthValue",e)},enumerable:!0,configurable:!0}),t}(M.b),z=function(e){function t(){var t=e.call(this)||this;return t.className="PieSeries3D",t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.createDataItem=function(){return new B},t.prototype.createSlice=function(){return new H.a},t.prototype.validateDataElement=function(t){var i=t.slice,n=this.depth;m.isNumber(n)||(n=this.chart.depth);var r=t.values.depthValue.percent;m.isNumber(r)||(r=100),i.depth=r*n/100;var a=this.angle;m.isNumber(a)||(a=this.chart.angle),i.angle=a,e.prototype.validateDataElement.call(this,t)},t.prototype.validate=function(){e.prototype.validate.call(this);for(var t=this._workingStartIndex;t<this._workingEndIndex;t++){var i=this.dataItems.getIndex(t).slice,n=i.startAngle;n>=-90&&n<90?i.toFront():n>=90&&i.toBack()}},Object.defineProperty(t.prototype,"depth",{get:function(){return this.getPropertyValue("depth")},set:function(e){this.setPropertyValue("depth",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"angle",{get:function(){return this.getPropertyValue("angle")},set:function(e){this.setPropertyValue("angle",e)},enumerable:!0,configurable:!0}),t.prototype.positionBullet=function(t){e.prototype.positionBullet.call(this,t);var i=t.dataItem.slice;t.y=t.pixelY-i.depth},t}(M.a);l.c.registeredClasses.PieSeries3D=z,l.c.registeredClasses.PieSeries3DDataItem=B;var E=function(e){function t(){var t=e.call(this)||this;return t.className="PieChart3DDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(W.b),G=function(e){function t(){var t=e.call(this)||this;return t.className="PieChart3D",t.depth=20,t.angle=10,t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"depth",{get:function(){return this.getPropertyValue("depth")},set:function(e){this.setPropertyValue("depth",e)&&this.invalidateDataUsers()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"angle",{get:function(){return this.getPropertyValue("angle")},set:function(e){e=u.fitToRange(e,0,90),this.setPropertyValue("angle",e)&&this.invalidateDataUsers()},enumerable:!0,configurable:!0}),t.prototype.createSeries=function(){return new z},t}(W.a);l.c.registeredClasses.PieChart3D=G;var q=i("DXFp"),K=function(e){function t(){var t=e.call(this)||this;return t.className="SlicedChartDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(q.b),U=function(e){function t(){var t=e.call(this)||this;return t.className="SlicedChart",t.seriesContainer.layout="horizontal",t.padding(15,15,15,15),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Sliced chart"))},t.prototype.validate=function(){e.prototype.validate.call(this)},t}(q.a);l.c.registeredClasses.SlicedChart=U,l.c.registeredClasses.SlicedChartDataItem=K;var Z=i("VIOb"),Q=i("+qIf"),J=i("Vs7R"),$=i("wUYf"),ee=i("MlsF"),te=i("3Cxr"),ie=i("CnhP"),ne=i("Qkdp"),re=i("uWmK"),ae=function(e){function t(){var t=e.call(this)||this;return t.legendSettings=new re.c,t.className="FlowDiagramNode",t.isMeasured=!1,new w.a,t.draggable=!0,t.inert=!0,t.setStateOnChildren=!0,t.events.on("positionchanged",t.invalidateLinks,t,!1),t.events.on("sizechanged",t.invalidateLinks,t,!1),t}return Object(r.c)(t,e),t.prototype.handleHit=function(e){this.isHidden||this.isHiding?this.show():this.hide()},t.prototype.show=function(t){var i=e.prototype.show.call(this,t);return this.outgoingDataItems.each(function(e){(!e.toNode||e.toNode&&!e.toNode.isHidden)&&e.setWorkingValue("value",e.getValue("value"),t)}),this.incomingDataItems.each(function(e){(!e.fromNode||e.fromNode&&!e.fromNode.isHidden)&&e.setWorkingValue("value",e.getValue("value"),t)}),i},t.prototype.hide=function(t){var i=e.prototype.hide.call(this,t);return this.outgoingDataItems.each(function(e){e.setWorkingValue("value",0,t)}),this.incomingDataItems.each(function(e){e.setWorkingValue("value",0,t)}),i},t.prototype.validate=function(){this.isDisposed()||(e.prototype.validate.call(this),this.invalidateLinks())},t.prototype.invalidateLinks=function(){var e=this;this.outgoingDataItems.each(function(t){var i=t.link;if("fromNode"==i.colorMode&&(i.fill=i.dataItem.fromNode.color),"gradient"==i.colorMode){i.fill=i.gradient,i.stroke=i.gradient;var n=i.gradient.stops.getIndex(0);n&&(n.color=e.color,i.gradient.validate())}}),this.incomingDataItems.each(function(t){var i=t.link;if("toNode"==i.colorMode&&(i.fill=i.dataItem.toNode.color),"gradient"==i.colorMode){i.fill=i.gradient,i.stroke=i.gradient;var n=i.gradient.stops.getIndex(1);n&&(n.color=e.color,i.gradient.validate())}})},Object.defineProperty(t.prototype,"incomingDataItems",{get:function(){var e=this;if(!this._incomingDataItems){var t=new R.b;t.events.on("inserted",function(){"name"==e.chart.sortBy?e._incomingSorted=k.sort(e._incomingDataItems.iterator(),function(e,t){return $.order(e.fromName,t.fromName)}):"value"==e.chart.sortBy?e._incomingSorted=k.sort(e._incomingDataItems.iterator(),function(e,t){return ee.b(te.order(e.value,t.value))}):e._incomingSorted=e._incomingDataItems.iterator()},void 0,!1),this._incomingDataItems=t}return this._incomingDataItems},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"outgoingDataItems",{get:function(){var e=this;if(!this._outgoingDataItems){var t=new R.b;t.events.on("inserted",function(){"name"==e.chart.sortBy?e._outgoingSorted=k.sort(e._outgoingDataItems.iterator(),function(e,t){return $.order(e.fromName,t.fromName)}):"value"==e.chart.sortBy?e._outgoingSorted=k.sort(e._outgoingDataItems.iterator(),function(e,t){return ee.b(te.order(e.value,t.value))}):e._outgoingSorted=e._outgoingDataItems.iterator()},void 0,!1),this._outgoingDataItems=t}return this._outgoingDataItems},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"name",{get:function(){return this.getPropertyValue("name")},set:function(e){this.setPropertyValue("name",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"total",{get:function(){return this.getPropertyValue("total")},set:function(e){this.setPropertyValue("total",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"totalIncoming",{get:function(){return this.getPropertyValue("totalIncoming")},set:function(e){this.setPropertyValue("totalIncoming",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"totalOutgoing",{get:function(){return this.getPropertyValue("totalOutgoing")},set:function(e){this.setPropertyValue("totalOutgoing",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){return this.getPropertyValue("color")},set:function(e){this.setColorProperty("color",e),this._background&&(this._background.fill=e),this.fill=e},enumerable:!0,configurable:!0}),t.prototype.createLegendMarker=function(e){var t=e.pixelWidth,i=e.pixelHeight;e.removeChildren();var n=e.createChild(ie.a);n.shouldClone=!1,ne.copyProperties(this,n,J.b),n.stroke=this.fill,n.copyFrom(this),n.padding(0,0,0,0),n.width=t,n.height=i;var r=e.dataItem;r.color=n.fill,r.colorOrig=n.fill},Object.defineProperty(t.prototype,"legendDataItem",{get:function(){return this._legendDataItem},set:function(e){this._legendDataItem=e,this._legendDataItem.itemContainer.deepInvalidate()},enumerable:!0,configurable:!0}),t}(d.a);l.c.registeredClasses.FlowDiagramNode=ae;var oe=i("sxA1"),se=i("TXRX"),le=i("8ZqG"),ue=i("jfaP"),he=i("PTiM"),ce=function(e){function t(){var t=e.call(this)||this;t.className="FlowDiagramLink";var i=new w.a;return t.maskBullets=!1,t.colorMode="fromNode",t.layout="none",t.isMeasured=!1,t.startAngle=0,t.endAngle=0,t.strokeOpacity=0,t.verticalCenter="none",t.horizontalCenter="none",t.tooltipText="{fromName}→{toName}:{value.value}",t.tooltipLocation=.5,t.link=t.createChild(J.a),t.link.shouldClone=!1,t.link.setElement(t.paper.add("path")),t.link.isMeasured=!1,t.fillOpacity=.2,t.fill=i.getFor("alternativeBackground"),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.positionBullets=function(){var e=this;k.each(this.bullets.iterator(),function(t){t.parent=e.bulletsContainer,t.maxWidth=e.maxWidth,t.maxHeight=e.maxHeight,e.positionBullet(t)})},Object.defineProperty(t.prototype,"bulletsContainer",{get:function(){if(!this._bulletsContainer){var e=this.createChild(d.a);e.shouldClone=!1,e.layout="none",this._bulletsContainer=e}return this._bulletsContainer},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bulletsMask",{get:function(){if(!this._bulletsMask){var e=this.createChild(J.a);e.shouldClone=!1,e.setElement(this.paper.add("path")),e.isMeasured=!1,this._bulletsMask=e}return this._bulletsMask},enumerable:!0,configurable:!0}),t.prototype.positionBullet=function(e){var t=e.locationX;m.isNumber(t)||(t=e.locationY),m.isNumber(t)||(t=.5);var i=this.middleLine.positionToPoint(t);e.moveTo(i);var n,r=e.propertyFields.rotation;e.dataItem&&(n=e.dataItem.dataContext[r]);m.isNumber(n)||(n=i.angle),e.rotation=n},Object.defineProperty(t.prototype,"startAngle",{get:function(){return this.getPropertyValue("startAngle")},set:function(e){this.setPropertyValue("startAngle",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endAngle",{get:function(){return this.getPropertyValue("endAngle")},set:function(e){this.setPropertyValue("endAngle",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"colorMode",{get:function(){return this.getPropertyValue("colorMode")},set:function(e){if("gradient"==e){var t=this.fill;this.gradient.stops.clear(),t instanceof le.a&&(this.gradient.addColor(t),this.gradient.addColor(t)),this.fill=this.gradient,this.stroke=this.gradient}this.setPropertyValue("colorMode",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maskBullets",{get:function(){return this.getPropertyValue("maskBullets")},set:function(e){this.setPropertyValue("maskBullets",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"tooltipLocation",{get:function(){return this.getPropertyValue("tooltipLocation")},set:function(e){this.setPropertyValue("tooltipLocation",e,!0)},enumerable:!0,configurable:!0}),t.prototype.setFill=function(t){e.prototype.setFill.call(this,t);var i=this._gradient;i&&t instanceof le.a&&(i.stops.clear(),i.addColor(t),i.addColor(t))},t.prototype.measureElement=function(){},Object.defineProperty(t.prototype,"bullets",{get:function(){var e=this;return this._bullets||(this._bullets=new R.e(new se.a),this._disposers.push(new R.c(this._bullets)),this._disposers.push(this._bullets.template),this._bullets.events.on("inserted",function(t){t.newValue.events.on("propertychanged",function(t){"locationX"!=t.property&&"locationY"!=t.property||e.positionBullet(t.target)},void 0,!1)},void 0,!1)),this._bullets},enumerable:!0,configurable:!0}),t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.bullets.copyFrom(t.bullets);var i=this.middleLine;i&&(i instanceof he.a&&t.middleLine instanceof he.a&&i.copyFrom(t.middleLine),i instanceof ue.a&&t.middleLine instanceof ue.a&&i.copyFrom(t.middleLine)),this.link.copyFrom(t.link)},t.prototype.getTooltipX=function(){if(this.middleLine)return this.middleLine.positionToPoint(this.tooltipLocation).x},t.prototype.getTooltipY=function(){if(this.middleLine)return this.middleLine.positionToPoint(this.tooltipLocation).y},Object.defineProperty(t.prototype,"gradient",{get:function(){return this._gradient||(this._gradient=new oe.a),this._gradient},enumerable:!0,configurable:!0}),t}(d.a);l.c.registeredClasses.FlowDiagramLink=ce;var pe=i("/e9j"),de=i("DHte"),ye=function(e){function t(){var t=e.call(this)||this;return t.className="FlowDiagramDataItem",t.values.value={},t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"fromName",{get:function(){return this.properties.fromName},set:function(e){this.setProperty("fromName",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"toName",{get:function(){return this.properties.toName},set:function(e){this.setProperty("toName",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){return this.properties.color},set:function(e){this.setProperty("color",Object(le.e)(e))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this.values.value.value},set:function(e){this.setValue("value",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"link",{get:function(){var e=this;if(!this._link){var t=this.component.links.create();this._link=t,this.addSprite(t),this._disposers.push(new V.b(function(){e.component&&e.component.links.removeValue(t)}))}return this._link},enumerable:!0,configurable:!0}),t}(Z.b),ge=function(e){function t(){var t=e.call(this)||this;t.colors=new de.a,t.className="FlowDiagram",t.nodePadding=20,t.sortBy="none",t.sequencedInterpolation=!0,t.colors.step=2,t.minNodeSize=.02;var i=t.chartContainer.createChild(d.a);i.shouldClone=!1,i.layout="none",i.isMeasured=!1,t.linksContainer=i;var n=t.chartContainer.createChild(d.a);return n.shouldClone=!1,n.layout="none",n.isMeasured=!1,t.nodesContainer=n,t.dataItem=t.createDataItem(),t.dataItem.component=t,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.dispose=function(){e.prototype.dispose.call(this),this.dataItem.dispose()},t.prototype.validateData=function(){var t=this;0==this._parseDataFrom&&this.nodes.clear(),this.sortNodes(),this.colors.reset(),e.prototype.validateData.call(this);var i,n,r=0,a=0;k.each(this.dataItems.iterator(),function(e){var o=e.fromName;o&&((s=t.nodes.getKey(o))||((s=t.nodes.create(o)).name=o,s.chart=t,s.dataItem=e),e.fromNode=s,e.fromNode.outgoingDataItems.push(e));var s,l=e.toName;l&&((s=t.nodes.getKey(l))||((s=t.nodes.create(l)).name=l,s.chart=t,s.dataItem=e),e.toNode=s,e.toNode.incomingDataItems.push(e));if(!e.fromNode){var u=new pe.a;u.opacities=[0,1],e.link.strokeModifier=u}if(!e.toNode){var h=new pe.a;h.opacities=[1,0],e.link.strokeModifier=h}var c=e.value;m.isNumber(c)&&(r+=c,a++,(i>c||!m.isNumber(i))&&(i=c),(n<c||!m.isNumber(n))&&(n=c))});var o="value";this.dataItem.setCalculatedValue(o,n,"high"),this.dataItem.setCalculatedValue(o,i,"low"),this.dataItem.setCalculatedValue(o,r,"sum"),this.dataItem.setCalculatedValue(o,r/a,"average"),this.dataItem.setCalculatedValue(o,a,"count"),k.each(this.nodes.iterator(),function(e){var i=e[1];i.fill instanceof le.a&&(i.color=i.fill),void 0==i.color&&(i.color=t.colors.next()),void 0!=i.dataItem.color&&(i.color=i.dataItem.color),i.dataItem.visible||i.hide(0),t.getNodeValue(i)}),this.sortNodes(),this.feedLegend()},t.prototype.handleDataItemWorkingValueChange=function(e,t){this.invalidate()},t.prototype.sortNodes=function(){"name"==this.sortBy?this._sorted=this.nodes.sortedIterator():"value"==this.sortBy?this._sorted=k.sort(this.nodes.iterator(),function(e,t){return ee.b(te.order(e[1].total,t[1].total))}):this._sorted=this.nodes.iterator()},t.prototype.getNodeValue=function(e){var t=0,i=0;k.each(e.incomingDataItems.iterator(),function(e){var i=e.getWorkingValue("value");m.isNumber(i)&&(t+=i)}),k.each(e.outgoingDataItems.iterator(),function(e){var t=e.getWorkingValue("value");m.isNumber(t)&&(i+=t)}),e.total=t+i,e.totalIncoming=t,e.totalOutgoing=i},t.prototype.changeSorting=function(){this.sortNodes()},t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Flow diagram"))},t.prototype.createDataItem=function(){return new ye},Object.defineProperty(t.prototype,"nodePadding",{get:function(){return this.getPropertyValue("nodePadding")},set:function(e){this.setPropertyValue("nodePadding",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sortBy",{get:function(){return this.getPropertyValue("sortBy")},set:function(e){this.setPropertyValue("sortBy",e),this.changeSorting()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"minNodeSize",{get:function(){return this.getPropertyValue("minNodeSize")},set:function(e){this.setPropertyValue("minNodeSize",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nodes",{get:function(){if(!this._nodes){var e=this.createNode();e.events.on("hit",function(e){e.target.handleHit(e)}),this._nodes=new Q.c(e),this._disposers.push(new Q.b(this._nodes))}return this._nodes},enumerable:!0,configurable:!0}),t.prototype.createNode=function(){var e=new ae;return this._disposers.push(e),e},Object.defineProperty(t.prototype,"links",{get:function(){return this._links||(this._links=new R.e(this.createLink()),this._disposers.push(new R.c(this._links))),this._links},enumerable:!0,configurable:!0}),t.prototype.createLink=function(){var e=new ce;return this._disposers.push(e),e},t.prototype.feedLegend=function(){var e=this.legend;if(e){var t=[];this.nodes.each(function(e,i){t.push(i)}),e.data=t,e.dataFields.name="name"}},t.prototype.disposeData=function(){e.prototype.disposeData.call(this),this.nodes.clear()},t}(Z.a);l.c.registeredClasses.FlowDiagram=ge;var fe=i("p9TX"),me=function(e){function t(){var t=e.call(this)||this;t.className="LabelBullet";var i=t.createChild(fe.a);return i.shouldClone=!1,i.verticalCenter="middle",i.horizontalCenter="middle",i.truncate=!0,i.hideOversized=!1,i.maxWidth=500,i.maxHeight=500,i.stroke=Object(le.c)(),i.strokeOpacity=0,i.fill=(new w.a).getFor("text"),t.events.on("maxsizechanged",t.handleMaxSize,t,!1),t.label=i,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.handleMaxSize=function(){this.label.maxWidth=this.maxWidth,this.label.maxHeight=this.maxHeight},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.label.copyFrom(t.label)},t}(se.a);l.c.registeredClasses.LabelBullet=me;var ve=function(e){function t(){var t=e.call(this)||this;t.nextInCoord=0,t.nextOutCoord=0,t.className="SankeyNode",t.width=10,t.height=10;var i=t.createChild(me);i.shouldClone=!1,i.locationX=1,i.locationY=.5,i.label.text="{name}",i.width=150,i.height=150,i.label.horizontalCenter="left",i.label.padding(0,5,0,5),t.nameLabel=i;var n=t.createChild(me);n.shouldClone=!1,n.label.hideOversized=!1,n.locationX=.5,n.locationY=.5,n.width=150,n.height=150,n.label.horizontalCenter="middle",t.valueLabel=n;var r=t.hiddenState;return r.properties.fill=(new w.a).getFor("disabledBackground"),r.properties.opacity=.5,r.properties.visible=!0,t.background.hiddenState.copyFrom(r),t}return Object(r.c)(t,e),t.prototype.invalidateLinks=function(){var t=this;e.prototype.invalidateLinks.call(this),this.nextInCoord=0,this.nextOutCoord=0;var i=this.chart;if(i){var n=i.orientation;this._incomingSorted&&k.each(this._incomingSorted,function(e){var r=e.link,a=e.getWorkingValue("value");if(m.isNumber(a)){r.parent=t.chart.linksContainer;var o=void 0,s=void 0,l=void 0;if("horizontal"==n?(o=t.pixelX+t.dx,s=t.nextInCoord+t.pixelY+t.dy,l=0):(s=t.pixelY+t.dy,o=t.nextInCoord+t.pixelX+t.dx,l=90),r.endX=o,r.endY=s,r.startAngle=l,r.endAngle=l,r.gradient.rotation=l,r.linkWidth=a*i.valueHeight,!e.fromNode){"horizontal"==n?(r.maxWidth=200,r.startX=t.pixelX+t.dx-r.maxWidth,r.startY=r.endY):(r.maxHeight=200,r.startX=r.endX,r.startY=t.pixelY+t.dy-r.maxHeight),C.used(r.gradient),r.fill=e.toNode.color;var u=r.gradient.stops.getIndex(0);u&&("gradient"==r.colorMode&&(u.color=t.color),u.opacity=0,r.fill=r.gradient,r.stroke=r.gradient,r.gradient.validate())}t.nextInCoord+=r.linkWidth}}),this._outgoingSorted&&k.each(this._outgoingSorted,function(e){var i=e.link;i.parent=t.chart.linksContainer;var r=e.getWorkingValue("value");if(m.isNumber(r)){var a=void 0,o=void 0,s=void 0;if("horizontal"==n?(s=0,a=t.pixelX+t.pixelWidth+t.dx-1,o=t.nextOutCoord+t.pixelY+t.dy):(s=90,a=t.nextOutCoord+t.pixelX+t.dx,o=t.pixelY+t.pixelHeight+t.dy-1),i.startX=a,i.startY=o,i.startAngle=s,i.endAngle=s,i.gradient.rotation=s,i.linkWidth=r*t.chart.valueHeight,!e.toNode){"horizontal"==n?(i.maxWidth=200,i.endX=t.pixelX+i.maxWidth+t.dx,i.endY=i.startY):(i.maxHeight=200,i.endX=i.startX,i.endY=t.pixelY+i.maxHeight+t.dy),i.opacity=t.opacity;var l=i.gradient.stops.getIndex(1);l&&("gradient"==i.colorMode&&(l.color=t.color),l.opacity=0,i.fill=i.gradient,i.stroke=i.gradient,i.gradient.validate())}t.nextOutCoord+=i.linkWidth}})}this.positionBullet(this.nameLabel),this.positionBullet(this.valueLabel)},t.prototype.positionBullet=function(e){e&&(e.x=this.measuredWidth*e.locationX,e.y=this.measuredHeight*e.locationY)},Object.defineProperty(t.prototype,"level",{get:function(){return this.getPropertyValue("level")},set:function(e){this.setPropertyValue("level",e,!0)},enumerable:!0,configurable:!0}),t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.nameLabel.copyFrom(t.nameLabel),this.valueLabel.copyFrom(t.valueLabel)},t}(ae);l.c.registeredClasses.SankeyNode=ve;var xe=i("xgTw"),be=i("aFzC"),Pe=function(e){function t(){var t=e.call(this)||this;return t.className="SankeyLink",new w.a,t.tension=.8,t.controlPointDistance=.2,t.startAngle=0,t.endAngle=0,t.linkWidth=0,t.startX=0,t.endX=0,t.startY=0,t.endY=0,t.middleLine=t.createChild(xe.a),t.middleLine.shouldClone=!1,t.middleLine.strokeOpacity=0,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.validate=function(){if(e.prototype.validate.call(this),!this.isTemplate){var t=this.startX,i=this.startY,n=this.endX,r=this.endY;m.isNumber(n)||(n=t),m.isNumber(r)||(r=i);var a=this.startAngle,o=this.endAngle,s=this.linkWidth,l="",c=t,p=i,d=n,y=r,g=t+s*u.sin(a),f=n+s*u.sin(o),v=i+s*u.cos(a),x=r+s*u.cos(o),b=t+s/2*u.sin(a),P=n+s/2*u.sin(o),C=i+s/2*u.cos(a),A=r+s/2*u.cos(o);this.zIndex=this.zIndex||this.dataItem.index;var D=this.tension+(1-this.tension)*u.sin(a),I=this.tension+(1-this.tension)*u.cos(a);if(this.middleLine.tensionX=D,this.middleLine.tensionY=I,m.isNumber(s)&&m.isNumber(t)&&m.isNumber(n)&&m.isNumber(i)&&m.isNumber(r)){u.round(c,3)==u.round(d,3)&&(d+=.01),u.round(p,3)==u.round(y,3)&&(y+=.01),u.round(g,3)==u.round(f,3)&&(f+=.01),u.round(v,3)==u.round(x,3)&&(x+=.01);var T=Math.min(g,f,c,d),O=Math.min(v,x,p,y),V=Math.max(g,f,c,d),_=Math.max(v,x,p,y);this._bbox={x:T,y:O,width:V-T,height:_-O};var k=this.controlPointDistance,L=c+(d-c)*k*u.cos(a),S=p+(y-p)*k*u.sin(a),R=d-(d-c)*k*u.cos(o),j=y-(y-p)*k*u.sin(o),w=b+(P-b)*k*u.cos(a),N=C+(A-C)*k*u.sin(a),F=P-(P-b)*k*u.cos(o),Y=A-(A-C)*k*u.sin(o),X=u.getAngle({x:L,y:S},{x:R,y:j}),W=(s/u.cos(X)-s)/u.tan(X)*u.cos(a),M=(s/u.sin(X)-s)*u.tan(X)*u.sin(a),H=-W/2+g+(f-g)*k*u.cos(a),B=-M/2+v+(x-v)*k*u.sin(a),z=-W/2+f-(f-g)*k*u.cos(o),E=-M/2+x-(x-v)*k*u.sin(o);this.middleLine.segments=[[{x:b,y:C},{x:w,y:N},{x:F,y:Y},{x:P,y:A}]],L+=W/2,S+=M/2,R+=W/2,j+=M/2,l+=h.moveTo({x:c,y:p}),l+=new be.b(D,I).smooth([{x:c,y:p},{x:L,y:S},{x:R,y:j},{x:d,y:y}]),l+=h.lineTo({x:f,y:x}),l+=new be.b(D,I).smooth([{x:f,y:x},{x:z,y:E},{x:H,y:B},{x:g,y:v}]),l+=h.closePath()}this.link.path=l,this.maskBullets&&(this.bulletsMask.path=l,this.bulletsContainer.mask=this.bulletsMask),this.positionBullets()}},Object.defineProperty(t.prototype,"startX",{get:function(){return this.getPropertyValue("startX")},set:function(e){this.setPropertyValue("startX",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endX",{get:function(){return this.getPropertyValue("endX")},set:function(e){this.setPropertyValue("endX",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startY",{get:function(){return this.getPropertyValue("startY")},set:function(e){this.setPropertyValue("startY",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endY",{get:function(){return this.getPropertyValue("endY")},set:function(e){this.setPropertyValue("endY",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"linkWidth",{get:function(){return this.getPropertyValue("linkWidth")},set:function(e){this.setPropertyValue("linkWidth",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"controlPointDistance",{get:function(){return this.getPropertyValue("controlPointDistance")},set:function(e){this.setPropertyValue("controlPointDistance",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"tension",{get:function(){return this.getPropertyValue("tension")},set:function(e){this.setPropertyValue("tension",e,!0)},enumerable:!0,configurable:!0}),t}(ce);l.c.registeredClasses.SankeyLink=Pe;var Ce=i("1yyj"),Ae=function(e){function t(){var t=e.call(this)||this;return t.className="SankeyDiagramDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(ye),De=function(e){function t(){var t=e.call(this)||this;return t.className="SankeyDiagram",t.orientation="horizontal",t.nodeAlign="middle",t.nodesContainer.width=Object(o.c)(100),t.nodesContainer.height=Object(o.c)(100),t.linksContainer.width=Object(o.c)(100),t.linksContainer.height=Object(o.c)(100),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.validateData=function(){var t=this;e.prototype.validateData.call(this),this._levelCount=0,this.nodes.each(function(e,t){t.level=void 0}),this.nodes.each(function(e,i){i.level=t.getNodeLevel(i,0),t._levelCount=u.max(t._levelCount,i.level)})},t.prototype.getNodeLevel=function(e,t){var i=this,n=[t];return k.each(e.incomingDataItems.iterator(),function(e){e.fromNode&&(m.isNumber(e.fromNode.level)?n.push(e.fromNode.level+1):n.push(i.getNodeLevel(e.fromNode,t+1)))}),Math.max.apply(Math,Object(r.f)(n))},t.prototype.calculateValueHeight=function(){var e=this;this._levelSum={},this._levelNodesCount={},this.maxSum=0;var t,i,n,r=this.dataItem.values.value.sum;k.each(this._sorted,function(t){var i=t[1];e.getNodeValue(i)}),this.nodes.each(function(t,i){var n=i.level,a=Math.max(i.totalIncoming,i.totalOutgoing);a/r<e.minNodeSize&&(a=r*e.minNodeSize),m.isNumber(e._levelSum[n])?e._levelSum[n]+=a:e._levelSum[n]=a,m.isNumber(e._levelNodesCount[n])?e._levelNodesCount[n]++:e._levelNodesCount[n]=1}),t="horizontal"==this.orientation?this.chartContainer.maxHeight-1:this.chartContainer.maxWidth-1,ne.each(this._levelSum,function(r,a){var o=a,s=e._levelNodesCount[r],l=(t-(s-1)*e.nodePadding)/o;(n>l||!m.isNumber(n))&&(n=l,e.maxSum=o,i=m.toNumber(r))}),this._maxSumLevel=i;var a=this._levelNodesCount[this._maxSumLevel],o=(t-(a-1)*this.nodePadding)/this.maxSum;if(m.isNumber(this.valueHeight)){var s=void 0;try{s=this._heightAnimation.animationOptions[0].to}catch(e){}if(s!=o){var l=this.interpolationDuration;try{l=this.nodes.template.states.getKey("active").transitionDuration}catch(e){}this._heightAnimation=new Ce.a(this,{property:"valueHeight",from:this.valueHeight,to:o},l,this.interpolationEasing).start(),this._disposers.push(this._heightAnimation)}}else this.valueHeight=o},t.prototype.validate=function(){var t=this;e.prototype.validate.call(this),this.calculateValueHeight();var i=this.nodesContainer,n={},r=this._levelNodesCount[this._maxSumLevel],a=this.dataItem.values.value.sum;k.each(this._sorted,function(e){var o,s,l,u=e[1],h=u.level,c=0,p=t._levelNodesCount[h];switch(t.nodeAlign){case"bottom":c=(t.maxSum-t._levelSum[h])*t.valueHeight-(p-r)*t.nodePadding;break;case"middle":c=(t.maxSum-t._levelSum[h])*t.valueHeight/2-(p-r)*t.nodePadding/2}u.parent=i;var d=Math.max(u.totalIncoming,u.totalOutgoing);if(d/a<t.minNodeSize&&(d=a*t.minNodeSize),"horizontal"==t.orientation){s=(o=(t.innerWidth-u.pixelWidth)/t._levelCount)*u.level,l=n[h]||c;var y=d*t.valueHeight;u.height=y,u.minX=s,u.maxX=s,n[h]=l+y+t.nodePadding}else{o=(t.innerHeight-u.pixelHeight)/t._levelCount,s=n[h]||c,l=o*u.level;var g=d*t.valueHeight;u.width=g,u.minY=l,u.maxY=l,n[h]=s+g+t.nodePadding}u.x=s,u.y=l})},t.prototype.showReal=function(t){var i=this;if(!this.preventShow){if(this.interpolationDuration>0){var n=this.nodesContainer,r=0;k.each(this.links.iterator(),function(e){e.hide(0)}),k.each(this._sorted,function(e){var t,a=e[1];"horizontal"==i.orientation?(a.dx=-(n.pixelWidth-a.pixelWidth)/Math.max(i._levelCount,1),t="dx"):(a.dy=-(n.pixelHeight-a.pixelHeight)/Math.max(i._levelCount,1),t="dy");var o=0,s=i.interpolationDuration;i.sequencedInterpolation&&(o=i.sequencedInterpolationDelay*r+s*r/k.length(i.nodes.iterator())),a.opacity=0,a.invalidateLinks(),a.animate([{property:"opacity",from:0,to:1},{property:t,to:0}],i.interpolationDuration,i.interpolationEasing).delay(o),k.each(a.outgoingDataItems.iterator(),function(e){var t=e.link.show(i.interpolationDuration);t&&!t.isFinished()&&t.delay(o)}),k.each(a.incomingDataItems.iterator(),function(e){if(!e.fromNode){var t=e.link.show(i.interpolationDuration);t&&!t.isFinished()&&t.delay(o)}}),r++})}return e.prototype.showReal.call(this)}},t.prototype.changeSorting=function(){var e=this;this.sortNodes();var t={};k.each(this._sorted,function(i){var n,r,a=i[1],o=a.level,s=(e.maxSum-e._levelSum[o])*e.valueHeight/2;"horizontal"==e.orientation?(n="y",r=a.pixelHeight):(n="x",r=a.pixelWidth),a.animate({property:n,to:t[o]||s},e.interpolationDuration,e.interpolationEasing),t[o]=(t[o]||s)+r+e.nodePadding,a.invalidateLinks()})},t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Sankey diagram"))},t.prototype.createDataItem=function(){return new Ae},Object.defineProperty(t.prototype,"nodeAlign",{get:function(){return this.getPropertyValue("nodeAlign")},set:function(e){this.setPropertyValue("nodeAlign",e),this.changeSorting()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"orientation",{get:function(){return this.getPropertyValue("orientation")},set:function(e){this.setPropertyValue("orientation",e,!0);var t=this.nodes.template.nameLabel;"vertical"==e?(this.nodes.template.width=void 0,t.label.horizontalCenter="middle",t.locationX=.5):(this.nodes.template.height=void 0,t.label.horizontalCenter="left",t.locationX=1)},enumerable:!0,configurable:!0}),t.prototype.createNode=function(){var e=new ve;return this._disposers.push(e),e},t.prototype.createLink=function(){var e=new Pe;return this._disposers.push(e),e},Object.defineProperty(t.prototype,"valueHeight",{get:function(){return this._valueHeight},set:function(e){e!=this._valueHeight&&(this._valueHeight=e,this.invalidate())},enumerable:!0,configurable:!0}),t.prototype.disposeData=function(){e.prototype.disposeData.call(this),this._sorted=this.nodes.iterator()},t}(ge);l.c.registeredClasses.SankeyDiagram=De;var Ie=i("Inf5"),Te=function(e){function t(){var t=e.call(this)||this;t.className="ChordNode";var i=t.createChild(P.a);i.location=.5,i.radius=5,i.text="{name}",i.zIndex=1,i.shouldClone=!1,t.label=i,t.layout="none",t.events.on("positionchanged",t.updateRotation,t,!1),t.isMeasured=!1,t.slice=t.createChild(Ie.a),t.slice.isMeasured=!1;var n=t.hiddenState;return n.properties.fill=(new w.a).getFor("disabledBackground"),n.properties.opacity=.5,n.properties.visible=!0,t.setStateOnChildren=!1,t.slice.hiddenState.properties.visible=!0,t.adapter.add("tooltipX",function(e,t){return t.slice.ix*(t.slice.radius-(t.slice.radius-t.slice.pixelInnerRadius)/2)}),t.adapter.add("tooltipY",function(e,t){return t.slice.iy*(t.slice.radius-(t.slice.radius-t.slice.pixelInnerRadius)/2)}),t}return Object(r.c)(t,e),t.prototype.invalidateLinks=function(){var t=this;e.prototype.invalidateLinks.call(this);var i=this.label,n=this.slice,r=this.chart;if(r&&n){var a=this.total,o=n.arc,s=n.startAngle;this.children.each(function(e){if(e instanceof se.a){var t=e.locationX;m.isNumber(t)||(t=.5);var i=e.locationY;m.isNumber(i)||(i=1);var r=s+o*t,a=i*n.radius;e.x=a*u.cos(r),e.y=a*u.sin(r)}});var l=s+o*i.location,h=s+(1-a/this.adjustedTotal)*o*.5;m.isNaN(h)&&(h=s),i.fixPosition(l,n.radius),this.nextAngle=h,this._outgoingSorted&&k.each(this._outgoingSorted,function(e){var i=e.link;i.parent=t.chart.linksContainer;var a=e.getWorkingValue("value");if(m.isNumber(a)){if(r.nonRibbon){var l=i.percentWidth;m.isNumber(l)||(l=5),l/=100,i.startAngle=s+o/2-o/2*l,i.arc=o*l}else i.arc=a*r.valueAngle,i.startAngle=t.nextAngle,t.nextAngle+=i.arc;e.toNode||(i.endAngle=i.startAngle),i.radius=n.pixelInnerRadius}}),this._incomingSorted&&k.each(this._incomingSorted,function(e){var i=e.link;if(i.radius=n.pixelInnerRadius,r.nonRibbon){var a=i.percentWidth;m.isNumber(a)||(a=5),a/=100,i.endAngle=s+o/2-o/2*a,i.arc=o*a}else{i.endAngle=t.nextAngle;var l=e.getWorkingValue("value");m.isNumber(l)&&(i.arc=l*r.valueAngle,t.nextAngle+=i.arc)}e.fromNode||(i.startAngle=i.endAngle)})}},t.prototype.updateRotation=function(){var e=this.slice,t=this.trueStartAngle+e.arc/2,i=e.radius,n=i*u.cos(t),r=i*u.sin(t),a=u.getAngle({x:n+this.pixelX,y:r+this.pixelY});e.startAngle=this.trueStartAngle+(a-t),this.dx=-this.pixelX,this.dy=-this.pixelY},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.label.copyFrom(t.label),this.slice.copyFrom(t.slice)},t}(ae);l.c.registeredClasses.ChordNode=Te;var Oe=function(e){function t(){var t=e.call(this)||this;return t.className="QuadraticCurve",t.element=t.paper.add("path"),t.pixelPerfect=!1,t.fill=Object(le.c)(),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.draw=function(){if(m.isNumber(this.x1+this.x2+this.y1+this.y2+this.cpx+this.cpy)){var e={x:this.x1,y:this.y1},t={x:this.x2,y:this.y2},i={x:this.cpx,y:this.cpy},n=h.moveTo(e)+h.quadraticCurveTo(t,i);this.path=n}},Object.defineProperty(t.prototype,"cpx",{get:function(){return this.getPropertyValue("cpx")},set:function(e){this.setPropertyValue("cpx",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"cpy",{get:function(){return this.getPropertyValue("cpy")},set:function(e){this.setPropertyValue("cpy",e,!0)},enumerable:!0,configurable:!0}),t.prototype.positionToPoint=function(e){var t={x:this.x1,y:this.y1},i={x:this.cpx,y:this.cpy},n={x:this.x2,y:this.y2},r=u.getPointOnQuadraticCurve(t,n,i,e),a=u.getPointOnQuadraticCurve(t,n,i,e+.001);return{x:r.x,y:r.y,angle:u.getAngle(r,a)}},t}(he.a),Ve=function(e){function t(){var t=e.call(this)||this;return t.className="ChordLink",t.middleLine=t.createChild(Oe),t.middleLine.shouldClone=!1,t.middleLine.strokeOpacity=0,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.validate=function(){if(e.prototype.validate.call(this),!this.isTemplate){var t=this.startAngle,i=this.endAngle,n=this.arc,r=this.radius,a=this.dataItem.fromNode,o=this.dataItem.toNode,s=0,l=0;a&&(s=a.pixelX+a.dx,l=a.pixelY+a.dy);var c=0,p=0;if(o&&(c=o.pixelX+o.dx,p=o.pixelY+o.dy),r>0){var d=r*u.cos(t)+s,y=r*u.sin(t)+l,g=r*u.cos(i)+c,f=r*u.sin(i)+p,m={x:0,y:0},v=h.moveTo({x:d,y:y});v+=h.arcTo(t,n,r),v+=h.quadraticCurveTo({x:g,y:f},m),v+=h.arcTo(i,n,r),v+=h.quadraticCurveTo({x:d,y:y},m),this.link.path=n>0?v:"",this.maskBullets&&(this.bulletsMask.path=v,this.bulletsContainer.mask=this.bulletsMask);var x=t+n/2,b=i+n/2,P=this.middleLine;P.x1=r*u.cos(x)+s,P.y1=r*u.sin(x)+l,P.x2=r*u.cos(b)+c,P.y2=r*u.sin(b)+p,P.cpx=0,P.cpy=0,P.stroke=this.fill,this.positionBullets()}}},Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPropertyValue("radius",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"arc",{get:function(){return this.getPropertyValue("arc")},set:function(e){this.setPropertyValue("arc",e,!0)},enumerable:!0,configurable:!0}),t}(ce);l.c.registeredClasses.ChordLink=Ve;var _e=function(e){function t(){var t=e.call(this)||this;return t.className="ChordDiagramDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(ye),ke=function(e){function t(){var t=e.call(this)||this;t.valueAngle=0,t.className="ChordDiagram",t.startAngle=-90,t.endAngle=270,t.radius=Object(o.c)(80),t.innerRadius=-15,t.nodePadding=5;var i=t.chartContainer.createChild(d.a);return i.align="center",i.valign="middle",i.shouldClone=!1,i.layout="absolute",t.chordContainer=i,t.nodesContainer.parent=i,t.linksContainer.parent=i,t.chartContainer.events.on("maxsizechanged",t.invalidate,t,!1),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.validate=function(){var t=this,i=this.chartContainer,n=this.endAngle,r=this.startAngle+this.nodePadding/2,a=u.getArcRect(this.startAngle,this.endAngle,1);a=u.getCommonRectangle([a,{x:0,y:0,width:0,height:0}]);var o=Math.min(i.innerWidth/a.width,i.innerHeight/a.height);m.isNumber(o)||(o=0);var s=C.relativeRadiusToValue(this.radius,o),l=C.relativeRadiusToValue(this.innerRadius,s,!0),h=this.dataItem.values.value.sum,c=0,p=0;k.each(this._sorted,function(e){var i=e[1];t.getNodeValue(i),c++;var n=i.total;i.total/h<t.minNodeSize&&(n=h*t.minNodeSize),p+=n}),this.valueAngle=(n-this.startAngle-this.nodePadding*c)/p,k.each(this._sorted,function(e){var i=e[1],a=i.slice;a.radius=s,a.innerRadius=l;var o,u=i.total;i.total/h<t.minNodeSize&&(u=h*t.minNodeSize),i.adjustedTotal=u,o=t.nonRibbon?(n-t.startAngle)/c-t.nodePadding:t.valueAngle*u,a.arc=o,a.startAngle=r,i.trueStartAngle=r,i.parent=t.nodesContainer,i.validate(),r+=o+t.nodePadding}),this.chordContainer.definedBBox={x:s*a.x,y:s*a.y,width:s*a.width,height:s*a.height},this.chordContainer.invalidateLayout(),e.prototype.validate.call(this)},t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Chord diagram"))},t.prototype.createDataItem=function(){return new _e},Object.defineProperty(t.prototype,"startAngle",{get:function(){return this.getPropertyValue("startAngle")},set:function(e){this.setPropertyValue("startAngle",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endAngle",{get:function(){return this.getPropertyValue("endAngle")},set:function(e){this.setPropertyValue("endAngle",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPercentProperty("radius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(e){this.setPercentProperty("innerRadius",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"nonRibbon",{get:function(){return this.getPropertyValue("nonRibbon")},set:function(e){this.setPropertyValue("nonRibbon",e,!0),this.links.template.middleLine.strokeOpacity=1,this.links.template.link.fillOpacity=0},enumerable:!0,configurable:!0}),t.prototype.createNode=function(){var e=new Te;return this._disposers.push(e),e},t.prototype.createLink=function(){var e=new Ve;return this._disposers.push(e),e},t}(ge);l.c.registeredClasses.ChordDiagram=ke;var Le=i("pR7v"),Se=i("5vid"),Re=function(e){function t(){var t=e.call(this)||this;return t.className="TreeMapSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"parentName",{get:function(){var e=this.treeMapDataItem;if(e&&e.parent)return e.parent.name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){var e=this.treeMapDataItem;if(e)return e.value},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"treeMapDataItem",{get:function(){return this._dataContext},enumerable:!0,configurable:!0}),t.prototype.hide=function(t,i,n,r){var a=this.treeMapDataItem;return a&&a.hide(t),e.prototype.hide.call(this,t,i,n,r)},t.prototype.show=function(t,i,n){var r=this.treeMapDataItem;return r&&r.show(t,i,n),e.prototype.show.call(this,t,i,n)},t}(Se.b),je=function(e){function t(){var t=e.call(this)||this;t.className="TreeMapSeries",t.applyTheme(),t.fillOpacity=1,t.strokeOpacity=1,t.minBulletDistance=0,t.columns.template.tooltipText="{parentName} {name}: {value}",t.columns.template.configField="config";var i=new w.a;return t.stroke=i.getFor("background"),t.dataFields.openValueX="x0",t.dataFields.valueX="x1",t.dataFields.openValueY="y0",t.dataFields.valueY="y1",t.sequencedInterpolation=!1,t.showOnInit=!1,t.columns.template.pixelPerfect=!1,t}return Object(r.c)(t,e),t.prototype.processDataItem=function(t,i){i.seriesDataItem=t,e.prototype.processDataItem.call(this,t,i)},t.prototype.createDataItem=function(){return new Re},t.prototype.show=function(t){if(!this.preventShow){var i=this.defaultState.transitionDuration;return m.isNumber(t)&&(i=t),this.dataItems.each(function(e){e.show(t)}),e.prototype.showReal.call(this,i)}},t.prototype.hide=function(t){var i=this.defaultState.transitionDuration;m.isNumber(t)&&(i=t);var n=e.prototype.hideReal.call(this,i);return this.dataItems.each(function(e){e.hide(t)}),n},t.prototype.processValues=function(){},t.prototype.getStartLocation=function(e){return 0},t.prototype.getEndLocation=function(e){return 1},t.prototype.dataChangeUpdate=function(){},t.prototype.processConfig=function(t){t&&(m.hasValue(t.dataFields)&&m.isObject(t.dataFields)||(t.dataFields={})),e.prototype.processConfig.call(this,t)},t.prototype.createLegendMarker=function(e){var t=e.pixelWidth,i=e.pixelHeight;e.removeChildren();var n=e.createChild(ie.a);n.shouldClone=!1,ne.copyProperties(this,n,J.b),n.padding(0,0,0,0),n.width=t,n.height=i;var r=e.dataItem;r.color=n.fill,r.colorOrig=n.fill},t.prototype.disableUnusedColumns=function(t){e.prototype.disableUnusedColumns.call(this,t),t.column&&(t.column.__disabled=!1)},t}(Se.a);l.c.registeredClasses.TreeMapSeries=je,l.c.registeredClasses.TreeMapSeriesDataItem=Re;var we=i("qCRI"),Ne=i("hJ5i"),Fe=function(e){function t(){var t=e.call(this)||this;return t.rows=[],t.className="TreeMapDataItem",t.values.value={},t.values.x0={},t.values.y0={},t.values.x1={},t.values.y1={},t.hasChildren.children=!0,t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"legendDataItem",{get:function(){return this._legendDataItem},set:function(e){this._legendDataItem=e,e.label&&(e.label.dataItem=this),e.valueLabel&&(e.valueLabel.dataItem=this)},enumerable:!0,configurable:!0}),t.prototype.getDuration=function(){return 0},Object.defineProperty(t.prototype,"value",{get:function(){var e=0;return this.children&&0!=this.children.length?k.each(this.children.iterator(),function(t){var i=t.value;m.isNumber(i)&&(e+=i)}):e=this.values.value.workingValue,e},set:function(e){this.setValue("value",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"percent",{get:function(){return this.parent?this.value/this.parent.value*100:100},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"x0",{get:function(){return this.values.x0.value},set:function(e){this.setValue("x0",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"x1",{get:function(){return this.values.x1.value},set:function(e){this.setValue("x1",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y0",{get:function(){return this.values.y0.value},set:function(e){this.setValue("y0",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y1",{get:function(){return this.values.y1.value},set:function(e){this.setValue("y1",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"name",{get:function(){return this.properties.name},set:function(e){this.setProperty("name",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"children",{get:function(){return this.properties.children},set:function(e){this.setProperty("children",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"level",{get:function(){return this.parent?this.parent.level+1:0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){var e=this.properties.color;return void 0==e&&this.parent&&(e=this.parent.color),void 0==e&&this.component&&(e=this.component.colors.getIndex(this.component.colors.step*this.index)),e},set:function(e){this.setProperty("color",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fill",{get:function(){return this.color},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"series",{get:function(){return this._series},set:function(e){e!=this._series&&(this._series&&(this.component.series.removeValue(this._series),this._series.dispose()),this._series=e,this._disposers.push(e))},enumerable:!0,configurable:!0}),t.prototype.hide=function(t,i,n,r){this.setWorkingValue("value",0),this.children&&this.children.each(function(e){e.hide(t,i,n,r)});var a=this.seriesDataItem;return a&&a.bullets.each(function(e,t){t.hide(),t.preventShow=!0}),e.prototype.hide.call(this,t,i,n,r)},t.prototype.show=function(t,i,n){this.setWorkingValue("value",this.values.value.value),this.children&&this.children.each(function(e){e.show(t,i,n)});var r=this.seriesDataItem;return r&&r.bullets.each(function(e,t){t.preventShow=!1}),e.prototype.show.call(this,t,i,n)},t}(a.b),Ye=function(e){function t(){var t=e.call(this)||this;t.layoutAlgorithm=t.squarify,t.zoomable=!0,t.className="TreeMap",t._usesData=!0,t.maxLevels=2,t.currentLevel=0,t.hideParentColumns=!1,t.colors=new de.a,t.sorting="descending";var i=t.xAxes.push(new Le.a);i.title.disabled=!0,i.strictMinMax=!0;var n=i.renderer;n.inside=!0,n.labels.template.disabled=!0,n.ticks.template.disabled=!0,n.grid.template.disabled=!0,n.axisFills.template.disabled=!0,n.minGridDistance=100,n.line.disabled=!0,n.baseGrid.disabled=!0;var r=t.yAxes.push(new Le.a);r.title.disabled=!0,r.strictMinMax=!0;var a=r.renderer;a.inside=!0,a.labels.template.disabled=!0,a.ticks.template.disabled=!0,a.grid.template.disabled=!0,a.axisFills.template.disabled=!0,a.minGridDistance=100,a.line.disabled=!0,a.baseGrid.disabled=!0,a.inversed=!0,t.xAxis=i,t.yAxis=r;var o=new je;return t.seriesTemplates=new Q.c(o),o.virtualParent=t,t._disposers.push(new Q.b(t.seriesTemplates)),t._disposers.push(o),t.zoomOutButton.events.on("hit",function(){t.zoomToChartDataItem(t._homeDataItem)},void 0,!1),t.seriesTemplates.events.on("insertKey",function(e){e.newValue.isTemplate=!0},void 0,!1),t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"navigationBar",{get:function(){return this._navigationBar},set:function(e){var t=this;this._navigationBar!=e&&(this._navigationBar=e,e.parent=this,e.toBack(),e.links.template.events.on("hit",function(e){var i=e.target.dataItem.dataContext;i.isDisposed()||(t.zoomToChartDataItem(i),t.createTreeSeries(i))},void 0,!0),this._disposers.push(e))},enumerable:!0,configurable:!0}),t.prototype.validateData=function(){this.series.clear(),this._tempSeries=[],e.prototype.validateData.call(this),this._homeDataItem&&this._homeDataItem.dispose();var t=this.dataItems.template.clone();this._homeDataItem=t,k.each(this.dataItems.iterator(),function(e){e.parent=t}),t.children=this.dataItems,t.x0=0,t.y0=0,t.name=this._homeText;var i=10*Math.round(1e3*this.pixelHeight/this.pixelWidth/10)||1e3;t.x1=1e3,t.y1=i,this.xAxis.min=0,this.xAxis.max=1e3,this.xAxis.getMinMax(),this.yAxis.min=0,this.yAxis.max=i,this.yAxis.getMinMax(),this.layoutItems(t),this.createTreeSeries(t)},t.prototype.layoutItems=function(e,t){if(e){var i=e.children;t||(t=this.sorting),"ascending"==t&&i.values.sort(function(e,t){return e.value-t.value}),"descending"==t&&i.values.sort(function(e,t){return t.value-e.value}),this._updateDataItemIndexes(0),this.layoutAlgorithm(e);for(var n=0,r=i.length;n<r;n++){var a=i.getIndex(n);a.children&&this.layoutItems(a)}}},t.prototype.createTreeSeries=function(e){var t=this;this._tempSeries=[];for(var i=[e],n=e.parent;void 0!=n;)this.initSeries(n),i.push(n),n=n.parent;i.reverse(),this.navigationBar&&(this.navigationBar.data=i),this.createTreeSeriesReal(e),Ne.each(this._tempSeries,function(e){-1==t.series.indexOf(e)&&t.series.push(e),e.zIndex=e.level})},t.prototype.createTreeSeriesReal=function(e){if(e.children&&e.level<this.currentLevel+this.maxLevels){this.initSeries(e);for(var t=0;t<e.children.length;t++){var i=e.children.getIndex(t);i.children&&this.createTreeSeriesReal(i)}}},t.prototype.setData=function(t){this.currentLevel=0,this.currentlyZoomed=void 0,this.xAxis.start=0,this.xAxis.end=1,this.yAxis.start=0,this.yAxis.end=1,e.prototype.setData.call(this,t)},t.prototype.seriesAppeared=function(){return!0},t.prototype.initSeries=function(e){var t=this;if(!e.series){var i=void 0,n=this.seriesTemplates.getKey(e.level.toString());(i=n?n.clone():this.series.create()).dataItem.dataContext=e,i.name=e.name,i.parentDataItem=e,e.series=i;var r=e.level;i.level=r;var a=e.dataContext;a&&(i.config=a.config),this.dataUsers.removeValue(i),i.data=e.children.values,i.fill=e.color,i.columnsContainer.hide(0),i.bulletsContainer.hide(0),i.columns.template.adapter.add("fill",function(e,t){var i=t.dataItem;if(i){var n=i.treeMapDataItem;if(n)return t.fill=n.color,t.adapter.remove("fill"),n.color}}),this.zoomable&&(e.level>this.currentLevel||e.children&&e.children.length>0)&&(i.columns.template.cursorOverStyle=we.a.pointer,this.zoomable&&i.columns.template.events.on("hit",function(i){var n=i.target.dataItem;e.level>t.currentLevel?t.zoomToChartDataItem(n.treeMapDataItem.parent):t.zoomToSeriesDataItem(n)},this,void 0))}this._tempSeries.push(e.series)},t.prototype.toggleBullets=function(e){var t=this;k.each(this.series.iterator(),function(i){-1==t._tempSeries.indexOf(i)?(i.columnsContainer.hide(),i.bulletsContainer.hide(e)):(i.columnsContainer.show(),i.bulletsContainer.show(e),i.dataItems.each(function(e){e.bullets.each(function(e,t){t.show()})}),i.level<t.currentLevel?(t.hideParentColumns&&i.columnsContainer.hide(),i.bulletsContainer.hide(e)):i.level==t.currentLevel&&t.maxLevels>1&&i.dataItems.each(function(e){e.treeMapDataItem.children&&e.bullets.each(function(e,t){t.hide()})}))})},t.prototype.zoomToSeriesDataItem=function(e){this.zoomToChartDataItem(e.treeMapDataItem)},t.prototype.zoomToChartDataItem=function(e){var t=this;e||(e=this._homeDataItem);var i=this.zoomOutButton;if(i&&(e!=this._homeDataItem?i.show():i.hide()),e&&e.children){this.xAxis.zoomToValues(e.x0,e.x1),this.yAxis.zoomToValues(e.y0,e.y1),this.currentLevel=e.level,this.currentlyZoomed=e,this.createTreeSeries(e);var n=this.xAxis.rangeChangeAnimation||this.yAxis.rangeChangeAnimation;!n||n.isDisposed()||n.isFinished()?this.toggleBullets():(this._dataDisposers.push(n),n.events.once("animationended",function(){t.toggleBullets()}))}},t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("TreeMap chart"))},t.prototype.createDataItem=function(){return new Fe},Object.defineProperty(t.prototype,"maxLevels",{get:function(){return this.getPropertyValue("maxLevels")},set:function(e){this.setPropertyValue("maxLevels",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentLevel",{get:function(){return this.getPropertyValue("currentLevel")},set:function(e){this.setPropertyValue("currentLevel",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hideParentColumns",{get:function(){return this.getPropertyValue("hideParentColumns")},set:function(e){this.setPropertyValue("hideParentColumns",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sorting",{get:function(){return this.getPropertyValue("sorting")},set:function(e){this.setPropertyValue("sorting",e,!0)},enumerable:!0,configurable:!0}),t.prototype.createSeries=function(){return new je},Object.defineProperty(t.prototype,"homeText",{get:function(){return this._homeText},set:function(e){this._homeText=e,this._homeDataItem&&(this._homeDataItem.name=this._homeText)},enumerable:!0,configurable:!0}),t.prototype.processConfig=function(t){if(t){if(m.hasValue(t.layoutAlgorithm)&&m.isString(t.layoutAlgorithm))switch(t.layoutAlgorithm){case"squarify":t.layoutAlgorithm=this.squarify;break;case"binaryTree":t.layoutAlgorithm=this.binaryTree;break;case"slice":t.layoutAlgorithm=this.slice;break;case"dice":t.layoutAlgorithm=this.dice;break;case"sliceDice":t.layoutAlgorithm=this.sliceDice;break;default:delete t.layoutAlgorithm}m.hasValue(t.navigationBar)&&!m.hasValue(t.navigationBar.type)&&(t.navigationBar.type="NavigationBar"),e.prototype.processConfig.call(this,t)}},t.prototype.validateLayout=function(){e.prototype.validateLayout.call(this),this.layoutItems(this.currentlyZoomed)},t.prototype.validateDataItems=function(){e.prototype.validateDataItems.call(this),this.layoutItems(this._homeDataItem),k.each(this.series.iterator(),function(e){e.validateRawData()}),this.zoomToChartDataItem(this._homeDataItem)},t.prototype.binaryTree=function(e){var t,i,n=e.children,r=n.length,a=new Array(r+1);for(a[0]=i=t=0;t<r;++t)a[t+1]=i+=n.getIndex(t).value;!function e(t,i,r,o,s,l,u){if(t>=i-1){var h=n.getIndex(t);return h.x0=o,h.y0=s,h.x1=l,void(h.y1=u)}var c=a[t],p=r/2+c,d=t+1,y=i-1;for(;d<y;){var g=d+y>>>1;a[g]<p?d=g+1:y=g}p-a[d-1]<a[d]-p&&t+1<d&&--d;var f=a[d]-c,m=r-f;if(l-o>u-s){var v=(o*m+l*f)/r;e(t,d,f,o,s,v,u),e(d,i,m,v,s,l,u)}else{var x=(s*m+u*f)/r;e(t,d,f,o,s,l,x),e(d,i,m,o,x,l,u)}}(0,r,e.value,e.x0,e.y0,e.x1,e.y1)},t.prototype.slice=function(e){for(var t,i=e.x0,n=e.x1,r=e.y0,a=e.y1,o=e.children,s=-1,l=o.length,u=e.value&&(a-r)/e.value;++s<l;)(t=o.getIndex(s)).x0=i,t.x1=n,t.y0=r,r+=t.value*u,t.y1=r},t.prototype.dice=function(e){for(var t,i=e.x0,n=e.x1,r=e.y0,a=e.y1,o=e.children,s=-1,l=o.length,u=e.value&&(n-i)/e.value;++s<l;)(t=o.getIndex(s)).y0=r,t.y1=a,t.x0=i,i+=t.value*u,t.x1=i},t.prototype.sliceDice=function(e){1&e.level?this.slice(e):this.dice(e)},t.prototype.squarify=function(e){for(var t,i,n,r,a,o,s,l,u,h,c=(1+Math.sqrt(5))/2,p=e.x0,d=e.x1,y=e.y0,g=e.y1,f=e.children,m=0,v=0,x=f.length,b=e.value;m<x;){i=d-p,n=g-y;do{r=f.getIndex(v++).value}while(!r&&v<x);for(a=o=r,h=r*r*(u=Math.max(n/i,i/n)/(b*c)),l=Math.max(o/h,h/a);v<x;++v){if(r+=t=f.getIndex(v).value,t<a&&(a=t),t>o&&(o=t),h=r*r*u,(s=Math.max(o/h,h/a))>l){r-=t;break}l=s}var P=this.dataItems.template.clone();P.value=r,P.dice=i<n,P.children=f.slice(m,v),P.x0=p,P.y0=y,P.x1=d,P.y1=g,P.dice?(P.y1=b?y+=n*r/b:g,this.dice(P)):(P.x1=b?p+=i*r/b:d,this.slice(P)),b-=r,m=v}},t.prototype.handleSeriesAdded2=function(){},t.prototype.handleDataItemValueChange=function(e,t){"value"==t&&this.invalidateDataItems()},t.prototype.handleDataItemWorkingValueChange=function(e,t){"value"==t&&this.invalidateDataItems()},t.prototype.getLegendLevel=function(e){if(e&&e.children)return e.children.length>1?e:1==e.children.length?this.getLegendLevel(e.children.getIndex(0)):e},Object.defineProperty(t.prototype,"homeDataItem",{get:function(){return this._homeDataItem},enumerable:!0,configurable:!0}),t.prototype.feedLegend=function(){var e=this.legend;if(e){e.dataFields.name="name";var t=this.getLegendLevel(this._homeDataItem);if(t){var i=[];t.children.each(function(e){i.push(e)}),e.data=i}}},t.prototype.disposeData=function(){e.prototype.disposeData.call(this),this._homeDataItem=void 0,this.series.clear(),this.navigationBar&&this.navigationBar.disposeData(),this.xAxis.disposeData(),this.yAxis.disposeData()},t.prototype.getExporting=function(){var t=this,i=e.prototype.getExporting.call(this);return i.adapter.add("formatDataFields",function(e){return"csv"!=e.format&&"xlsx"!=e.format||m.hasValue(t.dataFields.children)&&delete e.dataFields[t.dataFields.children],e}),i},t}(a.a);l.c.registeredClasses.TreeMap=Ye;var Xe=i("k6kv"),We=function(e){function t(){var t=e.call(this)||this;return t._chart=new V.d,t.className="AxisRendererX3D",t._disposers.push(t._chart),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.updateGridElement=function(e,t,i){t+=(i-t)*e.location;var n=this.positionToPoint(t);if(e.element){var r=this.chart.dx3D||0,a=this.chart.dy3D||0,o=this.getHeight();e.path=h.moveTo({x:r,y:a})+h.lineTo({x:r,y:o+a})+h.lineTo({x:0,y:o})}this.positionItem(e,n),this.toggleVisibility(e,t,0,1)},t.prototype.updateBaseGridElement=function(){e.prototype.updateBaseGridElement.call(this);var t=this.getHeight(),i=this.chart.dx3D||0,n=this.chart.dy3D||0;this.baseGrid.path=h.moveTo({x:i,y:n})+h.lineTo({x:0,y:0})+h.lineTo({x:0,y:t})},Object.defineProperty(t.prototype,"chart",{get:function(){return this._chart.get()},set:function(e){e&&this._chart.set(e,e.events.on("propertychanged",this.handle3DChanged,this,!1))},enumerable:!0,configurable:!0}),t.prototype.handle3DChanged=function(e){"depth"!=e.property&&"angle"!=e.property||this.invalidate()},t}(Xe.a);l.c.registeredClasses.AxisRendererX3D=We;var Me=function(e){function t(){var t=e.call(this)||this;return t._chart=new V.d,t.className="AxisRendererY3D",t._disposers.push(t._chart),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.updateGridElement=function(e,t,i){t+=(i-t)*e.location;var n=this.positionToPoint(t);if(e.element){var r=this.chart.dx3D||0,a=this.chart.dy3D||0,o=this.getWidth();e.path=h.moveTo({x:0,y:0})+h.lineTo({x:r,y:a})+h.lineTo({x:o+r,y:a})}this.positionItem(e,n),this.toggleVisibility(e,t,0,1)},t.prototype.updateBaseGridElement=function(){e.prototype.updateBaseGridElement.call(this);var t=this.chart.dx3D||0,i=this.chart.dy3D||0,n=this.getWidth();this.baseGrid.path=h.moveTo({x:0,y:0})+h.lineTo({x:n,y:0})+h.lineTo({x:n+t,y:i})},Object.defineProperty(t.prototype,"chart",{get:function(){return this._chart.get()},set:function(e){e&&this._chart.set(e,e.events.on("propertychanged",this.handle3DChanged,this,!1))},enumerable:!0,configurable:!0}),t.prototype.handle3DChanged=function(e){"depth"!=e.property&&"angle"!=e.property||this.invalidate()},t}(I.a),He=i("DG6Q"),Be=i("Mr4Y"),ze=function(e){function t(){var t=e.call(this)||this;return t.className="Column3D",t}return Object(r.c)(t,e),t.prototype.createAssets=function(){this.column3D=this.createChild(Be.a),this.column3D.shouldClone=!1,this.column3D.strokeOpacity=0,this.column=this.column3D},t.prototype.validate=function(){e.prototype.validate.call(this),this.column3D&&(this.column3D.width=this.pixelWidth,this.column3D.height=this.pixelHeight,this.column3D.invalid&&this.column3D.validate())},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.column3D&&this.column3D.copyFrom(t.column3D)},t.prototype.setFill=function(t){e.prototype.setFill.call(this,t),this.column.fill=t},t}(He.a);l.c.registeredClasses.Column3D=ze;var Ee=function(e){function t(){var t=e.call(this)||this;return t.className="ColumnSeries3DDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(Se.b),Ge=function(e){function t(){var t=e.call(this)||this;return t.className="ColumnSeries3D",t.columns.template.column3D.applyOnClones=!0,t.columns.template.hiddenState.properties.visible=!0,t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"columnsContainer",{get:function(){var e=this.chart;return e&&e.columnsContainer&&"vertical"!=e.leftAxesContainer.layout&&"vertical"!=e.rightAxesContainer.layout&&"horizontal"!=e.bottomAxesContainer.layout&&"horizontal"!=e.topAxesContainer.layout?e.columnsContainer:this._columnsContainer},enumerable:!0,configurable:!0}),t.prototype.validateDataElementReal=function(t){e.prototype.validateDataElementReal.call(this,t),t.column&&(t.column.dx=this.dx,t.column.dy=this.dy)},t.prototype.validateDataElements=function(){e.prototype.validateDataElements.call(this),this.chart&&this.chart.invalidateLayout()},t.prototype.createColumnTemplate=function(){return new ze},Object.defineProperty(t.prototype,"depth",{get:function(){return this.getPropertyValue("depth")},set:function(e){this.setPropertyValue("depth",e,!0),this.columns.template.column3D.depth=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"angle",{get:function(){return this.getPropertyValue("angle")},set:function(e){this.setPropertyValue("angle",e),this.columns.template.column3D.angle=e},enumerable:!0,configurable:!0}),t}(Se.a);l.c.registeredClasses.ColumnSeries3D=Ge,l.c.registeredClasses.ColumnSeries3DDataItem=Ee;var qe=function(e){function t(){var t=e.call(this)||this;return t.className="XYChart3DDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(a.b),Ke=function(e){function t(){var t=e.call(this)||this;t._axisRendererX=We,t._axisRendererY=Me,t.className="XYChart3D",t.depth=30,t.angle=30;var i=t.seriesContainer.createChild(d.a);return i.shouldClone=!1,i.isMeasured=!1,i.layout="none",t.columnsContainer=i,t.columnsContainer.mask=t.createChild(J.a),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.updateSeriesMasks=function(){if(e.prototype.updateSeriesMasks.call(this),C.isIE()){var t=this.columnsContainer,i=t.mask;t.mask=void 0,t.mask=i}},Object.defineProperty(t.prototype,"depth",{get:function(){return this.getPropertyValue("depth")},set:function(e){this.setPropertyValue("depth",e),this.fixLayout(),this.invalidateDataUsers()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"angle",{get:function(){return this.getPropertyValue("angle")},set:function(e){this.setPropertyValue("angle",e),this.fixLayout(),this.invalidateDataUsers()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dx3D",{get:function(){return u.cos(this.angle)*this.depth},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dy3D",{get:function(){return-u.sin(this.angle)*this.depth},enumerable:!0,configurable:!0}),t.prototype.validateLayout=function(){e.prototype.validateLayout.call(this),this.fixColumns()},t.prototype.fixLayout=function(){this.chartContainer.marginTop=-this.dy3D,this.chartContainer.paddingRight=this.dx3D,this.scrollbarX&&(this.scrollbarX.dy=this.dy3D,this.scrollbarX.dx=this.dx3D),this.scrollbarY&&(this.scrollbarY.dy=this.dy3D,this.scrollbarY.dx=this.dx3D),this.fixColumns(),e.prototype.fixLayout.call(this)},t.prototype.fixColumns=function(){var e=this,t=1,i=0;k.each(this.series.iterator(),function(e){e instanceof Ge&&(!e.clustered&&i>0&&t++,e.depthIndex=t-1,i++)});var n=0;k.each(this.series.iterator(),function(i){if(i instanceof Ge){i.depth=e.depth/t,i.angle=e.angle,i.columnsContainer==e.columnsContainer&&(i.dx=e.depth/t*u.cos(e.angle)*i.depthIndex,i.dy=-e.depth/t*u.sin(e.angle)*i.depthIndex);var r=!1;(i.baseAxis==i.xAxis&&i.xAxis.renderer.inversed||i.baseAxis==i.yAxis&&i.yAxis.renderer.inversed)&&(r=!0);var a=1;i.dataItems.each(function(e){var t=e.column;t&&(t.zIndex=r?1e3*(1e3-a)+n-100*i.depthIndex:1e3*a+n-100*i.depthIndex),a++}),r?n--:n++}}),this.maskColumns()},t.prototype.processConfig=function(t){if(t&&m.hasValue(t.series)&&m.isArray(t.series))for(var i=0,n=t.series.length;i<n;i++)t.series[i].type=t.series[i].type||"ColumnSeries3D";e.prototype.processConfig.call(this,t)},t.prototype.maskColumns=function(){var e=this.plotContainer.pixelWidth,t=this.plotContainer.pixelHeight,i=this.dx3D,n=this.dy3D,r=h.moveTo({x:0,y:0})+h.lineTo({x:i,y:n})+h.lineTo({x:e+i,y:n})+h.lineTo({x:e+i,y:t+n})+h.lineTo({x:e,y:t})+h.lineTo({x:e,y:t})+h.lineTo({x:0,y:t})+h.closePath(),a=this.columnsContainer;a&&a.mask&&(a.mask.path=r)},t}(a.a);l.c.registeredClasses.XYChart3D=Ke;var Ue=i("2OXf"),Ze=i("aM7D"),Qe=i("Uf57"),Je=i("YOID"),$e=function(e){function t(){var t=e.call(this)||this;return t.className="Candlestick",t.layout="none",t}return Object(r.c)(t,e),t.prototype.createAssets=function(){e.prototype.createAssets.call(this),this.lowLine=this.createChild(he.a),this.lowLine.shouldClone=!1,this.highLine=this.createChild(he.a),this.highLine.shouldClone=!1},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.lowLine&&this.lowLine.copyFrom(t.lowLine),this.highLine&&this.highLine.copyFrom(t.highLine)},t}(He.a);l.c.registeredClasses.Candlestick=$e;var et=function(e){function t(){var t=e.call(this)||this;return t.values.lowValueX={},t.values.lowValueY={},t.values.highValueX={},t.values.highValueY={},t.className="CandlestickSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"lowValueX",{get:function(){return this.values.lowValueX.value},set:function(e){this.setValue("lowValueX",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"lowValueY",{get:function(){return this.values.lowValueY.value},set:function(e){this.setValue("lowValueY",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"highValueX",{get:function(){return this.values.highValueX.value},set:function(e){this.setValue("highValueX",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"highValueY",{get:function(){return this.values.highValueY.value},set:function(e){this.setValue("highValueY",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"closeValueX",{get:function(){return this.values.valueX.value},set:function(e){this.setValue("valueX",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"closeValueY",{get:function(){return this.values.valueY.value},set:function(e){this.setValue("valueY",e)},enumerable:!0,configurable:!0}),t}(Se.b),tt=function(e){function t(){var t=e.call(this)||this;t.className="CandlestickSeries",t.groupFields.lowValueX="low",t.groupFields.lowValueY="low",t.groupFields.highValueX="high",t.groupFields.highValueY="high",t.strokeOpacity=1;var i=new w.a,n=i.getFor("positive"),r=i.getFor("negative");return t.dropFromOpenState.properties.fill=r,t.dropFromOpenState.properties.stroke=r,t.riseFromOpenState.properties.fill=n,t.riseFromOpenState.properties.stroke=n,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Candlestick Series"))},t.prototype.createDataItem=function(){return new et},t.prototype.validateDataElementReal=function(t){e.prototype.validateDataElementReal.call(this,t),this.validateCandlestick(t)},t.prototype.validateCandlestick=function(e){var t=e.column;if(t){var i=t.lowLine,n=t.highLine;if(this.baseAxis==this.xAxis){var r=t.pixelWidth/2;i.x=r,n.x=r;var a=e.getWorkingValue(this.yOpenField),o=e.getWorkingValue(this.yField),s=this.yAxis.getY(e,this.yOpenField),l=this.yAxis.getY(e,this.yField),u=this.yAxis.getY(e,this.yLowField),h=this.yAxis.getY(e,this.yHighField),c=t.pixelY;i.y1=u-c,n.y1=h-c,a<o?(i.y2=s-c,n.y2=l-c):(i.y2=l-c,n.y2=s-c)}if(this.baseAxis==this.yAxis){var p=t.pixelHeight/2;i.y=p,n.y=p;var d=e.getWorkingValue(this.xOpenField),y=e.getWorkingValue(this.xField),g=this.xAxis.getX(e,this.xOpenField),f=this.xAxis.getX(e,this.xField),m=this.xAxis.getX(e,this.xLowField),v=this.xAxis.getX(e,this.xHighField),x=t.pixelX;i.x1=m-x,n.x1=v-x,d<y?(i.x2=g-x,n.x2=f-x):(i.x2=f-x,n.x2=g-x)}k.each(this.axisRanges.iterator(),function(t){var r=e.rangesColumns.getKey(t.uid);if(r){var a=r.lowLine;a.x=i.x,a.y=i.y,a.x1=i.x1,a.x2=i.x2,a.y1=i.y1,a.y2=i.y2;var o=r.highLine;o.x=n.x,o.y=n.y,o.x1=n.x1,o.x2=n.x2,o.y1=n.y1,o.y2=n.y2}})}},Object.defineProperty(t.prototype,"xLowField",{get:function(){return this._xLowField},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"yLowField",{get:function(){return this._yLowField},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xHighField",{get:function(){return this._xHighField},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"yHighField",{get:function(){return this._yHighField},enumerable:!0,configurable:!0}),t.prototype.defineFields=function(){e.prototype.defineFields.call(this);var t=this.xAxis,i=this.yAxis;if(t&&i){if(this.baseAxis==t){var n=C.capitalize(i.axisFieldName);this._yLowField="low"+n+"Y",this._yHighField="high"+n+"Y"}if(this.baseAxis==i){var r=C.capitalize(t.axisFieldName);this._xLowField="low"+r+"X",this._xHighField="high"+r+"X"}this.addValueField(t,this._xValueFields,this._xLowField),this.addValueField(t,this._xValueFields,this._xHighField),this.addValueField(i,this._yValueFields,this._yLowField),this.addValueField(i,this._yValueFields,this._yHighField)}},t.prototype.createLegendMarker=function(e){var t=e.pixelWidth,i=e.pixelHeight;e.removeChildren();var n,r,a=e.createChild($e);a.shouldClone=!1,a.copyFrom(this.columns.template);var o=a.lowLine,s=a.highLine;this.baseAxis==this.yAxis?(n=t/3,r=i,o.y=i/2,s.y=i/2,o.x2=t/3,s.x2=t/3,s.x=t/3*2,a.column.x=t/3):(n=t,r=i/3,o.x=t/2,s.x=t/2,o.y2=i/3,s.y2=i/3,s.y=i/3*2,a.column.y=i/3),a.width=n,a.height=r,ne.copyProperties(this,e,J.b),ne.copyProperties(this.columns.template,a,J.b),a.stroke=this.riseFromOpenState.properties.stroke,a.fill=a.stroke;var l=e.dataItem;l.color=a.fill,l.colorOrig=a.fill},t.prototype.createColumnTemplate=function(){return new $e},t}(Se.a);l.c.registeredClasses.CandlestickSeries=tt,l.c.registeredClasses.CandlestickSeriesDataItem=et;var it=function(e){function t(){var t=e.call(this)||this;return t.className="OHLC",t.layout="none",t}return Object(r.c)(t,e),t.prototype.createAssets=function(){this.openLine=this.createChild(he.a),this.openLine.shouldClone=!1,this.highLowLine=this.createChild(he.a),this.highLowLine.shouldClone=!1,this.closeLine=this.createChild(he.a),this.closeLine.shouldClone=!1},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.openLine&&this.openLine.copyFrom(t.openLine),this.highLowLine&&this.highLowLine.copyFrom(t.highLowLine),this.closeLine&&this.closeLine.copyFrom(t.closeLine)},t}($e);l.c.registeredClasses.OHLC=it;var nt=function(e){function t(){var t=e.call(this)||this;return t.className="OHLCSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(et),rt=function(e){function t(){var t=e.call(this)||this;return t.className="OHLCSeries",t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("OHLC Series"))},t.prototype.createDataItem=function(){return new nt},t.prototype.validateCandlestick=function(e){var t=e.column;if(t){var i=t.openLine,n=t.highLowLine,r=t.closeLine;if(this.baseAxis==this.xAxis){var a=t.pixelWidth/2;n.x=a,e.getWorkingValue(this.yOpenField),e.getWorkingValue(this.yField);var o=this.yAxis.getY(e,this.yOpenField),s=this.yAxis.getY(e,this.yField),l=this.yAxis.getY(e,this.yLowField),u=this.yAxis.getY(e,this.yHighField),h=t.pixelY;i.y1=o-h,i.y2=o-h,i.x1=0,i.x2=a,r.y1=s-h,r.y2=s-h,r.x1=a,r.x2=2*a,n.y1=u-h,n.y2=l-h}if(this.baseAxis==this.yAxis){var c=t.pixelHeight/2;n.y=c,e.getWorkingValue(this.xOpenField),e.getWorkingValue(this.xField);var p=this.xAxis.getX(e,this.xOpenField),d=this.xAxis.getX(e,this.xField),y=this.xAxis.getX(e,this.xLowField),g=this.xAxis.getX(e,this.xHighField),f=t.pixelX;i.x1=p-f,i.x2=p-f,i.y1=c,i.y2=2*c,r.x1=d-f,r.x2=d-f,r.y1=0,r.y2=c,n.x1=g-f,n.x2=y-f}k.each(this.axisRanges.iterator(),function(t){var a=e.rangesColumns.getKey(t.uid);if(a){var o=a.openLine;o.x=i.x,o.y=i.y,o.x1=i.x1,o.x2=i.x2,o.y1=i.y1,o.y2=i.y2;var s=a.closeLine;s.x=r.x,s.y=r.y,s.x1=r.x1,s.x2=r.x2,s.y1=r.y1,s.y2=r.y2;var l=a.highLowLine;l.x=n.x,l.y=n.y,l.x1=n.x1,l.x2=n.x2,l.y1=n.y1,l.y2=n.y2}})}},t.prototype.createLegendMarker=function(e){var t=e.pixelWidth,i=e.pixelHeight;e.removeChildren();var n,r,a=e.createChild(it);a.shouldClone=!1,a.copyFrom(this.columns.template);var o=a.openLine,s=a.closeLine,l=a.highLowLine;this.baseAxis==this.yAxis?(n=t/3,r=i,l.y=i/2,l.x2=t,o.x=t/3*2,o.y2=i/2,s.x=t/3,s.y2=i,s.y1=i/2):(n=t,r=i/3,l.x=t/2,l.y2=i,o.y=i/3*2,o.x2=t/2,s.y=i/3,s.x2=t,s.x1=t/2),a.width=n,a.height=r,ne.copyProperties(this,e,J.b),ne.copyProperties(this.columns.template,a,J.b),a.stroke=this.riseFromOpenState.properties.stroke;var u=e.dataItem;u.color=a.stroke,u.colorOrig=a.stroke},t.prototype.createColumnTemplate=function(){return new it},t}(tt);l.c.registeredClasses.OHLCSeries=rt,l.c.registeredClasses.OHLCSeriesDataItem=nt;var at=function(e){function t(){var t=e.call(this)||this;return t.className="StepLineSeriesSegment",t}return Object(r.c)(t,e),t.prototype.drawSegment=function(e,t,i,n,r,a){if(e.length>0&&t.length>0)if(r){var o=h.moveTo(e[0]);if(e.length>0)for(var s=1;s<e.length;s++){var l=e[s];s/2==Math.round(s/2)?o+=h.moveTo(l):o+=h.lineTo(l)}this.strokeSprite.path=o,(this.fillOpacity>0||this.fillSprite.fillOpacity>0)&&(o=h.moveTo(e[0])+h.polyline(e),o+=h.lineTo(t[0])+h.polyline(t),o+=h.lineTo(e[0]),o+=h.closePath(),this.fillSprite.path=o)}else{o=h.moveTo(e[0])+h.polyline(e);this.strokeSprite.path=o,(this.fillOpacity>0||this.fillSprite.fillOpacity>0)&&(o+=h.lineTo(t[0])+h.polyline(t),o+=h.lineTo(e[0]),o+=h.closePath(),this.fillSprite.path=o)}},t}(Je.a);l.c.registeredClasses.StepLineSeriesSegment=at;var ot=function(e){function t(){var t=e.call(this)||this;return t.className="StepLineSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(s.b),st=function(e){function t(){var t=e.call(this)||this;return t.className="StepLineSeries",t.applyTheme(),t.startLocation=0,t.endLocation=1,t}return Object(r.c)(t,e),t.prototype.createDataItem=function(){return new ot},t.prototype.addPoints=function(e,t,i,n,r){var a,o,s,l;this.baseAxis==this.xAxis&&(a=this.startLocation,o=this.endLocation,s=this.getAdjustedXLocation(t,this.yOpenField),l=this.getAdjustedXLocation(t,this.yField)),this.baseAxis==this.yAxis&&(s=this.startLocation,l=this.endLocation,a=this.getAdjustedXLocation(t,this.xOpenField),o=this.getAdjustedXLocation(t,this.xField));var h=this.xAxis.getX(t,i,a),c=this.yAxis.getY(t,n,s),p=this.xAxis.getX(t,i,o),d=this.yAxis.getY(t,n,l);if(h=u.fitToRange(h,-1e5,1e5),c=u.fitToRange(c,-1e5,1e5),p=u.fitToRange(p,-1e5,1e5),d=u.fitToRange(d,-1e5,1e5),!this.noRisers&&e.length>1){var y=e[e.length-1];this.baseAxis==this.xAxis&&(r?e.push({x:y.x,y:d}):e.push({x:h,y:y.y})),this.baseAxis==this.yAxis&&(r?e.push({x:p,y:y.y}):e.push({x:y.x,y:c}))}var g={x:h,y:c},f={x:p,y:d};r?e.push(f,g):e.push(g,f)},t.prototype.drawSegment=function(e,t,i){var n=!1;this.yAxis==this.baseAxis&&(n=!0),e.drawSegment(t,i,this.tensionX,this.tensionY,this.noRisers,n)},t.prototype.createSegment=function(){return new at},Object.defineProperty(t.prototype,"noRisers",{get:function(){return this.getPropertyValue("noRisers")},set:function(e){this.setPropertyValue("noRisers",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startLocation",{get:function(){return this.getPropertyValue("startLocation")},set:function(e){this.setPropertyValue("startLocation",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endLocation",{get:function(){return this.getPropertyValue("endLocation")},set:function(e){this.setPropertyValue("endLocation",e,!0)},enumerable:!0,configurable:!0}),t}(s.a);l.c.registeredClasses.StepLineSeries=st,l.c.registeredClasses.StepLineSeriesDataItem=ot;var lt=function(e){function t(){var t=e.call(this)||this;return t.className="RadarColumn",t}return Object(r.c)(t,e),t.prototype.createAssets=function(){this.radarColumn=this.createChild(Ie.a),this.radarColumn.shouldClone=!1,this.radarColumn.strokeOpacity=void 0,this.column=this.radarColumn},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.radarColumn&&this.radarColumn.copyFrom(t.radarColumn)},t.prototype.getTooltipX=function(){var e=this.getPropertyValue("tooltipX");return m.isNumber(e)?e:this.radarColumn.getTooltipX()},t.prototype.getTooltipY=function(){var e=this.getPropertyValue("tooltipX");return m.isNumber(e)?e:this.radarColumn.getTooltipY()},t}(He.a);l.c.registeredClasses.RadarColumn=lt;var ut=function(e){function t(){var t=e.call(this)||this;return t.className="ColumnSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(Se.b),ht=function(e){function t(){var t=e.call(this)||this;return t.className="RadarColumnSeries",t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.createColumnTemplate=function(){return new lt},t.prototype.validate=function(){this.chart.invalid&&this.chart.validate(),e.prototype.validate.call(this)},t.prototype.disableUnusedColumns=function(e){e&&(e.column&&(e.column.__disabled=!0),k.each(this.axisRanges.iterator(),function(t){var i=e.rangesColumns.getKey(t.uid);i&&(i.__disabled=!0)}))},t.prototype.validateDataElementReal=function(e){var t,i,n,r,a=this,s=this.chart.startAngle,l=this.chart.endAngle,h=this.yField,c=this.yOpenField,p=this.xField,d=this.xOpenField,y=this.getStartLocation(e),g=this.getEndLocation(e),f=(l-s)/(this.dataItems.length*(this.end-this.start)),m=e.column;m||(m=this.columns.create(),e.column=m,ne.forceCopyProperties(this.columns.template,m,J.b),e.addSprite(m),m.paper=this.paper,this.setColumnStates(m));var v=m.width,x=100;v instanceof o.a&&(x=v.percent);var b=u.round((g-y)*(1-x/100)/2,5);if(y+=b,g-=b,this.xAxis instanceof T.a&&this.yAxis instanceof T.a?(n=u.getDistance({x:this.yAxis.getX(e,h,0,"valueY"),y:this.yAxis.getY(e,h,0,"valueY")}),r=u.getDistance({x:this.yAxis.getX(e,c,1,"valueY"),y:this.yAxis.getY(e,c,1,"valueY")}),t=this.xAxis.getAngle(e,d,0,"valueX"),i=this.xAxis.getAngle(e,p,1,"valueX"),s+=y*f,l-=(1-g)*f):this.baseAxis==this.xAxis?(n=u.getDistance({x:this.yAxis.getX(e,h,e.locations[h],"valueY"),y:this.yAxis.getY(e,h,e.locations[h],"valueY")}),r=u.getDistance({x:this.yAxis.getX(e,c,e.locations[c],"valueY"),y:this.yAxis.getY(e,c,e.locations[c],"valueY")}),t=this.xAxis.getAngle(e,d,y,"valueX"),i=this.xAxis.getAngle(e,p,g,"valueX"),s+=y*f,l-=(1-g)*f):(n=u.getDistance({x:this.yAxis.getX(e,h,y,"valueY"),y:this.yAxis.getY(e,h,y,"valueY")}),r=u.getDistance({x:this.yAxis.getX(e,c,g,"valueY"),y:this.yAxis.getY(e,c,g,"valueY")}),t=this.xAxis.getAngle(e,p,e.locations[p],"valueX"),i=this.xAxis.getAngle(e,d,e.locations[d],"valueX")),i<t){var P=i;i=t,t=P}t=u.fitToRange(t,s,l),i=u.fitToRange(i,s,l);var C=m.radarColumn;C.startAngle=t;var A=i-t;A>0?(C.arc=A,C.radius=n,C.innerRadius=r,m.__disabled=!1,m.parent=this.columnsContainer,k.each(this.axisRanges.iterator(),function(i){var o=e.rangesColumns.getKey(i.uid);o||(o=a.columns.create(),ne.forceCopyProperties(a.columns.template,o,J.b),ne.copyProperties(i.contents,o,J.b),o.dataItem&&Ne.remove(o.dataItem.sprites,o),e.addSprite(o),o.paper=a.paper,a.setColumnStates(o),e.rangesColumns.setKey(i.uid,o));var s=o.radarColumn;s.startAngle=t,s.arc=A,s.radius=n,s.innerRadius=r,s.invalid&&(s.paper=a.paper,s.validate()),o.__disabled=!1,o.parent=i.contents})):this.disableUnusedColumns(e)},t.prototype.getPoint=function(e,t,i,n,r,a,o){a||(a="valueX"),o||(o="valueY");var s=this.yAxis.getX(e,i,r,o),l=this.yAxis.getY(e,i,r,o),h=u.getDistance({x:s,y:l});0==h&&(h=1e-5);var c=this.xAxis.getAngle(e,t,n,a);return{x:h*u.cos(c),y:h*u.sin(c)}},t.prototype.getMaskPath=function(){var e=this.yAxis.renderer;return h.arc(e.startAngle,e.endAngle-e.startAngle,e.pixelRadius,e.pixelInnerRadius)},t.prototype.positionBulletReal=function(e,t,i){var n=this.xAxis,r=this.yAxis;(t<n.start||t>n.end||i<r.start||i>r.end)&&(e.visible=!1),e.moveTo(this.xAxis.renderer.positionToPoint(t,i))},t.prototype.setXAxis=function(t){e.prototype.setXAxis.call(this,t),this.updateRendererRefs()},t.prototype.setYAxis=function(t){e.prototype.setYAxis.call(this,t),this.updateRendererRefs()},t.prototype.updateRendererRefs=function(){var e=this.xAxis.renderer,t=this.yAxis.renderer;e.axisRendererY=t},t}(Se.a);l.c.registeredClasses.RadarColumnSeries=ht,l.c.registeredClasses.RadarColumnSeriesDataItem=ut;var ct=i("AC2I"),pt=function(e){function t(){var t=e.call(this)||this;return t.slice=t.createChild(J.a),t.slice.shouldClone=!1,t.slice.setElement(t.paper.add("path")),t.slice.isMeasured=!1,t.orientation="vertical",t.bottomWidth=Object(o.c)(100),t.topWidth=Object(o.c)(100),t.isMeasured=!1,t.width=10,t.height=10,t.expandDistance=0,t.className="FunnelSlice",t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.draw=function(){e.prototype.draw.call(this);var t=this.pixelPaddingTop,i=this.pixelPaddingBottom,n=this.pixelPaddingRight,r=this.pixelPaddingLeft,a=this.pixelWidth-n-r,o=this.pixelHeight-t-i,s=this.expandDistance,l="";if("vertical"==this.orientation){var u={x:(a-(v=C.relativeToValue(this.topWidth,a)))/2+r,y:t},c={x:(a+v)/2+r,y:t},p={x:(a+(x=C.relativeToValue(this.bottomWidth,a)))/2+r,y:t+o},d={x:(a-x)/2+r,y:t+o},y={x:c.x+(p.x-c.x)/2+s*o,y:c.y+.5*o},g={x:u.x+(d.x-u.x)/2-s*o,y:u.y+.5*o},f=h.lineTo(p),m="";0!=s&&(f=h.quadraticCurveTo(p,y),m=h.quadraticCurveTo(u,g)),l=h.moveTo(u)+h.lineTo(c)+f+h.lineTo(d)+m,this.tickPoint={x:c.x+(p.x-c.x)/2,y:c.y+(p.y-c.y)/2}}else{var v,x,b={x:r,y:(o-(v=C.relativeToValue(this.topWidth,o)))/2+t},P={x:r,y:(o+v)/2+t},A={x:r+a,y:(o-(x=C.relativeToValue(this.bottomWidth,o)))/2+t},D={x:r+a,y:(o+x)/2+t};y={y:b.y+(A.y-b.y)/2-s*a,x:b.x+.5*a},g={y:P.y+(D.y-P.y)/2+s*a,x:P.x+.5*a},f=h.lineTo(A),m="";0!=s&&(f=h.quadraticCurveTo(A,y),m=h.quadraticCurveTo(P,g)),l=h.moveTo(P)+h.lineTo(b)+f+h.lineTo(D)+m,this.tickPoint={y:P.y+(D.y-P.y)/2,x:P.x+(D.x-P.x)/2}}this.slice.path=l,this.invalidateLayout()},t.prototype.getPoint=function(e,t){var i=this.pixelPaddingTop,n=this.pixelPaddingBottom,r=this.pixelPaddingRight,a=this.pixelPaddingLeft,o=this.pixelWidth-r-a,s=this.pixelHeight-i-n;if("vertical"==this.orientation){var l={x:(o-(p=C.relativeToValue(this.topWidth,o)))/2+a,y:i},u={x:(o+p)/2+a,y:i},h={x:(o+(d=C.relativeToValue(this.bottomWidth,o)))/2+a,y:i+s},c=l.x+({x:(o-d)/2+a,y:i+s}.x-l.x)*t;return{x:c+(u.x+(h.x-u.x)*t-c)*e,y:u.y+(h.y-u.y)*t}}var p,d,y={x:a,y:(s-(p=C.relativeToValue(this.topWidth,s)))/2+i},g={x:a,y:(s+p)/2+i},f={x:a+o,y:(s-(d=C.relativeToValue(this.bottomWidth,s)))/2+i},m=y.y+(f.y-y.y)*e;return{y:m+(g.y+({x:a+o,y:(s+d)/2+i}.y-g.y)*e-m)*t,x:y.x+(f.x-y.x)*e}},Object.defineProperty(t.prototype,"bottomWidth",{get:function(){return this.getPropertyValue("bottomWidth")},set:function(e){this.setPercentProperty("bottomWidth",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"topWidth",{get:function(){return this.getPropertyValue("topWidth")},set:function(e){this.setPercentProperty("topWidth",e,!0,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"orientation",{get:function(){return this.getPropertyValue("orientation")},set:function(e){this.setPropertyValue("orientation",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"expandDistance",{get:function(){return this.getPropertyValue("expandDistance")},set:function(e){this.setPropertyValue("expandDistance",e,!0)},enumerable:!0,configurable:!0}),t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.slice&&this.slice.copyFrom(t.slice)},t}(d.a);l.c.registeredClasses.FunnelSlice=pt;var dt=i("qzbU"),yt=function(e){function t(){var t=e.call(this)||this;return t._label=new V.d,t._slice=new V.d,t.className="FunnelTick",t.element=t.paper.add("path"),t._disposers.push(t._label),t._disposers.push(t._slice),t.setPropertyValue("locationX",0),t.setPropertyValue("locationY",0),t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.draw=function(){e.prototype.draw.call(this);var t=this.slice,i=t.getPoint(this.locationX,this.locationY);if(i){var n=this.label,r=t.dataItem.component,a=void 0,o=void 0,s=void 0;if("vertical"==r.orientation){var l=n.pixelX,u=n.pixelY;r.labelsOpposite||(l+=n.maxRight),a=C.spritePointToSprite(i,t,this.parent),s=C.spritePointToSprite({x:l,y:u},n.parent,this.parent),o={x:n.parent.pixelX-this.length,y:s.y},r.labelsOpposite||(o.x=n.parent.measuredWidth+this.length)}else{l=n.pixelX,u=n.pixelY;r.labelsOpposite||(u+=n.maxBottom),a=C.spritePointToSprite(i,t,this.parent),o={x:(s=C.spritePointToSprite({x:l,y:u},n.parent,this.parent)).x,y:n.parent.pixelY-this.length},r.labelsOpposite||(o.y=n.parent.measuredHeight+this.length)}this.path=h.moveTo(a)+h.lineTo(o)+h.lineTo(s)}},Object.defineProperty(t.prototype,"slice",{get:function(){return this._slice.get()},set:function(e){this._slice.set(e,new V.c([e.events.on("transformed",this.invalidate,this,!1),e.events.on("validated",this.invalidate,this,!1)]))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"label",{get:function(){return this._label.get()},set:function(e){this._label.set(e,e.events.on("transformed",this.invalidate,this,!1))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"locationX",{get:function(){return this.getPropertyValue("locationX")},set:function(e){this.setPropertyValue("locationX",e,!1,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"locationY",{get:function(){return this.getPropertyValue("locationY")},set:function(e){this.setPropertyValue("locationY",e,!1,!0)},enumerable:!0,configurable:!0}),t}(dt.a);l.c.registeredClasses.FunnelTick=yt;var gt=function(e){function t(){var t=e.call(this)||this;return t.className="FunnelSeriesDataItem",t.events.on("visibilitychanged",function(){t.component&&t.component.invalidateDataItems()},t,!1),t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"sliceLink",{get:function(){var e=this;if(!this._sliceLink){var t=this.component.sliceLinks.create();this._sliceLink=t,this._disposers.push(t),t.parent=this.component.slicesContainer,this._disposers.push(new V.b(function(){e.component&&e.component.sliceLinks.removeValue(t)})),this.addSprite(t),t.visible=this.visible}return this._sliceLink},enumerable:!0,configurable:!0}),t}(ct.b),ft=function(e){function t(){var t=e.call(this)||this;return t._nextY=0,t.className="FunnelSeries",t.orientation="vertical",t.width=Object(o.c)(100),t.height=Object(o.c)(100),t.slicesContainer.width=Object(o.c)(100),t.slicesContainer.height=Object(o.c)(100),t._disposers.push(t.slicesContainer.events.on("maxsizechanged",t.invalidateDataItems,t,!1)),t.labelsOpposite=!0,t.labelsContainer.layout="absolute",t.bottomRatio=0,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.createSlice=function(){return new pt},t.prototype.createTick=function(){return new yt},t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Funnel Series"))},t.prototype.createDataItem=function(){return new gt},t.prototype.initSlice=function(e){e.isMeasured=!1,e.defaultState.properties.scale=1,e.observe("scale",this.handleSliceScale,this),e.observe(["dx","dy","x","y"],this.handleSliceMove,this),e.tooltipText="{category}: {value.percent.formatNumber('#.#')}% ({value.value})",e.states.create("hover").properties.expandDistance=.2},t.prototype.initLabel=function(t){e.prototype.initLabel.call(this,t),t.verticalCenter="middle",t.horizontalCenter="middle",t.isMeasured=!0,t.padding(5,5,5,5)},t.prototype.validate=function(){e.prototype.validate.call(this),this._nextY=0},t.prototype.validateDataElements=function(){var t=this,i=this.slicesContainer,n=this.labelsContainer,r=this.labels.template;this.alignLabels?(r.interactionsEnabled=!0,i.isMeasured=!0,n.isMeasured=!0):(r.interactionsEnabled=!1,i.isMeasured=!1,n.isMeasured=!1);var a=0,o=0;this.dataItems.each(function(e){m.hasValue(e.value)&&(o++,e.value>0?a+=Math.abs(e.getWorkingValue("value")/e.value):t.ignoreZeroValues?o--:!e.visible||e.__disabled||e.isHiding?o--:a+=1)}),this._total=1/o*a,this._count=o,e.prototype.validateDataElements.call(this),this.arrangeLabels()},t.prototype.getNextValue=function(e){var t=e.index,i=e.getWorkingValue("value");if(t<this.dataItems.length-1){var n=this.dataItems.getIndex(t+1);if(i=n.getWorkingValue("value"),!n.visible||n.isHiding||n.__disabled||0==n.value&&this.ignoreZeroValues)return this.getNextValue(n)}return i},t.prototype.formDataElement=function(){},t.prototype.validateDataElement=function(t){if(m.hasValue(t.value)){var i=t.slice;i.orientation=this.orientation;var n=t.sliceLink;n.orientation=this.orientation;var r=t.tick,a=t.label;r.slice=i,r.label=a,this.decorateSlice(t),t.index==this.dataItems.length-1&&(n.disabled=!0),e.prototype.validateDataElement.call(this,t),n.fill=i.fill}},t.prototype.decorateSlice=function(e){var t=e.slice,i=e.sliceLink,n=e.label,r=e.tick,a=this.slicesContainer.innerWidth,o=this.slicesContainer.innerHeight,s=this.getNextValue(e),l=Math.abs(e.getWorkingValue("value")),h=this.bottomRatio,c=1;if(0!=e.value?c=l/Math.abs(e.value):(e.__disabled||e.isHiding||!e.visible)&&(c=1e-6),this.ignoreZeroValues&&0==e.value)e.__disabled=!0;else if(e.__disabled=!1,this._nextY==1/0&&(this._nextY=0),"vertical"==this.orientation){var p=i.pixelHeight*c;o+=p,t.topWidth=l/this.dataItem.values.value.high*a,t.bottomWidth=(l-(l-s)*h)/this.dataItem.values.value.high*a,i.topWidth=t.bottomWidth,i.bottomWidth=(l-(l-s))/this.dataItem.values.value.high*a,t.y=this._nextY,t.height=Math.min(1e5,u.max(0,o/this._count*c/this._total-p)),t.x=a/2,this.alignLabels?n.x=void 0:n.x=t.x,n.y=t.pixelY+t.pixelHeight*r.locationY,this._nextY+=t.pixelHeight+p,i.y=this._nextY-p,i.x=t.x}else{var d=i.pixelWidth*c;a+=d,t.topWidth=l/this.dataItem.values.value.high*o,t.bottomWidth=(l-(l-s)*h)/this.dataItem.values.value.high*o,i.topWidth=t.bottomWidth,i.bottomWidth=(l-(l-s))/this.dataItem.values.value.high*o,t.x=this._nextY,t.width=Math.min(1e5,a/this._count*c*1/this._total-d),t.y=o/2,this.alignLabels?n.y=this.labelsContainer.measuredHeight:n.y=t.y,n.x=t.pixelX+t.pixelWidth*r.locationX,this._nextY+=t.pixelWidth+d,i.x=this._nextY-d,i.y=t.y}},t.prototype.getLastLabel=function(e){if(e>0){var t=this.labels.getIndex(e);return t.__disabled||!t.visible?this.getLastLabel(e-1):t}},t.prototype.arrangeLabels=function(){if(this.alignLabels){var e=this.labels.length;if(e>1){var t=this.getLastLabel(e-1);if(t){var i=t.pixelY,n=t.pixelX;if(e>1){for(var r=e-2;r>=0;r--){(a=this.labels.getIndex(r)).visible&&!a.__disabled&&(a.invalid&&a.validate(),"vertical"==this.orientation?a.pixelY+a.measuredHeight>i&&(a.y=Math.min(1e6,i-a.measuredHeight)):a.pixelX+a.measuredWidth>n&&(a.x=Math.min(1e6,n-a.measuredWidth)),i=a.pixelY,n=a.pixelX)}i=0,n=0;for(r=0;r<e;r++){var a;(a=this.labels.getIndex(r)).visible&&!a.__disabled&&(a.invalid&&a.validate(),"vertical"==this.orientation?a.pixelY<i&&(a.y=Math.min(1e6,i)):a.pixelX<n&&(a.x=Math.min(1e6,n)),i+=a.measuredHeight,n+=a.measuredWidth)}}}}}},t.prototype.positionBullet=function(t){e.prototype.positionBullet.call(this,t);var i=t.dataItem.slice,n=t.locationX;m.isNumber(n)||(n=.5);var r=t.locationY;m.isNumber(r)||(r=1),t.x=i.pixelX+i.measuredWidth*n,t.y=i.pixelY+i.measuredHeight*r},Object.defineProperty(t.prototype,"orientation",{get:function(){return this.getPropertyValue("orientation")},set:function(e){this.setPropertyValue("orientation",e)&&(this.labelsOpposite=this.labelsOpposite,this.invalidate(),"vertical"==e?(this.ticks.template.locationX=1,this.ticks.template.locationY=.5,this.labels.template.rotation=0,this.layout="horizontal"):(this.ticks.template.locationX=.5,this.ticks.template.locationY=1,this.labels.template.rotation=-90,this.layout="vertical"))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bottomRatio",{get:function(){return this.getPropertyValue("bottomRatio")},set:function(e){this.setPropertyValue("bottomRatio",e)&&this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sliceLinks",{get:function(){if(!this._sliceLinks){var e=new pt;e.applyOnClones=!0,e.fillOpacity=.5,e.expandDistance=-.3,e.hiddenState.properties.opacity=0,this._disposers.push(e),this._sliceLinks=new R.e(e),this._disposers.push(new R.c(this._sliceLinks))}return this._sliceLinks},enumerable:!0,configurable:!0}),t.prototype.show=function(t){var i=this,n=this.startIndex,r=this.endIndex,a=this.defaultState.transitionDuration;m.isNumber(t)&&(a=t);var o=0;return k.each(k.indexed(this.dataItems.iterator()),function(e){var t=e[0],s=e[1];i.sequencedInterpolation&&(o=i.sequencedInterpolationDelay*t+a*(t-n)/(r-n)),s.show(a,o,["value"])}),e.prototype.show.call(this,t)},t.prototype.hide=function(t){var i=this,n=["value"],r=this.startIndex,a=this.endIndex,o=0,s=this.hiddenState.transitionDuration;m.isNumber(t)&&(s=t),k.each(k.indexed(this.dataItems.iterator()),function(e){var t=e[0],l=e[1];i.sequencedInterpolation&&(o=i.sequencedInterpolationDelay*t+s*(t-r)/(a-r)),l.hide(s,o,0,n)});var l=e.prototype.hide.call(this,t);return l&&!l.isFinished()&&l.delay(o),l},t.prototype.setAlignLabels=function(t){e.prototype.setAlignLabels.call(this,t),this.ticks.template.disabled=!t;var i=this.labelsContainer;i&&(t?(i.height=void 0,i.width=void 0,i.margin(10,10,10,10)):(i.width=Object(o.c)(100),i.height=Object(o.c)(100))),this.labelsOpposite=this.labelsOpposite},Object.defineProperty(t.prototype,"labelsOpposite",{get:function(){return this.getPropertyValue("labelsOpposite")},set:function(e){this.setPropertyValue("labelsOpposite",e);var t=this.labels.template,i="none",n="none";this.alignLabels?e?(this.labelsContainer.toFront(),"vertical"==this.orientation?(this.ticks.template.locationX=1,t.horizontalCenter="left",i="right"):(this.ticks.template.locationY=1,t.horizontalCenter="right",n="bottom")):(this.labelsContainer.toBack(),"vertical"==this.orientation?(this.ticks.template.locationX=0,i="left"):(n="top",this.ticks.template.locationY=0)):"vertical"==this.orientation?i="center":n="middle",t.align=i,t.valign=n,this.validateLayout(),this.ticks.each(function(e){e.invalidate()}),this.invalidateDataItems()},enumerable:!0,configurable:!0}),t}(ct.a);l.c.registeredClasses.FunnelSeries=ft,l.c.registeredClasses.FunnelSeriesDataItem=gt;var mt=function(e){function t(){var t=e.call(this)||this;return t.className="PyramidSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(gt),vt=function(e){function t(){var t=e.call(this)||this;return t.className="PyramidSeries",t.topWidth=Object(o.c)(0),t.bottomWidth=Object(o.c)(100),t.pyramidHeight=Object(o.c)(100),t.valueIs="area",t.sliceLinks.template.width=0,t.sliceLinks.template.height=0,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Pyramid Series"))},t.prototype.createDataItem=function(){return new mt},t.prototype.validate=function(){e.prototype.validate.call(this),this._nextWidth=void 0},t.prototype.getNextValue=function(e){var t=e.index,i=e.getWorkingValue("value");t<this.dataItems.length-1&&(i=this.dataItems.getIndex(t+1).getWorkingValue("value"));return 0==i&&(i=1e-6),i},t.prototype.validateDataElements=function(){var t=this,i=this.slicesContainer.innerWidth,n=this.slicesContainer.innerHeight;if(this.dataItems.each(function(e){if(e.value>0){var r=e.getWorkingValue("value")/e.value,a=e.sliceLink;"vertical"==t.orientation?n-=a.pixelHeight*r:i-=a.pixelWidth*r}}),this._pyramidHeight=C.relativeToValue(this.pyramidHeight,n),this._pyramidWidth=C.relativeToValue(this.pyramidHeight,i),"vertical"==this.orientation){var r=(n-this._pyramidHeight)/2;this.slicesContainer.y=r,this.labelsContainer.y=r,this.ticksContainer.y=r}else{var a=(i-this._pyramidWidth)/2;this.slicesContainer.x=a,this.labelsContainer.x=a,this.ticksContainer.x=a}e.prototype.validateDataElements.call(this)},t.prototype.decorateSlice=function(e){var t=this.dataItem.values.value.absoluteSum;if(0!=t){var i=e.slice,n=e.sliceLink,r=e.label,a=e.tick;this.getNextValue(e);var o=Math.abs(e.getWorkingValue("value"));0==o&&(o=1e-6);var s=this._pyramidWidth,l=this._pyramidHeight,u=this.slicesContainer.innerWidth,h=this.slicesContainer.innerHeight,c=n.pixelWidth,p=n.pixelHeight;if(0==e.value&&this.ignoreZeroValues?e.__disabled=!0:e.__disabled=!1,"vertical"==this.orientation){var d=C.relativeToValue(this.topWidth,u);m.isNumber(this._nextWidth)||(this._nextWidth=d);var y=C.relativeToValue(this.bottomWidth,u),g=this._nextWidth,f=Math.atan2(l,d-y);0==(A=Math.tan(Math.PI/2-f))&&(A=1e-8);var v=void 0,x=void 0;if("area"==this.valueIs){var b=(d+y)/2*l*o/t,P=Math.abs(g*g-2*b*A);x=(2*b-(v=(g-Math.sqrt(P))/A)*g)/v}else x=g-(v=l*o/t)*A;i.height=v,i.width=u,i.bottomWidth=x,i.topWidth=g,n.topWidth=i.bottomWidth,n.bottomWidth=i.bottomWidth,i.y=this._nextY,this.alignLabels?r.x=0:r.x=u/2,r.y=i.pixelY+i.pixelHeight*a.locationY+i.dy,this._nextY+=i.pixelHeight+p*o/Math.max(Math.abs(e.value),1e-8),n.y=this._nextY-p,n.x=u/2}else{d=C.relativeToValue(this.topWidth,h);m.isNumber(this._nextWidth)||(this._nextWidth=d);var A;y=C.relativeToValue(this.bottomWidth,h),g=this._nextWidth,f=Math.atan2(s,d-y);0==(A=Math.tan(Math.PI/2-f))&&(A=1e-8);var D=void 0;x=void 0;if("area"==this.valueIs)x=(2*(b=(d+y)/2*s*o/t)-(D=(g-Math.sqrt(g*g-2*b*A))/A)*g)/D;else x=g-(D=s*o/t)*A;i.width=D,i.height=h,i.bottomWidth=x,i.topWidth=g,n.topWidth=i.bottomWidth,n.bottomWidth=i.bottomWidth,i.x=this._nextY,this.alignLabels?r.y=this.labelsContainer.measuredHeight:r.y=h/2,r.x=i.pixelX+i.pixelWidth*a.locationX+i.dx,this._nextY+=i.pixelWidth+c*o/Math.max(Math.abs(e.value),1e-8),n.x=this._nextY-c,n.y=h/2}this._nextWidth=i.bottomWidth}},Object.defineProperty(t.prototype,"topWidth",{get:function(){return this.getPropertyValue("topWidth")},set:function(e){this.setPercentProperty("topWidth",e,!1,!1,10,!1)&&this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pyramidHeight",{get:function(){return this.getPropertyValue("pyramidHeight")},set:function(e){this.setPercentProperty("pyramidHeight",e,!1,!1,10,!1)&&this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bottomWidth",{get:function(){return this.getPropertyValue("bottomWidth")},set:function(e){this.setPercentProperty("bottomWidth",e,!1,!1,10,!1)&&this.invalidate()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueIs",{get:function(){return this.getPropertyValue("valueIs")},set:function(e){this.setPropertyValue("valueIs",e)&&this.invalidate()},enumerable:!0,configurable:!0}),t}(ft);l.c.registeredClasses.PyramidSeries=vt,l.c.registeredClasses.PyramidSeriesDataItem=mt;var xt=function(e){function t(){var t=e.call(this)||this;return t.className="PictorialStackedSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(mt),bt=function(e){function t(){var t=e.call(this)||this;return t.className="PictorialStackedSeries",t.topWidth=Object(o.c)(100),t.bottomWidth=Object(o.c)(100),t.valueIs="height",t.applyTheme(),t.startLocation=0,t.endLocation=1,t.align="center",t.valign="middle",t._maskSprite=t.slicesContainer.createChild(J.a),t._maskSprite.visible=!1,t._maskSprite.zIndex=100,t._maskSprite.shouldClone=!1,t}return Object(r.c)(t,e),t.prototype.validateDataElements=function(){var t=this.slicesContainer.maxWidth,i=this.slicesContainer.maxHeight,n=this._maskSprite,r=n.measuredWidth/n.scale,a=n.measuredHeight/n.scale,o=u.min(i/a,t/r);o==1/0&&(o=1),o=u.max(.001,o);var s,l,h=this.startLocation,c=this.endLocation,p=u.min(t,r*o),d=u.min(i,a*o);n.scale=o,"vertical"==this.orientation?(this.topWidth=p+4,this.bottomWidth=p+4,this.pyramidHeight=d*(c-h),n.x=t/2,n.y=d/2):(this.topWidth=d+4,this.bottomWidth=d+4,this.pyramidHeight=p*(c-h),n.valign="middle",n.x=p/2,n.y=i/2),n.verticalCenter="middle",n.horizontalCenter="middle",e.prototype.validateDataElements.call(this),"vertical"==this.orientation?("bottom"==this.valign&&(s=i-d),"middle"==this.valign&&(s=(i-d)/2),"top"==this.valign&&(s=0),"left"==this.align&&(l=-(t-p)/2),"center"==this.align&&(l=0),"right"==this.align&&(l=(t-p)/2),this.slices.template.dy=h*d,this.alignLabels&&(this.slicesContainer.dx=l)):("bottom"==this.valign&&(s=(i-d)/2),"middle"==this.valign&&(s=0),"top"==this.valign&&(s=-(i-d)/2),"left"==this.align&&(l=0),"center"==this.align&&(l=(t-p)/2),"right"==this.align&&(l=t-p),this.slices.template.dx=h*p,this.alignLabels&&(this.slicesContainer.dy=s)),this.slicesContainer.x=l,this.labelsContainer.x=l,this.ticksContainer.x=l,this.slicesContainer.y=s,this.labelsContainer.y=s,this.ticksContainer.y=s,p>0&&d>0&&(this.slicesContainer.mask=n)},t.prototype.applyInternalDefaults=function(){e.prototype.applyInternalDefaults.call(this),m.hasValue(this.readerTitle)||(this.readerTitle=this.language.translate("Pyramid Series"))},t.prototype.createDataItem=function(){return new xt},Object.defineProperty(t.prototype,"maskSprite",{get:function(){return this._maskSprite},enumerable:!0,configurable:!0}),t.prototype.initSlice=function(t){e.prototype.initSlice.call(this,t);var i=t.states.getKey("hover");i&&(i.properties.expandDistance=0)},Object.defineProperty(t.prototype,"startLocation",{get:function(){return this.getPropertyValue("startLocation")},set:function(e){this.setPropertyValue("startLocation",e)&&this.invalidateDataItems()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endLocation",{get:function(){return this.getPropertyValue("endLocation")},set:function(e){this.setPropertyValue("endLocation",e)&&this.invalidateDataItems()},enumerable:!0,configurable:!0}),t}(vt);l.c.registeredClasses.PictorialStackedSeries=bt,l.c.registeredClasses.PictorialStackedSeriesDataItem=xt;var Pt=i("BmDP"),Ct=i("ncT3"),At=function(e){function t(){var t=e.call(this)||this;return t.className="ConeColumn",t}return Object(r.c)(t,e),t.prototype.createAssets=function(){this.coneColumn=this.createChild(Ct.a),this.coneColumn.shouldClone=!1,this.column=this.coneColumn},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.coneColumn&&this.coneColumn.copyFrom(t.coneColumn)},t}(He.a);l.c.registeredClasses.ConeColumn=At;var Dt=function(e){function t(){var t=e.call(this)||this;return t.className="ConeSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(Se.b),It=function(e){function t(){var t=e.call(this)||this;return t.className="ConeSeries",t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.createColumnTemplate=function(){return new At},t.prototype.getMaskPath=function(){var e=0,t=0,i=this.columns.getIndex(0);if(i)return this.baseAxis==this.xAxis?t=i.coneColumn.innerWidth/2+1:e=i.coneColumn.innerHeight/2+1,h.rectToPath({x:-e,y:0,width:this.xAxis.axisLength+e,height:this.yAxis.axisLength+t})},t.prototype.validateDataElementReal=function(t){if(e.prototype.validateDataElementReal.call(this,t),t.column){var i=t.column.coneColumn;i.fill=t.column.fill,this.baseAxis==this.yAxis?i.orientation="horizontal":i.orientation="vertical"}},t}(Se.a);l.c.registeredClasses.ConeSeries=It,l.c.registeredClasses.ConeSeriesDataItem=Dt;var Tt=function(e){function t(){var t=e.call(this)||this;return t.className="CurvedColumn",t}return Object(r.c)(t,e),t.prototype.createAssets=function(){this.curvedColumn=this.createChild(J.a),this.curvedColumn.shouldClone=!1,this.setPropertyValue("tension",.7),this.width=Object(o.c)(120),this.height=Object(o.c)(120),this.column=this.curvedColumn},t.prototype.draw=function(){e.prototype.draw.call(this);var t,i=this.realWidth,n=this.realHeight,r=this.realX-this.pixelX,a=this.realY-this.pixelY;C.used(this.width);var o=1,s=1;"vertical"==this.orientation?(o=this.tension,t=[{x:0,y:n+a},{x:i/2,y:a},{x:i,y:n+a}]):(s=this.tension,t=[{x:r,y:0},{x:r+i,y:n/2},{x:r,y:n}]);var l=h.moveTo(t[0])+new be.b(o,s).smooth(t);this.column.path=l},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.curvedColumn&&this.curvedColumn.copyFrom(t.curvedColumn)},Object.defineProperty(t.prototype,"tension",{get:function(){return this.getPropertyValue("tension")},set:function(e){this.setPropertyValue("tension",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"orientation",{get:function(){return this.getPropertyValue("orientation")},set:function(e){this.setPropertyValue("orientation",e,!0)},enumerable:!0,configurable:!0}),t}(He.a);l.c.registeredClasses.CurvedColumn=Tt;var Ot=function(e){function t(){var t=e.call(this)||this;return t.className="CurvedColumnSeriesDataItem",t.applyTheme(),t}return Object(r.c)(t,e),t}(Se.b),Vt=function(e){function t(){var t=e.call(this)||this;return t.className="CurvedColumnSeries",t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.createColumnTemplate=function(){return new Tt},t.prototype.validateDataElementReal=function(t){e.prototype.validateDataElementReal.call(this,t);var i=t.column;(i=t.column)&&(t.column.curvedColumn.fill=t.column.fill,this.baseAxis==this.yAxis?i.orientation="horizontal":i.orientation="vertical")},t}(Se.a);l.c.registeredClasses.CurvedColumnSeries=Vt,l.c.registeredClasses.CurvedColumnSeriesDataItem=Ot;var _t=i("AAkI"),kt=i("eN1s"),Lt=i("TDx+"),St=i("eAid"),Rt=i("Uslz"),jt=i("+K/x"),wt=i("KknQ"),Nt=i("ncgu"),Ft=i("9ZsQ"),Yt=i("ZoDA"),Xt=function(e){function t(){var t=e.call(this)||this;t.className="CircleBullet";var i=t.createChild(y.a);return i.shouldClone=!1,i.radius=5,i.isMeasured=!1,t.circle=i,t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.circle.copyFrom(t.circle)},t}(se.a);l.c.registeredClasses.CircleBullet=Xt;var Wt=function(e){function t(){var t=e.call(this)||this;return t.className="ErrorBullet",t.errorLine=t.createChild(J.a),t.errorLine.shouldClone=!1,t.width=20,t.height=20,t.strokeOpacity=1,t.isDynamic=!0,t}return Object(r.c)(t,e),t.prototype.validatePosition=function(){e.prototype.validatePosition.call(this);var t=this.pixelWidth/2,i=this.pixelHeight/2;this.errorLine.path=h.moveTo({x:-t,y:-i})+h.lineTo({x:t,y:-i})+h.moveTo({x:0,y:-i})+h.lineTo({x:0,y:i})+h.moveTo({x:-t,y:i})+h.lineTo({x:t,y:i})},t.prototype.copyFrom=function(t){e.prototype.copyFrom.call(this,t),this.errorLine.copyFrom(t.errorLine)},t}(se.a);l.c.registeredClasses.ErrorBullet=Wt;var Mt=i("C6Lh"),Ht=i("Y9w3"),Bt=i("A6AV"),zt=i("Trvg"),Et=i("Rnbi"),Gt=function(e){function t(){var t=e.call(this)||this;return t.className="NavigationBarDataItem",t.applyTheme(),t}return Object(r.c)(t,e),Object.defineProperty(t.prototype,"name",{get:function(){return this.properties.name},set:function(e){this.setProperty("name",e)},enumerable:!0,configurable:!0}),t}(Bt.a),qt=function(e){function t(){var t=e.call(this)||this;t.className="NavigationBar";var i=new w.a,n=new zt.a;n.valign="middle",n.paddingTop=8,n.paddingBottom=8,t.paddingBottom=2,t.links=new R.e(n),t._disposers.push(new R.c(t.links)),t._disposers.push(n),t._linksIterator=new k.ListIterator(t.links,function(){return t.links.create()}),t._linksIterator.createNewItems=!0;var r=new Et.a;r.direction="right",r.width=8,r.height=12,r.fill=i.getFor("alternativeBackground"),r.fillOpacity=.5,r.valign="middle",r.marginLeft=10,r.marginRight=10,t.separators=new R.e(r),t._disposers.push(new R.c(t.separators)),t._disposers.push(r);var a=new zt.a;return t.activeLink=a,a.copyFrom(n),a.valign="middle",a.fontWeight="bold",t.width=Object(o.c)(100),t.layout="grid",t.dataFields.name="name",t.applyTheme(),t}return Object(r.c)(t,e),t.prototype.validateDataElements=function(){this.removeChildren(),this._linksIterator.reset(),e.prototype.validateDataElements.call(this)},t.prototype.validateDataElement=function(t){var i;if(e.prototype.validateDataElement.call(this,t),t.index<this.dataItems.length-1){(i=this._linksIterator.getLast()).parent=this;var n=this.separators.create();n.parent=this,n.valign="middle"}else(i=this.activeLink).events.copyFrom(this.links.template.events),i.hide(0),i.show(),i.parent=this;i.dataItem=t,i.text=t.name,i.validate()},t}(Ht.a);l.c.registeredClasses.NavigationBar=qt,l.c.registeredClasses.NavigationBarDataItem=Gt;var Kt=i("gqvf"),Ut=i("1Fjw"),Zt=function(e){function t(){var t=e.call(this)||this;return t.className="RadarCursor",t.radius=Object(o.c)(100),t.innerRadius=Object(o.c)(0),t.applyTheme(),t.mask=void 0,t}return Object(r.c)(t,e),t.prototype.fitsToBounds=function(e){var t=u.getDistance(e);return t<this.truePixelRadius+1&&t>this.pixelInnerRadius-1},Object.defineProperty(t.prototype,"startAngle",{get:function(){return this.getPropertyValue("startAngle")},set:function(e){this.setPropertyValue("startAngle",e,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endAngle",{get:function(){return this.getPropertyValue("endAngle")},set:function(e){this.setPropertyValue("endAngle",e,!0)},enumerable:!0,configurable:!0}),t.prototype.triggerMoveReal=function(t){this.xAxis&&(!this.xAxis||this.xAxis.cursorTooltipEnabled&&!this.xAxis.tooltip.disabled)||this.updateLineX(this.point),this.yAxis&&(!this.yAxis||this.yAxis.cursorTooltipEnabled&&!this.yAxis.tooltip.disabled)||this.updateLineY(this.point),this.updateSelection(),e.prototype.triggerMoveReal.call(this,t)},t.prototype.updateLineX=function(e){var t=this.pixelRadius,i=this.startAngle,n=this.endAngle,r=this.pixelInnerRadius;if(t>0&&m.isNumber(i)&&m.isNumber(n)&&m.isNumber(r)){var a=u.fitAngleToRange(u.getAngle(e),i,n),o=void 0;if(this.lineX&&this.lineX.visible){if(this.lineX.moveTo({x:0,y:0}),this.xAxis&&this.fullWidthLineX){var s=this.xAxis.currentItemStartPoint,l=this.xAxis.currentItemEndPoint;if(s&&l){var c=u.fitAngleToRange(u.getAngle(s),i,n),p=u.fitAngleToRange(u.getAngle(l),i,n)-c;i<n?p<0&&(p+=360):p>0&&(p-=360),a-=p/2,o=h.moveTo({x:r*u.cos(a),y:r*u.sin(a)})+h.lineTo({x:t*u.cos(a),y:t*u.sin(a)})+h.arcTo(a,p,t)+h.lineTo({x:r*u.cos(a+p),y:r*u.sin(a+p)})+h.arcTo(a+p,-p,r)}}o||(o=h.moveTo({x:r*u.cos(a),y:r*u.sin(a)})+h.lineTo({x:t*u.cos(a),y:t*u.sin(a)})),this.lineX.path=o}}},t.prototype.updateLineY=function(e){if(this.lineY&&this.lineY.visible){var t=this.startAngle,i=this.endAngle,n=this.truePixelRadius,r=u.fitToRange(u.getDistance(e),0,this.truePixelRadius);if(m.isNumber(r)&&m.isNumber(t)){this.lineY.moveTo({x:0,y:0});var a=void 0,o=i-t;if(this.yAxis&&this.fullWidthLineY){var s=this.yAxis.currentItemStartPoint,l=this.yAxis.currentItemEndPoint;if(s&&l){var c=u.fitToRange(u.getDistance(s),0,n);r=u.fitToRange(u.getDistance(l),0,n),a=h.moveTo({x:r*u.cos(t),y:r*u.sin(t)})+h.arcTo(t,o,r),a+=h.moveTo({x:c*u.cos(i),y:c*u.sin(i)})+h.arcTo(i,-o,c)}}a||(a=h.moveTo({x:r*u.cos(t),y:r*u.sin(t)})+h.arcTo(t,i-t,r)),this.lineY.path=a}}},t.prototype.updateSelection=function(){if(this._usesSelection){var e=this.downPoint;if(e){var t=this.point,i=this.pixelRadius,n=this.truePixelRadius,r=this.pixelInnerRadius,a=Math.min(this.startAngle,this.endAngle),o=Math.max(this.startAngle,this.endAngle),s=u.fitAngleToRange(u.getAngle(e),a,o),l=u.fitAngleToRange(u.getAngle(t),a,o),c=u.getDistance(e);if(c<n){var p=u.fitToRange(u.getDistance(t),0,n);this._prevAngle=l;var d=h.moveTo({x:0,y:0}),y=u.sin(s),g=u.cos(s),f=u.sin(l),m=u.cos(l),v=this.behavior;"zoomX"==v||"selectX"==v?d+=h.lineTo({x:i*g,y:i*y})+h.arcTo(s,l-s,i)+h.lineTo({x:r*m,y:r*f})+h.arcTo(l,s-l,r):"zoomY"==v||"selectY"==v?d=h.moveTo({x:p*u.cos(a),y:p*u.sin(a)})+h.arcTo(a,o-a,p)+h.lineTo({x:c*u.cos(o),y:c*u.sin(o)})+h.arcTo(o,a-o,c)+h.closePath():"zoomXY"==v&&(d=h.moveTo({x:p*u.cos(s),y:p*u.sin(s)})+h.arcTo(s,l-s,p)+h.lineTo({x:c*u.cos(l),y:c*u.sin(l)})+h.arcTo(l,s-l,c)+h.closePath()),this.selection.path=d}this.selection.moveTo({x:0,y:0})}}},t.prototype.getPositions=function(){if(this.chart){var e=this.pixelInnerRadius,t=this.truePixelRadius-e,i=this.startAngle,n=this.endAngle,r=(u.fitAngleToRange(u.getAngle(this.point),i,n)-i)/(n-i);this.xPosition=r,this.yPosition=u.fitToRange((u.getDistance(this.point)-e)/t,0,1)}},t.prototype.updatePoint=function(e){},t.prototype.handleXTooltipPosition=function(e){if(this.xAxis.cursorTooltipEnabled){var t=this.xAxis.tooltip;this.updateLineX(C.svgPointToSprite({x:t.pixelX,y:t.pixelY},this))}},t.prototype.handleYTooltipPosition=function(e){if(this.yAxis.cursorTooltipEnabled){var t=this.yAxis.tooltip;this.updateLineY(C.svgPointToSprite({x:t.pixelX,y:t.pixelY},this))}},t.prototype.updateLinePositions=function(e){},t.prototype.getRanges=function(){var e=this.downPoint;if(e){var t=this.upPoint;if(this.chart){var i=this.pixelRadius,n=this.startAngle,r=this.endAngle,a=u.fitAngleToRange(u.getAngle(e),this.startAngle,this.endAngle),o=u.fitAngleToRange(u.getAngle(t),this.startAngle,this.endAngle),s=u.fitToRange(u.getDistance(e),0,i),l=u.fitToRange(u.getDistance(t),0,i),h=0,c=1,p=0,d=1,y=this.behavior;if("zoomX"==y||"selectX"==y||"zoomXY"==y||"selectXY"==y){var g=r-n;h=u.round((a-n)/g,5),c=u.round((o-n)/g,5)}"zoomY"!=y&&"selectY"!=y&&"zoomXY"!=y&&"selectXY"!=y||(p=u.round(s/i,5),d=u.round(l/i,5)),this.xRange={start:Math.min(h,c),end:Math.max(h,c)},this.yRange={start:Math.min(p,d),end:Math.max(p,d)},"selectX"==this.behavior||"selectY"==this.behavior||"selectXY"==this.behavior||this.selection.hide()}}},t.prototype.updateSize=function(){},Object.defineProperty(t.prototype,"radius",{get:function(){return this.getPropertyValue("radius")},set:function(e){this.setPercentProperty("radius",e,!1,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pixelRadius",{get:function(){return C.relativeRadiusToValue(this.radius,this.truePixelRadius)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"truePixelRadius",{get:function(){return C.relativeToValue(Object(o.c)(100),u.min(this.innerWidth/2,this.innerHeight/2))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.getPropertyValue("innerRadius")},set:function(e){this.setPercentProperty("innerRadius",e,!1,!1,10,!1)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pixelInnerRadius",{get:function(){var e=this.innerRadius;return e instanceof o.a&&(e=Object(o.c)(100*e.value*this.chart.innerRadiusModifyer)),C.relativeRadiusToValue(e,this.truePixelRadius)||0},enumerable:!0,configurable:!0}),t.prototype.fixPoint=function(e){return e},t}(Kt.a);l.c.registeredClasses.RadarCursor=Zt,window.am4charts=n}},["XFs4"]);
//# sourceMappingURL=charts.js.map

// Jquery Highlight
/*
 * jQuery Highlight plugin
 *
 * Based on highlight v3 by Johann Burkard
 * http://johannburkard.de/blog/programming/javascript/highlight-javascript-text-higlighting-jquery-plugin.html
 *
 * Code a little bit refactored and cleaned (in my humble opinion).
 * Most important changes:
 *  - has an option to highlight only entire words (wordsOnly - false by default),
 *  - has an option to be case sensitive (caseSensitive - false by default)
 *  - highlight element tag and class names can be specified in options
 *
 * Usage:
 *   // wrap every occurrance of text 'lorem' in content
 *   // with <span class='highlight'> (default options)
 *   $('#content').highlight('lorem');
 *
 *   // search for and highlight more terms at once
 *   // so you can save some time on traversing DOM
 *   $('#content').highlight(['lorem', 'ipsum']);
 *   $('#content').highlight('lorem ipsum');
 *
 *   // search only for entire word 'lorem'
 *   $('#content').highlight('lorem', { wordsOnly: true });
 *
 *   // search only for the entire word 'C#'
 *   // and make sure that the word boundary can also
 *   // be a 'non-word' character, as well as a regex latin1 only boundary:
 *   $('#content').highlight('C#', { wordsOnly: true , wordsBoundary: '[\\b\\W]' });
 *
 *   // don't ignore case during search of term 'lorem'
 *   $('#content').highlight('lorem', { caseSensitive: true });
 *
 *   // wrap every occurrance of term 'ipsum' in content
 *   // with <em class='important'>
 *   $('#content').highlight('ipsum', { element: 'em', className: 'important' });
 *
 *   // remove default highlight
 *   $('#content').unhighlight();
 *
 *   // remove custom highlight
 *   $('#content').unhighlight({ element: 'em', className: 'important' });
 *
 *
 * Copyright (c) 2009 Bartek Szopka
 *
 * Licensed under MIT license.
 *
 */

(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS
        factory(require('jquery'));
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function (jQuery) {
    jQuery.extend({
        highlight: function (node, re, nodeName, className) {
            if (node.nodeType === 3) {
                var match = node.data.match(re);
                if (match) {
                    // The new highlight Element Node
                    var highlight = document.createElement(nodeName || 'span');
                    highlight.className = className || 'highlight';
                    // Note that we use the captured value to find the real index
                    // of the match. This is because we do not want to include the matching word boundaries
                    var capturePos = node.data.indexOf( match[1] , match.index );

                    // Split the node and replace the matching wordnode
                    // with the highlighted node
                    var wordNode = node.splitText(capturePos);
                    wordNode.splitText(match[1].length);

                    var wordClone = wordNode.cloneNode(true);                    
                    highlight.appendChild(wordClone);
                    wordNode.parentNode.replaceChild(highlight, wordNode);
                    return 1; //skip added node in parent
                }
            } else if ((node.nodeType === 1 && node.childNodes) && // only element nodes that have children
                    !/(script|style)/i.test(node.tagName) && // ignore script and style nodes
                    !(node.tagName === nodeName.toUpperCase() && node.className === className)) { // skip if already highlighted
                for (var i = 0; i < node.childNodes.length; i++) {
                    i += jQuery.highlight(node.childNodes[i], re, nodeName, className);
                }
            }
            return 0;
        }
    });

    jQuery.fn.unhighlight = function (options) {
        var settings = {
          className: 'highlight',
          element: 'span'
        };

        jQuery.extend(settings, options);

        return this.find(settings.element + '.' + settings.className).each(function () {
            var parent = this.parentNode;
            parent.replaceChild(this.firstChild, this);
            parent.normalize();
        }).end();
    };

    jQuery.fn.highlight = function (words, options) {
        var settings = {
          className: 'highlight',
          element: 'span',
          caseSensitive: false,
          wordsOnly: false,
          wordsBoundary: '\\b'
        };

        jQuery.extend(settings, options);
        
        if (typeof words === 'string') {
          words = [words];
        }
        words = jQuery.grep(words, function(word, i){
          return word != '';
        });
        words = jQuery.map(words, function(word, i) {
          return word.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
        });

        if (words.length === 0) {
          return this;
        };

        var flag = settings.caseSensitive ? '' : 'i';
        // The capture parenthesis will make sure we can match
        // only the matching word
        var pattern = '(' + words.join('|') + ')';
        if (settings.wordsOnly) {
            pattern = settings.wordsBoundary + pattern + settings.wordsBoundary;
        }
        var re = new RegExp(pattern, flag);
        
        return this.each(function () {
            jQuery.highlight(this, re, settings.element, settings.className);
        });
    };
}));

// redux
(function (global, factory) {
typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
typeof define === 'function' && define.amd ? define(['exports'], factory) :
(factory((global.Redux = {})));
}(this, (function (exports) { 'use strict';

function symbolObservablePonyfill(root) {
    var result;
    var Symbol = root.Symbol;

    if (typeof Symbol === 'function') {
        if (Symbol.observable) {
            result = Symbol.observable;
        } else {
            result = Symbol('observable');
            Symbol.observable = result;
        }
    } else {
        result = '@@observable';
    }

    return result;
}

/* global window */

var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = symbolObservablePonyfill(root);

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function');
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected the listener to be a function.');
    }

    if (isDispatching) {
      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[result] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[result] = observable, _ref2;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionDescription = actionType && "action \"" + String(actionType) + "\"" || 'an action';
  return "Given " + actionDescription + ", reducer \"" + key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error("Reducer \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error("Reducer \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle " + ActionTypes.INIT + " or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers);

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? 'null' : typeof actionCreators) + ". " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error("Dispatching while constructing your middleware is not allowed. " + "Other middleware would not be applied to this dispatch.");
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread({}, store, {
        dispatch: _dispatch
      });
    };
  };
}

exports.createStore = createStore;
exports.combineReducers = combineReducers;
exports.bindActionCreators = bindActionCreators;
exports.applyMiddleware = applyMiddleware;
exports.compose = compose;
exports.__DO_NOT_USE__ActionTypes = ActionTypes;

Object.defineProperty(exports, '__esModule', { value: true });

})));;

/* namespace */
var rm = rm || {};
/* globals document, window */
rm.globals = {

	// cache global dom elements here...
	DOM: {
		doc: $(document),
		html: $('html'),
		body: $('body'),
		window: $(window),
		header: $('#header'),
		main: $('.main'),
		footer: $('#footer')
	},
	SCREENWIDTH: window.innerWidth, // jshint ignore:line
	SCREENSIZES: {
		screenPhone : 480,
		screenTablet : 768,
		screenDesktop : 992,
		screenLargeDesktop : 1200
	},
  logics:{
    //this can be used to add some logics from any where
  }
};
// todo: combine this with the other "load, resize" events in js/src/table.js
/* global events */  // jshint ignore:line
$(window).on('load resize', function(){ // jshint ignore:line
	rm.globals.SCREENWIDTH = window.innerWidth; // jshint ignore:line
});
rm.calc = rm.calc || (function(moment){

  'use strict';

  return {
    ageAndRange: rtn_ageAndRange(),
    bmi: bmi
  };

  function rtn_ageAndRange () {
    var ageRangeMap = {
      lte2: 'lte02',
      lte3: 'lte03',
      gte2lte20: 'gte02lte20'
    };

    return function (date, frmDate) {
      // NOTE:
      // For Firefox, Date needs to be converted to following Format:
      // as the algorithm is diff. to the one in Chrome
      // e.g. "Apr 9, 1999"
      var _date = date.split('-'),
          _targetDate = new Date(_date[1] +  ' ' + _date[0] + ', ' + _date[2]),
          _frmDate = frmDate.split('-'),
          _refDate = new Date(_frmDate[1] +  ' ' + _frmDate[0] + ', ' + _frmDate[2]),
          _total = frmDate ? moment(_refDate) : moment(),
          yrs = Math.abs(_total.diff(_targetDate, 'days')/365),
          mth = Math.abs(_total.diff(_targetDate, 'months')),
          dataAgeCat = [];

      if (yrs <= 2) dataAgeCat.push(ageRangeMap.lte2);
      if (yrs <= 3) dataAgeCat.push(ageRangeMap.lte3);
      if (yrs >=2 && yrs <= 20 ) dataAgeCat.push(ageRangeMap.gte2lte20);

      return {
        asYrs: Math.floor(yrs),
        asMth: mth,
        range: dataAgeCat.length ? dataAgeCat.join(',') : ''
      };
    };
  }

  function bmi (weight, height) {
    var bmiVal;

    if (height && weight) {
        bmiVal = (weight/Math.pow(height, 2)).toFixed(1);
    }

    return bmiVal ? bmiVal : '';
  }

})(window.moment);
/**
 * ----------------------------------------------------------------
 * Purpose
 * ----------------------------------------------------------------
 * Disable interaction of elements including their children based on a flag on <body>
 *
 *
 * ----------------------------------------------------------------
 * Usage/Principle
 * ----------------------------------------------------------------
 * 1. Dev setup the selector (for elements you want to disable its interaction) in "rm.readOnlyMode.config" function
 *    and/or
 *    apply a class "js-readonly__elem" to the element you want to disable
 *
 * 2. When the PCEHR system is in maintainence, a flag (a body class 'js-readonly') will be passed and
 *    present in <body>
 *
 * 3. The pointer events of All elements (specified in step 1) which exist in the page will be set to none
 *
 *
 * ----------------------------------------------------------------
 * Note
 * ----------------------------------------------------------------
 * - JS fallback of disabling "click" event on element or element container (via event delegation) are NOT
 *   possible due to existing event handlers preventing events from being fired, for instance:
 *     $elem.on('click', '*', function(){});
 *     or
 *     $elem.click(function(){});
 *
 *   Removing the e.stopPropagation() or e.stopImmediatePropagation() will cause existing JS Logic to stop working
 *
 * - This is a pure JS solution instead of identifiable by a common class in HTML (e.g. 'js-readonly__elem')
 *   is primarily for reducing the amount of maintainence in Backend/Dev
 */

rm.readOnlyMode = rm.readOnlyMode || (function () {

  'use strict';

  /* Namespace constants for selector, class, event etc */
  var NS = {
    cls: {
      bodyFlag: 'js-readonly'
    },
    slr: {
      disabledElem: '.js-readonly__elem',
      formElem: 'input, textarea, button, select, meter, progress, keygen, output'
    },
    css: {
      noEvt: 'pointer-events: none !important'  // override any existing css !important
    }
  };

  /* Returned API */
  return {
    state: {
      isReadOnly: false
    },

    /* General initialization of disabling pointer-events for pred-defined elements */
    init: function () {
      var $initTarget;

      // Exit if <body> does not have 'readonly-mode' class
      if (!this.isReadOnlyMode()) return;

      // Disable elements from receiving any events by setting inline css
      $initTarget = $(NS.slr.disabledElem).add($(this.config()));
      this.disableElem($initTarget);
    },

    isReadOnlyMode: function () {
      if (rm.globals.DOM.body.hasClass(NS.cls.bodyFlag)) {
        this.state.isReadOnly = true;
      }
      return this.state.isReadOnly;
    },

    /* Disable pointer-events for all eas well as form elements by setting inline style
     * - includes accessibility
     * - can be run separately by passing $elem
     */
    disableElem: function ($elem) {
      if (!this.state.isReadOnly) return;
      $elem
        .css('cssText', NS.css.noEvt)
        .attr('aria-readonly', true)
        .filter(NS.slr.formElem)
        .attr('aria-disabled', true)
        .prop('disabled', true);
    },

    /* Configure & return an array of selector (whose element events will be disabled)
     * - only intended for HOTFIX use, common class "js-readonly__elem" should be added to elements during Integration */
    config: function () {
      return [
        // Example: Page - Personal Health Summary
        // '.toolbar-nav .btn__remove',
        // '#reaction-table > tbody, .js-add-reaction-btn',
        // '#Medicine-table > tbody, .js-add-medication-btn'

        // Page - ...
      ].join(', ');
    },

  };

})();
/**
 * ----------------------------------------------------------------
 * Purpose
 * ----------------------------------------------------------------
 * - Show/Hide the notification based on flag passed, e.g. read only flag
 * - Notification is shown by default if one of the trigger flags is true
 * - Always show in Desktop while it can be shown/hidden in Mobile depending if User dimisses it
 *
 *
 * ----------------------------------------------------------------
 * Usage
 * ----------------------------------------------------------------
 * 1. In main.js:
 *   rm.topNotification.init();
 *
 *
 * ----------------------------------------------------------------
 * Example - Show the read-only notification (Assuming rm.topNotification is already initialized in main.js)
 * ----------------------------------------------------------------
 * 1. In Dev,
 * - Define the notification Icon, e.g. <span class="icon-error"></span>
 * - Define the msg, e.g. <p>lorem</p>
 * - Define the notification type, e.g. data-notification-type="readonly"
 *
 * 2. In CSS, set the border color for the notification
 * e.g. [data-notification-type="readonly"] { border: 1px solid $yellow; }
 *
 * 3. In your Js, Set and show the notification when condition matches
 * if (rm.readOnlyMode.state.isReadOnly) {                // required - check condition to trigger
 *   rm.topNotification.show(true);                       // required
 * }
 *
 *
 * ----------------------------------------------------------------
 * Note
 * ----------------------------------------------------------------
 */

rm.topNotification = rm.topNotification || (function (Unison) {

  'use strict';

  var NS = {
    slr: {
      wrap: '#top-notification',
      dismissBtn: '.top-notification__dismiss',
    },
    evt: {
      toggle: 'top-notification.toggle',
    }
  };

  var Api = {
    $cache: {
      wrap: $(NS.slr.wrap),
      dismissBtn: $(NS.slr.dismissBtn)
    },

    state: {
      isActive: false,
      isVisible: false,
      isVisibleInMobile: false,
      isDesktopScreen: null
    },

    init: function () {
      // 1. Exit if Notification element doesn't exists
      if (!this.$cache.wrap.length || !this._getTriggerCond()) return;

      // 2. Activate the Notification, if activated:
      // - it cannot be turned off in desktop (by UX)
      // - it is visible in both Mobile and Desktop
      this.state.isActive = true;
      this.state.isVisibleInMobile = true;

      // 3. Bind Common Events
      this._bindDismissEvt()._bindBpEvt();
    },

    /* Show/Hide the notification wrapper and update the accessibility state*/
    show: function (doShow) {
      // Update the mobile visibility state if screen mode is Mobile
      // - for Mobile it can be switched on/off
      // - for Desktop it is always on (unless manually turned off)
      if (!this.state.isDesktopScreen) {
        this.state.isVisibleInMobile = doShow;
      }

      // Common update
      this.state.isVisible = doShow;
      this.$cache.wrap
        [doShow ? 'removeClass' : 'addClass']('hidden')
        .attr('aria-hidden', doShow ? false : true)
        .trigger(NS.evt.toggle);
    },

    /* Get Namespace (used by external js module) */
    getNS: function () { return NS; },

    /* Config Conditions which will allow triggerring the Notification
     * @return {boolean}  true if one of the conditions is true
     *                    e.g. rm.readOnlyMode.state.isReadOnly || rm.systemError.state.isError
     */
    _getTriggerCond: function () {
      return rm.readOnlyMode.state.isReadOnly;
    },

    /* Setup Event handler when BP changes */
    _bindBpEvt: function () {
      Unison.on('change', function (bp) {
        var isDesktopScreen = /(sm)|(md)|(lg)/.test(bp.name),
            isScreenSwitched = Api.state.isDesktopScreen !== isDesktopScreen;

        // 1. Set the screen state (required especially at beginning)
        Api.state.isDesktopScreen = isDesktopScreen;

        // 2. Update the Notification visibility
        // - Case 1: If Screen is not switch btw Desktop & Mobile, do nothing/maintain the states
        if (!isScreenSwitched) return;

        // - Case 2: If Screen is switched to Desktop mode, always show the Notification
        if (isDesktopScreen) {
          Api.show(true);

        // - Case 3: If Screen is switched to Mobile mode, Notification will appear depending on the previous visible state in mobile
        } else {
          Api.show(Api.state.isVisibleInMobile ? true : false);
        }

        // 3. Trigger an 'complete' event so that other modules can check it states
        Api.$cache.wrap.trigger(NS.evt.toggle);
      });

      return this;
    },

    /* Setup Event handler when Dimiss button is clicked */
    _bindDismissEvt: function () {
      this.$cache.dismissBtn.click(function(){
        // Close the notification (which include triggering event broadcase)
        Api.show(false);
      });

      return this;
    }
  };

  return Api;

})(window.Unison);

/* dom ready */
/*
 * Example Usage:
 * ---------------------------------
 * rm.domReady.done(function(){
 *    'use strict';
 *    // backend logic
 * });
 */
rm.domReady = rm.domReady || (function () {
  'use strict';
  return $.Deferred();
})();

/* globals Unison */
rm.popovers = (function() {
  'use strict';

  var poIconSelector = '[data-toggle="popover"]',
      poTextSelector = '.popover[role="tooltip"]',
      poLinks = '.popover-with-links',
      poWrapper = '.popover-wrap',
      $body = rm.globals.DOM.body;

  function initialize () {
    
    var counterFlag = 0;
    var shiftKey;
    
    var $popovers = $(poIconSelector).not(poLinks);

    if (!$popovers.length) return false;
    
    //Popover content reading twice fixed
    if($('.po-info-container').length > 0) {
      $('.po-info-container').remove();
    }
    
    var poInfoContainer =  $('<div class="hidden po-info-container"></div>');
    poInfoContainer.appendTo(document.body);
    
    $popovers.each(function(i, el) {
      var poDesc = $('<div class="hidden" id="po-description-' + i + '"></div>').html($(el).attr('data-content'));
      poDesc.appendTo(poInfoContainer);
      $(el).attr('data-id', 'po-description-' + i);
      $(el).attr('aria-describedby', 'po-description-' + i);
    });

    // 1. Bind "focus" (Desktop & Mobile) and "hover" (Desktop only) Events:
    $popovers.popover({
      html: true,
      trigger: 'focus hover',
      placement: 'bottom',
      // container: 'body', //ensures nice wide popover when text is long enough
      template: '<div class="popover" role="tooltip"><div class="arrow"></div><div class="popover-content"></div></div>' //remove popover title, we wont be using titles
    }).on('inserted.bs.popover hidden.bs.popover', function() {
      $(this).attr('aria-describedby', $(this).attr('data-id'));
    });
    
    //initialize popover with linkS
    
    var focusTrigger = false;
    
    var popoverLinks = $(poLinks);
    popoverLinks.wrap('<span class="' + poWrapper.replace('.', '') + '"></span>');
    
    popoverLinks.each(function(i, el) {
      var poDesc = $('<div class="hidden" id="poLinks-description-' + i + '"></div>').html($(el).attr('data-content'));
      poDesc.appendTo(poInfoContainer);
      $(el).attr('data-id', 'poLinks-description-' + i);
      $(el).attr('aria-describedby', 'poLinks-description-' + i);
    });
    
    popoverLinks.popover({
      html: true,
      animation: false,
      trigger: 'manual',
      placement: 'bottom',
      // container: 'body', //ensures nice wide popover when text is long enough
      template: '<div class="popover" role="tooltip"><div class="arrow"></div><div class="popover-content"></div></div>' //remove popover title, we wont be using titles
    }).on('inserted.bs.popover hidden.bs.popover', function() {
      $(this).attr('aria-describedby', $(this).attr('data-id'));
    }).on('focus', function() {
      focusTrigger = true;
      $(this).popover('show');
    }).on('blur', function() {
      $(this).popover('hide');
    }).on('hidden.bs.popover', function() {
      
      //reset globals
      counterFlag = 0;
      shiftKey = false;

    }).on('hide.bs.popover', function(e) {
          
      var focusable = 'a, area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]';
    
      var popOver = $('.popover');
      
      popOver.find('a').each(function(i, el) {
        if(typeof $(el).attr('href') !== 'string') {
          $(el).attr('tabindex','0').attr('type','button');
        }
      });
      
      var popoverSource = $(this);
      var activeEls = popOver.find(focusable).not(':hidden');
      var nextEl;
      
      popOver.attr('role', 'tooltip');
      
      if(activeEls.length !== 0) {
        if(shiftKey) { //if shiftTab will deal with this later
          if(counterFlag > 0) {
            e.preventDefault();
            counterFlag--;
            
            if(counterFlag > 1) {
              popOver.attr('role','presentation');
            } else {
              popOver.attr('role','tooltip');
            }
          }
          
        } else {
          if(counterFlag !== activeEls.length) {
            nextEl = $(activeEls[counterFlag]);
            counterFlag++;
            popOver.attr('role','presentation');
          }
        }
      }
      
      if(nextEl && focusTrigger) {
        e.preventDefault();

        nextEl
          .focus()
          .on('blur', function() {
            popoverSource.popover('hide');
          });
      }
      
    });
    
    var popoverWrap = $(poWrapper);
    
    popoverWrap.hover(function() {
      focusTrigger = false;
      $(this).find(poLinks).popover('show');
    }, function() {
      $(this).find(poLinks).popover('hide');
    });
    
    $(document).on('keydown keypress', function(event) {
      shiftKey = event.shiftKey;
    });

    // 2. Bind "touchstart" Event (Mobile only)..
    $body.on('touchstart', function (e) {
     if($(e.target).hasClass('icon icon--sm icon--info')){
        e.stopImmediatePropagation(); 
        e.stopPropagation(); 
      }
      var $tgt = $(e.target),
          isPopoverIcon = $tgt.filter(poIconSelector).length,
          isPopoverText = $tgt.filter(poTextSelector).length || $tgt.parents(poTextSelector).length;

      if (isPopoverText) return;

      // is Popover Icon - toggle show/hide
      if (isPopoverIcon) {
        $tgt.popover(isPopoverOn($tgt) ? 'hide' : 'show');

      // is not Popover icon - dismiss existing tooltip in the page
      } else {
        $popovers.each(function (idx) {
          $popovers.eq(idx).popover('hide');
        });
      }
    });
    
    $popovers.on('focus', function() {
      if(0 !== $(this).parents('.legend:first').length) {
        var legendElement = $(this).parents('fieldset').first().find('legend');
        if(legendElement.hasClass('sr-only')) legendElement.addClass('hidden'); 
      }
    }).on('blur', function() {
      if(0 !== $(this).parents('.legend:first').length) {
        var legendElement = $(this).parents('fieldset').first().find('legend');
        if(legendElement.hasClass('sr-only')) legendElement.removeClass('hidden'); 
      }
    });
  }

  function isPopoverOn($popover) {
    return $popover.next(poTextSelector).length;
  }

  return {
    init: initialize,
    isPopoverOn: isPopoverOn
  };

}());

/**
 * ----------------------------------------------------------------
 * Purpose
 * ----------------------------------------------------------------
 *   - Custom Sorting for multiple "row" alike elements
 *     (similar to sorting multiple "columns" in a table)
 *
 *   - Allows "Rows" Sorting based on either text or attribute value
 *     while the value can be directly rest inside the "row" itself or its children
 *
 *
 * ----------------------------------------------------------------
 * Dependency
 * ----------------------------------------------------------------
 *   - $.fn.sortElements plugin
 *
 *
 * ----------------------------------------------------------------
 * APIs
 * ----------------------------------------------------------------
 * - rm.tbPreSort.config = [ <object_sortConfig-1>, ..., <object_sortConfig-N> ]
 *
 *   @parameters:
 *   <object_sortConfig-1> = {
 *     bodyCls:    <string_body-class>    // (required) the custom sort will run if the body class matches
 *     rules: [                           // >=1 sorting rule for the tables in a page
 *       <object_sort-rule-1>,            // refer to below for example
 *       ... ,
 *       <object_sort-rule-N>
 *     ]
 *
 *   <object_sort-rule> = {
 *     rowCtx:  [                         // (optional) Array of >=1 container selectors of elements
 *       <string_container-seletor-1>,    // container selector of the element which contains a set of <tr>
 *       ...,                                - e.g. "#table-1 tbody", "#table-2 tbody"
 *       <string_container-seletor-N>        - if the selector has more than 1 match, then it will perform the
 *     ],                                      sorting for the <tr> in each container
 *
 *     rows: '> tbody > tr',              // (required) this is the rows you want to sort
 *                                           - it is ALWAYS relative to the "rowCtx" above
 *                                           i.e. each element (not selector) in rowCtx contains >=2 rows
 *
 *     sortCfg:  <array_sort-config>      // (required) refer to rm.tbPreSort.sortRows for details on the config object
 *   }
 *
 *   }
 *
 * - rm.tbPreSort.sortRows
 *    + Usage:
 *       - 1) BEFORE DataTable initialization (if any) & AFTER $.fn.sortElements plugin are loaded
 *       - 2) In JS:
 *           rm.table.sortRows(<jQuery-elem_collection>, <sort-config-option>);
 *
 *           @parameters:
 *           <jQuery-elem_collection>         // a jQuery list collection of elements, e.g. <li>, <tr> etc
 *                                               - these elements must be siblings to each other
 *                                               - must be more than one element (else sort will not run)
 *                                               - e.g. $('tr'),  $('li')
 *
 *           <sort-config-option> = [         // required - provide >=1 option for sorting
 *             <obj_sort-config-1>,              - it will sort based on the 1st sort config obj,
 *             ...,                              - then the 2nd (if 1st set of values turned out be the same)
 *             <obj_sort-config-N>               - then the 3rd (if 2nd set are the same)... and so on
 *           ]
 *
 *           <obj_sort-config> = {
 *             slr: <string_css-selector>,    // required - selector containingg directly the text
 *                                               - must contain pure text
 *                                               - should not contain <tag>
 *             attr: <string_attribute-name)  // optional - name of the attribute
 *                                               - by def, if it's not specified, it gets html of an element
 *                                               - if it's specified, it gets value of the attribute
 *             dscFlag: <string_keyword>      // optional - if the compared string contains this keyword, it will be sorted behind
 *                                               - e.g. 1st string is "Generic Name Unavailable" while keyword is "unavailable"; 2nd string is "zZZZZ"
 *                                                      the 1st string will be placed behind 2nd string
 *             isAsc: <boolean>,              // required
 *                                               - true: sort by ascending
 *                                               - false: sort by desceding
 *             isDate: <boolean>              // optional - ONLY specify when the text is an date
 *           }                                   - e.g. "20-Nov-2016", "25-Apr-2014 23:10:14"
 *
 *    + Example (js):
 *      var $tr = $('#prescription-bn > tbody > tr > td > table:nth-child(1) > tbody > tr'),
 *          sortConfig = [
 *            { slr: 'td:nth-child(3) strong', isAsc: true },
 *            { slr: 'td:nth-child(1) .cell', isAsc: false, isDate: true }
 *            { slr: 'td:nth-child(5) .cell', attr: 'data-id', isAsc: true }
 *
 *      rm.table.sortRows($tr, sortConfig);
 *
 */
rm.tbPreSort = rm.tbPreSort || (function(){

  'use strict';

  var Module = {
    init: init,
    rows: create_rowsFn(),
    config: create_config()
  };

  return Module;

  //// Main - Sorting all rows in the pages
  function init () {
    var $body = rm.globals.DOM.body;

    this.config.forEach(function(pageConfig, cfgIdx){
      // Proceed to next config if the page class is not found
      if (!pageConfig.bodyCls || !pageConfig.rules.length || !$body.hasClass(pageConfig.bodyCls)) return;

      // Loop thru the rules for each page class
      pageConfig.rules.forEach(function(rule){
        var selector = rule.rowCtx.join(','),
            $rptCtx = $(selector);

        if (!$rptCtx.length) return console.warn('There is no element found for $("' + selector + '")');

        $.each($rptCtx, function (idx) {
          var $rows = $rptCtx.eq(idx).find(rule.rows);
          if ($rows.length >=2) Module.rows($rows, rule.sortCfg);
        });
      });
    });
  }

  //// Perform a custom multiple "columns" sort like in table
  function create_rowsFn () {
    return function ($lists, sortConfig) {
      if ($lists.length < 2 || !sortConfig.length) return;

      $lists.sortElements(function (a, b) {
        return _sort($(a), $(b), sortConfig, 0);
      });
    };

    function _sort ($a, $b, config, currIdx) {
      var currCfg =  config[currIdx],
          tgtSlr = currCfg.slr,
          attr = currCfg.attr,
          isAsc = currCfg.isAsc,
          isDate = currCfg.isDate,

          // if selector is not defined in the config, use itself as the jquery elem
          $aChild = tgtSlr ? $a.find(tgtSlr) : $a,
          $bChild = tgtSlr ? $b.find(tgtSlr) : $b,

          // value
          aText = _getVal($a, $aChild, attr),
          bText = _getVal($b, $bChild, attr),

          // other
          dscFlag = currCfg.dscFlag,
          aTime, bTime, isValidDate;

      // Check if text are empty
      // Case-1: Don't Sort
      if (!aText && !bText)
        return 0;

      // Check if result are Same & if sortConfigAray has more config items,
      // - TRUE
      // Case-2: Proceed to next fallback sorting column (if config exists) or Don't Sort (0)
      if (aText === bText)
        return config[currIdx + 1] ? _sort($a, $b, config, currIdx + 1) : 0;

      // - FALSE: Process the Date (if any) & Proceed with the Sorting
      if (isDate) {
/*        // new code to make it work for FF, IE etc, else the format "10-Oct-1999" argument wont work for new Date()
        aTime = aText.split('-');
        aTime = new Date(aTime[1] +  ' ' + aTime[0] + ', ' + aTime[2]);
        bTime = bText.split('-');
        bTime = new Date(bTime[1] +  ' ' + bTime[0] + ', ' + bTime[2]);*/

        // Check if the no. of ms is valid
        aTime = parseFloat(aText, 10);
        bTime = parseFloat(bText, 10);
        isValidDate = !isNaN(aTime) && !isNaN(bTime);
      }

      // Case-3: If there is a descendent flag, sort the item behind
      if (dscFlag) {
        if (aText.toLowerCase().indexOf(dscFlag) !== -1) return 1;  // put it behind
        if (bText.toLowerCase().indexOf(dscFlag) !== -1) return -1;  // don't sort
      }

      // Case-4: Sorting Numbers or Text
      return ( isValidDate ? (aTime > bTime) : (aText > bText) ) ?
        (isAsc ? 1 : -1) :
        (isAsc ? -1 : 1) ;
    }

    function _getVal ($elm, $elmChild, attrName) {
      return $.trim(
        $elmChild.length ?
          ( !attrName ? $elmChild.html() : $elmChild.attr(attrName) ) :
          ( !attrName ? $elm.html() : $elm.attr(attrName) )
      );
    }
  }

  /* Create an array of sort configuration in each page */
  function create_config () {
    return [
      //// Page: Prescription Dispense View
      /// -- Note: no sorting for "Prescription" table (already done in backend)
      {
        bodyCls:  'prescriptions',
        rules: [
          // -- Sort Main Tables in all Grouped Tables
          {
            rowCtx:  [
              '#prescription-gn',
              '#prescription-pbs',
              '#prescription-bn'
            ],
            rows:     '.table--nested-parent',
            sortCfg:  [
              { slr: '> thead > tr > th:nth-child(1) .cell', isAsc: true, dscFlag: 'unavailable' }
            ]
          },
          // -- Sort the <tr> in all Grouped Tables
          {
            rowCtx:  [
              '#prescription-gn .table--nested-parent',
              '#prescription-pbs .table--nested-parent',
              '#prescription-bn .table--nested-parent',
            ],
            rows:     '> tbody > tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true },
              { slr: 'td:nth-child(3) .cell strong', isAsc: true },
            ]
          },
          // -- Sort the <tr> in NoGroup Table (falt)
          {
            rowCtx:  [ '#prescription-ng' ],
            rows:     '> tbody > tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true },
              { slr: 'td:nth-child(3) strong', isAsc: true },
            ]
          }
        ]
      },

      //// Page: Diagnostic Imaging
      {
        bodyCls:  'diagnostic-imaging',
        rules: [
          // "No-Grouping" Table (flat)
          {
            rowCtx:  [ '#diagnostic-ng' ],
            rows:     '> tbody > tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true },
              { slr: 'td:nth-child(5)', isAsc: true },
              { slr: 'td:nth-child(6)', isAsc: true }
            ]
          },
          // "DI Report" Table (1 lvl)
          // -- Sort table rows
          {
            rowCtx:  [ '#diagnostic-dir .table--nested-parent > tbody' ],
            rows:     'tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true },
              { slr: 'td:nth-child(5) .cell', isAsc: true },
              { slr: 'td:nth-child(6) .cell', isAsc: true }
            ]
          },

          // "DI Organization" & "Requesting Professional" Table (2 lvls)
          // -- Sort table rows (prior to 2nd lvl tables)
          {
            rowCtx:  [
              '#diagnostic-dio .table--nested-child > tbody',
              '#diagnostic-rp .table--nested-child > tbody',
            ],
            rows:     'tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true },
              { slr: 'td:nth-child(5) .cell', isAsc: true },
              { slr: 'td:nth-child(6) .cell', isAsc: true }
            ]
          },
          // -- Sort Main tables for "DI Org"
          {
            rowCtx:  [ '#diagnostic-dio' ],
            rows:     '.table--nested-parent',
            sortCfg:  [
              { slr: false, attr: 'data-sort', isAsc: true },
              { slr: '> tbody > tr:nth-child(1) .table--nested-child:nth-child(1) > tbody > tr:nth-child(1)', attr: 'data-sort-docid', isAsc: false }
            ]
          },
          // -- Sort Main Tables for "RP"
          {
            rowCtx:  [ '#diagnostic-rp' ],
            rows:     '.table--nested-parent',
            sortCfg:  [
              { slr: false, attr: 'data-sort', isAsc: true },
              { slr: '> tbody > tr:nth-child(1) .table--nested-child:nth-child(1) > tbody > tr:nth-child(1)', attr: 'data-sort-docid', isAsc: false }
            ]
          }
        ]
      },

      //// Page: Pathology Report
      {
        bodyCls:  'pathology',
        rules: [
          // "No Grouping" Table (flat)
          {
            rowCtx:  [ '#pathology-ng' ],
            rows:     'tbody > tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true  },
              { slr: 'td:nth-child(4)', isAsc: true },
              { slr: 'td:nth-child(5)', isAsc: true }
            ]
          },

          // "PR" Table (1 lvl)
          // -- Sort Table rows (prior to Nested Tables)
          {
            rowCtx:  [ '#pathology-pr .table--nested-parent > tbody' ],
            rows:     'tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true  },
              { slr: 'td:nth-child(4) .cell', isAsc: true },
              { slr: 'td:nth-child(5) .cell', isAsc: true }
            ]
          },
          // -- Sort Nested Tables
          {
            rowCtx:  [ '#pathology-pr' ],
            rows:     '.table--nested-parent',
            sortCfg:  [
              { slr: '> thead > tr:nth-child(1)', attr: 'data-sort-date', isAsc: false, isDate: true  }
            ]
          },

          // "PO" Table & "RP" Table
          // -- Sort table rows (prior to 2nd lvl tables)
          {
            rowCtx:  [
              '#pathology-po .table--nested-child > tbody',
              '#pathology-rp .table--nested-child > tbody'
            ],
            rows:     'tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true  },

              { slr: 'td:nth-child(4) .cell', isAsc: true },
              { slr: 'td:nth-child(5) .cell', isAsc: true }
            ]
          },
          // -- Sort Main tables for "PO" Table
          {
            rowCtx:  [ '#pathology-po' ],
            rows:     '.table--nested-parent',
            sortCfg:  [
              { slr: false, attr: 'data-sort', isAsc: true },
              { slr: '> tbody > tr:nth-child(1) .table--nested-child:nth-child(1) > tbody > tr:nth-child(1)', attr: 'data-sort-docid', isAsc: false }
            ]
          },
          // -- Sort Main tables for "RP" Table
          {
            rowCtx:  [ '#pathology-rp' ],
            rows:     '.table--nested-parent',
            sortCfg:  [
              { slr: false, attr: 'data-sort', isAsc: true },
              { slr: '> tbody > tr:nth-child(1) .table--nested-child:nth-child(1) > tbody > tr:nth-child(1)', attr: 'data-sort-docid', isAsc: false }
            ]
          }
        ]
      },

      //// Page: Growth Charts
      {
        bodyCls: 'page--growth-chart',
        rules: [
          {
            rowCtx:  [ '.table--base' ],
            rows:     '> tbody tr',
            sortCfg:  [
              { slr: false, attr: 'data-sort-date', isAsc: false, isDate: true  },
            ]
          }
        ]
      }
    ];
  }

})();
/**
 * The followings list out the main functionality/features of different types of tables
 *
 * ======================================
 * 1. Table Types
 * ======================================
 *   HTML Class
 *   ------------------------------------
 *   - Top lvl Table HTML
 *     <table class="table--base">                           // flat table
 *     or
 *     <table class="table--nested table--nested-single">    // 1 lvl of nested table
 *     or
 *     <table class="table--nested table--nested-multi">     // 2 lvls of nested tables
 *
 *   - 1st lvl of nested table
 *     <table class="table--nested-parent">
 *
 *   - 2nd lvl of nested table
 *     <table class="table--nested-child">
 *
 *
 *   For details, refer to Example Tables files below:
 *   ------------------------------------
 *   - table-prescription-ng.hbs              // flat table
 *   - table-prescription-pr.hbs              // 1 lvl of nested table
 *   - table-prescription-po.hbs              // 2 lvls of nested tables
 *   - table-prescription-rp.hbs              // 2 lvls of nested tables
 *
 *
 *
 * ======================================
 * 2. Datatable & Pagination
 * ======================================
 *   Initialize without Pagination
 *   ------------------------------------
 *   <table class="js-datatable">             // notice "--pagination" modifier
 *
 *
 *   Initialize with Pagination
 *   ------------------------------------
 *   <table
 *     class="js-datatable js-datatable--pagination"
 *     data-page-length="10">                 // "data-page-length" sets the pagination total per page
 *
 *   *Gotcha
 *   ------------------------------------
 *   Datatable pagination will remove all <tr> from DOM & cache them, therefore if there is JS manipulating the rows,
 *   u won't find it, there is one way to retrive it after DataTable is initialized, i.e:
 *   $tb.DataTable().rows().nodes().to$();
 *
 * ======================================
 * 3. Table Header
 * ======================================
 *   Create a subheader from <th> in <thead> (show in Mobile only + hidden in Desktop)
 *   ------------------------------------------------------------------------
  *  HTML:
 *   <table class="js-tb-rows-to-lists">
 *
 *   Notes:
 *   - which appends a <strong>text</strong> in each <td>
 *   - refer to "table-rows-to-lists.js" detail comments on top
 *
 *
 *   Faded Table Header for Nested Tables ONLY (as some <td>s are empty at different levels)
 *   ----------------------------------------------------------------------------------------
 *   HTML:
 *   <table class="table--nestedcollapsed">
 *
 *   Notes:
 *   - this is pure css solution achieved via "data-fade-lvl" attribute
 *   - Search in "_table.scss" for details on how "table--nestedcollapsed" & data-fade-lvl" work together
 *
 *
 *
 * ======================================
 * 4. Table Row
 * ======================================
 *   When hoevering a row, similar siblings rows with same "data-docid" attribute value will get highlighted
 *   ------------------------------------------------
 *   HTML:
 *   <table class="js-table-multihover">
 *
 *   JavaScript (related method in table.js):
 *   table.initTrHover();
 *
 *
 *
 * ======================================
 * 5. Expand/Collapse Table Rows
 * ======================================
 *   Clicking <tr> or Arrow in <tr> to expand nested tables/table rows (via BT Accordion Collapse)
 *   -----------------------------------------------------------------------
 *   HTML:
 *   For scenario where there is 1x nested tables:
 *   .table--nested-parent > tbody
 *   e.g. <tbody data-toggle="collapse" data-target="{{selectorOfElementToShow}}">
 *   OR
 *   For Sencario where there are 2 lvl nested tables  (
 *   .table--nested-parent > tbody > tr:nth-child(1)        // 1st lvl of table
 *   .table--nested-child > tbody                           // 2nd lvl table
 *
 *   JavaScript (related method in table.js):
 *   table.initCollapseAndExpand();
 *
 *
 *   Clicking <tr> or Arrow in <tr> to expand ALL nested tables/table rows (IN ADDITION to bootstrap )
 *   -----------------------------------------------------------------------
 *   HTML:
 *   <tr class="js-table-row-toggle">
 *
 *   JS:
 *   table.initCollapseAndExpand()
 *
 *
 *   Expand/Collapse All Button
 *   -----------------------------------------------------------------------
 *   HTML:
 *   <button class="js-toggle-nested-table">
 *
 *   JS:
 *   table.initCollapseAndExpand()
 *
 *
 *   Show/Hide <td> from the 4th index (Mobile only)
 *   -----------------------------------------------------------------------
 *   js-tb-cell-detail-toggle         // refer to "table-m-cell-detail-toggle.js" for detailed comments
 *                                       page example usage: "table-diagnostic-image-ng.hbs"
 *
 *
 *
 * ======================================
 * 6. Sorting
 * ======================================
 *   Sorting via <th> and asc/desc arrows in <th> so that it can be manually sorted
 *   ------------------------------------------------
 *   HTML/Element:
 *   <table>
 *   .js-table--sorting
 *   .js-table--asc | .js-table--desc        // used with "data-sort" attribute
 *                                              data-sort applied to nested <table>?
 *   <th>
 *   - <th class="sorting">                  // Arrows + Sortable
 *   - <th class="table_colnosort">          // No Arrows + Not Sortable
 *
 *   Relevant JS Code:
 *   table.initSort                          // append the arrows and bind events
 *
 *
 *   Sort a specific column by DEFAULT (used when Pagination with DataTable)
 *   ------------------------------------------------
 *   HTML:
 *   <th class="table__colnosort">           // no sorting (for Datatable only)
 *
 *   JS:
 *   table.initDataTable
 *   table.configDataTable
 *   hp_getDtPgnSetting                      // helper fn for DataTable with pagination
 *
 *
 *
 *   Pre-Sorting all tables rows (incl. rows in nested tables)
 *   ------------------------------------------------
 *   - refer to "table-presort.js" for instructions
 *
 *
 *   Sorting option Dropdown (Mobile only)
 *   ------------------------------------------------
 *   - refer to "table-m-sort.js" for instructions
 *
 *
 *   Default Sorting (via DataTable)
 *   ------------------------------------------------------------------
 *     CASE 1: For Sorting the table rows in No-Grouping/Non-nested Table only
 *     In JS:
 *     $table.DataTable().order([0, 'desc']).draw();
 *     or
 *     $table.DataTable().order([0, 'asc']).draw();
 *
 *
 *     CASE 2: For Sorting the table rows in Grouping/Nested Table only
 *     In HTML:
 *     1. Apply classes "js-table--sorting" and "js-table--desc"/"js-table--asc" to the top/1st lvl <table>
 *     2. Apply attribute ' data-sort="<value>" ' to the 2nd lvl <table> (i.e. 1st nested table)
 *        (Note: this is via the $plugin called "sortElements")
 *
 *     e.g. Sort the 2 nested tables by Date in Descending order (i.e. Most recent 1st)
 *     <table class="js-table--sorting js-table--desc">
 *     <thead>...</thead>
 *     <tbody>
 *       <tr>
 *         <td>
 *           <!-- This is the 2nd lvl table (i.e. 1st nested table) -->
 *           <table width="100%" class="table--nested-parent" data-sort="2014-04-25">
 *           <table width="100%" class="table--nested-parent" data-sort="2014-03-25">
 *         </td>
 *
 */
rm.table = rm.table || (function(moment) {

  'use strict';

  var injected = false,        // For "load, resize" evt involved in toggleing btw desktop/mobile table UI
      $body = rm.globals.DOM.body,
      $window = rm.globals.DOM.window,
      dtPgnSetting = hp_getDtPgnSetting(),      // datatable
      elemSelector = {
        // DataTable Init Trigger
        tbDt:             '.js-datatable',

        html:             'html',
        body:             'body',
        currTb:           '.displaycontent__block:not(.hidden) > table',
        thWpr:            '.dataTables_wrapper',
        tb:               '.table--nested',
        tbHead:           '.table--nested-parent > thead',
        tbRow:            '.js-table-row-toggle',
        tbRowArrow:       '.icon',
        hidden:           '.hidden',
        thSorting:        '.js-table--sorting th.sorting',
        thSortAsc:        '.js-table--sorting th.sorting_asc',
        thSortDesc:       '.js-table--sorting th.sorting_desc',
        tbDiNg:           '#diagnostic-ng',
        tbPrescNg:        '#prescription-ng',
        tbPathNg:         '#pathology-ng',
        tbDischarge:      '#discharge-summary-table',
        tbMgtDocAcc:      '#manage-document-access-table',
        tbAccH:           '#action-access-history-table',
        tbMHover:         '.js-table-multihover',
        tbPgBtn:          '.paginate_button',
        stkHeader:        '.sticky--header'
      },
      elemHtml = {
        clpsAll:          'Collapse All',
        expdAll:          'Expand All',
        clpsTitle:        'click to collapse',
        expdTitle:        'click to expand'
      },
      elemClass = {
        // DataTable
        tbDtWithPgn:      'js-datatable--pagination',

        upArrow:          'icon--chevron-up',
        dnArrow:          'icon--chevron-down',
        fadedColHeader:   'table--nestedcollapsed',
        expdAllBtn:       'tb--expd',
      },
      msg = {
        // DataTable
        dt: {
          clsWarn: 'There should be only 1 datatable related class, e.g. either "js-datatable-base" or "js-datatable--pagination"'
        }
      };


  /* -- METHODS -- */
  //// MAIN
  function initialize () {
    // DataTable (via DataTable plugin)
    this.configDataTable();
    this.initDataTable();

    // Sorting (via $.fn.sortElements plugin)
    this.updateNestedTbSortState();
    this.initSort();

    // Other
    this.initCollapseAndExpand();
    this.initTrHover();
    this.enableTabIdxForTrWithDataHref();

    // Scroll to table top when the user clicks pagination
    this.paginateScroll();

  }

  /**
   * SCROLL TO THE TOP OF THE DATATABLE
   *
   * - this method approach Carmen did is necessary
   * as the Pagination Wrapper is removed and rebuilt
   * by DataTable plugin , (i.e. NO ".paginate_button" exists)
   * therefore the "click" event is lost in transition therefore not fired
   *
   * - the Pagination Wrapper is not removed/rebuilt
   * ONLY when you click on a DIFFERENT pagination number
   * that's why clicking on the same pagination number
   * will work
   *
   * - Pagination Wrapper HTML Hierachy:
   *   <div>#DataTables_Table_0_paginate.dataTables_paginate.paging_simple_numbers
   *      <a>.paginate_button.previous    // prev button
   *      <span>
   *        <a>.paginate_button.current   // active pgn page num
   *        <a>.paginate_button           // non-active pgn page num
   *      <a>.paginate_button.next        // next button
   */
   function doScroll() {
    //  $('html, body').animate({  // jshint ignore:line
    //     scrollTop: $(this).closest('.dataTables_wrapper').offset().top  - $(elemSelector.stkHeader).height()
    //  }, 100); // jshint ignore:line
  }


  function paginateScroll() {
    var $dt = $(elemSelector.thWpr);

    if (!$dt.length) return;
    $(elemSelector.tbPgBtn).unbind('click touchstart', doScroll);
    $(elemSelector.tbPgBtn).bind('click touchstart', doScroll);
  }

  //// SHOW/HIDE DETAIL FOR TABLE ROWS
  function tableCollapse () {
    if ($('.js-table--collapsed').hasClass('js-table--headerless')) {

    } else {
      $('.js-table--collapsed').find('tr td').each(function(){
        if (rm.table.injected === false) {
          var th = $(this).closest('table').find('th').eq(this.cellIndex).text();
          $(this).prepend('<strong class="table--heading">'  + th + '</strong>');
        }
      });
      rm.table.tableHide();
    }
  }

  //// Mobile ONLY - Show all table cells in a <tr>
  function tableShow (eleParent) {
    if (typeof eleParent === 'undefined') {
      $('.js-table--collapsed td').removeAttr('style');
      $('.table--collapse').remove();
      $('.js-table--collapsed tbody tr').append('<td class="table--collapse"><a href="javascript:void(0)" class="js-table--hide collapse__link">Hide detail</a></td>');
    } else {
      eleParent.find('td').removeAttr('style');
      eleParent.find('.table--collapse').remove();
      eleParent.append('<td class="table--collapse"><a href="javascript:void(0)" class="js-table--hide collapse__link">Hide detail</a></td>');
    }
  }

  //// Mobile ONLY - Hide table cells starting from nth-child(4) in a <tr>
  function tableHide (eleParent) {
    if (typeof eleParent === 'undefined') {
      $('.js-table--collapsed td:not(:nth-child(1), :nth-child(2), :nth-child(3))').css('display', 'none');
      $('.table--collapse').remove();
      $('.js-table--accordion tr').append('<td class="table--collapse"><a href="javascript:void(0)" class="js-table--show collapse__link">Show detail</a></td>');
    } else {
      eleParent.find('td:not(:nth-child(1), :nth-child(2), :nth-child(3))').css('display', 'none');
      eleParent.find('.table--collapse').remove();
      eleParent.append('<td class="table--collapse"><a href="javascript:void(0)" class="js-table--show collapse__link">Show detail</a></td>');
    }
  }

  //// todo: check if this is needed
  function sortingDocument (eleSelect) {
    var dataSortElement = parseInt(eleSelect.find('option:selected').attr('data-sort-element'));
    var dataSortOrder = eleSelect.find('option:selected').attr('data-sort-order');
    var dateSortTarget = eleSelect.attr('data-sort-target');
    var oTable = $('#' + dateSortTarget).dataTable();
    oTable.fnSort([[dataSortElement, dataSortOrder]]);
    $('.table--heading').remove();
    rm.table.injected = false;
    rm.table.tableCollapse();
    rm.table.injected = true;
  }

  //// Common Config for DataTable (Prior to Init)
  function configDataTable () {
    // 1. Disable default sorting for all DataTables
    $.extend(true, $.fn.dataTable.defaults, {
      orderable: true,    // allow arrow sorting in general
      order: []           // don't do any default sorting
    });

    // 2. Config DataTable MomentJs Plugin so that it grabs the targeted date text from <td>
    $.fn.dataTable.moment = function (format, locale) {
      var types = $.fn.dataTable.ext.type;

      // Add type detection
      types.detect.unshift(function (d) {
        var momentTime = moment(hp_strip(d), format, locale, true);
        return momentTime.isValid() ? ('moment-' + format) : null;
      });

      // Add sorting method - use an integer for the sorting
      types.order['moment-' + format + '-pre'] = function (d) {
        return moment(hp_strip(d), format, locale, true).unix();
      };
    };

    // 3. Specify allowable date format to be filtered for Sorting
    // - multiple specification can be added, i.e. $.fn.dataTAble.moment can be called >=1 times
    //   if there are other date format not specified here, please add one by calling it n pass
    //   the specific date format, e.g. "DD, MM, YYYY"
    // - HH is for hours in 24 hours format; hh is for 12 hours format
    $.fn.dataTable.moment('DD-MMM-YYYY HH:mm:ss');
    $.fn.dataTable.moment('DD-MMM-YYYY');
  }

  //// Initialize DataTable
  function initDataTable ($tb) {
    // Custom initialization
    var $table = ($tb && $tb.jquery) ? $tb : $(elemSelector.tbDt);

    // With Pagination or Without Pagination (via 'js-datatable--pagination')
    $.each($table, function(tbIdx) {
      var $this = $table.eq(tbIdx),
          isDtBase = $this.hasClass(elemClass.tbDt),
          isDtWithPgn = $this.hasClass(elemClass.tbDtWithPgn),
          dataTable;

      if($this.attr('columnDefs')){
        dtPgnSetting.columnDefs = jQuery.parseJSON($this.attr('columnDefs'));
      }

      if($this.attr('data-default-sort')){
        dtPgnSetting.aaSorting = jQuery.parseJSON($this.attr('data-default-sort'));
      }

      if($this.attr('data-sZeroRecords')){
        dtPgnSetting.language.sZeroRecords = $this.attr('data-sZeroRecords');
      }


      dataTable = $this.DataTable(!isDtWithPgn ? {} : dtPgnSetting);

      dataTable.on('click', 'th', function(e) {
        e.preventDefault();
        var th = this;
        setTimeout(function(){
            //var info = dataTable.settings().aaSorting;
            if($this.attr('data-sort-order')){
                var sortOrder = jQuery.parseJSON($this.attr('data-sort-order'));
                var direction = $(th).hasClass('sorting_asc') ? 'asc' : 'desc';
                var idx = dataTable.column( th ).index();
                var currSortArr = sortOrder[idx];
                var currArr = [idx, direction];
                currSortArr.unshift(currArr);
                if(currSortArr !== undefined){
                  dataTable.order(sortOrder[idx]).draw();
                }
            }
        }, 100);
      });

      // new $.fn.dataTable.FixedHeader( dataTable );

      if (isDtBase && isDtWithPgn) { console.warn(msg.dt.clsWarn); }
    });

    //initialize accisibility fix here
    var targetDtWraper = $('.dataTables_wrapper');
    var selectWrapper = $('.selectpicker--accessibility-fix');

    if($(targetDtWraper).length !== 0 && $(selectWrapper).length !== 0) {

      $(targetDtWraper).attr('role', 'region');
      $(targetDtWraper).attr('aria-live', 'polite');

      $(selectWrapper).each(function(i, el) {
          $(el).attr('id', 'recordNumber-' + (i + 1))
            .attr('aria-controls', $(el).parents('.dataTables_wrapper:first').attr('id'));
      });
    }
  }

  //// Update the Sorting State in Nested Table <th>
  function updateNestedTbSortState () {
    $('.js-table-nested.js-table--sorting').each(function(){
      var $tb = $(this),
          $th = $tb.find('th.sorting'),
          isAsc = $tb.hasClass('js-table--asc'),
          isDesc = $tb.hasClass('js-table--desc');

      $th
        .removeClass('sorting')
        .addClass( isAsc ? 'sorting_asc' : (isDesc ? 'sorting_desc' : '') )
        .attr({
          'aria-label': 'Activate to sort column ' + (isAsc ? 'descending' : (isDesc ? 'ascending' : '')),
          'aria-sort':  isAsc ? 'ascending' : (isDesc ? 'descending' : '')
        });
    });
  }

  //// Initialize Sorting
  function initSort () {
    var sortTableID = '';

    // Add Sorting Icons to <th>
    $(elemSelector.thSorting).append('<i class="fa fa-sort"></i>');
    $(elemSelector.thSortAsc).append('<i class="fa fa-sort-asc"></i>');
    $(elemSelector.thSortDesc).append('<i class="fa fa-sort-desc"></i>');

    // Bind Events to <th> and Icons
    // NOTE: this will effect "table-m-sort.js" as it uses this event handlers
    $body.on('click keypress', '.js-table--sorting th.sorting', function(e) {
      if (e.which === 13 || e.which === 32 || e.type === 'click') {
        e.preventDefault();
        $(this).find('.fa').removeClass('fa-sort').addClass('fa-sort-asc');
        hp_collapseAllTbRows();
        hp_resetExpdAllBtn();
        rm.tbMobileSort.updateSortOptions();
      }
    });

    $body.on('click keypress', '.js-table--sorting th.sorting_asc', function(e) {
      if (e.which === 13 || e.which === 32 || e.type === 'click'){
        e.preventDefault();
        $(this).siblings('th').find('.fa').removeClass('fa-sort-desc fa-sort-asc').addClass('fa-sort');
        $(this).find('.fa').removeClass('fa-sort fa-sort-desc').addClass('fa-sort-asc');
        if ($(this).closest('.js-table--sorting').hasClass('table--nested')) {
          sortTableID = $(this).closest('.js-table-nested').attr('id');
          $(this)
            .removeClass('sorting_asc')
            .addClass('sorting_desc')
            .attr('aria-label', 'Activate to sort column ascending')
            .attr('aria-sort', 'descending');
          $(this).find('.fa').removeClass('fa-sort fa-sort-asc').addClass('fa-sort-desc');
          $('#'+sortTableID + ' .table--nested-parent').sortElements(function(a, b){
            return $(a).attr('data-sort') > $(b).attr('data-sort') ? -1 : 1;  // sort by desc
          });
        }
        hp_collapseAllTbRows();
        hp_resetExpdAllBtn();
        rm.tbMobileSort.updateSortOptions();
      }
    });

    $body.on('click keypress', '.js-table--sorting th.sorting_desc', function(e) {
      if (e.which === 13 || e.which === 32 || e.type === 'click'){
        e.preventDefault();
        $(this).siblings('th').find('.fa').removeClass('fa-sort-desc fa-sort-asc').addClass('fa-sort');
        $(this).find('.fa').removeClass('fa-sort fa-sort-asc').addClass('fa-sort-desc');
        if ($(this).closest('.js-table--sorting').hasClass('table--nested')) {
          sortTableID = $(this).closest('.js-table-nested').attr('id');
          $(this)
            .removeClass('sorting_desc')
            .addClass('sorting_asc')
            .attr('aria-label', 'Activate to sort column descending')
            .attr('aria-sort', 'aescending');
          $(this).find('.fa').removeClass('fa-sort fa-sort-desc').addClass('fa-sort-asc');
          $('#'+sortTableID + ' .table--nested-parent').sortElements(function(a, b){
            return $(a).attr('data-sort') > $(b).attr('data-sort') ? 1 : -1; // sort by asc
          });
        }
        hp_collapseAllTbRows();
        hp_resetExpdAllBtn();
        rm.tbMobileSort.updateSortOptions();
      }
    });
    
    //return the focus to the table header after sorting
    var isReOrder = false;
    
    $('.dataTable').DataTable().on('order.dt', function() {
      isReOrder = true;
    }).on('draw.dt', function(){
      
      if(isReOrder) {
        //control aria-live
        $(this).not($('table[data-no-order-focus]')).find('th').not('th[aria-sort]').removeAttr('aria-live');
        $(this).not($('table[data-no-order-focus]')).find('th[aria-sort]').first().attr('aria-live', 'polite');
        
        //return focus
        $(this).not($('table[data-no-order-focus]')).find('th[aria-sort]').first().find('span[role="button"]').focus();
        isReOrder = false;
        $(this).removeAttr('data-no-order-focus');
      }
      
      //add sort status on th's aria-label
      $(this).find('th').not('th[aria-sort]').each(function(i, el) {
         if(typeof $(el).attr('aria-label') !== 'undefined')
           $(el).attr('aria-label', $(el).attr('aria-label').replace(' sorted descending', '').replace(' sorted ascending', ''));
      });
      
      var sortedHeader = $(this).find('th[aria-sort]').first();
      
      sortedHeader.attr('aria-label',
        ( sortedHeader.attr('aria-sort') === 'descending' ) ?
        sortedHeader.attr('aria-label') + ' sorted descending' :
        sortedHeader.attr('aria-label') + ' sorted ascending'
      );
        
    });
  }

  //// Initialize
  function initCollapseAndExpand () {
    /* -- SHOW/HIDE DETAIL FOR TABLE ROWS (NON-DataTable/After DataTable) -- */
    // todo:
    // - optimize these 2x fn to be single callback as logic is the same
    // - comment
    $('.js-table--collapse').on('click', '.js-table--show', function (e) {
      e.preventDefault();
      rm.table.tableShow($(this).closest('tr'));
    });
    $('.js-table--collapse').on('click', '.js-table--hide', function (e) {
      e.preventDefault();
      rm.table.tableHide($(this).closest('tr'));
    });

    /* "EXPAND/COLLAPSE ALL" BTN THAT EXPANDS/SHOWS ALL TABLES INCL. NESTED TABLES */
    $('.js-toggle-nested-table').click(function () {
      var $btn = $(this),
          doExpand = $btn.hasClass(elemClass.expdAllBtn),
          $currTb = $(elemSelector.currTb);

      // Update the Btn text/class
      $btn
        .html(doExpand ? elemHtml.clpsAll : elemHtml.expdAll)
        .toggleClass(elemClass.expdAllBtn);

      // Update Arrow Direction
      $currTb
        .find('.' + (doExpand ? elemClass.dnArrow : elemClass.upArrow))
        .removeClass(doExpand ? elemClass.dnArrow : elemClass.upArrow)
        .addClass(doExpand ? elemClass.upArrow : elemClass.dnArrow);

      // Show/Hide the nested Tables (incl. 2nd/3rd lvl)
      // 3 lvls
      if ($currTb.hasClass('table--nested-multi')) {
        $currTb
          .find('.table--nested-parent > tbody > tr')        // Show 2nd lvl
          .add($currTb.find('.table--nested-child > tbody')) // Show 3rd lvl
          [doExpand ? 'addClass' : 'removeClass']('in');

        // Update title attr at table row
        $currTb
          .find('.table--nested-parent > thead > tr').attr('title', doExpand ? elemHtml.clpsTitle : elemHtml.expdTitle);

        $currTb
          .find('.table--nested-child > thead > tr').attr('title', doExpand ? elemHtml.clpsTitle : elemHtml.expdTitle);


      // 2 lvls
      } else if ($currTb.hasClass('table--nested-single')) {

        $currTb
          .find('.table--nested-parent > tbody ')
          [doExpand ? 'addClass' : 'removeClass']('in');

        // Update title attr at table row
        $currTb
          .find('.table--nested-parent > thead > tr').attr('title', doExpand ? elemHtml.clpsTitle : elemHtml.expdTitle);
      }

      // Update the Faded Header
      $currTb[doExpand ? 'removeClass' : 'addClass']('table--nestedcollapsed');
    });

    /* Nested table collapse / expand (uses expdEvt variable as config)
      Table@lvl 1 has class: "table--nested" && ("table--nested-single" | "table--nested-multi")
      Table@lvl 2 has class: "table--nested-parent"
      Table@lvl 3 has class: "table--nested-child"
     */
    $body.on('click keyup', elemSelector.tbRow, function(e) { // jshint ignore:line
      var isClickOrEnterKey = hp_checkIsClickOrEnterKey(e),
          $icon = $(this).find(elemSelector.tbRowArrow),
          $tb = $icon.parents(elemSelector.tb),
          isExpd = $icon.hasClass(elemClass.upArrow),
          isExpdAll,
          isAnyTopTbRowExpd,
          target;

      // Skip if:
      // - if the handler is neither triggered by CLick or Enter key
      // - This is to prevent event handler from being fired when BT Collapse (accordion) is being animated (via data-toggle="collapse")
      if (isClickOrEnterKey.neither || $tb.find('.collapsing').length) return;

      // Manually trigger Bootstrap Collapse toggle for top level, which will open/close 2nd lvl
      if (isClickOrEnterKey.enter) {
        target = $(this).attr('data-target');
        $(target).collapse(isExpd ? 'hide' : 'show');
      }

      // Update the arrow icon/direction (2 or 3 lvls nested tables)
      // Check if 1st lvl tb row is cilcked, if so, expand all nested
      if (!isExpd && $icon.parents('.table--nested-parent').find('> thead th').find($icon).length) {
        // expand all arrows below & show all nested tables (3 lvls  only)
        $icon.parents('.table--nested-parent')
          .find('.icon--chevron-down').removeClass('icon--chevron-down').addClass('icon--chevron-up').end()
          .add($icon.parents('.table--nested-parent').find('.table--nested-child > tbody')) // Show 3rd lvl
          .addClass('in');
      }

      // Update the arrow at that table row
      $icon
        .removeClass(isExpd ? elemClass.upArrow : elemClass.dnArrow)
        .addClass(isExpd ? elemClass.dnArrow : elemClass.upArrow);

      // Update title attr at table row
      $(this).attr('title', isExpd ? elemHtml.expdTitle : elemHtml.clpsTitle);

      // Check if there is any up arrow icon from the main table rows
      // - Note: the selector for top table row is same for both 2 and 3 lvls of nested tables
      // - i.e. "2/3 lvls :    ".table--nested-parent > thead > tr"
      isAnyTopTbRowExpd = $tb.find(elemSelector.tbHead).find('.' + elemClass.upArrow).length;

      // Update the table column header (switching btw full and faded color)
      $tb[isAnyTopTbRowExpd ? 'removeClass' : 'addClass'](elemClass.fadedColHeader);

      //Update faded column header aria-disabled
      if($tb.hasClass(elemClass.fadedColHeader)) {
        $tb.find('thead th[data-fade-lvl*=\'1\']').attr('aria-disabled', 'true');
     } else {
        $tb.find('thead th[data-fade-lvl*=\'1\']').removeAttr('aria-disabled');
     }

      // Update the "Expand/Collapse All" btn if any arrows are either up/down
      $('.js-toggle-nested-table')
        .html(isAnyTopTbRowExpd ? 'Collapse All' : 'Expand All')
        [isAnyTopTbRowExpd ? 'removeClass' : 'addClass']('tb--expd');

      /* Module: rm.thFadeCtrl = { update: udpate , reset: reset } */
      // todo: refactor these two lines as a separate module method to control the fade lvl of headers
      // todo: also add a method to this module in order to clear existing the "table--all-expd" class
      // Remove previous 3rd lvl indicator Class & Re-Check if any 3rd lvl table row is opened
      isExpdAll = $tb.find('.table--nested-child > thead .icon--chevron-up').length &&
                  $tb.find('.table--nested-parent > thead .icon--chevron-up').length;
      $tb[isExpdAll ? 'addClass' : 'removeClass']('table--all-expd');
      /* end Module rm.thFadeCtrl */
    });
  }

  function initTrHover () {
    /* -- TABLE ROWS HOVER SIMILAR ROWS  (NON-DataTable/After DataTable) -- */
    // Nested table hover
    $(elemSelector.tbMHover).on('mouseover','tr', function(){
      var docID = $(this).attr('data-docid');
      // todo: use typeof docId !== undefined is fine
      if (typeof docID !== typeof undefined && docID !== false) {
        $(this).closest('table').find('tr').each(function(){
          var currDocID = $(this).attr('data-docid');
          if ((currDocID === docID.toString()) && currDocID != '' ) { // jshint ignore:line
            $(this).addClass('active');
            var tdHeight = $(this).find('td:first-child').outerHeight();
            if ($(this).width() > 990) {
              $(this).find('td:first-child:before').addRule({
              height: tdHeight+'px'
              });
            } else {
              $(this).find('td:first-child:before').addRule({
              height: 'auto'
              });
            }
           }
         });
        }
      });
    $(elemSelector.tbMHover).on('mouseleave','tr', function() {
      $(elemSelector.tbMHover).find('tr').removeClass('active');
    });
  }




  //// Create tabidex attribute on <tr> with data-href attributes
  function enableTabIdxForTrWithDataHref () {
    var trWithDataHrefAttr = 'table tr[data-href]';
    $(trWithDataHrefAttr).attr('tabindex', 0);
  }


  return {
    init: initialize,

    // Table Show/Hide & Collapse/Expand
    tableCollapse: tableCollapse,
    tableHide: tableHide,
    tableShow: tableShow,

    // DataTable
    configDataTable: configDataTable,
    initDataTable: initDataTable,
    paginateScroll: paginateScroll,

    // Sorting
    initSort: initSort,
    updateNestedTbSortState: updateNestedTbSortState,

    // Other
    initCollapseAndExpand: initCollapseAndExpand,
    initTrHover: initTrHover,
    enableTabIdxForTrWithDataHref: enableTabIdxForTrWithDataHref,
    sortingDocument: sortingDocument
  };


  /* -- HELPER FN -- */
  // Return boolean if Event is neither triggered by click nor enter key (keyup)
  function hp_checkIsClickOrEnterKey (evt) {
    var isClick = evt.type === 'click',
        isEnter = evt.type === 'keyup' && (evt.which === 13 || evt.which === 32);

    return {
      click: isClick,
      enter: isEnter,
      neither: !isClick && !isEnter
    };
  }

  // Take out the <tag> in HTML element it that it is pure text
  function hp_strip (tdText) {
    var childNodes = $('<div>').html(tdText)[0].childNodes;
    var date = Array.prototype.map.call(childNodes, function(item){
      if (item.nodeType === 3) return item.textContent;
    }).join('');
    return date;
  }

  // Convert all up arrows to down arrows & hide all nested tables
  function hp_collapseAllTbRows () {
    $('.displaycontent__block')
      .find('.icon--chevron-up')
      .removeClass('icon--chevron-up').addClass('icon--chevron-down')
      .end().find('.collapse.in')
      .removeClass('in')
      .end().find('.table--nested')
      .addClass('table--nestedcollapsed');
  }

  // Set the text next to the table from "Collapse All" to "Expand All"
  function hp_resetExpdAllBtn () {
    if (!$('.js-toggle-nested-table').hasClass('tb--expd')) {
      $('.js-toggle-nested-table')
        .html('Expand All')
        .addClass('tb--expd');
    }
  }

  // Pagination Setting for DataTable (At Init)
  function hp_getDtPgnSetting () {
    // for caching in "tbRedrawCallback" fn
    var oldStart = {},
        slr = {
          pgnWrapSlr:     '.dataTables_paginate, .dataTables_info',
          pgnBtnDisabled: '.paginate_button.disabled',
          pgnBtnEnabled:  '.paginate_button:not(.disabled)'
          //pgnDatatableLen:'.dataTables_length'
        },
        acsAttrSetting = {
          disabled: {
            'aria-hidden': true,
            'tabindex': -1
          },
          enabled: {
            'aria-hidden': false,
            'tabindex': 0
          }
        },
        $pgnWrap;

    function tbRedrawCallback (oSettings) {
      var pgnLength = oSettings._iDisplayLength,      // no. of pagination per page
          matchTotal = oSettings.fnRecordsDisplay(),  // total no. of <tr> matches
          doShowPgnWrap = pgnLength < matchTotal,
          targetOffset;

      // Use the cached Pagination Wrap if there is any
      $pgnWrap = $(oSettings.nTableWrapper).find(slr.pgnWrapSlr);
      //$pgnLength = $(oSettings.nTableWrapper).find(slr.pgnDatatableLen);

      // Show the Pagination navigation based on results and no. of allowed in a page
      $pgnWrap[doShowPgnWrap ? 'show' :'hide' ]();
      //$pgnLength[doShowPgnWrap ? 'show' :'hide' ]();

      // If Pagination nav is shown, Update the Accessibility attributes states
      if (doShowPgnWrap) {
        $pgnWrap
        .find(slr.pgnBtnDisabled).attr(acsAttrSetting.disabled)
        .end().find(slr.pgnBtnEnabled).attr(acsAttrSetting.enabled);
        $('.dataTables_paginate .previous')
        .attr('aria-label','Go to previous page');
        $('.dataTables_paginate .next')
        .attr('aria-label','Go to next page');
        $('.dataTables_paginate a').not('.current').not('.next').not('.previous').prepend('<span class="sr-only">Go to page </span>');
        $('.dataTables_paginate a.current').prepend('<span class="sr-only">Current page is page </span>');
      }

      if(!oldStart[$(this).attr('id')]){
        oldStart[$(this).attr('id')] = 0;
      }
      // Scroll the top of the table if needed
      if ( oSettings._iDisplayStart !== oldStart[$(this).attr('id')] ) {
        var targetDtWraper = $(this).closest('.dataTables_wrapper');
        var targetTitle = targetDtWraper.prevAll('.table__title');
        var targetSubTitle = targetDtWraper.prevAll('.table__sub-heading');

        var startingoffset = targetDtWraper.offset().top;
        if(targetTitle.length) { startingoffset = targetTitle.offset().top; }
        if(targetSubTitle.length) { startingoffset = targetSubTitle.offset().top; }

        targetOffset = startingoffset - ($(elemSelector.stkHeader).height() + 20);
        $('html,body').animate({scrollTop: targetOffset}, 100);
        oldStart[$(this).attr('id')] = oSettings._iDisplayStart;

        $(targetDtWraper).attr('tabindex',-1).css('outline', 'none').focus();

      }
      //Reinitialize popover
      rm.popovers.init();

      // Path, ID and PADV new Filter
      Array.prototype.uniqueOnFirstOccurence = uniqueOnFirstOccurence;

      function uniqueOnFirstOccurence() {
          var helperArr = [];
          var targetArr = [];
          this
          .map(function( item ){
            return { key:item.toLowerCase(), value:item };
          })
          .forEach( function( item ){
              if( helperArr.indexOf(item.key) === -1 ) {
                  helperArr.push( item.key );
                  targetArr.push( item.value );
              }
          });

          return targetArr;
      }

      removeRole();
      
      /* App access settings' tables is sorted in backend by default to date descending
        so lets add aria-sort="descending" in initial load */
        
      if($(this).hasClass('table-app-access')) {
        $(this).find('th.col-date-app-access').not('th[aria-sort]').attr('aria-sort', 'descending');
      }
      
      //add role to table links
      if(0 !== $('.table__link').length) {
         $('.table__link').not('a.table__link, button.table__link, .table__link[role]').attr('role','link');
      }
      
      //add role link to js links
      $(this).find('a').not('a[href], a[role]').attr('role', 'link');
      
      //add role to sorting th
      if(0 !== $('th.sorting, th.sorting_asc, th.sorting_desc').length) {
        $('th.sorting, th.sorting_asc, th.sorting_desc').not('.sorting_disabled')
          .attr('tabindex','-1').not($('span[role="button"]').parent()).wrapInner('<span role="button" tabindex="0">');

        $('th.sorting, th.sorting_asc, th.sorting_desc').find('span[role="button"]').on('focus', function() {
          $(this).parent().addClass('th-focused');
        }).on('blur', function() {
          $(this).parent().removeClass('th-focused');
        });
      }
      
      //update tabindex/aria-label to defaultly sorted but disabled sorting table header
      if(0 !== $('th.sorting_disabled')) {
        $('th.sorting_disabled')
          .removeAttr('tabindex')
          .each(function(i ,el) {
            $(el).attr('aria-label', $(el).attr('aria-label')
              .replace(': activate to sort column ascending', '')
              .replace(': activate to sort column descending', ''));
          });
      }

      if($('th.date-time') !== 0) {
        $('th.date-time').attr('aria-label', 'Action Date and Time: activate to sort column ascending');
        if($('th.date-time').hasClass('sorting_asc')) {
          $('th.date-time').attr('aria-label', 'Action Date and Time: activate to sort column descending');
        }
      }
    }

    return {
      columnDefs: [{
        targets: 'table__colnosort',
        orderable: false,
        order: [],
        type: 'date-dd-mmm-yyyy'
      },
      {
        targets: '_all',
        render: function ( data, type, row ) {
          return data.replace(/\s+/g,' ');
        }
      }],
      pagingType: 'simple_numbers',
      bInfo : true,
      dom: '<"top"l>rt<"bottom"ipl><"clear">',
      language: {
        sInfo: '<p class="no-item-_TOTAL_">Displaying _START_ to _END_ of _TOTAL_ results</p>',
        lengthMenu: '<span>Show</span> <select class="native-select form-control">'+
          '<option value="25">25 results per page</option>'+
          '<option value="50">50 results per page</option>'+
          '<option value="100">100 results per page</option>'+
          '<option value="-1">All results on this page</option>'+
          '</select>'
      },
      infoCallback: function( settings, start, end, max, total, pre ){
        if(total !== 0) {
          return '<p>Displaying ' + start + ' to ' + end + ' of ' + total + (total !== 1?' results':' result') + '</p>';
        }
      },
      initComplete: function( settings, json ) {
        var $table = $(this);
        $table.closest('.dataTables_wrapper').find('> div > .dataTables_length label').wrap('<form></form>');
      },
      fnDrawCallback: tbRedrawCallback
    };
  }

  //remove role='grid' for accessibility purpose
  function removeRole () {
    var $dt = $(elemSelector.tbDt);

    $dt.removeAttr('role');
  }

}(window.moment));
/**
 * Requirements/Assumption
 * ============================================
 * To Show / Hide element by checkbox filter
 *
 * Usage
 * ============================================
 *
 *
 *
 * Purpose
 * ============================================
 * 1. In Prescription and Dispensed page, it used to show / hide table row,
 *    if all checkboxes are unchecked, then alert message will be shown.
 *
 */

rm.filter = (function() {
  'use strict';

  var elemSelector = {
    filterField:                    '.js-filter-row',
    filterTargetParent:             '.js-filterObj tbody',
    filterEmpty:                    '.filter-empty-message',
    elemHide:                       '#prescription-ng',
    tbWrapper:                      '#prescription-ng_wrapper',
    chkPre:                         '#showprescribed',
    chkDis:                         '#showdispensed'
  };


  var initialize = function() {
    // Prescription and Dispense View
    filterObj(elemSelector.filterTargetParent, 'tr', elemSelector.filterField, elemSelector.filterEmpty, elemSelector.elemHide);
  };

  var filterObj = function(parent, target, filter, emptyMessage, elemHide) {
    var numFilter = $(filter).length;
    $(filter).change(function(){
      var isShow = this.checked ? 1 : 0;
      var calFilter = this.checked ? 1 : -1;
      var filter = $(this).attr('data-filter');
          numFilter = numFilter + calFilter;

      var table = $(elemSelector.elemHide).DataTable();
      $(emptyMessage)[numFilter === 0 ? 'removeClass' : 'addClass']('hidden');
      $(elemSelector.tbWrapper)[numFilter === 0 ? 'addClass' : 'removeClass']('hidden');

      if ($(elemSelector.chkPre).is(':checked') && $(elemSelector.chkDis).is(':checked')) {
        table.search('').draw();
      }
      if ($(elemSelector.chkPre).is(':checked') && !($(elemSelector.chkDis).is(':checked'))) {
        table.search('prescribed').draw();
      }
      if (!($(elemSelector.chkPre).is(':checked')) && $(elemSelector.chkDis).is(':checked')) {
        table.search('dispensed').draw();
      }
    });
  };

  return {
    init: initialize,
    filterObj: filterObj
  };
}());
rm.loadmore = (function() {
  'use strict';

  var initialize = function() {


// Load More Button Functionality

    // Set up number of items to show
    var idealAmount = 5,
        startAmount = 4,
        loadButton = $('.js--load-more'),
        // Find the number of items
        docAmount = $('.timeline__section').length;

    // Hide Load More button if less than minum number shown
    if (docAmount < 6) {
      // Hide Load more button
      loadButton.hide();
    } else {
      // Show first amount
       $('.timeline__section:gt(' + startAmount + ')').hide();
    }

    // Click button to show more
    loadButton.click(function () {
      idealAmount += 5;
      $('.timeline__section:lt(' + idealAmount + ')').show(' slow ');

      // Hide Load more button if al' items are shown
      if (idealAmount >= docAmount) {
        loadButton.hide();
      }
    });

  };

  return {
    init: initialize
  };
}());
rm.print = (function() {
  'use strict';

  var elemSelector = {
    print:                        '.btn__print',
    icon:                          '[data-icon]',
    printable:                    '.printable'
  };

  var $body = rm.globals.DOM.body,
      $document = rm.globals.DOM.doc,
      originalTitle = document.title,
      isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 || (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })(!window['safari'] || safari.pushNotification);  // jshint ignore:line

  // change the header to the record's demographic details when the user is trying to print
  function updatePrintTitle() {
    // Change the header of the page with print button
    if($('button.btn__print').length) {
      var $patientDetails = $('ul.print__patientinfo li.print--patient-item'),
      printTitle = '';
      // get name, dob and ihi from patient details and form the title
      if($patientDetails.length) {
        $patientDetails.each(function (index) {
          if(index !== $patientDetails.length - 1) {
            printTitle = printTitle + $(this).text().trim() + ' | ';
          }
          else if (index === $patientDetails.length - 1) {
            printTitle = printTitle + $(this).text().trim();
          }
        });
        // prevents user from closing the browser after changing the filter and before print
        // then the tilte will be empty
        document.title = originalTitle + '.';  // jshint ignore:line
        // change the title to demographics details
        document.title = printTitle;  // jshint ignore:line
      }
    }
  }

  function printPreview() {
    $('#viewport').attr('content', 'width=device-width, initial-scale=1.0,user-scalable=no');
  }

  // change the title back to original
  function afterPrint() {
    $('#viewport').attr('content', 'width=device-width, initial-scale=1.0'); 
    // if the browser is Safari, change the tiltle before replaceState
    if (isSafari) {
      document.title = originalTitle;  // jshint ignore:line
     // replace the state with original title
     window.history.replaceState( null, originalTitle);  // jshint ignore:line
    }

    // change document title back to the orginal title
    document.title = originalTitle;  // jshint ignore:line
    
    if($('.printable-container').length <= 0) return;
    $('.printable-container').remove();
  }

  // detect the print event
  // change the title to demographic details before print
  // change the tiltle back to original after print
  var actionOnPrint = function() {
    if ('matchMedia' in window) {  // jshint ignore:line
      // Chrome, Firefox, and IE support mediaMatch listeners
      window.matchMedia('print').addListener(function(media) {  // jshint ignore:line
          if (media.matches) {
              updatePrintTitle();
          } else {
              afterPrint();
          }
      });

      // Firefox, and IE support function
      $(window).on('beforeprint', updatePrintTitle, printPreview);  // jshint ignore:line
      $(window).on('afterprint', afterPrint);  // jshint ignore:line
    }
  };

var actionAndroidPrint = function() {
    window.print();
    setTimeout(function(){$('.android-meta').attr('content','width=device-width, initial-scale=1.0');}, 500);
};

  var initialize = function() {
    actionOnPrint();
    $(elemSelector.print).click(function(e){
      e.preventDefault();
      if($(elemSelector.printable).length) {
        $body.addClass('partial-print');
        $body.append('<div class="container printable-container hide"></div>');
        $(elemSelector.printable).clone().appendTo('.printable-container');
        window.print();
        $body.removeClass('partial-print');
        $('.printable-container').remove();
      } else {
        window.print(); // jshint ignore:line
      }

    });

  $('.android-print').on('click',function(){
      $('head').append('<meta name="viewport" class="android-meta" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/>');
      actionOnPrint();
      actionAndroidPrint();
  });

  };

  return {
    init: initialize
  };
}());
/**
 * -----------------------------
 * Purpose
 * -----------------------------
 * - Trim the text content of a particular node/element in table cell in a table
 *
 *
 * -----------------------------
 * Requirements
 * -----------------------------
 * HTML:
 * <table
 *   data-js-td-trim="<td nth-child index>, <text node index>, <character limit>"
 *   class="hidden">                  // this class is used to prevent table showing briefly (i.e. a flash) the untrimmed and trimmed version
 *                                       it will be removed once all text are trimmed
 *
 * PARAMETERS in "data-js-td-trim" attribute:
 * - <td nth-child index>             // based on css nth-child pseudo selector, starts from 1
 *                                       e.g. <tr>
 *                                               <td>text to trim</td>
 *                                               <td>cell2</td>
 *                                            </tr>
 *                                       the nth-child index will be 1
 * - <text node index>                // in case there are Html tags inside <td>, specify the node index of where the text content node will be
 *                                       e.g. <td>lorem sum <span>asdf</span></td>
 *                                       1      targets "lorem sum"
 *                                       0      targets text inside <span> tag
 * - <character limit>                // specify character limit for the text
 *                                       it will be exactly no.of characters + ellipsis '...'
 *
 * -----------------------------
 * Example
 * -----------------------------
 * <table
 *   class="hidden"
 *   data-js-td-trim="2, 1, 100">
 *
 */
rm.table.tdTrim = rm.table.tdTrim || (function() {

  'use strict';

  var NS = getNS();

  function getNS () {
    var atr = 'data-js-td-trim';
    return {
      slr: {
        tb: '[' + atr + ']',
        td: ['tbody td:nth-child(', ')']
      },
      atr: {
        tb: atr
      }
    };
  }

  return {
    /**
     * Trim any text content to the specific character limit and add ellipsis (i.e. "...") to the end of the text
     * @param  {jquery element} $elem           [the text content within which you want to trim, e.g. $('table.tb--phn tbody td:nth-child(2)')]
     * @param  {integer}        idxOfTextNode   [the index of text node within the $elem; defaults to 0]
     *                                          e.g. <td><strong>title</strong>asdfasdf</td>,  idxOfTextNode = 1
     *                                          e.g. <td>asdfasdf</td>, idxOfTextNode = 0
     * @param  {integer}        charLiit        [character limit,; default to 100]
     *                                          e.g. 100      text will be trimmed to exactly 100 characters plus the ellipsis
     */
    trim: function ($elem, charLimit, idxOfTextNode) {
      idxOfTextNode = (typeof idxOfTextNode === 'undefined' || typeof idxOfTextNode !== 'number') ? 0 : idxOfTextNode;
      charLimit = (typeof charLimit === 'undefined' || typeof charLimit !== 'number') ? 99 : (charLimit - 1);

      $elem.each(function(){
        var textNode = this.childNodes[idxOfTextNode],
            text = textNode.length ? textNode.textContent : '';

        // Check & Skip if not more than 100 characters
        if (text.length <= charLimit) return;

        // Reset the text of that table cell
        textNode.textContent = text.trim().slice(0, charLimit) + '...';
      });
    },

    /**
     * Call rm.table.tbTrim.trim() method on each table with "data-js-td-trim" attribute
     * & show the table once all table cell text contents finish trimming
     */
    init: function () {
      var $tb = $(NS.slr.tb),
          _this = this;

      $tb
      .each(function(idx){
        var attrVal = $tb.eq(idx).attr(NS.atr.tb).split(','),
            tdIndex = attrVal[0].trim(),
            $td = $tb.eq(idx).find(NS.slr.td.join(tdIndex)),
            idxOfTextNode = parseInt(attrVal[1].trim()),
            charLimit = parseInt(attrVal[2].trim());

        this.trim($td, charLimit, idxOfTextNode);
      }.bind(this))
      .removeClass('hidden');
    }
  };
})();

rm.sessionStorage = (function() {
    'use strict';


    var initialize = function() {

    };

    var setSession = function(key, value){
        sessionStorage.setItem(key, value); // jshint ignore:line
    };

    var getSession = function(key){
         return sessionStorage.getItem(key); // jshint ignore:line
    };

    var removeSession = function(key, value){
        sessionStorage.removeItem(key); // jshint ignore:line
    };

    return {
      init: initialize,
      setSession: setSession,
      getSession: getSession,
      removeSession: removeSession
    };
  }());

/* globals moment */

rm.form = (function () {
  'use strict';

  var elemSelector = {
    formClear:      '[data-form-clear]',
    formValidate:   'form.js-validate',
    subHExtra:      '.subheading__extra'
  };

  function isDropdownIdSyncWithContentId ($dropdown, $contents) {
    var currDropdownValId = $dropdown.find('option:selected').val(),
        currContentId = $contents.not('.hidden').attr('data-id');

    return currDropdownValId === currContentId;
  }

  function showDropdownBoundContents () {
      var $wrap = $(this),
          isNoGroupOptonSelected = this.id.indexOf('groupby') !== -1 && $wrap.find('option:selected').val() === 'ng',
          $displayContentBlock = $('.displaycontent__block');

      // Collapse: turn any up arrow to down arrow & hide all nested tables (2nd/3rd lvl nested tables)
      $displayContentBlock
        .find('.icon--chevron-up')
        .removeClass('icon--chevron-up').addClass('icon--chevron-down')
        .end().find('.collapse.in')
        .removeClass('in')
        .end().find('.table--nested')
        .addClass('table--nestedcollapsed')
        .removeClass('table--all-expd');

      // Show the selected table wrapper
      $displayContentBlock.not('.lock-show').addClass('hidden');
      $displayContentBlock.each(function () {
        var $this = $(this);

        if ($this.attr('data-id') === $wrap.find('option:selected').attr('value')) {
          $this.removeClass('hidden'); //show
        }

        // Simple listing - show / hide extra info
        var hasSubHExtra = $(elemSelector.subHExtra).length,
            selectedDR = $wrap.find('option:selected').attr('value') === 'sr' ? 1 : 0,
            showExtra = hasSubHExtra && selectedDR;

            $(elemSelector.subHExtra).removeClass(showExtra ? 'hidden' : '');
            $(elemSelector.subHExtra).addClass(showExtra ? '' : 'hidden');

      });

      // Expand/Collapse All Btn - Show/Hide
      $('.js-toggle-nested-table')[isNoGroupOptonSelected ? 'addClass' : 'removeClass']('hide');

      // Expand/Collapse Btn - Change the text from "Collapse All" back to "Expand All"
      if (!$('.js-toggle-nested-table').hasClass('tb--expd')) {
        $('.js-toggle-nested-table')
          .html('Expand All')
          .addClass('tb--expd');
      }

      // Reset the sorting
      rm.table.updateNestedTbSortState();
      rm.tbMobileSort.updateSortOptions();
    }

  var initialize = function() {
    if (!$('form').length) { return false; } //assuming this plugin wont need to do anything if there is no form element... am I right?

    bindFormClear();
    bindFocusShow();
    bindFocusDisable();
    bindClickEnable();
    bindClickDisable();
    bindClickShow();
    bindClickHide();
    bindCheckedToggling();
    toggleChangeText();

    bindDisplayContentChange();
    bindSelectPickerListWrapClick();
  };

  /**
   * Functionality to clear a form on click
   *  - Pass this either then name of your form element to clear
   *  - or a wrapping element selector
   *  - or no value (which will clear all form elements in the parent form)
   */
  var bindFormClear = function () {
    $(elemSelector.formClear).on('click', function() {
      var $this = $(this),
        selector = $this.attr('data-form-clear'),
        $form = $this.closest('form'),
        $target;

      if (selector) { //clear the given selector
        $target = $(selector);

        /* Clear this target */

        // Checked inputs
        if ($target.is('input[type="radio"], input[type="checkbox"]')) {
          $target.prop('checked', false);
        }

        // Text based inputs
        if ($target.is('select, textarea, input[type="text"], input[type="tel"], input[type="email"]')) {
          $target.val('');
        }

        // SelectPickers
        if ($target.is('.selectpicker')) {
          $target
            .find('select').val('')
            .end().selectpicker('refresh');
        }
      } else {
        $target = $form;
      }

      /* Clear form elements within the target */
      var $inputs = $target.find('input[type="radio"], input[type="checkbox"]'),
        $texts = $target.find('select, textarea, input[type="text"], input[type="tel"], input[type="email"]'),
        $selectpickers = $target.find('.selectpicker');

      if ($inputs.length) { $inputs.prop('checked', false); }
      if ($texts.length) { $texts.val(''); }
      if ($selectpickers.length) {
        $selectpickers
          .find('select').val('')
          .end().selectpicker('refresh');
      }

      $('#pdf-upload-val').empty();

      // Rescan Dirty form
      $form.dirtyForms('rescan');
    });
  };

  // Removes given selector's `.hidden` class on focus
  //  - Used for profile-details and personal-details contact number
  var bindFocusShow = function () {
    $('[data-focus-show]').on('focus', function () {
      var selector = $(this).attr('data-focus-show');

      // Show given element
      $(selector).removeClass('hidden');
    });
  };


  var bindFocusDisable = function () {
    $('[data-focus-disable]').on('focus', function () {
      var selector = $(this).attr('data-focus-disable');

      // Show given element
      $(selector).attr('disabled', 'disable');
    });
  };

  var bindClickShow = function () {
    $('[data-click-show]').on('click', function () {
      var selector = $(this).attr('data-click-show'),
          attrHideText = $(this).attr('data-click-hide-text');

      // Show given element
      $(selector).removeClass('hidden');

      if (typeof attrHideText !== typeof undefined && attrHideText !== false) {
        if ($(this).attr('type') === 'button') {
          $(this).html(attrHideText);
        }
      }
    });
  };

  // Adds a `.hidden` class to the given selector on click
  //  - Used for profile-details and personal-details contact number
  var bindClickHide = function () {
    $('[data-click-hide]').on('click', function () {
      var selector = $(this).attr('data-click-hide');

      // Hide given element
      $(selector).addClass('hidden');
    });
  };

  // Adds a `disabled` attribute to the given selector on click
  //  - Used for CA my profile passphrase
  var bindClickDisable = function () {
    $('[data-click-disable]').on('click', function () {
      var selector = $(this).attr('data-click-disable');

      // Disaable the given element
      $(selector).attr('disabled', 'disable');
    });
  };

  var bindClickEnable = function () {
    $('[data-click-enable]').on('click', function () {
      var selector = $(this).attr('data-click-enable');

      // Enable the given element
      $(selector).removeAttr('disabled');
    });
  };

  // Binds a click event to clear the given selector's checked property
  var bindCheckedToggling = function () {
    $('[data-click-checked-clear]').on('click', function () {
      var selector = $(this).attr('data-click-checked-clear');

      $(selector).prop('checked', false);
    });
  };

  var toggleChangeText = function() {
    $('[data-toggle]').on('click', function() {
      var attrHideText = $(this).attr('data-click-hide-text'),
          attrShowText = $(this).attr('data-click-show-text');

      if (typeof attrHideText !== typeof undefined && attrHideText !== false) {
        if ($(this).attr('type') === 'button') {
          if ($(this).attr('aria-expanded') === 'false') {
            $(this).html(attrHideText);
          } else {
            $(this).html(attrShowText);
          }
        //  $(this).attr('aria-expanded') ? $(this).html(attrShowText) :  $(this).html(attrHideText);
        }
      }


    });
  };



  /*
   * NB. The following has not been refactored, just placed in functions...
   * (brought across from form.js)
   */



  /**
   * "Group by" Dropdown Select for <select> element:
   *  Display the relevant contents (such as table) bound to the dropdown value
   * (e.g. used in Diagnostic Imaging Report View)
   */
  var bindDisplayContentChange = function () {
    var $dropdown = $('select.js-displaycontent'),
        $contents = $('.displaycontent__block');

    // Setup Event
    $dropdown.change(showDropdownBoundContents);

    // Check if current dropdown value matches current content, if no, Update it via the handler
    if (isDropdownIdSyncWithContentId($dropdown, $contents)) return;
    showDropdownBoundContents.call($dropdown[0]);
  };


  /**
   *  Write some comments in here please Charlton (what does this do?)
   */
  var bindSelectPickerListWrapClick = function () {
    var $select = $('.js-selectpicker'),
        $listWrap, $lists, $1stItem, $lastItem;

    // $select.selectpicker(); //already done globally (above)

    $listWrap = $select.siblings('div.dropdown-menu').find('ul');
    $lists = $listWrap.find('li');
    $1stItem = $lists.eq(0);
    $lastItem = $lists.filter(':last-child');

    $listWrap.on('click', 'a', cb_onListClick);
    function cb_onListClick (e) {
        var $this = $(this),
            is1stItemOn = $1stItem.hasClass('selected'),
            is1stItemClicked = $this.parent().attr('data-original-index') === '0';

        // remove other item selection
        var doUpdateOtherItems = is1stItemClicked && is1stItemOn && $lists.not($1stItem).hasClass('selected');

        // remove 1st item selection
        var doUpdate1stItem = !is1stItemClicked && is1stItemOn && $lists.not($1stItem).hasClass('selected');

          // $lists.not($1stList).not($lastList).removeClass('selected');
          // $1stList.removeClass('selected');

        if (doUpdate1stItem) {
          $1stItem.removeClass('selected');
        } else if (doUpdateOtherItems) {
          $lists.not($1stItem).not($lastItem).removeClass('selected');
        }
    }
  };




  return {
    init: initialize,    
    reboundSelectContent : showDropdownBoundContents
  };
}());
/**
 * Features
 * ------------------------------------------------
 * - General Initialization
 *   Add a "sodirty" class to <form> element
 *
 * - Toggle the Disable state of >=1 buttons with class "btn--primary" when Form dirty state changes (i.e. if User modifies it)
 *   + Add a "js-disable-until-dirty" class to the parent/outer container for the button
 *   + To exclude any "btn--primary" button's disable state from being toggled, apply a class "disabled--exclude" to the button
 *
 *
 * Useful Methods
 * ------------------------------------------------
 * - $form.dirtyForms('rescan')
 * - $form.dirtyForms('setClean')
 * - $form.dirtyForms('isDirty')
 *
 */
rm.dirtyforms = (function () {
  'use strict';

  var elemSelector = {
    dirtyformClass: 'form.sodirty',
    disableUntilDirty: 'form.sodirty .js-disable-until-dirty' //nb. `.sodirty` parent
  };

  var initialize = function () {
    // Each form that has `.sodirty` class
    $(elemSelector.dirtyformClass).dirtyForms({
      // Message will be shown both in the Bootstrap Modal dialog and in most browsers when attempting to navigate away
      // using browser actions.
      message: 'If you leave this page, any changes you have made will not be saved.',
      dialog: {
        dialogID: 'form_dirty_modal',
        proceedButtonClass: 'js-dirty-form-proceed',
        proceedButtonText: 'Leave page',
        stayButtonClass: 'js-dirty-form-stay',
        stayButtonText: 'Stay on page'
      },
      ignoreClass: 'internal-link'
    });

    bindDisableUntilDirty();

    bindCleanDirtyForm();
  };

  /*
  This function will capture Success Event for all forms and make Undirty
  */
  var bindCleanDirtyForm = function () {
    $(elemSelector.dirtyformClass).each(function () {
      var $form = $(this),
        fv = $form.data('formValidation');

      if (!fv) { return false; }

      // On Success Validation
      $form.on('success.form.fv', function () {
        var $thisForm = $(this);

        // Exit if the form is already dirty
        if ($thisForm.dirtyForms('isDirty')) return false;

        // Clean form (allowing URL change once again)
        $thisForm.dirtyForms('setClean');

        // Re-enable submit buttons (if necessary)
        $thisForm.find('[type="submit"][formnovalidate]').prop('disabled', false);
      });
    });
  };

  /**
   * Submit buttons wrapped with this `.js-disable-until-dirty` class will
   * be disabled until 'dirty' (ie. edited)
   */
  var bindDisableUntilDirty = function () {
    var $disableUntilDirty = $(elemSelector.disableUntilDirty);
    if (!$disableUntilDirty.length) { return false; }

    var $form = $disableUntilDirty.closest(elemSelector.dirtyformClass),
      buttonSelector = '.btn--primary:not(.disabled--exclude)',
      $buttons = $disableUntilDirty.find(buttonSelector);

    // Disable all buttons on page load
    $buttons.prop('disabled', true);

    // Enable/disable on dirty
    //  - see https://github.com/snikch/jquery.dirtyforms
    $form.on('dirty.dirtyforms clean.dirtyforms', function (e) {
      var $fvPlugin = $(e.target).data('formValidation'),
          isDirty = e.type === 'dirty';

      // If Form has validation plugin bound to it:
      // - TRUE
      if ($fvPlugin && $fvPlugin.isValid()) {
        /**
         * Using built-in form validation plugin method to update disable state of the button becoz the plugin:
         * 1) toggles "disabled" class
         * 2) toogles "disabled" attribute
         * false: enable the button | true: disable the button
         */
        $fvPlugin.disableSubmitButtons(isDirty ? false : true);
      // - FALSE
      } else {
        $buttons.prop('disabled', isDirty ? false : true);
      }
    });
  };

  var actionMakeFormDirty = function (flag, $form) {
    if (flag === true) {
      $form.addClass('dirtylisten dirty');
    }
    else {
      $form.removeClass('dirtylisten dirty');
    }
  };

  var actionMakeFormClean = function (selector) {
    var $form = (selector instanceof jQuery ? selector : $(selector));
    $form.dirtyForms('setClean');
  };

  return {
    init: initialize,
    actionMakeFormDirty: actionMakeFormDirty,
    cleanForm: actionMakeFormClean
  };

}());
/**
 * Usage
 * -----------------------------------
 * - Global Initialization
 * rm.selectPicker.init();
 *
 * - Custom Initialization
 * 1. In the dropdown.hbs, don't use the "selectpicker" class in your <select> element
 * 2. Pass in $select (where that are not yet initialized)
 *    rm.selectPicker.init($select);
 *
 *
 * Assumption/Dependency
 * -----------------------------------
 * - formvalidation plugin
 */

rm.selectPicker = rm.selectPicker || (function () {

  'use strict';

  var slr = {
      selectpicker: '.selectpicker',
      selected:     'option:selected',
      parentForm:   'form.js-validate'
    },
    atr = {
      show:         'data-show',
      hide:         'data-hide'
    },
    cls = {
      hidden:       'hidden'
    },
    // see https://silviomoreto.github.io/bootstrap-select/options/#events
    evt = {
      change:       'changed.bs.select',
      blur:         'blur'
    };

  return {
    isGlobalInitCalled: false,
    init: init
  };

  function init ($selectPickerElem) {
    var $selectPicker = ($selectPickerElem && $selectPickerElem.jquery) ? $selectPickerElem : $(slr.selectpicker);

    if (!$selectPicker.length) { return false; }

    // Disable developer to call global initialization twice
    if (!$selectPickerElem) {
      if (this.isGlobalInitCalled) { console.warn('Attemp to call global initialization of selectpicker again'); }
      this.isGlobalInitCalled = true;
    }

    // Only do initialization for <select> without selectpicker plugin
    $selectPicker = $selectPicker.map(function (idx, select) {
      if (!$selectPicker.eq(idx).data('selectpicker')) { return select; }
    });

    $selectPicker
      .selectpicker({
        width: '100%',
        dropupAuto: false,
        size: 6 //show 6 options
      })
      .on(evt.change, function () {
        var $thisInput = $(this),
          $thisForm = $thisInput.closest(slr.parentForm),
          $option = $thisInput.find(slr.selected),
          showSelector = $option.attr(atr.show),
          hideSelector = $option.attr(atr.hide);

        // Hide/show given element (if given)
        if (showSelector) $(showSelector).removeClass(cls.hidden);
        if (hideSelector) $(hideSelector).addClass(cls.hidden);

        // Revalidate
        if ($thisForm.length && $thisForm.data('formValidation')) {
          $thisForm.formValidation('validateField', $thisInput);
        }

        var noGrouping = $($thisInput).val() === 'ng' ? true : false;
        var customEvt = window.document.createEvent('CustomEvent');
        customEvt.initCustomEvent('selectListChange',false,false,
                                    {'selected': $($thisInput).val(),
                                     'noGrouping': noGrouping,
                                     'id': $(this).attr('id')
                                    }
                                 );
        window.dispatchEvent(customEvt);

      });

    // Trigger validation on `blur`
    $selectPicker.closest('.bootstrap-select').find('.dropdown-toggle').on(evt.blur, function () {
      var $this = $(this),
          $thisSelectPicker = $this.parent('.bootstrap-select').find('.selectpicker'),
          $thisForm = $this.closest(slr.parentForm),
          isSelectPickerOpened = $thisSelectPicker.end().hasClass('open');

      // Skip if 'blur' is caused by opening the dropdown
      if (isSelectPickerOpened) return;

      // Revalidate select picker if 'blur' is caused by something else, e.g. clicking something other than select picker component
      if ($thisForm.length && $thisForm.data('formValidation')) {
        $thisForm.formValidation('validateField', $thisSelectPicker);
      }
    });
  }

})();
rm.displayonselect = ( function() {
  'use strict';

  var selector = {
    dropdown_class  : '.selectpicker.js-display-onselect',
    select_class    : '.native-select',
    content_class   : '.js-display-onselect-block',
    value_data      :  'id',
    radio_class     : '.radio .js-display-onselect'
  };

  var initialize = function () {

    $(selector.select_class).on('change',function(){
        var $this  = $(this);
        var id = $this.val();
        var val = $this.children(':nth-child(2)').val();
        var $current =  $('[data-id="' + (id !== ''? id : val) + '"]' + selector.content_class);

        $this.children().each( function (key, val) {
          $('[data-id="' + val.value + '"]' + selector.content_class).addClass('hidden');
        });
      
        $current[id !== '' ? 'removeClass' : 'addClass']('hidden')
        .siblings(selector.content_class)
        .addClass('hidden');
        resetAllTextFields($current);
  
    });
    // the following is to be depreciated

    $(selector.dropdown_class).on('changed.bs.select', function (e) {
      var value = $(this).selectpicker('val');

      $(selector.content_class).each( function (e) {
          var $current = $(this);
          var content_id = $current.data(selector.value_data);
          resetAllTextFields($current);
          if (content_id === value) {
            $current.removeClass('hidden');
          } else {
            $current.addClass('hidden');
          }
        });
    });

    $(selector.radio_class).on('change', function (e) {
      var select_val = $(this).val();

      $(selector.content_class).each( function (e) {
          var $current = $(this);
          var content_id = $current.data(selector.value_data);
          resetAllTextFields($current);
          if (content_id === select_val) {
            $current.removeClass('hidden');
          } else {
            $current.addClass('hidden');
          }
        });
    });

    preventBtnChange();
  };

  var resetAllTextFields = function ($current) {
    var formValidation = $current.closest('form').data('formValidation');
    var $inputs = $current.find('input[type="text"],input[type="checkbox"], input[type="number"],select');
    $inputs.each( function () {
      if ($(this).length) {
        var $inputName = $(this).attr('name') + '';
        formValidation.resetField($inputName, true);
        if($(this).hasClass('selectpicker')){
          $('.selectpicker').selectpicker('refresh');
       }         
      }
    });    
  };
  
  /* This code is using bootstrap select and will be obselete on 10.1 */
  var preventBtnChange = function() {
    var isDisabled = true;
    
    if($(selector.dropdown_class).hasClass('prevent-btn-change')) {
      $(selector.dropdown_class).on('show.bs.select', function() {
        isDisabled = $(this.form).find(':submit').hasClass('disabled');
      });
      
      $(selector.dropdown_class).on('change', function() {
        if(isDisabled) $(this.form).find(':submit').addClass('disabled').attr('disabled', '');
        resetUnselected(this);
      });
    }
  };
  
  /* This code is using bootstrap select and will be obselete on 10.1 */
  var resetUnselected = function(selectElement) {
    var formValidation = $(selectElement.form).data('formValidation');
    
    if(!formValidation) return;
    
    $(selectElement).children().each(function(i, option) {
      var targetId = $(option).attr('value');

      if('' !== targetId) {
        var targetDiv = $('[data-id="' + targetId + '"]');
        
        if(0 !== targetDiv.length) {
          targetDiv.find('input, select').each(function(i, input) {
            input.value = input.defaultValue;
            formValidation.resetField('notificationEmail', input.defaultValue);
            
            //disable submit button
            $(input.form).find(':submit').addClass('disabled').attr('disabled', '');
          });
        }
      }
    });
  };

  return {
    init : initialize
  };


}());

/* jshint unused:false */
rm.accordion = (function () {

	'use strict';

  var linkSymbol = '.link__icon',
      linkUp = 'icon--chevron-up',
      linkDown = 'icon--chevron-down';
      
	var initialize = function() {
		// var $accordions = $('.js-accordion');
    // $accordions.collapse();

    bindAccordionToggleIcons();
    bindHyperLinkForAlert();
    bindCollapsedClick();
    accordionCheckSess();
    bindCustomAccordion();
	};

  var bindCollapsedClick = function() {
    $('.js-accordion.link__label').click(function(e) {
      e.preventDefault();
      var $this = $(this);
      if($this.hasClass('collapsed')) {
        $this.find('span').text($this.data('collapse-text') || 'Collapse');
        accordionCollapsedSess($this.attr('data-target'), 'Collapse');
      } else {
        $this.find('span').text($this.data('expand-text') ||'Expand');
        accordionCollapsedSess($this.attr('data-target'), 'Expand');
      }
    });
  };


  var bindHyperLinkForAlert = function(){
    if($('*[data-attr-custom-link]').length>0){
      $('*[data-attr-custom-link]').each(function(){
        var $customLink = $(this);
        $customLink.bind('click keypress',function(e){          

          var link = $customLink.attr('data-attr-custom-link');
          var code = (e.keyCode ? e.keyCode : e.which);
          if(code === 13 && e.type === 'keypress'){            
            window.location = link;
            return false;
          }   
          else if(e.type === 'click'){
            window.location = link;
            return false;
  
          }

        });
      });
    }

    $('#accordion-access-by-individuals .table__link, #accordion-access-by-individuals .cta, #accordion-access-by-individuals .invitesomeoneBtn').click(function (){
      rm.sessionStorage.removeSession('accordion-access-providers');
      rm.sessionStorage.removeSession('accordion-access-providers-empty');
      rm.sessionStorage.setSession('accordion-access-by-individuals-empty', 'Collapse');
      rm.sessionStorage.setSession('accordion-access-by-individuals', 'Collapse');
    });

    $('#accordion-access-by-individuals-empty .table__link, #accordion-access-by-individuals-empty .cta, #accordion-access-by-individuals-empty .invitesomeoneBtn').click(function (){
      rm.sessionStorage.removeSession('accordion-access-providers');
      rm.sessionStorage.removeSession('accordion-access-providers-empty');
      rm.sessionStorage.setSession('accordion-access-by-individuals', 'Collapse'); 
      rm.sessionStorage.setSession('accordion-access-by-individuals-empty', 'Collapse');
    });

    $('#accordion-access-providers .table__link, #accordion-access-providers .cta').click(function (){
        rm.sessionStorage.removeSession('accordion-access-by-individuals');
        rm.sessionStorage.removeSession('accordion-access-by-individuals-empty');
        rm.sessionStorage.removeSession('accordion-access-providers-empty');
        rm.sessionStorage.setSession('accordion-access-providers', 'Collapse');
    });

    
    $('#accordion-access-providers-empty .table__link, #accordion-access-providers-empty .cta').click(function (){
      rm.sessionStorage.removeSession('accordion-access-by-individuals');
      rm.sessionStorage.removeSession('accordion-access-by-individuals-empty');
      rm.sessionStorage.removeSession('accordion-access-providers');
      rm.sessionStorage.setSession('accordion-access-providers-empty', 'Collapse');
    });

  };

  function accordionCollapsedSess(id, state){
    rm.sessionStorage.setSession(id, (state === 'Collapse') ? 'Collapse' : 'Expand');
  }

  var accordionCheckSess = function (){
    $.each($('.js-accordion.link__label'), function(){
      if(rm.sessionStorage.getSession('accordion-access-by-individuals') === 'Collapse'){
        $('[data-target="#accordion-access-by-individuals"]').trigger('click');
        $('[data-target="#accordion-access-by-individuals"] span').html('Collapse');
      }

      if(rm.sessionStorage.getSession('accordion-access-by-individuals-empty') === 'Collapse'){
        $('[data-target="#accordion-access-by-individuals-empty"]').trigger('click');
        $('[data-target="#accordion-access-by-individuals-empty"] span').html('Collapse');
      }

      if(rm.sessionStorage.getSession('accordion-access-providers') === 'Collapse'){
        $('[data-target="#accordion-access-providers"]').trigger('click');
        $('[data-target="#accordion-access-providers"] span').html('Collapse');
      }

      if(rm.sessionStorage.getSession('accordion-access-providers-empty') === 'Collapse'){
        $('[data-target="#accordion-access-providers-empty"]').trigger('click');
        $('[data-target="#accordion-access-providers-empty"] span').html('Collapse');
      }

    }); 

    
  };

  var bindAccordionToggleIcons = function () {
    var $toggles = $('[data-toggle="collapse"], [data-toggle-mobile="collapse"]');

    // Bind each collapse
    $toggles.each(function () {
      var $thisToggle = $(this),
        $thisToggleIcon = $thisToggle.find(linkSymbol),
        thisTarget = $thisToggle.attr('data-target') || $thisToggle.attr('data-target-mobile') || $thisToggle.attr('href'),
        $thisCollapse = $(thisTarget);

      $thisCollapse
        .on('show.bs.collapse', function (e) {
          e.stopPropagation();

          // If this toggle has an icon
          if ($thisToggleIcon.length) {
            $thisToggleIcon
              .addClass(linkUp)
              .removeClass(linkDown);
          }

          $thisToggle.removeClass('collapsed');
        })
        .on('hide.bs.collapse', function (e) {
          e.stopPropagation();

          // If this toggle has an icon
          if ($thisToggleIcon.length) {
            $thisToggleIcon
              .addClass(linkDown)
              .removeClass(linkUp);
          }

          $thisToggle.addClass('collapsed');
        });
    });
  };

  var bindCustomAccordion = function() {
    $(document).on('click', '[data-toggle="collapse-custom"]', function() {
      var collapseDivAttr = $(this).attr('data-target');
      var expandedStatus = $(this).attr('aria-expanded');
      if(collapseDivAttr) {
        var collapseDiv = $(collapseDivAttr);
        if(collapseDiv.length > 0) {
          if(expandedStatus === 'false' || expandedStatus === 'undefined') {
            $(this).attr('aria-expanded', true).html('Collapse');
            collapseDiv.stop(true, true).slideDown();
          }
          if(expandedStatus === 'true') {
            $(this).attr('aria-expanded', false).html('Expand');
            collapseDiv.stop(true, true).slideUp();
          }
        }
      }
    });
  };

	// public api
	return {
		init: initialize
	};

})();
rm.switcher = (function() {

    'use strict';

    var initialize = function() {
        var switcher = '.js-switcher',
            switcherBtn = '.js-switcher__btn',
            switcherElm = '.js-switcher__btn, .switcher__link',
            switcherClass = 'switcher--focus',
            switcherLink = '.switcher__links li a',
            switcherLinkLast = '.switcher__links li:last-child a#logOutLink';


        function highlight() {
            $(switcher).addClass(switcherClass);
        }

        function closeSwitcher() {
            $(switcher).removeClass('open');
        }

        function unhighlight() {
            $(switcher).removeClass(switcherClass);
        }

        $(switcherElm).on('focus', function(e) {
            e.preventDefault();
            if($(this).hasClass('switcher__link')) $(switcherBtn).attr('aria-haspopup', true);
            $(switcherElm).on('keyup', function(event) {
                var code = (event.keyCode ? event.keyCode : event.which);
                if ((code === 9 || code === 38 || code === 40) && (event.currentTarget.id === 'dLabel')) {
                    highlight();
                }
            });
        }).on('blur', function(e) {
          if($(this).hasClass('switcher__link')) $(switcherBtn).removeAttr('aria-haspopup');
        });
            
        $(switcherLink).on('focus', function (e){
            unhighlight();
        }); 

        $(switcherLink).on('blur', function(e) {
            $(switcher).unbind('keyup', highlight);
        });

        $(switcherBtn).on('blur', function(e) {
            $(switcher).unbind('keyup', highlight);
            if (!$(switcher).hasClass('open')) {
                unhighlight();
            }
        });

        $(switcherLinkLast).on('keydown', function(e) {
            if ((e.which || e.keyCode) === 38) {
            } else {
                unhighlight();
                closeSwitcher();
            }
        });

        // Remove the border at switcher when the user clicks on the page
        $(document).click(function(e) {
            if (!$(e.target).closest(switcher).length) {
                unhighlight();
            }
        });

        $('.admin-dropdown-option li:last-child').on('keydown', function(e) {
            if ((e.which || e.keyCode) === 9) {
                $('div.admin-dropdown').removeClass('open');
            }
        });

        $( document ).ready(function() {
            $('.switcher__symbol .symbol__content').append('<span class="sr-only switcher-icon">open record switcher</span>');
        });
        $(switcher).click(function(){
            if($(this).hasClass('open')){
                $('.switcher-icon').html('open record switcher');
            }
            else{
               $('.switcher-icon').html('close record switcher');
                
            }
        });
    };

    // public api
    return {
        init: initialize
    };

})();
/* globals Unison */
/* jshint unused:false */
rm.nav = (function () {

  'use strict';

  var elemSelector = {
    navToggle:      '.navbar__link',
    linkAll:        '.navbar__link--all',
    nav:            '.nav',
    dLinkAllOpen:   '.nav-mobile__toggle:not(.collapsed)',
    mLinkAllOpen:   '.nav-mobile__toggle:not(.collapsed)',
    searchForm:      '#formGlobalSearch'
  };


  var $document = rm.globals.DOM.doc,
    navigationCollapse = '#nav--expanded';


  var initialize = function () {

    $(elemSelector.linkAll).on('click', function() {
      $(this).blur();
    });

    $(elemSelector.searchForm).on('success.form.fv', function() {
      slideUpFunction();
    });


    offClickCollapse();
    bindNavigationCollapse();
    bindCoverClick();
    bindMobileNotificationIconClick();
    bindSearchClick();
    tabToShowSubmenus();
    tabAwayToHideSearchBoxAndMenu();
    mobileNavToggle();
    tabToHideSubmenus();
    bindSearchMisc();
    slideUpFunction();
    bindArrowNavigation();
    bindA11yRules();
  };

  var tabToShowSubmenus = function(){
        document.onkeyup = function(event){
            var keyCode = event.which || event.keyCode;
            if( 9 === keyCode) {
                var $activeElem = $(document.activeElement);
                var $dropdown = $activeElem.parent('.dropdown');
                if ( $dropdown.length > 0 ) {
                    $dropdown
                    .addClass('hover')
                    .siblings()
                    .removeClass('hover');

                } else {
                    $activeElem
                    .parent()
                    .siblings()
                    .removeClass('hover');
                }

            }
        };
  };

  var tabToHideSubmenus = function() {
    document.onkeyup = function(event){
      var keyCode = event.which || event.keyCode;
      if( 9 === keyCode) {
          var $activeElem = $(document.activeElement);
          var $dropdown = $activeElem.parent('.navbar__item');
          if ( $dropdown.hasClass('navbar__item') || $activeElem.parent().attr('id') === 'nav-search') {
              $('.navbar__item').removeClass('open').not($dropdown);
          }
      }
    };
  };

  var slideUpFunction = function() {
    $('#nav-search-input-container .search-section').slideUp('300', function() {
      if($(this).parent().is('#nav-search-input-container')) {
        $('#nav-search .navbar__link').attr('aria-expanded', $(this).is(':visible')); 
      }
    });
  };

  var tabAwayToHideSearchBoxAndMenu = function(){
        document.onkeydown = function(event){
            var keyCode = event.which || event.keyCode;
            if( 9 === keyCode) {
                var $searchSection = $(document.activeElement).closest('.search-section');
                if ($searchSection.length > 0) {                                    
                    if (($(document.activeElement).hasClass('global-search-submit') && !event.shiftKey) || (event.shiftKey && !($(event.target).hasClass('global-search-submit') || $(event.target).hasClass('global-search-clear'))) ) {
                      slideUpFunction();
                  }
                }

                var $activeElem = $(document.activeElement);
                var $dropdown = $activeElem.closest('.dropdown');
                if ( $dropdown.length > 0 ) {
                   if( $activeElem.closest('li').is(':last-child') ) {
                        $dropdown.removeClass('hover');
                   }
                }
            }
        };
  };

  var offClickCollapse = function () {
    $('html').on('click touchstart',function(event){
    if(!$(event.target).closest(elemSelector.nav).length &&
       !$(event.target).is(elemSelector.nav) &&
       !$(event.target).is(elemSelector.dLinkAllOpen)) {
        var bp = Unison.fetch.now().name;
        if (bp === 'xs') {
          $(elemSelector.mLinkAllOpen).click();
        }
        else {
          $(elemSelector.dLinkAllOpen).click();
          if(event.target.href !== undefined &&
             event.which !== undefined &&
             event.target.className.indexOf('navbar__link') >= 0) {
              if(
                $(event.target).parent('#nav-search').length ||
                $(event.target).parent('#nav-help').length ||
                $(event.target).closest('body').find('form').hasClass('dirty')){
                $(event.target).siblings('.menu-redirect-link').trigger('click');
              }
              else{
                  window.location.href = event.target.href;
              }
          }
        }
      }

      if($(event.target).parents('#nav-search-input-container').length === 0 &&
        $(event.target).parents('#nav-search').length === 0){
        if($('#nav-search-input-container .search-section').css('display') === 'block'){
          $('#nav-search-input-container .search-section').slideUp('300', function() {
            if($(this).parent().is('#nav-search-input-container')) {
              $('#nav-search .navbar__link').attr('aria-expanded', $(this).is(':visible')); 
            }
          });
        }
      }

    });
  };

  var bindNavigationCollapse = function () {
    $(navigationCollapse)
      .on('show.bs.collapse', function (e) {
        e.stopPropagation();

        var bp = Unison.fetch.now().name;
        if (bp === 'xs') {
          rm.scroll.lock();
          rm.cover.show();
        }
      })
      .on('hide.bs.collapse', function (e) {
        e.stopPropagation();

        var bp = Unison.fetch.now().name;
        if (bp === 'xs') {
          rm.scroll.unlock();
          rm.cover.hide();
        }
      });
  };

  var bindCoverClick = function () {
    // Live bind click (since `.cover` is only appended on first rm.cover.show())
    $document.on('click', '.cover', function () {
      $('#nav--expanded').collapse('hide');
    });
  };

  /* Notification Icon (Mobile only) */
  var bindMobileNotificationIconClick = function () {
    var $icon = $('.icon--top-notification'),
        nState = rm.topNotification.state,    // state of notification
        nEvt = rm.topNotification.getNS().evt.toggle; // event namespace of notification

    // Show the Notification when Icon is clicked
    $icon.click(function () {
      rm.topNotification.show(true);
    });

    // Update the Icon visible state accordingly by listening to the Notification Visibility state
    rm.topNotification.$cache.wrap.on(nEvt, function(){
      var isNotificationOn = nState.isVisible && nState.isVisibleInMobile;
      $icon[isNotificationOn ? 'addClass' : 'removeClass']('hidden');
    });
  };

  var bindSearchClick = function(){
    $('#nav-search .navbar__link').click(function(e){
      e.preventDefault();
      
      if(!$(this).is(':focus') && $(this).attr('aria-expanded') === 'false') {
        $(this).attr('aria-expanded', true).focus();
        openSearchDropdown();
      } else {
        openSearchDropdown();
      }
    });

    $('#nav-search .navbar__link').on('keypress', function(event){
        if((event.keyCode || event.which) === 13){
            event.preventDefault();
            openSearchDropdown();
        }
    });
  };

  var openSearchDropdown = function(){
    
    if(!$('body').hasClass('search-results') && !$('body').hasClass('search-no-results')){
      $('#nav-search-input-container .search-section').slideToggle({ 
        'duration' : '300', 
        'complete' : function() {
          if($(this).parent().is('#nav-search-input-container')) {
            $('#nav-search .navbar__link').attr('aria-expanded', $(this).is(':visible')).focus();
            $('#nav-search-input-container .global-search-input').delay(500).focus();
          }
        }
      });
    } else {
      setTimeout(function() {window.scrollTo(0,0);},1);
      $('.global-search-page .global-search-input').delay(500).focus();
    }
  };

  var mobileNavToggle = function() {
    var mobSearchToggle = $('.nav-mobile__search');
    var mobNavToggle = $('.nav-mobile__toggle');
    $(mobSearchToggle).on('click', function() {
      if(!$(mobSearchToggle).hasClass('collapsed')) {
        $(mobSearchToggle).html('<span class="icon icon--search icon--sm" data-toggle="collapse" data-target="#global-search-mob"></span> Search');
      } else {
        $(mobSearchToggle).text('Close');
      }
    });
    $(mobNavToggle).on('click', function(e) {
      e.preventDefault();
      if(!$(mobNavToggle).hasClass('collapsed')) {
        $(mobNavToggle).html('<span data-toggle="collapse" data-target="#nav--expanded"><span class="sr-only">Open navigation</span><span class="nav-mobile__bar"></span><span class="nav-mobile__bar"></span><span class="nav-mobile__bar"></span></span> Menu');
      } else {
        $(mobNavToggle).html('<span class="icon icon--close icon--sm make-unactionable" data-toggle="collapse" data-target="#nav--expanded"></span> Close');
        $('#global-search-mob').collapse('hide');
        $(mobSearchToggle).html('<span class="icon icon--search icon--sm" data-toggle="collapse" data-target="#global-search-mob"></span> Search');
      }
    });
  };
  
  var bindSearchMisc = function() {
    
    //Switching search pop-up on window resize
    if($('.global-search-page').length === 0) {
      $(window).on('resize', function() {
        if($(window).width() < 768 && $('#nav-search-input-container .search-section').is(':visible')) {
          $('#global-search-mob, #nav-search-input-container .search-section').stop(true, true);
          
          $('#nav-search-input-container .search-section').hide();
          $('#nav-search .navbar__link').attr('aria-expanded', 'false');
          
          $('#mobile-global-search-input').val($('#desktop-global-search-input').val());
          
          $('#global-search-mob')
            .attr('class','collapse in')
            .attr('aria-expanded', 'true');
          $('.nav-mobile__search')
            .attr('aria-expanded', 'true')
            .attr('class', 'nav-mobile__search pull-right')
            .html('Close');
            
        } else if($(window).width() > 767 && $('#global-search-mob').is(':visible')) {
          $('#global-search-mob, #nav-search-input-container .search-section').stop(true, true);
          
          $('#nav-search-input-container .search-section').show();
          $('#nav-search .navbar__link').attr('aria-expanded', 'true');
          
          $('#desktop-global-search-input').val($('#mobile-global-search-input').val());
          
          $('#global-search-mob')
            .attr('class','collapse')
            .attr('aria-expanded', 'false');
          $('.nav-mobile__search')
            .attr('aria-expanded', 'false')
            .attr('class', 'nav-mobile__search pull-right collapsed')
            .html('<span class="icon icon--search icon--sm" data-toggle="collapse" data-target="#global-search-mob"></span> Search');
        }
      });
    }
    
    $(window).on('load', function() {
      if($('.global-search-page').length !== 0) {
        //remove search state on main navigation on results page
        $('.navbar__link').removeAttr('aria-expanded');
      
        //prevent mobile search pop-ups on results page
        $('.nav-mobile__search')
          .removeAttr('aria-expanded')
          .removeAttr('data-toggle')
          .off('click')
          .on('click keypress', function(event) {
            if(event.type === 'click' || (event.type === 'keypress' && (event.keyCode || event.which) === 13)) {
              $('#results-global-search-input').focus();
            }
          });
      }
    });
  };
  
  var bindArrowNavigation = function() {
    var mainLinks = $('.navigation__main').children('li').children('.navbar__link');
    
    mainLinks.on('keydown', function(e) {
      var keyCode = e.which || e.keyCode;
      
      if(40 === keyCode) { //process forward;
        e.preventDefault();
        var nextElement = $(this).parents('li:first').next().children('.navbar__link');
        if(0 === nextElement.length) nextElement = $(this).parents('ul:first').children('li').first().children('.navbar__link'); //we are at the end of list
        
        nextElement.focus();
      } else if(38 === keyCode) {
        e.preventDefault();
        var prevElement = $(this).parents('li:first').prev().children('.navbar__link');
        if(0 === prevElement.length) prevElement = $(this).parents('ul:first').children('li').last().children('.navbar__link'); //we are at the start of list
        
        prevElement.focus();
      }
      
    });
  };
  
  var bindA11yRules = function() {
    /* 
      additional js behaviour from a11y 
      https://niotools.digitalhealth.gov.au/jira/secure/attachment/61358/Menu_Keyboard%20Functions.xlsx
      https://niotools.digitalhealth.gov.au/jira/browse/DTDM-255
    
      Main menu behaviour
      
      Space/Enter	- Opens submenu and moves focus to first item in the submenu.
      
      Right Arrow
        -Moves focus to the next item in the menubar.
        -If focus is on the last item, moves focus to the first item.

      Left Arrow
        -Moves focus to the previous item in the menubar.
        -If focus is on the first item, moves focus to the last item.
        
      Down Arrow - Opens submenu and moves focus to first item in the submenu.
      
      Up Arrow - Opens submenu and moves focus to last item in the submenu.
      
      Home -	Moves focus to first item in the menubar.

      End	- Moves focus to last item in the menubar.
      
      Character
        -Moves focus to next item in the menubar having a name that starts with the typed character.
        -If none of the items have a name starting with the typed character, focus does not move.

    */
    
    var focusItem;
    
    $('.navigation__main .dropdown').on('shown.bs.dropdown', function() {
      if(focusItem) {
        $(focusItem).focus();
        
        var undeFindeVar;
        focusItem = undeFindeVar;
      } else {
        //if space / enter / down arrow
        $(this).find('.dropdown-menu li:first').find('*[role="menuitem"]').first().focus();
      }
      
    });
    
    $('.navigation__main').on('keydown', function(e) {
      var keyCode = e.which || e.keyCode;
      
      var currFirstLetters = [];
      
      $(this).children('li').each(function(i, el) {
        currFirstLetters.push($(el).find('*[role="menuitem"]').text().slice(0,1).toLocaleLowerCase());
      });

      if($(e.target).is($('*[role="menuitem"]')) && (keyCode === 39 || keyCode === 37 || keyCode === 38) && !$(e.target).hasClass('nav__secondary')) {
        
        if(keyCode === 39) {
          //if right arrow
          if($(e.target).parents('li:first').is($(this).children('li:last'))) {
            //if last menuitem
            $(this).children('li:first').find('*[role="menuitem"]').first().focus();
          } else {
            $(e.target).parents('li:first').next().find('*[role="menuitem"]').first().focus();
          }
        } else if(keyCode === 37) {
          if($(e.target).parents('li:first').is($(this).children('li:first'))) {
            //if first menuitem
            $(this).children('li:last').find('*[role="menuitem"]').first().focus();
          } else {
            $(e.target).parents('li:first').prev().find('*[role="menuitem"]').first().focus();
          }
        } else if(keyCode === 38 && $(e.target).attr('data-toggle') === 'dropdown') {
          //if up arrow
          focusItem = $(e.target).parents('li:first').find('.dropdown-menu li:last').find('*[role="menuitem"]').first();
        }
      } else if(keyCode === 36 && !$(e.target).hasClass('nav__secondary') ) {
        //if home
        e.preventDefault();
        $(this).children('li:first').find('*[role="menuitem"]').first().focus();
      } else if(keyCode === 35 && !$(e.target).hasClass('nav__secondary') ) {
        //if end
        e.preventDefault();
        $(this).children('li:last').find('*[role="menuitem"]').first().focus();
      } else if(currFirstLetters.indexOf(e.key.toLocaleLowerCase()) !== -1 && !$(e.target).hasClass('nav__secondary') ) {
        var indexLoc = currFirstLetters.indexOf(e.key.toLocaleLowerCase()) * 1;
        var focusLetterLi = $(this).children('li').get(indexLoc);
        
        if($(e.target).text().slice(0, 1).toLocaleLowerCase() === e.key.toLocaleLowerCase()) {
          var newIndexLoc = currFirstLetters.indexOf(e.key.toLocaleLowerCase(), $(e.target).parents('li:first').prevAll().length + 1);
          if(newIndexLoc !== -1) {
            $($(this).children('li').get(newIndexLoc)).find('*[role="menuitem"]').first().focus();
          } else {
            $(focusLetterLi).find('*[role="menuitem"]').first().focus();
          }
        } else {
          $(focusLetterLi).find('*[role="menuitem"]').first().focus();
        }
      }
    });
    
    /*
      Sub menu behaviour
      
      Right Arrow
        - If focus is on an item with a submenu, opens the submenu and places focus on the first item. (N/A - no third level menu)
        - If focus is on an item that does not have a submenu:
            - Closes submenu.
            - Moves focus to next item in the menubar.
            - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.

      Left Arrow	
        - Closes submenu and moves focus to parent menu item. (N/A - no 3rd level menu)
        - If parent menu item is in the menubar, also:
          - moves focus to previous item in the menubar.
          - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.
          
      Down Arrow
        - Moves focus to the next item in the submenu.
        - If focus is on the last item, moves focus to the first item.
        
      Home - Moves focus to the first item in the submenu.
      End - Moves focus to the last item in the submenu.

      Character	
        - Moves focus to the next item having a name that starts with the typed character.
        - If none of the items have a name starting with the typed character, focus does not move.

    */
    
    $('.navigation__main .dropdown-menu').on('keydown', function(e) {
      var keyCode = e.which || e.keyCode;
      if($(e.target).is($('*[role="menuitem"]')) && (keyCode === 39 || keyCode === 37 || keyCode === 38) && $(e.target).hasClass('nav__secondary')) {
        if(keyCode === 39 && $(e.target).find('.dropdown-menu').length === 0) {
          //if right and has no dropdown
          $(this).parents('li.dropdown:first').trigger('click');
          
          if($(this).parents('li.dropdown:first').is($('.navigation__main').children('li').last())) {
            $('.navigation__main').children('li').first().find('*[role="menuitem"]').first().focus();
          } else {
            $(this).parents('li.dropdown:first').next().find('*[role="menuitem"]').first().focus();
          }
        } else if(keyCode === 37 && $(e.target).find('.dropdown-menu').length === 0) {
          //if right and has no dropdown
          $(this).parents('li.dropdown:first').trigger('click');
          
          if($(this).parents('li.dropdown:first').is($('.navigation__main').children('li').first())) {
            $('.navigation__main').children('li').last().find('*[role="menuitem"]').first().focus();
          } else {
            $(this).parents('li.dropdown:first').prev().find('*[role="menuitem"]').first().focus();
          }
        }
      }
    });
    
    $(document).on('keydown.bs.dropdown.data-api', '.dropdown-menu', function(e) {
      var keyCode = e.which || e.keyCode;
      
      var currFirstLetters = [];
      
      $(this).children('li').each(function(i, el) {
        currFirstLetters.push($(el).find('*[role="menuitem"]').text().slice(0,1).toLocaleLowerCase());
      });
      
      if(keyCode === 38) {
        if($(e.target).parents('li:first').is($(this).children('li:first'))) {
          //if up and first menuitem
          $(this).children('li:last').find('*[role="menuitem"]').first().focus();
        }
      } else if(keyCode === 40) {
        if($(e.target).parents('li:first').is($(this).children('li:last'))) {
          //if down and last menuitem
          $(this).children('li:first').find('*[role="menuitem"]').first().focus();
        }
      } else if(keyCode === 36 && $(e.target).hasClass('nav__secondary')) {
        //if home
        e.preventDefault();
        $(this).children('li:first').find('*[role="menuitem"]').first().focus();
      } else if(keyCode === 35 && $(e.target).hasClass('nav__secondary') ) {
        //if end
        e.preventDefault();
        $(this).children('li:last').find('*[role="menuitem"]').first().focus();
      } else if(currFirstLetters.indexOf(e.key.toLocaleLowerCase()) !== -1 && $(e.target).hasClass('nav__secondary') ) {
        var indexLoc = currFirstLetters.indexOf(e.key.toLocaleLowerCase()) * 1;
        var focusLetterLi = $(this).children('li').get(indexLoc);
        
        if($(e.target).text().slice(0, 1).toLocaleLowerCase() === e.key.toLocaleLowerCase()) {
          var newIndexLoc = currFirstLetters.indexOf(e.key.toLocaleLowerCase(), $(e.target).parents('li:first').prevAll().length);
          if(newIndexLoc !== -1) {
            $($(this).children('li').get(newIndexLoc)).find('*[role="menuitem"]').first().focus();
          } else {
            $(focusLetterLi).find('*[role="menuitem"]').first().focus();
          }
        } else {
          $(focusLetterLi).find('*[role="menuitem"]').first().focus();
        }
      }
    });
  };

  // public api
  return {
    init: initialize
  };

})();
/*jslint browser: true*/

rm.preview = (function () {
	'use strict';

  var $window = $(window);

	var initialize = function() {
    var $previews = $('.preview');
    // resizePreview($previews);

    $window.on('resize', function() {
      resizeBackground();
    });

    $window.on('load', function() {
      resizeBackground();
        if($('.spaceToScrollToFootnotesDiv').length !== 0) $('.spaceToScrollToFootnotesDiv').hide(function() {
            resizeBackground();
        });
    });
	};

  var resizePreview = function ($previews) {
    if ($window.width() < 975) {
      $previews.parent().height(320/760 * $previews.height() + 30);
    }

    else {
      $previews.parent().height('auto');
    }
  };

  var resizeBackground = function () {

    var height =  Math.round($('.preview').height()) + 40;

     $('.zoom-mod').css({
      'height' : height+'px',
      'overflow' : 'hidden'
     });

    if($(document).height() > $(window).height()) {

        $('.set-footer-bottom').css({
            'min-height': '40px',
            'height': '40px'
        });

    } else {
      $('.set-footer-bottom').removeAttr('style');
    }
  };

  // when .js-full-zoom is clicked

  var zoomBtn = $('.js-full-zoom'),
      zoomScreen = $('.zoom'),
      zoomActive = $('.zoom--active'),
      metaViewport = $('meta[name=viewport]'),
      stickyHeader = '.sticky--header';

  $(zoomBtn).click(function () {

    $(zoomScreen).toggleClass('zoom--active');

    if ($('.zoom--active').length) {
      $(metaViewport).attr('content', 'width=device-width, initial-scale=1.0');
      $(stickyHeader).addClass('header--hidden');
      $(zoomBtn).addClass('zoom__close');
    } else {
      $(metaViewport).attr('content', 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0');
      $(stickyHeader).removeClass('header--hidden');
      $(zoomBtn).removeClass('zoom__close');
    }

  });



	// public api
	return {
    init: initialize,
    resizeBackground: resizeBackground
	};
})();

/**
 * -------------------------------------------
 * Purpose
 * -------------------------------------------
 * Since the form validation can't add the validation feedback icon and msg in the right place in the DOM,
 * The validation callback cannot work properly as it only shows the icon (not the msg). Therefore this is
 * needed in order to wrap both elements in a container and be used in the custom validation callback
 * (after validation plugin is initialized)
 *
 *
 * -------------------------------------------
 * Usage
 * -------------------------------------------
 * 1. In validation.js, in the validator object variable,
 * Configure your validation callback prior to Validation Plugin is called, e.g.
 * validators = {
 *   <validationRuleName>: {
 *     validators: {
 *       callback: {
 *         callback: rm.validationHelper.configOneOfReqChecked_callback(<yourCheckboxOrRadioNameAttrValue>)
 *       }
 *     }
 *   }
 * }
 *
 * 2. In validation.js, in your page specific init function,
 * Configure your icon and text AFTER validation has been called, e.g.
 * rm.validationHelper.configOneOfReqChecked_iconAndText(
 *   <yourJQueryFormElement>,
 *   <yourCheckboxOrRadioNameAttrValue>,
 *   <yourValidationErrorMsg>
 * );
 *
 */
rm.validationHelper = rm.validationHelper || (function(){

  'use strict';

  var NS = {
    wrapCls: 'fv-feedback-wrap',
    feedbackParentSlr: '.form-group',
    feedbackIconSlr: ['[data-fv-icon-for*="', '"]'],
    feedbackTextSlr: ['[data-fv-for*="', '"]']
  };

  return {
    configOneOfReqChecked_callback: function (fmElemNameAttrValStr) {
      var hideOnFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return function (value, validator, $input) {
        // - Check if at least one is checked (radio or checkbox)
        var isAtLeastOneChecked = Array.prototype.some.call(
                                      validator._cacheFields[fmElemNameAttrValStr],
                                      function (elem) {
                                        return elem.checked;
                                      }
                                    );
          // - Show/Hide the Feedback icon and msg
          var elem = validator.$form.find('.' + NS.wrapCls)[isAtLeastOneChecked ? 'addClass' : 'removeClass']('hidden'); 

          if(!isAtLeastOneChecked) elem.find('[data-fv-validator="callback"]').show();
          
          $('[name="' + $input.attr('name') +'"]').on('focus',function(){
            if(hideOnFocus === true) elem.find('[data-fv-validator="callback"]').hide();
          });

          $('[name="' + $input.attr('name') +'"]').on('click',function(){
            elem.find('[data-fv-validator="callback"]').hide();
          });

          // - Update the validation
          return isAtLeastOneChecked ? true : { valid: false, message: '' }; 
      };
    },

    configOneOfReqChecked_iconAndText: function ($form, fmElemNameAttrValStr, feedBackErrMsgStr) {
      // Find the Form Validation Icon & Text
      var fvFeedbackTextSlr = NS.feedbackTextSlr.join(fmElemNameAttrValStr),
          fvFeedbackIconSlr = NS.feedbackIconSlr.join(fmElemNameAttrValStr),
          $fmFeedBack = $form.find(fvFeedbackIconSlr + ', ' + fvFeedbackTextSlr),
          $fmGroup = $fmFeedBack.parents(NS.feedbackParentSlr);

      // Wrap both feedback icon/msg and hide the feedback by default unless triggered in callback
      $('<div>')
        .addClass(NS.wrapCls).addClass('hidden')
        .append($fmFeedBack)
        .appendTo($fmGroup);

      // Override default hidden states of both the feedback elements & set the text msg
      $fmFeedBack
        .removeClass('hidden').filter(fvFeedbackTextSlr)[0]
        .textContent = feedBackErrMsgStr;
    },

    isRadioCheck: function (errMsg) {
      return function (value, validator, $input) {
        // - Check if at least one is checked (radio or checkbox)
        var isAtLeastOneChecked = Array.prototype.some.call(
                                      validator._cacheFields[$($input).attr('name')],
                                      function (elem) {
                                        return elem.checked;
                                      }
                                    );
        // - Show/Hide the Feedback icon and msg
        validator.$form.find('.' + NS.wrapCls)[isAtLeastOneChecked ? 'addClass' : 'removeClass']('hidden'); 
               
          // - Update the validation
          return isAtLeastOneChecked ? true : { valid: false, message: errMsg }; 
      };
    }
  };

})();

/* globals moment */
/**
 * Usable Pattern
 * --------------------------------------------------------------------------------------------------------
 * - Validate a particular field when it is blurred (focus out) given form validation is already setup
 *     Via delegator pattern:
 *     $form.on('blur', '<your-element-selector-here>', function () {
 *       $form.data('formValidation').revalidateField($(this));
 *     });
 *
 *
 * - Setting input fields as optional fields
 *     $form.data('formValidation')
 *       .addField(<input-field-name-attr-value>, validators.required)
 *       .enableFieldValidators(<input-field-name-attr-value>, false, 'notEmpty');
 *
 *
 * Docs/Refs
 * --------------------------------------------------------------------------------------------------------
 * + http://formvalidation.io/api/ for formValidation.io documentation
 */
rm.validation = (function () {
  'use strict';

  var elemSelector = {
      formValidate: 'form.js-validate',
      resetButton: 'input[type="reset"], button[type="reset"], .js-reset'
    },

    /**
     * Custom messages
     */
    customMessage = {
      name: ' Only alpha and numeric characters, apostrophes and hyphens are acceptable. Spaces must not appear immediately before or after apostrophes and hyphens.',
      no_caret: ' Only alpha and numeric characters, and special characters: apostrophe, less than sign, greater than sign, ampersand, double-quotes and `~!#%*_-+=.?:;{}()[]/ \,|$@ are acceptable.  Spaces must not appear immediately before or after apostrophes and hyphens.',
      post_code:' Only numeric characters are acceptable. The postcode must contain four numeric characters for an Australian address.'
    },

    /**
     * Used with: rm.validation.update
     */
    updatedFmElmNames = {
      // Example:
      // rules1: [ 'family-name', 'given-name', 'age' ]
      growthChart: [ 'obsv-date[]', 'obsv-head-ccf[]', 'obsv-weight[]', 'obsv-height[]' ]
    },

    /**
     * Default formValidation.io settings
     */
    defaultOptions = {
      framework: 'bootstrap',
      autoFocus: true,
      live:'disabled',
      threshold: 3, //auto-validate from the 3rd character entered
      excluded: [':disabled', ':hidden', ':not(:visible)'],
      icon: {
        valid: 'glyphicon glyphicon-ok',
        invalid: 'icon icon--sm icon--error',
        validating: 'glyphicon glyphicon-refresh'
      },
      verbose: false, //one error message at a time please
      message: 'This value is not valid',
      err: {
        container: function(fields, element) {
          if($(fields).closest('label').length === 0 ) return false;
          var errorMessageWrapper = $('<span class="error-message-wrapper">');
          if($(fields).closest('label').find('span.error-message-wrapper').length === 0) {
            $(fields).closest('label').append(errorMessageWrapper);
          }
          return $(fields).closest('label').find('span.error-message-wrapper');
        }
      }
    },

    /**
     * Pre-mixed validator sets
     *
     * NB. A number of these have default notEmpty validator messages already set
     * but set to disabled. You simply call `enableFieldValidators()` to enable
     * this on a case-by-case basis.
     */
    validators = {
      required: { //A basic required validator
        validators: {
          notEmpty: {
            message: 'Please enter a value.'
          }
        }
      },
      dropdown: {
        validators: {
          notEmpty: {
            message: 'Please make a selection.'
          }
        }
      },
      radio: {
        validators: {
          notEmpty: {
            message: 'Please choose an option.'
          }
        }
      },
      checkbox: {
        validators: {
          notEmpty: {
            message: 'Please choose an option.'
          }
        }
      },
      acceptCheckbox: {
        validators: {
          notEmpty: {
            message: 'You must check this checkbox to continue.'
          }
        }
      },
      file: {
        validators: {
          notEmpty: {
            message: 'Please select a file.'
          }
        }
      },
      pdf: {
        validators: {
          notEmpty: {
            message: 'Please provide a PDF file.'
          },
          file: {
            extension: 'pdf',
            type: 'application/pdf',
            message: 'Please provide a PDF file.'
          }
        }
      },
      maxSize: {
        validators: {
          callback: {
            callback: function (value, validator, $input) {
              if(typeof $input.get(0).files[0]  !== 'undefined') {
                if ($input.get(0).files[0].size > 22020096) {
                  return {
                    valid: false,
                    message: 'The file size exceeds the 21MB limit allowed and cannot be uploaded.'
                  };
                }
              }
              return true;
            }
          }
        }
      },
      dateDay:{
        validators:{
            notEmpty: {
                enabled: true,
                message: 'Enter the day in the format DD, using numbers only with a value greater than 00 and less than 32.'
              },
            callback:{
                callback: function(value, validator, $input){
                  // Handle validation if this datepicker is part of a native date picker
                  if (!$.trim(value) && !validator.getOptions($input.attr('name'), 'notEmpty').enabled) {
                    if(!_isDatePickerModified($input)) {
                      return null;
                    }
                  }

                  // Check if the HTML5 validation is present
                  if($input.parent().find('[data-fv-validator="greaterThan"]:visible').length > 0) {
                      return true;
                  }

                  var day = value*1;
                  
                  var error = {
                    valid:false,
                    message:'Enter the day in the format DD, using numbers only with a value greater than 00 and less than 32.'
                  };
                        
                  //if preceeded with 0 check if format is correct
                  if(value.charAt(0) === '0') {
                    if(day > 9) return error;
                    
                    if(value.charAt(1) === '0') return error;
                  }

                  if ( isNaN(day) ) return error;

                  if ( day < 1 || day > 31 ) return error;

                  if(value.length > 2) return error;

                  return true;
                }
            }
        }
      },
      dateMonth:{
        validators:{
            notEmpty: {
                enabled: true,
                message: 'Enter the month in the format MM, using numbers only with value greater than or equal to 1 and no greater than 12.'
              },
            callback:{
                callback: function(value, validator, $input){
                    if (!$.trim(value) && !validator.getOptions($input.attr('name'), 'notEmpty').enabled) {
                      if(!_isDatePickerModified($input)) {
                        return null;
                      }
                    }

                    // Check if the HTML5 validation is present
                    if($input.parent().find('[data-fv-validator="greaterThan"]:visible').length > 0) {
                      return true;
                    }

                    var error = {
                        valid:false,
                        message:'Enter the month in the format MM, using numbers only with value greater than or equal to 1 and no greater than 12.'
                      };
                      
                    var testMonth = value * 1;
                      
                    //if preceeded with 0 check if format is correct
                    if(value.charAt(0) === '0') {
                      if(testMonth > 9) return error;
                      
                      if(value.charAt(1) === '0') return error;
                    }

                    if ( !_isValidMonth(value) ) return error;

                    if(value.length > 2) return error;
                    return true;

                }
            }
        }
      },
      dateYear:{
        validators:{
            notEmpty: {
                enabled: true,
                message: 'Enter the year in the format YYYY, using numbers only with a value greater than or equal to 1900.'
              },
            callback:{
                callback: function(value, validator, $input){
                  // Handle validation if this datepicker is part of a native date picker
                    if (!$.trim(value) && !validator.getOptions($input.attr('name'), 'notEmpty').enabled) {
                      if(!_isDatePickerModified($input)) {
                        return null;
                      }
                    }

                    // Check if the HTML5 validation is present
                    if($input.parent().find('[data-fv-validator="greaterThan"]:visible').length > 0) {
                      return true;
                    }

                    var error = {
                        valid:false,
                        message:'Enter the year in the format YYYY, using numbers only with a value greater than or equal to 1900.'
                    };


                    if ( !_isValidYear(value) ) return error;

                    return true;

                }
            }
        }
      },
      duplicateEntryOrBeforeDate:{
        validators:{
          callback:{
                callback: function(value, validator, $input){
                  var error = {
                    valid:false,
                    message:''
                  };

                  if(($input.attr('data-duplicate-date') !== 'no') && (typeof $input.attr('data-duplicate-date') !== typeof undefined)){
                       error.message = 'An observation already exists for the date ' + $input.attr('data-duplicate-date').split('|')[1] + ' and type Head Circumference, Height, Weight.';
                       return error;
                  }

                  if(($input.attr('data-invalid-date') !== 'no') && (typeof $input.attr('data-invalid-date') !== typeof undefined)){
                    error.message = 'Please enter a valid date by filling out the fields: Day (DD), Month (MM) and Year (YYYY) using numbers only.';
                    return error;
                  }

                  if(($input.attr('data-before-date') !== 'no') && (typeof $input.attr('data-before-date') !== typeof undefined)){
                      error.message = 'The Observation date is before ' + $input.attr('data-before-date').split('|')[2] + ' birthdate. Only measurements made on or after ' + $input.attr('data-before-date').split('|')[1] + ' can be accepted.';
                      return error;
                  }

                  if(($input.attr('data-after-date') !== 'no') && (typeof $input.attr('data-after-date') !== typeof undefined)){
                    error.message = 'Date cannot be in the future.';
                    return error;
                  }

                  return true;
                }
            }
        }
      },
      choiceEmailNotifSettings:{
        validators:{
          callback:{
             callback: function(value, validator,$input){
                 var error = {
                   valid:false,
                   message:'You have changed a notification preference to \'Notify by email\'. Please enter and confirm your email address. You can also change your preference.'
                 };

                  var radioValue='';

                 if($('#radio-first-time-email').is(':checked') || $('#radio-emergency-email').is(':checked') || $('#radio-shared-summary-email').is(':checked') || $('#radio-advance-care-email').is(':checked') || $('#radio-nominated-email').is(':checked') || $('#radio-new-email').is(':checked') ){
                     radioValue='Email';
                 }
                 if( validator.$form.attr('data-status') === 'initialized' &&  radioValue==='Email') {
                   return error;
                 }
                 else if(value !== '' &&  (validator.$form.attr('data-status') === 'verification-pending' || validator.$form.attr('data-status') === 'verification-required') &&  radioValue==='Email')
                 {
                   error.message = 'You have changed a notification preference to \'Notify by email\'. Please verify your email address with the code sent to you. You can also change your preference.';
                   return error;
                 }
               return true;

             }
          }
     }
      },
      choiceMobileNotifSettings:{
        validators:{
          callback:{
            callback: function(value, validator,$input){
                var error = {
                  valid:false,
                  message:'You have changed a notification preference to \'Notify by SMS (mobile)\'. Please enter and confirm your mobile number. You can also change your preference.'
                };
                 var radioValue='';
                if($('#radio-first-time-sms').is(':checked') || $('#radio-emergency-sms').is(':checked') || $('#radio-shared-summary-sms').is(':checked') || $('#radio-advance-care-sms').is(':checked') || $('#radio-nominated-sms').is(':checked') || $('#radio-new-sms').is(':checked') ){
                    radioValue='SMS';
                }
                if( validator.$form.attr('data-status') === 'initialized' && radioValue==='SMS'){
                  return error;
                }
                else if(value !== '' &&  (validator.$form.attr('data-status') === 'verification-pending' || validator.$form.attr('data-status') === 'verification-required') && radioValue==='SMS')
                {
                  error.message = 'You have changed a notification preference to \'Notify by SMS (mobile)\'. Please verify your mobile number with the code sent to you. You can also change your preference.';
                  return error;
                }
              return true;
            }
          }
    }
      },
      expiredVerificationCodeEmail:{
        validators:{
            callback:{
                callback: function(input, validators, $input){
                    var error = {
                        valid:false,
                        message:$input.attr('data-mesg')
                      };

                    if($input.val() === ''){
                      error.message = ' ';
                      $('#custom-validate').html('Please enter a value.');
                      return error;
                    }

                    if(!$input.val().match(/^((?!<)(?!>)(?!@)(?!\?)(?!%)(?!#)(?!\$)(?!\\)(?!\|)(?!\/)(?!;)(?!")(?!“)(?!”)(?!&)[\s\S])*$/i)){
                      error.message = ' ';
                      $('#custom-validate').html('This field must contain only alphanumeric characters. Please check and try again.');
                      return error;
                    }

                    var expired = $input.attr('data-expired');
                    if ( _expiredVerificationCodeEmail(expired)){
                      $('#custom-validate').html(error.message);
                      error.message = ' ';
                      return error;
                    }
                    $('#custom-validate').html('');
                    return true;
                }
            }
        }
      },
      expiredVerificationCodeMobile:{
        validators:{
            callback:{
                callback: function(input, validators, $input){
                    var error = {
                        valid:false,
                        message:$input.attr('data-mesg')
                      };

                    if($input.val() === ''){
                      error.message = ' ';
                      $('#custom-validate2').html('Please enter a value.');
                      return error;
                    }

                    if(!$input.val().match(/^((?!<)(?!>)(?!@)(?!\?)(?!%)(?!#)(?!\$)(?!\\)(?!\|)(?!\/)(?!;)(?!")(?!“)(?!”)(?!&)[\s\S])*$/i)){
                      error.message = ' ';
                      $('#custom-validate2').html('This field must contain only alphanumeric characters. Please check and try again.');
                      return error;
                    }

                    var expired = $input.attr('data-expired');
                    if ( _expiredVerificationCodeMobile(expired)) {
                      $('#custom-validate2').html(error.message);
                      error.message = ' ';
                      return error;
                    }
                    $('#custom-validate2').html('');
                    return true;
                }
            }
        }
      },
      provideOne:{
        validators:{
            callback:{
                callback: function(value, validation, $input){
                    var error = {
                        valid:false,
                        message:' '
                      };
                    var $inputFields = $input.closest('.record');
                    var $customAlert = $inputFields.find('.custom-alert-message');
                    
                    $input.val($input.val().replace(/^0+(?=\d)/, ''));

                      if( $inputFields.length ) {
                        var head = $inputFields.find('input[name="obsv-head-ccf[]"]').val();
                        var height = $inputFields.find('input[name="obsv-height[]"]').val();
                        var weight = $inputFields.find('input[name="obsv-weight[]"]').val();

                        if ( head.trim() === '' && height.trim() === '' && weight.trim() === '' ){
                          $customAlert.removeClass('hidden');
                          $customAlert.addClass('has-error');
                          return error;
                        } 
                        $customAlert.addClass('hidden');
                        $customAlert.removeClass('has-error');
                      }
                    return true;

                }
            }
        }
      },
      weightDecimal:{
        validators:{
            regexp: {
              regexp: /^((\d|[0-9]\d+)(\.\d{0,3})?|\.\d{0,3})$/,
              message: 'Please enter no more than 3 decimal place.'
          }
        }
      },
      headHeightDecimal:{
        validators:{
            regexp: {
              regexp: /^((\d|[0-9]\d+)(\.\d{0,1})?|\.\d{0,1})$/,
              message: 'Please enter no more than 1 decimal place.'
            }
          }
        },
      phone: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter a valid contact number.'
          },
          regexp: {
            regexp: /^(\+[1-9]|0)[0-9 ]{9,19}$/,
            message: 'Please enter a valid contact number.'
          }
        }
      },
      email: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter an email address.'
          },
          stringLength: {
            max: 100,
            min: 1,
            message: 'The email address must be no more than 100 characters.'
          },
          emailAddress: {
            message: 'Please enter a valid email address.'
          },
          regexp: {
            regexp: /^(?=^.{1,100}$)([-a-zA-Z0-9~!$%^&*_=+}{\'?]+(?:\.[-a-zA-Z0-9~!$%^&*_=+}{\'?]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?)$/,
            message: 'Please enter a valid email address.'
          }
        }
      },
      url: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter a URL.'
          },
          regexp: {
            regexp: /^(https?:)?(\/\/)?(www\.)?[a-zA-Z0-9_-]+([\.\/]?[a-zA-Z0-9_-]+\/?)+/,
            message: 'Please enter a valid URL.'
          }
        }
      },
      postCode: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter a postcode.'
          },
          regexp: {
            regexp: /^\d{4}$/,
            message: 'Please enter a valid postcode.'
          }
        }
      },
      fax: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter a fax number.'
          },
          regexp: {
            regexp: /^([+\- \(\)]*[0-9]{1}[+\- \(\)]*){10,20}$/,
            message: 'Please enter a valid fax number'
          }
        }
      },
      mobile: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Mobile number is required.'
          },
          callback: {
            callback: function (value, validator, $input) {
              if(value !== '') {
                var _totalDigits = (value.match(/\d/g)) ? value.match(/\d/g).length : 0,
                    hasInvalidNum = _totalDigits < 10 || _totalDigits > 20,
                    hasInvalidPrefix = !/^((0|(\+61))\s*4)/g.test(value),
                    hasInvalidChar = /[^\+?\d\s]/g.test(value) || /\+{2,}/g.test(value) || (/\+/.test(value) && !/^\+/.test(value)),
                    isNotValid = hasInvalidChar || hasInvalidPrefix || hasInvalidNum;

                return !isNotValid ? true : {
                  valid: false,
                  message: 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.'
                };
              } else {
                 return true;
              }
            }
          }        }
      },
      pager: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter a pager number.'
          },
          regexp: {
            regexp: /^([+\- \(\)]*[0-9]{1}[+\- \(\)]*){10,20}$/,
            message: 'Please enter a valid pager number.'
          }
        }
      },
      code: {
        threshold: 1,
        validators: {
          notEmpty: {
            message: 'The code needs to be 4 to 8 characters using letters and numbers only.'
          },
          regexp: {
            regexp: /^(([a-zA-Z0-9]){4,8})$/i,
            message: 'The code needs to be 4 to 8 characters using letters and numbers only.'
          }
        }
      },
      codeConfirm: {
        threshold: 1,
        validators: {
          notEmpty: {
            message: 'The code needs to be 4 to 8 characters using letters and numbers only.'
          },
          identical: {
            field: 'enter-code',
            message: 'Please ensure your codes match.'
          }
        }
      },
      textonly: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter a value.'
          },
          regexp: {
            regexp: /^[a-z\s]+$/i,
            message: 'This can consist of alphabetical characters and spaces only.'
          }
        }
      },
      limit300chars: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter a value.'
          },
          stringLength: {
            max: 300,
            min: 0,
            message: 'Please enter less than 300 characters.'
          }
        }
      },
      noRepName: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter the name of the Nominated Representative.'
          },
          regexp: {
            regexp: /^((?!%\d)[\s\S])*$/i,
            message: 'The My Health Record system does not support the characters entered.'
          },
          stringLength: {
            max: 40,
            min: 0,
            message: 'Please enter a name of no more than 40 characters.'
          }
        }
      },
      manageNomRepAccess: {
        validators: {
          callback: {
            callback: rm.validationHelper.configOneOfReqChecked_callback('set-nom-rep-access[]', false)
          }
        }
      },
      radioAccessLevel: {
        validators: {
          callback: {
            callback: rm.validationHelper.configOneOfReqChecked_callback('nominated-access', false)
          }
        }
      },
      changeDocumentAccessLevel: {
        validators: {
          callback: {
            callback: rm.validationHelper.configOneOfReqChecked_callback('document-access', false)
          }
        }
      },
      verifyIdentityAccess: {
        validators: {
          callback: {
            callback: rm.validationHelper.configOneOfReqChecked_callback('radio-identity-options', false)
          }
        }
      },
      identityVerificationMethod: {
        validators: {
          callback: {
            callback: rm.validationHelper.configOneOfReqChecked_callback('verification-type', false)
          }
        }
      },
      adminMedicareCardRadioCheck: {
        validators: {
          callback: {
            callback: rm.validationHelper.configOneOfReqChecked_callback('checkChildSameMedicareCard', false)
          }
        }
      },
      checkboxDeclare: {
        validators: {
          callback: {
            callback: rm.validationHelper.configOneOfReqChecked_callback('consent_check', false)
          }
        }
      },
      radioCustomError: {
        validators: {
          required: { //A basic required validator
            validators: {
              notEmpty: {
                enable: true,
                message: 'Please answer the question.'
              }
            }
          },
          callback: {
            callback: rm.validationHelper.isRadioCheck('Please answer the question.')
            }
          }
      },
      name: {
        validators: {
          regexp: {
            regexp: /(?!.*'\s)(?!.*\s')(?!.*-\s)(?!.*\s-)^[a-zA-Z\s0-9‘’'-]+$/i,
            message: 'Please enter a name of no more than 40 characters, in the correct format.'
          },
          stringLength: {
            max: 40,
            min: 0,
            message: 'Please enter a name of no more than 40 characters, in the correct format.'
          },
          callback: {
            callback: function (value, validator, $input) {
              if(value.indexOf('‘') !== -1 || value.indexOf('’') !== -1) {
                var replacedString = value.replace(/’/g, '\'');
                replacedString = replacedString.replace(/‘/g, '\'');
                $input.val(replacedString);         
              }
              return true;
            }
          }
        }
      },
      // FEDs: Is this `name_required` validator really required?? Can't we just use the one `name` validator above and flick on a built in notEmpty validation rule? Why does this have a slightly different regex and min stringLength of 1?
      name_required: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter a name of no more than 40 characters, in the correct format.'
          },
          regexp: {
            regexp: /(?!.*\s\s)(?!.*'\s)(?!.*\s')(?!.*-\s)(?!.*\s-)^[a-zA-Z\s0-9‘’'-]+$/i,
            message: 'Please enter a name of no more than 40 characters, in the correct format.'
          },
          stringLength: {
            max: 40,
            min: 0,
            message: 'Please enter a name of no more than 40 characters, in the correct format.'
          },
          callback: {
            callback: function (value, validator, $input) {
              if(value.indexOf('‘') !== -1 || value.indexOf('’') !== -1) {
                var replacedString = value.replace(/’/g, '\'');
                replacedString = replacedString.replace(/‘/g, '\'');
                $input.val(replacedString);         
              }
              return true;
            }
          }
        }
      },
      givenName: {
        validators: {
          regexp: {
            regexp: /(?!.*'\s)(?!.*\s')(?!.*-\s)(?!.*\s-)^[a-zA-Z\s0-9‘’'-]+$/i,
            message: 'Given name must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'
          },
          stringLength: {
            max: 40,
            min: 0,
            message: 'Given name must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'
          },
          callback: {
            callback: function (value, validator, $input) {
              if(value.indexOf('‘') !== -1 || value.indexOf('’') !== -1) {
                var replacedString = value.replace(/’/g, '\'');
                replacedString = replacedString.replace(/‘/g, '\'');
                $input.val(replacedString);         
              }
              return true;
            }
          }
        }
      },
      familyName: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter the family  name. It must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'
          },
          regexp: {
            regexp: /(?!.*\s\s)(?!.*'\s)(?!.*\s')(?!.*-\s)(?!.*\s-)^[a-zA-Z\s0-9‘’'-]+$/i,
            message: 'Please enter the family  name. It must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'
          },
          stringLength: {
            max: 40,
            min: 0,
            message: 'Please enter the family  name. It must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'
          },
          callback: {
            callback: function (value, validator, $input) {
              if(value.indexOf('‘') !== -1 || value.indexOf('’') !== -1) {
                var replacedString = value.replace(/’/g, '\'');
                replacedString = replacedString.replace(/‘/g, '\'');
                $input.val(replacedString);         
              }
              return true;
            }
          }
        }
      },
      name_not_required: {
        validators: {
          regexp: {
            regexp: /(?!.*'\s)(?!.*\s')(?!.*-\s)(?!.*\s-)^[a-zA-Z\s0-9‘’'-]+$/i,
            message: 'Family name must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'
          },
          stringLength: {
            max: 40,
            min: 0,
            message: 'Family name must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'
          },
          callback: {
            callback: function (value, validator, $input) {
              if(value.indexOf('‘') !== -1 || value.indexOf('’') !== -1) {
                var replacedString = value.replace(/’/g, '\'');
                replacedString = replacedString.replace(/‘/g, '\'');
                $input.val(replacedString);         
              }
              return true;
            }
          }
        }
      },
      onedigit: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter a value.'
          },
          regexp: {
            regexp: /^[1-9]+$/i,
            message: '1 to 9 is allowed.'
          },
          stringLength: {
            max: 1,
            min: 1,
            message: 'The code must be 1 digit.'
          }
        }
      },
      tendigits: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter a value.'
          },
          regexp: {
            regexp: /^[0-9]+$/i,
            message: 'Only digits allowed.'
          },
          stringLength: {
            max: 10,
            min: 1,
            message: 'The code must be 10 digit.'
          }
        }
      },
      max16char: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter a title of no more than 16 characters.'
          },
          stringLength: {
            max: 16,
            min: 1,
            message: 'Please enter a title of no more than 16 characters.'
          }
        }
      },
      max40char: {
        validators: {
          stringLength: {
            max: 40,
            min: 1,
            message: 'Must be no more than 40 characters.'
          }
        }
      },
      max120char: {
        validators: {
          stringLength: {
            max: 120,
            min: 0,
            message: 'Please enter a description of no more than 120 characters.'
          }
        }
      },
      max255char: {
        validators: {
          notEmpty: {
            enabled: false,
            message: 'Please enter a title that is a maximum of 255 characters using numbers and letters only.'
          },
          stringLength: {
            max: 255,
            min: 0,
            message: 'Must be 255 characters or less.'
          }
        }
      },
      max300char: {
        validators: {
          stringLength: {
            max: 300,
            min: 0,
            message: 'Must be no more than 300 characters.'
          }
        }
      },
      phaChar: {
        validators: {
          stringLength: {
            max: 16,
            min: 0,
            message: 'Enter an achievement of 16 characters or less, using letters and numbers only.'
          }
        }
      },
      no_percentdigit: {
        validators: {
          regexp: {
            regexp: /^((?!%\d)[\s\S])*$/i,
            message: 'The My Health Record system does not support the characters entered.'
          }
        }
      },
      no_blacklistCharacters: {
        validators: {
          regexp: {
            regexp: /^((?!<)(?!>)(?!@)(?!\?)(?!%)(?!#)(?!\$)(?!\\)(?!\|)(?!\/)(?!;)(?!")(?!“)(?!”)(?!&)[\s\S])*$/i,
            message: 'This field must contain only alphanumeric characters. Please check and try again.'
          }
        }
      },
      dva: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter the DVA number between 2 and 9 characters using numbers and letter only.'
          },
          regexp: {
            regexp: /^[a-zA-Z0-9]+$/i,
            message: 'This can consist of alphabetical characters and numbers.'
          },
          stringLength: {
            max: 9,
            min: 2,
            message: 'A DVA File Number must be between 2 and 9 characters.'
          }
        }
      },
      mcn: {
        threshold: 10,
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter the Medicare card number that is a maximum of 10 characters using numbers only.'
          },
          regexp: {
            regexp: /^[0-9]+$/i,
            message: 'Medicare Card Number must contain only numbers. Please check the number and try again.'
          },
          stringLength: {
            max: 10,
            min: 10,
            message: 'A Medicare Card Number is 10 digits. Please check your input and try again.'
          }
        }
      },
      irn: {
        threshold: 1,
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter the Individual Reference Number between 1 and 9. This can be found to the left of the individual\'s name on the Medicare card.'
          },
          regexp: {
            regexp: /^[1-9]+$/i,
            message: 'A Medicare IRN Number must be between 1 and 9. Please check your input and try again.'
          },
          stringLength: {
            max: 1,
            min: 1,
            message: 'A Medicare IRN Number must be between 1 and 9. Please check your input and try again.'
          }
        }
      },
      ihi: {
        threshold: 16,
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter the IHI number that is a maximum of 16 characters using numbers only.'
          },
          regexp: {
            regexp: /^[0-9]+$/i,
            message: 'An IHI Number is 16 digits. Please check the number you have entered and try again.'
          },
          stringLength: {
            max: 16,
            min: 16,
            message: 'An IHI Number is 16 digits. Please check the number you have entered and try again.'
          }
        }
      },
      other_reason: {
        threshold: 150,
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter other reason of no more than 150 characters, in the correct format.'
        },
          regexp: {
            regexp: /^[a-zA-Z0-9.,' -]+$/i,
            message: 'Please enter other reason of no more than 150 characters, in the correct format.'
        },
          stringLength: {
            max: 150,
            min: 1,
            message: 'Please enter other reason of no more than 150 characters, in the correct format.'
        }
      }
    },
      no_caret: {
        validators: {
          notEmpty: {
            enabled: false,
            message: 'Please enter a value.'
          },
          regexp: {
            regexp: /(?!.*\s\s)(?!.*'\s)(?!.*\s')(?!.*-\s)(?!.*\s-)^[^\^]+$/i,
            message: 'This can consist of alphabetical characters and spaces only.'
          }
        }
      },
      head: {
        validators: {
          notEmpty: {
            enabled: false,
            message: 'Please enter at least one measurement for each date.'
          },
          callback: {
            callback: $.noop  // to be custom set at specific page
          }
        }
      },
      height: {
        validators: {
          notEmpty: {
            enabled: false,
            message: 'Please enter at least one measurement for each date.'
          },
          callback: {
            callback: $.noop  // to be custom set at specific page
          }
        }
      },
      weight: {
        validators: {
          notEmpty: {
            enabled: false,
            message: 'Please enter at least one measurement for each date.'
          },
          callback: {
            callback: $.noop  // to be custom set at specific page
          }
        }
      },
      oneOfReqCheckboxes_accessHistory: {
        validators: {
          callback: {
            callback: rm.validationHelper.configOneOfReqChecked_callback('usertype',false)
          }
        }
      },
      // CA passphrase
      passphrase: {
        validators: {
          notEmpty: {
            enabled: false, //disabled by default
            message: 'Please enter a passphrase.'
          },
          regexp: {
            regexp: /^(?!.* {2})[^-\s][a-zA-Z0-9 ]+[a-zA-Z ]?[a-zA-Z0-9]+$/,
            message: 'Please enter a valid passphrase.'
          },
          stringLength: {
            max: 26,
            min: 13,
            message: 'Please enter a valid passphrase.'
          },
          callback : {
            callback : function (s) {
                // Check for sequential alphabetical characters / numbers
                for(var j in s)
                    if (s[+j+1] !== undefined && String.fromCharCode(s.charCodeAt(j)+1) === s[+j+1] && String.fromCharCode(s.charCodeAt(j)+2) === s[+j+2])
                      return {
                        valid: false,
                        message: 'Please enter a valid passphrase.'
                      };
                return true;
            }
          }
        }
      },
      ivccode: {
        validators: {
          notEmpty: {
            message: 'Please enter a Identity Verification Code or Personal Access Code between 4 and 8 characters using numbers and letters only, for example Code123. Please note that the code is case sensitive.'
          }
        }
      },
      dob: {
        threshold: 10, //only live validate after correct date format (length) has been fully inputted
        validators: {
          notEmpty: {
            valid: false,
            message: 'Date of Birth is not specified.' //nb. non breaking dash characters
          },
          callback: {
            callback: function (value, validator, $input) {
              // Skip validation if the value is empty AND if "notEmpty" validatin rule is disabled via the following:
              // - In HTML:      data-fv-notempty="false"
              // - or In JS:     notEmpty: { enabled: false }
              // - or In IS:     $fvPlugin.enableFieldValidators(<inputElemNameAttrVal>, false, 'notEmpty');
              if (!$.trim(value) && !validator.getOptions($input.attr('name'), 'notEmpty').enabled) return null;

              // Create a moment date object from the passed date value
              var momentObjValue = moment(value, 'DD-MMM-YYYY', true);

              // Check inputted date value format is correct
              if (!momentObjValue.isValid()) {
                // Check alternative ('slash') format
                var momentObjValueExtra = moment(value, 'DD/MM/YYYY', true);
                if (momentObjValueExtra.isValid()) {
                  // Reformat extra format
                  var valueExtra = momentObjValueExtra.format('DD-MMM-YYYY');

                  // Update the visible inputted date string
                  $input.closest('.datepicker').data('DateTimePicker').date(valueExtra);

                  // Update `momentObjValue`
                  momentObjValue = moment(valueExtra, 'DD-MMM-YYYY', true);
                } else {
                  return {
                    valid: false,
                    message: 'Date of Birth format is invalid.' //nb. non breaking dash characters
                  };
                }
              }

              // Check date is not in the future
              var momentObjNow = moment();
              var momentObjEarliest = moment('01-JAN-1900', 'DD-MMM-YYYY', true);
              if (momentObjValue.isAfter(momentObjNow)) {
                if (!$input.closest('.datepicker').is('.datepicker--allow-future')) {
                  return {
                    valid: false,
                    message: 'Date of Birth cannot be later than today.'
                  };
                }
              }
              var ageCheck = moment().diff(moment(momentObjValue, 'DD-MMM-YYYY').format('MM/DD/YYYY'),'years');
              if (ageCheck >= 18) {
                if ($input.closest('.datepicker').is('.dateOfBirth-eighteen-check')) {
                  return {
                    valid: false,
                    message: 'Date of birth is for an individual over 18, please enter a different date.'
                  };
                }
              }
              return true; //made it to here?... you passed validation! :)
            }
          }
        }
      },
      participationinformation: {
        validators: {
          notEmpty: {
            message: 'Please accept the participation information to proceed.'
          }
        }
      },
      globalSearch: {
        validators: {
          notEmpty: {
            message: 'Please enter keyword(s) to search'
          },
          regexp: {
            regexp: /^[a-zA-Z0-9 -]+$/i,
            message: 'Please remove special characters: dash (-) excepted'
          },
          stringLength: {
            max: 100,
            message: 'Please enter 100 characters only'
          },
          callback : {
            callback : function (value) {
              if(value.match(/-/g) !== null && value.match(/-/g).length === value.length) {
                return {
                  valid: false,
                  message: 'Please provide more keywords to refine your search'
                };
              }
              return true;
            }
          }
        }
      },
      substance: {
        validators: {
          notEmpty: {
            enabled: true,
            message: 'Please enter the substance or agent of your allergy. This must contain letters or numbers only.'
          }
        }
      },
      ulcCode: {
        threshold: 9,
        validators: {
          notEmpty: {
            enabled: true,
            message: 'You must enter a value.'
          },
          regexp: {
            regexp: /^$|[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}/i,
            message: 'Please enter a valid ULC.'
          },
          stringLength: {
            max: 9,
            min: 9,
            message: 'Please enter a valid ULC.'
          }
        }
      },
      hiddenDate:{
        validators:{
          callback:{
                callback: function(value, validator, $input){
                    var optionalArgument = {
                        optionalMsgTo : '',
                        optionalMsgFrom : '',
                        futureValidation : true,
                        pastValidation : false,
                        pastCurrentValidation : false
                    };

                    var attributeNode = $input.parent().parent().parent().prev().find('[data-field-type="year"]');
                    if(attributeNode.attr('allowFuture') === 'true'){
                        optionalArgument.futureValidation = false;
                    }

                    if(attributeNode.attr('disabledPastCurrent') === 'true'){
                        optionalArgument.pastCurrentValidation = true;
                    }

                    if(attributeNode.attr('disabledPast') === 'true'){
                        optionalArgument.pastValidation = true;
                    }


                    if(validator.$form.attr('id') === 'formAdminManageAR' || validator.$form.attr('id') === 'formCreateDependantRecord'){
                        optionalArgument.optionalMsgTo =   'Please enter a date on or before the End Date of Authority.';
                        optionalArgument.optionalMsgFrom =   'Please enter a date on or after the Start Date of Authority.';
                    }

                    var dateComparisonResult = dateComparison(value, validator, $input, optionalArgument);
                    if(!dateComparisonResult.valid){
                        return dateComparisonResult;
                    }

                    return true;
                }
            }
        }
    },
    singleHiddenDate:{
        validators:{
            callback:{
                callback: function(value, validator, $input){
                    var optionalArgument = {
                       futureValidation : true,
                       pastValidation : false,
                       pastCurrentValidation : false
                    };

                    if(validator.$form.find('[data-field-type="year"]').attr('allowFuture') === 'true'){
                        optionalArgument.futureValidation = false;
                    }

                    if(validator.$form.find('[data-field-type="year"]').attr('disabledPastCurrent') === 'true'){
                        optionalArgument.pastCurrentValidation = true;
                    }

                    if(validator.$form.find('[data-field-type="year"]').attr('disabledPast') === 'true'){
                        optionalArgument.pastValidation = true;
                    }

                    var singleDateValid = singleDateValidation(value, validator, $input, optionalArgument);
                    if(!singleDateValid.valid){
                        return singleDateValid;
                    }

                    return true;
                }
            }
        }
    },
    multipleHiddenDate:{
      validators:{
        callback:{
              callback: function(value, validator, $input){
                var error = {
                  valid:false,
                  message:''
                };

                if(($input.attr('data-after-date') !== 'no') && (typeof $input.attr('data-after-date') !== typeof undefined)){
                  error.message = 'Date cannot be in the future.';
                  return error;
                }

                if(($input.attr('data-invalid-date') !== 'no') && (typeof $input.attr('data-invalid-date') !== typeof undefined)){
                  error.message = 'Please enter a valid date by filling out the fields: Day (DD), Month (MM) and Year (YYYY) using numbers only.';
                  return error;
                }

                return true;
              }
          }
      }
    },
    allowSingleFutureDate:{
      validators:{
          callback:{
              callback: function(value, validator, $input){
                  var optionalArgument = {
                     futureValidation : false,
                     pastValidation : false,
                     pastCurrentValidation : false
                  };

                  if(validator.$form.find('[data-field-type="year"]').attr('allowFuture') === 'false'){
                      optionalArgument.futureValidation = false;
                  }

                  if(validator.$form.find('[data-field-type="year"]').attr('disabledPastCurrent') === 'true'){
                      optionalArgument.pastCurrentValidation = true;
                  }

                  if(validator.$form.find('[data-field-type="year"]').attr('disabledPast') === 'true'){
                      optionalArgument.pastValidation = true;
                  }

                  var singleDateValid = singleDateValidation(value, validator, $input, optionalArgument);
                  if(!singleDateValid.valid){
                      return singleDateValid;
                  }

                  return true;
              }
          }
      }
  }

    };


  var initialize = function () {
    initValidation();

    initChangeDocumentAccessLevel();
    initVerifyIdentityAccess();

    initProfileDetails();
    initPersonalDetails();
    initCancelRegistration();

    initAccessHistory();
    initDiagnosticImaging();
    initNominatedRepresentativeStep2();
    initNotificationSettings();
    initVerificationCodeEmail();
    initVerificationCodeMobile();
    initEmergencyContact();
    initRemoveDocument();
    initAddPersonalHealthNote();
    initEditPersonalHealthNote();
    initUsableAccessStep1();
    initUsableAccessStep2();
    initUsableAccessStep3();
    initUsableAccessStep4();
    initRemoveToolbar();
    initAddAdvCareDocument();
    initHealthProv();

    initAllergiesAndAdverseReactions();
    initCurrentMedications();
    initManageNomRep();
    initManageNomRepRemove();
    initDischargeSummary();
    initMedicareOverview();
    initPersonalAchievements();
    initPathologyReports();
    initChildhoddQuestionnaireNewForm();
    initChildhoddQuestionnaireEditForm();
    initPrescriptionDespenseRecords();
    initFormPCMLFilter();

    initLDAC();
    initRAC();
    initManageDocumentAccess();

    initGlobalSearch();
    initGlobalSearchMob();
    initSearchResult();

    initCAPassPhrase();
    initCAEmail();

    initIVC();
    initmodalCancelRegistrationCheck();
    initCreateMyRecord();
    initSearchChild();
    initCreateChildRecord();
    initMedicareInfoPreference();
    initApplicationConsent();

    initCAAddRecord();
    initAdminCareEmailAddress();
    initCAProofOfAuthority();
    initCAManageAuthorisedRepDetails();

    initAdminSearchDependant();
    initAdminCreateDependantRecord();
    initAdminSearchPerson();
    initAdminUnverifiedIdentity();
    initAdminUnverifiedIdentityULC();
    initAdminRestrictRecordAccess();
    initAdminCancelRegistration();
    initAdminManageAR();
    initAdminOptOut();
    initCICTransferOfAuthorityEmailAdd();
    initformHealthCheckAssessment();

    initConsumeULCForm();
    initformAdminUnverifiedIdentityPOROFailed();
    initformAdminUnverifiedIdentityEmailULC();
    initformAdminUnverifiedIdentityMobileULC();
    initAdminCancelRecord();
    initAdminIntentionCancelRecord();
    initAdminCancelRegistrationRecord();


    initformDeactivateRecord();
    initCancelRegistrationAR();
    initCancelRegistrationNew();
    bindValidationResetOnReset();
    bindNumbersOnly();
    toLower();
    // bindRevalidateBlur();
  };

  // Default form intialisation
  var initValidation = function () {
    var $form = $(elemSelector.formValidate);
    if (!$form.length) { return false; }

    $form
      /*
       * `init.field.fv`: Triggered after the field is initialized by the plugin
       *  - NB. must be declared before calling .formValidation(options)
       *
       * Provide better web accessibility
       */
      .on('init.field.fv', function (e, data) {
        var $target = $(e.target),
          targetID = $target.attr('id'),
          $messages = data.element.data('fv.messages'),
          $messageBlocks = $messages.find('.help-block, .hint-block'),
          fv = data.fv;

        // Set aria attributes for messages
        $messageBlocks.attr({
          'aria-labelledby': (targetID ? targetID : ''),
          'role': 'alert',
          'aria-live': 'assertive'
        });

        // Set 'aria-required' attributes for 'notEmpty' (i.e. 'required') form inputs

        // Get all fields and set Required to false
        var validatedFields = data.element.data('fv.validators'),
            isRequired = false;

        // Loop through array and add isRequired to items with 'notEmpty'
        for (var i = 0; i < validatedFields.length; i++) {
          if(validatedFields[i].validator === 'notEmpty'){
            isRequired = true;
            break;
          }
        }

        // Add 'aria-required' attributte to all required fields
        if (isRequired) {
          var $element = $target.hasClass('selectpicker') ? $target.closest('.bootstrap-select').find('.dropdown-toggle') : ($target.closest('.radio-group__item, [role="radiogroup"]') ? $element = $target.closest('[role="radiogroup"]') : $target);
          $element.not('[aria-required]').attr('aria-required', true);
        }

      })

      /**
       * Initialise the validation plugin
       *  - NB. must be declared after calling `init.field.fv`
       */
      .formValidation(defaultOptions)

      /*
       * `added.field.fv`: Triggered after adding dynamic field
       *
       * Fix dynamicaly added input validation and DirtyForm functionality
       */
      .on('added.field.fv', function (e) {
        var $thisForm = $(e.target),
          fv = $thisForm.data('formValidation');

        if (fv) {
          // Re-disable the submit button if it's part of a dirtyForm which is not dirty
          if ($thisForm.filter('form.sodirty').find('.js-disable-until-dirty').length && !$thisForm.find('[type="submit"]').is('[formnovalidate]') && !$thisForm.dirtyForms('isDirty')) {
            fv.disableSubmitButtons(true);
          }
        }
      })

      /*
       * `success.field.fv`: Triggered when any field is valid
       *
       * Disable the tick icon (it's too much for my eyes)
       * and hide any success (valid) messaging
       */
      .on('success.field.fv', function (e, data) {
        var $parent = data.element.parents('.form-group'),
          $icon = data.element.data('fv.icon'),
          $thisForm = $(e.target).closest('form');

        // Remove the `.has-success` class and hide the success icon
        $parent.removeClass('has-success');
        if ($icon) { $icon.hide(); }

        // Re-disable the submit button if it's part of a dirtyForm which is not dirty
        if ($thisForm.filter('form.sodirty').find('.js-disable-until-dirty').length && !$thisForm.find('[type="submit"]').is('[formnovalidate]') && !$thisForm.dirtyForms('isDirty')) {
          data.fv.disableSubmitButtons(false);
        }
      })

      /*
       * `err.field.fv`: Triggered when any field is invalid
       *
       * Ensure only one error message shows at once. The `verbose:false` option
       * doesn't work when validators are set to use both 'built-in' (ie. `notEmpty`) * and custom `callback` validators on the same form input. For example see the * date validation setup above.
       */
      .on('err.field.fv', function (e, data) {
        var $messages = data.element.data('fv.messages');

        // Ensure additional messages aren't showing
        $messages.find('.help-block:visible + .help-block').hide();
      })

      /*
       * `status.field.fv`: Triggered when field changes status
       *
       * Provide better web accessibility
       */
      .on('status.field.fv', function (e, data) {
        var $target = $(e.target),
          $messages = data.element.data('fv.messages'),
          isValid = (data.status === 'VALID');

        // Better accessibility (set an `aria-invalid` attribute)
        //  - and use correct form element (NB. bootstrap-select plugin)
        var $element = $target.hasClass('selectpicker') ? $target.closest('.bootstrap-select').find('.dropdown-toggle') : $target;

        if ($element.val() !== '' ) {
          // $element.attr('aria-invalid', !isValid);
        }

        // Hide/show any hints (i.e. Future date message)
        $messages.find('.hint-block').toggle(isValid);
      });
  };

  // Trigger a validation reset on click of a reset button
  var bindValidationResetOnReset = function () {
    var $resetBtn = $(elemSelector.resetButton);
    if (!$resetBtn.length) { return false; }

    $resetBtn.on('click', function () {
      var $form = $(this).closest(elemSelector.formValidate),
        fv = $form.data('formValidation');

      if (fv) {
        // Reset the validation
        fv.resetForm();

        // Re-disable the submit button if it's part of a dirtyForm which is not dirty
        if ($resetBtn.closest('form.sodirty .js-disable-until-dirty').length && !$form.find('[type="submit"]').is('[formnovalidate]') && !$form.dirtyForms('isDirty')) {
          // fv.disableSubmitButtons(true);
        }
      }
    });
  };

  // Perform form revalidation on input/textarea blur
  var bindRevalidateBlur = function () {
    var $form = $(elemSelector.formValidate);
    if (!$form.length) { return false; }

    $form.find('input[type="text"], input[type="email"], input[type="tel"], textarea').on('blur', function (e) {
      var $thisInput = $(this);
      //we delay 100ms because in firefox/safari, it is unable to get activeElement
      window.setTimeout(function () {
        var targetElement = e.relatedTarget ||
              e.explicitOriginalTarget ||
              document.activeElement;

        // Exit if the focus event was fired on a cancel click
        if ($(targetElement).is(elemSelector.resetButton)) { return false; }

        var $thisForm = $thisInput.closest(elemSelector.formValidate),
          fv = $thisForm.data('formValidation');

        if (fv) {
          // nb. `revalidateField()` not `validateField()`
          fv.revalidateField($thisInput);
        }
      }, 100);
    });
  };



  /*
   *  Form specific validation setup
   */

  var initGlobalSearch = function () {
   var $form = $('#formGlobalSearch');
   if (!$form.length) { return false; }

   $form.data('formValidation')
     .addField('globalsearch', validators.globalSearch);
  };

  var initGlobalSearchMob = function () {
   var $form = $('#formGlobalSearchMob');
   if (!$form.length) { return false; }

   $form.data('formValidation')
     .addField('globalsearchmob', validators.globalSearch);
  };

  var initSearchResult = function () {
   var $form = $('#formSearchResult');
   if (!$form.length) { return false; }

   $form.data('formValidation')
     .addField('searchresult', validators.globalSearch);
  };

  var initManageDocumentAccess = function () {
   var $form = $('#formManageDocumentAccessFilter');
   if (!$form.length) { return false; }

   $form.data('formValidation')
     .addField('date-from-day', validators.dateDay)
     .enableFieldValidators('date-from-day', false, 'notEmpty')
     .addField('date-from-month', validators.dateMonth)
     .enableFieldValidators('date-from-month', false, 'notEmpty')
     .addField('date-from-year', validators.dateYear)
     .enableFieldValidators('date-from-year', false, 'notEmpty')
     .addField('date-to-day', validators.dateDay)
     .enableFieldValidators('date-to-day', false, 'notEmpty')
     .addField('date-to-month', validators.dateMonth)
     .enableFieldValidators('date-to-month', false, 'notEmpty')
     .addField('date-to-year', validators.dateYear)
     .enableFieldValidators('date-to-year', false, 'notEmpty')
     .addField('firstname', validators.givenName)
     .addField('lastname', validators.name_not_required)
     .addField('date-from-full-date',validators.hiddenDate)
     .addField('date-to-full-date',validators.hiddenDate);

    // Re-validate the datepicker field once it is empty
    $form.on('prevalidate.form.fv', function (e) {
      $form.find('input[type="number"]').each(function(i, v) {
        var obj = $(this);
        var fieldValue = obj.val();
        if($.trim(fieldValue) === '') {
          $form.data('formValidation').revalidateField(obj);
        }
      });
      $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
      $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
    });
  };

  var initRemoveToolbar = function () {
    var $form = $('#advanced-care-plan-remove-form');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('reason', validators.dropdown)
      .updateMessage('reason', 'notEmpty', 'Please select a Reason for removing document.');
  };

  var initChangeDocumentAccessLevel = function () {
    var $forms = $('#formChangeDocumentAccessLevel, #formRemoveHideDocument');
    if (!$forms.length) { return false; }

    $forms.each(function(i, form) {

      var $form = $(form);

      $form.data('formValidation')
      .addField('document-access', validators.changeDocumentAccessLevel)
      .addField('reason', validators.dropdown)
      .updateMessage('reason', 'notEmpty', 'Please make a selection.');

      rm.validationHelper.configOneOfReqChecked_iconAndText(
        $form,
        'document-access',
        'Please enter a value.'
      );

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="document-access"]'));
      });

    });



  };

  var initVerifyIdentityAccess = function () {
    var $form = $('#formUsageLanding');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('radio-identity-options', validators.verifyIdentityAccess);

    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'radio-identity-options',
      'Please select an option to verify your identity with.'
    );
  };

  var initProfileDetails = function () {
    var $form = $('#formProfileDetails');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('contactnumber', validators.phone)
      .addField('indigenousStatus[]', validators.required)
      .addField('defenceForceStatus[]', validators.required)
      .updateMessage('contactnumber', 'regexp', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.');
      //.enableFieldValidators('indigenousStatus[]', false, 'notEmpty')
      //.enableFieldValidators('defenceForceStatus[]', false, 'notEmpty');
  };
  var initPersonalDetails = function () {
    var $form = $('#formPersonalDetails');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('contactnumber', validators.phone)
      .enableFieldValidators('contactnumber', false, 'notEmpty')
      .updateMessage('contactnumber', 'notEmpty', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.')
      .updateMessage('contactnumber', 'regexp', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.');
  };
  var initCancelRegistration = function () {
    var $form = $('#formCancelRegistration');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('consent_check', validators.acceptCheckbox)
    .updateMessage('consent_check', 'notEmpty', 'Please select the checkbox in order to proceed.');
  };
  var initNominatedRepresentativeStep2 = function () {
    var $form = $('#nominatedRepStep2');

    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('nominatedRep', validators.noRepName)
      .addField('nominatedRep', validators.no_blacklistCharacters)
      .addField('nominated-access', validators.radioAccessLevel)
      .updateMessage('nominatedRep', 'notEmpty', 'Please enter the name of Nominated Representative that is a maximum of 40 characters using numbers and letters only.')
      .updateMessage('nominatedRep', 'regexp', 'Please enter the name of Nominated Representative that is a maximum of 40 characters using numbers and letters only.');

    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'nominated-access',
      'Please set the Nominated Representative Access Level.'
    );

    $form.on('prevalidate.form.fv',function() {
      $form.data('formValidation').revalidateField($('[name="nominated-access"]'));
    });

  };

  var initNotificationSettings = function () {
    var $formEmail = $('#form-notification-verifications-email'),
      $formMobile = $('#form-notification-verifications-mobile');

     if ($formEmail.length) {
        $formEmail.data('formValidation')
        .addField('emailAddress', validators.email)
        .enableFieldValidators('emailAddress', true, 'notEmpty')
        .updateMessage('emailAddress', 'emailAddress', 'Please enter an email address in a valid format (for example: myemail@example.com)')
        .updateMessage('emailAddress', 'notEmpty', 'Please enter an email address in a valid format (for example: myemail@example.com)')
        .updateMessage('emailAddress', 'regexp', 'Please enter an email address in a valid format (for example: myemail@example.com)');
      }
      if ($formMobile.length) {
        $formMobile.data('formValidation')
        .addField('mobileNumber', validators.phone)
        .enableFieldValidators('mobileNumber', true, 'notEmpty')
        .updateMessage('mobileNumber', 'notEmpty', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614.<br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.')
        .updateMessage('mobileNumber', 'regexp', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614.<br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.');
      }
  };


  var initVerificationCodeEmail = function(){
      var $formEmailCode = $('#form-email-code-verification');

      $('input[name="verificationCodeEmail"]').on('input', function(){
        if($('#custom-validate').html() !== '')
          $('#custom-validate').html('');
      });

      if ($formEmailCode.length) {
          $formEmailCode.data('formValidation')
      .addField('verificationCodeEmail', validators.expiredVerificationCodeEmail);
      }
  };

  var initVerificationCodeMobile = function(){
      var $formMobileCode = $('#form-mobile-code-verification');

      $('input[name="verificationCodeMobile"]').on('input', function(){
        if($('#custom-validate2').html() !== '')
          $('#custom-validate2').html('');
      });

      if ($formMobileCode.length) {
          $formMobileCode.data('formValidation')
      .addField('verificationCodeMobile', validators.expiredVerificationCodeMobile);
      }
  };

  /*
   * Emergency Contact form validation
   *  - NB. This handles Add and multiple Edit forms, with conditional binding
   *  of email/phone fields (only one field needs to be completed)
   */
  var initEmergencyContact = function () {
    var $form = $('#formEmergencyContactAdd, .form-emergency-contact-edit');
    if (!$form.length) { return false; }

    // Conditional validation functionality used by multiple events below
    function initConditionalValidation($form, revalidate) {
      var contactNumberVal = $form.find('[name="contactNumberInput"]').val(),
        emailVal = $form.find('[name="emailInput"]').val(),
        fv = $form.data('formValidation');

      // Exit if formValidation is not available
      if (!fv) { return false; }
      // Revalidate both fields
      if (revalidate) {
        fv
          .revalidateField('contactNumberInput')
          .revalidateField('emailInput')
          .revalidateField('relationshipInput');
      }
    }

    var nameRequiredObj = $.extend(validators.name_required, {
      'validators' : {
        notEmpty: $.extend(validators.name_required.validators.notEmpty, {'message': 'Please enter the name. It must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'}),
        regexp: $.extend(validators.name_required.validators.regexp, {'message': 'Please enter the name. It must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'}),
        stringLength: $.extend(validators.name_required.validators.stringLength, {'message': 'Please enter the name. It must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.'}),
        callback:  $.extend(validators.name_required.validators.callback, 
          {callback:  function (value, validator, $input) {
                if(value.indexOf('‘') !== -1 || value.indexOf('’') !== -1) {
                  var replacedString = value.replace(/’/g, '\'');
                  replacedString = replacedString.replace(/‘/g, '\'');
                  $input.val(replacedString); 
                  }
                  return true;
          }})
      }
    });

    $form.each(function () {
      var $thisForm = $(this);

      // Add validation to fields, enable 'notEmpty (required)' validators and update messages etc.
      $thisForm.data('formValidation')
        .addField('contactTypeInput', validators.dropdown)
        .addField('nameInput', validators.name_required)

        // Conditional fields (see binding below)
        .addField('emailInput', validators.email)
        .enableFieldValidators('emailInput', false, 'notEmpty')
        .enableFieldValidators('emailInput', false, 'emailAddress')
        .updateMessage('emailInput', 'regexp', 'Please enter an email address in a valid format (for example: myemail@example.com)')
        .addField('contactNumberInput', validators.phone)
        .enableFieldValidators('contactNumberInput', true, 'notEmpty') //required initially
        .updateMessage('contactNumberInput', 'notEmpty', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.')
        .updateMessage('contactNumberInput', 'regexp', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.')
        .addField('relationshipInput', validators.required)
        .addField('relationshipInput', validators.max40char)
        .addField('relationshipInput', validators.no_blacklistCharacters)
        .updateMessage('relationshipInput', 'notEmpty', 'Please enter the relationship between this contact and the record owner.');


      // Setup conditional validation relationship on prevalidation
      $thisForm.on('prevalidate.form.fv', function (e) {
        initConditionalValidation($(e.target));
      });
    });
  };

  var initRemoveDocument = function () {
    var $form = $('#formRemoveDocument');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('reason', validators.dropdown)
      .updateMessage('reason', 'notEmpty', 'Please select a Reason for removing document.');
  };
  var initAddPersonalHealthNote = function () {
    var $form = $('#add-personal-health-note');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('eventdate-day',validators.dateDay)
      .addField('eventdate-month',validators.dateMonth)
      .addField('eventdate-year',validators.dateYear)
      .addField('eventdate-full-date',validators.allowSingleFutureDate)
      .addField('title', validators.max255char)
      .enableFieldValidators('title', true, 'notEmpty')
      .addField('title', validators.no_blacklistCharacters)
      .updateMessage('title', 'notEmpty', 'Please enter a title that is a maximum of 255 characters using numbers and letters only.')
      .updateMessage('title', 'regexp', 'Please enter a title that is a maximum of 255 characters using numbers and letters only.')
      .addField('description', validators.required)
      .addField('description', validators.no_blacklistCharacters)
      .updateMessage('description', 'notEmpty', 'Please enter a description using numbers and letters only.');

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="eventdate-full-date"]'));
   });
  };
  var initEditPersonalHealthNote = function () {
    var $form = $('#edit-personal-health-note');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('eventdate-day',validators.dateDay)
      .addField('eventdate-month',validators.dateMonth)
      .addField('eventdate-year',validators.dateYear)
      .addField('eventdate-full-date',validators.allowSingleFutureDate)
      .addField('title', validators.max255char)
      .addField('title', validators.no_blacklistCharacters)
      .updateMessage('title', 'regexp', 'Please enter a title that is a maximum of 255 characters using numbers and letters only.')
      .enableFieldValidators('title', true, 'notEmpty')
      .addField('description', validators.required)
      .addField('description', validators.no_blacklistCharacters)
      .updateMessage('description', 'notEmpty', 'Please enter a description using numbers and letters only.');

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="eventdate-full-date"]'));
   });
  };

  var initUsableAccessStep1 = function () {
    var $form = $('#formUsableAccessStep1');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('card-details-given-name', validators.name)
      .updateMessage('card-details-given-name', 'regexp', 'Given name contains invalid characters. '+ customMessage.name)
      .addField('card-details-other-names', validators.name)
      .updateMessage('card-details-other-names', 'regexp', 'Middle name contains invalid characters. '+ customMessage.name)
      .addField('card-details-family-name', validators.name_required)
      .updateMessage('card-details-family-name', 'regexp', 'Family name contains invalid characters. '+ customMessage.name)
      .addField('card-details-dropdown-day', validators.dropdown)
      .addField('card-details-dropdown-month', validators.dropdown)
      .addField('card-details-dropdown-year', validators.dropdown)
      .addField('medicare-card-number', validators.tendigits)
      .addField('expiry-medicare-dropdown-day', validators.dropdown)
      .addField('expiry-medicare-dropdown-month', validators.dropdown)
      .addField('expiry-medicare-dropdown-year', validators.dropdown)
      .addField('individual-reference-number', validators.onedigit)
      .addField('checkbox-card-details-agree', validators.acceptCheckbox)
      .addField('dav-file-number', validators.dva)
      .addField('address-medicare-property-name', validators.no_caret)
      .updateMessage('address-medicare-property-name', 'regexp', 'Property name contains invalid characters'+ customMessage.no_caret)
      .addField('address-medicare-unit-number', validators.no_caret)
      .updateMessage('address-medicare-unit-number', 'regexp', 'Unit number contains invalid characters'+ customMessage.no_caret)
      .addField('address-medicare-street-number', validators.no_caret)
      .enableFieldValidators('address-medicare-street-number', true, 'notEmpty')
      .updateMessage('address-medicare-street-number', 'regexp', 'Street number contains invalid characters'+ customMessage.no_caret)
      .addField('address-medicare-street-name', validators.no_caret)
      .enableFieldValidators('address-medicare-street-name', true, 'notEmpty')
      .updateMessage('address-medicare-street-name', 'regexp', 'Street name contains invalid characters'+ customMessage.no_caret)
      .addField('address-medicare-street-type', validators.dropdown)
      .addField('address-medicare-suburb', validators.name_required)
      .updateMessage('address-medicare-suburb', 'regexp', 'Suburb contains invalid characters'+ customMessage.name)
      .addField('address-medicare-post-code', validators.postCode)
      .enableFieldValidators('address-medicare-post-code', true, 'notEmpty')
      .updateMessage('address-medicare-post-code', 'regexp', 'Post code contains invalid characters'+ customMessage.post_code);
  };

  var initUsableAccessStep2 = function () {
    var $form = $('#formUsableAccessStep2');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('access-step-given-name', validators.name)
      .updateMessage('access-step-given-name', 'regexp', 'Given name contains invalid characters. '+ customMessage.name)
      .addField('access-step-other-names', validators.name)
      .updateMessage('access-step-other-names', 'regexp', 'Middle name contains invalid characters. '+ customMessage.name)
      .addField('access-step-family-name', validators.name_required)
      .updateMessage('access-step-family-name', 'regexp', 'Family name contains invalid characters. '+ customMessage.name)
      .addField('access-step-dob-dropdown-day', validators.dropdown)
      .addField('access-step-dob-dropdown-month', validators.dropdown)
      .addField('access-step-dob-dropdown-year', validators.dropdown)
      .addField('passport-number', validators.required)
      .addField('immicard-number', validators.required)
      .addField('australian-visa-dropdown-countries', validators.dropdown)
      .addField('birth-state-dropdown-states', validators.dropdown)
      .addField('birth-registration-number', validators.required)
      .addField('birth-registration-dropdown-day', validators.dropdown)
      .addField('birth-registration-dropdown-month', validators.dropdown)
      .addField('birth-registration-dropdown-year', validators.dropdown)
      .addField('certificate-number', validators.required)
      .addField('birth-doi-dropdown-day', validators.dropdown)
      .addField('birth-doi-dropdown-month', validators.dropdown)
      .addField('birth-doi-dropdown-year', validators.dropdown)
      .addField('date-of-acquisition-dropdown-day', validators.dropdown)
      .addField('date-of-acquisition-dropdown-month', validators.dropdown)
      .addField('date-of-acquisition-dropdown-year', validators.dropdown)
      .addField('stock-number', validators.required);
   };

  var initUsableAccessStep3 = function () {
    var $form = $('#formUsableAccessStep3');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('access-step-given-name', validators.name)
      .updateMessage('access-step-given-name', 'regexp', 'Given name contains invalid characters. '+ customMessage.name)
      .addField('access-step-other-names', validators.name)
      .updateMessage('access-step-other-names', 'regexp', 'Middle name contains invalid characters. '+ customMessage.name)
      .addField('access-step-family-name', validators.name_required)
      .updateMessage('access-step-family-name', 'regexp', 'Family name contains invalid characters. '+ customMessage.name)
      .addField('access-step-dob-dropdown-day', validators.dropdown)
      .addField('access-step-dob-dropdown-month', validators.dropdown)
      .addField('access-step-dob-dropdown-year', validators.dropdown)
      .addField('immicard-number', validators.required)
      .addField('birth-state-dropdown-states', validators.dropdown)
      .addField('birth-registration-number', validators.required)
      .addField('birth-registration-dropdown-day', validators.dropdown)
      .addField('birth-registration-dropdown-month', validators.dropdown)
      .addField('birth-registration-dropdown-year', validators.dropdown)
      .addField('certificate-number', validators.required)
      .addField('birth-doi-dropdown-day', validators.dropdown)
      .addField('birth-doi-dropdown-month', validators.dropdown)
      .addField('birth-doi-dropdown-year', validators.dropdown)
      .addField('date-of-acquisition-dropdown-day', validators.dropdown)
      .addField('date-of-acquisition-dropdown-month', validators.dropdown)
      .addField('date-of-acquisition-dropdown-year', validators.dropdown)
      .addField('stock-number', validators.required)
      .addField('driving-license-dropdown-states', validators.dropdown)
      .addField('license-number', validators.required)
      .addField('marriage-reg-dropdown-states', validators.dropdown)
      .addField('date-of-marriage-dropdown-day', validators.dropdown)
      .addField('date-of-marriage-dropdown-month', validators.dropdown)
      .addField('date-of-marriage-dropdown-year', validators.dropdown)
      .addField('bride-given-name', validators.required)
      .addField('bride-family-name', validators.required)
      .addField('groom-given-name', validators.required)
      .addField('groom-family-name', validators.required)
      .addField('marriage-reg-dropdown-day', validators.dropdown)
      .addField('marriage-reg-dropdown-month', validators.dropdown)
      .addField('marriage-reg-dropdown-year', validators.dropdown)
      .addField('marriage-registration-number', validators.required)
      .addField('date-issue-marriage-dropdown-day', validators.dropdown)
      .addField('date-issue-marriage-dropdown-month', validators.dropdown)
      .addField('date-issue-marriage-dropdown-year', validators.dropdown)
      .addField('marriage-certificate-number', validators.required);
  };

  var initUsableAccessStep4 = function () {
    var $form = $('#formUsableAccessStep4');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('radio-questions-1', validators.radio);
  };

  var initAllergiesAndAdverseReactions = function () {
    var $form = $('#allergies-and-adverse-reactions');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('substance[]', validators.required)
      .updateMessage('substance[]', 'notEmpty', 'Please enter a description.')
      .addField('substance[]', validators.no_blacklistCharacters)
      .addField('reaction[]', validators.max300char)
      .addField('reaction[]', validators.no_blacklistCharacters);
  };
  var initCurrentMedications = function () {
    var $form = $('#current-medications');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('substance[]', validators.required)
      .updateMessage('substance[]', 'notEmpty', 'Please enter a substance or an agent.')
      .addField('substance[]', validators.no_blacklistCharacters)
      .addField('medicine[]', validators.required)
      .updateMessage('medicine[]', 'notEmpty', 'Please enter a medicine.')
      .addField('medicine[]', validators.no_blacklistCharacters)
      .addField('doseinfo[]', validators.required)
      .updateMessage('doseinfo[]', 'notEmpty', 'Please enter dose information.')
      .addField('doseinfo[]', validators.no_blacklistCharacters)
      .addField('reason[]', validators.max300char)
      .addField('reason[]', validators.no_blacklistCharacters)
      .addField('comments[]', validators.max300char)
      .addField('comments[]', validators.no_blacklistCharacters);
  };

  var initManageNomRep = function () {
    var $form = $('#formManageNomRep');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('name-of-rep', validators.noRepName)
      .addField('name-of-rep', validators.no_blacklistCharacters)
      .addField('set-nom-rep-access[]', validators.manageNomRepAccess)
      .updateMessage('name-of-rep', 'notEmpty', 'Please enter the name of Nominated Representative that is a maximum of 40 characters using numbers and letters only.')
      .updateMessage('name-of-rep', 'regexp', 'Please enter the name of Nominated Representative that is a maximum of 40 characters using numbers and letters only.');

    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'set-nom-rep-access',
      'Please choose an access level.'
    );
  };

  var initManageNomRepRemove = function () {
    var $form = $('#formManageNomRepRemove');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('cb-remove-access', validators.acceptCheckbox)
    .updateMessage('cb-remove-access', 'notEmpty', 'Please select the checkbox in order to continue.');
  };

  /**
   * Limited Document Access Code (LDAC) - Add & Edit
   */
  var initLDAC = function () {
    var $form = $('#formLDACAdd, #formLDACEdit');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      // Enter code
      .addField('enter-code', validators.code)
      .updateMessage('enter-code', 'notEmpty', 'Please enter a Limited Document Access Code between 4 and 8 characters using numbers and letters only, for example Code123. Please note that the code is case sensitive.')
      .updateMessage('enter-code', 'regexp', 'Please enter a Limited Document Access Code between 4 and 8 characters using numbers and letters only, for example Code123. Please note that the code is case sensitive.')

      // Re-enter code
      .addField('re-enter-code', validators.codeConfirm)
      .updateMessage('re-enter-code', 'notEmpty', 'Please re-enter the Limited Document Access Code using the same characters. Please note that the code is case sensitive.');

    $form.on('prevalidate.form.fv',function() {
      $form.data('formValidation').revalidateField($('[name="enter-code"]'));
      $form.data('formValidation').revalidateField($('[name="re-enter-code"]'));
    });

  };

  /**
   * Record Access Code (RAC) - Add & Edit
   */
  var initRAC = function () {
    var $form = $('#formRACAdd, #formRACEdit');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      // Enter code
      .addField('enter-code', validators.code)
      .updateMessage('enter-code', 'notEmpty', 'Please enter a Record Access Code between 4 and 8 characters using numbers and letters only, for example Code123. Please note that the code is case sensitive.')
      .updateMessage('enter-code', 'regexp', 'Please enter a Record Access Code between 4 and 8 characters using numbers and letters only, for example Code123. Please note that the code is case sensitive.')
      // Re-enter code
      .addField('re-enter-code', validators.codeConfirm)
      .updateMessage('re-enter-code', 'notEmpty', 'Please re-enter the Record Access Code using the same characters. Please note that the code is case sensitive.');

    $form.on('prevalidate.form.fv',function() {
      $form.data('formValidation').revalidateField($('[name="enter-code"]'));
      $form.data('formValidation').revalidateField($('[name="re-enter-code"]'));
    });

  };


  var initDischargeSummary = function () {
    var $form = $('#formDischargeSummaryFilter');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('date-from-day',validators.dateDay)
      .addField('date-to-day',validators.dateDay)
      .addField('date-from-month',validators.dateMonth)
      .addField('date-to-month',validators.dateMonth)
      .addField('date-from-year',validators.dateYear)
      .addField('date-to-year',validators.dateYear)
      .addField('date-from-full-date',validators.hiddenDate)
      .addField('date-to-full-date',validators.hiddenDate);

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
      });
  };

  var initFormPCMLFilter = function () {
    var $form = $('#formPCMLFilter');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('date-from-day',validators.dateDay)
      .addField('date-to-day',validators.dateDay)
      .addField('date-from-month',validators.dateMonth)
      .addField('date-to-month',validators.dateMonth)
      .addField('date-from-year',validators.dateYear)
      .addField('date-to-year',validators.dateYear);
  };

  var initPrescriptionDespenseRecords = function () {
    var $form = $('#formPrescriptionDespenseRecords');

    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('date-from-day',validators.dateDay)
      .addField('date-to-day',validators.dateDay)
      .addField('date-from-month',validators.dateMonth)
      .addField('date-to-month',validators.dateMonth)
      .addField('date-from-year',validators.dateYear)
      .addField('date-to-year',validators.dateYear)
      .addField('date-from-full-date',validators.hiddenDate)
      .addField('date-to-full-date',validators.hiddenDate);

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
      });
  };

  var initMedicareOverview = function () {
    var $form = $('#formMedicareOverviewFilter');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('date-from-day',validators.dateDay)
      .addField('date-to-day',validators.dateDay)
      .addField('date-from-month',validators.dateMonth)
      .addField('date-to-month',validators.dateMonth)
      .addField('date-from-year',validators.dateYear)
      .addField('date-to-year',validators.dateYear)
      .addField('date-from-full-date',validators.hiddenDate)
      .addField('date-to-full-date',validators.hiddenDate);

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
      });

  };

  var initAddAdvCareDocument = function (){

    var $form = $('#formAddAvdCareStep1');

    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('pdf-upload', validators.pdf)
      .addField('pdf-upload', validators.maxSize)
      .updateMessage('pdf-upload', 'notEmpty', 'Please provide a PDF file.')
      .addField('lastupdate-day',validators.dateDay)
      .addField('lastupdate-month',validators.dateMonth)
      .addField('lastupdate-year',validators.dateYear)
      .addField('lastupdate-full-date',validators.singleHiddenDate)
      .addField('given-name', validators.givenName)
      .addField('family-name', validators.familyName)
      .addField('contact-number', validators.phone)
      .enableFieldValidators('contact-number', true, 'notEmpty')
      .updateMessage('contact-number', 'notEmpty', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.')
      .updateMessage('contact-number', 'regexp', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.');

       $form.on('prevalidate.form.fv',function() {
            $form.data('formValidation').revalidateField($('[name="lastupdate-full-date"]'));
       });
  };

  var initHealthProv = function (){
    var $form = $('#formManageHealthcareProviderOrgAccess');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('read-document-access', validators.radio)
      .addField('write-document-access', validators.radio);
  };

  var initAccessHistory = function (){
    var $form = $('#accessHistoryFilter'),
        $fmFeedBack,
        $fmGroup;

    if (!$form.length) { return false; }


    $form.data('formValidation')
      .addField('date-from-day',validators.dateDay)
      .addField('date-to-day',validators.dateDay)
      .addField('date-from-month',validators.dateMonth)
      .addField('date-to-month',validators.dateMonth)
      .addField('date-from-year',validators.dateYear)
      .addField('date-to-year',validators.dateYear)
      .addField('usertype', validators.oneOfReqCheckboxes_accessHistory)
      .addField('date-from-full-date',validators.hiddenDate)
      .addField('date-to-full-date',validators.hiddenDate);


    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'usertype',
      'Please select at least one of the options above.'
    );

    $form.on('prevalidate.form.fv',function() {
      $form.data('formValidation').revalidateField($('[name="usertype"]'));
      $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
      $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
    });

  };

  var initDiagnosticImaging = function (){
    var $form = $('#formDiagnosticImaging');

    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('date-from-day',validators.dateDay)
      .addField('date-to-day',validators.dateDay)
      .addField('date-from-month',validators.dateMonth)
      .addField('date-to-month',validators.dateMonth)
      .addField('date-from-year',validators.dateYear)
      .addField('date-to-year',validators.dateYear)
      .addField('date-from-full-date',validators.hiddenDate)
      .addField('date-to-full-date',validators.hiddenDate);

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
      });

  };

  var _isDatePickerModified = function(input) {
    var $nativeDateFieldSet = input.closest('.daterange-native');
    var arrDate = [];
    $nativeDateFieldSet.find('input[type="number"]').each(function() {
      var obj = $(this);
      var fieldValue = obj.val();
      if($.trim(fieldValue) !== '') {
        arrDate.push(fieldValue);
      }
    });

    if(arrDate.length > 0)
      return true;

  return false;
  };

  var _isValidMonth = function(value){
    var month = value*1;

    if ( isNaN(month) ) return false;

    if (month < 1 || month > 12) {
      return false;
    }
    return true;
  };

  var _isValidYear = function(value){
    if (value.length > 4) return false;

    var year = value*1;

    if ( isNaN(year) ) return false;


    if (year < 1900) {
      return false;
    }

    return true;
  };

  var _expiredVerificationCodeEmail = function(value){
    if (String(value) === 'true') return true;
    return false;
  };

  var _expiredVerificationCodeMobile = function(value){
    if (String(value) === 'true') return true;
    return false;
  };

  var initPersonalAchievements = function() {
    var $form = $('#personal-achievement');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('date[]', validators.date)
      .addField('achievement[]', validators.max16char)
      .addField('achievement[]', validators.no_blacklistCharacters)
      .addField('description[]', validators.max120char) // even this isn't triggered!? why? validation is moved to achievement-diary.js
      .addField('description[]', validators.no_blacklistCharacters)
      .enableFieldValidators('date[]', true, 'notEmpty');
  };

  var initPathologyReports = function (){
    var $form = $('#formPathologyReports');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('date-from-day',validators.dateDay)
      .addField('date-to-day',validators.dateDay)
      .addField('date-from-month',validators.dateMonth)
      .addField('date-to-month',validators.dateMonth)
      .addField('date-from-year',validators.dateYear)
      .addField('date-to-year',validators.dateYear)
      .addField('date-from-full-date',validators.hiddenDate)
      .addField('date-to-full-date',validators.hiddenDate);

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
      });
  };

  var initChildhoddQuestionnaireNewForm = function() {
    var $form = $('#formChildhoodQuestionnaireNew');
    if (!$form.length) { return false; }

    var textAreaField = $form.find('textarea') ;
    textAreaField.each(function(index,item){
      var textAreaName = $(item).attr('name');
      $form.data('formValidation')
      .addField(textAreaName, validators.no_blacklistCharacters)
      .addField(textAreaName, validators.required)
      .updateMessage(textAreaName, 'notEmpty', 'Please add your comments.');
    });

    var radioField = $form.find('input[type=radio]');
    radioField.each(function(index,item){
      var radioName = $(item).attr('name');
      $form.data('formValidation')
      .addField(radioName, validators.radioCustomError);
    });
  };
  var initChildhoddQuestionnaireEditForm = function() {

    var $form = $('#childhood-questionnaire-edit');
    if (!$form.length) { return false; }

    var textAreaField = $form.find('textarea') ;
    textAreaField.each(function(index,item){
      var textAreaName = $(item).attr('name');
      $form.data('formValidation').addField(textAreaName, validators.no_blacklistCharacters);
    });
    var radioField = $form.find('input[type=radio]') ;
    radioField.each(function(index,item){
      var radioName = $(item).attr('name');
      $form.data('formValidation')
      .addField(radioName, validators.required)
      .enableFieldValidators(radioName, false, 'notEmpty');
    });
  };

  var initCAPassPhrase = function (){
    var $form = $('#formCAPassphrase');
    if (!$form.length) { return false; }

     $form.data('formValidation')
       .addField('passphrase', validators.passphrase)
       .enableFieldValidators('passphrase', true, 'notEmpty');
  };

  var initCAEmail = function (){
    var $form = $('#formCAEmail');
    if (!$form.length) { return false; }

     $form.data('formValidation')
      .addField('emailaddress', validators.email)
      .enableFieldValidators('emailaddress', true, 'notEmpty');
  };

  var initIVC = function (){
    var $form = $('#formIvc');
    if (!$form.length) { return false; }

     $form.data('formValidation')
     .addField('code', validators.ivccode)
     .addField('code', validators.no_blacklistCharacters)
     .addField('lastname', validators.name_required)
     .addField('lastname', validators.required)
     .updateMessage('lastname','notEmpty','Please enter the family name. It must be a maximum of 40 characters, using numbers, letters and the special characters like apostrophe (\') and hyphen (-) only.')
     .addField('dob-day',validators.dateDay)
     .addField('dob-month',validators.dateMonth)
     .addField('dob-year',validators.dateYear)
     .addField('dob-full-date',validators.singleHiddenDate)
     .addField('mcn', validators.mcn)
     .addField('irn', validators.irn)
     .updateMessage('irn','integer','A Medicare IRN Number must be between 1 and 9. Please check your input and try again')
     .addField('ihi', validators.ihi)
     .addField('dva', validators.dva)
     .addField('nrAgree', validators.participationinformation)
     .addField('fanrAgree', validators.participationinformation);

    $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="dob-full-date"]'));
    });
  };

  var initmodalCancelRegistrationCheck = function () {
    var $form = $('#modalCancelRegistrationCheck');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('checkboxCancelRegistration', validators.acceptCheckbox);
  };

  var initCreateMyRecord = function (){
    var $form = $('#formCreateHealthRecord');
    if (!$form.length) { return false; }

     $form.data('formValidation')
     .addField('consent_check', validators.acceptCheckbox)
     .updateMessage('consent_check', 'notEmpty', 'Please consent for your health information to be uploaded to My Health Record.')
     .addField('radio-fourtypes', validators.radio)
     .updateMessage('radio-fourtypes', 'notEmpty', 'You must provide consent for the Medicare Information you wish to include in the My Health Record.')
     .addField('radio-choose-1', validators.radio)
     .updateMessage('radio-choose-1', 'notEmpty', 'Please provide your consent preference for including PBS data in your My Health Record.')
     .addField('radio-choose-2', validators.radio)
     .updateMessage('radio-choose-2', 'notEmpty', 'Please provide your consent preference for including PBS data in your My Health Record.')
     .addField('radio-choose-3', validators.radio)
     .updateMessage('radio-choose-3', 'notEmpty', 'Please provide your consent preference for including MBS data in your My Health Record.')
     .addField('radio-choose-4', validators.radio)
     .updateMessage('radio-choose-4', 'notEmpty', 'Please provide your consent preference for including MBS data in your My Health Record.')
     .addField('radio-choose-5', validators.radio)
     .updateMessage('radio-choose-5', 'notEmpty', 'Please provide your consent preference for including AIR data in your My Health Record.')
     .addField('radio-choose-6', validators.radio)
     .updateMessage('radio-choose-6', 'notEmpty', 'Please provide your consent preference for including AODR data in your My Health Record.');
  };

  var initSearchChild = function (){
    var $form = $('#formSearchChild');
    if (!$form.length) { return false; }

     $form.data('formValidation')
     .addField('given-name', validators.givenName)
     .addField('family-name', validators.familyName)
     .addField('sex-name', validators.dropdown)
     .updateMessage('sex-name', 'notEmpty', 'Please select a sex.')
     .addField('dateofbirth-day',validators.dateDay)
     .addField('dateofbirth-month',validators.dateMonth)
     .addField('dateofbirth-year',validators.dateYear)
     .addField('dateofbirth-full-date',validators.singleHiddenDate)
     .addField('idtype-name', validators.dropdown)
     .addField('medicare_input_name', validators.mcn)
     .addField('idvreference_input_name', validators.irn)
     .addField('ihi_input_name', validators.ihi)
     .addField('dva_input_name', validators.dva);

      $form.on('prevalidate.form.fv',function() {
            $form.data('formValidation').revalidateField($('[name="dateofbirth-full-date"]'));
       });
  };

  var initAdminCareEmailAddress = function(){
    var $form = $('#formAdminSearchCareAgencyEmployee');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('emailAddress', validators.email)
    .enableFieldValidators('emailAddress', true, 'notEmpty');
  };

  var initCAProofOfAuthority = function() {
      var $form = $('#form-ca-proof-of-authority');
      if (!$form.length) { return false; }

      $form.data('formValidation')
      .addField('supporting-doc-name', validators.dropdown)
      .updateMessage('supporting-doc-name', 'notEmpty', 'Please select a supporting documentation type.')
      .addField('doc-details-name', validators.no_blacklistCharacters)
      .addField('doc-details-name', validators.required)
      .updateMessage('doc-details-name', 'notEmpty', 'Please enter additional information about the supporting documentation selected for your own reference.')
      .addField('endDateOfAuthority-day',validators.dateDay)
      .addField('endDateOfAuthority-month',validators.dateMonth)
      .addField('endDateOfAuthority-year',validators.dateYear)
      .addField('endDateOfAuthority-full-date',validators.singleHiddenDate);
      $form.on('prevalidate.form.fv',function() {
            $form.data('formValidation').revalidateField($('[name="endDateOfAuthority-full-date"]'));
      });
   };

  var initCAManageAuthorisedRepDetails = function (){
      var $form = $('#form-ca-manage-authorised-rep-details');
      if (!$form.length) { return false; }

      $form.data('formValidation')
      .addField('doc-details-name', validators.name_required)
      .addField('endDateOfAuthority-day',validators.dateDay)
      .addField('endDateOfAuthority-month',validators.dateMonth)
      .addField('endDateOfAuthority-year',validators.dateYear)
      .addField('endDateOfAuthority-full-date',validators.singleHiddenDate);
      $form.on('prevalidate.form.fv',function() {
            $form.data('formValidation').revalidateField($('[name="endDateOfAuthority-full-date"]'));
      });
  };

  var initCAAddRecord = function() {
      var $form = $('#form-ca-add-record');
      if (!$form.length) { return false; }

      $form.data('formValidation')
      .addField('family-name', validators.name_required)
      .addField('given-name', validators.name)
      .addField('sex-name', validators.dropdown)
      .updateMessage('sex-name', 'notEmpty', 'Please select an option.')
      .addField('dateofbirth-day',validators.dateDay)
      .addField('dateofbirth-month',validators.dateMonth)
      .addField('dateofbirth-year',validators.dateYear)
      .addField('idtype-name', validators.dropdown)
      .addField('medicare_input_name', validators.mcn)
      .addField('idvreference_input_name', validators.irn)
      .addField('ihi_input_name', validators.ihi)
      .addField('dva_input_name', validators.dva)
      .addField('dateofbirth-full-date', validators.singleHiddenDate);

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="dateofbirth-full-date"]'));
      });

  };

  var initAdminSearchDependant = function(){
    var $form = $('#formSearchDependant');
    if (!$form.length) { return false; }

     $form.data('formValidation')
     .addField('family-name', validators.name_required)
     .addField('given-name', validators.name)
     .addField('sex-name', validators.dropdown)
     .updateMessage('sex-name', 'notEmpty', 'Please select an option.')
     .addField('dateofbirth-day',validators.dateDay)
     .addField('dateofbirth-month',validators.dateMonth)
     .addField('dateofbirth-year',validators.dateYear)
     .addField('idtype-name', validators.dropdown)
     .addField('medicare_input_name', validators.mcn)
     .addField('idvreference_input_name', validators.irn)
     .addField('ihi_input_name', validators.ihi)
     .addField('dva_input_name', validators.dva)
     .addField('checkChildSameMedicareCard',validators.adminMedicareCardRadioCheck)
     .addField('dateofbirth-full-date', validators.singleHiddenDate);
     $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="dateofbirth-full-date"]'));
     });

    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'checkChildSameMedicareCard',
      'Please select an option.'
    );
  };

  var initAdminCreateDependantRecord = function (){
    var $form = $('#formCreateDependantRecord');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('relationshipType', validators.dropdown)
      .updateMessage('relationshipType', 'notEmpty', 'Please select an option.')
      .addField('documentSighted', validators.dropdown)
      .updateMessage('documentSighted', 'notEmpty', 'Please select an option.')
      .addField('consent_check', validators.checkboxDeclare)
      .addField('documentDetails',validators.required)
      .addField('documentDetails',validators.no_blacklistCharacters)

      .addField('date-from-day',validators.dateDay)
      .addField('date-from-month',validators.dateMonth)
      .addField('date-from-year',validators.dateYear)
      .addField('date-from-full-date',validators.hiddenDate)

      .addField('date-to-day',validators.dateDay)
      .addField('date-to-month',validators.dateMonth)
      .addField('date-to-year',validators.dateYear)
      .addField('date-to-full-date',validators.hiddenDate)


      .addField('reviewDateOfAuthority-day',validators.dateDay)
      .enableFieldValidators('reviewDateOfAuthority-day', false, 'notEmpty')
      .addField('reviewDateOfAuthority-month',validators.dateMonth)
      .enableFieldValidators('reviewDateOfAuthority-month', false, 'notEmpty')
      .addField('reviewDateOfAuthority-year',validators.dateYear)
      .enableFieldValidators('reviewDateOfAuthority-year', false, 'notEmpty')
      .addField('reviewDateOfAuthority-full-date',validators.singleHiddenDate);

      $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="reviewDateOfAuthority-full-date"]'));
     });


    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'consent_check',
      'You must check this checkbox to continue.'
    );

  };

  var initAdminSearchPerson = function(){
    var $form = $('#formAdminSearchPerson');
    if (!$form.length) { return false; }

     $form.data('formValidation')
     .addField('family-name', validators.name_required)
     .addField('given-name', validators.name)
     .addField('sex-name', validators.dropdown)
     .updateMessage('sex-name', 'notEmpty', 'Please select an option.')
     .addField('dateofbirth-day', validators.dateDay)
     .addField('dateofbirth-month', validators.dateMonth)
     .addField('dateofbirth-year', validators.dateYear)
     .addField('identifierOptions', validators.dropdown)
     .updateMessage('identifierOptions', 'notEmpty', 'Please select an option.')
     .addField('medicare', validators.mcn)
     .addField('irn', validators.irn)
     .addField('ihi', validators.ihi)
     .addField('dva', validators.dva)
     .addField('recordIHI', validators.ihi)
     .addField('dateofbirth-full-date', validators.singleHiddenDate);
     $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="dateofbirth-full-date"]'));
     });
  };

  var initAdminUnverifiedIdentity = function(){
    var $form = $('#formAdminUnverifiedIdentity');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('contactnumber', validators.phone)
    .addField('contactnumber',validators.required)
    .enableFieldValidators('contactnumber', false, 'notEmpty')
    .addField('agree-verify-check', validators.acceptCheckbox)
    .updateMessage('agree-verify-check', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('under-age-check', validators.acceptCheckbox)
    .updateMessage('under-age-check', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('verification-type', validators.identityVerificationMethod)
    .addField('document-sighted', validators.dropdown)
    .updateMessage('document-sighted', 'notEmpty', 'Please select an option.');

    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'verification-type',
      'Please select an option for verification.'
    );
  };
  var initAdminUnverifiedIdentityULC = function(){
    var $form = $('#formAdminUnverifiedIdentityULC');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('agree-verify-check', validators.acceptCheckbox)
    .updateMessage('agree-verify-check', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('under-age-check', validators.acceptCheckbox)
    .updateMessage('under-age-check', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('verification-type', validators.identityVerificationMethod)
    .addField('document-sighted', validators.dropdown)
    .updateMessage('document-sighted', 'notEmpty', 'Please select an option.');

    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'verification-type',
      'Please select an option for verification.'
    );
  };
   var initAdminRestrictRecordAccess = function () {
    var $form = $('#formAdminRestrictRecordAccess');
    if (!$form.length) { return false; }

    $form.data('formValidation')
        .addField('referenceNumber',validators.required)
        .enableFieldValidators('referenceNumber', true, 'notEmpty')
        .addField('referenceNumber',validators.no_blacklistCharacters)
        .addField('restrictionExpiryDate-day', validators.dateDay)
        .addField('restrictionExpiryDate-month', validators.dateMonth)
        .addField('restrictionExpiryDate-year', validators.dateYear)
        .addField('restrictionExpiryDate-full-date', validators.singleHiddenDate);
        $form.on('prevalidate.form.fv',function() {
            $form.data('formValidation').revalidateField($('[name="restrictionExpiryDate-full-date"]'));
        });
   };

  var initAdminCancelRegistration = function () {
    var $form = $('#formAdminCancelRegistration');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('checkCancelRegistration', validators.acceptCheckbox)
    .updateMessage('checkCancelRegistration', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('reasonForCancellation', validators.dropdown)
    .updateMessage('reasonForCancellation', 'notEmpty', 'Please select an option.');
  };

  var initAdminManageAR = function(){
    var $form = $('#formAdminManageAR');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('relationshipType', validators.dropdown)
    .updateMessage('relationshipType', 'notEmpty', 'Please select an option.')
    .addField('documentSighted', validators.dropdown)
    .updateMessage('documentSighted', 'notEmpty', 'Please select an option.')
    .addField('documentDetails',validators.required)
    .addField('documentDetails',validators.no_blacklistCharacters)
    .addField('date-from-day', validators.dateDay)
    .addField('date-from-month', validators.dateMonth)
    .addField('date-from-year', validators.dateYear)
    .addField('date-to-day', validators.dateDay)
    .addField('date-to-month', validators.dateMonth)
    .addField('date-to-year', validators.dateYear)
    .addField('date-from-full-date',validators.hiddenDate)
    .addField('date-to-full-date',validators.hiddenDate)
    .addField('reviewDateOfAuthority-day',validators.dateDay)
    .enableFieldValidators('reviewDateOfAuthority-day', false, 'notEmpty')
    .addField('reviewDateOfAuthority-month',validators.dateMonth)
    .enableFieldValidators('reviewDateOfAuthority-month', false, 'notEmpty')
    .addField('reviewDateOfAuthority-year',validators.dateYear)
    .enableFieldValidators('reviewDateOfAuthority-year', false, 'notEmpty')
    .addField('reviewDateOfAuthority-full-date', validators.singleHiddenDate);
    $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="date-from-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="date-to-full-date"]'));
        $form.data('formValidation').revalidateField($('[name="reviewDateOfAuthority-full-date"]'));
   });
  };

  var initCICTransferOfAuthorityEmailAdd = function(){
    var $form = $('#form-cic-transfer-of-authority-emailadd');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('email-address', validators.email)
    .enableFieldValidators('email-address', true, 'notEmpty');
  };

  var initCreateChildRecord = function (){
    var $form = $('#formCreateChildRecord');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('consent_check', validators.checkboxDeclare);

    rm.validationHelper.configOneOfReqChecked_iconAndText(
      $form,
      'consent_check',
      'Please confirm parental responsibility for this child.'
    );

  };

  var initMedicareInfoPreference = function (){
    var $form = $('#formMedicareInfo');
    if (!$form.length) { return false; }

     $form.data('formValidation')
     .addField('radio-fourtypes', validators.radio)
     .updateMessage('radio-fourtypes', 'notEmpty', 'Please select a Medicare Information preference.')
     .addField('radio-choose-1', validators.radio)
     .updateMessage('radio-choose-1', 'notEmpty', 'Please provide your consent preference for including PBS data in your My Health Record.')
     .addField('radio-choose-2', validators.radio)
     .addField('radio-choose-3', validators.radio)
     .updateMessage('radio-choose-3', 'notEmpty', 'Please provide your consent preference for including MBS data in your My Health Record.')
     .addField('radio-choose-4', validators.radio)
     .addField('radio-choose-6', validators.radio)
     .updateMessage('radio-choose-6', 'notEmpty', 'Please provide your consent preference for including AIR data in your My Health Record.')
     .addField('radio-choose-7', validators.radio)
     .updateMessage('radio-choose-7', 'notEmpty', 'Please provide your consent preference for including AODR data in your My Health Record.');
  };

  var initformHealthCheckAssessment = function() {
    var $form = $('#formHealthCheckAssessment');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('dropdown-states', validators.dropdown);
  };

  var initApplicationConsent = function(){
    var $form = $('#formApplicationConsent');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('consent_check', validators.acceptCheckbox)
    .updateMessage('consent_check', 'notEmpty', 'Please accept the application and consent declaration.')
    .addField('restrictionExpiryDate-day',validators.dateDay)
    .addField('restrictionExpiryDate-month',validators.dateMonth)
    .addField('restrictionExpiryDate-year',validators.dateYear)
    .addField('restrictionExpiryDate-full-date', validators.singleHiddenDate);

    $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="restrictionExpiryDate-full-date"]'));
    });

  };

  var initAdminOptOut = function(){
    var $form = $('#admin-opt-out-form');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('ihi-text', validators.ihi)
    .updateMessage('ihi-text', 'notEmpty', 'Please enter an IHI number.')
    .addField('givenName', validators.name)
    .addField('familyName', validators.name_required)
    .addField('dateOfBirth-day', validators.dateDay)
    .addField('dateOfBirth-month', validators.dateMonth)
    .addField('dateOfBirth-year', validators.dateYear)
    .updateMessage('familyName', 'notEmpty', 'Please enter a name of no more than 40 characters, in the correct format.')
    .updateMessage('familyName', 'regexp', 'Please enter a name of no more than 40 characters, in the correct format.')
    .updateMessage('familyName', 'stringLength', 'Please enter a name of no more than 40 characters, in the correct format.')
    .updateMessage('dateOfBirth', 'notEmpty', 'Please enter the date of birth using the format DD/MM/YYYY (example 27/06/2018).')
    .addField('optOutReason', validators.dropdown)
    .updateMessage('optOutReason', 'notEmpty', 'Please select an Opt-Out reason.')
    .addField('optOutChannelUsageReason', validators.dropdown)
    .updateMessage('optOutChannelUsageReason', 'notEmpty', 'Please select an Opt-Out channel usage reason.')
    .addField('optOutApplicantRelationship', validators.dropdown)
    .updateMessage('optOutApplicantRelationship', 'notEmpty', 'Please select an Opt-Out applicant relationship.')
    .addField('optOutOtherReason', validators.other_reason)
    .addField('dateOfBirth-full-date', validators.singleHiddenDate);
     $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="dateOfBirth-full-date"]'));
     });
  };

  var initformDeactivateRecord = function() {
    var $form = $('#formDeactivateRecord');
    if (!$form.length) { return false; }

    $form.data('formValidation')
      .addField('checkDeactivation', validators.acceptCheckbox)
      .addField('reasonForDeactivation', validators.dropdown);
  };

  var initAdminCancelRecord = function () {
    var $form = $('#formAdminCancelRecord');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('reason-cancellation', validators.dropdown)
    .updateMessage('reason-cancellation', 'notEmpty', 'Please select an option.')
    .addField('consent-check', validators.acceptCheckbox)
    .updateMessage('consent-check', 'notEmpty', 'Please select the checkbox in order to proceed.');
  };


  var initConsumeULCForm = function() {
    var $form = $('#consumeULCForm');
    if (!$form.length) { return false; }

    var formValidation = $form.data('formValidation')
    .addField('ulc', validators.ulcCode)
    .addField('dob-ulc-day', validators.dateDay)
    .addField('dob-ulc-month', validators.dateMonth)
    .addField('dob-ulc-year', validators.dateYear)
    .addField('dob-ulc-full-date', validators.singleHiddenDate);
    $form.on('prevalidate.form.fv',function() {
      $form.data('formValidation').revalidateField($('[name="dob-ulc-full-date"]'));
  });
  };

  var initformAdminUnverifiedIdentityPOROFailed = function() {
    var $form = $('#formAdminUnverifiedIdentityPOROFailed');
    if (!$form.length) { return false; }

    $form.data('formValidation')
        .addField('dob-day', validators.dateDay)
        .addField('dob-month', validators.dateMonth)
        .addField('dob-year', validators.dateYear)
        .addField('dob-full-date', validators.singleHiddenDate);
        $form.on('prevalidate.form.fv',function() {
            $form.data('formValidation').revalidateField($('[name="dob-full-date"]'));
        });
  };

  var initformAdminUnverifiedIdentityEmailULC = function() {
    var $form = $('#formAdminUnverifiedIdentityEmailULC');
    if (!$form.length) { return false; }

    var formValidation = $form.data('formValidation')
        .addField('email', validators.email)
        .updateMessage('email', 'emailAddress', 'Please enter an email address in a valid format (for example: myemail@example.com).')
        .updateMessage('email', 'regexp', 'Please enter an email address in a valid format (for example: myemail@example.com).')
        .enableFieldValidators('email', false, 'emailAddress');
  };

  var initformAdminUnverifiedIdentityMobileULC = function() {
    var $form = $('#formAdminUnverifiedIdentityMobileULC');
    if (!$form.length) { return false; }

    var formValidation = $form.data('formValidation')
        .addField('sms', validators.mobile)
        .enableFieldValidators('sms', false, 'notEmpty');
  };

  var initAdminIntentionCancelRecord = function () {
    var $form = $('#formAdminIntentionCancelRecord');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('cancel-registration', validators.dropdown)
    .updateMessage('cancel-registration', 'notEmpty', 'Please select an option.')
    .addField('other-reason',validators.required)
    .addField('other-reason',validators.other_reason)
    .addField('cancel-registration-applicant', validators.dropdown)
    .updateMessage('cancel-registration-applicant', 'notEmpty', 'Please select an option.');
  };

  var initAdminCancelRegistrationRecord = function(){
    var $form = $('#formAdminCancelRegistrationRecord');
    if (!$form.length) { return false; }

     $form.data('formValidation')
     .addField('family-name', validators.name_required)
     .addField('given-name', validators.name)
     .addField('sex-name', validators.dropdown)
     .updateMessage('sex-name', 'notEmpty', 'Please select an option.')
     .addField('dateofbirth-day', validators.dateDay)
     .addField('dateofbirth-month', validators.dateMonth)
     .addField('dateofbirth-year', validators.dateYear)
     .addField('identifierOptions', validators.dropdown)
     .updateMessage('identifierOptions', 'notEmpty', 'Please select an option.')
     .addField('medicare', validators.mcn)
     .addField('irn', validators.irn)
     .updateMessage('irn','integer','A Medicare IRN Number must be between 1 and 9. Please check your input and try again')
     .addField('ihi', validators.ihi)
     .addField('dva', validators.dva)
     .addField('recordIHI', validators.ihi)
     .addField('dateofbirth-full-date', validators.singleHiddenDate);
     $form.on('prevalidate.form.fv',function() {
        $form.data('formValidation').revalidateField($('[name="dateofbirth-full-date"]'));
     });
  };

  var initCancelRegistrationAR = function () {
    var $form = $('#formmodalCancelRegistrationAR');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('checkboxARNoRestoreReCreating', validators.acceptCheckbox)
    .updateMessage('checkboxARNoRestoreReCreating', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('checkboxARClinicalDataRemoved', validators.acceptCheckbox)
    .updateMessage('checkboxARClinicalDataRemoved', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('checkboxArReview', validators.acceptCheckbox)
    .updateMessage('checkboxArReview', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('checkboxARRepNoAccess', validators.acceptCheckbox)
    .updateMessage('checkboxARRepNoAccess', 'notEmpty', 'Please select the checkbox in order to proceed.')
    .addField('cancelRegistrationNotificationAR', validators.dropdown)
    .addField('notificationAREmail', validators.email)
    .enableFieldValidators('notificationAREmail', true, 'notEmpty')
    .addField('notificationARSMS', validators.mobile);

  };

  var initCancelRegistrationNew = function () {
    var $form = $('#formCancelRegistrationNew');
    if (!$form.length) { return false; }

    $form.data('formValidation')
    .addField('cancelRegistrationNotification', validators.dropdown)
    .addField('notificationEmail', validators.email)
    .enableFieldValidators('notificationEmail', true, 'notEmpty')
    .addField('notificationSMS', validators.mobile)
    .enableFieldValidators('notificationSMS', true, 'notEmpty');
  };

  /* Extend default date callback function so you can provide custom default message */
  var extendDateValidation = function(defaultMessage) {

    var deFaultMessage = defaultMessage || 'Please enter a date in the same format as 10-Nov-2015 or 10/11/2015 or select the calendar icon to select a date';

    /* Modded Callback function */
    var newCallBackFunction = function (value, validator, $input) {

      if (!$.trim(value) && !validator.getOptions($input.attr('name'), 'notEmpty').enabled) return null;
      var momentObjValue = moment(value, 'DD-MMM-YYYY', true);

      if (!momentObjValue.isValid()) {
        var momentObjValueExtra = moment(value, 'DD/MM/YYYY', true);
        if (momentObjValueExtra.isValid()) {
          var valueExtra = momentObjValueExtra.format('DD-MMM-YYYY');
          if($input.closest('.datepicker').length > 0){
            $input.closest('.datepicker').data('DateTimePicker').date(valueExtra);
          } else if($input.closest('.datepicker--custom').length > 0){
            $input.closest('.datepicker--custom').data('DateTimePicker').date(valueExtra);
          }

          momentObjValue = moment(valueExtra, 'DD-MMM-YYYY', true);
        } else {
          return {
            valid: false,
            message: deFaultMessage
          };
        }
      }

      return true;

    };

  };

  /* Extend default mobile callback function so you can provide custom default message */
  var extendMobileValidation = function(defaultMessage) {

    var deFaultMessage = defaultMessage || 'Please enter a valid mobile number.';

    /* Modded Callback function */
    var newCallBackFunction = function (value, validator, $input) {

      var _totalDigits = (value.match(/\d/g)) ? value.match(/\d/g).length : 0,
        hasInvalidNum = _totalDigits < 10 || _totalDigits > 20,
        hasInvalidPrefix = !/^((0|(\+61))\s*4)/g.test(value),
        hasInvalidChar = /[^\+?\d\s]/g.test(value) || /\+{2,}/g.test(value) || (/\+/.test(value) && !/^\+/.test(value)),
        isNotValid = hasInvalidChar || hasInvalidPrefix || hasInvalidNum;

      return !isNotValid ? true : {
        valid: false,
        message: deFaultMessage
      };

    };

  };

  var dateComparison = function (value, validator, $input, optionalArgs) {
    var response = {
          valid: true,
          message: ''
        },
        $nodes, fromDate, toDate, fromDateVal, toDateVal,
        fd, fm, td, tm, fdv, fmv, tdv, tmv, allowFutureDateRange, dateRangeWrapper,
        DATE_COMPARISON_FORMAT = 'DD-MM-YYYY';
    $nodes = {
      'FromDay': validator.$form.find('[name="date-from-day"]'),
      'FromMonth': validator.$form.find('[name="date-from-month"]'),
      'FromYear': validator.$form.find('[name="date-from-year"]'),
      'ToDay': validator.$form.find('[name="date-to-day"]'),
      'ToMonth': validator.$form.find('[name="date-to-month"]'),
      'ToYear': validator.$form.find('[name="date-to-year"]'),
      'FromMinVal': validator.$form.find('[name="date-from-year"]').attr('min'),
      'ToMinVal': validator.$form.find('[name="date-to-year"]').attr('min')
    };

    fdv = $nodes.FromDay.val();
    fmv = $nodes.FromMonth.val();

    fd = fdv.length < 2 ? '0'+fdv : fdv;
    fm = fmv.length < 2 ? '0'+fmv : fmv;
    fromDateVal = fd + '-' + fm + '-' + $nodes.FromYear.val();
    fromDate = moment(fromDateVal, DATE_COMPARISON_FORMAT, true);

    tdv = $nodes.ToDay.val();
    tmv = $nodes.ToMonth.val();

    td =  tdv.length < 2 ? '0'+tdv : tdv;
    tm = tmv.length < 2 ? '0'+tmv : tmv;
    toDateVal = td + '-' + tm + '-' + $nodes.ToYear.val();
    dateRangeWrapper = $nodes.FromDay.closest('.daterange-native');
    allowFutureDateRange = false;

    // Create a moment date object from the passed date value
    var momentObjValue = moment(toDateVal, 'DD-MM-YYYY', true);

    toDate = moment(toDateVal, DATE_COMPARISON_FORMAT, true);
    var momentObjDayAfter = moment().add(1, 'd');

    if(dateRangeWrapper){
      allowFutureDateRange = dateRangeWrapper.hasClass('allowFutureDateRange');
    }

    if (fromDate._isValid) {
      if ($input.attr('name') === 'date-from-full-date' && (parseInt($nodes.FromYear.val()) >= parseInt($nodes.FromMinVal))) {
        // Check datefrom is after dateto
         if (fromDate.isAfter(moment(toDateVal, DATE_COMPARISON_FORMAT), 'day')) {
          response.valid = false;
          if(optionalArgs.optionalMsgTo !== ''){
              response.message = optionalArgs.optionalMsgTo;
          }
          else{
              response.message = 'Please enter a date on or before the To date.';
          }
        }
        //Check future date
        else if (fromDate.isAfter(moment()) && optionalArgs.futureValidation && !allowFutureDateRange) {
            response.valid = false;
            response.message = 'Date cannot be in the future.';
        }
        //check past date
        else if(optionalArgs.pastValidation && fromDate.isBefore(moment(moment(), 'DD-MMM-YYYY'), 'day')){
            response.valid = false;
            response.message = 'Date cannot be in the past.';
        }
        //check past and current date
        else if(optionalArgs.pastCurrentValidation && fromDate.isBefore(moment(momentObjDayAfter, 'DD-MMM-YYYY'), 'day')){
            response.valid = false;
            response.message = 'Date must be in the future.';
        }
      }
    }
    else{
        if ($input.attr('name') === 'date-from-full-date'  && (parseInt($nodes.FromYear.val()) >= parseInt($nodes.FromMinVal)) && parseInt(fdv) > 1 && parseInt(fdv) < 32 && parseInt(fmv) > 1 && parseInt(fmv) < 13 && $nodes.FromYear.val().length < 5 && $nodes.FromDay.val().length < 3 && $nodes.FromMonth.val().length < 3){
            response.valid = false;
            response.message = 'Please enter a valid date by filling out the fields: Day (DD), Month (MM) and Year (YYYY) using numbers only.';
        }
    }

    if(toDate._isValid){
        /* Check for end date of authority -
        CA-proof of Authority : If the value entered by user is greater than 18th birthday then display error.
        Admin Manage AR : If the relationship type is Under 18 - Parental Responsibility and the value is beyond 18th birthday,
        then display below error message.
        */
        if ($input.attr('name') === 'date-to-full-date' && $input.closest('form').find('.dateOfBirth-check-endDateOfAuthority').length !== 0){
            var caeEighteenDateOfBirth = moment(moment(moment($('#caeDateOfBirth').val(), 'DD-MMM-YYYY').format('MM/DD/YYYY')).add(18,'years').calendar());
            var relationshipType = $('p.relationshipType').text() || $('#relationshipType').val();
            if((momentObjValue > caeEighteenDateOfBirth) && (relationshipType === 'Under 18 - Parental Responsibility' || relationshipType === 'Under 18 - Legal Authority' || relationshipType === 'Under 18 - Otherwise Appropriate Person')){
                response.valid = false;
                response.message = 'Date selected is past the individual’s 18<sup>th</sup> birthday, please enter a different date.';
            }
        }

        /* Check for Application Consent Restriction Expiry Date -
        CA-Application Consent : If the value entered by user is greater than 18th birthday then display error.
        */
        if ($input.attr('name') === 'date-to-full-date' && $input.closest('form').find('.dateOfBirth-check-restrictionExpiryDate').length !== 0){
            var cae18DateOfBirth = moment(moment(moment($('#caeDateOfBirth').val(), 'DD-MMM-YYYY').format('MM/DD/YYYY')).add(18,'years').calendar());
            if(momentObjValue > cae18DateOfBirth){
                response.valid = false;
                response.message = 'Date selected is past the individual’s 18<sup>th</sup> birthday, please enter a different date.';
            }
        }


      if ($input.attr('name') === 'date-to-full-date' && (parseInt($nodes.ToYear.val()) >= parseInt($nodes.ToMinVal))) {
        // Check dateto is before datefrom
        if (toDate.isBefore(moment(fromDateVal, DATE_COMPARISON_FORMAT), 'day')) {
          response.valid = false;
          if(optionalArgs.optionalMsgFrom !== ''){
              response.message = optionalArgs.optionalMsgFrom;
          }
          else{
              response.message = 'Please enter a date on or after the From date.';
          }
        }
        //Check future date
        else if (toDate.isAfter(moment()) && optionalArgs.futureValidation && !allowFutureDateRange) {
            response.valid = false;
            response.message = 'Date cannot be in the future.';
        }
        //check past date
        else if(optionalArgs.pastValidation && toDate.isBefore(moment(moment(), 'DD-MMM-YYYY'), 'day')){
            response.valid = false;
            response.message = 'Date cannot be in the past.';
        }
        //check past and current date
        else if(optionalArgs.pastCurrentValidation && toDate.isBefore(moment(momentObjDayAfter, 'DD-MMM-YYYY'), 'day')){
            response.valid = false;
            response.message = 'Date must be in the future.';
        }
      }
    }
    else {
        if ($input.attr('name') === 'date-to-full-date' && ($nodes.ToYear.val()) >= parseInt($nodes.ToMinVal) && parseInt(tdv) > 1 && parseInt(tdv) < 32 && parseInt(tmv) > 1 && parseInt(tmv) < 13 && $nodes.ToYear.val().length < 5 && $nodes.ToDay.val().length < 3 && $nodes.ToMonth.val().length < 3){
            response.valid = false;
            response.message = 'Please enter a valid date by filling out the fields: Day (DD), Month (MM) and Year (YYYY) using numbers only.';
        }
    }

    return response;
  };

  function singleDateValidation(value, validator, $input, optionalArgs){
    var response = {
          valid: true,
          message: ''
        },
        $nodes, date, d, m, dv, mv, DATE_COMPARISON_FORMAT = 'DD-MM-YYYY';

    if($input.attr('id') === 'reviewDateOfAuthority-full-date'){
        var pn = $input.parent().parent().parent().prev();
        $nodes = {
        'day': pn.find('[data-field-type="day"]'),
        'month': pn.find('[data-field-type="month"]'),
        'year': pn.find('[data-field-type="year"]'),
        'yearMinVal': pn.find('[data-field-type="year"]').attr('min')
        };
    }
    else {
        $nodes = {
        'day': validator.$form.find('[data-field-type="day"]'),
        'month': validator.$form.find('[data-field-type="month"]'),
        'year': validator.$form.find('[data-field-type="year"]'),
        'yearMinVal': validator.$form.find('[data-field-type="year"]').attr('min')
        };
    }

    dv = $nodes.day.val();
    mv = $nodes.month.val();

    d =  dv.length < 2 ? '0'+dv : dv;
    m =  mv.length < 2 ? '0'+mv : mv;
    date = d + '-' + m + '-' + $nodes.year.val();

    // Create a moment date object from the passed date value
    var momentObjValue = moment(date, 'DD-MM-YYYY', true);

    date = moment(date, DATE_COMPARISON_FORMAT, true);

    if(((dv !== '' && mv !== '' && $nodes.year.val() !== '')) || ((dv !== '' || mv !== '' || $nodes.year.val() !== '') && $input.attr('id') === 'reviewDateOfAuthority-full-date')){

        if (date._isValid) {

            /* Check for end date of authority -
            CA-proof of Authority : If the value entered by user is greater than 18th birthday then display error.
            Admin Manage AR : If the relationship type is Under 18 - Parental Responsibility and the value is beyond 18th birthday,
            then display below error message.
            */
            if ($input.closest('form').find('.dateOfBirth-check-endDateOfAuthority').length !== 0){
                var caeEighteenDateOfBirth = moment(moment(moment($('#caeDateOfBirth').val(), 'DD-MMM-YYYY').format('MM/DD/YYYY')).add(18,'years').calendar());
                var relationshipType = $('p.relationshipType').text() || $('#relationshipType').val();
                if((momentObjValue > caeEighteenDateOfBirth) && (relationshipType === 'Under 18 - Parental Responsibility' || relationshipType === 'Under 18 - Legal Authority' || relationshipType === 'Under 18 - Otherwise Appropriate Person')){
                    response.valid = false;
                    response.message = 'Date entered is past the individual’s 18<sup>th</sup> birthday, please enter a different date.';
                }
            }

            /* Check for Application Consent Restriction Expiry Date -
            CA-Application Consent : If the value entered by user is greater than 18th birthday then display error.
            */
            if ($input.closest('form').find('.dateOfBirth-check-restrictionExpiryDate').length !== 0){
                var cae18DateOfBirth = moment(moment(moment($('#caeDateOfBirth').val(), 'DD-MMM-YYYY').format('MM/DD/YYYY')).add(18,'years').calendar());
                if(momentObjValue > cae18DateOfBirth){
                    response.valid = false;
                    response.message = 'Date entered is past the individual’s 18<sup>th</sup> birthday, please enter a different date.';
                }
            }

            /* Check for Date of Birth not over 18-
            Date of Birth : If the value entered by user is greater than 18th birthday then display error.
            */
            if ($input.closest('form').find('.dateOfBirth-eighteen-check').length !== 0){
                var ageCheck = moment().diff(moment(momentObjValue, 'DD-MMM-YYYY').format('MM/DD/YYYY'),'years');
                if(ageCheck >= 18){
                    response.valid = false;
                    response.message = 'Date of birth is for an individual over 18, please enter a different date.';
                }
            }

            if ((parseInt($nodes.year.val()) >= parseInt($nodes.yearMinVal))) {
                 var momentObjDayAfter = moment().add(1, 'd');

                //Check future date
                if (date.isAfter(moment()) && optionalArgs.futureValidation) {
                    response.valid = false;
                    response.message = 'Date cannot be in the future.';
                }
                //check past date
                else if(optionalArgs.pastValidation && date.isBefore(moment(moment(), 'DD-MMM-YYYY'), 'day')){
                    response.valid = false;
                    response.message = 'Date must be in the future.';
                }
                //check past and current date
                else if(optionalArgs.pastCurrentValidation && date.isBefore(moment(momentObjDayAfter, 'DD-MMM-YYYY'), 'day')){
                    response.valid = false;
                    response.message = 'Date must be in the future.';
                }
            }
        }
        else{
            if ((parseInt($nodes.year.val()) >= parseInt($nodes.yearMinVal)) && parseInt(dv) > 1 && parseInt(dv) < 32 && parseInt(mv) > 1 && parseInt(mv) < 13 && $nodes.year.val().length === 4 && (dv.length === 1 || dv.length ===2) && (mv.length === 1 || mv.length === 2)){
                response.valid = false;
                response.message = 'Please enter a valid date by filling out the fields: Day (DD), Month (MM) and Year (YYYY) using numbers only.';
            }
            else if($input.attr('id') === 'reviewDateOfAuthority-full-date'){
                var showError = true;
                if(parseInt(dv) < 1 || parseInt(dv) > 31){
                    showError = false;
                }

                if(parseInt(mv) < 1 || parseInt(mv) > 12){
                    showError = false;
                }

                if(parseInt($nodes.year.val()) <= parseInt($nodes.yearMinVal)){
                     showError = false;
                }

                if(showError){
                    response.valid = false;
                    response.message = 'Please enter a valid date by filling out the fields: Day (DD), Month (MM) and Year (YYYY) using numbers only.';
                }
            }
        }
    }
    return response;
  }

  return {
    init: initialize,

    initValidation: initValidation,
    extendMobileValidation:extendMobileValidation,

    //// Return a copy of the validators object so that it can used outside of "validation.js" file
    getValidators: function () {
      return $.extend({}, validators);
    },

    //// Check if form is initialized with form validation plugin
    hasFvPlugin: function ($form) {
      return $form.length ? $form.data('formValidation') : false;
    },

    //// Check if a form is valid (given form validation plugin already initialized)
    isFormValid: function ($form) {
      var $formFvPlugin = this.hasFvPlugin($form);
      if (!$formFvPlugin) throw 'attempt to validate form which does not have form validation plugin bound';
      $formFvPlugin.validate();
      return $formFvPlugin.isValid();
    },

    //// Optional - Slight abbreviation for not writing $form.formValidation();
    // e.g. argArray = [
    //    [ 'addField', 'family-name', validators.required ],
    //    [ 'addField', 'given-name', validators.required ]
    // ]
    customInit: function ($form, argArray) {
      this.initValidation();
      argArray.forEach(function(arg){
        $form.formValidation.apply($form, arg);
      });
    },
    disableValidatorOnThisForm: function ($form, element, ruleName) {
      var $formFvPlugin = this.hasFvPlugin($form);
      if (!$formFvPlugin) throw 'attempt to validate form which does not have form validation plugin bound';
      $formFvPlugin.enableFieldValidators(element, false, ruleName);
    },

    enableValidatorOnThisForm: function ($form, element, ruleName) {
      var $formFvPlugin = this.hasFvPlugin($form);
      if (!$formFvPlugin) throw 'attempt to validate form which does not have form validation plugin bound';
      $formFvPlugin.enableFieldValidators(element, true, ruleName);
    },
    //// Updating form validation (i.e 'addField'/'removeField') by supplying an array of form element name (i.e. updatedFmElmNames[ruleName])
    // refer to "updatedFmElmNames" variable
    // e.g. ruleName = 'growthChart', this will look for the form element names in updatedFmElmNames.growthChart & update the field if matched
    update: function ($form, $fmElems, ruleName, isRemove) {
      $.each($fmElems, function(idx){
        var $fmElem = $fmElems.eq(idx),
            fvMethod = isRemove ? 'removeField' : 'addField',
            fmElemNames = updatedFmElmNames[ruleName];

        if (typeof ruleName !== 'string' || !fmElemNames)
          throw ['rule name', 'does not exist'].join(ruleName);

        if (fmElemNames.indexOf($fmElem.attr('name')) !== -1)
          $form.formValidation(fvMethod, $fmElem);
      });
    }
  };

    function bindNumbersOnly(){
        $('body').on('keypress', '[data-field-type="day"], [data-field-type="month"], [data-field-type="year"], [name="irn"], [name="mcn"], [name="ihi"]', function (event){
            return isNumber(event, false);
        });
        $('body').on('keypress', '[data-field-type="float"]', function (event){
            return isNumber(event, true);
        });
    }

    function toLower(){
      $('.js-lower-case').each(function (index, element){
       $(element).text($(element).text().toCapitalize());
      });
    }

    function isNumber(evt, allowDot) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode === 46 && allowDot) {
            return true;
        }
        if (charCode > 31 && (charCode < 48 || charCode > 57) || (allowDot === false && charCode === 46)) {
            return false;
        }
        return true;
    }

    

}());


String.prototype.toCapitalize = function() { 
  'use strict';
  return this.toLowerCase().replace(/^.|\s\S/g, function(a) { 
    return a.toUpperCase(); 
  });
};
/**
 * -------------------------------------
 * Purpose
 * -------------------------------------
 * Helper funtions to form
 *
 *
 *
 * -------------------------------------
 * Usage
 * -------------------------------------
 * See the parameters in each method for details
 *
 *
 *
 * -------------------------------------
 * Dependency
 * -------------------------------------
 *   - form validation plugin (formvalidation.io)
 */
rm.form.util = rm.form.util || (function(){

  'use strict';

  return {
    isFormValid: isFormValid,
    currEntryId: rtn_currEntryId(),
    configGetFormData: configGetFormData
  };

  function isFormValid ($form) {
    var $plugin = $form.length ? $form.data('formValidation') : false;

    if (!$plugin) return;

    $plugin.validate();

    return $plugin.isValid();
  }

  /*
   * -- Params --
   * @contextSelector      // selector of the a set/group element containing >=1 form elements, e.g. "fieldset", "tr"
   *
   * @fmInputMapAry = [
   *   <obj_returnFmElemValueConfig1>
   *   <obj_returnFmElemValueConfigN>
   * ]
   *
   * <obj_returnFmElemValueConfig1> = {
   *   slr:            // selector of the form element (must be different to and inside the contextSelector)
   *   attr:           // attribute name for the value of the form element which you want to grab, e.g. "checked", "value"
   *   fdName:         // name of the field (for backend identification) - if not defined, it will use the the form element name
   * }
   *
   *
   * -- Full example --
   * // 1. Setup
   * var formDataConfig = [
   *   { slr: '.name-family', attr: 'value', fdName: 'family-name' },
   *   { slr: '.name-given', attr: 'value', fdName: 'given-name' },
   *   { slr: '.under-sixteen', attr: 'checked', fdName: 'under-age' }
   * ];
   * var getFormData = rm.form.util.configGetFormData($('form'), 'tr', formDataConfig);
   *
   * // 2. Use - Get the data
   * var data = getFormData();
   *
   *
   * -- Note --
   * Currently does not support for partial/nested form
   */
  function configGetFormData ($form, contextSelector, fmInputMapAry) {
    return function () {
      var $entries = $form.find(contextSelector);
      return Array.prototype.map.call($entries, function(entry, i){
        return fmInputMapAry.reduce(function(container, item, j) {
          var $fmElem = $entries.eq(i).find(item.slr),
              fdName = item.fdName ? item.fdName : $fmElem.prop('name'),
              val = $entries.eq(i).find(item.slr).prop(item.attr);
          container[item.fdName] = encodeURIComponent(val);
          return container;
        }, {});
      });
    };
  }

  function rtn_currEntryId () {
    var atr = { currEntryId: 'data-curr-entry-id' };

    return function ($form, entryId) {
      // Reset the current entry ID if false is manually passed
      if (entryId === false) {
        $form.attr(atr.currEntryId, null);

      // if entryId is provided
      } else if (typeof entryId === 'string' && entryId) {
        $form.attr(atr.currEntryId, entryId);

      // if no entryId is provided, return the current entry id
      } else {
        return $form.attr(atr.currEntryId);
      }
    };
  }

})();
/**
 * Purpose
 * -------------------------
 * When checkbox is checked, the targeted button(s) will be disabled
 * When checkbox is unchecked, the buttons will be enabled
 *
 *
 *
 * Usage
 * -------------------------
 * <input
 *   type="checkbox"
 *   data-toggle-disable="<button-css-selector-here>">
 *
 *
 *
 * Note
 * -------------------------
 * todo: make it allow a flag so that it can be either disabled or enabled
 * e.g.
 * data-toggle-disable
 * data-toggle-enable
 *
 */
rm.chkboxToggleBtn = rm.chkboxToggleBtn || (function($){

  'use strict';

  var NS = {
    slr: {
      initTarget: 'input[data-toggle-disable]'
    },
    atr: {
      toggleTarget: 'data-toggle-disable'
    }
  };

  function init ($checkboxes) {
    // $checkboxes is for custom initialization
    var $chkboxs = $checkboxes ? $checkboxes : $(NS.slr.initTarget).filter('input[type=checkbox]');

    if (!$chkboxs.length) return;

    $.each($chkboxs, function(idx){
       var $chkbox = $chkboxs.eq(idx),
           $btns = $($chkbox.attr(NS.atr.toggleTarget));

       // When checkbox is checked, this will disable the buttons
       $chkbox.on('change', function(){
         $btns.attr('disabled', this.checked ? true : false);
       });
    });
  }

  return {
    init: init
  };

})(jQuery);

rm.toolbar = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */
  var $cache,         // Cache $ elements
      elemSelector = {
        toolbar:            '.toolbar-nav',
        mobileMenuIcon:     '.toolbar-nav__mobile',
        btnGroup:           '.toolbar-nav .btn-group',
        btnHistory:         '.toolbar-nav .btn__history',
        btnAccess:          '.toolbar-nav .btn__access',
        btnRemove:          '.toolbar-nav .btn__remove',
        btnRemoveHide:      '.toolbar-nav .btn__remove-hide-document',
        btnRemovePHS:       '.toolbar-nav .btn__remove-phs',
        btnActive:          '.toolbar-nav .btn--active',
        btn:                '.toolbar-nav .btn-group .btn',
        sectionAccess:      '.toolbar-access',
        sectionHistory:     '.toolbar-history',
        jsVisibleContent:   '.js-content--show',
        btnAccessCancel:    '.js-btn-cancel-access',
        btnRemoveHideCancel:'.js-btn-cancel-remove-hide',
        btnRemovePHSCancel: '.js-btn-cancel-remove-phs',
        btnAccessSave:      '.toolbar-access .js-btn-save',
        btnHistoryHide:     '.js-toggle-table-hide',
        rdoRemoveDocument:  '#radio-remove-document',
        rdoGroup :          'input[name="document-access"]',
        reasonDropdown:     '.toolbar-access__remove-reason',
        btnRemoveCancel:    '.toolbar-adv-care-plan .js-btn-cancel',
        sectionRemove:      '.toolbar-adv-care-plan',
        sectionRemoveHide:  '.toolbar-remove-hide-document',
        sectionRemovePHS:    '.toolbar-remove-phs',
        formRemove:         '.toolbar-adv-care-plan > form',
        formRemoveHide:     '.toolbar-remove-hide-document > form',
        formDiaryRemove:    '.toolbar-adv-care-plan > form.js-remove-diary',
        sectionRemoveConf:  '#removeConfirmation',

        // Elements to hide/disable when Toolbar is active (vice versa)
        disabledElem:        '[data-toolbar-active--disable]',
        hideElem:            '[data-toolbar-active--hide]',
        changeDocumentSubmit: '.toolbar-access__controls input[type="submit"]'
      };

  function getCacheJqElem () {
    var $toolbar = $(elemSelector.toolbar);

    return {
      toolbar: $toolbar,
      pillBtns: $(elemSelector.btnGroup).find('button'),
      disabledElem: $(elemSelector.disabledElem),
      hideElem: $(elemSelector.hideElem)
    };
  }

  function hideMobile () {
    $(elemSelector.mobileMenuIcon).removeClass('hidden');
  }

  function resetToolbar (){
    var $btnHistory= $(elemSelector.btnHistory),
        $btnAccess= $(elemSelector.btnAccess),
        $btnRemove= $(elemSelector.btnRemove),
        $btnRemoveHide= $(elemSelector.btnRemoveHide),
        $btnRemovePHS = $(elemSelector.btnRemovePHS);

    $btnHistory
      .text('Show History')     //Incase Show History button is Hide History, so reset text
      .add($btnAccess)
      .add($btnRemove)
      .add($btnRemoveHide)
      .add($btnRemovePHS)
      .attr('data-mode', 'hide')
      .attr('aria-expanded', 'false');
  }

  function bindEvents () {
    //Show toolbar nav on click in mobile view
    $(elemSelector.mobileMenuIcon).click(function (e) {
      console.log('t');
      $(elemSelector.btnGroup).toggleClass('js-toolbar--show');
      e.preventDefault();
    });

    // Buttons Click toolbar-nav
    $(elemSelector.btnHistory).click(function (e) {
      var $btnHistory = $(this);
      var btnMode =  $btnHistory.attr('data-mode');

      resetToolbar();

      //deactivate other buttons
      $(elemSelector.btnActive).removeClass('btn--active');

      //hide other contents
      $(elemSelector.jsVisibleContent).removeClass('js-content--show');

      if (btnMode === undefined || btnMode === 'hide'){
        //Active the button
        $btnHistory.addClass('btn--active')
          .attr('aria-expanded', 'true');

        //Show the related Content
        $(elemSelector.sectionHistory).addClass('js-content--show');

        rm.personalHealthNotes.disableForm();

        btnMode='show';
        $btnHistory.text('Hide History');
        $('[data-action="add-achievement"]').addClass('evtToolBarDisabled disabled-block disabled');
        $('[data-action="update-phn"]').addClass('hidden');
        handleActive(true);

      } else{
        btnMode='hide';
        rm.personalHealthNotes.disableForm();
        $btnHistory.text('Show History')
          .attr('aria-expanded', 'false');
        $('[data-action="add-achievement"]').removeClass('evtToolBarDisabled disabled-block disabled');
        $('[data-action="update-phn"]').removeClass('hidden');
        handleActive(false);
      }

      //change the mode for Buttons
      $btnHistory.attr('data-mode', btnMode);

      // show/hide cancel and save buttons
      var firstTrChecked = $('.toolbar-history table tbody > tr:first-child input[type="radio"]');
      var tblRows = $('.toolbar-history table tbody tr');

      if (btnMode === 'hide' && tblRows.length === 1) {
        $('.personal-health-notes--controls').removeClass('hidden');        
      } else if (btnMode === 'hide' && firstTrChecked.is(':checked') === false) {
        $('.personal-health-notes--controls').addClass('hidden');
      } else if (btnMode === 'hide' && firstTrChecked.is(':checked') === true) {
        $('.personal-health-notes--controls').removeClass('hidden');
      } 

      //Hide the Toolbar Nav in Mobile View
      $(elemSelector.btnGroup).removeClass('js-toolbar--show');

      e.preventDefault();
    });

    $(elemSelector.btnAccess).click(function (e) {
      var $btnAccess = $(this);
      var btnMode =  $btnAccess.attr('data-mode');

      resetToolbar();

      //deactivate other buttons
      $(elemSelector.btnActive).removeClass('btn--active');

      //hide other contents
      $(elemSelector.jsVisibleContent).removeClass('js-content--show');

      if (btnMode === undefined || btnMode === 'hide'){
        //Active the button
        $btnAccess.addClass('btn--active')
          .attr('aria-expanded', 'true');

        //Show the related Content
        $(elemSelector.sectionAccess).addClass('js-content--show');
        $('[data-action="update-phn"]').addClass('hidden');
        btnMode='show';
        rm.personalHealthNotes.disableForm();
        handleActive(true);

      } else{
        btnMode='hide';
        rm.personalHealthNotes.disableForm();
        $('[data-action="update-phn"]').removeClass('hidden');
        $btnAccess.attr('aria-expanded','false');
        handleActive(false);
      }

      //change the mode for Buttons
      $btnAccess.attr('data-mode', btnMode);

      //Hide the Toolbar Nav in Mobile View
      $(elemSelector.btnGroup).removeClass('js-toolbar--show');

      e.preventDefault();
    });

    $(elemSelector.btnAccessCancel).click(function (e) {
      $(elemSelector.btnAccess).trigger( 'click' );
      // Hide the form that's been expanded just in case.
      $('#removeConfirmation').addClass('hidden');
      $('.btn__access').focus();
    });

    $(elemSelector.btnRemoveHideCancel).click(function (e) {
      $(elemSelector.btnRemoveHide).trigger( 'click' );
    });
    
    $(elemSelector.btnRemovePHSCancel).click(function (e) {
      $(elemSelector.btnRemovePHS).trigger( 'click' ).focus();
    });

    $(elemSelector.btnHistoryHide).click(function (e) {
      $(elemSelector.btnHistory).trigger( 'click' );
      e.preventDefault();
    });

    $(elemSelector.rdoGroup).click(function () {
      var $changeDocumentSubmit = $(elemSelector.changeDocumentSubmit);
      if ($(elemSelector.rdoRemoveDocument).is(':checked')){
        $(elemSelector.sectionRemoveConf).removeClass('hidden');
      }
      else{
        $(elemSelector.sectionRemoveConf).addClass('hidden');
        $changeDocumentSubmit.val('Save');
      }
    });
    
    //Remove Hide Toolbar
    $(elemSelector.btnRemoveHide).click(function (e) {
      var $btnRemoveHide = $(this);
      var btnMode =  $btnRemoveHide.attr('data-mode');
      $('.fv-feedback-wrap').addClass('hidden');
      
      $(elemSelector.formRemoveHide).data('formValidation').resetForm();
      
      resetToolbar();
      
      $('.btn--active').removeClass('btn--active');
      
      $(elemSelector.jsVisibleContent).removeClass('js-content--show');
      
      if (btnMode === undefined || btnMode === 'hide'){
        $btnRemoveHide.addClass('btn--active').attr('aria-expanded', 'true');
        
        $(elemSelector.sectionRemoveHide).addClass('js-content--show');
        
        btnMode='show';
        handleActive(true);
      } else {

        $btnRemoveHide.removeClass('btn--active').attr('aria-expanded','false');
        $(elemSelector.sectionRemoveHide).removeClass('js-content--show');

        btnMode='hide';
        handleActive(false);
      }
      
      $btnRemoveHide.attr('data-mode', btnMode);
      $(elemSelector.btnGroup).removeClass('js-toolbar--show');
      e.preventDefault();
      
    });
    
    //Remove PHS Toolbar
    $(elemSelector.btnRemovePHS).click(function (e) {
      var $btnRemovePHS = $(this);
      var btnMode =  $btnRemovePHS.attr('data-mode');
      
      resetToolbar();
      $('.btn--active').removeClass('btn--active');
      
      $(elemSelector.jsVisibleContent).removeClass('js-content--show');
      
      if (btnMode === undefined || btnMode === 'hide'){
        $btnRemovePHS.addClass('btn--active').attr('aria-expanded', 'true');
        $(elemSelector.sectionRemovePHS).addClass('js-content--show');
        btnMode='show';
        handleActive(false);
        console.log('test');
      } else {
        $btnRemovePHS.removeClass('btn--active').attr('aria-expanded', 'false');
        $(elemSelector.sectionRemovePHS).removeClass('js-content--show');
        btnMode='hide';
        handleActive(false);
      }
      
      $btnRemovePHS.attr('data-mode', btnMode);
      $(elemSelector.btnGroup).removeClass('js-toolbar--show');
      e.preventDefault();
      
    });
    

    // Remove toolbar
    $(elemSelector.btnRemove).click(function (e) {
      var $btnRemove = $(this);
      var btnMode =  $btnRemove.attr('data-mode');

      // Reset the <select> and any existing validation
      // $(elemSelector.sectionRemove).find('select').each(function(){
      //   rm.dropdown.resetSelection($(this));
      // });

      $(elemSelector.formRemove).data('formValidation').resetForm();

      resetToolbar();

      //deactivate other buttons
      $('.btn--active').removeClass('btn--active').attr('aria-expanded', 'false');

      //hide other contents
      $(elemSelector.jsVisibleContent).removeClass('js-content--show');

      if (btnMode === undefined || btnMode === 'hide'){
        //Active the button
        $btnRemove.addClass('btn--active').attr('aria-expanded', 'true');

        //Show the related Content
        $(elemSelector.sectionRemove).addClass('js-content--show');

        btnMode='show';
        handleActive(true);

      } else {
        //Active the button
        $btnRemove.removeClass('btn--active').attr('aria-expanded','false');

        //Show the related Content
        $(elemSelector.sectionRemove).removeClass('js-content--show');

        btnMode='hide';
        handleActive(false);
      }

      //change the mode for Buttons
      $btnRemove.attr('data-mode', btnMode);

      //Hide the Toolbar Nav in Mobile View
      $(elemSelector.btnGroup).removeClass('js-toolbar--show');

      //We always reset Reason dropdown, so we need tyhe button to be disbaled
      //$('.toolbar-adv-care-plan .js-btn-remove-document').prop('disabled',true);
      e.preventDefault();
    });

    $(elemSelector.btnRemoveCancel).click(function (e) {
      $(elemSelector.btnRemove).trigger( 'click' );
      e.preventDefault();
    });

    $(elemSelector.formDiaryRemove).on('success.form.fv', function (e) {
      var $thisForm = $(this),
        validation = $thisForm.data('formValidation');

      e.preventDefault(); //stop form submit

      // Show the confirmation modal
      $('#modalConfirmRemoveDiary').modal('show');
      validation.resetForm();
    });
  }

  function setActiveCallback (fn) {
    if (typeof fn !== 'function') throw 'activeCallback should be a function';
    $cache.activeCallback = fn;
  }

  function handleActive (isToolbarOn) {
    $cache.disabledElem.prop('disabled', isToolbarOn ? true : false);
    $cache.hideElem[isToolbarOn ? 'addClass' : 'removeClass']('hidden');
    $cache.toolbar.trigger('toolbar.toggle', isToolbarOn);
  }

  return {
    cache: null,
    init: function() {
      // Get a collection of fixed elements for re-use
      $cache = getCacheJqElem();
      this.cache = $cache;

      // $(elemSelector.btnGroup).length for Emergency Contact page
      if (!($cache.toolbar.length || $(elemSelector.btnGroup).length)) return false;

      // console.log('toolbar is running!!!!');
      bindEvents();
      hideMobile();
      
      if(0 !== $('#formChangeDocumentAccessLevel').length) {
        $('#formChangeDocumentAccessLevel').find('input[type="reset"]').on('click', function() {
          $('.toolbar-nav').find('.btn__access, .btn__remove, .btn__remove-hide-document, .btn__remove-phs').first().focus();
        });
      }
    },

    isToolbarVisible: function() {
      var $btnHistory = $(elemSelector.btnHistory),
          $btnAccess = $(elemSelector.btnAccess);

      return ($btnHistory.attr('data-mode') === 'show' || $btnAccess.attr('data-mode') === 'show') ? true : false;
    },

    toggleBtns: function (doEnable, ignoreFocus) {
      if (!$cache || rm.readOnlyMode.state.isReadOnly) return;
      $cache.pillBtns.prop('disabled', doEnable ? false : true);
      
      if(ignoreFocus === true) return;
      $cache.pillBtns.each(function(i, el) {
        if($(el).attr('aria-expanded') === 'true') $(el).focus();
      });
    },
    setActiveCallback: setActiveCallback,
    handleActive: handleActive
  };
}());
/**
 * Functionality:
 * ===============
 * Click <tr> to activate the radio button in that row (assuming there is only 1 radio each row)
 *
 * Usage:
 * ===============
 * 1. In HTML, apply a class "js-clickTrToCheckRdo" to <tbody>
 * 2. In JS, call rm.clickTbRowToCheckRdo.init(); at docment.ready
 */
rm.clickTbRowToCheckRdo = rm.clickTbRowToCheckRdo || (function ($) {

  'use strict';

  /* -- VARIABLE & FN SETUP -- */
  var elemSelector = {
        tbody:        '.js-clickTrToCheckRdo',
        rdoBtn:       'input[type=radio]',
        rmvBtnToolbar: '.toolbar-nav .btn__remove',
        rmvBtnToolbarPHS: '.toolbar-nav .btn__remove-phs'
      };

  function onTrElemClick (e) {
    var rdoBtn = $(this).find(elemSelector.rdoBtn)[0];

    if (rdoBtn.checked) return;   // Skip the code if the radio btn is already checked

    rdoBtn.checked = true;        // Check the clicked radio btn
    $(e.delegateTarget)           // Deactivate other radio buttons
      .find(elemSelector.rdoBtn).not(rdoBtn)
      .attr('checked', false)
      .trigger('changed');
      onRdoChange(rdoBtn);
  }

  function onRdoChange(rdoBtn){
      var $tr = $(rdoBtn).closest('tr');

      if($tr.is('.js-clickTrToCheckRdo tr:first-child')){
        $(elemSelector.rmvBtnToolbar).prop('disabled',false);
        if(rm.sessionStorage.getSession('statusMode') !== 'restricted')
          $(elemSelector.rmvBtnToolbarPHS).parent().removeClass('hidden');
      }
      else {
        {
          $(elemSelector.rmvBtnToolbar).prop('disabled',true);
          $(elemSelector.rmvBtnToolbarPHS).parent().addClass('hidden');
        }
      }
  }
  
  function handleTabFocus() {
    $('*[name="radio-buttons"]').on('focus', function() {
      this.checked = true;
    });
  }
  
  /* -- PRIMARY LOGIC -- */
  return {
    init: function () {
      if($(elemSelector.tbody+' tr').length === 1){
        $(elemSelector.tbody+' td:first-child').find('.radio').remove();
        $(elemSelector.tbody+' td:first-child').addClass('no-margin-padding');
      }

      $(elemSelector.tbody).on('click', 'tr', onTrElemClick);
      $('.js-clickTrToCheckRdo input[name="radio-buttons"]').change(function(){onRdoChange(this);});
      //$(elemSelector.latestHistoryRdo).change(onTrElemClick);
      
      handleTabFocus();
    },
    handleTabFocus: handleTabFocus
  };

})(jQuery);
/**
 * Purpose
 * ==================================================================================================
 * Automatically add a Column Header to lvl 1 & lvl 2 nested table for mobile (hidden in desktop)
 *
 *
 * Usage
 * ==================================================================================================
 * <HTML>
 * 1. Apply a class "js-tb-rows-to-lists" to top level <table>
 * 2. For creating specific column header:
 * - If you don't want a heading for a table cell <th> or <td> at all, add an attribute ' data-col-header="none" ' to the cell
 * - If you want a specific heading a table cell <th> or <td>, add an attribute ' data-col-header="{NUMBER}" ' to the cell
 *   where {NUMBER} is the index of column header starting from index 0 (not nth-child),
 *   e.g. <!-- column headers -->
 *        <tr>
 *           <th>col1 header</th>
 *           <th>col2 header</th>
 *        </tr>
 *
 *        <!-- table cell (col1 header) -->
 *        <td data-col-header="0"></td>
 * <JS>
 * 3. call the rm.tbRowsToLists.init(); BEFORE the table.init() As this module involves generating html elements and inserting them into the DOM therefore it must be called PRIOR TO the Pagination is called. Else it won't be to find the corresponding table cells.
 *
 *
 * Assumption/Requirements/Dependencies
 * ==================================================================================================
 * - Assumes there is at least 1x table which follows the markup
 * - Assumes Data Table plugin is involved
 * - Dependencies are declared in IIFE
 *
 */
rm.tbRowsToLists = rm.tbRowsToLists || (function ($) {

  'use strict';

  /* -- VAR & FN SETUP -- */
  var $tbs = $('.js-tb-rows-to-lists'),     // targeted tables
      elemSelector = {
        colHeaders:        '> thead > tr > th',
        overrideCells:     '[data-col-header]',

        // 1st lvl of tb (for no nested tables)
        topTbCellsDef:     'tbody > tr > td:nth-child({{nthChild}})',

        // 1st lvl of tb (for 2 OR 3 lvls of nested tables)
        topTbCells:        '.table--nested-parent > thead > tr > th:nth-child({{nthChild}})',

        // 2nd lvl of tb (for 2 lvls of nessted tables)
        childTbCells2:     '.table--nested-parent > tbody > tr > td:nth-child({{nthChild}})',

        // 2nd lvl of tb (for 3 lvls of nested tables)
        childTbCells3:     '.table--nested-child > thead > tr > th:nth-child({{nthChild}})',

        // 3rd lvl of tb (for 3 lvls of nested tables)
        grandChildTbCells: '.table--nested-child > tbody > tr > td:nth-child({{nthChild}})',
      };

  function hp_createListHeaderFrmColHeaders (idx, item) {
    var cellTxt = $.trim($(item).text());

    if (cellTxt) {
      return $('<strong class="col-head">' + cellTxt + ' </strong>');
    }
  }

  function hp_getFilteredTbCells ($tb, selectorPropName, colIdx){
    if (!elemSelector[selectorPropName]) throw 'property "' + selectorPropName + '" does not exists in variable "elemSelector"';

    var tbCellsSelector = elemSelector[selectorPropName].replace('{{nthChild}}', colIdx);

    return $tb
            .find(tbCellsSelector)
            .map(function (idx, item) {
              var $cell = $(item),
                  hasChildren = $cell.children().length,
                  isCellTxtExist = $.trim($cell.text()),
                  isColHeaderRequired = $cell.attr('data-col-header') !== 'none';

              if (isColHeaderRequired && (isCellTxtExist || hasChildren)) {
                $cell.attr('data-list-exist', true);
                return item;
              }
            });
  }

  function init () {
    // todo: For loop is required in this case for blocking purpose (to work with Data Table), however can be optimize using .map/.reduce etc
    // Note: jQuery Promise is not used here since the table entries/listHeaders entries are relatively small
    var endTbsIdx = $tbs.length,
        $tb, isTbNotNested, isTb3Lvls, listHeaders,             // 1st for loop
        colIdx, $colHeader, $allCells,                          // 2nd for loop
        $overrideCell, overrideColHeaderIdx, $overrideCells;    // 3rd for loop

    for (var i=0; i < endTbsIdx; i++) {
      // Create the List headers from existing table (i.e. column headers)
      $tb = $tbs.eq(i);
      isTbNotNested = !$tb.hasClass('table--nested');
      isTb3Lvls = $tb.hasClass('table--nested-multi');
      listHeaders = $tb
                    .find(elemSelector.colHeaders)
                    .map(hp_createListHeaderFrmColHeaders);

      // Add the Headers to the cells
      for (var j=0; j < listHeaders.length; j++) {
        colIdx = j + 1;
        $colHeader = listHeaders[j].clone();
        $allCells = hp_getFilteredTbCells($tb, isTbNotNested ? 'topTbCellsDef' : 'topTbCells', colIdx)
                      .add(hp_getFilteredTbCells($tb, isTb3Lvls ? 'childTbCells3' : 'childTbCells2', colIdx))
                      .add(hp_getFilteredTbCells($tb, 'grandChildTbCells', colIdx));
        $overrideCells = $allCells.filter(elemSelector.overrideCells);

        // Add the sub headers for normal cells
        $allCells.not(elemSelector.overrideCells).prepend($colHeader);

        // Add the sub headers for override cells (cells with specified headers)
        for (var k=0; k < $overrideCells.length; k++) {
            $overrideCell = $overrideCells.eq(k);
            overrideColHeaderIdx = $overrideCell.attr('data-col-header');
            $overrideCell.prepend(listHeaders[parseInt(overrideColHeaderIdx)].clone());
        }
      }
    }
  }


  /* -- PRIMARY LOGIC -- */
  return {
    init: init
  };

})(jQuery);
/**
 * Purpose
 * ============================================
 * Generate a list of options elements from a specified table header and Inject them into <select>
 *
 *
 * Usage
 * ============================================
 * Refer to "table-m-sort.hbs"
 * 1. In Html/hbs file, Apply a class "js-m-datatable-sort-wrap" to the outer <div>
 * 2. In Html/hbs file, Apply a class "js-m-datatable-sort" to <select>
 * 3. In JS, Call it AFTER table.init();
 *     rm.tbMbileSort.init();
 *
 *      Note: this will involve automatically getting the header text from the current visible table
 *      (1 only) <th> & Create <option> elements to inject into the <select> in the handlebars file
 *
 *
 * Requirements/Assumption/Dependencies
 * ============================================
 * - Assumes Bootstrap Select Plugin is included
 * - Assumes that "Data Table" Plugin is involved which includes Sorting, Pagination, Grouping (any questions, check with Backend)
 * - synchronizes with "Sorting" in Desktop (by clicking <th> or sorting arrows)
 * - synchronizes with "Group by" Dropdown
 * - "sorting" class at th is used for pre-sorting for nested table
 *
 */
rm.tbMobileSort = rm.tbMobileSort || (function ($) {

  'use strict';

  var $moduleWrap =             $('.js-m-datatable-sort'),
      currTbThSelector =        '.displaycontent__block:not(.hidden) > .dataTables_wrapper > table > thead > tr > th',
      currTbThSortColSelector = '.sorting_desc, .sorting_asc';


  /* -- PRIMARY LOGIC -- */
  return {
    init: init,
    updateSortOptions: updateSortOptions
  };


  /* -- METHODS -- */
  // Setup the plugin
  function init (config) {
    $moduleWrap = (config && typeof config.wrap === 'string') ?
                  $(config.wrap).addClass('js-m-datatable-sort') :
                  $moduleWrap;

    // Check config & Merge default config with user config
    if (!$moduleWrap.length) return;

    config = config ? config : { th: currTbThSelector };

    // todo: .each()
    // Generate option text & list element
    // var $optionWrap = $moduleWrap.find('.sort-options'),
    var optionLists = hp_grabHeaderTextFromTb(config.th),
        isTbHeaderEmptyOrLessThanOneTbRow = !optionLists.length || $(config.th).parents('table').find('tbody > tr').length < 2,
        $optionWrap = $moduleWrap,
        $optionLists;

    if (isTbHeaderEmptyOrLessThanOneTbRow) {
      $moduleWrap.parents('.js-m-datatable-sort-wrap').remove();
      return;

    } else {
      $optionLists = hp_createListItemFrmHeaderText(optionLists).contents();

      // Add to List Container & Listen to Event & Call Bootstrap Selectpicker after list is generated
      $optionWrap
        .prepend($optionLists);

      // Bind Event
      $optionWrap
        .on('change', cb_onListItemClick);

      // Sync the options state to the table headers (after the <li> have been added)
      this.updateSortOptions();

      return this;
    }
  }

  // Synchronize the Mobile Sort Options with the Desktop ones (if Desktop Sorting is used)
  function updateSortOptions (isGroupByChanged) {
    // table head related
    var $tbTh = $(currTbThSelector),
        $currSortTh = $tbTh.filter('.sorting_asc, .sorting_desc'),
        currSortThIdx = $tbTh.index($currSortTh),
        currSortThClass = $currSortTh.hasClass('sorting_asc') ? 'sorting_asc' : 'sorting_desc',
        isOtherColSortable = !!Array.prototype
                                .map.call($tbTh, function(item, idx){
                                  return $tbTh.eq(idx).hasClass('sorting') ? idx : false; })
                                .filter(function(item){ return item !== false; })
                                .length,
    // Select option related
        $lists = $moduleWrap
                    .find('option'),
        $listSelected = $lists.eq(currSortThIdx);

    // if table is not sortable
    if (!$currSortTh.length) return;

    // When groupby is changed, update the current vislble sortby Option by triggering the corresponding default sorting <th>
    if (isGroupByChanged) {
      $moduleWrap
        .find('option').removeAttr('selected')
        .end().val(currSortThIdx).trigger('change');
    }

    // Update the class & the visibility of <li> (pointer-events)
    $lists
      .removeClass('sorting_asc sorting_desc sorting_none selected')
      .filter($listSelected).addClass(currSortThClass + ' selected')
      .end().not($listSelected).addClass(isOtherColSortable ? '' : 'sorting_none');
  }


  /* -- HELPER FN -- */
  // Generate the <li> (i.e. option) from the table Headers
  function hp_grabHeaderTextFromTb (thSelector) {
    var optionLists = $(thSelector)
                      .map(function(idx, tbHeader){
                        var headerTxt = $.trim($(tbHeader).text());
                        if (headerTxt) return headerTxt;
                      });
    return !optionLists.length ? [] : Array.prototype
            .join
            .call(optionLists, ',').split(',');
  }

  // Configure the <li> with Attribute, Html etc & Place it in a temporary container (where content will be added to option list later)
  function hp_createListItemFrmHeaderText(optionListsArray) {
    var $listTemplate = $('<option />');

    return optionListsArray.reduce(function ($container, text, idx) {

      $listTemplate
        .clone()
        .html(text)
        .attr({
          // 'data-sort-col': idx,
          value: idx
        })
        .appendTo($container);

      return $container;

    }, $('<div/>'));
  }


  /* -- CALLBACK -- */
  function cb_onListItemClick () {
    var listIdx = $('.js-m-datatable-sort').val(),
        $listSelected = $(this),
        $listWrap = $listSelected.parent(),
        $currTbTh = $(currTbThSelector),
        $currTbMatchedTh = $currTbTh.eq(listIdx);

    // Exit If the matched <th> is disabled for sorting
    if (!$currTbMatchedTh.hasClass('sorting') &&
        !$currTbMatchedTh.hasClass('sorting_asc') &&
        !$currTbMatchedTh.hasClass('sorting_desc')) return;

    // Simulate the click
    $currTbMatchedTh.trigger('click');

    // Grab the state frm <th> & Update the sorting state for <li>
    $listWrap
      .find('.sorting_desc, .sorting_asc')
      .removeClass('sorting_asc sorting_desc');
    updateSortOptions();
  }

})(jQuery);
/**
 * Purpose
 * ================================
 * Add a toggle button (wrapped in <td>) to each <tr> in <tbody> so that it can hide the table cells <td> starting from the 4th index (use in Mobile only)
 * Note that the button will be hidden in Desktop
 *
 *
 * Usage
 * ================================
 * Generic Initialization
 *   1. In HTML, Add "js-tb-cell-detail-toggle" to the top level table (it must be a "no group" table, i.e. no nested tables)
 *   2. Call it before table.init() where DataTable is initiated
 *
 * OR
 *
 * Custom Initialization
 *   1. Make sure your table HTML does not has "js-tb-cell-detail-toggle" class
 *   2. In your JS, call: rm.tbMobileCellDetailToggle.init($table);
 *
 *
 * Assumption/Requirements
 * ================================
 */

rm.tbMobileCellDetailToggle = rm.tbMobileCellDetailToggle || (function($){

  'use strict';

  /* -- VARIABLE -- */
  var $btnTpl =  $('<td class="td-detail__toggle td-detail__toggle--mod" tabindex="0" role="button" aria-label="Show detail" aria-expanded="false"></td>'),
      $thInsert = $('<th class="table__colnosort hidden"></th>'),
      slr = {
        tb: '.js-tb-cell-detail-toggle',
        btn: '.td-detail__toggle',
      },
      cls = {
        tb: slr.tb.replace('.', ''),
        tdDetailShown: 'td-detail--shown',   // for parent <tr>
        tdRemovePadding: 'td-remove-padding'
      };


    /* -- PRIMARY LOGIC -- */
    return {
        init: init,
        reset: reset
    };


    /* -- METHODS -- */
    function init ($table) {
        var $tbs = $table ? $table.addClass(cls.tb) : $(slr.tb);

        if (!$tbs.length) return;
        var $id = $tbs.attr('id');
        var mbl = mobileAndTabletcheck(window.navigator.userAgent||window.navigator.vendor||window.opera);
        if($id === 'action-access-history-table' && mbl === true ){
          accessHistoryInit($tbs);
        } else if($id !== 'action-access-history-table'){
           restInit($tbs); 
        }
    }

    function mobileAndTabletcheck(a) {
	    if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))){
          return true;
        } 
        else{
            return false;
        }
    }

    function accessHistoryInit($tbs){
        $tbs.each(  function hp_setup (idx, tb) {
            var $tb = $tbs.eq(idx);
            $tb.find('tbody tr').each(function(){
                var $this = $(this);
                if($this.children('td:last').text() === ''){
                    $this.addClass(cls.tdDetailShown);
                }
                else{
                    if($this.children('td:last').find('span').length === 0){
                        $this.children('td:last').addClass('td-detail__toggle td-detail__toggle--mod '+cls.tdRemovePadding);
                        $this.children('td:last').html('<span class="hidden">'+$this.children('td:last').html()+'</span>');
                    }
                }
            });
            $tb.on('click', slr.btn, accessHistoryInit_CB);
        });
    }

   function accessHistoryInit_CB(e){
        e.stopImmediatePropagation();
        if(e.target.nodeName === 'TD'){
            var $elm = $(this).parents('tr').children('td:last');
            if( $elm.find('.hidden').length > 0){
                $elm.find('.hidden').removeClass('hidden').addClass('access-histror-td-show');
            }
            else{
                $elm.find('.access-histror-td-show').removeClass('access-histror-td-show').addClass('hidden');
            }
            $(this).parents('tr').toggleClass(cls.tdDetailShown);
        }
    }

    function restInit($tbs){
        $tbs.each(  function hp_setup (idx, tb) {
            var $tb = $tbs.eq(idx);
            $tb.find('thead tr').append($thInsert.clone());
            $tb.find('tbody tr').append($btnTpl.clone());
            /*show 4 columns if there is no data in 5th column and hide the show detail button*/
            if($tb.find('tbody tr:first-child').children('td').length === 5){
                $tb.find('tbody tr').each(function(){
                    var $this = $(this);
                    if($this.children('td:last').text() === ''){
                        $this.children().last().css('display','none');
                        $this.addClass(cls.tdDetailShown);
                    }
                });
            }
            $tb.on('click keydown', slr.btn, cb_onClick);
        });
    }

    function reset () {
      $(slr.tb).find('tr').removeClass(cls.tdDetailShown);
    }


    /* -- HELPER/CALLBACK FN -- */
    function cb_onClick (e) {
        /* If Data getting populated via ajax request. Have to initiate rm.tbMobileCellDetailToggle again so added below line to invoke click   */
        var keyCode = e.which || e.keyCode;
        if('click' === e.type || 32 === keyCode || 13 === keyCode) {
          e.stopImmediatePropagation();
          if(keyCode) e.preventDefault();
          
          $(this).parents('tr').toggleClass(cls.tdDetailShown);
          
          var shown = $(this).parents('tr').hasClass(cls.tdDetailShown);
          $(this).attr('aria-expanded', shown).attr('aria-label', (shown) ? 'Hide detail' : 'Show detail');
        }
    }

})(jQuery);
/**
 * ----------------------------------------------------------------
 * Purpose
 * ----------------------------------------------------------------
 * To filter the table rows by the value in search input box when the user is typing the string
 * Return the filtered table rows and the number of results
 *
 * ----------------------------------------------------------------
 * Dependency
 * ----------------------------------------------------------------
 * Datatable
 *
 * ----------------------------------------------------------------
 * APIs
 * ----------------------------------------------------------------
 * - Add .js-tb-search to the <table>
 * - Add .js-tb-search-input to the textfield
 * - Add table column index in "data-search-col" attr at .js-tb-search-input textfield
 *
 * Please note that the column headers have been injected into <td> for mobile. As a result, please use datatable's "data-search" attribute for searching
 */
 rm.tbSearch = rm.tbSearch || (function($){

   'use strict';

   /* -- VARIABLE -- */
   var slr = {
      tb: '.js-tb-search',
      input: '.js-tb-search-input',
      num: '.js-tb-search-num'
    },
    cls = {
      tb: slr.tb.replace('.', '')
    };

    /* -- PRIMARY LOGIC -- */
    return {
      init: init,
      getNumRecord: getNumRecord
    };

  /* -- METHODS -- */
  function init ($table) {
    var $tbs = $table ? $table.addClass(cls.tb) : $(slr.tb);

    if (!$tbs.length) return;
    var dtTb = $(slr.tb).DataTable(),
        searchCol = $(slr.input).attr('data-search-col');

    $(slr.num).html(getNumRecord($tbs));

    $(slr.input).on('keyup', function () {
      dtTb.columns(searchCol)
        .search($(slr.input).val())
        .draw();

      $(slr.num).html(getNumRecord($tbs));
    });
  }

  function getNumRecord($table) {
    var dtTb = $table.DataTable();
    return dtTb.page.info().recordsDisplay;
  }

 })(jQuery);
rm.mobileVerification = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */

  /*-- !important --*/
    // in this file many actions need ajax calls
    // we can not access any ajax call from DEV environment,
    //so we will call actions on button click, which are supposed to be on button click but after ajax success
    //where ever we are testing for FED, we will check this VARIABLE
    // this variable should be 'false' after FED testing
    var isFedEnvironment = false;
  /*-- !important --*/

  var elemSelector = {
        formVerificationEmail:  '#form-notification-verifications-email',
        formVerificationMobile: '#form-notification-verifications-mobile',
        fieldEmail:             '.mobile-verification #emailAddress',
        fieldMobile:            '.mobile-verification #mobileNumber',
        sectionEmailBtns:       '.mobile-verification .verification-email-buttons',
        sectionMobileBtns:      '.mobile-verification .verification-mobile-buttons',
        submitEmail:            '.mobile-verification #submit-email',
        cancelEmail:            '.mobile-verification #cancel-email',
        removeEmail:            '.mobile-verification #remove-email',
        submitMobile:           '.mobile-verification #submit-mobile',
        cancelMobile:           '.mobile-verification #cancel-mobile',
        removeMobile:           '.mobile-verification #remove-mobile',
        submitRemoveEmail:      '.mobile-verification #submit-remove-email',
        submitRemoveMobile:     '.mobile-verification #submit-remove-mobile',
        badgeVerifyEmail:       '.mobile-verification .verification-email-badge-verify',
        badgeRequiredEmail:     '.mobile-verification .verification-email-badge-pending',
        badgeSuccessEmail:      '.mobile-verification .verification-email-badge-success',
        badgeVerifyMobile:      '.mobile-verification .verification-mobile-badge-verify',
        badgeRequiredMobile:    '.mobile-verification .verification-mobile-badge-pending',
        badgeSuccessMobile:     '.mobile-verification .verification-mobile-badge-success',
        btnVerifyEmail :        '.mobile-verification .js-btn-verify-code-email',
        btnVerifyMobile :       '.mobile-verification .js-btn-verify-code-mobile',
        extendedMessageEmail:   '#modal-anchor-email .extended-message',
        extendedMessageMobile:   '#modal-anchor-mobile .extended-message',
        fieldVerificationCodeEmail: '.mobile-verification .js-field-verification-code-email',
        fieldVerificationCodeMobile: '.mobile-verification .js-field-verification-code-mobile',
        sectionCurrentEmail : '.mobile-verification .section-current-email',
        currentEmail : '#current-email',
        sectionCurrentMobile : '.mobile-verification .section-current-mobile',
        currentMobile : '#current-mobile',
        jsBtnCancel : '#formNotificationSettings .js-btn-cancel',
        jsBtnSaveNotifications : '.js-btn-save-notifications',
        radioSettings : '.radio-settings',
        radioSettingItem : '.radio-settings__item input[type="radio"]',
        modalNotificationUpdated: '#modalNotificationUpdated'
      };

  var initialize = function() {
    //console.log('%c init: mobile-verification.js', 'background: #222; color: #bada55');
    //Only call this function if this isFED testing
    if(isFedEnvironment===true){
      checkFormsStatus();
    }
    bindEvents();
    //Testing to change Radio Button
    //actionSetRadioSettingOnPageLoad('#radio-first-time-email');
  };

  var bindEvents = function(){

    //When Email/Mobile textbox is focused
    bindFocusEvents();

    //When Cancel button under Email/Mobile textbox is clicked
    bindCancelEvents();

    //Enable user to update the mobile/email after he already added
    bindKeyPressEvents();

    //When Submit button in Email/Mobile Model is clicked
    bindVerifyEvents();

    //When Remove link above Mobile/Email textbox is clicked
    bindRemoveEvents();

    //OnSuccess event for validation
    bindValidationEvents();

    //This will revert all new settings selected, which are not saved yet, to default
    bindCancelSettings();

    //This will enable Save Cancel buttons, if any radio setting is changed
    bindRadioSettingsChange();
  };

  var checkFormsStatus = function(){
    checkEmailFormStatus();
    checkMobileFormStatus();
  };

  var checkEmailFormStatus = function(){
    //Email form
    var statusEmailForm = $(elemSelector.formVerificationEmail).attr('data-status');
    switch (statusEmailForm) {
      case 'verification-pending':
          actionShowBadgeVerificationEmail();
          break;
      case 'verification-required':
          actionShowBadgeRequiredEmail();
          break;
      case 'verified':
          actionShowBadgeSuccessEmail();
          break;
    }
  };

  var checkMobileFormStatus = function(){
    //mobile form
    var statusMobileForm = $(elemSelector.formVerificationMobile).attr('data-status');
    switch (statusMobileForm) {
      case 'verification-pending':
          actionShowBadgeVerificationMobile();
          break;
      case 'verification-required':
          actionShowBadgeRequiredMobile();
          break;
      case 'verified':
          actionShowBadgeSuccessMobile();
          break;
    }
  };

  var bindVerifyEvents = function(){
    //Email : When you access new code and then verify it
    $(elemSelector.btnVerifyEmail).bind('click',function(e) {
      //Only call this function if this isFED testing
      if(isFedEnvironment===true){
        // Clear the verification input
        $('.js-field-verification-code').val('');
        rm.mobileVerification.actionEmailVerify();
      }
      e.preventDefault();
    });

    //Mobile : When you access new code and then verify it
    $(elemSelector.btnVerifyMobile).bind('click',function(e) {
      //Only call this function if this isFED testing
      if(isFedEnvironment===true){
        // Clear the verification input
        $('.js-field-verification-code').val('');
        rm.mobileVerification.actionMobileVerify();
      }
      e.preventDefault();
    });
  };

  var bindRemoveEvents = function(){
    //When you remove the email address
    $(elemSelector.submitRemoveEmail).bind('click',function(e) {
      //Only call this function if this isFED testing
      if(isFedEnvironment===true){
        rm.mobileVerification.actionRemoveEmail();
      }
      e.preventDefault();
    });

    //When you remove the mobile
    $(elemSelector.submitRemoveMobile).bind('click',function(e) {
      //Only call this function if this isFED testing
      if(isFedEnvironment===true){
        rm.mobileVerification.actionRemoveMobile();
      }
      e.preventDefault();
    });
  };

  var bindValidationEvents = function(){
    var $formEmail = $('#form-notification-verifications-email'),
      $formMobile = $('#form-notification-verifications-mobile');

      if ($formEmail.length) {
        $formEmail.on('success.form.fv', function () {
          //Only call this function if this isFED testing
          if(isFedEnvironment===true){
            rm.mobileVerification.actionEmailSubmit();
          }
          return false;
        });
      }

      if ($formMobile.length) {
        $formMobile.on('success.form.fv', function () {
          //Only call this function if this isFED testing
          if(isFedEnvironment===true){
            rm.mobileVerification.actionMobileSubmit();
          }
          return false;
        });
      }
  };

  var bindKeyPressEvents = function(){

    //Email
    //when ever key is pressed, we will check either the new email is already verified or not
    $(elemSelector.fieldEmail).keyup(function(e) {
        if(e.which!==9 && e.which!==13){
          checkEmailStatus();
        }
    });

    //Mobile
    //when ever key is pressed, we will check either the new mobile is already verified or not
    $(elemSelector.fieldMobile).keyup(function(e) {
      if(e.which!==9 && e.which!==13){
        checkMobileStatus();
      }
    });
  };

  var bindFocusEvents=function(){
    //Email

    //On Focus
    $(elemSelector.fieldEmail).focus(function(){
      actionFocusEmailField();
    });

    //On blur
    $(elemSelector.fieldEmail).blur(function(){
      var isDirty = $(elemSelector.formVerificationEmail).dirtyForms('isDirty');
      if (!isDirty) {
        //actionCancelEmail();
      }
    });

    //Mobile

    //On Focus
    $(elemSelector.fieldMobile).focus(function(){
      actionFocusMobileField();
    });

    //On blur
    $(elemSelector.fieldMobile).blur(function(){
      var isDirty = $(elemSelector.formVerificationMobile).dirtyForms('isDirty');
      if (!isDirty) {
        //actionCancelMobile();
      }
    });

  };

  var bindCancelSettings = function(){
    $(elemSelector.jsBtnCancel).bind('click',function(){
      actionResetRadioSettings();
      var form = $(this.form);
      form.find('.js-stay-dirty').val('false');
      form.dirtyForms('setClean');
      // actionEnableSettingButtons('disable');
    });
  };

  var bindRadioSettingsChange = function(){
    $(elemSelector.radioSettingItem).each(function(){
      $(this).change(function(){
        actionEnableSettingButtons('enable');
      });
    });
  };

  /*Actions*/
  var actionChangeEmailFormStatus = function(status){
    var $form = $(elemSelector.formVerificationEmail);
    $form.attr('data-status',status);
    checkEmailFormStatus();
  };

  var actionChangeMobileFormStatus = function(status){
    var $form = $(elemSelector.formVerificationMobile);
    $form.attr('data-status',status);
    checkMobileFormStatus();
  };

  var actionResetRadioSettings = function(){
    $(elemSelector.radioSettings).each(function(){
        var $radioSettings = $(this);
        var defaultSelectedRadioID = $radioSettings.attr('data-default-value');

        if(defaultSelectedRadioID===undefined){
          //if there is no default value, then always select the first one
          var $defaultSettingItem = $radioSettings.find('.notification-option-default');
          var $radioDefault = $defaultSettingItem.find('input[type="radio"]');
          $radioDefault.prop('checked',true);
        }
        else{
          actionSetRadioSettingOnPageLoad(defaultSelectedRadioID);
        }
    });
    actionCancelEmail();
    actionCancelMobile();
  };

  var actionDisableEmailForm = function(flag){
      rm.disabledBlock.enableDisableBlock($(elemSelector.formVerificationEmail),flag);
  };

  var actionDisableMobileForm = function(flag){
      rm.disabledBlock.enableDisableBlock($(elemSelector.formVerificationMobile),flag);
  };

  var actionFocusEmailField = function(){
    if($(elemSelector.fieldEmail).hasClass('focus-event-disabled')===false){
      $(elemSelector.sectionEmailBtns).removeClass('hidden');
    }
  };

  var actionFocusMobileField = function(){
    if($(elemSelector.fieldMobile).hasClass('focus-event-disabled')===false){
      $(elemSelector.sectionMobileBtns).removeClass('hidden');
    }
  };

  var actionSetEmailFieldValue = function(strEmail){
      $(elemSelector.fieldEmail).val(strEmail).attr('data-email',strEmail);
  };

  var actionSetMobileFieldValue = function(strMobile){
      $(elemSelector.fieldMobile).val(strMobile).attr('data-mobile',strMobile);
  };

  var checkEmailStatus= function(){
    var statusEmailForm = $(elemSelector.formVerificationEmail).attr('data-status');

    //Only if email already verified or pending
    if(statusEmailForm!=='initialized'){
       var typedEmail = $(elemSelector.fieldEmail).val();
       var existingEmail =  $(elemSelector.fieldEmail).attr('data-email');
       var currentEmail = $(elemSelector.currentEmail).text();

       //if currentEmail exists, it means 1 email is already verified
       if(currentEmail!==''){
         actionShowBadgeCurrentEmail(true);
       }

       //if new email is already verified or pending
       if(typedEmail===existingEmail){
         switch (statusEmailForm) {
             case 'verification-pending':
                 actionShowBadgeVerificationEmail();
                 break;
             case 'verification-required':
                 actionShowBadgeRequiredEmail();
                 break;
             case 'verified':
                 actionShowBadgeSuccessEmail();
                 actionShowBadgeCurrentEmail(false);
                 break;
           }
       }
       else if(typedEmail===currentEmail && currentEmail!==''){
         //case when you have already verfied email & another email is pending/required
         actionShowBadgeSuccessEmail();
         actionShowBadgeCurrentEmail(false);
       }
       else{//if email is new
         //show when email is verified and current email is not equal to typed email
         if(statusEmailForm==='verified'){
           actionShowBadgeCurrentEmail(true);
         }

        actionShowButtonsEmail();
       }
    }
  };

  var checkMobileStatus= function(){
     var statusMobileForm = $(elemSelector.formVerificationMobile).attr('data-status');

     //Only if mobile already verified or pending
     if(statusMobileForm!=='initialized'){
        var typedMobile = $(elemSelector.fieldMobile).val();
        var existingMobile =  $(elemSelector.fieldMobile).attr('data-mobile');
        var currentMobile = $(elemSelector.currentMobile).text();

        //if currentMobile exists, it means 1 mobile is already verified
        if(currentMobile!==''){
          actionShowBadgeCurrentMobile(true);
        }

        //if new mobile is already verified or pending
        if(typedMobile===existingMobile){
            switch (statusMobileForm) {
              case 'verification-pending':
                  actionShowBadgeVerificationMobile();
                  break;
              case 'verification-required':
                  actionShowBadgeRequiredMobile();
                  break;
              case 'verified':
                  actionShowBadgeSuccessMobile();
                  actionShowBadgeCurrentMobile(false);
                  break;
            }
        }
        else if(typedMobile===currentMobile && currentMobile!==''){
          //case when you have already verfied mobile & another mobile is pending/required
          actionShowBadgeSuccessMobile();
          actionShowBadgeCurrentMobile(false);
        }
        else{//if mobile is new
          //show when mobile is verified and current mobile is not equal to typed mobile
          if(statusMobileForm==='verified'){
            actionShowBadgeCurrentMobile(true);
          }
          actionShowButtonsMobile();
        }
     }
  };

  var bindCancelEvents=function(){
    //Email
    $(elemSelector.cancelEmail).bind('click',function(e){
      actionCancelEmail();
      e.preventDefault();
    });

    //Mobile
    $(elemSelector.cancelMobile).bind('click',function(e){
      actionCancelMobile();
      e.preventDefault();
    });
  };

  var actionShowBadgeVerificationEmail = function(){
    $(elemSelector.badgeVerifyEmail).removeClass('hidden');
    $(elemSelector.fieldEmail).addClass('focus-event-disabled');
    $(elemSelector.sectionEmailBtns).addClass('hidden');
    $(elemSelector.removeEmail).removeClass('hidden');

    //hide other badges
    $(elemSelector.badgeRequiredEmail).addClass('hidden');
    $(elemSelector.badgeSuccessEmail).addClass('hidden');
  };

  var actionShowBadgeRequiredEmail = function(){
    $(elemSelector.badgeRequiredEmail).addClass('hidden');
    $(elemSelector.fieldEmail).addClass('focus-event-disabled');
    $(elemSelector.sectionEmailBtns).addClass('hidden');
    $(elemSelector.removeEmail).removeClass('hidden');

    //hide other badges
    $(elemSelector.badgeVerifyEmail).removeClass('hidden');
    $(elemSelector.badgeSuccessEmail).addClass('hidden');
  };

  var actionShowBadgeSuccessEmail = function(){
    $(elemSelector.badgeSuccessEmail).removeClass('hidden');
    $(elemSelector.fieldEmail).addClass('focus-event-disabled');
    $(elemSelector.sectionEmailBtns).addClass('hidden');
    $(elemSelector.removeEmail).removeClass('hidden');

    //hide other badges
    $(elemSelector.badgeVerifyEmail).addClass('hidden');
    $(elemSelector.badgeRequiredEmail).addClass('hidden');
  };

  var actionShowBadgeVerificationMobile = function(){
    $(elemSelector.badgeVerifyMobile).removeClass('hidden');
    $(elemSelector.fieldMobile).addClass('focus-event-disabled');
    $(elemSelector.sectionMobileBtns).addClass('hidden');
    $(elemSelector.removeMobile).removeClass('hidden');

    //hide other badges
    $(elemSelector.badgeRequiredMobile).addClass('hidden');
    $(elemSelector.badgeSuccessMobile).addClass('hidden');
  };

  var actionShowBadgeRequiredMobile = function(){
    $(elemSelector.badgeRequiredMobile).addClass('hidden');
    $(elemSelector.fieldMobile).addClass('focus-event-disabled');
    $(elemSelector.sectionMobileBtns).addClass('hidden');
    $(elemSelector.removeMobile).removeClass('hidden');

    //hide other badges
    $(elemSelector.badgeVerifyMobile).removeClass('hidden');
    $(elemSelector.badgeSuccessMobile).addClass('hidden');
  };

  var actionShowBadgeSuccessMobile = function(){
    $(elemSelector.badgeSuccessMobile).removeClass('hidden');
    $(elemSelector.fieldMobile).addClass('focus-event-disabled');
    $(elemSelector.sectionMobileBtns).addClass('hidden');
    $(elemSelector.removeMobile).removeClass('hidden');

    //hide other badges
    $(elemSelector.badgeVerifyMobile).addClass('hidden');
    $(elemSelector.badgeRequiredMobile).addClass('hidden');
  };

  var actionShowButtonsEmail = function(){
    $(elemSelector.badgeVerifyEmail).addClass('hidden');
    $(elemSelector.badgeSuccessEmail).addClass('hidden');
    $(elemSelector.badgeRequiredEmail).addClass('hidden');
    $(elemSelector.fieldEmail).removeClass('focus-event-disabled');
    $(elemSelector.sectionEmailBtns).removeClass('hidden');
    $(elemSelector.removeEmail).addClass('hidden');
  };

  var actionShowButtonsMobile = function(){
    $(elemSelector.badgeVerifyMobile).addClass('hidden');
    $(elemSelector.badgeSuccessMobile).addClass('hidden');
    $(elemSelector.badgeRequiredMobile).addClass('hidden');
    $(elemSelector.fieldMobile).removeClass('focus-event-disabled');
    $(elemSelector.sectionMobileBtns).removeClass('hidden');
    $(elemSelector.removeMobile).addClass('hidden');
  };

  var actionShowBadgeCurrentEmail = function(flag){
    if(flag===true){
      $(elemSelector.sectionCurrentEmail).removeClass('hidden');
    }
    else{
      $(elemSelector.sectionCurrentEmail).addClass('hidden');
    }
  };

  var actionShowBadgeCurrentMobile = function(flag){
    if(flag===true){
      $(elemSelector.sectionCurrentMobile).removeClass('hidden');
    }
    else{
      $(elemSelector.sectionCurrentMobile).addClass('hidden');
    }
  };

  var actionCancelEmail = function(){
    $(elemSelector.sectionEmailBtns).addClass('hidden');
    resetValidation(elemSelector.fieldEmail);
    //actionShowBadgeCurrentEmail(false);
    checkEmailFormStatus();
    //Clean Dirty Forms
    $(elemSelector.formVerificationEmail).dirtyForms('setClean');
  };

  var actionCancelMobile = function(){
    $(elemSelector.sectionMobileBtns).addClass('hidden');
    resetValidation(elemSelector.fieldMobile);
    //actionShowBadgeCurrentMobile(false);
    checkMobileFormStatus();
    //Clean Dirty Forms
    $(elemSelector.formVerificationMobile).dirtyForms('setClean');
  };

  var actionEmailSubmit = function(){
    //When email is added
    $(elemSelector.badgeVerifyEmail).removeClass('hidden');
    $(elemSelector.removeEmail).removeClass('hidden');
    $(elemSelector.sectionEmailBtns).addClass('hidden');
    $(elemSelector.fieldEmail)
      .addClass('focus-event-disabled')
      .attr('data-email',$(elemSelector.fieldEmail).val() );

    $(elemSelector.formVerificationEmail).attr('data-status','verification-pending');
    actionDisableMobileForm('enable');
  };

  var actionMobileSubmit = function(){
    //When mobile is added
    $(elemSelector.badgeVerifyMobile).removeClass('hidden');
    $(elemSelector.removeMobile).removeClass('hidden');
    $(elemSelector.sectionMobileBtns).addClass('hidden');
    $(elemSelector.fieldMobile)
      .addClass('focus-event-disabled')
      .attr('data-mobile',$(elemSelector.fieldMobile).val() );

    $(elemSelector.formVerificationMobile).attr('data-status','verification-pending');
    actionDisableEmailForm('enable');
  };

  var actionEmailVerify = function(){
    $(elemSelector.badgeSuccessEmail).removeClass('hidden');
    $(elemSelector.badgeVerifyEmail).addClass('hidden');
    actionEnableDisableRadios('email','enable');
    $(elemSelector.extendedMessageEmail).removeClass('hidden');
    $(elemSelector.fieldEmail).attr('data-email',$(elemSelector.fieldEmail).val());
    $(elemSelector.formVerificationEmail).attr('data-status','verified');
    actionDisableMobileForm('enable');
  };

  var actionMobileVerify = function(){
    $(elemSelector.badgeSuccessMobile).removeClass('hidden');
    $(elemSelector.badgeVerifyMobile).addClass('hidden');
    actionEnableDisableRadios('sms','enable');
    $(elemSelector.extendedMessageMobile).removeClass('hidden');
    $(elemSelector.fieldMobile).attr('data-mobile',$(elemSelector.fieldMobile).val());
    $(elemSelector.formVerificationMobile).attr('data-status','verified');
    actionDisableEmailForm('enable');
  };

  var actionRemoveEmail = function(){
    $(elemSelector.badgeVerifyEmail).addClass('hidden');
    $(elemSelector.removeEmail).addClass('hidden');
    $(elemSelector.badgeSuccessEmail).addClass('hidden');
    $(elemSelector.badgeRequiredEmail).addClass('hidden');
    $(elemSelector.fieldEmail)
      .removeClass('focus-event-disabled')
      .val('')
      .attr('data-email','');

    resetValidation(elemSelector.fieldEmail);
    actionEnableDisableRadios('email','disable');
    setNotificationOptionToDefault('email');
    $(elemSelector.extendedMessageEmail).addClass('hidden');
    $(elemSelector.formVerificationEmail).attr('data-status','initialized');
  };

  var actionRemoveMobile = function(){
    $(elemSelector.badgeVerifyMobile).addClass('hidden');
    $(elemSelector.removeMobile).addClass('hidden');
    $(elemSelector.badgeSuccessMobile).addClass('hidden');
    $(elemSelector.badgeRequiredMobile).addClass('hidden');
    $(elemSelector.fieldMobile)
      .removeClass('focus-event-disabled')
      .val('')
      .attr('data-mobile','');

    resetValidation(elemSelector.fieldMobile);
    actionEnableDisableRadios('sms','disable');
    setNotificationOptionToDefault('sms');
    $(elemSelector.extendedMessageMobile).addClass('hidden');
    $(elemSelector.formVerificationMobile).attr('data-status','initialized');
  };
  //enable/disable the specific Radios (email or mobile)
  var actionEnableDisableRadios = function(type,action){
    $('.radio-settings__item.notification-option-'+ type ).each(function(){

    });
  };

  //When Email or Mobile is removed, the radios are selected to default
  var setNotificationOptionToDefault = function(type){
    $('.radio-settings__item.notification-option-'+ type).each(function(){
        var $oldSelectedItem = $(this);
        var $oldSelectedRadio = $oldSelectedItem.find('input[type="radio"]');

        if($oldSelectedRadio.is(':checked')){
          var $defaultSettingItem = $oldSelectedItem.parent().find('.notification-option-default');
          var $radioDefault = $defaultSettingItem.find('input[type="radio"]');
          $radioDefault.prop('checked',true);
        }
    });
  };

  //This function will select radio button setting and mark its parent with default value;
  var actionSetRadioSettingOnPageLoad = function(radio){
    var $radio = $(radio);
    $radio.prop('checked',true);
    $radio.closest(elemSelector.radioSettings).attr('data-default-value', radio);
  };

  var actionSaveRadioSelectionsAsDeafult = function(){
    $(elemSelector.radioSettings).each(function(){
      var $radioSetting = $(this);
      var selectedRadioID = $radioSetting.find('input[type="radio"]:checked').attr('id');
      $radioSetting.attr('data-default-value', '#'+ selectedRadioID);
    });
  };

  var resetValidation = function(element){
    var $element = $(element);
    var defaultEmail = $element.attr('data-email');
    var defaultMobile = $element.attr('data-mobile');
    var elementID = $element.attr('id');

    //In case there is not default value
    $element.val('');

    if(elementID ==='emailAddress' && defaultEmail!==undefined){
      $element.val(defaultEmail);
    }
    if(elementID ==='mobileNumber' && defaultMobile!==undefined){
      $element.val(defaultMobile);
    }

    $element.closest('form').data('formValidation').resetForm();
  };

  var actionEnableSettingButtons = function(flag){

  };

  var actionShowModalOnSave = function(){
      $(elemSelector.modalNotificationUpdated).modal('show');
  };

  return {
    init: initialize,
    actionMobileSubmit : actionMobileSubmit,
    actionEmailSubmit : actionEmailSubmit,
    actionEmailVerify : actionEmailVerify,
    actionMobileVerify : actionMobileVerify,
    actionRemoveEmail : actionRemoveEmail,
    actionRemoveMobile : actionRemoveMobile,
    actionCancelEmail : actionCancelEmail,
    actionCancelMobile : actionCancelMobile,
    actionShowBadgeVerificationEmail : actionShowBadgeVerificationEmail,
    actionShowBadgeSuccessEmail : actionShowBadgeSuccessEmail,
    actionShowBadgeVerificationMobile : actionShowBadgeVerificationMobile,
    actionShowBadgeSuccessMobile : actionShowBadgeSuccessMobile,
    actionShowButtonsEmail : actionShowButtonsEmail,
    actionShowButtonsMobile : actionShowButtonsMobile,
    actionShowBadgeCurrentEmail : actionShowBadgeCurrentEmail,
    actionShowBadgeCurrentMobile : actionShowBadgeCurrentMobile,
    actionSetRadioSettingOnPageLoad : actionSetRadioSettingOnPageLoad,
    actionResetRadioSettings : actionResetRadioSettings,
    actionEnableSettingButtons : actionEnableSettingButtons,
    actionDisableEmailForm : actionDisableEmailForm,
    actionDisableMobileForm : actionDisableMobileForm,
    actionChangeEmailFormStatus : actionChangeEmailFormStatus,
    actionChangeMobileFormStatus : actionChangeMobileFormStatus,
    actionEnableDisableRadios : actionEnableDisableRadios,
    actionSetEmailFieldValue : actionSetEmailFieldValue,
    actionSetMobileFieldValue : actionSetMobileFieldValue,
    actionShowModalOnSave : actionShowModalOnSave,
    actionSaveRadioSelectionsAsDeafult : actionSaveRadioSelectionsAsDeafult
  };
}());
rm.scroll = (function () {

  'use strict';

  var $html = rm.globals.DOM.html;

  var lockScroll = function () {
    $html.addClass('no-scroll');
  };

  var unlockScroll = function () {
    $html.removeClass('no-scroll');
  };

  // public api
  return {
    lock: lockScroll,
    unlock: unlockScroll
  };

})();
rm.showhideform = (function () {
  'use strict';

  // Cache selectors
  var $showForm = $('.js-show-form'),
      $hideForm = $('.js-hide-form'),
      $showHideFrom = $('.js-showhideform'),
      $form = $showHideFrom.find('form');

  var initialize = function () {
    // Show form
    if ($showForm.length) {
      $showForm.on('click', function () {
        //Show Form
        $showHideFrom.removeClass('hidden');

        // Show all the hidden form fields to return to default state
        $showHideFrom.find('.form-group.hidden').removeClass('hidden');
        $(this).attr('disabled', true).addClass('hidden');
        rm.formTools.disableButtons();
      });
    }

    // Hide form
    if ($hideForm.length) {
      $hideForm.on('click', function () {
        $showHideFrom.find('select').each(function () {
          rm.dropdown.resetSelection($(this));
        });
        
        $showHideFrom.addClass('hidden');
        $showForm.attr('disabled', false).removeClass('hidden');
        rm.formTools.enableButtons();
      });
    }

    // Reset/Clear the input and existing validation when select option is changed
    $form.find('select[data-resetform-onchange]').change(function () {
      $form.data('formValidation').resetForm();
      $form[0].reset();
    });
  };

  // public api
  return {
    init: initialize
  };

})();
/* globals Unison */
rm.achievementdiary = (function () {

  'use strict';

  var slr = {
    thDescription:     '.th--description',
    optDesc:           '.optionaltext',
    evtDisabled:       'evtToolBarDisabled',
    achFields:         '.js-achievement-fields',
    achTableheader:    '.js-tb--header'
  },
  txt = {
    thDescription:    'Description',
    opt:              ' (optional)' /* need to a space */
  };
  var $body = rm.globals.DOM.body;
  var form1;
  var pageShouldBeDisabled;
  var addCounter = 1;

  var initialize = function (){
    var $form = $('#personal-achievement');
    if($form.length) {

      bindEvents();
      getForms();
      bindPageDisableForToolbar();

      // Bind the cancel button;
      var cancelButton = $('.js-cancel-button');
      cancelButton.on('click', function() {
        // Enable the buttons and toolbars again.
        $('.js-add-achievement-btn').prop('disabled', false);

        enableToolbar();
        revertForms();
        toggleMainTbState(false);

        //Reset Dirty Forms
        $form.find('.staydirty').val('false');
        $form.dirtyForms('setClean');

        // Hide Controls
        $('.js-achievement-controls').addClass('hidden');

        $body.on('click','.js-achievement-fields-existing', function(e) {
          e.preventDefault();

          //if tr is disbaled, we do not process any actions
          if($(this).hasClass('disabled-tr')){
            return;
          }

          makeEditable($(this));
          e.stopImmediatePropagation();
        });
      });

      // Bind the save button;
      var saveAccessButton = $('.js-btn-save');
      $(saveAccessButton).on('click', function(e) {
        e.preventDefault();
        // Enable the buttons and toolbars again.
        $('.js-add-achievement-btn').prop('disabled', false);

      });

      if ($form.length) {
        rm.toolbar.cache.toolbar.on('toolbar.toggle', function (e, isToolbarOn) {
          // Toogle the tbfm module from receiving any event
          $form[isToolbarOn ? 'addClass' : 'removeClass'](slr.evtDisabled);

        });
      }

    } else {
      return false;
    }
  };

  var bindExistingAchievementsEditable = function() {
    $body.on('click keypress','.js-achievement-fields-existing', function(e) {
      e.preventDefault();
      if (e.which === 13 || e.type === 'click') {

        //if tr is disbaled, we do not process any actions
        if($(this).hasClass('disabled-tr')){
          return;
        }

        makeEditable($(this));
        e.stopImmediatePropagation();
      }
    });
  };

  var bindPageDisableForToolbar = function() {
    var toolbarButtons = $('.toolbar-nav').find('button');

    $('.toolbar-nav').find('button').on('click', function() {
      //if (!$(this).hasClass('disablepage')) {
      if($('.toolbar-nav').find('.btn--active').length>0){
        $(this).addClass('disablepage');
        disablePage();
      } else {
        $(this).removeClass('disablepage');
        enablePage();

      }

    });
  };

  var hideToolbar = function() {
    var toolbarButtons = $('.toolbar-nav').find('button');

    toolbarButtons.prop('disabled', true);
    toolbarButtons.addClass('disabled');
  };

  var enableToolbar = function() {
    var toolbarButtons = $('.toolbar-nav').find('button');

    toolbarButtons.prop('disabled', false);
    toolbarButtons.removeClass('disabled');
  };

  var disablePage = function() {
    //disbale blocks for tables
    rm.disabledBlock.enableDisableBlock($('#personal-achievement'), 'disable');
    // disable all buttons
    $('.js-add-achievement-btn').prop('disabled', true);
  };

  var enablePage = function() {
    if(pageShouldBeDisabled === true) {
      return false;
    } else {
      //enable blocks for tables
      rm.disabledBlock.enableDisableBlock($('#personal-achievement'), 'enable');
      // enable all buttons
      $('.js-add-achievement-btn').prop('disabled', false);
    }
  };

  var toggleButton = function(button) {
      if(button) {
        if($(button).prop('disabled') === 'true') {
          $(button).prop('disabled', false);
        } else {
          $(button).prop('disabled', true);
        }
      }
  };

  var bindEvents = function() {
    // Adding achievements.
    $('.js-add-achievement-btn').on('click', function() {
      addAchievements();
      hideToolbar();
      toggleButton('.js-add-medication-btn');
      toggleMainTbState(true);
    });

    // Allow editing of existing achievements.
    $body.on('click keypress','.js-achievement-fields-existing', function(e) {
      e.preventDefault();
      if (e.which === 13 || e.type === 'click') {
        //if tr is disbaled, we do not process any actions
        if($(this).hasClass('disabled-tr')){
          return;
        }

        makeEditable($(this));
        e.stopImmediatePropagation();
      }
    });
  };

  var getForms = function() {
    form1 = $('#personal-achievement').find('.js-data-container').contents().clone();
  };

  var revertForms = function(form) {
    var originalForm = form1.clone();

    $('#personal-achievement').find('.js-data-container').empty();
    $('#personal-achievement').find('.js-data-container').append(originalForm);
  };

  var enableOrDisableAchievementSubmitButton = function (form){
    if($('tr.js-achievement-fields').not('#achievement-template').find('div.form-group.has-error').length > 0){
      form.data('formValidation').disableSubmitButtons(true); 
    }
    else{
      form.data('formValidation').disableSubmitButtons(false); 
    }
  };

  var makeEditable = function(item) {
    var form = $('#personal-achievement');
    var controls = form.find('.js-achievement-controls');
    var stayDirtyDisabled = form.find('.staydirty');
    $(slr.thDescription).html(txt.thDescription + txt.opt);
    $(slr.optDesc).removeClass('hidden');

    // Unhide the form controls.
    controls.removeClass('hidden');
    $('.js-add-achievement-btn').prop('disabled', true);

    var date = item.find('.js-date').clone().children().remove().end().text();
    var achievement = item.find('.js-achievement').data('achievement');
    var description = item.find('.js-description').data('description');

    // Hide the original achievement.
    item.addClass('hidden');

    var $template = $('#achievement-template'),
        $clone    = $template
                        .clone()
                        .removeClass('hide')
                        .removeAttr('id')
                        .insertBefore(item),
                        $labelAchieve  = $clone.find('[for="achievement[]"]').attr('for', 'achievement'+addCounter),
                        $labelDesc     = $clone.find('[for="description[]"]').attr('for', 'description'+addCounter),
                        $labelDate     = $clone.find('[for="date[]"]').attr('for', 'date'+addCounter),
                        $achievement   = $clone.find('[name="achievement[]"]').attr('id', 'achievement'+addCounter),
                        $description   = $clone.find('[name="description[]"]').attr('id', 'description'+addCounter),
                        $date          = $clone.find('[name="date[]"]').attr('id', 'date'+addCounter);
                        addCounter++;
    // Set the values in our cloned template.
    $achievement.val(achievement);
    $date.val(date);
    $description.val(description);

    // Add remove button events to the cloned template.
    var removeButton = $clone.find('.js-hide-achievement-fields');
    removeButton.on('click', function() {
      $clone.remove();

      //Stay Dirty until cancel because an existing record has been remove
      form.data('formValidation').disableSubmitButtons(false);
      stayDirtyDisabled.val('true');
      stayDirtyDisabled.change();

      enableOrDisableAchievementSubmitButton(form);
      if ($(slr.achFields).not('.hide').length === 0) {
        $(slr.thDescription).html(txt.thDescription);
        $(slr.optDesc).addClass('hidden');
        $(slr.achTableheader).addClass('hidden');
      }
    });

    $clone.find('.achievement-list .form-group:not(.new-achievement)').remove();

    // Add the new fields to validate.
    form.formValidation('addField', $achievement);
    form.formValidation('addField', $date);
    form.formValidation('addField', $description);
    form.formValidation('revalidateField', $achievement);
    form.formValidation('revalidateField', $description);

    // Focus the primary form element in the clone.
    $date.focus();

    // Reinitialise datepickers.
    //rm.datepicker.init();

    //Hide Toolbar
    hideToolbar();

  };

  var addAchievements = function() {
    var form = $('#personal-achievement');
    var controls = form.find('.js-achievement-controls');

    // Unhide the form controls.
    controls.removeClass('hidden');

    $(slr.thDescription).html(txt.thDescription + txt.opt);
    $(slr.optDesc).removeClass('hidden');

    // Clone the template and remove any hide classes and the id.
    // Insert it after the original template.
    var $template = $('#achievement-template'),
        $clone    = $template
                        .clone()
                        .removeClass('hide')
                        .removeAttr('id')
                        .insertBefore($template),
                        $labelAchieve  = $clone.find('[for="achievement[]"]').attr('for', 'achievement'+addCounter),
                        $labelDesc     = $clone.find('[for="description[]"]').attr('for', 'description'+addCounter),
                        $labelDate     = $clone.find('[for="date[]"]').attr('for', 'date'+addCounter),
                        $achievement   = $clone.find('[name="achievement[]"]').attr('id', 'achievement'+addCounter),
                        $description   = $clone.find('[name="description[]"]').attr('id', 'description'+addCounter),
                        $date          = $clone.find('[name="date[]"]').attr('id', 'date'+addCounter);
                        addCounter++;

    // Add remove button events to the cloned template.
    var removeButton = $clone.find('.js-hide-achievement-fields');
    removeButton.on('click', function() {
      // Show the modal.
      //$('#modalConfirmRemove').modal('show');

      $clone.remove();      
      if ($(slr.achFields).not('.hide').length === 0) {
        $(slr.thDescription).html(txt.thDescription);
        $(slr.optDesc).addClass('hidden');
      }
      form.data('formValidation').disableSubmitButtons(false);
      enableOrDisableAchievementSubmitButton(form);

      //$('#modalConfirmRemove').find('')
    //  $clone.remove();
    });

    // Focus the primary form element in the clone.
    $date.focus();

    // Add the new field to validate.
    form.formValidation('addField', $achievement);
    form.formValidation('addField', $date);
    form.formValidation('addField', $description);

   // Reinitialise datepickers.
   // rm.datepicker.init();
  };

  function toggleMainTbState (isEditMode) {
    switch (rm.achievementdiary.state.mainAjaxTb) {
      // Placeholder for future fixes
      case 'success':
        break;

      // Placeholder for future fixes
      case 'error':
        break;

      // Show/Hide toggle for empty error msg and table
      case 'empty':
        $('#personal-achievement')[isEditMode ? 'removeClass' : 'addClass']('hidden');
        $('#personal-achievement-no-data')[isEditMode ? 'addClass' : 'removeClass']('hidden');
        break;

      default:
        break;
    }
  }

  // public api
  return {
    state: {
      mainAjaxTb: null
    },
    init: initialize,
    getForms: getForms,
    enablePage: enablePage,
    disablePage: disablePage,
    toggleMainTbState: toggleMainTbState
  };

})();
/* globals Unison */
rm.emergencycontacts = (function () {
  'use strict';

  var initialize = function () {
    if ($('#emergencyContactsComponent').length) {
      bindEvents();
    }
  };


  var bindEvents = function () {
    // Clear relationship field when contact type is Carer.
    $('#contactTypeInput').on('change', function (e) {
      if ($(this).find('option:selected').val() === 'Carer') {
        $('#relationshipInput').val('');
      }
    });
  };


  // public api
  return {
    init: initialize
  };

})();

rm.ajaxLoader = (function() {
  'use strict';

  var elemSelector = {
      ajaxLoader:         '.ajax-loader',
      activeClass:        'loader-active',
      ajaxMessage:        '.ajax-loader__text p'
  };

  var showLoader = function (strMessage) {
    if (strMessage !== undefined) {
      $(elemSelector.ajaxMessage).text(strMessage);
    }

    $(elemSelector.ajaxLoader).addClass(elemSelector.activeClass);
    rm.sticky.rebuild();
  };

  var hideLoader = function() {
    $(elemSelector.ajaxLoader).removeClass(elemSelector.activeClass);
    rm.sticky.rebuild();
  };

  return {
    showAjaxLoader: showLoader,
    hideAjaxLoader: hideLoader
  };
}());
rm.cover = (function () {

	'use strict';

  var $body = rm.globals.DOM.body;

	var showCover = function () {
    // Check if element already exists, add one if not
    if (!$('.cover').length) {
      $body.append('<div class="cover" />');  
    }

    $body.addClass('is-cover');
	};

  var hideCover = function () {    
    $body.removeClass('is-cover');
  };

  var toggleCover = function () {
    if ($body.hasClass('is-cover')) {
      hideCover();
    } else {
      showCover();
    }
  };

	// public api
	return {
    show: showCover,
    hide: hideCover,
    toggle: toggleCover
	};

})();
/* globals Unison */
/* jshint unused:false */

rm.collapse = (function () {

  'use strict';

  // Cache selectors
  var $toggle = $('[data-toggle-mobile="collapse"]');

  var initialize = function () {
    if (!$toggle.length) { return false; }

    bindCollapseMobile();
    bindCollapseMobileToggleClick();
  };

  // Init BS Collapse only if Mobile (XS)
  var bindCollapseMobile = function () {
    Unison.on('change', function (bp) {
      // Iterate through each toggle and set it's collapse area up as a BS Collapse
      $toggle.each(function () {
        var $target = $($(this).attr('data-target-mobile'));

        //Mega Menu is always hide content, when shuffle ipad modes
        //if (bp.name === 'xs' || bp.name === 'sm') {
        if (bp.name === 'xs') {
          // Init Collapse
          $target.collapse('hide');

          $(this).removeAttr('tabindex');
        } else {
          // Reset
          $target
            .addClass('in')
            .css('height', '');

          $(this)
            .attr('tabindex','-1');
        }
      });
    });
  };

  // Only bind a toggle click if Mobile (XS & SM)
  var bindCollapseMobileToggleClick = function () {
    $toggle.on('click', function (e) {
      var $this = $(this),
        target = $this.attr('data-target-mobile'),
        $target = $(target),
        bp = Unison.fetch.now().name;

      if (bp === 'xs') {
        e.preventDefault();
        $target.collapse('toggle');
      }
    });
  };


  // public api
  return {
    init: initialize
  };

})();
/* globals Stickyfill */
/* jshint unused:false */

rm.sticky = (function() {
  'use strict';

  var elemSelector = {
    sticky:                   '.sticky',
    ajaxLoader:               '.ajax-loader',
  };

  // Cache selectors
  var $window = rm.globals.DOM.window,
    $body = rm.globals.DOM.body,
    $sticky = $(elemSelector.sticky),
    $ajaxLoader = $(elemSelector.ajaxLoader);


  var initialize = function() {
    if (!$sticky.length) { return false; }

    initSticky();
  };

  var initSticky = function () {
    $sticky.each(function () {
      Stickyfill.add(this);
    });
  };

  var rebuildStickies = function () {
    Stickyfill.refreshAll();
  };

  var killStickies = function () {
    Stickyfill.removeAll();
  };

  return {
    init: initialize,
    rebuild: rebuildStickies,
    kill: killStickies
  };
}());
/* globals Unison */
/* jshint unused:false */

rm.stickyTableHeaders = (function () {
  'use strict';

  var elemSelector = {
    stickyTableHeaders: '.js-sticky-table-headers',
    stickyHeader: '.sticky--header'
  };

  // Cache selectors
  var $stickyTableHeaders;


  var initialize = function () {
    $stickyTableHeaders = $(elemSelector.stickyTableHeaders);
    if (!$stickyTableHeaders.length) { return false; }    

    // Intitialise this plugin (for md and lg breakpoints only)
    Unison.on('change', function (bp) {
      if (bp.name === 'md' || bp.name === 'lg') {
        initStickyTableHeaders();
      } else {
        destroyStickyTableHeaders();
      }
    });
  };

  var initStickyTableHeaders = function () {
    var $stickyHeader = $(elemSelector.stickyHeader);

    $stickyTableHeaders.stickyTableHeaders({
      fixedOffset: ($stickyHeader.length ? $stickyHeader : null),
      cacheHeaderHeight: true
    });
  };

  var destroyStickyTableHeaders = function () {
    $stickyTableHeaders.stickyTableHeaders('destroy');
  };

  return {
    init: initialize
  };
}());
rm.documentAccess = (function () {
  'use strict';

    var elemSelector = {
      form:                       '#formChangeDocumentAccessLevel',
      formRemoveHide:             '#formRemoveHideDocument',
      rdoRemoveDocument:          '#radio-remove-document',
      rdoHideDocument:            '#radio-hide-document',
      rdoGroup:                   'input[name="document-access"]',
      removeConfirmation:         '#removeConfirmation',
      changeDocumentSubmit:       '.document-access__controls input[type="submit"]',
      hideConfirmationModal :     '#modalHideConfirmation',
      removeConfirmationModal :   '#modalRemoveConfirmation',
      btnAccess :                 '.toolbar-nav .btn__access',
      btnRemoveHide :             '.toolbar-nav .btn__remove-hide-document',
      rdoRemoveDocumentPO:        '#radio-remove-document-po',
      rdoRemoveDocumentHCQ:       '#radio-remove-document-hcq',
      rdoRemoveDocumentPHN:       '#radio-remove-document-phn',
      removeConfirmationModalPO : '#modalRemovePOConfirmation',
      removeConfirmationModalHCQ: '#modalRemoveHCQConfirmation',
      removeConfirmationModalPHN: '#modalRemovePHNConfirmation',
      rdoGeneralAccess:           '#radio-general-access',
      rdoGeneralAccessPO:         '#radio-general-access-po',
      rdoGeneralAccessHCQ:        '#radio-general-access-hcq',
      rdoGeneralAccessPHN:        '#radio-general-access-phn',
      generalConfirmationModalPO: '#modalGeneralAccessPOConfirmation',
      generalConfirmationModalHCQ:'#modalGeneralAccessHCQConfirmation',
      generalConfirmationModalPHN:'#modalGeneralAccessPNConfirmation',
      rdoRestrictedAccess:        '#radio-restricted-access',
      rdoRestrictedAccessPO:      '#radio-restricted-access-po',
      rdoRestrictedAccessHCQ:     '#radio-restricted-access-hcq',
      rdoRestrictedAccessPHN:     '#radio-restricted-access-phn',
      restrictedAccessModalPO:    '#modalRestrictedAccessPOConfirmation',
      restrictedAccessModalHCQ:   '#modalRestrictedAccessHCQConfirmation',
      restrictedAccessModalPHN:   '#modalRestrictedAccessPNConfirmation',
      generalConfirmationModal:   '#modalGeneralAccessConfirmation',
      restrictedAccessModal:      '#modalRestrictedAccessConfirmation'
    };

    // Cache selectors
    var $form,
      $radios;

    var initialize = function () {
      
      doFullRefresh();
      bindOpenAcessFormOnLoad();
      bindOpenRemoveHideFormOnLoad();
      
      if($(elemSelector.form).length || $(elemSelector.formRemoveHide).length) bindShowAccessModals();
      
      $form = $(elemSelector.form);
      if (!$form.length) { return false; }

      bindRadios();
      
      bindOnLoadHandling();
      
      $(window).on('load', function() {
        if($('#inlinePdfDiv').length > 0 && $('#inlinePdfDiv').find('iframe').length > 0) {
        $('#inlinePdfDiv')
          .attr('tabindex', 0)
          .on('focus', function() {
            $(this).addClass('inline-pdf-focused');
          }).on('blur', function() {
            $(this).removeClass('inline-pdf-focused');
          });
        }
      });
      
    };

    var bindRadios = function () {
      $radios = $(elemSelector.rdoGroup);
      if (!$radios.length) { return false; }

      var $removeConfirmation = $(elemSelector.removeConfirmation);
      var $changeDocumentSubmit = $(elemSelector.changeDocumentSubmit);

      $radios.on('change', function () {

        // Hide/show the additional form input
        if ($(elemSelector.rdoRemoveDocument).is(':checked')) {
          $removeConfirmation.removeClass('hidden');
        } else {
          $removeConfirmation.addClass('hidden');
        }
      });
    };
    
    var bindShowAccessModals = function() {
      
      var $forms = $([elemSelector.form, elemSelector.formRemoveHide].join(', '));
      
      $forms.each(function(i, form) {
        var $form = $(form);
        
        $form.on('success.form.fv', function(e) {
          e.preventDefault();
          
          if($(elemSelector.rdoGeneralAccess).is(':checked')) {
            $(elemSelector.generalConfirmationModal).modal('show');
          } else if($(elemSelector.rdoRestrictedAccess).is(':checked')) {
            $(elemSelector.restrictedAccessModal).modal('show');
          } else if($(elemSelector.rdoHideDocument).is(':checked')) {
            $(elemSelector.hideConfirmationModal).modal('show');
          } else if($(elemSelector.rdoRemoveDocument).is(':checked')) {
            $(elemSelector.removeConfirmationModal).modal('show');
          } else if($(elemSelector.rdoGeneralAccessPO).is(':checked')) {
            $(elemSelector.generalConfirmationModalPO).modal('show');
          } else if($(elemSelector.rdoRestrictedAccessPO).is(':checked')) {
            $(elemSelector.restrictedAccessModalPO).modal('show');
          } else if($(elemSelector.rdoRemoveDocumentPO).is(':checked')) {
            $(elemSelector.removeConfirmationModalPO).modal('show');
          } else if($(elemSelector.rdoGeneralAccessHCQ).is(':checked')) {
            $(elemSelector.generalConfirmationModalHCQ).modal('show');
          } else if($(elemSelector.rdoRestrictedAccessHCQ).is(':checked')) {
            $(elemSelector.restrictedAccessModalHCQ).modal('show');
          } else if($(elemSelector.rdoRemoveDocumentHCQ).is(':checked')) {
            $(elemSelector.removeConfirmationModalHCQ).modal('show');
          } else if($(elemSelector.rdoGeneralAccessPHN).is(':checked')) {
            $(elemSelector.generalConfirmationModalPHN).modal('show');
          } else if($(elemSelector.rdoRestrictedAccessPHN).is(':checked')) {
            $(elemSelector.restrictedAccessModalPHN).modal('show');
          } else if($(elemSelector.rdoRemoveDocumentPHN).is(':checked')) {
            $(elemSelector.removeConfirmationModalPHN).modal('show');
          } else {
            this.submit();
          }
          
        });
      });
      
      return false;
      
    };
    
    var bindOnLoadHandling = function() {
      $(elemSelector.form).get(0).reset();
    };
    
    var bindOpenRemoveHideFormOnLoad = function() {
      
      if(0 === $(elemSelector.btnRemoveHide).length) {
        rm.sessionStorage.removeSession('showRemoveHideFormOnLoad');
      }
      
      if(0 !== $('[data-showremovehideform="true"]').length) {
        
        $('[data-showremovehideform="true"]').on('click', function(e) {
          rm.sessionStorage.setSession('showRemoveHideFormOnLoad', true);
        });
      }
      
      $(window).on('load', function() { // jshint ignore:line
       
        var showRemoveHideFormOnLoad = rm.sessionStorage.getSession('showRemoveHideFormOnLoad');
        
        if('true' === showRemoveHideFormOnLoad && 0 !== $(elemSelector.btnRemoveHide).length) {
          $(elemSelector.btnRemoveHide).trigger('click');
          rm.sessionStorage.removeSession('showRemoveHideFormOnLoad');
        }
      });
      
      
    };
    
    var bindOpenAcessFormOnLoad = function() {
      
      if(0 === $(elemSelector.btnAccess).length) rm.sessionStorage.removeSession('showAccessFormOnLoad');
      
      if(0 !== $('[data-showacessform="true"]').length) {
        
        $('[data-showacessform="true"]').on('click', function() {
          rm.sessionStorage.setSession('showAccessFormOnLoad', true);
        });
      }
      
      $(window).on('load', function() { // jshint ignore:line
        
        var showAccessFormOnLoad = rm.sessionStorage.getSession('showAccessFormOnLoad');
        
        if('true' === showAccessFormOnLoad && 0 !== $(elemSelector.btnAccess).length) {
          $(elemSelector.btnAccess).trigger('click');
          rm.sessionStorage.removeSession('showAccessFormOnLoad');
          
          //provide repeatable hook just in case ajax data is not ready
          $(document.body).addClass('access-form-shown');
        }
      });
      
    };
    
    var doFullRefresh = function() {
      var isFullRefresh = rm.sessionStorage.getSession('fullRefresh');

      if(isFullRefresh) {
        rm.sessionStorage.removeSession('fullRefresh');
        rm.ajaxLoader.showAjaxLoader();
        window.location.reload(true);
      }
    };

    // public api
    return {
      init: initialize
    };
})();
rm.dischargeSummary = (function () {
  'use strict';

  var elemSelector = {
    dischargeFilter:          '#formDischargeSummaryFilter',
    dischargeFilterSortBy:    '#sortby',
    hrElem:                   '.thin.visible-xs'
  };

  // Cache selectors
  var $form;

  var initialize = function () {
    $form = $(elemSelector.dischargeFilter);
    if (!$form.length) { return false; }

    bindFormSubmit();
  };

  // Bind to form submit
  var bindFormSubmit = function () {
    var $dischargeFilterSortBy = $form.find(elemSelector.dischargeFilterSortBy);
    if($dischargeFilterSortBy.length === 0){
      $(elemSelector.hrElem).addClass('hidden');
      $(elemSelector.hrElem).removeClass('visible-xs');
    }
    $form.on('submit', function () {
      // Trigger sorting
      rm.table.sortingDocument($dischargeFilterSortBy);
      return false;
    });

  };

  // public api
  return {
    init: initialize
  };

})();
/*global localStorage: false, console: false, $: false */

rm.personalHealthNotes = (function () {

  'use strict';
  var eventDay;
  var eventMonth;
  var eventYear;
  var eventTitle;
  var eventDescription;

  var elemSelector = {
    editForm: '#edit-personal-health-note',
    addForm: '#add-personal-health-note',
    actionButtons: '.personal-health-notes--controls',
    navToolbar: '.toolbar-nav'
  };

  // Cache selectors
  var $buttons = $(elemSelector.actionButtons),
    $navToolbar = $(elemSelector.navToolbar),
    $editForm = $(elemSelector.editForm),
    $addForm = $(elemSelector.addForm);

  var initialize = function () {
    if ($editForm.length) {

      bindEvents();
      //disableSave();
      saveFormInitialState();
      bindEditCancelButton();
    } else if ($addForm.length) {

      //disableSave();
      bindEvents();
    } else {
      return false;
    }
  };

  var bindEditCancelButton = function() {
    $('.js-cancel-button').on('click', function() {
      restoreFormState();
      enableToolbar();
      //$(this).prop('disabled', true);
      //disableSave();
    });
  };

  var saveFormInitialState = function() {
      eventDay = $('[name="eventdate-day"]')[0].value;
      eventMonth = $('[name="eventdate-month"]')[0].value;
      eventYear = $('[name="eventdate-year"]')[0].value;
      eventTitle = $('[name="title"]')[0].value;
      eventDescription = $('textarea').val();
  };

  var restoreFormState = function() {
      $('[name="eventdate-day"]')[0].value = eventDay;
      $('[name="eventdate-month"]')[0].value = eventMonth;
      $('[name="eventdate-year"]')[0].value = eventYear;
      $('[name="title"]')[0].value = eventTitle;
      $('textarea').val(eventDescription);
      $editForm.attr('data-dirty', false);

  };

  var disableSave = function() {
    $('.js-save-button').prop('disabled', true);
  };

  var disableForm = function() {
    return false;
  };

  var enableControlButtons = function() {
    var buttons = $buttons.find('button');
    var inputs = $buttons.find('input');

  
    if(!$editForm.attr('data-dirty')) {
      buttons.prop('disabled', true);
    }
    inputs.removeClass('hide');
    buttons.removeClass('hide');
  };

  var disableControlButtons = function() {
    var buttons = $buttons.find('button');
    var inputs = $buttons.find('input');

    inputs.addClass('hide');
    buttons.addClass('hide');

  };



  var disableToolbar = function() {
    var inputs = $editForm.find('input');
    var textarea = $editForm.find('textarea');
    var toolbarButtons = $navToolbar.find('button');


    toolbarButtons.prop('disabled', true);
    toolbarButtons.addClass('disabled');
  };

  var enableToolbar = function() {
    var toolbarButtons = $navToolbar.find('button');


    toolbarButtons.prop('disabled', false);
    toolbarButtons.removeClass('disabled');
  };

  var bindEvents = function () {
    var inputs = $editForm.find('input');
    var textarea = $editForm.find('textarea');
    var addInputs = $addForm.find('input');
    var addTextarea = $addForm.find('textarea');

    inputs.on('focus', function () {
      $editForm.attr('data-dirty', true);
      $('.js-cancel-button').attr('disabled', false);
      enableControlButtons();
    });

    textarea.on('focus', function () {
      $('.js-cancel-button').attr('disabled', false);
      $editForm.attr('data-dirty', true);
      enableControlButtons();
    });

    addInputs.on('focus', function () {
      $('.js-cancel-button').attr('disabled', false);
    });

    addTextarea.on('focus', function () {
      $('.js-cancel-button').attr('disabled', false);
    });

    addTextarea.on('input', function () {
       if(addInputs[1].value.length > 255 || addInputs[1].value.length < 1 ) {
          $('.js-save-button').attr('disabled', false);
       } else  {
          $('.js-save-button').attr('disabled', false);
       }
    }); 

  };

  // public api
  return {
    init: initialize,
    disableForm: disableForm,
    saveFormState: saveFormInitialState
  };

})();
rm.personalContact = (function () {
  'use strict';

  var elemSelector = {
    formPersonalDetails:  '#formPersonalDetails',
    modalSuccess : '#modalSuccess'
  };

  var initialize = function() {
    showConfirmationModal();
  };

  var showConfirmationModal = function () {
    var $form = $(elemSelector.formPersonalDetails);
    if (!$form.length) { return false; }

    $form.on('success.form.fv', function (e) {
      var $thisForm = $(this),
        validation = $thisForm.data('formValidation');

        e.preventDefault(); //stop form submit

        validation.resetForm();
    });
  };

  // public api
  return {
    init: initialize
  };

})();
rm.accessLevelNonRep = (function () {
  'use strict';

  var $cache,         // Cache $ elements
      elemSelector = {
        btnSave:            '.js-save-button',
        desRestricted:      '.access-level-description',
        rdoRestricted:      '#radio-restricted-access',
        rdoGroup :          'input[name="nominated-access"]',
        btnCancel:          '#nominatedRepStep2 .js-cancel-button'
      };

  var initialize = function() {
    var $form = $('#nominatedRepStep2');
    if (!$form.length) { return false; }

    $form.on('success.field.fv', function(e, data) {
        if (data.fv.getInvalidFields().length > 0) {    // There is invalid field
            data.fv.disableSubmitButtons(true);
        }
    });

    $(elemSelector.rdoGroup).click(function () {
      $(elemSelector.desRestricted).removeClass('hidden');
    });

    $(elemSelector.btnCancel).click(function () {
      $(elemSelector.desRestricted).addClass('hidden');
    });

  };

  // public api
  return {
    init: initialize
  };

})();
rm.timelineBlock = (function() {
    'use strict';
  
    /* -- VARIABLE SETUP -- */
    var elemSelector = {
          clickableBlock:     '.document',
          link:           '.timeline__link'
        };     
  
    var initialize = function() {
        triggerLink();
        updateDivFocus();
    };   

    var triggerLink = function(){
         $(elemSelector.clickableBlock).click(function(e){
            e.preventDefault();            
            window.location = $(this).find(elemSelector.link).attr('href');   
        });
    };

    var updateDivFocus = function(){
        $(elemSelector.clickableBlock).hover(function(e){
            $(this).find(elemSelector.link).toggleClass('timeline__link--hover');
        });

        $(elemSelector.link).on('focus', function(){
            if($(this).is( ':focus' )){
                $($(this).parent().parent().parent()).addClass('document--wrap');
            }
            else{
                $($(this).parent().parent().parent()).removeClass('document--wrap');
            }
         });

         $(elemSelector.link).on('focus', function(){            
            $($(this).parent().parent().parent()).addClass('document--wrap');
         });

         $(elemSelector.link).on('focusout', function(){            
            $($(this).parent().parent().parent()).removeClass('document--wrap');
         });
    };

    return {       
      init:initialize
    };
  }());

rm.listinfo = (function () {
  'use strict';

  var elemSelector = {
    mCta:               '.listinfo__ctawrapper .btn',
    selected:           'option:selected',
    selector:           '.native-select'
  },
  atr = {
    show:         'data-show',
    hide:         'data-hide'
  },
  cls = {
    hidden:       'hidden'
  };

  var initialize = function () {
    bindEditInfoClick();
    bindCancelEditInfoClick();
    hideShowRelationship();
    bindAddContact();
  };

  var hideShowRelationship = function(){
      $(elemSelector.selector).on('change', function(e){
        var $thisInput = $(this),
        $option = $thisInput.find(elemSelector.selected),
        showSelector = $option.attr(atr.show),
        hideSelector = $option.attr(atr.hide);

        // Hide/show given element (if given)
        if (showSelector) $(showSelector).removeClass(cls.hidden);
        if (hideSelector) $(hideSelector).addClass(cls.hidden);
      });
  };


  var bindEditInfoClick = function () {
    var $element = $('.js-edit-info');
    if (!$element.length) { return false; }

    $element.on('click', function () {
      var $component = $(this).closest('.listinfo');

      //Disable linked component buttons
      var $form = $(this).closest('form');
      var linkedadd = $form.data('linked-add');

      var buttons = $('#' + linkedadd).find('input');
      buttons.prop('disabled', true);

      //Dropdown type
      // $component.find('.selectpicker').each(function () {
      //   var $closestColumn =$(this).closest('.listinfo__column__edit');
      //   var $value = $closestColumn.find('input[type=hidden]').val();
      //   $(this).selectpicker('val', $value);
      // });
      var currentSelect = $component.find(elemSelector.selector);
      $component.find(elemSelector.selector+' option').each(function (e) {
        if($(this).val() === currentSelect.attr('data-selected'))
        {
          currentSelect.val($(this).val());
        }
      });

      $component.find('.listinfo__extra').removeClass('hidden');
      $component.find('.listinfo__row').addClass('listinfo__row--edit');
      $component.find('.listinfo__column').addClass('listinfo__column--edit');
      $component.find('.listinfo__column__content').addClass('hidden');
      $component.find('.listinfo__ctawrapper').addClass('hidden');
      $component.find('.listinfo__column__edit').removeClass('hidden');
      $component.find('.listinfo__edit-commands').removeClass('hidden');
      $component.find('.listinfo__help').removeClass('hidden');

      rm.formTools.hideThisTools($component);
      rm.formTools.disableButtons();
      $(elemSelector.mCta).addClass('hidden');

      // Disable any `.js-show-form` buttons on the page
      $('.js-show-form').prop('disabled', true).addClass('hidden');
      $component.find('.dropdown-toggle:first-child').focus();

    });
  };

  var bindCancelEditInfoClick = function () {
    var $element = $('.js-cancel-edit-info');
    if (!$element.length) { return false; }

    $element.each(function(){
      var $cancelButton = $(this);

      $cancelButton.on('click', function (e) {
        //This will prevent auto Reset, we will reset form in actionCancelEditForm
        //e.preventDefault();
        actionCancelEditForm($cancelButton);
        $cancelButton.parents('form').find('.js-edit-info').focus();
      });
    });



    $('.js-edit-info-mobile').on('click', function(e){
      e.preventDefault();
      $(this).closest('form').find('.js-edit-info').click();
    });
  };

  var actionCancelEditForm = function ($cancelButton){
    var $component = $cancelButton.closest('.listinfo');
    var $form = $cancelButton.closest('form');
    var $SelectValue = $form.find('input[type=hidden]').val();
    var $selectContact = $form.find('select option[value="'+ $SelectValue +'"]');

    //Enable linked component buttons
    var linkedadd = $form.data('linked-add');
    var buttons = $('#' + linkedadd).find('input');
    buttons.prop('disabled', false);

    $component.find('.listinfo__extra').addClass('hidden');
    $component.find('.listinfo__row').removeClass('listinfo__row--edit');
    $component.find('.listinfo__column').removeClass('listinfo__column--edit');
    $component.find('.listinfo__column__header').removeClass('hidden');
    $component.find('.listinfo__column__content').removeClass('hidden');
    $component.find('.listinfo__column__edit').addClass('hidden');
    $component.find('.listinfo__edit-commands').addClass('hidden');
    $component.find('.listinfo__ctawrapper').removeClass('hidden');
    $component.find('.listinfo__help').addClass('hidden');

    rm.formTools.showThisTools($component);
    rm.formTools.enableButtons();
    $(elemSelector.mCta).removeClass('hidden');

    // Re-enable any `.js-show-form` buttons on the page
    $('.js-show-form').prop('disabled', false).removeClass('hidden');

    //start - On Cancel show/hide Relationship Field as per 'Contact Type' Select
    var dataShow = $selectContact.attr('data-show');
    var dataHide = $selectContact.attr('data-hide');

    if(dataShow!==undefined){
      $(dataShow).removeClass('hidden');
    }
    if(dataHide!==undefined){
      $(dataHide).addClass('hidden');
    }
    //end - On Cancel show/hide Relationship Field as per 'Contact Type' Select
  };

  var bindAddContact = function () {
    var $addContactBtn = $('#emergencyContactsComponent .js-show-form');
    var $cancelContactBtn = $('#emergencyContactsComponent .js-hide-form');
    $addContactBtn.on('click', function() {
      $(elemSelector.mCta).addClass('hidden');
    });
    $cancelContactBtn.on('click', function() {
      $(elemSelector.mCta).removeClass('hidden');
    });
  };

  // public api
  return {
    init: initialize
  };

})();
rm.inputfile = (function () {
  'use strict';

  // Cache selectors
  var $btnFile;

  var initialize = function () {
    $btnFile = $('.btn--file');
    if (!$btnFile.length) { return false; }


    $btnFile.find(':file')
      .on('change', function () {
        var $thisInput = $(this),
          numFiles = $thisInput.get(0).files ? $thisInput.get(0).files.length : 1,
          label = $thisInput.val().replace(/\\/g, '/').replace(/.*\//, '');

        $thisInput.trigger('fileselect', [numFiles, label]);

        truncateStrMob();
      })
      .on('fileselect', function (event, numFiles, label) {
        var $input = $(this).parents('.input-group').find('#pdf-upload-val'),
          log = numFiles > 1 ? numFiles + ' files selected' : label;

        if ($input.length) { $input.text(log); }
      })
      .on('focusin', function() {
        $(this).parent().addClass('btn--file--focus');
      })
      .on('focusout', function() {
        $(this).parent().removeClass('btn--file--focus');
      });
      
      $btnFile.on('keydown', function(e) {
        var keyCode = e.which || e.keyCode;
        if(13 === keyCode || 32 ===keyCode) {
          e.preventDefault();
          $(this).find(':file').trigger('click');
        }
      });
  };

  var truncateStrMob = function () {
    var $fileStr = $('#pdf-upload-val').text();
    var mobile = $(window).width() < 768;
    
    if ($fileStr.length > 40 && mobile === true) {
      $('#pdf-upload-val').text($fileStr.substring(0, 25) + '...');
    }

  };

  // public api
  return {
    init: initialize
  };

})();
/* globals Unison */
rm.readmore = (function () {

  'use strict';

  var $window = rm.globals.DOM.window;

  var initialize = function () {

    $('.readmore__link :button').on('click', function () {
      var $this = $(this);
      var $content = $this.parent().prev('.readmore__content');
      var linkText = $this.text().toUpperCase();

      if (linkText === 'SHOW MORE') {
        linkText = 'Show less';
      } else {
        linkText = 'Show more';
      }
      $content.toggleClass('readmore__content--show');

      $this.text(linkText);
    });
  };

  // public api
  return {
    init: initialize
  };

})();
rm.formTools = (function () {

  'use strict';

  var elemSelector = {
    formTools: '.form__tools',
  };

  // Cache selectors
  var $formTools = $(elemSelector.formTools);

  var initialize = function () {

  };

  var hideThisTools = function($scope) {
    var $tools = $scope.find(elemSelector.formTools);
    $tools.addClass('hidden');
  };

  var showThisTools = function($scope) {
    var $tools = $scope.find(elemSelector.formTools);
    $tools.removeClass('hidden');
  };

  var disableTools = function() {
    var buttons = $formTools.find('button');
    buttons.prop('disabled', true);
  };

  var enableTools = function() {
    var buttons = $formTools.find('button');
    buttons.prop('disabled', false);
  };

  var disableButtons = function() {
    $formTools.addClass('hidden');
  };

  var enableButtons = function() {
    $formTools.removeClass('hidden');
  };


  // public api
  return {
    init: initialize,
    disableTools: disableTools,
    enableTools: enableTools,
    hideThisTools: hideThisTools,
    showThisTools: showThisTools,
    disableButtons : disableButtons,
    enableButtons : enableButtons
  };

})();
/**
 * Purpose
 * ==================================================================================================
 * Disable the Right Click for All Pages by default unless it is manually overridden
 *
 *
 * Usage
 * ==================================================================================================
 * Call in in FEDResources/main.js, e.g. rm.rightClick.disable();
 *
 *
 * Assumption
 * ==================================================================================================
 * Note if rm.rightClick.isProd is true, it will not unbind the events
 *
 */
rm.rightClick = rm.rightClick || (function($, rm){

  'use strict';

  var $body = $('body'),
      evtNs = 'contextmenu.disable';

  return {
    isProd: true,
    disable: disable,
    enable: enable,
  };

  function disable () {
    $body.on(evtNs, function(){
      return false;
    });
  }

  function enable () {
    if (!this.isProd)
      $body.off(evtNs);
  }

})(jQuery, rm);
/* globals Unison */
rm.radio = (function () {

  'use strict';

  var $window = rm.globals.DOM.window;

  var initialize = function() {

    $('input[type="radio"][data-disableonselect]').change(function(){
        var value = $(this).data('disableonselect');
        $('#'+ value).prop('disabled',true);
        if($('#'+ value).is('input[type="checkbox"]')){
          $('#'+ value).prop('checked', false); 
        }
    });

    $('input[type="radio"][data-enableonselect]').change(function(){
        var value = $(this).data('enableonselect');
        $('#'+ value).prop('disabled',false);
    });
  };

  // public api
  return {
    init: initialize
  };

})();
rm.checkbox = (function () {
  'use strict';

  var initialize = function () {

    $('#restrict_record_check').change(function() {
        if ($(this).is(':checked')) {
          $('.restriction-expiry-date').removeClass('hidden');
        } else {
          $('.restriction-expiry-date').addClass('hidden');
        }
    });
  };

  return {
    init: initialize
  };
}());

/**
 * Purpose
 * ===================================
 * Enable Add/Edit of existing custodian records via use of one single form
 *
 *
 * Usage
 * ===================================
 * 1. Make sure the markup satisfy the hierarchy of classes/attributes below
 * 2. Add a class "js-data-list-from-ctrl" to the container (which contains both the datalist and form)
 * 3. Initialize by calling rm.dataListFormCtr();
 *
 *
 * Requirements
 * ===================================
 * -- Assumes uses plugins: Bootstrap select picker, formvalidation.io
 * -- Refer to the files in FEDResources/modules/data-list/ for handlebars template, scss
 * -- Compulsory Classes/Attributes hierarchy
 *
 * <div>.js-data-list-form-ctrl.datalist--wrap     / target container used for initializing the plugin
 *    <input>.btn--datalist-add                       // add an entry button (brings up the form)
 *    <header>.datalist--header                       // paragraph under the add button
 *    <ul>.datalist--body                             // container for all the records/entries
 *      <li>.datalist--item                           // individual record/entry (incl. crud btns)
 *        <fieldset>.btn-group--modify.btn-group        /// container for "edit"/"remove" btn
 *        <article>.datalist--item-content              /// container for custodian's avatar, name, details (rows)
 *          <div>.datalist--item-avatar
 *          <p>
 *          (without "datalist--item-alt " class)         //// contains the subheader and value of a row (default)
 *          .datalist--item-alt                           //// means this is an alternate row, e.g. extra address or contact in addition to the default ones
 *                                                             e.g. specific classes like "datalist--item-addr-alt"/"datalist--item-contact-alt"
 *                                                             means it is an addition address, contact
 *            <strong>                                              ///// subheader text
 *            <span>.datalist--item-content-row                     ///// value text
 *            [data-form-elem-target="{{#formElemId}} | {{val}}"]   ///// for finding form elem. with specific ID or with attr. "data-form-elem-src={{val}}"
 *                                                                        in order to populate value when populating data into the form, it will get the
 *                                                                        value from "data-form-elem-target":
 *                                                                        - if the value is "#abc", it will find the form element with that id,
 *                                                                        - if not found, then it will try to find form element with attribute "data-form-elem-src={{val}}"
 *            [data-form-elem-val="{{valueText}}"]                  ///// value used to populate the found form element
 *     <form>#datalist-form.datalist--form            // form wrapper (include base and dynamic partial forms)
 *       <fieldset>
 *       .fgroup--wrap                                  /// contains "form-group" <div>
 *                                                          e.g. specific classes like "fgroup--wrap-type" is used as an identifier as well as grouping set of form elements
 *         <div>.form-group                               //// contains a <label> and a form element such as <select>, <input> etc
 *           <label>
 *           <{{formElement}}>
 *           [id=]
 *           [data-form-elem-src="{{val}}"]                         ///// this is equivalent to the "data-form-elem-target" above in <span>,
 *                                                                         as an alternative way for finding the form element
 *           [data-def-checked], [checked]                          ///// any radio/checkbox with "data-def-checked" attr will be checked when the form is reet
 *           [data-custodian-type]                                  ///// this control which syblings to display
 *
 */
rm.dataListFormCtrl = rm.dataListFormCtrl || (function () {
  
    'use strict';
  
    /* -- VARIABLES -- */
    var jsInitTarget = '.js-data-list-form-ctrl',
        dataListAddBtn = '.btn--datalist-add',
  
        // form class/attr names
        fmElemTargetAttr = 'data-form-elem-target',
        fmElemValAttr = 'data-form-elem-val',
        fmSubCopy = 'fgroup--copy',
        fmSubCopyRemove = 'btn--datalist--subform-remove',
        fmElemTarget = ['[data-form-elem-src=', ']'],
        fmContactPickerName = 'custodian-contact-method',
        fmContactWrapCustomAttr = 'data-contact-method',
        fmCustoTypeRdos = 'input[name="custodian-type"]',
  
        // form elem selector
        fmAddrOuterWrap = '.fgroup--wrap-addr',
        fmAddrWrap = '.fgroup--wrap-addr .fgroup',
        fmContact = '.fgroup--wrap-contact .fgroup',
        fmCancelBtn = '.btn--datalist-cancel',
        fmAddAddrBtn = '.btn--datalist-add-addr',
        fmAddContactBtn = '.btn--datalist-add-contact',
        fmAddrDisableCheckbox = '#custodian-addr-none',

        //Edit / Remove button on list items
        dataListItemGroupBtn = '.btn-group--editremove',
  
        attrCustoType = 'data-custodian-type',
        attrEntryId = 'data-entry-id',
        attrCurrEntryId = 'data-curr-entry-id',
  
        // form events
        selectMainEvt = 'change.datalist-contact-method-main',
        selectEvt = 'change.datalist-contact-method',
  
        // List, List Items, List Items Rows
        dataListBody = '.datalist--body',
        dataListForm = '.datalist--form',
        dataListItem = '.datalist--item',
        dataListItemContent = '.datalist--item-content',
        dataListItemContentRow = '.datalist--item-content-row',
        contentCopy = 'p.datalist--item-alt',
        addrContentCopy = 'datalist--item-addr-alt',           // alt. address
        contactContentCopy = 'datalist--item-contact-alt',     // alt. contact
        dataListEditBtn = '.btn--datalist-edit',
        dataListRemoveBtn = '.btn--datalist-remove',
        dataListCrudBtn = [dataListAddBtn, dataListEditBtn, dataListRemoveBtn].join(', '),
  
        // bootstrap
        btPickerWrap = 'div.bootstrap-select',
  
        // $elem
        $editingHeader = $('.editing-header'),
        $addingHeader  = $('.adding-header'),
        $siblingElem  = null,
        $printBtn = $('.btn__print'),
        $custodianRemoval = $('#modal-removal-custodian .btn--secondary'),
        $subFormRemoveBtn = hp_createSubFormRemoveBtn(),
  
        // from rm.validation
        validationRules = rm.validation.getValidators();
  
  
    /* -- PRIMARY LOGIC -- */
    return {
      init: init,
      bindEvt: {
        entryCrud: bindEntryCrud,
        fmMain: bindFmMain,
        fmPartialCrud: bindFmPartialCrud,
      },
      util: {
        // for list items
        disableCrudBtns: disableCrudBtns,
        isLastDataListItem: isLastDataListItem,
        getEntryId: getEntryId,
  
        // for form
        clearFormElemVal: clearFormElemVal,
        syncListDataToFormElem: syncListDataToFormElem,
        moveFormToTarget: moveFormToTarget,
        showForm: showForm,
        getFormData: getFormData,
        initFormValidation: initFormValidation,
        isFormValid: isFormValid,
        getCurrEntryId: getCurrEntryId
      }
    };
  
  
    /* -- METHODS -- */
    function init () {
      $(jsInitTarget).each(function (idx, elem) {
        var $jsInitTarget = $(elem),
            $form = $jsInitTarget.find(dataListForm),
            args = [$jsInitTarget, $form];
  
        // todo: expose this helper method
        hp_initPickerFilterFmInput($form.find('select'), true);
  
        // todo: use Object.getOwnPropertyNames & Array.forEach to loop thru all the events
        bindEntryCrud.apply(this, args);
        bindFmMain.apply(this, args);
        bindFmPartialCrud.apply(this, args);
      });
      contactMethodPopoverSwitch();
    }
  
    function bindEntryCrud ($jsInitTarget, $form) {
      var $fmAddrBase = hp_clonePartialForm($form.find(fmAddrWrap)),
          $fmContactBase = hp_clonePartialForm($form.find(fmContact));
  
      // entry add
      $jsInitTarget.find(dataListAddBtn).click(function () {
        hideShowDataListHeader($(this), 'add');
        disableCrudBtns($jsInitTarget);
        clearFormElemVal($form);
        moveFormToTarget($form, $jsInitTarget.find(dataListBody), true);
        showForm($form);
        rm.rollTo.to('#datalist-form');
        hideShowGroupEditRemoveBtn();
      });
  
      // entry edit
      $jsInitTarget.find(dataListBody).on('click', dataListEditBtn, function () {
        hideShowDataListHeader($(dataListAddBtn), 'edit');
        var $list = $(this).parents(dataListItem),
            $mainListRows = $list.find('p:not(.datalist--item-alt)').find(dataListItemContentRow);
        $(dataListEditBtn).removeClass('btn--active');
        $(this).addClass('btn--active');
        disableCrudBtns($jsInitTarget);
        hideShowGroupEditRemoveBtn();
        $(this).closest('li.datalist--item').find('.editing-mode').remove();
        $(this).closest('li.datalist--item').find('.datalist--item-avatar').append('<strong class="editing-mode"> - Editing Custodian Contact Details</strong>');
        $(this).closest('.btn-group--modify')
               .children('input')
               .removeAttr('disabled');
        clearFormElemVal($form);
        syncListDataToFormElem($mainListRows, $form);
        syncAltListDataToSubFormElem($list, $form, $fmAddrBase, $fmContactBase);
        moveFormToTarget($form, $list.find(dataListItemContent));
        showForm($form, $list.find(dataListItemContent));
        modAttrToId();
        modAttrToFor();
        contactMethodPopoverSwitch();
        rm.popovers.init();
        
        if ($('#custodian-type-person').length) {
          var currVal =  $('input[name="custodian-type"]:checked').val();
          $('input[value="' + currVal + '"]').focus();  
        }
        // Reinitialize the event native select
        $.each($('#datalist-form .fgroup--copy').find('select'), function (idx, select) {
          reset($(select));
        });

        var $btnEdit = $(this);
        $(fmCancelBtn).on('click', function() {
          $btnEdit.focus();
        });
      });
  
      // entry removal
      $jsInitTarget.find(dataListBody).on('click', dataListRemoveBtn, function () {
        this.blur();
        var entryId = getEntryId($(this).parents(dataListItem));
        $form.attr(attrCurrEntryId, entryId);
      });
    }
  
    // todo: make this extendable by adding specific evt binding to an array, e.g.
    // Definition in exposed API:
    // {
    //    fmMainEvts: [],
    //    fmPartialEvts: [],
    //    datalistEvts: []
    // }
    //
    // Usage:
    // 1) function bindRdoChanges () { this.find(function(){}).change(); }
    // 2) fmMainEvts.add(bindRdoChanges);    |    fmPartialEvts.add(bindRdoChanges);
    // 3) fmMainEvts.each(function (bindEvt, idx) {
    //      bindEvt().call($jsInitTarget, $form);
    // });
    function bindFmMain ($jsInitTarget, $form) {
      // Cancel Btn
      $jsInitTarget.find(fmCancelBtn).click(function () {
        showForm($form, $jsInitTarget.find(dataListItemContent), true);   // must be called 1st prior to partial forms removal
        disableCrudBtns($jsInitTarget, true);
  
        // reenable the buttons
        $('.btn-group--editremove').removeClass('hidden');
        $(this).closest('li.datalist--item').find('.editing-mode').remove();
        hideShowDataListHeader($(dataListAddBtn), 'cancel');
        $('.datalist--header.default-header').removeClass('hidden');
        clearFormElemVal($form);
      });
  
      // Address disable checkbox
      $jsInitTarget.find(fmAddrDisableCheckbox).change(function () {
        $form
          .find(fmAddrOuterWrap)
          .toggleClass('hidden');
      });

      $(fmAddrDisableCheckbox).keypress(function(e){
        e.preventDefault();
        if((e.keyCode ? e.keyCode : e.which) === 13){
            $(this).trigger('click');
        }
    });
  
      // Radio button changes
      $jsInitTarget.find(fmCustoTypeRdos).change(function () {
        $(this)
          .parents('[' + attrCustoType + ']')
          .attr(attrCustoType, this.value);
      });
    }
  
    function bindFmPartialCrud ($jsInitTarget, $form) {
      var $fmAddrBase = hp_clonePartialForm($form.find(fmAddrWrap)),
          $fmContactBase = hp_clonePartialForm($form.find(fmContact)),
          $addAddrBtn = $jsInitTarget.find(fmAddAddrBtn),
          $addContactBtn = $jsInitTarget.find(fmAddContactBtn);
  
      // add address/contact form
      $addAddrBtn.add($addContactBtn).click(function (e) {
        e.preventDefault();
        var isAddAddrBtn = $(this).filter(fmAddAddrBtn).length;
  
        initFormValidation($form, true);
        hp_initFormWithPicker(isAddAddrBtn ? $fmAddrBase : $fmContactBase).insertBefore(this);
        initFormValidation($form);
        modAttrToId();
        modAttrToFor();
        contactMethodPopoverSwitch();
        rm.popovers.init();

        // Reinitialize the event native select
        $.each($('#datalist-form .fgroup--copy').find('select'), function (idx, select) {
          reset($(select));
        });

      });
  
      // remove address/contact form
      $form.on('click', '.' + fmSubCopyRemove, function(){
        initFormValidation($form, true);
        $(this).parent('.' + fmSubCopy).remove();
        initFormValidation($form);
        $('.btn--datalist-save').removeAttr('disabled').removeClass('disabled');
      });
    }
    
    function contactMethodPopoverSwitch() {
      $('[name="custodian-contact-method"]' ).change(function() {
        if('Email' === this.value || '' === this.value) {
          $(this).parents('.form-group:first').find('.icon--info').addClass('hidden');
        } else {
          $(this).parents('.form-group:first').find('.icon--info').removeClass('hidden');
        }
      })
      .trigger('change');
    }

    function modAttrToId() {
      $('[data-mod-id]').each(function(i, el) {
        var idCounter = i + 2;
        $(el).attr('id', $(el).attr('data-mod-id') + '-' + idCounter);
      });
    }
    
    function modAttrToFor() {
      $('[data-mod-for]').each(function(i, el) {
        var forCounter = i + 2;
        $(el).attr('for', $(el).attr('data-mod-for') + '-' + forCounter);
      });
    }
    
    function disableCrudBtns ($jsInitTarget, ifEnable) {
        if(!ifEnable){
          $jsInitTarget
          .find(dataListCrudBtn)
          .add($printBtn).addClass('hidden');
        } else{
          $jsInitTarget
          .find(dataListCrudBtn)
          .add($printBtn).removeClass('hidden');
        }
    }

    function hideShowDataListHeader($addCustBtn, transMode)
    {
        if(transMode === 'add'){
          dataListHeaderEventShowHide(false, true, true, true, $addCustBtn);
        }

        if(transMode === 'edit'){
          dataListHeaderEventShowHide(true, false, true, true, $addCustBtn);
        }

        if(transMode === 'cancel'){
          dataListHeaderEventShowHide(true, true, false, true, $addCustBtn);
        }
    }

    function dataListHeaderEventShowHide(addShowHide, editShowHide, addbtnShowHide, nextSibling, $addCustBtn){
        $siblingElem = $addCustBtn.next();
        $addingHeader[addShowHide ? 'addClass' : 'removeClass']('hidden');
        $editingHeader[editShowHide ? 'addClass' : 'removeClass']('hidden');
        $addCustBtn[addbtnShowHide ? 'addClass' : 'removeClass']('hidden');
        $siblingElem[nextSibling ? 'addClass' : 'removeClass']('hidden');
    }

    function hideShowGroupEditRemoveBtn()
    {
      $(dataListItem).each(function() {
        $( this ).find(dataListItemGroupBtn).addClass('hidden');
      });
    }
  
    function clearFormElemVal ($form) {
      // todo: refactor this as "reset partial form visible state"
      // show address group form (if any is hidden) & remove any cloned sub/nested forms
      $form
        .find(fmAddrOuterWrap).removeClass('hidden').end()
        .find('.' + fmSubCopy).remove().end();
  
      // remove any "change" events`, reset any selected/checked state
      $form
        .find('option').removeAttr('selected').end()
        .find('select').off(selectEvt).trigger('change').end()
        .find('input[type=text]').prop('value', '').end()
        .find('input[type=checkbox]').removeProp('checked').end()
        .find('input[type=radio]').removeProp('checked').end()
        .find('input[data-def-checked]').prop('checked', 'checked').trigger('change');

      $form[0].reset();
    }
  
    function syncListDataToFormElem ($listRows, $form) {
      $.each($listRows, function(idx, listRow){
        var $listRow = $(listRow),
            targetFmElemVal = $listRow.attr(fmElemTargetAttr),
            $fmElem = $(targetFmElemVal),
            fmElemVal = $listRow.attr(fmElemValAttr);
  
        $fmElem = $fmElem.length ? $fmElem : $form.find(fmElemTarget.join(targetFmElemVal));

        if ($fmElem.filter('select').length) {
          $fmElem.val(fmElemVal).trigger('change');
        } else if ($fmElem.filter('input[type=radio]').length || $fmElem.filter('input[type=checkbox]').length) {
          $fmElem.prop('checked', 'checked').trigger('change');
        } else if ($fmElem.filter('input[type=tel]').length) {
          $fmElem.val(fmElemVal);
        } else if ($fmElem.filter('input[type=email]').length) {
          $fmElem.val(fmElemVal);
        } else if ($fmElem.filter('input[type=text]').length) {
          $fmElem.val(fmElemVal);
        } else if ($fmElem.filter('input[type=url]').length) {
          $fmElem.val(fmElemVal);
        }
      });
    }
  
    // todo: check if it is $fmAddrBase or $fmContactBase
    function syncAltListDataToSubFormElem ($list, $form, $fmAddrBase, $fmContactBase) {
      var $altLists = $list.find(contentCopy);
      $.each($altLists, function (idx, list) {
        var $altListRows,
            $list = $(list),
            isAddr = $list.hasClass(addrContentCopy),
            isContact = $list.hasClass(contactContentCopy),
            $formClone = isAddr ?
                          hp_initFormWithPicker($fmAddrBase) :
                          (isContact ? hp_initFormWithPicker($fmContactBase) : false);
  
        if ($formClone) {
          $altListRows = $list.find(dataListItemContentRow);
          syncListDataToFormElem($altListRows, $formClone);
          $formClone.insertBefore($form.find(isAddr ? fmAddAddrBtn : fmAddContactBtn));
        }
      });
    }
  
    function moveFormToTarget ($form, $target, isBeforeTarget) {
      $target[isBeforeTarget ? 'before': 'after']($form);
    }
  
    function showForm ($form, $listItemContentToHide, doHideFm) {
      var entryId = $listItemContentToHide ?
                      $listItemContentToHide[doHideFm ? 'removeClass' : 'addClass']('hidden')
                        .parents(dataListItem).attr(attrEntryId) :
                      null;
  
      // Bind/Unbind the form validation
      initFormValidation($form, doHideFm);
  
      // Toggle the visibility of the List/Form (note: isShowList = true is equivalent to hide form)
      $form[doHideFm ? 'addClass': 'removeClass']('hidden')
        .attr(attrCurrEntryId, doHideFm ? null : entryId)
        .attr('arial-hidden', doHideFm ? true : false)
        .dirtyForms('setClean');  // set the form "dirty" state as clean state AFTER data is populated into it
    }
  
    /* Form validation plugin related methods */
    // todo: create a function that can generate from Array of rules data, e.g.
    // 1) Definition:
    // var fmValidationAddFdParams = [
    //    { fmElemName: '', ruleName: '' }
    // ]
    //
    // 2) Run the function
    // function initFormValidation ($form, fmValidationAddFdParams) {
    //    // check validation plugin first
    //    fmValidationAddFdParams.forEach(function (param) {
    //      $form.formValidation('addField', param.fmElemName, validationRules[param.ruleName]);
    //    });
    // }
    //
    function initFormValidation ($form, isUnbind) {
      if (!$form.length) { return false; }
  
      // Update the "dirty" checking state for any dynamic partial forms
      $form.dirtyForms('rescan');
  
      if (isUnbind) {
          $form.data('formValidation').destroy();
  
      } else {
        rm.validation.initValidation();   // Error Icons

        var mobileObjValidation = rm.validation.extendMobileValidation('Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.'); 
  
        $form.data('formValidation')
          .addField('custodian-name-title', validationRules.no_blacklistCharacters)
          .addField('custodian-name-given', validationRules.givenName)
          .addField('custodian-name-family', validationRules.name_required)
          .addField('custodian-name-org', validationRules.required)
          .addField('custodian-name-org', validationRules.no_blacklistCharacters)
          .addField('custodian-addr-type[]', validationRules.dropdown)
          .addField('custodian-addr-street',validationRules.no_blacklistCharacters)
          .addField('custodian-addr-street-two',validationRules.no_blacklistCharacters)
          .addField('custodian-addr-street-three',validationRules.no_blacklistCharacters)
          .addField('custodian-addr-city',validationRules.no_blacklistCharacters)
          .addField('custodian-addr-postcode', validationRules.postCode)
          .addField('custodian-contact-method', validationRules.dropdown)
          .updateMessage('custodian-contact-method', 'notEmpty', 'Please select a contact method.')
          .addField('custodian-contact-phone', validationRules.phone)
          .addField('custodian-contact-mobile', validationRules.mobile)
          .addField('custodian-contact-email', validationRules.email)
          .addField('custodian-contact-fax', validationRules.fax)
          .addField('custodian-contact-pager', validationRules.pager)
          .addField('custodian-contact-url', validationRules.url)
          .addField('custodian-contact-usage', validationRules.dropdown)
          .updateMessage('custodian-contact-usage', 'notEmpty', 'Please select the usage for the contact method.')
          .enableFieldValidators('custodian-contact-phone', true, 'notEmpty')
          .updateMessage('custodian-contact-phone', 'notEmpty', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.')
          .updateMessage('custodian-contact-phone', 'regexp', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.')
          .enableFieldValidators('custodian-contact-mobile', true, 'notEmpty')
          .updateMessage('custodian-contact-mobile', 'notEmpty', 'Please enter a valid contact number.<br/>For example:<br/>Australian mobile numbers must start with 04 or with +614. <br/>Australian landline numbers must start with an area code (For example 02 or +612). <br/>Overseas numbers must contain a country code and start with a \'+\' symbol. <br/>Numbers must be between ten and twenty characters. Use only numbers and spaces.')
          .enableFieldValidators('custodian-contact-email', true, 'notEmpty')
          .enableFieldValidators('custodian-contact-email', false, 'emailAddress') 
          .enableFieldValidators('custodian-contact-fax', true, 'notEmpty')
          .enableFieldValidators('custodian-contact-pager', true, 'notEmpty')
          .enableFieldValidators('custodian-contact-url', true, 'notEmpty');
      }
    }
  
    // Use in Backend Dev: form "save" submission
    function isFormValid ($form) {
      var $plugin = $form.length ? $form.data('formValidation') : false;
  
      if (!$plugin) return;
  
      $plugin.validate();
  
      return $plugin.isValid();
    }
    /* END Form validation plugin related methods */
  
    // Use in Backend Dev: entry removal (at modal confirmation - check if last entry)
    function isLastDataListItem ($listContainer) {
      return $listContainer.find(dataListItem).length <= 1;
    }
  
    function getFormData ($form) {
      return $form.serialize();
    }
  
    function getEntryId ($listItem) {
      return $listItem.attr(attrEntryId);
    }
  
    function getCurrEntryId ($form) {
      return $form.attr(attrCurrEntryId);
    }
  
  
    /* -- HELPER FN -- */
    // todo: make this call optional & link it with the event handler of the partial form removal button
    function hp_createSubFormRemoveBtn () {
      return $('<input>')
          .addClass('btn btn--secondary ' + fmSubCopyRemove)
          .attr({
            type: 'button',
            role: 'button',
            value: 'Remove'
          });
    }
    
    function toAttr(key, elem) {
      $(elem).attr('data-mod-' + key, $(elem).attr(key));
    } 
  
    // todo: expose this helper method as well for cloning partial form
    function hp_clonePartialForm ($partialForm) {
      // Add class, Add remove btn to the form and Remove any "id" relevant attributes
      return $partialForm
        .clone()
        .addClass(fmSubCopy)
        .append($subFormRemoveBtn.clone())
        .find('[id]').each(function(i, el) { toAttr('id', el); }).removeAttr('id').end()
        .find('[for]').each(function(i, el) { toAttr('for', el); }).removeAttr('for').end();
    }
  
    /* Bootstrap Select Picker related helper functions x2 */
    // todo: allow 1x extra param to allow if dat attribute should be changed for 'hp_initPickerFilterFmInput'
    // - i.e. if param is defined, e.g. "data-custom-attrName", then it should run the hp_initPickerFilterFmInput() fn
    function hp_initFormWithPicker ($partialForm) {
      var $clone = $partialForm.clone();
      // Find all bootstrap select picker <select> & reinit select picker plugin
      $.each($clone.find(btPickerWrap), function (idx, picker) {
        var $picker = $(picker),
            $select = $picker.find('select');
  
        $picker.replaceWith($select);
        $select.selectpicker();
        hp_initPickerFilterFmInput($select);
      });

      return $clone;
    }
  
    // todo:
    // - expose this api to allow custom binding for specific <select> that will filter
    // Params such as 'fmContactPickerName', 'fmContactWrapCustomAttr', '.fgroup'
    // -- 1) what value to check for in <select> name attribute
    // -- 2) where (parents) the custom "data-" attribute will be added to/changed
    // -- 3) name of the custom "data-" attribute
    function hp_initPickerFilterFmInput ($selects, isMainForm) {
      $selects.each(function(idx, select){
        var $select = $(select),
            isContactMethod = $select.attr('name') === fmContactPickerName;
  
        if (isContactMethod) {
          $select.on(isMainForm ? selectMainEvt : selectEvt, function(e) {
            var optionVal = $(this).find('option:selected').val().toLowerCase();
            $select.parents('.fgroup').attr(fmContactWrapCustomAttr, optionVal);
          });
        }
      });
    }
    /* END Bootstrap Select Picker related helper functions x2 */

    function reset ($selects) {
      $selects.each(function(idx, select){
        var $select = $(select),
            isContactMethod = $select.attr('name') === fmContactPickerName;
  
        if (isContactMethod) {
          $select.on('change', function(e) {
            var optionVal = $(this).find('option:selected').val().toLowerCase();
            $select.parents('.fgroup').attr(fmContactWrapCustomAttr, optionVal);
          });

          var optionVal = $(this).find('option:selected').val().toLowerCase();
          $select.parents('.fgroup').attr(fmContactWrapCustomAttr, optionVal);
        }
      });
    }

  
  })();


rm.checkboxGroup = (function () {
  'use strict';

  var initialize = function () {

    $('#cb-remove-access').change(function() {
        if ($(this).is(':checked')) {
          $('#btn-remove-access').removeClass('hidden');
        } else {
          $('#btn-remove-access').addClass('hidden');
        }
    });

  };

  return {
    init: initialize
  };
}());

// Table with Editable form inputs
/**
 * Assumption/Dependencies
 * ----------------------
 * node_modules/amcharts3/amCharts/
 *   - amcharts.js
 *   - xy.js
 *   - plugins/dataloader/dataloader.js
 *
 *
 * Useful Config Property
 * ----------------------
 * - balloonText: The Pop up which shows up when hovered over the plotted dot
 */
rm.xyChart = rm.xyChart || (function ($, AmCharts) {

  'use strict';

  if (!AmCharts) {
    console.warn('AmChart does not exist');
    return;
  }

  return {
    create: create,
    getConfig: getConfig,
    fetchJson: fetchJson,
    update: update,
    plot: plot
  };

  /* -- METHODS -- */
  /* Create a chart in a element (not necessary in DOM yet) */
  function create ($chartDiv, config) {
    var chartDiv = $chartDiv[0],
        chart = window.AmCharts.makeChart(chartDiv, config);

    chart.write(chartDiv);
    return chart;
  }

  /* Get a copy of default config or a copy by overriding the default config */
  function getConfig (overrideConfig) {
    if (typeof overrideConfig !== 'undefined' && !$.isPlainObject(overrideConfig))
      throw 'Param "overrideConfig" must be an config object';

    return $.extend({
      type: 'xy',
      addClassNAmChartses: true,
      startDuration: 0,
      hideXScrollbar: true,
      hideYScrollbar: true,
      cursorColor: '#000000',
      fontFAmChartsily: '"PT Sans", "Helvetica Neue", Helvetica, sans-serif',
      fontSize: 9,
      trendLines: [],
      graphs: [        
        {
          bullet: 'none',
          id: 'graph5',
          type: 'smoothedLine',
          lineColor: '#B88D00',
          labelPosition: 'right',
          labelText: '[[customText]]',
          xField: 'x5',
          yField: 'y5'
        },
        {
          bullet: 'none',
          id: 'graph10',
          type: 'smoothedLine',
          lineColor: '#C65001',
          labelPosition: 'right',
          labelText: '[[customText]]',
          xField: 'x10',
          yField: 'y10'
        },
        {
          bullet: 'none',
          id: 'graph25',
          type: 'smoothedLine',
          lineColor: '#0183A7',
          labelText: '[[customText]]',
          labelPosition: 'right',
          xField: 'x25',
          yField: 'y25'
        },
        {
          bullet: 'none',
          id: 'graph50',
          type: 'smoothedLine',
          lineColor: '#018E3E',
          labelText: '[[customText]]',
          labelPosition: 'right',
          xField: 'x50',
          yField: 'y50'
        },
        {
          bullet: 'none',
          id: 'graph75',
          type: 'smoothedLine',
          lineColor: '#420183',
          labelText: '[[customText]]',
          labelPosition: 'right',
          xField: 'x75',
          yField: 'y75'
        },
        {
          bullet: 'none',
          id: 'graph90',
          type: 'smoothedLine',
          lineColor: '#D301DA',
          labelText: '[[customText]]',
          labelPosition: 'right',
          xField: 'x90',
          yField: 'y90'
        },
        {
          bullet: 'none',
          id: 'graph95',
          type: 'smoothedLine',
          lineColor: '#22A594',
          labelText: '[[customText]]',
          labelPosition: 'right',
          xField: 'x95',
          yField: 'y95'
        },
        {
          type: 'smoothedLine',
          lineColor: '#195B94',
          lineThickness: 2,
          textAlign: 'left',
          xField: 'xcustom',
          yField: 'ycustom',
          lineAlpha: 1,
          bullet: 'circle',
          bulletBorderAlpha: 1,
          bulletBorderColor: '#195B94',
          bulletBorderThickness: 3,
          bulletColor: '#FFFFFF',
          bulletAlpha: 1,
          fillAlphas: 0,
          balloonText:  '<table aria-hidden="true" class="ballon--table">' +
                          '<tr>' +
                            '<th scope="row" class="ballon--table-td">' +
                              '<strong>Percentile</strong>' +
                            '</th>' +
                            '<td class="ballon--table-td">[[percentile]]</td>' +
                          '</tr>' +
                          '<tr>' +
                          '<tr>' +
                            '<th scope="row" class="ballon--table-td">' +
                              '<strong>Observation Date</strong>' +
                            '</th>' +
                            '<td class="ballon--table-td">[[observationDate]]</td>' +
                          '</tr>' +
                          '<tr>' +
                            '<th scope="row" class="ballon--table-td">' +
                              '<strong>[[ycustom4]]</strong>' +
                            '</th>' +
                            '<td class="ballon--table-td">[[observationAgeSinceDOB]]</td>' +
                          '</tr>' +
                          '<tr>' +
                            '<th scope="row" class="ballon--table-td">' +
                              '<strong>[[ycustom3]]</strong>' +
                            '</th>' +
                            '<td class="ballon--table-td">[[ycustom2]]</td>' +
                          '</tr>' +
                          '<tr>' +
                            '<th scope="row" class="ballon--table-td">' +
                              '<strong></strong>' +
                            '</th>' +
                            '<td class="ballon--table-td"></td>' +
                          '</tr>' +                          
                          '<tr>' +
                            '<th scope="row" class="ballon--table-td">' +
                              '<strong>Source</strong>' +
                            '</th>' +
                            '<td class="ballon--table-td">[[category]]</td>' +
                          '</tr>' +
                        '</table>' // jshint ignore:line
        }
      ],
      guides: [],
      valueAxes: [
        {
          id: 'yaxis24mths',
          fontSize: 12,
          axisAlpha: 0,
          positon: 'left',
          titleFontSize: 14
        }, {
          id: 'xaxis24mths',
          fontSize: 12,
          position: 'bottom',
          axisAlpha: 0,
          dashLength: 1,
          autoGridCount: false,
          gridCount: 26,
          labelFrequency: 3,
          titleFontSize: 14
        }
      ],
      allLabels: [],
      balloon: {
        cornerRadius: 2,
        adjustBorderColor: true,
        color: '#000000',
        fillColor: '#FFFFFF',
        fontSize: 14,
        horizontalPadding: 10,
        verticalPadding: 10,
        fullWidth: true,
        borderAlpha: 0.1,
        fillAlpha: 1,
        pointerWidth: 11
      }
      // legend: {
      //   data:  [{
      //       title: 'Consumer Entered Observation',
      //       color: '#3366CC'
      //   }],
      //   position: 'top',
      //   fontSize: 14,
      //   markerType: 'circle',
      //   markerBorderColor: '#007ab2',
      //   markerBorderThickness: 3,
      //   markerSize: 8
      // }
    }, overrideConfig);
  }

  /* Load Json Url directly */
  function fetchJson (jsonDataUrl, chart) {
    var ctx = this,
        d = $.Deferred();

    AmCharts.loadFile(jsonDataUrl, {}, $.proxy(function (chartData) {

      d.resolve(JSON.parse(chartData));

      if (chart) ctx.update(chart, chartData);

    }, this));

    return d;
  }

  /* Update an already created chart */
  function update (chart, dataAry, optionVal) {
    for (var i = 0; i < dataAry.length; i++) {
      if(dataAry[i].ycustom){
        dataAry[i].ycustom = dataAry[i].ycustom.split('|')[0];
        dataAry[i].ycustom2 = dataAry[i].ycustom.split('|')[0];
        dataAry[i].percentile = (dataAry[i].percentile.split('_')[0] === '') ? 'N/A' : addOrdinalSuffix(dataAry[i].percentile.split('_')[0]);
        
        var values = optionVal.split('|');        
        switch (values[0]) {
          case 'HEADCIRCUMFERENCE':
            dataAry[i].ycustom2 = dataAry[i].ycustom2 + ' centimetres';
            dataAry[i].ycustom3 = 'Head Circumference (centimetre)';
            dataAry[i].ycustom4 = getAgeLabel(values[3]);
            break;
          case 'WEIGHT':
            dataAry[i].ycustom2 = dataAry[i].ycustom2 + ' kilograms';
            dataAry[i].ycustom3 = 'Weight(kilogram)';
            dataAry[i].ycustom4 = getAgeLabel(values[3]);
            break;
          case 'HEIGHT':
            dataAry[i].ycustom2 = dataAry[i].ycustom2 + ' centimetres';
            dataAry[i].ycustom3 = 'Height(centimetre)';
            dataAry[i].ycustom4 = getAgeLabel(values[3]);
            break;
          case 'BMI':
            dataAry[i].ycustom2 = dataAry[i].ycustom2 + ' kg/m2';
            dataAry[i].ycustom3 = 'BMI(kg/m2)';
            dataAry[i].ycustom4 = getAgeLabel(values[3]);
            break;
          default:
            break;
        }

      }
    }
    hp_setAxisInterval(chart, optionVal);
    chart.dataProvider = dataAry;  // update data
    chart.validateData();                               // called after dataProvider -   redraw
    chart.animateAgain();
  }

  function getAgeLabel(ageMonths){
    if(parseInt(ageMonths) > 36){
      return 'Age(year)';
    }
    return 'Age(month)';
  }

  /* Add Ordinal Suffix */
  function addOrdinalSuffix(value) {
    var a = value % 10,
        b = value % 100;
    if (a === 1 && b !== 11) {
      return value + '<sup>st</sup>';
    }
    if (a === 2 && b !== 12) {
      return value + '<sup>nd</sup>';
    }
    if (a === 3 && b !== 13) {
      return value + '<sup>rd</sup>';
    }
    return value + '<sup>th</sup>';
  }

  /* Plot an given dataset to an existing chart container
   * (where chart has already been created in that container)
   */
  function plot ($chart, dataAry) {
      var chartElem = $chart[0],
          chart = window.AmCharts.makeChart(chartElem, rm.xyChart.getConfig());

      chart.write(chartElem);
      this.update(chart, dataAry);
  }

  function hp_setAxisInterval (chart, optionVal) {
    var values = optionVal.split('|'),
        start = values[2],
        end = values[3];

    // Update Y Axis Label
    var valueXAxis = chart.valueAxes[1];
    var valueYAxis = chart.valueAxes[0];
    switch (values[0]) {
      case 'HEADCIRCUMFERENCE':
        valueYAxis.title = 'HEAD CIRCUMFERENCE ( cm )';
        break;
      case 'WEIGHT':
        valueYAxis.title = 'WEIGHT ( kg )';
        break;
      case 'HEIGHT':
        valueYAxis.title = (start==='24' && end ==='240') ? 'HEIGHT ( cm )' : 'LENGTH ( cm )' ;
        break;
      case 'BMI':
        valueYAxis.title='BMI ( kg/m2 )';
        break;
      default:
        break;
    }

    // Update the interval & XAxis
    if(start === '0' && end === '24'){
      valueXAxis.labelFrequency=3;
      valueXAxis.gridCount=26;
      valueXAxis.minimum=0;
      valueXAxis.maximum=25;
      valueXAxis.title = 'AGE (month)';

    } else if(start === '0' && end === '36'){
      valueXAxis.labelFrequency=3;
      valueXAxis.gridCount=38;
      valueXAxis.minimum=0;
      valueXAxis.maximum=37;
      valueXAxis.title = 'AGE (month)';

    } else if(start === '24' && end === '240') {
      valueXAxis.labelFrequency=2;
      valueXAxis.gridCount=15;
      valueXAxis.minimum=2;
      valueXAxis.maximum=21;
      valueXAxis.showLastLabel=false;
      valueXAxis.title = 'AGE (year)';
    }
  }

})(window.jQuery, window.AmCharts);

rm.xyChart4 = rm.xyChart4 || (function ($, am4core, am4charts) {

  'use strict';

  if (!am4core) {
    console.warn('AmChart does not exist');
    return;
  }
  
  //am4core.useTheme(am4themes_animated); //jshint ignore:line;

  return {
    create: create,
    update: update,
    getConfig: getConfig
  };

  /* -- METHODS -- */
  /* Create a chart in a element (not necessary in DOM yet) */
  function create ($chartDiv, config) {
    var chartDiv = $chartDiv[0],
    chart = window.am4core.create(chartDiv, am4charts.XYChart);
    
    // Create axes
    /*var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
    categoryAxis.dataFields.category = 'x3';
    categoryAxis.title.text = 'Months';*/
    
    var valueXAxis = chart.xAxes.push(new am4charts.ValueAxis());
    valueXAxis.title.text = 'Months';

    var valueYAxis = chart.yAxes.push(new am4charts.ValueAxis());
    valueYAxis.title.text = 'Height';
    
    return chart;
  }
  
  function update(chart, dataAry, optionVal) {
    
    chart.data = dataAry;
    
    var axesArray = [];
   
    dataAry.map(function(dataObj, i) {
      var firstIndex = Object.keys(dataObj)[0];
      if(/[xy](\d+)/.test(firstIndex)) {
        var finalIndex = firstIndex.replace('x','').replace('y','');
        if(axesArray.indexOf(finalIndex) === -1) axesArray.push(finalIndex);
      }
    });
    
    axesArray.map(function(axes, el) {
      createSeriesAndAxis(chart, 'y'+axes, 'x'+axes);
    });
    
    chart.leftAxesContainer.layout = 'absolute';
    chart.leftAxesContainer.x = 0;
    chart.leftAxesContainer.y = 0;
    
    /* Process data */
    
    /*   
    hp_setAxisInterval(chart, optionVal);
    
    createSeriesAndAxis(chart, 'y3', 'x3', 'Series #1');
    createSeriesAndAxis(chart, 'y5', 'x5', 'Series #2');

    chart.leftAxesContainer.layout = 'absolute';
    chart.leftAxesContainer.x = 0;
    chart.leftAxesContainer.y = 0;*/
    
  }
  
  function createSeriesAndAxis(chart, field, valuex) {
    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
    
    var series = chart.series.push(new am4charts.LineSeries());
    series.dataFields.valueY = field;
    series.dataFields.valueX = valuex;
    series.strokeWidth = 1;
    series.yAxis = valueAxis;
    
    /*if (topMargin && bottomMargin) {
      valueAxis.marginTop = 10;
      valueAxis.marginBottom = 10;
    }
    else {
      if (topMargin) {
        valueAxis.marginTop = 20;
      }
      if (bottomMargin) {
        valueAxis.marginBottom = 20;
      }
    }
    
    var bullet = series.bullets.push(new am4charts.CircleBullet());
    bullet.circle.stroke = am4core.color('#fff');
    bullet.circle.strokeWidth = 2;*/
  }
  
  function getConfig() {
    
  }
  
  function hp_setAxisInterval (chart, optionVal) {
    var values = optionVal.split('|'),
        start = values[2],
        end = values[3];

    // Update Y Axis Label
    var valueXAxis = chart.xAxes._values[0];
    var valueYAxis = chart.yAxes._values[0];
    switch (values[0]) {
      case 'HEADCIRCUMFERENCE':
        valueYAxis.title.text = 'HEAD CIRCUMFERENCE ( cm )';
        break;
      case 'WEIGHT':
        valueYAxis.title.text = 'WEIGHT ( kg )';
        break;
      case 'HEIGHT':
        valueYAxis.title.text = (start==='24' && end ==='240') ? 'HEIGHT ( cm )' : 'LENGTH ( cm )' ;
        break;
      case 'BMI':
        valueYAxis.title.text ='BMI ( kg/m2 )';
        break;
      default:
        break;
    }
    
    // Update the interval & XAxis
    if(start === '0' && end === '24'){
      valueXAxis._frequency = 3;
      valueXAxis._gridCount = 26;
      valueXAxis.minX = 0;
      valueXAxis.maxX = 25;
      valueXAxis.title.text = 'AGE (month)';

    } else if(start === '0' && end === '36'){
      valueXAxis._frequency = 3;
      valueXAxis._gridCount = 38;
      valueXAxis.minX = 0;
      valueXAxis.maxX = 37;
      valueXAxis.title.text = 'AGE (month)';

    } else if(start === '24' && end === '240') {
      //valueXAxis.showLastLabel=false;
      valueXAxis._frequency = 2;
      valueXAxis._gridCount = 15;
      valueXAxis.minX = 2;
      valueXAxis.maxX = 21;
      valueXAxis.title.text = 'AGE (year)';
    }
  }
  
  function getAgeLabel(ageMonths){
    if(parseInt(ageMonths) > 36){
      return 'Age(year)';
    }
    return 'Age(month)';
  }
  
  /* Add Ordinal Suffix */
  function addOrdinalSuffix(value) {
    var a = value % 10,
        b = value % 100;
    if (a === 1 && b !== 11) {
      return value + '<sup>st</sup>';
    }
    if (a === 2 && b !== 12) {
      return value + '<sup>nd</sup>';
    }
    if (a === 3 && b !== 13) {
      return value + '<sup>rd</sup>';
    }
    return value + '<sup>th</sup>';
  }

})(window.jQuery, window.am4core, window.am4charts);
/**
 * ----------------------------------------------------------------
 * Purpose
 * ----------------------------------------------------------------
 * - This is a page level module that links the interactions between table and chart
 * - For API Usage, please refer to what is returned by this Module and go to comment of each function for detailed Usage
 * - The page will be empty by default, to init, use the following code:
 *   rm.tbfm.init('/js/data/table-form_table-data.json', './js/data/table-form_xychart-data.json');
 *
 *
 * ----------------------------------------------------------------
 * Dependency (refer to IIFE arguments)
 * ----------------------------------------------------------------
 *   - rm.xyChart (AmChart plugin)
 *   - rm.validation (formValidation plugin)
 *   - rm.datepicker (Datepicker plugin)
 *   - rm.dirtyforms (Dirty Form plugin)
 *   - rm.calc
 *   - rm.table
 *   - rm.form.util
 *   - rm.toolbar
 *   - window.moment
 *
 *
 * ----------------------------------------------------------------
 * Important Classes & Attributes ("." means class, "[]" means attribute)
 * ----------------------------------------------------------------
 * form.tbfm__form
 *   <!-- Controls -->
 *   input[type=button].tbfm__form__add           // add <tr>
 *   input[type=checkbox].tbfm__form__tb-filter   // filter <tr> based on "data-age-range" attribute
 *   th[data-tbcols-show-fixed]                   // table column which will always be present (i.e. exclude from 'data-tbcols-show')
 *   option[data-tbcols-show]                     // "data-tbcols-show" is used to control which columns to show
 *
 *   <!-- Table -->
 *   table[data-tbcols-show]                  // the "data-tbcols-show" is for manipulating which table columns to hide/show and has a default value
 *
 *     <!-- Table row editable -->
 *     tr.tbfm__form__template                // <tr> with form for templating (cached & removed to prevent conflict with data table plugin)
 *     tr.tbfm__entry--new                    // new table row (edit mode)
 *     tr.tbfm__entry--edit[data-entry-id]    // existing table row (edit mode)
 *       <form-input-element>[data-fm-elem-src]       // values of attribute "data-fm-elem-src" and "data-fm-elem-target" must match in order to data population to work
 *       <form-input-element>[data-oneof-required]    // "data-oneof-required" is used for validating at least 1x input in a <tr>
 *
 *     <!-- Table row non-editable (view only) -->
 *     tr.tbfm__entry--view--template         // <tr> w/o form for templating (cached & removed - used for creating <tr> from JSON data)
 *     tr.tbfm__entry--view[data-entry-id]    // existing table row (view mode)
 *       td[data-fm-elem-target]              // "data-fm-elem-target" attr. defines where to find matching form element when populating <tr> data to form elements
 *       || OR
 *       td[data-age-unit]                    // means this does not have a matching form element (usually for calculated data)
 *       td[data-readonly-cal]                // means this does not have a matching form element (usually for calculated data)
 *         span.tbfm__entry--view__td-data    // actual container for the table cell data
 *         || OR
 *         button.tbfm__entry--view__remove   // remove button for a <tr>
 *
 *
 * --------------------------------
 * Related Jira No
 * --------------------------------
 * RP-1370
 *
 */

   /* jshint ignore:start */

rm.tbfm = rm.tbfm || (function (rmXyChart, rmCalc, rmFormUtil, rmValidation, rmTable, rmDatePicker, rmToolbar, moment) {

  'use strict';
  
  if($(document.body).hasClass('amcharts4')) {
    rmXyChart = rm.xyChart4;
  }

  /* -- VARIABLES -- */
  //// Name Constant for selector, attribute, class, evt etc
  var NS = hp_configNS();
  //// Data Model for Form Submission
  var Model = {
        chartJsonUrl: null,         // set from table json data response
        datePickerMinDate: null,    // set from table json data response
        state: {
          enabled: false,       // <boolean> - true: when tbfm has been initialized
          tableData: false,     // <boolean> - true: when table has data (not empty or no error)
          currChartId: null,    // <string_chartId> - chart id value (set when User select a chart)
          currChartData: null,   // true | 'emt' | 'err' - state of the chart json data call (true: successful & not empty)
          currDocId: null
        },
        postData: {             // contains the ajax post data
          action: null,
          currEntryId: null,
          fmData: null,
          cache: null           // set from table json data response
        }
      };

  //// Module (rm.tbfm, i.e. what is return)
  var Module = {
        init: init,
        loadChartData: initChartDataLink,

        // Cache fixed element (as context)
        getCtx: getCtx,
        updateCtx: updateCtx,     // for removing & caching template element
        setupEvts: setupEvts,

        // Form related
        setupFormValidation: setupFormValidation,
        setValidationCallback: setValidationCallback,
        validateAll: validateAll,
        createPartialForm: createPartialForm,
        removePartialForm: removePartialForm,
        popTrDataToPartialForm: popTrDataToPartialForm,

        // Table related
        fetchJson: fetchJson,
        createTbMarkup: createTbMarkup,
        setupTbPaginationAndFilter: setupTbPaginationAndFilter,
        enableTbInteraction: enableTbInteraction,
        showTbCols: showTbCols,
        showTbRows: showTbRows,

        // Element states handling
        hdDataBoundState: hdDataBoundState,
        hdInputBoundState: hdInputBoundState,

        // Ajax Post Data (table) - for backend usage
        setDataErrMsg: setDataErrMsg,
        enableAjaxLoader: enableAjaxLoader,
        setCurrDocId: setCurrDocId,
        getPostData: null,       // this method is only initialized when ctx is setup

        // Toolbar related
        setActiveCbForToolbar: setActiveCbForToolbar
      };


  /* -- PRIMARY LOGIC -- */
  return Module;


  /* -- METHODS -- */
  /*
   * Initializing the module with JSON Data (Call in your page specific js) & Event Binding :
   * - Convention:
   *   rm.tbfm.init(<tbJsonDataUrl>, <chartJsonDataUrl>);
   *
   * - Example:
   *   rm.tbfm.init('/js/data/table-form_table-data.json', './js/data/table-form_xychart-data.json');
   *
   * - Note:
   *   -- both urls are relative to the page html file (located under dist/<page-name>.html)
   *   -- <chartJsonDataUrl>
   *       -- should conform to data structre in "FEDResources/js/data/table-form_table-data.json"
   *       -- is optional
   *   -- <tbJsonDataUrl>
   *       -- should conform to data structure in "FEDResources/js/data/table-form_xychart-data.json"
   */
  function initChartDataLink(chartJsonDataUrl, tbJsonDataUrl) {
    var $wrap = $(NS.slr.initTarget),
        ctx;

    if (typeof chartJsonDataUrl !== 'string') {
      return;
    }

    if ($wrap.length >= 2) {
      return console.warn(NS.msg.classLimit);
    }

    if (Model.state.enabled) {
      return console.warn(NS.msg.initLimit);
    }

    if (Model.state.enabled) return console.warn(NS.msg.initLimit);
    //load data

    // Create context that contains cache fixed elements to be used
    ctx = hp_configCtx($wrap);
    Module.getCtx = Module.getCtx.bind(ctx);
    Module.enableAjaxLoader(ctx.loadingIconTb, true);

   Module.fetchJson(tbJsonDataUrl)
      .fail(function (err) {
        Module.setDataErrMsg(err.responseText);
        Module.hdDataBoundState('table', {type: 'err'});
      })
      .done(function (resp) {
        Module.updateCtx(ctx);
        Module.getPostData = hp_createGetPostDataFn(ctx);
        Module.enableAjaxLoader(ctx.loadingIconTb, false);
        Module.setupEvts(ctx);
        Model.postData.cache = resp;
        Model.chartJsonUrl = chartJsonDataUrl;
      });

    ctx.fmSelectFilter.prop('disabled',  false);
  }//

  function init (tbJsonDataUrl, chartJsonDataUrl) {
    var $wrap = $(NS.slr.initTarget),
        ctx;

    // Exit/Warn
    if (typeof tbJsonDataUrl !== 'string' || typeof chartJsonDataUrl !== 'string') return;
    if ($wrap.length >= 2) return console.warn(NS.msg.classLimit);
    if (Model.state.enabled) return console.warn(NS.msg.initLimit);

    // Create context that contains cache fixed elements to be used
    ctx = hp_configCtx($wrap);
    Model.state.enabled = true;
    Module.getCtx = Module.getCtx.bind(ctx);
    Module.enableAjaxLoader(ctx.loadingIconTb, true);
    Module.setActiveCbForToolbar();

    // Create table markup from json data & Setup Chart
    Module.fetchJson(tbJsonDataUrl)
      .fail(function (err) {
        Module.setDataErrMsg(err.responseText);
        Module.hdDataBoundState('table', {type: 'err'});
      })
      .done(function (resp) {
        // Preliminary Setup for Form, Table, Template
        Module.setupFormValidation.call(ctx);               // Setup the form validation (prior to template removal)
        Module.showTbCols(false, false);                  // Show/Hide Def. Cols
        Module.updateCtx(ctx);                              // Update Template element ctx (after plugins init)
        Module.getPostData = hp_createGetPostDataFn(ctx);
        Module.enableAjaxLoader(ctx.loadingIconTb, false);  // Remove Ajax loader
        Module.setupEvts(ctx);

        // Cache the respose (for sending back later)
        Model.postData.cache = resp;
        Model.datePickerMinDate = moment(resp.dob, 'DD-MMM-YYYY');

        // Return & Handle exception if data is empty, but Show Table
        if (!resp.tbData.length) return Module.hdDataBoundState('table', {type: 'emt'});

        // When data is not empty
        Model.chartJsonUrl = chartJsonDataUrl;

        // Create table markup, Init Plugin relevant to table
        ctx.scsMsgTbJson.eq(0).html(resp.lastUpdated);       // Update the msg
        Module.createTbMarkup(resp, ctx);
        Module.setupTbPaginationAndFilter(ctx.tb, ctx.fmSelectFilter);
        rmTable.paginateScroll();
        Module.hdDataBoundState('table', {type: true});
      });
  }

  /*
   * todo:
   *
   */
  function getCtx () {
    return this;
  }

  /*
   * todo:
   *
   */
  function updateCtx (ctx) {
    ctx.fmTplSrc = ctx.fmTplSrc.remove();  // Setup default columns to show, Then remove and cache the template
    ctx.trTpl = ctx.trTpl.remove();        // else DataTable treats them as normal tables & show wrong pagination no.)
  }

  function setupEvts (ctx, evtConfig) {
    hp_bindOnEntryClick.call(ctx);
    hp_bindOnAddEntryBtnClick.call(ctx);
    hp_bindOnEntryRmvBtnClick.call(ctx);
    hp_bindOnFmCnclBtnClick.call(ctx);
    hp_bindOnFmTbRowFilter.call(ctx);
    hp_bindOnFmChartFilter.call(ctx);
  }

  /*
   * - Enable/Disable the Animated Ajax loader
   * - Used when loading Table JSON data OR loading/plotting Chart Json data
   */
  function enableAjaxLoader ($ajaxLoader, isEnabled) {
    $ajaxLoader
      [isEnabled ? 'addClass' : 'removeClass'](NS.cls.ajaxLoadingOn)
      [isEnabled ? 'removeClass' : 'addClass']('hidden');
  }

  function setCurrDocId(docId){
    Model.state.currDocId = docId;
  }

  /*
   * - Setup Form validation from beginning so that later on dyanmic form elements can be added as part
   *   of the validation
   * - name attribute such as "obsv-date[]" is a convention used in the form validation plugin
   *   to represent similar input
   * - only run once at the beginning
   */
  function setupFormValidation () {
    var ctx = this,
        vRules = rmValidation.getValidators(),
        $plugin;

    // Set the custom callback by Overriding the original empty $.noop() function
    Module.setValidationCallback(ctx, vRules, [
      { vPropName: 'head', maxValAllowed: 9999.9, maxDeciPlAllowed: 1 },
      { vPropName: 'height', maxValAllowed: 9999.9, maxDeciPlAllowed: 1 },
      { vPropName: 'weight', maxValAllowed: 9999.999, maxDeciPlAllowed: 3 },
    ]);

    // Bind the rules to specific elements & Init
    rmValidation.customInit(ctx.fm, [
      ['addField', 'obsv-date[]', vRules.date],
      ['addField', 'obsv-head-ccf[]', vRules.head],
      ['addField', 'obsv-height[]', vRules.height],
      ['addField', 'obsv-weight[]', vRules.weight]
    ]);

    $plugin = ctx.fm.data('formValidation');

    // Custom Validation binding
    ctx.fm
    .on('keydown', NS.slr.fmElmSrc, function (e) {
      // - Validate the whole form when enter key is pressed
      if (e.keyCode === 13) {
        e.stopImmediatePropagation();   // stop 'blur' event from being fired
        Module.validateAll();
      }
    })
    .on('keyup', NS.slr.fmElmSrc, function(){
      // - Validate all the "oneof-required" inputs in that table row
      $(this)
        .parents('tr')
        .find(NS.slr.fmElmOneOfReq)
        .each(function(){ $plugin.revalidateField($(this)); });
    })
    .on('blur', NS.slr.fmElmSrc, function () {
      // - Validate the focusout/blurred input element
      $plugin.revalidateField($(this));
    });
  }

  /**
   * Create a custom callback function an existing validatin rules (override)
   * - this ONLY validates ONE FIELD ONLY!!
   * - used in setupFormValidatin
   * - Make sure:
   *   -- the rules exists and nested property is an object
   *   -- the default value/callback defined in the existing validation rules
   *       is $.noop else it may cause an error in formValidation plugin
   */
  function setValidationCallback (ctx, vRules, cbConfigs) {
    cbConfigs.forEach(function(cbConfig){
      if (!vRules[cbConfig.vPropName]) return;

      // Cache the regex and suffix string
      var _deciPlFlag = cbConfig.maxDeciPlAllowed + 1,
          nineRegEx = '\\.\\d{' + _deciPlFlag + ',}',
          nineSuffix = '';

      // Process the suffix which will be added
      for (var i=0; i < cbConfig.maxDeciPlAllowed; i++) {
        nineSuffix += '9';
      }

      // Define Callback for each validation rule
      vRules[cbConfig.vPropName].validators.callback.callback = function (strVal, validator, $fd) {
        strVal = $.trim(strVal);

        // 1. Common helper fn to check if at least one of the input has value in multiple rows
        // - Check if other inputs is filled (true: has value;  false: no value;)
        var $currTr =  $fd.parents('tr'),
            result = hp_isAnyInputFilled($currTr),
            isAnyInputFilledInCurrTr = result.curr,
            isAnyInputFilledInAllTr = result.all;

        // 2. Specific Validation
        // - Get the conditions
        //   Note: regex is not cached here for now (cached one doesn't work sometimes)
        var numVal = strVal ? parseFloat(strVal, 10) : strVal,
            _dots = strVal.match(/\./g),
            isEmpty = !strVal,
            hsNonnumOrNondot = /[^\.0-9]/g.test(strVal),
            hsMoreThanOneDot = _dots && _dots.length > 1,
            isNotWithinRange = numVal < 0 || numVal > cbConfig.maxValAllowed,
            hsMoreThanAllowedDeciPl =  new RegExp(nineRegEx, 'g').test(strVal),
            messageField;

        // If it is valid, it should also hide the oneof-required msg
        ctx.oneOfReqMsg[isAnyInputFilledInAllTr ? 'addClass' : 'removeClass']('hidden');

        // - Validate
        if (!isAnyInputFilledInCurrTr && isEmpty) {
          return { valid: false, message: 'Please enter at least one measurement for each date.' };

        } else if (hsMoreThanAllowedDeciPl) {
          return {
            valid: false,
            message: 'Please enter no more than ' +
                      cbConfig.maxDeciPlAllowed +
                      ' decimal place' +
                      (cbConfig.maxDeciPlAllowed === 1 ? '.' : 's.')
          };

        } else if (hsNonnumOrNondot || hsMoreThanOneDot || isNotWithinRange) {

          return { valid: false, message: 'Please enter a number between 0 and 9999.' + nineSuffix + '.'};

        }  else {
          return { valid: true, message: '' };
        }
      };
    });

    return this;
  }

  function validateAll () {
    // - Check if other inputs is filled (true: has value;  false: no value;)
    var ctx = this.getCtx(),
        $plugin, $inputs,
        $tr, isAnyInputFilledInAllTr;

    // Revalidate the whole form (i.e. every field)
    $plugin = ctx.fm.data('formValidation');
    $inputs = ctx.fm.find(NS.slr.fmElmSrc);
    $.each($inputs, function(idx){
      $plugin.revalidateField($(this));
    });

    // - Show the final validation msg at the top of the table
/*    $tr = ctx.tb.find([NS.slr.entryEdit, NS.slr.entryNew].join(','));
    isAnyInputFilledInAllTr = hp_isAnyInputFilled($tr, false).all;
    ctx.oneOfReqMsg[isAnyInputFilledInAllTr ? 'addClass' : 'removeClass']('hidden');*/
  }


  /*
   * - Clone the template, i.e. <tr> with form elements
   * - populate the <tr> data to the form (if any)
   * - modify the attribute/classes so that it is no longer a template
   * - initialize form elements if it involves any plugin (e.g. bootstrap 3 datepicker, validation, dirtyform)
   */
  function createPartialForm (ctx, $tr) {
    //// Clone the partial form
    var $fmTplClone = ctx.fmTplSrc.clone(),
        $fmElems = $fmTplClone.find(NS.slr.fmElmSrc),
        trId = 'new',
        $datePicker;

    //generate randomId and for
    $fmTplClone.find('.form-group').each(function(i, el) {
      var randomValue = 'input-' + window.btoa(Date.now() + i );

      $(el).find('label').attr('for', randomValue);
      $(el).find('input, select').attr('id', randomValue);
    });

    //// Process the form template
    // - If <tr> exists, Populate data from <tr> (if needed)
    if ($tr && $tr.length) {
      trId = $tr.attr(NS.atr.entryId);
      Module.popTrDataToPartialForm($fmTplClone, $tr);

    // - If <tr> not exist (i.e. new empty form) - remove the bootstrap modal attr
    // so that it does not triggered when remove
    } else {
      $fmTplClone.find(NS.slr.fmRmvBtn).removeAttr(NS.atr.bsModalTarget, NS.atr.bsModalToggle);
    }

    //// Insert the clone & Show (after everything is done)
    $fmTplClone
      [$tr ? 'insertAfter' : 'prependTo']($tr ? $tr : ctx.tBody)
      .addClass($tr ? NS.cls.entryEdit : NS.cls.entryNew)
      .removeClass(NS.cls.fmTpl + ' hidden');

    //// Update plugins
    // Re-init some of the plugin (if needed), e.g. datepicker, select-dropdown
    $datePicker = $fmTplClone.find(NS.slr.fmDatepicker);
    rmDatePicker.init($datePicker);
    $datePicker.data('DateTimePicker').minDate(Model.datePickerMinDate);
    $datePicker.find('input').focus();

    // Update the form dirty state and validation
    rmValidation.update(ctx.fm, $fmElems, 'growthChart');

    // Dont Reset dirtyform (i.e. enable the save button) if
    // - is Add entry mode && (if No new entry already exists    OR    if the form is already dirty)
    var totalNewEntry =ctx.fm.find(NS.slr.entryNew).length;
    if (   !$tr && ( totalNewEntry <= 1 || (totalNewEntry > 1 && !ctx.fm.dirtyForms('isDirty')) )    ) return;

    ctx.fm.dirtyForms('rescan');
  }

  /*
   * - Remove all the relevant form elements from the DOM when User exits the edit mode by clicking the "cancel" button
   * - Update the validation, dirtyform
   */
  function removePartialForm ($form, $tr) {
    var $fmElems = $tr.find(NS.slr.fmElmSrc);

    rmValidation.update($form, $fmElems, 'growthChart', true);   // remove the validation for the partial form 1st
    $tr.remove();                 // remove the <tr> containing the partial forms
    $form.dirtyForms('rescan');   // Update dirty state of the <form> element
    $(NS.slr.fmAddBtn).focus();
  }

  /*
   * - Populate the value inside <tr> to the matching form elements
   * - this is achieved via having attributes "data-fm-elem-target" (value) to "data-fm-elem-src" (form element)
   */
  function popTrDataToPartialForm ($form, $tr) {
    $.each($tr.find('td'), function(idx, td){
      var $td = $(td),
          fmTargetAttr = $td.attr(NS.atr.fmElmTarget),
          $fmElem, fmElemVal;

      if (!fmTargetAttr) return;

      $fmElem = $form.find(NS.slr.fmElmSrcVal.join(fmTargetAttr));
      fmElemVal = $td.find(NS.slr.entryTdData).html();

      if ($fmElem.filter('select').length) {
        $fmElem.val(fmElemVal).trigger('change');

      } else if ($fmElem.filter('input[type=radio]').length || $fmElem.filter('input[type=checkbox]').length) {
        $fmElem.prop('checked', 'checked').trigger('change');

      } else if ($fmElem.filter('input[type=text]').length || $fmElem.filter('input[type=number]').length || $fmElem.filter('textarea').length) {
        $fmElem.val(fmElemVal);
      }
    });
  }

  /*
   * - Disable the <tr> edit and disable clicking the "add observation"
   * - used when Select chart option
   */
  function enableTbInteraction ($tb, $fmAddBtn, doDisable) {
    $tb[doDisable ? 'addClass': 'removeClass'](NS.cls.fmDisabled);
    if (!rm.readOnlyMode.state.isReadOnly) {
      $fmAddBtn.prop('disabled', doDisable ? true : false);
    }
  }

  /*
   *  - Show specific table columns by passing in column index (start from 1)
   *    via attribute "data-tbcols-show-fixed
   */
  function showTbCols (specificColNthChildIdxs, useDataTableTbRows) {
    var ctx = Module.getCtx(),                                 // cache
        defColNthChildIdx = ctx.tb.attr(NS.atr.tbColsShow),    // cache
        $tr = useDataTableTbRows ? ctx.tb.DataTable().rows().nodes().to$() : ctx.tb.find('tbody tr');

    // Reset back to default tables Columns if specificColNthChildIdxs are not defined
    specificColNthChildIdxs = specificColNthChildIdxs ? specificColNthChildIdxs : defColNthChildIdx;

    ctx.th.not(NS.slr.tbColsFixedVsb).each(function (idx){
      // Get the nthChild index of the <th>
      var thIdx = ctx.th.index(this) + 1,
          doShow = specificColNthChildIdxs.indexOf(thIdx) !== -1,
          thTdSelector = NS.slr.tbCols.join(thIdx);

      // Check if the "thIdx" is in "specificColNthChildIdxs" - show (true) /hide (false) the table column at that index
      // - Table Header (working)
      ctx.tb.find(thTdSelector).filter('th')[doShow ? 'removeClass' : 'addClass']('hidden');

      // - Table Body rows
      $tr.find(thTdSelector)[doShow ? 'removeClass' : 'addClass']('hidden');
    });
  }

  /*
   * - Show specific table rows by checking if  "data-tbrows-show" attr of <tr> contains
   *   the "data-tbrows-show" attr value of the selected <option>
   * - the $tb.DataTable().draw() triggers the callback (which checks for table row matches)
   *    added earlier when DataTable is initialized (after table markup is created)
   */
  function showTbRows ($tb) {
    $tb.DataTable().draw();
  }

  /*
   * - Get the json data and pass the parsed JSON object
   *   in order to create the table as well as perform calculation
   */
  function fetchJson (url, dataToSend) {
    return $.ajax({
      url: url,
      dataType: 'json',
      data: dataToSend ? dataToSend : false
    });
  }

  /*
   * - Create the table rows/cells which will be added to the table
   * - also involves some calculation in order to generate data for a few columns
   */
  function createTbMarkup (resp, ctx) {
    // Note: This Fn only run once
    var parsedJsonAry = resp.tbData,
        recordDob = resp.dob,
        attrMap = {
          date: NS.slr.fmElmTarget.join('obsv-date'),
          head: NS.slr.fmElmTarget.join('obsv-head-ccf'),
          weight: NS.slr.fmElmTarget.join('obsv-weight'),
          height: NS.slr.fmElmTarget.join('obsv-height')
        },
        keyNames = Object.getOwnPropertyNames(attrMap),
        $temp = $('<div>');

    // Loop thru the parsed json array
    parsedJsonAry.forEach(function(entry){
      var $td, val,
          trEntryId = entry.id,
          $trClone = ctx.trTpl.clone(),
          tdAge = rmCalc.ageAndRange(entry.date, recordDob),
          tdBmi = rmCalc.bmi(parseFloat(entry.weight, 10), parseFloat(entry.height, 10)/100),
          dateInMs = entry.dateTime;

      $trClone
        .attr(NS.atr.entryId, trEntryId)
        .attr(NS.atr.trShow, tdAge.range)
        .attr(NS.atr.trPreSortDate, dateInMs)
        .find(NS.slr.tdMth + ' ' + NS.slr.entryTdData).html(tdAge.asMth === 0 ? 'Birth' : tdAge.asMth)
        .end().find(NS.slr.tdYr + ' ' + NS.slr.entryTdData).html(Math.floor(tdAge.asYrs))
        .end().find(NS.slr.tdBmi + ' ' + NS.slr.entryTdData).html(tdBmi);

      // Specific table cell
      $trClone
        .removeClass('hidden ' + NS.cls.entryViewTpl)
        .addClass(NS.cls.entryView);

      // create the content or attribute (id)
      keyNames.forEach(function(keyName){
        var val = entry[keyName],
            $td = $trClone.find(attrMap[keyName]);

        $td.find(NS.slr.entryTdData).html(val ? val : '');
      });

      // add to the empty container 1st
      $temp.append($trClone);
    });

    // Add to <tbody> & Show <table>
    return $temp.contents().appendTo(ctx.tb.find('tbody'));
  }

  /*
   * - Custom initialize (after table markup is created, else where is the data?)
   * - add a custom callback when the DataTable().draw() is called so that it can determine/filter
   *   which <tr> to show/hide
   * - The dataTable.ext.search callback only get triggerred when chart is selected
   */
  function setupTbPaginationAndFilter ($tb, $fmSelectFilter) {
    var $dataTableTr;

    // Sort the table first
    //    $tb.DataTable().column('0').order('desc').draw(); is not used here
    //    becauuse it will not sort based on the content of html elem inside <td>
    rm.tbPreSort.init();

    // Init Plugin
    rmTable.initDataTable($tb.removeClass('hidden'));

    // Cache the table rows (since after Datable filter it will not appear in DOM)
    $dataTableTr = $tb.DataTable().rows().nodes().to$();

    // Add a custom filter to only show matched table rows
    $.fn.dataTable.ext.search.push(function(settings, data, idx) {
      // Show All table rows if checkbox is unchecked
      if (!Module.getCtx().fmTbFilter.prop('checked')) return true;

      // Show specific table rows if otherwise
      var $currOption = $fmSelectFilter.find('option:selected'),
          tbRowToShow = $currOption.attr(NS.atr.trShow),
          tbColToShow = $currOption.attr(NS.atr.tbColsShow).split(',')[1],    // get the last col (variation)
          $tr = $dataTableTr.eq(idx),
          isMatch = !!$tr.filter(NS.slr.trShow.join(tbRowToShow)).length;

      // Get the corresponding table cells
      var $tdCells = $tr.find( ( tbColToShow === 7 ) ?
                           ( 'td:nth-child(5), td:nth-child(6)' ) :
                           ( 'td:nth-child(' + tbColToShow + ')' )
                        ).find(NS.slr.entryTdData);

      // Check if data is empty
      var isValEmt = Array.prototype.every.call($tdCells, function(item, idx){
        return $.trim($tdCells.eq(idx).html());
      });

      return isMatch && isValEmt;
    });
  }

  /**
   * Handle the Element state ONLY (show/hide, disable/enable)
   * in different Scenarios when dealing with either table data OR chart data
   *
   * @boundType     (required) "table" | "chart"
   * @resultState   (optional) "err"  |  "emt"
   */
  function hdDataBoundState (boundType, resultState) {
    var ctx = this.getCtx();

    if (boundType === 'table') {
      Model.state.tableData = resultState.type ? resultState.type : Model.state.tableData;
      Module.enableAjaxLoader(ctx.loadingIconTb, false);
      switch (resultState.type) {
        // Case 1 - table call error
        case 'err':
          // rmToolbar.toggleBtns(false);
          ctx.errMsgJsonCall.removeClass('hidden');
          break;

        // Case 2 - table data is empty
        case 'emt':
          rmToolbar.toggleBtns(false);
          ctx.emtMsgTbJson.removeClass('hidden');
          if (!rm.readOnlyMode.state.isReadOnly) ctx.fmAddBtn.prop('disabled', false);
          break;

        // Default - table data not empty
        default:
          rmToolbar.toggleBtns(true);
          $('.toolbar-nav').removeClass('hidden');
           ctx.scsMsgTbJson.add(ctx.tb).removeClass('hidden');   // show tb & success tb msg (if not shown)
          ctx.emtMsgTbJson.addClass('hidden');                  // hide any prev. msg
          if (!rm.readOnlyMode.state.isReadOnly) ctx.fmAddBtn.prop('disabled', false);
          ctx.fmSelectFilter
            .prop('disabled',  false);
          break;
      }

    } else if (boundType === 'chart') {
      Model.state.currChartId = resultState.currChartId;
      Model.state.currChartData = resultState.type;
      Module.enableAjaxLoader(ctx.loadingIconChart, false);
      // if (Model.state.currChartData !== true) ctx.emtMsgChartJson.removeClass('hidden');
    }
  }

  function hdInputBoundState (doEnable, isEditMode) {
    var ctx = this.getCtx();

    // In Edit mode
    // - if it is prev. enabled, toggle disabling
    // - if it is currently disabled (i.e. NOT prev.enabled), leave it as it is
    if (Model.state.currChartId) ctx.fmTbFilter.prop('disabled', doEnable ? true : false);

    // In Add mode - disable the "save" button by default
    if (!isEditMode && !ctx.fm.dirtyForms('isDirty')) ctx.fmSaveNewBtn.prop('disabled', true);

    // Input Hint msg & Form Confirmation Buttons
    ctx.hintMsgInputMode
      .add(ctx.fmConfirmBtns)
      [doEnable ? 'removeClass' : 'addClass']('hidden');

    // Hide any invalid msg & Show Entry previously hidden in the Input Mode
    if (!doEnable) {
      ctx.oneOfReqMsg.addClass('hidden');
      ctx.tb.find(NS.slr.entryView).removeClass('hidden');
    }

    // "Add Observation" button
    if (isEditMode) ctx.fmAddBtn.prop('disabled', doEnable ? true : false);

    // Toggle the Table Pagination (if any)
    ctx.tb.next(NS.slr.paginationCtrl)[doEnable ? 'addClass' : 'removeClass']('hidden');

    // Chart dropdown filter
    // - Only toggle it when table data is NOT empty
    // - else leave it as it is
    if (Model.state.tableData === true)
      ctx.fmSelectFilter
        .prop('disabled', doEnable ? true : false);

    // Toolbar buttons
    if (Model.state.tableData === true ) rmToolbar.toggleBtns(doEnable ? false : true);

    if (Model.state.tableData === 'emt') {
      ctx.tb[doEnable ? 'removeClass' : 'addClass']('hidden');
      ctx.emtMsgTbJson[doEnable ? 'addClass' : 'removeClass']('hidden');
    }
  }

  /**
   * Set the global msg for JSON call error
   */
  function setDataErrMsg (msg) {
    if (typeof msg !== 'string') throw 'message must be at string';
    var ctx = this.getCtx();
    ctx.errMsgJsonCall.find(NS.slr.errMsgJsonCallTxt).html(msg);
  }

  /**
   * Set page-specific callback for Toolbar Active State change
   */
  function setActiveCbForToolbar () {
    var ctx = this.getCtx();
    rmToolbar.cache.toolbar.on('toolbar.toggle', function (e, isToolbarOn) {
      // Toogle the tbfm module from receiving any event
      ctx.wrap[isToolbarOn ? 'addClass' : 'removeClass'](NS.cls.evtDisabled);

      // Toggle the Add Observation if Table data is not empty/error
      if (Model.state.tableData) ctx.fmAddBtn.prop('disabled', isToolbarOn ? true : false);

      // Toogle the checkbox filter ONLY if User has least one selected
      if (Model.state.currChartId) ctx.fmTbFilter.prop('disabled', isToolbarOn ? true : false);
    });
  }


  /* -- CALLBACK/HELPER FN -- */
  /* Constant containing selector, attr name, class name etc */
  function hp_configNS () {
    var slr = {
        // "js-tbfm" related selectors & other
        initTarget:       '.js-tbfm',
        noDataAlert:      '.alert--notification',

        // form related
        fm:               '.tbfm__form',
        fmTpl:            '.tbfm__form__template',
        fmAddBtn:         '.tbfm__form__add',
        fmRmvBtn:         '.tbfm__form__remove',
        fmTbFilter:       '.tbfm__form__tb-filter',
        fmSelectFilter:   'select.tbfm__form__chart-filter',
        fmConfirm:        '.tbfm__form__confirm',
        fmCnclBtn:        '.tbfm__form__confirm__cancel',
        fmSaveNewBtn:     '.tbfm__form__confirm__save-new',
        fmSaveEstBtn:     '.tbfm__form__confirm__save-est',
        fmElmSrc:         '[data-fm-elem-src]',
        fmElmSrcVal:      ['[data-fm-elem-src=', ']'],
        fmElmTarget:      ['[data-fm-elem-target=', ']'],
        fmElmOneOfReq:    'input[data-oneof-required]',

        // table related
        tbEditable:       '.tbfm__table--editable',
        entryId:          '[data-entry-id]',
        entryReadOnly:    '.tbfm__entry--readonly',
        entryNew:         '.tbfm__entry--new',
        entryEdit:        '.tbfm__entry--edit',
        entryView:        '.tbfm__entry--view',
        entryViewTpl:     '.tbfm__entry--view--template',
        entryTdData:      '.tbfm__entry--view__td-data',
        tbCols:           ['th:nth-child(', '), td:nth-child(', ')'],
        tbColsFixedVsb:   '[data-tbcols-show-fixed]',
        tdBmi:            '[data-readonly-cal=bmi]',
        trShow:            ['[data-tbrows-show*=', ']'],
        tdMth:            '[data-age-unit=month]',
        tdYr:             '[data-age-unit=year]',
        paginationCtrl:   'div.bottom',

        // Chart
        chartTitle:       '.chart__title',

        // Ajax Loading Icon
        loadingIconTb:    '.ajax-wait--table',
        loadingIconChart: '.ajax-wait--chart',

        // Success, Empty Data & Error Msg
        errMsgJsonCall:   '.tbfm__msg--err-json',   // not bound to "tbfm" module
        errMsgJsonCallTxt:'.alert__message__content',
        scsMsgTbJson:     '.tbfm__msg--scs-tbjson',
        emtMsgTbJson:     '.tbfm__msg--emt-tbjson',
        emtMsgChartJson:  '.tbfm__msg--emt-chartjson',
        hintMsgInputMode: '.tbfm__msg--input-mode',
        hintMsgFilterMode:'.tbfm__msg--filter-mode',
        oneOfReqMsg:      '.tbfm__msg--one-of-required',

        // plugins related selectors
        modalCnclBtn:     '#modal-remove-entry .btn--secondary',
        fmDatepicker:     '.datepicker--custom',
        chartWrap:        '#xy-chart',
        chart:            '.xy-chart',
        toolbarBtmManageAccess: '.btn__access'
      },
      cls = {
        fmDisabled:       'tbfm__table--edit-disabled',
        fmTpl:            slr.fmTpl.replace('.', ''),
        fmRmvBtn:         slr.fmRmvBtn.replace('.', ''),
        entryNew:         slr.entryNew.replace('.', ''),
        entryViewTpl:     slr.entryViewTpl.replace('.', ''),
        entryView:        slr.entryView.replace('.', ''),
        entryReadyOnly:   slr.entryReadOnly.replace('.', ''),
        entryEdit:        slr.entryEdit.replace('.', ''),
        chart:            slr.chart.replace('.', ''),
        ajaxLoadingOn:    'ajax-loader--in-page loader-active',
        evtDisabled:      'is-evt-disabled'
      },
      atr = {
        fmCurrEntryId:    'data-curr-entry-id',
        fmElmTarget:      'data-fm-elem-target',
        bsModalTarget:    'data-target',
        bsModalToggle:    'data-toggle',
        entryId:          'data-entry-id',
        trShow:           'data-tbrows-show',
        tbColsShow:       'data-tbcols-show',
        chartTarget:      'data-chart-id',
        trPreSortDate:    'data-sort-date',
        optionTextShow:   'data-tboption-text'
      },
      evt = {
        btSelect:         'changed.bs.select'
      },
      msg = {
        classLimit:       'There should be only 1x "js-tbfm" class in a page',
        initLimit:        'Module already initialized'
      },
      formDataConfig = [
        { slr: '[name="obsv-date[]"]', attr: 'value', fdName: 'date' },
        { slr: '[name="obsv-head-ccf[]"]', attr: 'value', fdName: 'head' },
        { slr: '[name="obsv-height[]"]', attr: 'value', fdName: 'height' },
        { slr: '[name="obsv-weight[]"]', attr: 'value', fdName: 'weight' }
      ];

    return {
      slr: slr,
      cls: cls,
      atr: atr,
      evt: evt,
      msg: msg,
      formDataConfig: formDataConfig
    };
  }

  /* Create & Return a collection of cached fixed elements related to this js module */
  function hp_configCtx ($wrap) {
    var $tbEditable = $wrap.find(NS.slr.tbEditable);

    return {
      wrap: $wrap,
      alert: $wrap.find(NS.slr.noDataAlert),

      tb: $tbEditable,
      tBody: $tbEditable.find('tbody'),
      th: $tbEditable.find('th'),
      trTpl: $tbEditable.find(NS.slr.entryViewTpl),

      fm: $wrap.find(NS.slr.fm),
      fmTplSrc: $wrap.find(NS.slr.fmTpl),         // note: svg icon in form elem will not be ready till doc.ready
      fmAddBtn: $wrap.find(NS.slr.fmAddBtn),
      fmCnclBtn: $wrap.find(NS.slr.fmCnclBtn),
      fmConfirmBtns: $wrap.find(NS.slr.fmConfirm),
      fmTbFilter: $wrap.find(NS.slr.fmTbFilter),
      fmSelectFilter: $wrap.find(NS.slr.fmSelectFilter),
      fmSaveNewBtn: $wrap.find(NS.slr.fmSaveNewBtn),

      chartTitle: $wrap.find(NS.slr.chartTitle),

      modalCnclBtn: $wrap.find(NS.slr.modalCnclBtn),
      chartWrap: $wrap.find(NS.slr.chartWrap),
      loadingIconTb: $wrap.find(NS.slr.loadingIconTb),
      loadingIconChart: $wrap.find(NS.slr.loadingIconChart),

      errMsgJsonCall: $(NS.slr.errMsgJsonCall),
      scsMsgTbJson: $wrap.find(NS.slr.scsMsgTbJson),
      emtMsgTbJson: $wrap.find(NS.slr.emtMsgTbJson),
      emtMsgChartJson: $wrap.find(NS.slr.emtMsgChartJson),
      hintMsgInputMode: $wrap.find(NS.slr.hintMsgInputMode),
      hintMsgFilterMode: $wrap.find(NS.slr.hintMsgFilterMode),
      oneOfReqMsg: $wrap.find(NS.slr.oneOfReqMsg),
      toolbarBtmManageAccess: $(NS.slr.toolbarBtmManageAccess)
    };
  }

  function hp_bindOnEntryClick () {
    var ctx = this;
    ctx.wrap.on('click keyup', NS.slr.entryView, function (e) {
      // Exit if it is not triggered by Click or Enter key
      if (e.type !== 'click' && (e.type === 'keyup' && e.which !== 13)) return;

      var $target = $(e.target),
          $tr = $(this),
          trEntryId = $tr.attr(NS.atr.entryId);

      // Ignore if:
      // 1) Remove Btn is clicked ||
      // 2) a new table row is currently in Edit Mode  ||
      // 3) any existing table row is currently in Edit Mode
      if (ctx.tb.hasClass(NS.cls.fmDisabled) ||
        $target.hasClass(NS.cls.fmRmvBtn) ||
        ctx.fm.find(NS.slr.entryNew).length ||
        ctx.fm.find(NS.slr.entryEdit).length) return;

      Module.createPartialForm(ctx, $tr.addClass('hidden'));
      Module.hdInputBoundState(true, true);
      rmFormUtil.currEntryId(ctx.fm, trEntryId);
    });
  }

  function hp_bindOnAddEntryBtnClick() {
    var ctx = this;
    ctx.fmAddBtn.click(function (e) {
      if (ctx.wrap.find('table').hasClass(NS.cls.fmDisabled)) return;
      Module.createPartialForm(ctx, false);
      Module.hdInputBoundState(true, false);
    });
  }

  function hp_bindOnEntryRmvBtnClick () {
    var ctx = this,
        trNewDelegator = [NS.slr.entryNew, NS.slr.fmRmvBtn].join(' '),
        trEditDelegator = [NS.slr.entryView, NS.slr.fmRmvBtn].join(' ') + ', ' + [NS.slr.entryEdit, NS.slr.fmRmvBtn].join(' ');

    // New entry only
    ctx.wrap.on('click', trNewDelegator, function (e) {
      Module.removePartialForm(ctx.fm, $(this).parents('tr'));
      if (ctx.fm.find(NS.slr.entryNew).length) return;   // table row with form partial is ONLY removable if it is newly added
      Module.hdInputBoundState(false, true);
      if(Model.state.currDocId && Module.getPostData().cache.docId !== Model.state.currDocId){
        ctx.toolbarBtmManageAccess.prop('disabled', true);
      }
    });

    // Existing entry only
    ctx.wrap.on('click', trEditDelegator, function (e) {
      rmFormUtil.currEntryId(ctx.fm, $(this).parents('tr').attr(NS.atr.entryId));
    });
  }

  function hp_bindOnFmCnclBtnClick () {
    var ctx = this;
    ctx.fmCnclBtn.click(function (e) {
      Module.removePartialForm(ctx.fm, ctx.fm.find([NS.slr.entryNew, NS.slr.entryEdit].join(',')));
      Module.hdInputBoundState(false, true);
      rmFormUtil.currEntryId(ctx.fm, false);
      if(Model.state.currDocId && Module.getPostData().cache.docId !== Model.state.currDocId){
        ctx.toolbarBtmManageAccess.prop('disabled', true);
      }
    });
  }

  function hp_bindOnFmTbRowFilter () {
    var ctx = this,
        cache;

    // Note:
    // - "optionVal" is passed from .trigger('change', optionVal); in "hp_bindOnFmChartFilter"
    // - the handler handler only deals with the states of:
    //    -- global error msg
    //    -- table (visibility & rows/cols)
    //    -- table empty error msg
    ctx.fmTbFilter.change(function (e, passedCache) {
      var isChecked = this.checked,
          isChartDataExist = Model.state.currChartData === true,
          isTbDataExist;

      cache = passedCache ? passedCache : cache;

      // 1. Enable/Disable form - checked (disable) / unchecked (enable)
      Module.enableTbInteraction(ctx.tb, ctx.fmAddBtn, isChecked);

      // 2. Toggle the Hint msg under the checkbox
      ctx.hintMsgFilterMode[isChecked ? 'removeClass' : 'addClass']('hidden');

      // 3. If Chart JsonData Error ONLY
      if (!Model.state.currChartId)
        ctx.errMsgJsonCall[isChecked ? 'removeClass' : 'addClass']('hidden');

      // 4. Skip if there is no cache table rows to show (table will be hidden in this case)
      // else If Checkbox is unchecked   OR   there is cache table rows when checked
      Module.showTbRows(ctx.tb);
      Module.showTbCols(isChecked ? (cache ? cache.tbCols : false) : false, true);

      // 5. Update any data empty msg and table
     isTbDataExist =  Model.state.tableData === true && ctx.tb.find(NS.slr.entryView).length;

     if (isChartDataExist && isTbDataExist) {
         ctx.emtMsgTbJson.addClass('hidden');
         ctx.tb.removeClass('hidden');

     }else if (!isChartDataExist && isTbDataExist && !isChecked) {
         ctx.emtMsgTbJson.addClass('hidden');
         ctx.tb.removeClass('hidden');

     } else {
         ctx.emtMsgTbJson.removeClass('hidden');
         ctx.tb.addClass('hidden');
     }
    });
  }



  'use strict';

  function createTableHeadTempt(currOptionVal) {
    var observationDate = "Observation Date",
        ageMonths = "Age (month)",
        ageYears = "Age (year)",
        headCircumference = "Head Circumference (centimetre)",
        weightKilograms = "Weight (kilogram)",
        heightCentimeter = "Height (centimetre)",
        percentile = "Percentile",
        percentileDescription = "Percentile Description",
        bmi = "BMI (kg/m2)";

    switch (currOptionVal) {
      case 'HEADCIRCUMFERENCE|G|0|24|WHO':
      case 'HEADCIRCUMFERENCE|G|0|36|CDC':
      case 'HEADCIRCUMFERENCE|B|0|24|WHO':
      case 'HEADCIRCUMFERENCE|B|0|36|CDC':
        {
          return '\n            <thead>\n              <tr>\n                <th>'+observationDate+'</th>\n                <th>'+ageMonths+'</th>\n                <th>'+headCircumference+'</th>\n                <th>'+percentile +'</th>\n                <th>'+percentileDescription+'</th>\n              </tr>\n            </thead>            \n        ';
          break;
        }
      case 'WEIGHT|G|0|24|WHO':
      case 'WEIGHT|G|0|36|CDC':
      case 'WEIGHT||0|36|CDC':
      case 'WEIGHT|G|24|240|CDC':
      case 'WEIGHT|B|0|24|WHO':
      case 'WEIGHT|B|0|36|CDC':
      case 'WEIGHT|B|24|240|CDC':
        {
          return '\n            <thead>\n              <tr>\n                <th>'+observationDate+'</th>\n                <th>'+(currOptionVal === 'WEIGHT|B|24|240|CDC' || currOptionVal === 'WEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'</th>\n                <th>'+weightKilograms+'</th>\n                <th>'+percentile +'</th>\n                <th>'+percentileDescription+'</th>\n              </tr>\n            </thead>\n          ';
          break;
        }
      case 'HEIGHT|G|0|24|WHO':
      case 'HEIGHT|G|0|36|CDC':
      case 'HEIGHT|G|24|240|CDC':
      case 'HEIGHT|B|0|24|WHO':
      case 'HEIGHT|B|0|36|CDC':
      case 'HEIGHT|B|24|240|CDC':
        {
          return '\n            <thead>\n              <tr>\n                <th>'+observationDate+'</th>\n                <th>'+(currOptionVal === 'HEIGHT|B|24|240|CDC' || currOptionVal === 'HEIGHT|G|24|240|CDC' ? ageYears : ageMonths) + '</th><th>'+heightCentimeter+'</th>\n                <th>'+percentile +'</th>\n                <th>'+percentileDescription+'</th>\n              </tr>\n        \n            </thead>\n          ';
          break;
        }
      case 'BMI|G|24|240|CDC':
      case 'BMI|B|24|240|CDC':
        {
          return '\n            <thead>\n              <tr>\n                <th>'+observationDate+'</th>\n                <th>'+ageYears+'</th>\n                <th>'+heightCentimeter+'</th>\n                <th>'+weightKilograms+'</th>\n                <th>'+bmi+'</th>\n                <th>'+percentile +'</th>\n                <th>'+percentileDescription+'</th></tr>\n            </thead>\n          ';
          break;
        }
      default:
        {
          //statements; 
          break;
        }
    }
  }
  
  function createTableTempt(currOptionVal) {
    var observations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var caption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'this is the caption';
  
    switch (currOptionVal) {
      case 'HEADCIRCUMFERENCE|G|0|24|WHO':
      case 'HEADCIRCUMFERENCE|G|0|36|CDC':
      case 'HEADCIRCUMFERENCE|B|0|24|WHO':
      case 'HEADCIRCUMFERENCE|B|0|36|CDC':
        {
          return '\n            <table class="table--base js-tb-rows-to-lists" id="observations-table2">\n              <caption class="sr-only">' + caption + '</caption>\n              ' + createTableHeadTempt(currOptionVal) + '\n              <tbody>\n                ' + createTableBody(currOptionVal, observations) + '\n              </tbody>\n            </table>\n            <p class="notes-on-table">Note: The growth chart percentile information is an indication and has an accuracy variance of plus or minus 4%.</p>\n           ';
          break;
        }
      case 'WEIGHT|G|0|24|WHO':
      case 'WEIGHT|G|0|36|CDC':
      case 'WEIGHT||0|36|CDC':
      case 'WEIGHT|G|24|240|CDC':
      case 'WEIGHT|B|0|24|WHO':
      case 'WEIGHT|B|0|36|CDC':
      case 'WEIGHT|B|24|240|CDC':
        {
          return '\n            <table class="table--base js-tb-rows-to-lists" id="observations-table2">\n              <caption class="sr-only">' + caption + '</caption>\n              ' + createTableHeadTempt(currOptionVal) + '\n              <tbody>\n                ' + createTableBody(currOptionVal, observations) + '\n              </tbody>\n            </table>\n            <p class="notes-on-table">Note: The growth chart percentile information is an indication and has an accuracy variance of plus or minus 4%.</p>\n           ';
          break;
        }
      case 'HEIGHT|G|0|24|WHO':
      case 'HEIGHT|G|0|36|CDC':
      case 'HEIGHT|G|24|240|CDC':
      case 'HEIGHT|B|0|24|WHO':
      case 'HEIGHT|B|0|36|CDC':
      case 'HEIGHT|B|24|240|CDC':
        {
          return '\n            <table class="table--base js-tb-rows-to-lists" id="observations-table2">\n              <caption class="sr-only">' + caption + '</caption>\n              ' + createTableHeadTempt(currOptionVal) + '\n              <tbody>\n                ' + createTableBody(currOptionVal, observations) + '\n              </tbody>\n            </table>\n            <p class="notes-on-table">Note: The growth chart percentile information is an indication and has an accuracy variance of plus or minus 4%.</p>\n           ';
          break;
        }
      case 'BMI|G|24|240|CDC':
      case 'BMI|B|24|240|CDC':
        {
          return '\n            <table class="table--base js-tb-rows-to-lists" id="observations-table2">\n              <caption class="sr-only">' + caption + '</caption>\n              ' + createTableHeadTempt(currOptionVal) + '\n              <tbody>\n                ' + createTableBody(currOptionVal, observations) + '\n              </tbody>\n            </table>\n            <p class="notes-on-table">Note: The growth chart percentile information is an indication and has an accuracy variance of plus or minus 4%.</p>\n           ';
          break;
        }
      default:
        {
          //statements; 
          break;
        }
    }
  }
  
  function createTableBody(currOptionVal) {
    var observations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var observationDate = "Observation Date",
        ageMonths = "Age (month)",
        ageYears = "Age (year)",
        headCircumference = "Head Circumference (centimetre)",
        weightKilograms = "Weight (kilogram)",
        heightCentimeter = "Height (centimetre)",
        percentile = "Percentile",
        percentileDescription = "Percentile Description",
        bmi = "BMI (kg/m2)",
        naPercentile = "N/A",
        naDescription = "Percentile value for this measurement is not available for this age.";
  
    switch (currOptionVal) {
      case 'HEADCIRCUMFERENCE|G|0|24|WHO':
      case 'HEADCIRCUMFERENCE|G|0|36|CDC':
      case 'HEADCIRCUMFERENCE|B|0|24|WHO':
      case 'HEADCIRCUMFERENCE|B|0|36|CDC':
        {
          return observations.reduce(function (acc, cur, index, arr) {
            if(cur.percentile === '') return '\n                ' + acc + '\n                <tr>\n                  <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                  <td data-th="'+ageMonths+'">' + cur.observationAgeSinceDOB + '</td>\n                  <td data-th="'+headCircumference+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' centimetres</td>\n                  <td data-th="'+percentile+'">'+naPercentile+'</td>\n                  <td data-th="'+percentileDescription+'">'+naDescription+'</td>\n                  </tr>\n              ';
            else if (cur.percentile.split('_')[1] === 'in') return '\n                ' + acc + '\n                <tr>\n                  <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                  <td data-th="'+ageMonths+'">' + cur.observationAgeSinceDOB + '</td>\n                  <td data-th="'+headCircumference+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' centimetres</td>\n                  <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                  <td data-th="'+percentileDescription+'">This child is in the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for head circumference. That means ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' at ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age have a smaller head and ' + (100 - cur.percentile.split('_')[0]) + ' percent have a larger head than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' does. </td>\n                  </tr>\n              ';
            else if (cur.percentile.split('_')[1] === 'be') return '\n              ' + acc + '\n              <tr>\n                <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                <td data-th="'+ageMonths+'">' + cur.observationAgeSinceDOB + '</td>\n                <td data-th="'+headCircumference+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' centimetres</td>\n                <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                <td data-th="'+percentileDescription+'">This child is below the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for head circumference. That means more than ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age have a larger head than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' does.</td>\n                </tr>\n              ';
            else if (cur.percentile.split('_')[1] === 'ab') return '\n                ' + acc + '\n                <tr>\n                  <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                  <td data-th="'+ageMonths+'">' + cur.observationAgeSinceDOB + '</td>\n                  <td data-th="'+headCircumference+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' centimetres</td>\n                  <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                  <td data-th="'+percentileDescription+'">This child is above the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for head circumference. That means more than ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age have a smaller head than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' does. </td>\n                  </tr>\n                ';
          }, '');
          break;
        }
      case 'WEIGHT|G|0|24|WHO':
      case 'WEIGHT|G|0|36|CDC':
      case 'WEIGHT||0|36|CDC':
      case 'WEIGHT|G|24|240|CDC':
      case 'WEIGHT|B|0|24|WHO':
      case 'WEIGHT|B|0|36|CDC':
      case 'WEIGHT|B|24|240|CDC':
        {
          return observations.reduce(function (acc, cur, index, arr) {
            if(cur.percentile === '') return '\n              ' + acc + '\n              <tr>\n                <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                <td  data-th="'+(currOptionVal === 'WEIGHT|B|24|240|CDC' || currOptionVal === 'WEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'">' + cur.observationAgeSinceDOB + '</td>\n                <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' kilograms</td>\n                <td data-th="'+percentile+'">' + naPercentile + '</td>\n                <td data-th="'+percentileDescription+'">'+naDescription+'</td>\n                </tr>\n            ';
            else if (cur.percentile.split('_')[1] === 'in') return '\n              ' + acc + '\n              <tr>\n                <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                <td  data-th="'+(currOptionVal === 'WEIGHT|B|24|240|CDC' || currOptionVal === 'WEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'">' + cur.observationAgeSinceDOB + '</td>\n                <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' kilograms</td>\n                <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                <td data-th="'+percentileDescription+'">This child is in the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for weight. That means ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age weigh less and ' + (100 - cur.percentile.split('_')[0]) + ' percent weigh more than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' does. </td>\n                </tr>\n            ';
            else if (cur.percentile.split('_')[1] === 'be') return '\n            ' + acc + '\n            <tr>\n              <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n              <td data-th="'+(currOptionVal === 'WEIGHT|B|24|240|CDC' || currOptionVal === 'WEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'">' + cur.observationAgeSinceDOB + '</td>\n              <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' kilograms</td>\n              <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n              <td data-th="'+percentileDescription+'">This child is below the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for weight. That means more than ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age weigh more than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' does.</td>\n              </tr>\n            ';
            else if (cur.percentile.split('_')[1] === 'ab') return '\n              ' + acc + '\n              <tr>\n                <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                <td data-th="'+(currOptionVal === 'WEIGHT|B|24|240|CDC' || currOptionVal === 'WEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'">' + cur.observationAgeSinceDOB + '</td>\n                <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' kilograms</td>\n                <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                <td data-th="'+percentileDescription+'">Your child is above the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for weight. That means more than ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age weigh less than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' does.</td>\n                </tr>\n              ';
          }, '');
          break;
        }
      case 'HEIGHT|G|0|24|WHO':
      case 'HEIGHT|G|0|36|CDC':
      case 'HEIGHT|G|24|240|CDC':
      case 'HEIGHT|B|0|24|WHO':
      case 'HEIGHT|B|0|36|CDC':
      case 'HEIGHT|B|24|240|CDC':
        {
          return observations.reduce(function (acc, cur, index, arr) {
            if(cur.percentile === '') return '\n              ' + acc + '\n              <tr>\n                <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                <td data-th="'+(currOptionVal === 'HEIGHT|B|24|240|CDC' || currOptionVal === 'HEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'">' + cur.observationAgeSinceDOB + '</td>\n                <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' centimetres</td>\n                <td data-th="'+percentile+'">' + naPercentile + '</td>\n                <td data-th="'+percentileDescription+'">'+naDescription+'</td>\n                </tr>\n            ';
            else if (cur.percentile.split('_')[1] === 'in') return '\n              ' + acc + '\n              <tr>\n                <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                <td data-th="'+(currOptionVal === 'HEIGHT|B|24|240|CDC' || currOptionVal === 'HEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'">' + cur.observationAgeSinceDOB +'</td>\n                <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' centimetres</td>\n                <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                <td data-th="'+percentileDescription+'">This  child is in the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for height. That means ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age are shorter and ' + (100 - cur.percentile.split('_')[0]) + ' percent are taller than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' is. </td>\n                </tr>\n            ';
            else if (cur.percentile.split('_')[1] === 'be') return '\n            ' + acc + '\n            <tr>\n              <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n              <td data-th="'+(currOptionVal === 'HEIGHT|B|24|240|CDC' || currOptionVal === 'HEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'">' + cur.observationAgeSinceDOB + '</td>\n              <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' centimetres</td>\n              <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n              <td data-th="'+percentileDescription+'">This child is below the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for height. That means more than ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age are taller than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' is.</td>\n              </tr>\n            ';
            else if (cur.percentile.split('_')[1] === 'ab') return '\n              ' + acc + '\n              <tr>\n                <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                <td data-th="'+(currOptionVal === 'HEIGHT|B|24|240|CDC' || currOptionVal === 'HEIGHT|G|24|240|CDC' ? ageYears : ageMonths)+'">' + cur.observationAgeSinceDOB + '</td>\n                <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ' centimetres</td>\n                <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                <td data-th="'+percentileDescription+'">This child is above the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for height. That means more than ' + cur.percentile.split('_')[0] + ' percent of ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' ' + (cur.gender.toLowerCase() === 'male' ? "his" : "her") + ' age shorter than ' + (cur.gender.toLowerCase() === 'male' ? "he" : "she") + ' is.</td>\n                </tr>\n              ';
          }, '');
          break;
        }
      case 'BMI|G|24|240|CDC':
      case 'BMI|B|24|240|CDC':
        {
          return observations.reduce(function (acc, cur, index, arr) {
            if(cur.percentile === '') return '\n                ' + acc + '\n                <tr>\n                  <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                  <td data-th="'+ageYears+'">' + cur.observationAgeSinceDOB + '</td>\n                  <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[2] ? cur.ycustom.split('|')[2] : '0') + ' centimetre</td>\n                  <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[1] ? cur.ycustom.split('|')[1] : '0') + ' kilograms</td>\n                  <td data-th="'+bmi+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + '</td>\n                  <td data-th="'+percentile+'">' + naPercentile + '</td>\n                  <td data-th="'+percentileDescription+'">'+naDescription+'</td>\n                  </tr>\n              ';
            else if (cur.percentile.split('_')[0] < 5) return '\n                ' + acc + '\n                <tr>\n                  <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                  <td data-th="'+ageYears+'">' + cur.observationAgeSinceDOB + '</td>\n                  <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[2] ? cur.ycustom.split('|')[2] : '0') + ' centimetre</td>\n                  <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[1] ? cur.ycustom.split('|')[1] : '0') + ' kilograms</td>\n                  <td data-th="'+bmi+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + '</td>\n                  <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                  <td data-th="'+percentileDescription+'">Based on the height and weight entered, the BMI is ' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ', placing the BMI-for-age at the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' aged ' + cur.observationAgeSinceDOB + '. This child is underweight and should be seen by a healthcare provider for further assessment to determine possible causes of underweight.</td>\n                  </tr>\n              ';
            else if (cur.percentile.split('_')[0] >= 5 && cur.percentile.split('_')[0] < 85) return '\n              ' + acc + '\n              <tr>\n                <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                <td data-th="'+ageYears+'">' + cur.observationAgeSinceDOB + '</td>\n                <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[2] ? cur.ycustom.split('|')[2] : '0') + ' centimetre</td>\n                <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[1] ? cur.ycustom.split('|')[1] : '0') + ' kilograms</td>\n                <td data-th="'+bmi+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + '</td>\n                <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                <td data-th="'+percentileDescription+'">Based on the height and weight entered, the BMI is ' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ', placing the BMI-for-age at the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' aged ' + cur.observationAgeSinceDOB + '. This child has healthy weight.</td>\n                </tr>\n              ';
            else if (cur.percentile.split('_')[0] >= 85 && cur.percentile.split('_')[0] < 95) return '\n                ' + acc + '\n                <tr>\n                  <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                  <td data-th="'+ageYears+'">' + cur.observationAgeSinceDOB + '</td>\n                  <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[2] ? cur.ycustom.split('|')[2] : '0') + ' centimetre</td>\n                  <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[1] ? cur.ycustom.split('|')[1] : '0') + ' kilograms</td>\n                  <td data-th="'+bmi+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + '</td>\n                  <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                  <td data-th="'+percentileDescription+'">Based on the height and weight entered, the BMI is ' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ', placing the BMI-for-age at the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' aged ' + cur.observationAgeSinceDOB + '. This child is overweight.</td>\n                  </tr>\n                ';else if (cur.percentile.split('_')[0] >= 95) return '\n                ' + acc + '\n                <tr>\n                  <td data-th="'+observationDate+'">' + cur.observationDate + '</td>\n                  <td data-th="'+ageYears+'">' + cur.observationAgeSinceDOB + '</td>\n                  <td data-th="'+heightCentimeter+'">' + (cur.ycustom.split('|')[2] ? cur.ycustom.split('|')[2] : '0') + ' centimetre</td>\n                  <td data-th="'+weightKilograms+'">' + (cur.ycustom.split('|')[1] ? cur.ycustom.split('|')[1] : '0') + ' kilograms</td>\n                  <td data-th="'+bmi+'">' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + '</td>\n                  <td data-th="'+percentile+'">' + addOrdinalSuffix(cur.percentile.split('_')[0]) + '</td>\n                  <td data-th="'+percentileDescription+'">Based on the height and weight entered, the BMI is ' + (cur.ycustom.split('|')[0] ? cur.ycustom.split('|')[0] : '0') + ', placing the BMI-for-age at greater than the ' + addOrdinalSuffix(cur.percentile.split('_')[0]) + ' percentile for ' + (cur.gender.toLowerCase() === 'male' ? "boys" : "girls") + ' aged ' + cur.observationAgeSinceDOB + '. This child has obesity and may have weight-related health problems. ' + (cur.gender.toLowerCase() === 'male' ? "He" : "She") + ' should be seen by a healthcare provider for further assessment.</td>\n                  </tr>\n                ';
          }, '');
          break;
        }
      default:
        {
          //statements; 
          break;
        }
    }
  }
  
  function createAriaTable(observations) {
    if(observations.length > 0) {
      /* create plot points aria-describedby */
      if($('.plot-aria-describedby-wrap').length  === 0) {
        $(document.body).append('<div class="plot-aria-describedby-wrap hidden"></div>');
      }
      
      var plotWrapper = $('.plot-aria-describedby-wrap');
      plotWrapper.empty();
      
      observations.map(function(observation, i) {
        if(observation.percentile) {
          var percentile = parseInt(observation.percentile);
          var sup = percentile.toString()[percentile.toString().length - 1];
          var supText = '';
          
          if(sup > 3 || sup === '0') supText = 'th'; 
          if(sup === '3') supText = 'rd';
          if(sup === '2') supText = 'nd';
          if(sup === '1') supText = 'st';
          
          var ariaPercentile= percentile + supText;
        } else {
          var percentile = 'N/A';
          var supText = '';
          var ariaPercentile = "Not Available";
        }
        
        
        var chartType = $('#select-chart-type').get(0).value;
        var ageLabel = (chartType === 'BMI|G|24|240|CDC' || chartType=== 'WEIGHT|G|24|240|CDC' || chartType === 'HEIGHT|G|24|240|CDC'
        || chartType === 'BMI|B|24|240|CDC' || chartType=== 'WEIGHT|B|24|240|CDC' || chartType === 'HEIGHT|B|24|240|CDC') ? 'Age(year)' : 'Age(months)';
        
        var observationString = '<div id="observation-info-'+ i +'">' +
          '<table class="table--base">' +
            '<tr><td>Percentile</td><td aria-label="' + ariaPercentile + '">' + percentile + '<sup>' + supText + '</sup></td></tr>' +
            '<tr><td>Observation Date</td><td>' + observation.observationDate + '</td></tr>' +
            '<tr><td>' + ageLabel + '</td><td>' + observation.observationAgeSinceDOB + '</td></tr>';
          
          
          if(chartType === 'HEADCIRCUMFERENCE|G|0|24|WHO' || chartType === 'HEADCIRCUMFERENCE|G|0|36|CDC'
          || chartType === 'HEADCIRCUMFERENCE|B|0|24|WHO' || chartType === 'HEADCIRCUMFERENCE|B|0|36|CDC') {
            var ycustom = observation.ycustom + ' centimetre' + ((observation.ycustom > 1) ? 's' : '');
            observationString += '<tr><td>Head Circumference (centimetre)</td><td>' + ycustom + '</td></tr>';
          }
          
          if(chartType === 'WEIGHT|G|0|24|WHO' || chartType === 'WEIGHT|G|0|36|CDC' || chartType === 'WEIGHT|G|24|240|CDC'
          || chartType === 'WEIGHT|B|0|24|WHO' || chartType === 'WEIGHT|B|0|36|CDC' || chartType === 'WEIGHT|B|24|240|CDC') {
            var ycustom = observation.ycustom + ' kilogram' + ((observation.ycustom > 1) ? 's' : '');
            observationString += '<tr><td>Weight(kilogram)</td><td>' + ycustom + '</td></tr>';
          }
          
          if(chartType === 'HEIGHT|G|0|24|WHO' || chartType === 'HEIGHT|G|0|36|CDC' || chartType === 'HEIGHT|G|24|240|CDC'
          || chartType === 'HEIGHT|B|0|24|WHO' || chartType === 'HEIGHT|B|0|36|CDC' || chartType === 'HEIGHT|B|24|240|CDC') {
            var ycustom = observation.ycustom + ' centimetre' + ((observation.ycustom > 1) ? 's' : '');
            observationString += '<tr><td>Height(centimetre)</td><td>' + ycustom + '</td></tr>';
          }
          
          if(chartType === 'BMI|G|24|240|CDC' || chartType === 'BMI|B|24|240|CDC') {
            var ycustom = observation.ycustom + ' kg/m2';
            observationString += '<tr><td>BMI(kg/m2)</td><td>' + ycustom + '</td></tr>';
          }
          
          observationString += '<tr><td>Source</td><td>' + observation.category + '</td></tr>'+'</table></div>';
          
          plotWrapper.append($(observationString));
      });
    }
  }
  
  function drawPercentileTable(jsonData, currOptionVal, currOptionTxt) {
    var observations = jQuery.grep(jsonData, function (point) {
      return point.observationDate;
    });
    var tableTemplate = createTableTempt(currOptionVal, observations, currOptionTxt);
    
    createAriaTable(observations);
  
    $('#observations-table2').remove();
    $('.notes-on-table').remove();
    $('#xy-chart').after(tableTemplate);
    
    
  }
  
  function addOrdinalSuffix(value) {
    var a = value % 10,
        b = value % 100;
    if (a == 1 && b != 11) {
      return value + "st";
    }
    if (a == 2 && b != 12) {
      return value + "nd";
    }
    if (a == 3 && b != 13) {
      return value + "rd";
    }
    return value + "th";
  }

 function noDataTpl() {
    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    return '<div id="observations-no-data"><div class="alert alert--notification alert--white alert--border--sky-blue " role="alert" aria-describedby="alert-description"><div class="alert__icon"><span class="icon icon--sm icon--info-circle"><span class="sr-only">Alert Information</span><span class="print__icon"><svg width="23px" height="23px" viewBox="0 0 23 23" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>Alert Information</title><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(-50.000000, -375.000000)"><g transform="translate(50.000000, 375.000000)"><path d="M11.5,1 C5.70428475,1 1,5.70428475 1,11.5 C1,17.2957153 5.70428475,22 11.5,22 C17.2957153,22 22,17.2957153 22,11.5 C22,5.70428475 17.2957153,1 11.5,1 Z" stroke="#1F6DB1" stroke-width="2"></path><path d="M10.35,8.05 L12.65,8.05 L12.65,5.75 L10.35,5.75 L10.35,8.05 Z M10.35,17.25 L12.65,17.25 L12.65,10.35 L10.35,10.35 L10.35,17.25 Z" fill="#1F6DB1" fill-rule="evenodd" transform="translate(11.500000, 11.500000) rotate(180.000000) translate(-11.500000, -11.500000) "></path></g></g></g></svg></span></span></div><div class="alert__message "><div class="alert__message__content" id="alert-description">' + text + '</div></div></div></div>';
};

  function hp_bindOnFmChartFilter () {
    // Setup Chart container & canvas
    var ctx = this,
        isBtSelect = ctx.fmSelectFilter.data('selectpicker'),
        chart = rmXyChart.create($('<div class="chart">').appendTo(this.chartWrap), rmXyChart.getConfig());
        ctx.chartWrap.addClass('hidden');
    // Event
    ctx.fmSelectFilter.on(isBtSelect ? NS.evt.btSelect : 'change', function (e) {
      // Get the value of nthChild of the table to hide
      var $currOption = $(this).find('option:selected'),
          currOptionTxt = $currOption.attr(NS.atr.optionTextShow),
          currOptionVal = $currOption.val(),    // json id
          filteredTr = $currOption.attr(NS.atr.trShow),
          colNthchildIdxs = $currOption.attr(NS.atr.tbColsShow),
          $observationsTable2 = $('#observations-table2'),
          $noteOnTable = $('.notes-on-table'),
          $observationTableWrapper = $('#observation-table'),
          $observationTable = $('#observation-table table');

      // Exit
      $('#observations-no-data').remove();
      $('.chart__title').remove();
      if (!currOptionVal) {
        ctx.chartWrap.addClass('hidden');
        $observationsTable2.remove();
        $noteOnTable.remove();
        $('.tbfm__msg--emt-chartjson').addClass('hidden');
        return;
      }else{
        if (ctx.chartWrap.hasClass('hidden')) ctx.chartWrap.removeClass('hidden');
      }

      if ( $currOption.html() !== ''){
        $('.chart__title').remove();
        ctx.chartWrap.prepend('<h3 class="chart__title">' + $currOption.html() + '</h3>');
      }

      // Ajax the JSON data & plot it
      Module.enableAjaxLoader(ctx.loadingIconChart, true);
      Module.fetchJson(Model.chartJsonUrl, {chartId: currOptionVal})
        .fail(function(err) {
          Module.setDataErrMsg(err.responseText);
          cb_delegateStateHandles('err', null, null);
        })
        .done(function(jsonData){
          var isNotEmt = jsonData.length,
              stateType = isNotEmt ? true : 'emt',
              passedEvtData = isNotEmt ? {tbRows: currOptionVal, tbCols: colNthchildIdxs } : false;

          if (isNotEmt) {
              drawPercentileTable(jsonData,currOptionVal, currOptionTxt);
              rmXyChart.update(chart, jsonData, currOptionVal);
              $observationTable.removeClass('hidden');
              $observationsTable2.removeClass('hidden');
              $noteOnTable.removeClass('hidden');
          }  // Plot the chart (if there is data)
          chart.validateData();
          ctx.chartTitle.html(isNotEmt ? currOptionTxt : '');
          ctx.chartTitle[isNotEmt ? 'removeClass' : 'addClass']('hidden');
          ctx.emtMsgChartJson[!isNotEmt ? 'removeClass' : 'addClass']('hidden');
          ctx.chartWrap[isNotEmt ? 'removeClass' : 'addClass']('hidden');
          cb_delegateStateHandles(stateType, currOptionVal, passedEvtData);       // Handle Multiple states

          if(!isNotEmt){
            $observationTableWrapper.prepend(noDataTpl('Please check all the Personal Observations entered apply to the selected Growth Chart.'));
            $observationTable.addClass('hidden');
            $observationsTable2.addClass('hidden');
            $noteOnTable.addClass('hidden');
            $('.checkbox').addClass('hidden');
          }
        });
    });
  }




  /*
   * Return a function that return the post Data for Server based on the action given ("add | edit | del")
   * - Used at the time of submission such as:
   *     -- Remove Confirm -->          rm.tbfm.getPostData('del')
   *     -- Save New Confirm -->        rm.tbfm.getPostData('add')
   *     -- Save Existing Confirm -->   rm.tbfm.getPostData('edit')
   *
   * - Example: "save" button for new entry (assuming its a different button for exsting entry)
   *   $saveNewBtn.click(function(){
   *     if (!rm.form.util.isValid($form)) return;
   *     $.ajax({
   *       url: <your_ajax_url_here>,
   *       type: 'POST',
   *       data:  rm.tbfm.getPostData('new')
   *     });
   *   });
   */
  function hp_createGetPostDataFn (ctx) {
    var getFormDataFn = rmFormUtil.configGetFormData(ctx.fm, [NS.slr.entryEdit, NS.slr.entryNew].join(',') , NS.formDataConfig);

    return function (action) {
      var isNew = action === 'add',
          isEdit = action === 'edit',
          isRmv = action === 'del';

      Model.postData.action = Model.postData.action === action ? Model.postData.action : action;
      Model.postData.currEntryId = isNew ? false : rmFormUtil.currEntryId(ctx.fm);
      Model.postData.fmData = isRmv ? false : getFormDataFn();

      return Model.postData;
    };
  }



  /**
   * Return if there is at least 1x input field filled in a table row
   * - for details of each parameter, check formValidation docs on validation callback
   */
  function hp_isAnyInputFilled ($currTr) {
    // 1. Get form inputs in current <tr> & Get all other <tr>
    var $currTrFmInputs = $currTr.find(NS.slr.fmElmOneOfReq),
        $otherTr = Module.getCtx().tb.find([NS.slr.entryEdit, NS.slr.entryNew].join(',')).not($currTr);

    // 2. Check current <tr> and all <tr> (except current <tr>)
    // - curr <tr>: if it has at least one <input> has value, it is valid
    // - other <tr>: if any <tr> has at least one fail (i.e. no <input> has no value), then it is not valid
    var hsLeastOneValInCurrTr = Array.prototype.some.call(
                                    $currTrFmInputs,
                                    function(elem, idx){
                                      return $.trim($currTrFmInputs.eq(idx).val());
                                  }),
        hsLeastOneValInOtherTr = !$otherTr.length ?
                                    true :
                                    Array.prototype.every.call(
                                      $otherTr,
                                      function (item, idx) {
                                        var $thisTrFmInputs = $otherTr.eq(idx).find(NS.slr.fmElmOneOfReq);
                                        return Array.prototype.some.call($thisTrFmInputs, function(elem, idx){
                                          return $.trim($thisTrFmInputs.eq(idx).val());
                                      });
                                    });
    return {
      curr: hsLeastOneValInCurrTr,
      all: hsLeastOneValInCurrTr && hsLeastOneValInOtherTr
    };
  }

  /**
   * Handle Multiple streams of states changes of elements in the page
   * - one via Module.hdDataBoundState
   * - one via ctx.fmTbFilter event handler
   *
   * <stateType>        true (not empty)  |  'emt' (empty)  |  'err' (json call error)
   * <currOptionVal>    the <option> value (only defined when chart data is successful)
   * <passedData>       the data passed to the table filter checkbox event handler
   */
  function cb_delegateStateHandles (stateType, currOptionVal, passedEvtData) {
    // Handle some of the state changes
    Module.hdDataBoundState('chart', {type: stateType, currChartId: currOptionVal});

    // Delegate other state changes to the Handler of Table checkbox filter
    Module.getCtx().fmTbFilter
      .prop('checked', true)
      .prop('disabled', false)
      .trigger('change', passedEvtData);
  }


})(rm.xyChart, rm.calc, rm.form.util, rm.validation, rm.table, rm.datepicker, rm.toolbar, window.moment);

/* jshint ignore:end */

rm.disabledBlock = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */
  var elemSelector = {
        disabledBlock:     '.disabled-block',
        onlyControls:      '*:not(div,span,p,label,small,section,article,a,table,thead,tbody,tr,th,td,strong,i,svg,svg *)'
      };

  var initialize = function() {
    disableAllBlocks();
  };

  var disableAllBlocks = function(){
    $(elemSelector.disabledBlock).each(function(){
      $(this).find(elemSelector.onlyControls).attr('disabled', 'disabled');
    });
  };

  var enableDisableBlock = function($block, flag){
    if(flag==='enable'){
      $block.removeClass('disabled-block');
      $block.find(elemSelector.onlyControls).each(function(){
        //in some scenarios we have disbaled elements, which should not be enabled when we enable whole DisabledBlock
        if(!$(this).hasClass('disabled-block__disabled')){
          $(this).removeAttr('disabled').removeClass('disabled');
          //.removeClass('disabled'); somehow bootstrap automatically add this class to dropdown
        }
      });
    }
    else{
      $block.addClass('disabled-block');
      $block.find(elemSelector.onlyControls).each(function(){
        $(this).attr('disabled', 'disabled');
      });
    }
  };

  return {
    init: initialize,
    enableDisableBlock:enableDisableBlock
  };
}());
rm.documentCard = (function() {
    'use strict';

    /* -- VARIABLE SETUP -- */
    var elemSelector = {
          clickableCard:     '.card',
          cardLink:           '.card--link',
          cardAnchor:         '.card a.needHelp',
          tileTarget:         '.tile-target'
        };

    var initialize = function() {
        triggerLink();
        updateDivFocus();
    };

    var triggerLink = function(){

        $(elemSelector.clickableCard).on('keypress', function(e) {
            if (e.keyCode === 13) {
                   e.preventDefault();
                   $(this).children(elemSelector.cardLink).toggleClass('card--link-hover');
                   $(this).trigger( 'click');
               }
        });

        $(elemSelector.cardAnchor).on('keypress', function(e) {
            if (e.keyCode === 13) {
            e.preventDefault();
            $(this).trigger('click');
            }
        }); 

         $(elemSelector.clickableCard).click(function(e){
            e.preventDefault();
            var $this = $(this);
            var $target = $(e.target);
            var $firstElementChild = e.target.firstElementChild;

            if( $target.is('[data-toggle="modal"]') ) return;

            if(typeof $firstElementChild !== typeof undefined && $firstElementChild !== false && $firstElementChild !== null){
                if($firstElementChild.target !== '_blank' && typeof $firstElementChild.target !== typeof undefined && $firstElementChild.target !== false ){
                    window.location = $firstElementChild.href;
                    return;
                }
                else if( $firstElementChild.target === '_blank' && typeof $firstElementChild.target !== typeof undefined && $firstElementChild.target !== false){
                    window.open( $firstElementChild.href);
                    return;
                }
            }


            var $modal = $this.find('[data-toggle="modal"]');
            if( $modal.length > 0 ) {
                var $modalTarget = $($modal.data('target'));
                if( $modalTarget.length > 0 ) {
                    $modalTarget.modal('show');
                    return;
                }
            }

            if( $target.is('a') && $target.attr('target') !== '_blank' ) {
                window.location = $target.attr('href');
                return;
            }else if($target.attr('target') === '_blank'){
                window.open($target.attr('href'));
                return;
            } 

            if( $target.parent().is('a') && $target.parent().attr('target') !== '_blank' ) {
                window.location = $target.parent().attr('href');
                return;
            }else if($target.parent().attr('target') === '_blank'){
                window.open($target.parent().attr('href'));
                return;
            } 

            var $cardLink = $this.find('a.card__name');

            if( $cardLink.length > 0 ) {
                window.location  = $cardLink.attr('href');
                return;
            }

            return;
        });

        $(elemSelector.tileTarget).on('click',function() {
            return false;
        });

    };

    var updateDivFocus = function(){
        $(elemSelector.clickableCard).hover(function(e){
            $(this).children(elemSelector.cardLink).toggleClass('card--link-hover');
        });

        $(elemSelector.cardLink).on('focus', function(){
            if($(this).is( ':focus' )){
                $($(this).parent()).addClass('card--wrap');
            }
            else{
                $($(this).parent()).removeClass('card--wrap');
            }
         });

         $(elemSelector.cardLink).on('focus', function(){
            $($(this).parent()).addClass('card--wrap');
         });

         $(elemSelector.cardLink).on('focusout', function(){
            $($(this).parent()).removeClass('card--wrap');
         });


    };

    return {
      init:initialize
    };
  }());
rm.badge = (function() {
  'use strict';

  var initialize = function() {
    rm.badgeMobileVerification.init();
  };


  return {
    init: initialize
  };
}());
rm.badgeMobileVerification = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */
  var elemSelector = {
      badgeMobileVerification:    '.badge--mobile-verification',
      fieldVerificationCode:      '.js-field-verification-code',
      btnVerifyCode:              '.js-btn-verify-code'

  };
  var initialize = function() {
    bindKeyPressEvent();
  };

  var bindKeyPressEvent= function(){

    $(elemSelector.badgeMobileVerification).each(function(){
      eventForBadgeForm($(this));
    });

  };

  var eventForBadgeForm = function($badgeMobileVerification){
    var $fieldVerificationCode = $badgeMobileVerification.find(elemSelector.fieldVerificationCode);
    var $btnVerifyCode = $badgeMobileVerification.find(elemSelector.btnVerifyCode);

    $fieldVerificationCode.keyup(function() {
       //disble the Verify button if its empty
       if($.trim($fieldVerificationCode.val())===''){
         //$btnVerifyCode.attr('disabled','disabled');
       }
       else{
         //$btnVerifyCode.removeAttr('disabled');
       }
    });
  };

  return {
    init: initialize
  };
}());

  rm.dropdown = (function() {
    'use strict';

    /* -- VARIABLE SETUP -- */
    var elemSelector = {
          modalImageTrigger:    '.modal-image-trigger',
          modalImageThumbnail:  '.modal-image-thumbnail',
          modalImageBig:        '.modal-image-big'
        };

    var initialize = function() {

    };

    var resetSelection = function($select){
      $select.val([]);
      //$select.trigger('change.abs.preserveSelected');
      //$select.selectpicker('refresh');
    };

    return {
      init: initialize,
      resetSelection:resetSelection
    };
  }());
/* globals Unison */
rm.search = (function () {
    'use strict';

    var initialize = function () {
      // Cache selectors
    var $window = rm.globals.DOM.window,
        $reportsCountWrapper = $('.reports-count-wrapper'),
        $searchWrapper = $('.search-wrapper'),
        $searchControl = $('.search-control'),
        $searchClear =  $('#search-clear'),
        $groupBy =  $('#groupby-pr'),
        $reportsCount = $('.reports-count'),
        dropdownTooltip = 'The group by function is only available when there is no Search Test Name specified',
        searchRef = '',
        tableRef = '',
        alertMessageRef = '',
        initialTableContent = '',
        lastOrder = [0, 'desc'],
        searchArr = [],
        searchWholeWord = [],
        searchInitials = [],
        rowsArr = [];

        searchRef = $searchControl.attr('data-search-ref');
        tableRef =  $searchControl.attr('data-table-ref');
        alertMessageRef = $searchControl.attr('data-alert-message-ref');
        initialTableContent = $(tableRef).html();
        var dataTable = $(tableRef).DataTable();
        dataTable.order([lastOrder[0], lastOrder[1]]).draw();
        var dataTableLength = dataTable.rows().nodes().length;
        var originalRows = dataTable.rows().nodes();
        var tooltipText = $searchControl.attr('data-tooltip-text');
        var dropdownTooltipText = $groupBy.parent().attr('data-tooltipText');
        var tableId = $searchControl.attr('data-table-ref');
        checkDropdownValue($groupBy.val());

        if((rm.globals.DOM.body.hasClass('pathology')))
            tableRef = '#pathology-ng';

        $searchControl.on('input', function (e) {
            searchArr = [];
            rowsArr = [];
            searchWholeWord = [];
            searchInitials = [];
            var value = $(this).val();
            var length = value.length;
            var charArr = [];
            var notSpecialChar = new RegExp('[a-zA-Z0-9]', 'i');
            while (length--) {
            	if(notSpecialChar.test(value.charAt(length))){
            		charArr.push(value.charAt(length));
            	}
            }
            charArr.reverse();
            rm.sessionStorage.setSession('searchTestName', value);

            if (value === '') {
                $groupBy.removeAttr('disabled');
                $groupBy.parent().removeAttr('data-content').removeClass('group-disabled');
                drawTable(originalRows, false);
                $searchClear.addClass('hidden');
                $(alertMessageRef).addClass('hidden');
                $reportsCountWrapper.addClass('hidden');
                $(tableId).find('th').css('pointer-events', 'auto');
                $(tableId).find('th > i').removeClass('hidden');
                originalRows.rows().every(function () {
                	$(this.node()).find('div.test-name').removeClass('highlight-parent').unhighlight();
                });
            } else {
                $groupBy.attr('disabled',true);
                $groupBy.parent().attr('data-content', dropdownTooltipText).addClass('group-disabled');
            	$searchClear.removeClass('hidden');
                $(tableId).find('th > i').addClass('hidden');

                var patternMatchWholeWord = charArr.join(''),
                patternMatchInitials      = '^' + charArr.join('\\w*\\s+') + '\\w*$';
                var pattern = charArr + '.*?';
                if (charArr.length > 1) {
                    pattern = charArr.join('.*?');
                }
                var regExp = new RegExp(pattern, 'i');

                var regExpWholeWord = new RegExp(patternMatchWholeWord,'i'),
                    regExpInitials = new RegExp(patternMatchInitials,'i');
                $(tableId).find('tr').removeAttr('data-rowid');
                $(tableId).find('th').css('pointer-events', 'none');

                if(dataTable.order().length > 0) {
                    lastOrder = $.extend(true, [], dataTable.order()[0]);
                }
                dataTable.order([lastOrder[0], lastOrder[1]]).draw();
                dataTable.rows().every(function (rowIdx, tableLoop, rowLoop) {

                    var testName = $(this.node()).find(searchRef).text();
                    if (regExpWholeWord.test(testName)) {
                    	$(this.node()).attr('data-rowid', rowIdx);
                        searchWholeWord.push(this.node());
                    } else if(regExpInitials.test(testName)){
                        console.log('match init:' + testName);
                        $(this.node()).attr('data-rowid', rowIdx);
                        searchInitials.push(this.node());
                    } else if(regExp.test(testName)){
                        $(this.node()).attr('data-rowid', rowIdx);
                        searchArr.push(this.node());
                    } else {
                        $(this.node()).removeAttr('data-rowid');
                        rowsArr.push(this.node());
                    }
                });
                console.log('search value:' + value);
                console.log('wholeMatches:' + searchWholeWord.length);
                console.log('initialsMaches:' + searchInitials.length);
                console.log('otherMatches:' + searchArr.length);
                console.log('unMatches:'+ rowsArr.length);

                var finalArr = searchWholeWord.concat(searchInitials).concat(searchArr).concat(rowsArr);

                var totalMatchedLength = searchWholeWord.length + searchInitials.length + searchArr.length;

                drawTable(finalArr, true);
                // dataTable.clear();
                // dataTable.rows.add(finalArr);
                // dataTable.draw();
                triggerSearch(charArr);
                $(alertMessageRef).removeClass('hidden');
                $reportsCountWrapper.removeClass('hidden');
                $reportsCount.text(totalMatchedLength + ' of ' + dataTableLength + ' Test Names matching ' + '"' + value + '"');

            }

        });

        $(document).on('change', '#groupby-pr', function() {
            $searchControl.val('');
            $searchClear.addClass('hidden');
            $(tableId).find('th > i').removeClass('hidden');
            originalRows.rows().every(function () {
              $(this.node()).find('div.test-name').removeClass('highlight-parent').unhighlight();
            });
            var dropdown = $(this);
            if(dropdown.val() === 'ng') {
                $searchControl.removeAttr('disabled');
                $searchControl.parent().removeClass('search-wrapper--disabled');
                $searchWrapper.removeAttr('data-content');
                $(tableId).find('th').css('pointer-events', 'auto');
                drawTable(originalRows, false);
            } else {
                $searchWrapper.attr('data-content', tooltipText);
                $searchControl.attr('disabled', 'disabled');
                $searchControl.parent().addClass('search-wrapper--disabled');
                $searchWrapper.tooltip({position: 'bottom'});
                $reportsCountWrapper.addClass('hidden');
                $(alertMessageRef).addClass('hidden');
            }
          });

        $searchControl.focus(function(){
             $('html,body').animate({scrollTop:$('#search-control-wrapper').offset().top - 200}, 1000);
        });

        $searchClear.hover(function() {
            $(this).removeClass('icon--clear-default');
            $(this).addClass('icon--clear-hover');
            }, function(){
            $(this).removeClass('icon--clear-hover');
            $(this).addClass('icon--clear-default');
        });

        $searchClear.focus(function() {
           $(this).removeClass('icon--clear-default');
           $(this).removeClass('icon--clear-hover');
           $(this).addClass('icon--clear-active');
        });

        $searchClear.blur(function() {
           $(this).removeClass('icon--clear-active');
           $(this).removeClass('icon--clear-hover');
           $(this).addClass('icon--clear-default');
        });

        $searchClear.on('click', function (e) {
           e.preventDefault();
           $(this).addClass('hidden');
           $searchControl.val('').trigger('input');
           $searchControl.focus();
        });

        $(tableRef).on('page.dt', function () {
            var table = $(tableRef).DataTable();
            rm.sessionStorage.setSession('pathActivePage', table.page.info().page);
        });

        $(tableRef).on( 'length.dt', function (e, settings, data) {
            $('.pathology .dataTables_length .native-select').val(data);
            rm.sessionStorage.setSession('pathPageLength', data);

        });

        function triggerSearch(value) {
        	$(tableId).find('div.test-name').removeClass('highlight-parent');
            $(searchRef).unhighlight();
            if(value.length > 0) {
                $.each(value, function( i, val ) {
                    $(tableId).find('tr[data-rowid] '+searchRef).highlight(val);
                });
                $(tableId).find('tr[data-rowid] .test-name').addClass('highlight-parent');
            }
        }

        function drawTable(data, reset) {
           if (reset === undefined) { reset = true; }
            dataTable.clear();
            dataTable.rows.add(data);
            if(dataTable.order().length > 0) {
                lastOrder = $.extend(true, [], dataTable.order()[0]);
                console.log(dataTable.order()[0]);
            }
            if(reset) {
            	dataTable.order.neutral().draw();
            } else {
            	dataTable.order( [ lastOrder[0], lastOrder[1] ] ).draw();
            }
        }

        function checkDropdownValue(value){
            $searchClear.addClass('hidden');
            $(tableId).find('th > i').removeClass('hidden');

            if($groupBy.attr('disabled') === 'disabled'){
                $searchControl.attr('disabled', 'disabled');
                $searchWrapper.removeAttr('data-content');
                $reportsCountWrapper.addClass('hidden');
                $(alertMessageRef).addClass('hidden');
            } else if (value === 'ng') {
                $searchControl.removeAttr('disabled');
                $searchControl.parent().removeClass('search-wrapper--disabled');
                $searchWrapper.removeAttr('data-content');
                $(tableId).find('th').css('pointer-events', 'auto');
            } else {
                $searchWrapper.attr('data-content', tooltipText);
                $searchControl.attr('disabled', 'disabled');
                $searchControl.parent().addClass('search-wrapper--disabled');
                $searchWrapper.tooltip({position: 'bottom'});
                $reportsCountWrapper.addClass('hidden');
                $(alertMessageRef).addClass('hidden');
            }
        }

        function unHighlight() {

        }
    };

    // public api
    return {
        init: initialize
    };

})();
rm.modal = (function () {
  'use strict';

  var elemSelector = {
    modal: '.modal',
    printBtn: $('.modal-print')
  };

  // Cache selectors
  var $modal;

  var initialize = function () {
    $modal = $(elemSelector.modal);
    if (!$modal.length) { return true; }

    $modal.on('shown.bs.modal', function () {
      if(screen.width < 500 && navigator.userAgent.match(/Android/i) ) { // jshint ignore:line
          $('.fade.in').css('opacity','0.99');
      } 
    });

    $('body').on('click', '.btn, a', function() {
      var $modalInvoker = $(this);
      $('body').on('hidden.bs.modal', '.modal', function() {
        var activeModal = $('.modal.in');
        var activeModalCount = activeModal.length;
        if($('.loader-active').not(':hidden').length > 0) {
          //if loader is active do not return focus
          $('.loader-active').attr('tabindex', -1).focus();
        } else if($(this).attr('disable-return-focus') === 'true') {
          $(this).removeAttr('disable-return-focus');
          return;
        } else {
          if(activeModalCount === 0) {
            $modalInvoker.focus();
          }
        }
      });
    });
    
    if(0 !== $('.high_link__actual-link').length) {
      $('.high_link__actual-link').on('focus', function() {
        $(this).parents('.high_link, .high_link-top').addClass('high_link--focus');
      }).blur(function() {
        $(this).parents('.high_link, .high_link-top').removeClass('high_link--focus');
      });
    }

    bindRemoveDocModal();
    bindPreventDefaultIcon();
    bindChainedModal();
    bindFormResetActions();
    bindModalPrint();
    bindRemoveHighlightonDismiss();
    bindResetFormonDismiss();
    bindAdvancdCarePlanRemoveDocModal();
    bindModalFocusTrap();
    bindMultipleModalFocus();
    bindMobileOnboardingFix();
  };
  
  var bindFormResetActions = function() {
  
    /* Find the selectpicker and reset */
    $(elemSelector.modal).find('form').each(function(i, formElement) {
      
      if(0 !== $(formElement).find('[type="reset"]').length) {
        
        //by reset btn click since form reset is bypassed by modal dismiss
        $(formElement).find('[type="reset"]').on('click', function() {
          if(0 !== $(this.form).find('.selectpicker').length) {
            $(this.form).find('.selectpicker').selectpicker('deselectAll'); 
          }
        });
        
        //by form reset if somehow someone is invoking reset programatically
        $(formElement).on('reset', function() {
          if(0 !== $(this).find('.selectpicker').length) {
            $(this).find('.selectpicker').selectpicker('deselectAll'); 
          }
        });
      }
    });
         
  };
  
  var bindChainedModal = function() {
    var chain = $('.chain-modal');
    
    chain.each(function(i, button) {
      $(button).on('click', function() {
        $('#' + $(this).attr('data-modal-chain')).modal()
          .on('shown.bs.modal', function() {
            $('body').addClass('modal-open');
          });
      });
    });
  };
  
  var bindModalPrint = function() {
    $('.modal').on('show.bs.modal', function() {
      $('body').addClass('modal-printing');
      $(this).find('.modal-content').addClass('printable');
    });

    $('.modal').on('hide.bs.modal', function() {
      $('body').removeClass('partial-print').removeClass('modal-printing');
      $('.modal-content').removeClass('printable');
      if($('.printable-container').length <= 0) return;
      $('.printable-container').remove();
    });
  };

  //remove document
  var bindRemoveDocModal = function(){
    $('#formRemoveDocument').on('success.form.fv', function(e) {
      $('#modalConfirmRemovefromMHR').modal({
        'backdrop' : 'static',
        'keyboard' : false
      });
    
      e.preventDefault();
    });   
  };

  var bindPreventDefaultIcon = function () {
    $('.icon--info').on('click', function(e) {
      e.preventDefault();
    });
  };
  
  var bindRemoveHighlightonDismiss = function() {
    $('.modal').on('hide.bs.modal', function() {
      if (window.getSelection) {
        window.getSelection().removeAllRanges();
      } else if (document.selection) {
        document.selection.empty();
      }
    });
  };
  
  var bindResetFormonDismiss = function() {
    $('.modal').on('hide.bs.modal', function() {
      if(0 !== $(this).find('form').length) {
        $(this).find('form').get(0).reset();
        $(this).find('form').data('formValidation').resetForm(true);
        $(this).find('form').find('select').trigger('change');
      }
    });
  };

  //advance care planning document
  var bindAdvancdCarePlanRemoveDocModal = function(){
    $('#advanced-care-plan-remove-form').on('success.form.fv', function(e) {
      $('#modalConfirmRemovefromMHR').modal({
        'backdrop' : 'static',
        'keyboard' : false
      });
    
      e.preventDefault();
    });   
  };

  var bindModalFocusTrap = function() {
    $('.modal').on('show.bs.modal', function() {
      var modalEL = this;
      var lastActiveEl;

      var iframes = $(this).find('iframe').not('*[aria-hidden="true"]');

      if(iframes.length > 0) {
        iframes.each(function(i, el) {
          var iframe = $(el);
            if($(el).parents('.iframe-container').length === 0) {
              iframe.wrap('<div class="iframe-container" tabindex="0"></div>');
            }
        });

        if($('.iframe-container').length > 0) {
          $('.iframe-container').on('focus', function() {
            $(this).addClass('iframe-focused');
          }).on('blur', function() {
            $(this).removeClass('iframe-focused');
          });
        }
      }

      $(modalEL).on('keydown keypress', function(e) {
        var focusable = 'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), *[tabindex], *[contenteditable]';
        
        var activeElements = $(modalEL).find(focusable).not($(':hidden, *[aria-hidden="true"]'));
        
        if(0 !== $(modalEL).find('.carousel').length) {
          //if modal has carousel then modify the rules in finding the active element
          activeElements = $(modalEL).find('.carousel-inner .active, .carousel__control-wrap, .carousel-indicators, .modal-close').find(focusable).not('.hidden').not('*[tabindex="-1"]');
        }
        
        if(e.shiftKey && (e.key === 'Tab' || e.keyCode === 9 || e.which === 9)) {
          if($(e.target).is(activeElements.get(0))) {
            e.preventDefault();
            activeElements.get(activeElements.length - 1).focus();
          } else if($(modalEL).find(focusable).length === 1 || $(e.target).is(modalEL)) {
            e.preventDefault();
            activeElements.get(0).focus();
          }
        } else if(e.key === 'Tab' || e.keyCode === 9 || e.which === 9) {
          
          if($(e.target).is(activeElements.get(activeElements.length - 1))) {
            e.preventDefault();
            activeElements.get(0).focus();
          }
        }
      });
    });
  };

  var bindMultipleModalFocus = function(){
    $modal = $(elemSelector.modal);
    $modal.on('hidden.bs.modal', function(){
      var activeModal = $('.modal.in');
      var activeModalCount = activeModal.length;
      if(activeModalCount >= 1) {
        activeModal.attr('tabindex', '0');
        activeModal.focus();
      }
    });
  };
  
  var bindMobileOnboardingFix = function() {
    var mobileAgent = /iPhone|iPod|iPad|Android/.test(navigator.userAgent); // jshint ignore:line
    
    if(mobileAgent) {
      $(window).on('load', function() {
        $(document.body).wrapInner('<div class="landing-content-wrapper"></div>');
        $('#modalOnboarding').insertAfter($('.landing-content-wrapper'))
          .on('show.bs.modal', function() {
            $('.landing-content-wrapper').attr('aria-hidden', true);
          })
          .on('hidden.bs.modal', function() {
            $('.landing-content-wrapper').removeAttr('aria-hidden');
          });
        
      });
    }
  };


  return {
    init: initialize
  };
}());
rm.modalImage = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */
  var elemSelector = {
        modalImageTrigger:    '.modal-image-trigger',
        modalImageThumbnail:  '.modal-image-thumbnail',
        modalImageBig:        '.modal-image-big'
      };

  var initialize = function() {
    bindEvents();
  };

  var bindEvents = function(){
    //ChangeImage in Modal on click of Modal Thumbnail
    $(elemSelector.modalImageTrigger).bind('click',function(){
      var $modalImageThumb = $(this).closest('.modal-image').find(elemSelector.modalImageThumbnail);
      var thumbnailSrc = '';

      if($modalImageThumb.attr('data-large-image')!==undefined){
        thumbnailSrc = $modalImageThumb.attr('data-large-image');
      }
      else{
        thumbnailSrc = $modalImageThumb.attr('src');
      }
      $(this).closest('.modal-image').find(elemSelector.modalImageBig).attr('src',thumbnailSrc);
    });
  };


  return {
    init: initialize
  };
}());
rm.verifyIdentity = (function() {
  'use strict';

  var initialize = function() {
    setMatrixForVerifyIdentity();
    bindEvents();
  };

  var imagesData = {
    noImage: 'img/assets/no_image.jpg',
    path :    'img/assets/certificates/'
  };

  var bindEvents = function(){
    rm.verifyIdentityStep1.init();
    rm.verifyIdentityStep2.init();
    rm.verifyIdentityStep3.init();
  };

  var setMatrixForVerifyIdentity = function(){
    var myDocs = {
      drivingLicence:                 'driver-licence',
      citizenshipCertificate:         'citizenship-certificate',
      birthCertificate:               'birth-certificate',
      marriageCertifiicate:           'marriage-certifiicate',
      immicard:                       'immicard'
    };

    rm.globals.logics.verifyIdentity = {
      australianPassport : [myDocs.drivingLicence, myDocs.citizenshipCertificate, myDocs.birthCertificate, myDocs.marriageCertifiicate],
      citizenshipCertificate : [myDocs.drivingLicence, myDocs.marriageCertifiicate],
      immiCard : [myDocs.drivingLicence, myDocs.marriageCertifiicate],
      birthCertificate : [myDocs.drivingLicence, myDocs.marriageCertifiicate],
      australianVisa : [myDocs.drivingLicence, myDocs.marriageCertifiicate, myDocs.immicard]
    };
  };

  //This function is common for Birth & Marriage certificate and being called in another js files
  var getCertificateImageFromLogic= function(matrixCertificate, stateCode, registrationDay, registrationMonth, registrationYear){
    var certificateImageSrc=imagesData.noImage;

    //By default Day/Month/Year should have some values to make a date
    var regDay = (registrationDay==='')? '1' : registrationDay;
    var regMonth = (registrationMonth==='')? '1' : registrationMonth;
    var regYear = (registrationYear==='')? 'current' : registrationYear;

    //Get matrix json for specific state
    var currentStateData = matrixCertificate[stateCode];

    //if no image available for speicifc state then return default one
    if(currentStateData===undefined){
      return certificateImageSrc;
    }

    for(var i=0;i<currentStateData.length;i++){

      //create Start & End dates from Matrix
      var startData = currentStateData[i].startDate.split('-');
      var endData = currentStateData[i].endDate.split('-');
      var startDate = new Date(startData[2], startData[1] - 1, startData[0]);
      var endDate = 'current';
      if(endData[0]!=='current'){
        endDate = new Date(endData[2], endData[1] - 1, endData[0]);
      }

      //If No year is selected, always show Current certificate
      if(regYear==='current'){
        if(endDate ==='current'){
          certificateImageSrc = imagesData.path + stateCode +'/'+ currentStateData[i].image;
          break;
        }
      }
      else{//When at least Year is selected, day/month default values are '1', so we can make a date
        var registrationDate = new Date(regYear, regMonth - 1, regDay);

        //Only case when end date is not current
        if(endDate!=='current'){
          if(registrationDate<=endDate && registrationDate>=startDate){
            certificateImageSrc = imagesData.path + stateCode +'/'+ currentStateData[i].image;
            break;
          }
        }
        else{
          if(registrationDate>=startDate){
            certificateImageSrc = imagesData.path + stateCode +'/'+ currentStateData[i].image;
            break;
          }
        }
      }
    }

    return certificateImageSrc;
  };

  return {
    init: initialize,
    getCertificateImageFromLogic:getCertificateImageFromLogic
  };
}());
rm.verifyIdentityStep1 = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */
  var elemSelector = {
        dropdownTypeOfCard:     '#dropdown-type-of-card',
        dropdownColorOfCard:    '#dropdown-color-of-card',
        rowMedicare:            '#js-medicare-card-details',
        rowDAV:                 '#js-dav-card-details',
        colExpiryDay:           '.js-col-expiry-day',
        imgMedicarCardNumber:   '.modal-image--img-medicare-card-number .modal-image-thumbnail',
        imgMedicarCardRef:      '.modal-image--img-medicare-card-ref .modal-image-thumbnail'
      };

  var initialize = function() {
    bindEvents();
  };

  var bindEvents = function(){

    //Switch between DVA/Medicare Card
    $(elemSelector.dropdownTypeOfCard).change(function(){
      var value = $( elemSelector.dropdownTypeOfCard + ' option:selected' ).val();

      if(value==='medicare'){
        $(elemSelector.rowMedicare).removeClass('hidden');
        $(elemSelector.rowDAV).addClass('hidden');
      }
      else{
        $(elemSelector.rowMedicare).addClass('hidden');
        $(elemSelector.rowDAV).removeClass('hidden');
      }

      var $form = $(this).closest('form.js-validate'),
        validation = $form.data('formValidation');

      // Reset if there is formValidation attached to this form
      if (validation) {
        validation.resetForm();
      }

    });


    //Change color of medicare card
    $(elemSelector.dropdownColorOfCard).change(function(){
      var value = $( elemSelector.dropdownColorOfCard + ' option:selected' ).val();
      $(elemSelector.imgMedicarCardNumber).attr('src','img/assets/medicare-cards/medicare_card_'+ value +'_number.png');
      $(elemSelector.imgMedicarCardRef).attr('src','img/assets/medicare-cards/medicare_card_'+ value +'_ref.png');

      //if card is green we do not need Day dropdownColorOfCard
      if(value==='green'){
        $(elemSelector.colExpiryDay).addClass('hidden');
      }
      else{
        $(elemSelector.colExpiryDay).removeClass('hidden');
      }
    });
  };

  return {
    init: initialize
  };
}());
rm.verifyIdentityStep2 = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */
  var elemSelector = {
        formUsableAccessStep2:      '#formUsableAccessStep2',
        dropdownProofType:          '#formUsableAccessStep2 #dropdown-proof-type',
        rowsProofType:              '#formUsableAccessStep2 .js-proof-type',
        supportedDocumentsList:     '#formUsableAccessStep2 #supported-documents-list'
      };

  var initialize = function() {
    bindEvents();
    updateSupportedDocuments();
  };

/*---------Events---------*/
  var bindEvents = function(){
    eventChangeProofDocument();
  };

  var eventChangeProofDocument = function(){
    $(elemSelector.dropdownProofType).change(function(){
      var value = $( elemSelector.dropdownProofType + ' option:selected' ).val();

      //Show/hide forms according to selection
      $(elemSelector.rowsProofType).addClass('hidden');
      $('#js-'+value).removeClass('hidden');

      updateSupportedDocuments();
    });
  };

/*-------Functions---------*/
  //This will update the list for supported documents
  var updateSupportedDocuments = function(){
    var proofDocument = $( elemSelector.dropdownProofType + ' option:selected' ).val();
    var supportedDocs = rm.globals.logics.verifyIdentity.australianPassport;
    var $supportedDocumentsList =  $(elemSelector.supportedDocumentsList);

    switch (proofDocument) {
        case 'australian-passport':
            supportedDocs = rm.globals.logics.verifyIdentity.australianPassport;
            break;
        case 'citizenship-certificate':
            supportedDocs = rm.globals.logics.verifyIdentity.citizenshipCertificate;
            break;
        case 'immi-card':
            supportedDocs = rm.globals.logics.verifyIdentity.immiCard;
            break;
        case 'birth-certificate':
            supportedDocs = rm.globals.logics.verifyIdentity.birthCertificate;
            break;
        case 'australian-visa':
            supportedDocs = rm.globals.logics.verifyIdentity.australianVisa;
            break;
    }

    //reset all supported docs to inactive
    $supportedDocumentsList.find('.stylish-list-item').each(function(){
      $(this).removeClass('stylish-list-item--inactive').removeClass('stylish-list-item--active');
      //donot remove class 'stylish-list-item--striked', as if this is striked from server, then user will not be allowed to update that document
    });

    //Mark active the required supported docs
    $.each(supportedDocs, function() {
      var idSupportedDoc = this;
      $supportedDocumentsList.find('*[data-item-text="'+ idSupportedDoc +'"]').addClass('stylish-list-item--active');
    });
  };

  return {
    init: initialize
  };
}());
rm.verifyIdentityStep3 = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */
  var elemSelector = {
        dropdownAdditionalIdentification:          '#formUsableAccessStep3 #dropdown-additional-identification',
        rowsAdditionalIdentification:              '#formUsableAccessStep3 .js-additional-identification'
      };

  var initialize = function() {
    bindEvents();
  };

/*---------Events---------*/
  var bindEvents = function(){
    eventChangeAdditionalDocument();
  };

  var eventChangeAdditionalDocument = function(){
    $(elemSelector.dropdownAdditionalIdentification).change(function(){
      var value = $( elemSelector.dropdownAdditionalIdentification + ' option:selected' ).val();

      //Show/hide forms according to selection
      $(elemSelector.rowsAdditionalIdentification).addClass('hidden');
      $('#js-'+value).removeClass('hidden');
    });
  };


/*-------Functions---------*/


  return {
    init: initialize
  };
}());
/* globals Unison */
/* jshint unused:false */

rm.rollTo = (function () {
  'use strict';

  var rolltoDuration = 500; //ms

  // Cache selectors
  var $rollTo,
    $stickyHeader;


  var initialize = function () {
    $rollTo = $('.rollto');
    if (!$rollTo.length) { return false; }


    bindRollTo();
  };

  /*
   * Roll to the top of the given element selector or jQuery object
   *  - NB. selector may be a selector or jQuery object
   */
  var rollTo = function (selector) {
    var $target = (selector instanceof jQuery ? selector : $(selector)),
      $stickyHeader = $('.sticky--header'),
      offset = ($stickyHeader.length ? $stickyHeader.outerHeight() : 0),
      stickyOffset = 0;

    stickyOffset = (Unison.fetch.now().name === 'xs') ? 80 : 0; // 80 is the stickyHeader top position

    if ($target.length) {
      $('html, body').animate({
        scrollTop: $target.offset().top - offset + stickyOffset
      }, rolltoDuration, function() {
         $('#top').attr('tabindex',-1).focus();
      });
    }
  };

  var bindRollTo = function () {
    if (!$rollTo.length) { return false; }

    $('.rollto').on('click keypress', function (e) {
      if (e.which === 13 || e.type === 'click'){
      e.preventDefault();

      var $this = $(this),
        target = $this.attr('data-rollto-target') || $this.attr('href');
      rollTo(target);
      }
    });
  };

  // public api
  return {
    init: initialize,
    to: rollTo
  };

})();
rm.childhoodQuestionnaire = (function () {
  'use strict';

  var textAreaOne,
    textAreaTwo,
    textAreaThree,
    textAreaFour,
    textAreaFive,
    textAreaSix,
    textAreaSeven,
    textAreaEight,
    textAreaNine,
    textAreaTen,
    radioButtonsTwo,
    radioButtonsThree,
    radioButtonsFour,
    radioButtonsFive,
    radioButtonsSix,
    radioButtonsSeven,
    radioButtonsEight,
    radioButtonsNine,

    formTwoRadioButtonsOne,
    formTwoRadioButtonsTwo,
    formTwoRadioButtonsThree,
    formTwoRadioButtonsFour,
    formTwoRadioButtonsFive,
    formTwoRadioButtonsSix,
    formTwoRadioButtonsSeven,
    formTwoRadioButtonsEight,
    formTwoRadioButtonsNine,

    formThreeRadioButtonsOne,
    formThreeRadioButtonsTwo,
    formThreeRadioButtonsThree,
    formThreeRadioButtonsFour,
    formThreeRadioButtonsFive;

  var elemSelector = {
    editForm: '#childhood-questionnaire-edit',
    navToolbar: '.toolbar-nav'
  };

  // Cache selectors
  var $buttons = $(elemSelector.actionButtons),
    $navToolbar = $(elemSelector.navToolbar),
    $editForm = $(elemSelector.editForm),
    $addForm = $(elemSelector.addForm);

  var initialize = function () {
    if ($editForm.length) {
      bindEvents();
      // saveFormInitialState();
      bindEditCancelButton();
    } else if ($addForm.length) {
      bindEvents();
    } else {
      return false;
    }
  };

  var bindEditCancelButton = function() {
    $('.js-cancel-button').on('click', function() {
      // restoreFormState();
      enableToolbar();
      // $(this).prop('disabled', true);
    });
  };

  var saveFormInitialState = function() {

    // Define our form elements that we wish to revert back to their initial state.

    // Form 1
    textAreaOne = $('[name="question-1-textarea"]').val();
    textAreaTwo = $('[name="question-2-textarea"]').val();
    textAreaThree = $('[name="question-3-textarea"]').val();
    textAreaFour = $('[name="question-4-textarea"]').val();
    textAreaFive = $('[name="question-5-textarea"]').val();
    textAreaSix = $('[name="question-6-textarea"]').val();
    textAreaSeven = $('[name="question-7-textarea"]').val();
    textAreaEight = $('[name="question-8-textarea"]').val();
    textAreaNine = $('[name="question-9-textarea"]').val();
    textAreaTen = $('[name="question-10-textarea"]').val();

    radioButtonsTwo = $('[name="radio-buttons-2[]"]:checked').val();
    radioButtonsThree = $('[name="radio-buttons-3[]"]:checked').val();
    radioButtonsFour = $('[name="radio-buttons-4[]"]:checked').val();
    radioButtonsFive = $('[name="radio-buttons-5[]"]:checked').val();
    radioButtonsSix = $('[name="radio-buttons-6[]"]:checked').val();
    radioButtonsSeven = $('[name="radio-buttons-7[]"]:checked').val();
    radioButtonsEight = $('[name="radio-buttons-8[]"]:checked').val();
    radioButtonsNine = $('[name="radio-buttons-9[]"]:checked').val();

    // Form 2

    formTwoRadioButtonsOne = $('[name="form-two-radio-ques-1[]"]:checked').val();
    formTwoRadioButtonsTwo = $('[name="form-two-radio-ques-2[]"]:checked').val();
    formTwoRadioButtonsThree = $('[name="form-two-radio-ques-3[]"]:checked').val();
    formTwoRadioButtonsFour = $('[name="form-two-radio-ques-4[]"]:checked').val();
    formTwoRadioButtonsFive = $('[name="form-two-radio-ques-5[]"]:checked').val();
    formTwoRadioButtonsSix = $('[name="form-two-radio-ques-6[]"]:checked').val();
    formTwoRadioButtonsSeven = $('[name="form-two-radio-ques-7[]"]:checked').val();
    formTwoRadioButtonsEight = $('[name="form-two-radio-ques-8[]"]:checked').val();
    formTwoRadioButtonsNine = $('[name="form-two-radio-ques-9[]"]:checked').val();

    // Form 3

    formThreeRadioButtonsOne = $('[name="form-three-radio-ques-1[]"]:checked').val();
    formThreeRadioButtonsTwo = $('[name="form-three-radio-ques-2[]"]:checked').val();
    formThreeRadioButtonsThree = $('[name="form-three-radio-ques-3[]"]:checked').val();
    formThreeRadioButtonsFour = $('[name="form-three-radio-ques-4[]"]:checked').val();
    formThreeRadioButtonsFive = $('[name="form-three-radio-ques-5[]"]:checked').val();

  };

  var restoreFormState = function() {

    //Edit Questionnaire Form 1

    // Text area elements

    $('[name="question-1-textarea"]').val(textAreaOne);
    $('[name="question-2-textarea"]').val(textAreaTwo);
    $('[name="question-3-textarea"]').val(textAreaThree);
    $('[name="question-4-textarea"]').val(textAreaFour);
    $('[name="question-5-textarea"]').val(textAreaFive);
    $('[name="question-6-textarea"]').val(textAreaSix);
    $('[name="question-7-textarea"]').val(textAreaSeven);
    $('[name="question-8-textarea"]').val(textAreaEight);
    $('[name="question-9-textarea"]').val(textAreaNine);
    $('[name="question-10-textarea"]').val(textAreaTen);

    // Radio button
    $('[name="radio-buttons-2[]"').prop('checked', false);
    $('[name="radio-buttons-2[]"][value="' + radioButtonsTwo + '"]').prop('checked', true);

    // Radio button
    $('[name="radio-buttons-3[]"').prop('checked', false);
    $('[name="radio-buttons-3[]"][value="' + radioButtonsThree + '"]').prop('checked', true);

    // Radio button
    $('[name="radio-buttons-4[]"').prop('checked', false);
    $('[name="radio-buttons-4[]"][value="' + radioButtonsFour + '"]').prop('checked', true);

    // Radio button
    $('[name="radio-buttons-5[]"').prop('checked', false);
    $('[name="radio-buttons-5[]"][value="' + radioButtonsFive + '"]').prop('checked', true);

    // Radio button
    $('[name="radio-buttons-6[]"').prop('checked', false);
    $('[name="radio-buttons-6[]"][value="' + radioButtonsSix + '"]').prop('checked', true);

    // Radio button
    $('[name="radio-buttons-7[]"').prop('checked', false);
    $('[name="radio-buttons-7[]"][value="' + radioButtonsSeven + '"]').prop('checked', true);

    // Radio button
    $('[name="radio-buttons-8[]"').prop('checked', false);
    $('[name="radio-buttons-8[]"][value="' + radioButtonsEight + '"]').prop('checked', true);

    // Radio button
    $('[name="radio-buttons-9[]"').prop('checked', false);
    $('[name="radio-buttons-9[]"][value="' + radioButtonsNine + '"]').prop('checked', true);

    //Edit Questionnaire Form 2

    // Radio button
    $('[name="form-two-radio-ques-1[]"').prop('checked', false);
    $('[name="form-two-radio-ques-1[]"][value="' + formTwoRadioButtonsOne + '"]').prop('checked', true);

    // Radio button
    $('[name="form-two-radio-ques-2[]"').prop('checked', false);
    $('[name="form-two-radio-ques-2[]"][value="' + formTwoRadioButtonsTwo + '"]').prop('checked', true);

    // Radio button
    $('[name="form-two-radio-ques-3[]"').prop('checked', false);
    $('[name="form-two-radio-ques-3[]"][value="' + formTwoRadioButtonsThree + '"]').prop('checked', true);

    // Radio button
    $('[name="form-two-radio-ques-4[]"').prop('checked', false);
    $('[name="form-two-radio-ques-4[]"][value="' + formTwoRadioButtonsFour + '"]').prop('checked', true);

    // Radio button
    $('[name="form-two-radio-ques-5[]"').prop('checked', false);
    $('[name="form-two-radio-ques-5[]"][value="' + formTwoRadioButtonsFive + '"]').prop('checked', true);


    // Radio button
    $('[name="form-two-radio-ques-6[]"').prop('checked', false);
    $('[name="form-two-radio-ques-6[]"][value="' + formTwoRadioButtonsSix + '"]').prop('checked', true);

    // Radio button
    $('[name="form-two-radio-ques-7[]"').prop('checked', false);
    $('[name="form-two-radio-ques-7[]"][value="' + formTwoRadioButtonsSeven + '"]').prop('checked', true);

    // Radio button
    $('[name="form-two-radio-ques-8[]"').prop('checked', false);
    $('[name="form-two-radio-ques-8[]"][value="' + formTwoRadioButtonsEight + '"]').prop('checked', true);

    // Radio button
    $('[name="form-two-radio-ques-9[]"').prop('checked', false);
    $('[name="form-two-radio-ques-9[]"][value="' + formTwoRadioButtonsNine + '"]').prop('checked', true);

    //Edit Questionnaire Form 3

    // Radio button
    $('[name="form-three-radio-ques-1[]"').prop('checked', false);
    $('[name="form-three-radio-ques-1[]"][value="' + formThreeRadioButtonsOne + '"]').prop('checked', true);

    // Radio button
    $('[name="form-three-radio-ques-2[]"').prop('checked', false);
    $('[name="form-three-radio-ques-2[]"][value="' + formThreeRadioButtonsTwo + '"]').prop('checked', true);

    // Radio button
    $('[name="form-three-radio-ques-3[]"').prop('checked', false);
    $('[name="form-three-radio-ques-3[]"][value="' + formThreeRadioButtonsThree + '"]').prop('checked', true);

    // Radio button
    $('[name="form-three-radio-ques-4[]"').prop('checked', false);
    $('[name="form-three-radio-ques-4[]"][value="' + formThreeRadioButtonsFour + '"]').prop('checked', true);

    // Radio button
    $('[name="form-three-radio-ques-5[]"').prop('checked', false);
    $('[name="form-three-radio-ques-5[]"][value="' + formThreeRadioButtonsFive + '"]').prop('checked', true);


    $editForm.attr('data-dirty', false);
  };

  /*var enableControlButtons = function() {
    var buttons = $buttons.find('button');
    var inputs = $buttons.find('input');

    if(!$editForm.attr('data-dirty')) {
      buttons.prop('disabled', true);
    }
    inputs.removeClass('hide');
    buttons.removeClass('hide');
  };*/

  var disableToolbar = function() {
    var textarea = $editForm.find('textarea');
    var toolbarButtons = $navToolbar.find('button');


    toolbarButtons.prop('disabled', true);
    toolbarButtons.addClass('disabled');
    $('.toolbar-nav').addClass('hidden');
  };

  var enableToolbar = function() {
    var toolbarButtons = $navToolbar.find('button');

    toolbarButtons.prop('disabled', false);
    toolbarButtons.removeClass('disabled');
    $('.toolbar-nav').removeClass('hidden');
  };

  var bindEvents = function () {
    var inputs = $editForm.find('input');
    var textarea = $editForm.find('textarea');

    inputs.on('focus', function () {
      // $editForm.attr('data-dirty', true);
      // $('.js-cancel-button').attr('disabled', false);
      disableToolbar();
      // enableControlButtons();
    });

    textarea.on('focus', function () {
      // $('.js-cancel-button').attr('disabled', false);
      // $editForm.attr('data-dirty', true);
      disableToolbar();
      // enableControlButtons();
    });
  };

  // public api
  return {
    init: initialize,
    //disableForm: disableForm,
    saveFormState: saveFormInitialState
  };

})();
rm.chooseOptions = ( function () {
  'use strict';

  var selector = {
    collapseRadios: $('[data-collapse-btn]').closest('.form-group').find('input[type=radio]'),
  };

  var initialize = function(){

    // If any radio buttons within .form-group are clicked check if they are the collapse button

    $(selector.collapseRadios).click( function() {
      var button = $(this),
          groupName = button.attr('name'),
          collapseNumber = $('input[name=' + groupName + '][data-collapse-btn]').attr('data-collapse-btn'),
          dataContainer = $('[data-collapse-container="' + collapseNumber + '"]');

      // reset validation on show and hide
      $('form').data('formValidation').resetForm();

      if (button.attr('data-collapse-btn')) {
        dataContainer.collapse('show');
      } else {
        dataContainer.collapse('hide');
      }

    });

  };

  // public api
  return {
    init: initialize
  };

})();
/*jslint browser: true*/
/* Added below js to active icon in IE browser*/

rm.overview = (function () {
  'use strict';

  var initialize = function () {

    overviewClicked();

  };

  var overviewClicked = function() {
    $('.overview').click(function() {
      $(this).addClass('clicked').siblings().removeClass('clicked');
      var $link = $(this).find('a');
      if($link){
        window.location = $link.attr('href');        
      }         
    });
    $('.overview').keypress(function (e) {
      $(this).addClass('clicked').siblings().removeClass('clicked');
      var $link = $(this).find('a');
      if (e.which === 13) {
        window.location = $link.attr('href');
     }
   });
  };

  // public api
  return {
    init: initialize
  };
})();

/*Forms*/
rm.birthCertificate = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */

  //we need to use '-1' for month, because JS alwayes return month ahead of mentioned date. Please google..
  var datesLogic = {
    qld :       new Date(1996,(7-1),2),
    sa :        new Date(1999,(11-1),1),
    tas :       new Date(1999,(11-1),1),
    act :       new Date(2002,(5-1),1),
    nt :        new Date(1999,(7-1),12)
  };

  var matrixBirthCertificate = {
      act : [
              {startDate:'01-01-1930',endDate:'30-04-2002',image:'birthCertificate-act-01_01_1930-30_04_2002.jpg'},
              {startDate:'01-05-2002',endDate:'current',image:'birthCertificate-act-01_05_2002-current.jpg'}
            ],
      nsw : [
              {startDate:'01-01-1910',endDate:'31-12-1951',image:'birthCertificate-nsw-01_01_1910-31_12_1951.jpg'},
              {startDate:'01-01-1952',endDate:'current',image:'birthCertificate-nsw-01_01_1952-current.jpg'}
            ],
      nt : [
              {startDate:'01-01-1900',endDate:'31-12-1969',image:'birthCertificate-nt-01_01_1900-31_12_1969.jpg'},
              {startDate:'01-01-1970',endDate:'31-12-1998',image:'birthCertificate-nt-01_01_1970-31_12_1998.jpg'},
              {startDate:'01-01-1999',endDate:'current',image:'birthCertificate-nt-01_01_1999-current.jpg'}
            ],
      qld : [
              {startDate:'01-01-1958',endDate:'30-06-1996',image:'birthCertificate-qld-01_01_1958-30_06_1996.jpg'},
              {startDate:'01-07-1996',endDate:'current',image:'birthCertificate-qld-01_07_1996-current.jpg'}
            ],
      sa : [
              {startDate:'01-01-1944',endDate:'31-12-1959',image:'birthCertificate-sa-01_01_1944-31_12_1959.jpg'},
              {startDate:'01-01-1960',endDate:'31-12-1995',image:'birthCertificate-sa-01_01_1960-31_12_1995.jpg'},
              {startDate:'01-01-1996',endDate:'current',image:'birthCertificate-sa-01_01_1996-current.jpg'}
            ],
      tas : [
              {startDate:'01-01-1970',endDate:'current',image:'birthCertificate-tas-01_01_1970-current.jpg'}
            ],
      vic : [
              {startDate:'01-01-1929',endDate:'current',image:'birthCertificate-vic-01_01_1929-current.jpg'}
            ]
    };

    var notVerifiedBeforeYear = {
      nsw :       1914,
      vic :       1929,
      qld :       1953,
      wa  :       1930,
      sa  :       1944,
      nt  :       1870,
      act :       1930,
      tas :       1970
    };

  var elemSelector = {
        dropdownBirthStates:        '#birth-state-dropdown-states',
        dropdownBirthRegDay:        '#birth-registration-dropdown-day',
        dropdownBirthRegMonth:      '#birth-registration-dropdown-month',
        dropdownBirthRegYear:       '#birth-registration-dropdown-year',
        dropdownBirthIssueDay:      '#birth-doi-dropdown-day',
        dropdownBirthIssueMonth:    '#birth-doi-dropdown-month',
        dropdownBirthIssueYear:     '#birth-doi-dropdown-year',
        rowRegYear:                 '#js-birth-certificate .js-row-reg-year',
        rowRegDate:                 '#js-birth-certificate .js-row-reg-date',
        rowRegNumber:               '#js-birth-certificate .js-row-reg-number',
        rowIssueYear:               '#js-birth-certificate .js-row-date-of-issue-year',
        rowIssueDate:               '#js-birth-certificate .js-row-date-of-issue-date',
        rowCertNumber:              '#js-birth-certificate .js-row-cert-number',
        modalImageThumbnail:        '#js-birth-certificate .modal-image-thumbnail',
        notVerifiedWarningReg:      '#js-birth-certificate .js-warning-not-verified-registeration',
        notVerifiedWarningIssue:    '#js-birth-certificate .js-warning-not-verified-issue',
        btnNext:                    '.btn__next__step'
      };

  var initialize = function() {
    bindEvents();
  };

/*---------Events---------*/
  var bindEvents = function(){
    eventStateChange();
    eventRegDateChange();
    eventIssueDateChange();
  };

  var eventStateChange = function(){
    $(elemSelector.dropdownBirthStates).change(function(){
      //reset Registration Date/Year if already selected
      rm.dropdown.resetSelection($(elemSelector.dropdownBirthRegDay));
      rm.dropdown.resetSelection($(elemSelector.dropdownBirthRegMonth));
      rm.dropdown.resetSelection($(elemSelector.dropdownBirthRegYear));

      //reset Issue Date/Year if already selected
      rm.dropdown.resetSelection($(elemSelector.dropdownBirthIssueDay));
      rm.dropdown.resetSelection($(elemSelector.dropdownBirthIssueMonth));
      rm.dropdown.resetSelection($(elemSelector.dropdownBirthIssueYear));

      showHideFieldsForState();
      updateBirthCertificateImage();
      checkDocIfVerfiedElec();
    });
  };

  var eventRegDateChange = function(){
    $(elemSelector.dropdownBirthRegDay)
    .add(elemSelector.dropdownBirthRegMonth)
    .add(elemSelector.dropdownBirthRegYear).change(function(){
      showHideFieldsForState();
      updateBirthCertificateImage();
      checkDocIfVerfiedElec();
    });
  };

  var eventIssueDateChange = function(){
    $(elemSelector.dropdownBirthIssueDay)
    .add(elemSelector.dropdownBirthIssueMonth)
    .add(elemSelector.dropdownBirthIssueYear).change(function(){
      showHideFieldsForState();
      updateBirthCertificateImage();
      checkDocIfVerfiedElec();
    });
  };

/*-------Functions---------*/
  //This function will update the birthCertificate image source as per State/Year selected
  var updateBirthCertificateImage = function(){
    var stateCode = $( elemSelector.dropdownBirthStates + ' option:selected' ).val();
    var registrationDay = $( elemSelector.dropdownBirthRegDay + ' option:selected' ).val();
    var registrationMonth = $( elemSelector.dropdownBirthRegMonth + ' option:selected' ).val();
    var registrationYear = $( elemSelector.dropdownBirthRegYear + ' option:selected' ).val();
    var issueDay = $( elemSelector.dropdownBirthIssueDay + ' option:selected' ).val();
    var issueMonth = $( elemSelector.dropdownBirthIssueMonth + ' option:selected' ).val();
    var issueYear = $( elemSelector.dropdownBirthIssueYear + ' option:selected' ).val();
    var day,month,year;

    if(issueYear!==''){
      day = issueDay;
      month = issueMonth;
      year = issueYear;
    }
    else{
      day = registrationDay;
      month = registrationMonth;
      year = registrationYear;
    }

    var birthCertificateSrc = rm.verifyIdentity.getCertificateImageFromLogic(matrixBirthCertificate, stateCode, day, month, year);

    $(elemSelector.modalImageThumbnail).attr('src', birthCertificateSrc);
  };

  var checkDocIfVerfiedElec = function(){
    var actionYear = $( elemSelector.dropdownBirthRegYear + ' option:selected' ).val();
    var stateCode = $( elemSelector.dropdownBirthStates + ' option:selected' ).val();
    var yearLimit = parseInt(notVerifiedBeforeYear[stateCode]);
    var dateOfIssueYear = $( elemSelector.dropdownBirthIssueYear + ' option:selected' ).val();
    var $notVerifiedWarning;

    if(dateOfIssueYear!==''){
      actionYear = dateOfIssueYear;//actionYear can be either registrationYear or dateOfIssueYear
      $notVerifiedWarning = $( elemSelector.notVerifiedWarningIssue);
      $( elemSelector.notVerifiedWarningIssue).addClass('hidden');//always hide Reg warning box for Date Of Issue
    }
    else{
      $notVerifiedWarning = $( elemSelector.notVerifiedWarningReg);
      $( elemSelector.notVerifiedWarningIssue).addClass('hidden');//always hide Issue Year warning box for Registration Year
    }

    if(actionYear!=='' && parseInt(actionYear) < yearLimit){
      $notVerifiedWarning.removeClass('hidden');
      enableDisbaleFieldForYear('hide');
    }
    else {
      $notVerifiedWarning.addClass('hidden');
      enableDisbaleFieldForYear('show');
    }
  };

  //specific fields will be enabled/disabled if state can not verify doc before specific year
  var enableDisbaleFieldForYear = function(flag){
    if(flag==='show'){
      $(elemSelector.btnNext).removeClass('disabled').removeAttr('disabled');

      rm.disabledBlock.enableDisableBlock($(elemSelector.rowRegDate),'enable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowRegNumber),'enable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowIssueDate),'enable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowCertNumber),'enable');
    }
    else{
      $(elemSelector.btnNext).addClass('disabled').attr('disabled','disabled');

      rm.disabledBlock.enableDisableBlock($(elemSelector.rowRegDate),'disable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowRegNumber),'disable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowIssueDate),'disable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowCertNumber),'disable');
    }
  };

  //Some fields will not be required for specific state
  var showHideFieldsForState = function(){
    var stateCode = $( elemSelector.dropdownBirthStates + ' option:selected' ).val();
    var day = $( elemSelector.dropdownBirthRegDay + ' option:selected' ).val();
    var month = $( elemSelector.dropdownBirthRegMonth + ' option:selected' ).val();
    var year = $( elemSelector.dropdownBirthRegYear + ' option:selected' ).val();
    var issueDay = $( elemSelector.dropdownBirthIssueDay + ' option:selected' ).val();
    var issueMonth = $( elemSelector.dropdownBirthIssueMonth + ' option:selected' ).val();
    var issueYear = $( elemSelector.dropdownBirthIssueYear + ' option:selected' ).val();
    var dateOfRegistration, dateOfIssue;

    if(day!=='' && month!=='' && year!==''){
      dateOfRegistration = new Date(year,month - 1,day);
    }
    if(issueDay!=='' && issueMonth!=='' && issueYear!==''){
      dateOfIssue = new Date(issueYear,issueMonth - 1,issueDay);
    }

    switch (stateCode) {
        case 'act':
            $(elemSelector.rowRegYear).addClass('hidden');
            $(elemSelector.rowRegDate).addClass('hidden');
            $(elemSelector.rowRegNumber).removeClass('hidden');
            $(elemSelector.rowIssueYear).removeClass('hidden');
            $(elemSelector.rowIssueDate).removeClass('hidden');

            //This will be visible if (if date of issue is on or after 1/5/2002)
            if(dateOfIssue >=  datesLogic.act){
              $(elemSelector.rowCertNumber).removeClass('hidden');
            }
            else{
              $(elemSelector.rowCertNumber).addClass('hidden');
            }

            break;

        case 'nsw':
            $(elemSelector.rowRegYear).removeClass('hidden');
            $(elemSelector.rowRegDate).addClass('hidden');
            $(elemSelector.rowRegNumber).removeClass('hidden');
            $(elemSelector.rowIssueYear).addClass('hidden');
            $(elemSelector.rowIssueDate).addClass('hidden');
            $(elemSelector.rowCertNumber).addClass('hidden');

            break;

        case 'nt':
            $(elemSelector.rowRegYear).addClass('hidden');
            $(elemSelector.rowRegDate).addClass('hidden');
            $(elemSelector.rowRegNumber).removeClass('hidden');
            $(elemSelector.rowIssueYear).removeClass('hidden');
            $(elemSelector.rowIssueDate).removeClass('hidden');

            //This will be visible if (if date of issue is on or after 12/7/1999)
            if(dateOfIssue >=  datesLogic.nt){
              $(elemSelector.rowCertNumber).removeClass('hidden');
            }
            else{
              $(elemSelector.rowCertNumber).addClass('hidden');
            }

            break;

        case 'qld':
            $(elemSelector.rowRegYear).removeClass('hidden');
            $(elemSelector.rowRegDate).removeClass('hidden');

            //This will be visible if (if date of registration is on or after 2/7/1996)
            if(dateOfRegistration >=  datesLogic.qld){
              $(elemSelector.rowRegNumber).removeClass('hidden');
            }
            else{
              $(elemSelector.rowRegNumber).addClass('hidden');
            }

            $(elemSelector.rowIssueYear).addClass('hidden');
            $(elemSelector.rowIssueDate).addClass('hidden');
            $(elemSelector.rowCertNumber).addClass('hidden');

            break;

        case 'sa':
            $(elemSelector.rowRegYear).addClass('hidden');
            $(elemSelector.rowRegDate).addClass('hidden');
            $(elemSelector.rowRegNumber).removeClass('hidden');
            $(elemSelector.rowIssueYear).removeClass('hidden');
            $(elemSelector.rowIssueDate).removeClass('hidden');

            //This will be visible if (if date of issue is on or after 1/11/1999)
            if(dateOfIssue >=  datesLogic.sa){
              $(elemSelector.rowCertNumber).removeClass('hidden');
            }
            else{
              $(elemSelector.rowCertNumber).addClass('hidden');
            }

            break;

        case 'tas':
            $(elemSelector.rowRegYear).removeClass('hidden');
            $(elemSelector.rowRegDate).removeClass('hidden');

            //This will be visible if (if date of registration is on or after 1/11/1999)
            if(dateOfRegistration >=  datesLogic.tas){
              $(elemSelector.rowRegNumber).removeClass('hidden');
            }
            else{
              $(elemSelector.rowRegNumber).addClass('hidden');
            }

            $(elemSelector.rowIssueYear).addClass('hidden');
            $(elemSelector.rowIssueDate).addClass('hidden');
            $(elemSelector.rowCertNumber).addClass('hidden');

            break;

        case 'vic':
            $(elemSelector.rowRegYear).removeClass('hidden');
            $(elemSelector.rowRegDate).addClass('hidden');
            $(elemSelector.rowRegNumber).removeClass('hidden');
            $(elemSelector.rowIssueYear).addClass('hidden');
            $(elemSelector.rowIssueDate).addClass('hidden');
            $(elemSelector.rowCertNumber).addClass('hidden');

            break;

        case 'wa':
            $(elemSelector.rowRegYear).removeClass('hidden');
            $(elemSelector.rowRegDate).addClass('hidden');
            $(elemSelector.rowRegNumber).removeClass('hidden');
            $(elemSelector.rowIssueYear).addClass('hidden');
            $(elemSelector.rowIssueDate).addClass('hidden');
            $(elemSelector.rowCertNumber).addClass('hidden');

            break;
    }
  };

  return {
    init: initialize
  };
}());
rm.marriageCertificate = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */

  //we need to use '-1' for month, because JS alwayes return month ahead of mentioned date. Please google..
  var datesLogic = {
    qld :       new Date(1996,(7-1),1),
    sa :        new Date(1999,(11-1),1),
    act :       new Date(2002,(5-1),1)
  };

  var notVerifiedBeforeYear = {
    nsw :       1914,
    vic :       1990,
    qld :       1964,
    wa  :       1940,
    sa  :       1999,
    nt  :       1960,
    act :       1930,
    tas :       1970
  };

  var matrixMarriageCertificate = {
      nsw : [
              {startDate:'01-01-1914',endDate:'current',image:'marriageCertificate-nsw-01_01_1914-current.jpg'}
            ],
      nt : [
              {startDate:'01-01-1960',endDate:'current',image:'marriageCertificate-nt-01_01_1960-current.jpg'}
            ],
      qld : [
              {startDate:'03-09-1963',endDate:'30-06-1996',image:'marriageCertificate-qld-03_09_1963-30_06_1996.jpg'},
              {startDate:'01-07-1996',endDate:'current',image:'marriageCertificate-qld-01_07_1996-current.jpg'}
            ],
      sa : [
              {startDate:'01-01-1999',endDate:'current',image:'marriageCertificate-sa-01_01_1999-current.jpg'}
            ],
      tas : [
              {startDate:'01-01-1970',endDate:'current',image:'marriageCertificate-tas-01_01_1970-current.jpg'}
            ],
      vic : [
              {startDate:'01-01-1990',endDate:'31-12-2002',image:'marriageCertificate-vic-01_01_1990-31_12_2002.jpg'},
              {startDate:'01-01-2003',endDate:'current',image:'marriageCertificate-vic-01_01_2003-current.jpg'}
            ]
    };

  var elemSelector = {
        dropdownMarriageStates:      '#marriage-reg-dropdown-states',
        dropdownMrgRegDay:           '#marriage-reg-dropdown-day',
        dropdownMrgRegMonth:         '#marriage-reg-dropdown-month',
        dropdownMrgRegYear:          '#marriage-reg-dropdown-year',
        dropdownMrgIsuDay:           '#marriage-issue-dropdown-day',
        dropdownMrgIsuMonth:         '#marriage-issue-dropdown-month',
        dropdownMrgIsuYear:          '#marriage-issue-dropdown-year',
        rowMrgRegYear:               '#js-marriage-certificate .js-row-marriage-registration-year',
        rowMrgRegDate:               '#js-marriage-certificate .js-row-marriage-registration-date',
        rowMrgRegNumber:             '#js-marriage-certificate .js-row-marriage-registration-number',
        rowMrgIssueYear:             '#js-marriage-certificate .js-row-marriage-issue-year',
        rowMrgIssueDate:             '#js-marriage-certificate .js-row-marriage-issue-date',
        rowMrgCertNumber:            '#js-marriage-certificate .js-row-marriage-certifcatenumber',
        modalImageThumbnail:         '#js-marriage-certificate .modal-image-thumbnail',
        notVerifiedWarningReg:       '#js-marriage-certificate .js-warning-not-verified-registeration',
        notVerifiedWarningIssue:     '#js-marriage-certificate .js-warning-not-verified-issue',
        btnNext:                    '.btn__next__step'
      };

  var initialize = function() {
    bindEvents();
  };

/*---------Events---------*/
  var bindEvents = function(){
    eventStateChange();
    eventRegDateChange();
    eventIssueDateChange();
  };

  var eventStateChange = function(){
    $(elemSelector.dropdownMarriageStates).change(function(){
      //reset Registration Date/Year if already selected
      rm.dropdown.resetSelection($(elemSelector.dropdownMrgRegDay));
      rm.dropdown.resetSelection($(elemSelector.dropdownMrgRegMonth));
      rm.dropdown.resetSelection($(elemSelector.dropdownMrgRegYear));

      //reset Issue Date/Year if already selected
      rm.dropdown.resetSelection($(elemSelector.dropdownMrgIsuDay));
      rm.dropdown.resetSelection($(elemSelector.dropdownMrgIsuMonth));
      rm.dropdown.resetSelection($(elemSelector.dropdownMrgIsuYear));

      showHideFieldsForState();
      updateMarriageCertificateImage();
      checkDocIfVerfiedElec();
    });
  };

  var eventRegDateChange = function(){
    $(elemSelector.dropdownMrgRegDay)
    .add(elemSelector.dropdownMrgRegMonth)
    .add(elemSelector.dropdownMrgRegYear).change(function(){
      showHideFieldsForState();
      updateMarriageCertificateImage();
      checkDocIfVerfiedElec();
    });
  };

  var eventIssueDateChange = function(){
    $(elemSelector.dropdownMrgIsuDay)
    .add(elemSelector.dropdownMrgIsuMonth)
    .add(elemSelector.dropdownMrgIsuYear).change(function(){
      showHideFieldsForState();
      checkDocIfVerfiedElec();
    });
  };

/*-------Functions---------*/
  //This function will update the marriageCertificate image source as per State/Year selected
  var updateMarriageCertificateImage = function(){
    var stateCode = $( elemSelector.dropdownMarriageStates + ' option:selected' ).val();
    var registrationDay = $( elemSelector.dropdownMrgRegDay + ' option:selected' ).val();
    var registrationMonth = $( elemSelector.dropdownMrgRegMonth + ' option:selected' ).val();
    var registrationYear = $( elemSelector.dropdownMrgRegYear + ' option:selected' ).val();
    var issueDay = $( elemSelector.dropdownMrgIsuDay + ' option:selected' ).val();
    var issueMonth = $( elemSelector.dropdownMrgIsuMonth + ' option:selected' ).val();
    var issueYear = $( elemSelector.dropdownMrgIsuYear + ' option:selected' ).val();
    var day,month,year;

    if(issueYear!==''){
      day = issueDay;
      month = issueMonth;
      year = issueYear;
    }
    else{
      day = registrationDay;
      month = registrationMonth;
      year = registrationYear;
    }

    var marriageCertificateSrc = rm.verifyIdentity.getCertificateImageFromLogic(matrixMarriageCertificate, stateCode, day, month, year);
    $(elemSelector.modalImageThumbnail).attr('src', marriageCertificateSrc);
  };

  var checkDocIfVerfiedElec = function(){
    var actionYear = $( elemSelector.dropdownMrgRegYear + ' option:selected' ).val();
    var stateCode = $( elemSelector.dropdownMarriageStates + ' option:selected' ).val();
    var yearLimit = parseInt(notVerifiedBeforeYear[stateCode]);
    var dateOfIssueYear = $( elemSelector.dropdownMrgIsuYear + ' option:selected' ).val();
    var $notVerifiedWarning;

    if(dateOfIssueYear!==''){
      actionYear = dateOfIssueYear;//actionYear can be either registrationYear or dateOfIssueYear
      $notVerifiedWarning = $( elemSelector.notVerifiedWarningIssue);
      $( elemSelector.notVerifiedWarningIssue).addClass('hidden');//always hide Reg warning box for Date Of Issue
    }
    else{
      $notVerifiedWarning = $( elemSelector.notVerifiedWarningReg);
      $( elemSelector.notVerifiedWarningIssue).addClass('hidden');//always hide Issue Year warning box for Registration Year
    }

    if(actionYear!=='' && parseInt(actionYear) < yearLimit){
      $notVerifiedWarning.removeClass('hidden');
      enableDisbaleFieldForYear('hide');
    }
    else {
      $notVerifiedWarning.addClass('hidden');
      enableDisbaleFieldForYear('show');
    }
  };

  //specific fields will be enabled/disabled if state can not verify doc before specific year
  var enableDisbaleFieldForYear = function(flag){
    if(flag==='show'){
      $(elemSelector.btnNext).removeClass('disabled').removeAttr('disabled');

      rm.disabledBlock.enableDisableBlock($(elemSelector.rowMrgRegNumber),'enable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowMrgRegDate),'enable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowMrgCertNumber),'enable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowMrgIssueDate),'enable');
    }
    else{
      $(elemSelector.btnNext).addClass('disabled').attr('disabled','disabled');
      
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowMrgRegNumber),'disable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowMrgRegDate),'disable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowMrgCertNumber),'disable');
      rm.disabledBlock.enableDisableBlock($(elemSelector.rowMrgIssueDate),'disable');
    }
  };

  var showHideFieldsForState = function(){
    var stateCode = $( elemSelector.dropdownMarriageStates + ' option:selected' ).val();
    var regDay = $( elemSelector.dropdownMrgRegDay + ' option:selected' ).val();
    var regMonth = $( elemSelector.dropdownMrgRegMonth + ' option:selected' ).val();
    var regYear = $( elemSelector.dropdownMrgRegYear + ' option:selected' ).val();
    var issueDay = $( elemSelector.dropdownMrgIsuDay + ' option:selected' ).val();
    var issueMonth = $( elemSelector.dropdownMrgIsuMonth + ' option:selected' ).val();
    var issueYear = $( elemSelector.dropdownMrgIsuYear + ' option:selected' ).val();
    var dateOfRegistration, dateOfIssue;

    if(regDay!=='' && regMonth!=='' && regYear!==''){
      dateOfRegistration = new Date(regYear,regMonth - 1,regDay);
    }

    if(issueDay!=='' && issueMonth!=='' && issueYear!==''){
      dateOfIssue = new Date(issueYear,issueMonth - 1,issueDay);
    }

    switch (stateCode) {
        case 'act':
            $(elemSelector.rowMrgRegYear).addClass('hidden');
            $(elemSelector.rowMrgRegNumber).removeClass('hidden');
            $(elemSelector.rowMrgRegDate).addClass('hidden');
            $(elemSelector.rowMrgIssueYear).removeClass('hidden');
            $(elemSelector.rowMrgIssueDate).removeClass('hidden');

            //This will be visible if (if date of date of issue is on or after 1/5/2002)
            if(dateOfIssue >=  datesLogic.act){
              $(elemSelector.rowMrgCertNumber).removeClass('hidden');
            }
            else{
              $(elemSelector.rowMrgCertNumber).addClass('hidden');
            }

            break;

        case 'nsw':
            $(elemSelector.rowMrgRegYear).removeClass('hidden');
            $(elemSelector.rowMrgRegNumber).removeClass('hidden');
            $(elemSelector.rowMrgRegDate).addClass('hidden');
            $(elemSelector.rowMrgIssueYear).addClass('hidden');
            $(elemSelector.rowMrgIssueDate).addClass('hidden');
            $(elemSelector.rowMrgCertNumber).addClass('hidden');

            break;

        case 'nt':
            $(elemSelector.rowMrgRegYear).addClass('hidden');
            $(elemSelector.rowMrgRegNumber).removeClass('hidden');
            $(elemSelector.rowMrgRegDate).addClass('hidden');
            $(elemSelector.rowMrgIssueYear).removeClass('hidden');
            $(elemSelector.rowMrgIssueDate).removeClass('hidden');
            $(elemSelector.rowMrgCertNumber).removeClass('hidden');

            break;

        case 'qld':
            $(elemSelector.rowMrgRegYear).removeClass('hidden');
            $(elemSelector.rowMrgRegNumber).addClass('hidden');

            //This will be visible if (if date of date of issue is on or after 1/7/1996)
            if(dateOfRegistration >=  datesLogic.qld){
              $(elemSelector.rowMrgRegNumber).removeClass('hidden');
            }
            else{
              $(elemSelector.rowMrgRegNumber).addClass('hidden');
            }

            $(elemSelector.rowMrgRegDate).removeClass('hidden');
            $(elemSelector.rowMrgIssueYear).addClass('hidden');
            $(elemSelector.rowMrgIssueDate).addClass('hidden');
            $(elemSelector.rowMrgCertNumber).addClass('hidden');

            break;

        case 'sa':
            $(elemSelector.rowMrgRegYear).addClass('hidden');
            $(elemSelector.rowMrgRegNumber).removeClass('hidden');
            $(elemSelector.rowMrgRegDate).addClass('hidden');
            $(elemSelector.rowMrgIssueYear).removeClass('hidden');
            $(elemSelector.rowMrgIssueDate).removeClass('hidden');

            //This will be visible if (if date of date of issue is on or after 1/11/1999)
            if(dateOfIssue >=  datesLogic.sa){
              $(elemSelector.rowMrgCertNumber).removeClass('hidden');
            }
            else{
              $(elemSelector.rowMrgCertNumber).addClass('hidden');
            }

            break;

        case 'tas':
            $(elemSelector.rowMrgRegYear).removeClass('hidden');
            $(elemSelector.rowMrgRegNumber).removeClass('hidden');
            $(elemSelector.rowMrgRegDate).addClass('hidden');
            $(elemSelector.rowMrgIssueYear).addClass('hidden');
            $(elemSelector.rowMrgIssueDate).addClass('hidden');
            $(elemSelector.rowMrgCertNumber).addClass('hidden');

            break;

        case 'vic':
            $(elemSelector.rowMrgRegYear).removeClass('hidden');
            $(elemSelector.rowMrgRegNumber).removeClass('hidden');
            $(elemSelector.rowMrgRegDate).addClass('hidden');
            $(elemSelector.rowMrgIssueYear).addClass('hidden');
            $(elemSelector.rowMrgIssueDate).addClass('hidden');
            $(elemSelector.rowMrgCertNumber).addClass('hidden');

            break;

        case 'wa':
            $(elemSelector.rowMrgRegYear).removeClass('hidden');
            $(elemSelector.rowMrgRegNumber).removeClass('hidden');
            $(elemSelector.rowMrgRegDate).addClass('hidden');
            $(elemSelector.rowMrgIssueYear).addClass('hidden');
            $(elemSelector.rowMrgIssueDate).addClass('hidden');
            $(elemSelector.rowMrgCertNumber).addClass('hidden');

            break;
    }
  };

  return {
    init: initialize
  };
}());
rm.driverLicense = (function() {
  'use strict';

  /* -- VARIABLE SETUP -- */

  var elemSelector = {
        dropdownDrivingLicenseStates:       '#driving-license-dropdown-states',
        licenseImage:         '.modal-image--license-image .modal-image-thumbnail',
      };

  var initialize = function() {
    bindEvents();
  };

/*---------Events---------*/
  var bindEvents = function(){
    eventStateChange();
  };

  var eventStateChange = function(){
    $(elemSelector.dropdownDrivingLicenseStates).change(function(){
      updateDrivingLicenseImage();
    });
  };


/*-------Functions---------*/
  //This function will update the drivingLicence image source as per State selected
  var updateDrivingLicenseImage = function(){
    var stateCode = $( elemSelector.dropdownDrivingLicenseStates + ' option:selected' ).val();

    var drivingLicenceSrc = 'img/assets/driving-licenses/driver-licence-'+ stateCode +'.png';

    $(elemSelector.licenseImage).attr('src', drivingLicenceSrc);
  };


  return {
    init: initialize
  };
}());

rm.manageNomRep = (function () {
  'use strict';

  var elemSelector = {
    formManageNomRep:  '#formManageNomRep',
    formManageNomRep2:  '#nominatedRepStep2',
    radioRemoveAccess: '#radio-remove-access'
  };

  // Cache selectors
  var $form;
  var $form2;

  var initialize = function() {
    $form = $(elemSelector.formManageNomRep);
    $form2 = $(elemSelector.formManageNomRep2);
    if ($form.length) {
      initManageNomRep();
    } else if ($form2.length) {
      initManageNomRep2();
    }
  };

  var initManageNomRep = function () {
    $form.on('success.form.fv', function (e) {
      var $thisForm = $(this),
        fv = $thisForm.data('formValidation');

      if ($thisForm.find(elemSelector.radioRemoveAccess).is(':checked')) {
        e.preventDefault(); //stop form submit

        // Show the confirmation modal
        $('#modalRemoveAccess').modal('show');

        fv.resetForm();
      }
    });
  };

  var initManageNomRep2 = function () {
    // $form2.on('success.form.fv', function (e) {
    //   var $thisForm = $(this),
    //     validation = $thisForm.data('formValidation');
    //
    //   if ($thisForm.find(elemSelector.radioRemoveAccess).is(':checked')) {
    //     e.preventDefault(); //stop form submit
    //
    //     // Show the confirmation modal
    //     $('#modalRemoveAccess').modal('show');
    //
    //     validation.resetForm();
    //   }
    // });
  };


  // public api
  return {
    init: initialize
  };

})();
rm.setHiddenRecordStatus = (function () {
  'use strict';

  var elemSelector = {
    formSetHiddenRecord: '#formSetHiddenRecord',
    radioDoNotInform: '#radio-do-not-inform',
    radioDoInform: '#radio-inform'
  };

  // Cache selectors
  var $form;

  var initialize = function() {
    $form = $(elemSelector.formSetHiddenRecord);
    if (!$form.length) { return false; }
    initSetHiddenRecordStatus();
  };

  var initSetHiddenRecordStatus = function () {
    $form.on('success.form.fv', function (e) {

      if ($form.find(elemSelector.radioDoNotInform).is(':checked')) {
        e.preventDefault(); //stop form submit

        // Show the confirmation modal
        $('#modalDoNotConfirmNotification').modal('show');

      } else if ($form.find(elemSelector.radioDoInform).is(':checked')) {
        e.preventDefault(); //stop form submit

        // Show the confirmation modal
        $('#modalInformConfirmNotification').modal('show');

      }
    });
  };

  // public api
  return {
    init: initialize
  };

})();
rm.accessCode = (function () {
  'use strict';

  var elemSelector = {
    formAccessCode:  '#formLDACAdd, #formLDACEdit, #formRACAdd, #formRACEdit'
  };

  // Cache selectors
  var $form;

  var initialize = function() {
    $form = $(elemSelector.formAccessCode);
    if (!$form.length) { return false; }

    initAccessCode();
  };

  var initAccessCode = function () {
    $form.on('success.form.fv', function (e) {
      var $thisForm = $(this),
        fv = $thisForm.data('formValidation');

        e.preventDefault(); //stop form submit

        fv.resetForm();
    });
  };

  // public api
  return {
    init: initialize
  };

})();
/**
 * -------------------------------
 * Usage
 * -------------------------------
 * This is intended to be used only for Flat/Non-nested table
 *
 *
 * -------------------------------
 * Example
 * -------------------------------
 * // Fetch the Ajax data for a specific table and add generated <tr> to the tbody
 * var pathlogyAjaxTb = rm.ajaxTb.init(),
 *     pathlogyTbSelector = '#pathology',         // usually table id with 1 match
 *     pathlogyAjaxUrl = '/js/data/table-form_ca-records-data.json,
 *     pathlogyJsonToAttrMap = [
 *       {
 *         jsonPropName: 'name',                  // matches the json response object, e.g. jsonRespObj.tbData[index].name
 *         targetElem: 'td:nth-child(1) span',    // specify which element to map; set to false if targetElem is <tr>
 *         targetAttr: false                      // specify if the value maps to the element html (if false, by default) or element attribute (if attribute is specified)
 *       }, {
 *         jsonPropName: 'name',
 *         targetElem: 'td:nth-child(1)',
 *         targetAttr: 'data-search'
 *       }, {
 *         jsonPropName: 'name',
 *         targetElem: false,                    // target to <tr>
 *         targetAttr: 'data-search'
 *       }
 *     ];
 *
 * pathlogyAjaxTb
 *   .init(pathlogyTbSelector, pathlogyAjaxUrl, pathlogyJsonToAttrMap)
 *   .done(function(jsonRespData){
 *     // do something after generated <tr>s have been added to the <tbody>
 *   });
 *
 * // To Check the state of json call, use:
 * // pathlogyAjaxTb.state.jsonCall               // return boolean - true (ajax call is successful);  false (ajax call fails)
 * // pathlogyAjaxTb.state.jsonData               // return boolean - true (jsonRespObj.tbData array is not empty); false (jsonRespObj.tbData array is not empty)
 *
 *
 * -------------------------------
 * Api
 * -------------------------------
 * .init()        // Create an instance which contains the table's cache elements, state, prototypal methods
 */
rm.ajaxTb = rm.ajaxTb || (function ($) {

  'use strict';

  var NS = {
    slr: {
      trTemplate: '.js-ajaxtb__template'
    }
  };

  function AjaxTb () {
    this.cache = null;
    this.state = {
      jsonCall: null,
      jsonData: null
    };
    this.onEvt = {};
  }

  AjaxTb.prototype = {
    constructor: AjaxTb,

    /**
     * This makes an Ajax request and add the generated content (<tr>) to table body
     * It is essentially a wrapper containing the following methods:
     * - setting the cache elements
     * - checking if cache elements are valid
     * - fetch from the ajax json url
     * - generated based on the json response
     * - add generated content to tbody
     *
     * @param  {[string]}   tbSelector    [css selector of the table where you want ajax generated tr]
     * @param  {[string]}   tbJsonUrl     [ajax json url]
     * @param  {[array]}    jsonToAttrMap [an array of mapping configuration so that the module knows where the assign the value to, refer to Example in Comment above]
     * @return {[object]}   Promise       [a promise that can be resolve/rejects so that you can use .done/.fail methods]
     */
    init: function (tbSelector, tbJsonUrl, jsonToAttrMap, dataFilter) {
      // Promise
      var _this = this,
          p;

      // Cache Elements
      this.setCache(tbSelector);

      // Check
      if (typeof tbJsonUrl !== 'string' ||
        typeof tbSelector !== 'string' ||
        !this.cache.tbody.length ||
        !this.cache.trTemplate.length) return;

      // Create Event namescape
      p = $.Deferred();
      this.setEvtNS();

      // JSON Request
      this.fetchJson(tbJsonUrl)
      .fail(function (err) {
        // Update State
        _this.state.jsonCall = false;
        p.reject(err);
      })
      .done(function (respData) {
        // Update State
        _this.state.jsonCall = true;
        _this.state.jsonData = (respData.tbData && respData.tbData.length) ? true : false;


        // if data is not empty, Create Table Markup & Add to tbody
        if (_this.state.jsonData) {
            //filter data if datafilter is defined
            if( typeof dataFilter === 'function'){
                respData.tbData = dataFilter(respData.tbData);
            }
            console.log(respData.tbData);
          _this.addTrToTbody(_this.createTr(respData.tbData, jsonToAttrMap));
        }

        p.resolve(respData);
      });

      return p;
    },

    /**
     * Cache the $tbody and $trTemplate to be used later on in time
     *
     * @param {[string]} tbSelector [css selector for the unique table]
     */
    setCache: function (tbSelector) {
      var $tbody = $(tbSelector).find('> tbody');
      this.cache = {
        tbody: $tbody,
        trTemplate: $tbody.find(NS.slr.trTemplate).remove().clone()
      };
    },

    /**
     * Create a promise based on each event namespace defined under <instance>.onEvt
     * so that Developer can resolve the promise in the code somewhere as a Pub/Sub mechanism
     */
    setEvtNS: function () {
      // Create a promise under "onEvt" property
      var props = Object.getOwnPropertyNames(this.onEvt),
          onEvt = this.onEvt;

      // Set each event to an Promise
      props.forEach(function(propName, idx){
        onEvt[propName] = $.Deferred();
      });
    },

    /**
     * Fetch table json data
     *
     * @param  {[string]} tbJsonUrl [ajax json url for the table]
     * @return {[object]}           [jquery promise]
     */
    fetchJson: function (tbJsonUrl) {
      // Create table markup from json data & Setup Chart
      var type = window.location.host.indexOf('moorthy28sep') !== -1?'get':'post';
      return $.ajax({
        type:type,
        url: tbJsonUrl,
        dataType: 'json',
        cache: false,
        data: false
      });
    },

    /**
     * Create table row dom content from Ajax response data using jsonToAttrConfig
     *
     * @param  {[object]}         respTbData  [response data passed directly from successful ajax call]
     * @param  {[array]}          mapConfig   [an array of mapping configuration so that the module knows where the assign the value to, refer to Example in Comment above]
     * @return {[jquery object]}              [all the generated table rows]
     */
    createTr: function (respTbData, mapConfig) {
      var $temp = $('<div>'),
          $trTemplate = this.cache.trTemplate;
      // Loop thru the parsed json array
      respTbData.forEach(function(jsonItem){
        var $trClone = $trTemplate.clone();

        // Set the value using the map configuration
        mapConfig.forEach(function(mapItem, idx){
          var val = jsonItem[mapItem.jsonPropName],
              $target = !mapItem.targetElem ?
                        $trClone :
                        $trClone.find(mapItem.targetElem),
              hideElem = false;

          // If mapping specifies attribute,
          // - TRUE: set attribute
          if (mapItem.targetAttr) {
            $target.attr(mapItem.targetAttr, val);
          // - FALSE: set inner html
          } else {
            if(mapItem.displayElement){
              if(jsonItem[mapItem.displayElement]){
                hideElem = false;
              } else {
                hideElem = true;
              }
            }
            if(val !== '' && hideElem === false){
                $($target[0]).show();

                if(mapItem.label){
                    val = mapItem.label + val;
                }

                if(mapItem.addBrackets){
                    $($target[0]).html('(' + val + ')');
                } else {
                    $($target[0]).html(val);
                }
            } else {
                $($target[0]).hide();
                if($trClone.attr('class').split(' ')[1] === 'author-info-row'){
                   $target.parents('div.info').hide();
                }
            }

          }
        });

        // Add to the empty container 1st
        $temp.append($trClone);
      });

      // Add to <tbody> & Show <table>
      return $temp.contents();
    },

    /**
     * Add an jQuery element to <tbody> (which is previously cached)
     * @param {[jquery object]}   $tbodyContent   [usually the content generated via .createTr() method]
     */
    addTrToTbody: function ($tbodyContent) {
      this.cache.tbody.append($tbodyContent);
    }
  };

  return {
    create: function () {
      return new AjaxTb();
    }
  };

 })(window.jQuery);
/**
 * -------------------------------
 * Usage
 * -------------------------------
 * This is to read the JSON data and show in the page
 *
 * -------------------------------
 * Example
 * -------------------------------
 *
 * -------------------------------
 * Api
 * -------------------------------
 * .init()
 */
rm.ajaxData = rm.ajaxData || (function ($) {

  'use strict';

  var NS = {
    slr: {
      dataElem: '[data-elem-target]'
    }
  };

  function AjaxData () {
    this.cache = null;
    this.state = {
      jsonCall: null,
      jsonData: null
    };
    this.onEvt = {};
  }

  AjaxData.prototype = {
    constructor: AjaxData,

    /**
     * This makes an Ajax request and add the generated content (<tr>) to table body
     * It is essentially a wrapper containing the following methods:
     * - setting the cache elements
     * - checking if cache elements are valid
     * - fetch from the ajax json url
     * - generated based on the json response
     *
     * @param  {[string]}   jsonUrl     [ajax json url]
     * @param  {[array]}    jsonToAttrMap [an array of mapping configuration so that the module knows where the assign the value to, refer to Example in Comment above]
     * @return {[object]}   Promise       [a promise that can be resolve/rejects so that you can use .done/.fail methods]
     */
    init: function (jsonUrl, jsonToAttrMap) {
      // Promise
      var _this = this,
          p;

      // Check
      if (typeof jsonUrl !== 'string') return;

      // Create Event namescape
      p = $.Deferred();
      this.setEvtNS();

      // JSON Request
      this.fetchJson(jsonUrl)
      .fail(function (err) {
        // Update State
        _this.state.jsonCall = false;
        p.reject(err);
      })
      .done(function (respData) {
        // Update State
        _this.state.jsonCall = true;
        _this.state.jsonData = (respData.responseCode === 'SUCCESS') ? true : false;

        // if data is not empty
        if (_this.state.jsonData) {
          _this.generate(respData, jsonToAttrMap);
        }

        p.resolve(respData);
      });

      return p;
    },

    /**
     * Create a promise based on each event namespace defined under <instance>.onEvt
     * so that Developer can resolve the promise in the code somewhere as a Pub/Sub mechanism
     */
    setEvtNS: function () {
      // Create a promise under "onEvt" property
      var props = Object.getOwnPropertyNames(this.onEvt),
          onEvt = this.onEvt;

      // Set each event to an Promise
      props.forEach(function(propName, idx){
        onEvt[propName] = $.Deferred();
      });
    },

    /**
     * Fetch table json data
     *
     * @param  {[string]} jsonUrl [ajax json url for the data]
     * @return {[object]}           [jquery promise]
     */
    fetchJson: function (jsonUrl) {
      // Create table markup from json data & Setup Chart
      return $.ajax({
        url: jsonUrl,
        dataType: 'json',
        cache: false,
        data: false
      });
    },

    /**
     * Create table row dom content from Ajax response data using jsonToAttrConfig
     *
     * @param  {[object]}          [response data passed directly from successful ajax call]
     * @param  {[array]}          mapConfig   [an array of mapping configuration so that the module knows where the assign the value to, refer to Example in Comment above]
     */
    generate: function (respData, mapConfig) {

      mapConfig.forEach(function(mapItem, idx){
        var val = mapItem.jsonPropName;

        $('[data-elem-target]').each(function(){
          if ($(this).data('elem-target') === val) {
            if (mapItem.targetAttr) {
              // If mapping specifies attribute,
              // - TRUE: set attribute
              $(this).attr(mapItem.targetAttr, respData[val]);
            } else {
              // - FALSE: set inner html
                $(this).html(respData[val]);
            }
          }
        });
      });

    },

    fetchPostJson: function (jsonUrl, data) {
      // Create table markup from json data & Setup Chart
      return $.ajax({
        url: jsonUrl,
        dataType: 'json',
        method: 'POST',
        cache: false,
        data: data
      });
    }
  };

  return {
    create: function () {
      return new AjaxData();
    }
  };

 })(window.jQuery);
rm.ivcpac = (function () {
  'use strict';

  var elemSelector = {
    formIvc:      '#formIvc',
    code:         '#code',
    ivcSection:   '#additional',
    fanrSection:  '#fanr-info',
    nrSection:    '#nr-info',
    nameLabel:    'label[for="lastname"]',
    dobLabel:     'label[for="dob"]',
    ihiNumber:    'input[name="ihiNumber"]',
    unverifiedModal: '#unvarifiedIdentity'
  };

  // Cache selectors
  var $form;

  var initialize = function() {
    bindKeyPressEvents();
  };

  var bindKeyPressEvents = function () {
    $(elemSelector.code).blur(function(e) {
        if($(elemSelector.code).val().startsWith('P'))
          displayIvcSection();
        else if($(elemSelector.code).val().startsWith('N'))
          displayNrSection();
        else if($(elemSelector.code).val().startsWith('F') &&
                $(elemSelector.ihiNumber).val() !== null &&
                $(elemSelector.ihiNumber).val() !== '' &&
                $(elemSelector.ihiNumber).val() !== undefined){
          displayFanrSection();
        }
        else if($(elemSelector.code).val().startsWith('F') &&
                ($(elemSelector.ihiNumber).val() === null ||
                $(elemSelector.ihiNumber).val() === '' ||
                $(elemSelector.ihiNumber).val() === undefined)){
          displayUIdModalSection();
        }
        else
          displayNone();
    });
  };

  var displayIvcSection = function(){
    showSection('self');
    updateLabelFor('self');
  };
  var displayNrSection = function(){
    showSection('nr');
    updateLabelFor('child');
  };
  var displayFanrSection = function(){
    showSection('fanr');
    updateLabelFor('child');
  };
  var displayUIdModalSection = function(){
    showSection('uvfanr');
    updateLabelFor('child');
  };
  var displayNone = function(){
    showSection('other');
    updateLabelFor('other');
  };

  var updateLabelFor = function(relation){
    if (relation === 'self'){
      $(elemSelector.nameLabel).addClass('self-code');
      $(elemSelector.nameLabel).removeClass('child-code');
      $(elemSelector.dobLabel).addClass('self-code');
      $(elemSelector.dobLabel).removeClass('child-code');
    }
    else if (relation === 'child'){
      $(elemSelector.nameLabel).removeClass('self-code');
      $(elemSelector.nameLabel).addClass('child-code');
      $(elemSelector.dobLabel).removeClass('self-code');
      $(elemSelector.dobLabel).addClass('child-code');
    }
    else if (relation === 'other'){
      $(elemSelector.nameLabel).removeClass('self-code');
      $(elemSelector.nameLabel).removeClass('child-code');
      $(elemSelector.dobLabel).removeClass('self-code');
      $(elemSelector.dobLabel).removeClass('child-code');
    }
  };

  var showSection = function(relation){
    if (relation === 'self'){
      $(elemSelector.ivcSection).removeClass('hidden');
      $(elemSelector.fanrSection).addClass('hidden');
      $(elemSelector.nrSection).addClass('hidden');
    }
    else if (relation === 'fanr'){
      $(elemSelector.ivcSection).addClass('hidden');
      $(elemSelector.fanrSection).removeClass('hidden');
      $(elemSelector.nrSection).addClass('hidden');
    }
    else if (relation === 'uvfanr'){
      $(elemSelector.ivcSection).addClass('hidden');
      $(elemSelector.fanrSection).addClass('hidden');
      $(elemSelector.nrSection).addClass('hidden');
      $(elemSelector.unverifiedModal).modal('show');
    }
    else if (relation === 'nr'){
      $(elemSelector.ivcSection).addClass('hidden');
      $(elemSelector.fanrSection).addClass('hidden');
      $(elemSelector.nrSection).removeClass('hidden');
    }
    else if (relation === 'other'){
      $(elemSelector.ivcSection).addClass('hidden');
      $(elemSelector.fanrSection).addClass('hidden');
      $(elemSelector.nrSection).addClass('hidden');
    }
  };
  // public api
  return {
    init: initialize
  };
})();

rm.sessionManagement = (function() {
  'use strict';
  
  var slr = {
    pathTableId: '#pathology-ng',
    diTableId: '#diagnostic-ng',
    allergiesAccordion: '#meds-info-allergies-accordion',
    medsTableId: '#medicines-view-records',
    dischargeSummaryId: '#discharge-summary-table',
    prescriptionsTableId : '#prescription-ng',
    pcmlId: '#discharge-summary-table', 
    searchText: '.search-control'
  };

  var initialize = function() {
    
    var bodyClassName = $('body').attr('class');
    var document = false;
    if(bodyClassName !== undefined) {
      if(bodyClassName.indexOf('pathology') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'pathology');
        document = true;
      } else if(bodyClassName.indexOf('diagnostic-imaging') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'diagnostic');
        document = true;
      } else if(bodyClassName.indexOf('medicines-info') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'medicines');
        document = true;
      } else if(bodyClassName.indexOf('discharge-summary') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'discharge-summary');
        document = true;
      } else if(bodyClassName.indexOf('pharmacist-shared-medicines-list') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'pharmacist-shared-medicines-list');
        document = true;
      } else if(bodyClassName.indexOf('e-referrals') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'e-referrals');
        document = true;
      } else if(bodyClassName.indexOf('event-summary') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'event-summary');
        document = true;
      } else if(bodyClassName.indexOf('shared-health-summary') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'shared-health-summary');
        document = true;
      } else if(bodyClassName.indexOf('specialist-letters') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'specialist-letters');
        document = true;
      } else if(bodyClassName.indexOf('prescriptions') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'prescriptions');
        document = true;
      } else if(bodyClassName.indexOf('medicareoverview') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'medicareoverview');
        document = true;
      } else if(bodyClassName.indexOf('privacy-access') !== -1) {
        rm.sessionStorage.setSession('tablePage', 'privacy-access');
        document = true;
      } else if(rm.sessionStorage.getSession('medsSession') === 'true') {
         document = true;
      } else if(bodyClassName.indexOf('document-page') !== -1) {
        document = true;
      } else if(bodyClassName.indexOf('change-document-access-level') !== -1) {
        document = true;
      } else {
        rm.sessionStorage.removeSession('tablePage');
      }
    }

    if(document && rm.sessionStorage.getSession('tablePage') === 'pathology') { // if Pathology Table
      
      clearAllExcept('pathology');

      if(rm.sessionStorage.getSession('searchTestName') !== null) {
        $(slr.searchText).val(rm.sessionStorage.getSession('searchTestName')).trigger('input');
      } else {
        $(slr.searchText).val('');
      }
      if(rm.sessionStorage.getSession('pathPageLength') !== null) {
        $(slr.pathTableId).DataTable().page.len(rm.sessionStorage.getSession('pathPageLength')).draw();
      }
      if(rm.sessionStorage.getSession('pathActivePage') !== null) {
        $(slr.pathTableId).DataTable().page(parseInt(rm.sessionStorage.getSession('pathActivePage'))).draw(false);
      }
    } else if (document && rm.sessionStorage.getSession('tablePage') === 'diagnostic') { // if Diganostic Table
      
      clearAllExcept('diagnostic');

      $(slr.diTableId).on('page.dt', function () {
        var table = $(slr.diTableId).DataTable();
        rm.sessionStorage.setSession('diActivePage', table.page.info().page);
      });
      $(slr.diTableId).on( 'length.dt', function (e, settings, data) {
        $('.diagnostic-imaging .dataTables_length .selectpicker').selectpicker('val', data);
        rm.sessionStorage.setSession('diPageLength', data);
      });

      if(rm.sessionStorage.getSession('diPageLength') !== null) {
        $(slr.diTableId).DataTable().page.len(rm.sessionStorage.getSession('diPageLength')).draw();
      }

      if(rm.sessionStorage.getSession('diActivePage') !== null) {
        $(slr.diTableId).DataTable().page(parseInt(rm.sessionStorage.getSession('diActivePage'))).draw(false);
      }
    } else if (document && rm.sessionStorage.getSession('tablePage') === 'medicines') { // if medicines page
      clearAllExcept('medicines');

      if(rm.sessionStorage.getSession('isShowAllergies') !== null && rm.sessionStorage.getSession('isShowAllergies') === 'true') {
        setTimeout(function(){
          $(slr.allergiesAccordion+' .accordion__trigger').trigger('click');
        }, 2000);
      }

    } else if(document && rm.sessionStorage.getSession('tablePage') === 'discharge-summary') { // if discharge summary page
      reinstateDischargeSummaryState();
    } else if(document && rm.sessionStorage.getSession('tablePage') === 'pharmacist-shared-medicines-list') { // if discharge summary page
      reinstatePCMLState();
    } else if(document && rm.sessionStorage.getSession('tablePage') === 'e-referrals') {
      reinstateERefferalState();
    } else if(document && rm.sessionStorage.getSession('tablePage') === 'event-summary') {
      reinstateEventSummaryState();
    } else if(document && rm.sessionStorage.getSession('tablePage') === 'shared-health-summary') {
      reinstateSharedHealthSummaryState();
    } else if(document && rm.sessionStorage.getSession('tablePage') === 'specialist-letters') {
      reinstateSpecialistLettersState();
    } else if(document && rm.sessionStorage.getSession('tablePage') === 'prescriptions') {
      reinstatePrescriptionsState();
    } else if(document && rm.sessionStorage.getSession('tablePage') === 'medicareoverview') {
      reinstateMedicareOverviewState();
    } else if(document && rm.sessionStorage.getSession('tablePage') === 'privacy-access') {
      reinstatePrivacyAccessState();
    } else {
      clearAllExcept();
    }

    setAccessLinkSession();
  };
  
  var reinstateDischargeSummaryState = function() {
    clearAllExcept('discharge-summary');
      
    if(rm.sessionStorage.getSession('discharge-summaryPageLength') !== null) {
      $(slr.dischargeSummaryId).DataTable().page.len(rm.sessionStorage.getSession('discharge-summaryPageLength')).draw();
      $('.selectpicker').selectpicker('render');
    }
    
    if(rm.sessionStorage.getSession('discharge-summaryActivePage') !== null) {
      $(slr.dischargeSummaryId).DataTable().page(parseInt(rm.sessionStorage.getSession('discharge-summaryActivePage'))).draw(false);
    }
  
    if(rm.sessionStorage.getSession('discharge-summaryDateFrom') !== null && rm.sessionStorage.getSession('discharge-summaryShowTop') === 'sr') {
      var dateFrom = moment(rm.sessionStorage.getSession('discharge-summaryDateFrom').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      
      if(dateFrom.isValid()) {
        $('#date-from-day').val(('0' + (dateFrom.date())).slice(-2));
        $('#date-from-month').val(('0' + (dateFrom.month()+1)).slice(-2));
        $('#date-from-year').val(dateFrom.year());
      }
 
    } else {
      $('#date-from-day').val('');
      $('#date-from-month').val('');
      $('#date-from-year').val('');
      rm.sessionStorage.removeSession('discharge-summaryDateFrom');
    }
 
    if(rm.sessionStorage.getSession('discharge-summaryDateTo') !== null && rm.sessionStorage.getSession('discharge-summaryShowTop') === 'sr') {
      var dateTo = moment(rm.sessionStorage.getSession('discharge-summaryDateTo').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateTo.isValid()) {
        $('#date-to-day').val(('0' + (dateTo.date())).slice(-2));
        $('#date-to-month').val(('0' + (dateTo.month()+1)).slice(-2));
        $('#date-to-year').val(dateTo.year());
      }
    } else {
      $('#date-to-day').val('');
      $('#date-to-month').val('');
      $('#date-to-year').val('');
      rm.sessionStorage.removeSession('discharge-summaryDateTo');
    }
 
    if(rm.sessionStorage.getSession('discharge-summaryShowTop') !== null && rm.sessionStorage.getSession('showToptrigger') !== null) {
      $('#show').val(rm.sessionStorage.getSession('discharge-summaryShowTop'));
      if(rm.sessionStorage.getSession('showToptrigger') === 'true') {
        $('#show').trigger('change');
        rm.sessionStorage.setSession('showToptrigger', false);
        $('#clinicalDocs').trigger('click');
      }
      else if(rm.sessionStorage.getSession('discharge-summaryShowTop') === 'sr'){
        $('#show').trigger('change');
      }
    }
  };

  
  var reinstateERefferalState = function() {
    clearAllExcept('e-referrals');
	
    if(rm.sessionStorage.getSession('e-referralsPageLength') !== null) {
      $(slr.dischargeSummaryId).DataTable().page.len(rm.sessionStorage.getSession('e-referralsPageLength')).draw();
      $('.selectpicker').selectpicker('render');
    }
    
    if(rm.sessionStorage.getSession('e-referralsActivePage') !== null) {
      $(slr.dischargeSummaryId).DataTable().page(parseInt(rm.sessionStorage.getSession('e-referralsActivePage'))).draw(false);
    }

    if(rm.sessionStorage.getSession('e-referralsDateFrom') !== null && rm.sessionStorage.getSession('e-referralsShowTop') === 'sr') {
      var dateFrom = moment(rm.sessionStorage.getSession('e-referralsDateFrom').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateFrom.isValid()) {
      $('#date-from-day').val(('0' + (dateFrom.date())).slice(-2));
      $('#date-from-month').val(('0' + (dateFrom.month()+1)).slice(-2));
      $('#date-from-year').val(dateFrom.year());
      }
    } else {
      $('#date-from-day').val('');
      $('#date-from-month').val('');
      $('#date-from-year').val('');
      rm.sessionStorage.removeSession('e-referralsDateFrom');
    }

    if(rm.sessionStorage.getSession('e-referralsDateTo') !== null && rm.sessionStorage.getSession('e-referralsShowTop') === 'sr') {
      var dateTo = moment(rm.sessionStorage.getSession('e-referralsDateTo').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateTo.isValid()) {
      $('#date-to-day').val(('0' + (dateTo.date())).slice(-2));
      $('#date-to-month').val(('0' + (dateTo.month()+1)).slice(-2));
      $('#date-to-year').val(dateTo.year());
      }
    } else {
      $('#date-to-day').val('');
      $('#date-to-month').val('');
      $('#date-to-year').val('');
      rm.sessionStorage.removeSession('e-referralsDateTo');
    }

    if(rm.sessionStorage.getSession('e-referralsShowTop') !== null && rm.sessionStorage.getSession('showToptrigger') !== null) {
      $('#show').val(rm.sessionStorage.getSession('e-referralsShowTop'));
      if(rm.sessionStorage.getSession('showToptrigger') === 'true') {
        $('#show').trigger('change');
        rm.sessionStorage.setSession('showToptrigger', false);
        $('#clinicalDocs').trigger('click');
      }
      else if(rm.sessionStorage.getSession('e-referralsShowTop') === 'sr'){
        $('#show').trigger('change');
      }
    }
  };
  
  var reinstateEventSummaryState = function() {
    clearAllExcept('event-summary');
	
    if(rm.sessionStorage.getSession('event-summaryPageLength') !== null) {
      $(slr.dischargeSummaryId).DataTable().page.len(rm.sessionStorage.getSession('event-summaryPageLength')).draw();
      $('.selectpicker').selectpicker('render');
    }
    
    if(rm.sessionStorage.getSession('event-summaryActivePage') !== null) {
      $(slr.dischargeSummaryId).DataTable().page(parseInt(rm.sessionStorage.getSession('event-summaryActivePage'))).draw(false);
    }

    if(rm.sessionStorage.getSession('event-summaryDateFrom') !== null && rm.sessionStorage.getSession('event-summaryShowTop') === 'sr') {
      var dateFrom = moment(rm.sessionStorage.getSession('event-summaryDateFrom').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateFrom.isValid()) {
      $('#date-from-day').val(('0' + (dateFrom.date())).slice(-2));
      $('#date-from-month').val(('0' + (dateFrom.month()+1)).slice(-2));
      $('#date-from-year').val(dateFrom.year());
      }
    } else {
      $('#date-from-day').val('');
      $('#date-from-month').val('');
      $('#date-from-year').val('');
      rm.sessionStorage.removeSession('event-summaryDateFrom');
    }

    if(rm.sessionStorage.getSession('event-summaryDateTo') !== null && rm.sessionStorage.getSession('event-summaryShowTop') === 'sr') {
      var dateTo = moment(rm.sessionStorage.getSession('event-summaryDateTo').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateTo.isValid()) {
      $('#date-to-day').val(('0' + (dateTo.date())).slice(-2));
      $('#date-to-month').val(('0' + (dateTo.month()+1)).slice(-2));
      $('#date-to-year').val(dateTo.year());
    }
    } else {
      $('#date-to-day').val('');
      $('#date-to-month').val('');
      $('#date-to-year').val('');
      rm.sessionStorage.removeSession('event-summaryDateTo');
    }

    if(rm.sessionStorage.getSession('event-summaryShowTop') !== null && rm.sessionStorage.getSession('showToptrigger') !== null) {
      $('#show').val(rm.sessionStorage.getSession('event-summaryShowTop'));
      if(rm.sessionStorage.getSession('showToptrigger') === 'true') {
        $('#show').trigger('change');
        rm.sessionStorage.setSession('showToptrigger', false);
        $('#clinicalDocs').trigger('click');
      }
      else if(rm.sessionStorage.getSession('event-summaryShowTop') === 'sr'){
        $('#show').trigger('change');
      }
    }
  };
  
  var reinstateSharedHealthSummaryState = function() {
    clearAllExcept('shared-health-summary');
	
    if(rm.sessionStorage.getSession('shared-health-summaryPageLength') !== null) {
      $(slr.dischargeSummaryId).DataTable().page.len(rm.sessionStorage.getSession('shared-health-summaryPageLength')).draw();
        $('.selectpicker').selectpicker('render');
    }
    
    if(rm.sessionStorage.getSession('shared-health-summaryActivePage') !== null) {
      $(slr.dischargeSummaryId).DataTable().page(parseInt(rm.sessionStorage.getSession('shared-health-summaryActivePage'))).draw(false);
    }

    if(rm.sessionStorage.getSession('shared-health-summaryDateFrom') !== null && rm.sessionStorage.getSession('shared-health-summaryShowTop') === 'sr') {
      var dateFrom = moment(rm.sessionStorage.getSession('shared-health-summaryDateFrom').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateFrom.isValid()) {
      $('#date-from-day').val(('0' + (dateFrom.date())).slice(-2));
      $('#date-from-month').val(('0' + (dateFrom.month()+1)).slice(-2));
      $('#date-from-year').val(dateFrom.year());
      }
    } else {
      $('#date-from-day').val('');
      $('#date-from-month').val('');
      $('#date-from-year').val('');
      rm.sessionStorage.removeSession('shared-health-summaryDateFrom');
    }
  
    if(rm.sessionStorage.getSession('shared-health-summaryDateTo') !== null && rm.sessionStorage.getSession('shared-health-summaryShowTop') === 'sr') {
      var dateTo = moment(rm.sessionStorage.getSession('shared-health-summaryDateTo').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateTo.isValid()) {
      $('#date-to-day').val(('0' + (dateTo.date())).slice(-2));
      $('#date-to-month').val(('0' + (dateTo.month()+1)).slice(-2));
      $('#date-to-year').val(dateTo.year());
      }
    } else {
      $('#date-to-day').val('');
      $('#date-to-month').val('');
      $('#date-to-year').val('');
      rm.sessionStorage.removeSession('shared-health-summaryDateTo');
    }

    if(rm.sessionStorage.getSession('shared-health-summaryShowTop') !== null && rm.sessionStorage.getSession('showToptrigger') !== null) {
      $('#show').val(rm.sessionStorage.getSession('shared-health-summaryShowTop'));
      if(rm.sessionStorage.getSession('showToptrigger') === 'true') {
        $('#show').trigger('change');
        rm.sessionStorage.setSession('showToptrigger', false);
        $('#clinicalDocs').trigger('click');
      }
      else if(rm.sessionStorage.getSession('shared-health-summaryShowTop') === 'sr'){
        $('#show').trigger('change');
      }
    }
  };
  
  var reinstateSpecialistLettersState = function() {
    clearAllExcept('specialist-letters');

    if(rm.sessionStorage.getSession('specialist-lettersPageLength') !== null) {
      $(slr.dischargeSummaryId).DataTable().page.len(rm.sessionStorage.getSession('specialist-lettersPageLength')).draw();
      $('.selectpicker').selectpicker('render');
    }
    
    if(rm.sessionStorage.getSession('specialist-lettersActivePage') !== null) {
      $(slr.dischargeSummaryId).DataTable().page(parseInt(rm.sessionStorage.getSession('specialist-lettersActivePage'))).draw(false);
    }

    if(rm.sessionStorage.getSession('specialist-lettersDateFrom') !== null && rm.sessionStorage.getSession('specialist-lettersShowTop') === 'sr') {
      var dateFrom = moment(rm.sessionStorage.getSession('specialist-lettersDateFrom').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateFrom.isValid()) {
      $('#date-from-day').val(('0' + (dateFrom.date())).slice(-2));
      $('#date-from-month').val(('0' + (dateFrom.month()+1)).slice(-2));
      $('#date-from-year').val(dateFrom.year());
      }
    } else {
      $('#date-from-day').val('');
      $('#date-from-month').val('');
      $('#date-from-year').val('');
      rm.sessionStorage.removeSession('specialist-lettersDateFrom');
    }

    if(rm.sessionStorage.getSession('specialist-lettersDateTo') !== null && rm.sessionStorage.getSession('specialist-lettersShowTop') === 'sr') {
      var dateTo = moment(rm.sessionStorage.getSession('specialist-lettersDateTo').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateTo.isValid()) {
      $('#date-to-day').val(('0' + (dateTo.date())).slice(-2));
      $('#date-to-month').val(('0' + (dateTo.month()+1)).slice(-2));
      $('#date-to-year').val(dateTo.year());
      }
    } else {
      $('#date-to-day').val('');
      $('#date-to-month').val('');
      $('#date-to-year').val('');
      rm.sessionStorage.removeSession('specialist-lettersDateTo');
    }

    if(rm.sessionStorage.getSession('specialist-lettersShowTop') !== null && rm.sessionStorage.getSession('showToptrigger') !== null) {
      $('#show').val(rm.sessionStorage.getSession('specialist-lettersShowTop'));
      if(rm.sessionStorage.getSession('showToptrigger') === 'true') {
        $('#show').trigger('change');
        rm.sessionStorage.setSession('showToptrigger', false);
        $('#clinicalDocs').trigger('click');
      }
      else if(rm.sessionStorage.getSession('specialist-lettersShowTop') === 'sr'){
        $('#show').trigger('change');
      }
    }
  };

  var reinstatePCMLState = function() {
    clearAllExcept('pcml');
      
    if(rm.sessionStorage.getSession('pharmacist-shared-medicines-listPageLength') !== null) {
      $(slr.pcmlId).DataTable().page.len(rm.sessionStorage.getSession('pharmacist-shared-medicines-listPageLength')).draw();
      $('.selectpicker').selectpicker('render');
    }
    
    if(rm.sessionStorage.getSession('pharmacist-shared-medicines-listActivePage') !== null) {
      $(slr.pcmlId).DataTable().page(parseInt(rm.sessionStorage.getSession('pharmacist-shared-medicines-listActivePage'))).draw(false);
    }      
  
    if(rm.sessionStorage.getSession('pharmacist-shared-medicines-listDateFrom') !== null && rm.sessionStorage.getSession('pharmacist-shared-medicines-listShowTop') === 'sr') {
     var dateFrom = moment(rm.sessionStorage.getSession('pharmacist-shared-medicines-listDateFrom').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateFrom.isValid()) {
      $('#date-from-day').val(('0' + (dateFrom.date())).slice(-2));
      $('#date-from-month').val(('0' + (dateFrom.month()+1)).slice(-2));
      $('#date-from-year').val(dateFrom.year());
      }
    } else {
      $('#date-from-day').val('');
      $('#date-from-month').val('');
      $('#date-from-year').val('');
      rm.sessionStorage.removeSession('pharmacist-shared-medicines-listDateFrom');
    }
	
	if(rm.sessionStorage.getSession('pharmacist-shared-medicines-listDateTo') !== null && rm.sessionStorage.getSession('pharmacist-shared-medicines-listShowTop') === 'sr') {
      var dateTo = moment(rm.sessionStorage.getSession('pharmacist-shared-medicines-listDateTo').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateTo.isValid()) {
      $('#date-to-day').val(('0' + (dateTo.date())).slice(-2));
      $('#date-to-month').val(('0' + (dateTo.month()+1)).slice(-2));
      $('#date-to-year').val(dateTo.year());
      }
    } else {
      $('#date-to-day').val('');
      $('#date-to-month').val('');
      $('#date-to-year').val('');
      rm.sessionStorage.removeSession('pharmacist-shared-medicines-listDateTo');
    }
	
	if(rm.sessionStorage.getSession('pharmacist-shared-medicines-listShowTop') !== null && rm.sessionStorage.getSession('showToptrigger') !== null) {
      $('#show').val(rm.sessionStorage.getSession('pharmacist-shared-medicines-listShowTop'));
      if(rm.sessionStorage.getSession('showToptrigger') === 'true') {
        $('#show').trigger('change');
        rm.sessionStorage.setSession('showToptrigger', false);
        $('#clinicalDocs').trigger('click');
      }
      else if(rm.sessionStorage.getSession('pharmacist-shared-medicines-listShowTop') === 'sr'){
        $('#show').trigger('change');
      }
    }
	
  };

  var reinstateMedicareOverviewState = function() {
    clearAllExcept('medicareoverview');
      
    if(rm.sessionStorage.getSession('medicareoverviewDateFrom') !== null) {
      var dateFrom = moment(rm.sessionStorage.getSession('medicareoverviewDateFrom').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateFrom.isValid()) {
      $('#date-from-day').val(('0' + (dateFrom.date())).slice(-2));
      $('#date-from-month').val(('0' + (dateFrom.month()+1)).slice(-2));
      $('#date-from-year').val(dateFrom.year());
      }
    }

    if(rm.sessionStorage.getSession('medicareoverviewDateTo') !== null ) {
      var dateTo = moment(rm.sessionStorage.getSession('medicareoverviewDateTo').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateTo.isValid()) {
      $('#date-to-day').val(('0' + (dateTo.date())).slice(-2));
      $('#date-to-month').val(('0' + (dateTo.month()+1)).slice(-2));
      $('#date-to-year').val(dateTo.year());
      }
    }
  };
  
  var reinstatePrescriptionsState = function() {
    clearAllExcept('prescriptions');
      
    if(rm.sessionStorage.getSession('prescriptionsDateFrom') !== null) {
      var dateFrom = moment(rm.sessionStorage.getSession('prescriptionsDateFrom').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateFrom.isValid()) {
      $('#date-from-day').val(('0' + (dateFrom.date())).slice(-2));
      $('#date-from-month').val(('0' + (dateFrom.month()+1)).slice(-2));
      $('#date-from-year').val(dateFrom.year());
      }
    }

    if(rm.sessionStorage.getSession('prescriptionsDateTo') !== null ) {
      var dateTo = moment(rm.sessionStorage.getSession('prescriptionsDateTo').toString(), 'MM-DD-YYYY'); // jshint ignore:line
      if(dateTo.isValid()) {
      $('#date-to-day').val(('0' + (dateTo.date())).slice(-2));
      $('#date-to-month').val(('0' + (dateTo.month()+1)).slice(-2));
      $('#date-to-year').val(dateTo.year());
      }
    }
    
    if(rm.sessionStorage.getSession('prescriptionsShowTop') !== null && rm.sessionStorage.getSession('prescriptionsShowTop') === 'ng') {
      $('#optionsGrouping').removeClass('hidden');
    }
      if(rm.sessionStorage.getSession('prescriptionsShowTop') !== null) {
      $('#groupby-pd').val(rm.sessionStorage.getSession('prescriptionsShowTop'))
        .trigger('change')
          .selectpicker('render');
      }
      if(rm.sessionStorage.getSession('prescriptionsShowPrescribed') !== null) {
        $('#showprescribed').val(rm.sessionStorage.getSession('prescriptionsShowPrescribed'))
          .trigger('change');
        $('.bottom .dataTables_length').css('display', $('#prescription-ng_paginate').css('display'));
      }
      
      if(rm.sessionStorage.getSession('prescriptionsShowDispensed') !== null) {
        $('#showdispensed').val(rm.sessionStorage.getSession('prescriptionsShowDispensed'))
          .trigger('change');
        $('.bottom .dataTables_length').css('display', $('#prescription-ng_paginate').css('display'));
      }
      
      if(rm.sessionStorage.getSession('prescriptionsPageLength') !== null) {
        $(slr.prescriptionsTableId).DataTable().page.len(rm.sessionStorage.getSession('prescriptionsPageLength')).draw();
          $('.selectpicker').selectpicker('render');
        $('.bottom .dataTables_length').css('display', $('#prescription-ng_paginate').css('display'));
      }
      
      if(rm.sessionStorage.getSession('prescriptionsActivePage') !== null) {
        $(slr.prescriptionsTableId).DataTable().page(parseInt(rm.sessionStorage.getSession('prescriptionsActivePage'))).draw(false);
        $('.bottom .dataTables_length').css('display', $('#prescription-ng_paginate').css('display'));
      }
    
    $(slr.prescriptionsTableId).DataTable().on( 'draw.dt', function () {
      $('.bottom .dataTables_length').css('display', $('#prescription-ng_paginate').css('display'));
    });
  };

  var reinstatePrivacyAccessState = function() {
    clearAllExcept('privacy-access');
  };
  
  var clearAllExcept = function(exception) {
    if(exception !== 'diagnostic') {
      rm.sessionStorage.removeSession('diPageLength');
      rm.sessionStorage.removeSession('diActivePage');
    }
    
    if(exception !== 'medicines') {
      rm.sessionStorage.removeSession('isShowAllergies');
      rm.sessionStorage.removeSession('medsPageLength');
      rm.sessionStorage.removeSession('medsActivePage');
      rm.sessionStorage.removeSession('allergiesPageLength');
      rm.sessionStorage.removeSession('allergiesActivePage');
      rm.sessionStorage.removeSession('medsSession');
      rm.sessionStorage.removeSession('medsAuthor');
      rm.sessionStorage.removeSession('medsDate');
      rm.sessionStorage.removeSession('medsDoc');
    }
    
    if(exception !== 'pathology') {
      rm.sessionStorage.removeSession('searchTestName');
      rm.sessionStorage.removeSession('pathPageLength');
      rm.sessionStorage.removeSession('pathActivePage');
    }
    
    if(exception !== 'discharge-summary') {
      rm.sessionStorage.removeSession('discharge-summaryPageLength');
      rm.sessionStorage.removeSession('discharge-summaryActivePage');
      rm.sessionStorage.removeSession('discharge-summaryShowTop');
      rm.sessionStorage.removeSession('discharge-summaryDateFrom');
      rm.sessionStorage.removeSession('discharge-summaryDateTo');
    }
    
    if(exception !== 'e-referrals') {
      rm.sessionStorage.removeSession('e-referralsPageLength');
      rm.sessionStorage.removeSession('e-referralsActivePage');
      rm.sessionStorage.removeSession('e-referralsShowTop');
      rm.sessionStorage.removeSession('e-referralsDateFrom');
      rm.sessionStorage.removeSession('e-referralsDateTo');
    }
    
    if(exception !== 'event-summary') {
      rm.sessionStorage.removeSession('event-summaryPageLength');
      rm.sessionStorage.removeSession('event-summaryActivePage');
      rm.sessionStorage.removeSession('event-summaryShowTop');
      rm.sessionStorage.removeSession('event-summaryDateFrom');
      rm.sessionStorage.removeSession('event-summaryDateTo');
    }
    
    if(exception !== 'shared-health-summary') {
      rm.sessionStorage.removeSession('shared-health-summaryPageLength');
      rm.sessionStorage.removeSession('shared-health-summaryActivePage');
      rm.sessionStorage.removeSession('shared-health-summaryShowTop');
      rm.sessionStorage.removeSession('shared-health-summaryDateFrom');
      rm.sessionStorage.removeSession('shared-health-summaryDateTo');
    }
    
    if(exception !== 'specialist-letters') {
      rm.sessionStorage.removeSession('specialist-lettersPageLength');
      rm.sessionStorage.removeSession('specialist-lettersActivePage');
      rm.sessionStorage.removeSession('specialist-lettersShowTop');
      rm.sessionStorage.removeSession('specialist-lettersDateFrom');
      rm.sessionStorage.removeSession('specialist-lettersDateTo');
    }
    
    if(exception !== 'prescriptions') {
      rm.sessionStorage.removeSession('prescriptionsPageLength');
      rm.sessionStorage.removeSession('prescriptionsActivePage');
      rm.sessionStorage.removeSession('prescriptionsShowTop');
      rm.sessionStorage.removeSession('prescriptionsDateFrom');
      rm.sessionStorage.removeSession('prescriptionsDateTo');
      rm.sessionStorage.removeSession('prescriptionsShowPrescribed');
      rm.sessionStorage.removeSession('prescriptionsShowDispensed');
    }

    if(exception !== 'medicareoverview') {
      rm.sessionStorage.removeSession('medicareoverviewDateFrom');
      rm.sessionStorage.removeSession('medicareoverviewDateTo');
    }

    if(exception !== 'pcml') {
      rm.sessionStorage.removeSession('pharmacist-shared-medicines-listPageLength');
      rm.sessionStorage.removeSession('pharmacist-shared-medicines-listActivePage');
      rm.sessionStorage.removeSession('pharmacist-shared-medicines-listShowTop');
      rm.sessionStorage.removeSession('pharmacist-shared-medicines-listDateFrom');
      rm.sessionStorage.removeSession('pharmacist-shared-medicines-listDateTo');
    }

    if(exception !== 'privacy-access') {
      rm.sessionStorage.removeSession('accordion-access-by-individuals');
      rm.sessionStorage.removeSession('accordion-access-by-individuals-empty');
      rm.sessionStorage.removeSession('accordion-access-providers');
      rm.sessionStorage.removeSession('accordion-access-providers-empty');
    }
  };

  var setAccessLinkSession = function() {
      if(!$(document.body).hasClass('change-document-access-level')) rm.sessionStorage.setSession('accesslink', window.location.pathname); // jshint ignore:line
  };

  return {
    init: initialize,
    clearAllExcept : clearAllExcept,
    reinstateDischargeSummaryState : reinstateDischargeSummaryState,
    reinstateERefferalState : reinstateERefferalState,
    reinstateEventSummaryState: reinstateEventSummaryState,
    reinstateSharedHealthSummaryState : reinstateSharedHealthSummaryState,
    reinstateSpecialistLettersState : reinstateSpecialistLettersState,
    reinstatePrescriptionsState : reinstatePrescriptionsState,
    reinstateMedicareOverviewState : reinstateMedicareOverviewState,
    reinstatePCMLState: reinstatePCMLState
  };
}());
rm.sessionScroll = (function() {
    'use strict';
    
    var defaults = {
        'sessionScrollElementID' : 'top'
    };

    var initialize = function() {
      bindClickEvents();
      processSessionScroll();
    };

    var bindClickEvents = function() {
      var attribute_trigger = 'data-session-scroll-to';
      var attribute_body_class = 'data-session-bodyclass-target';

      $('*[' + attribute_trigger + ']').on('click', function(e) {
        var sessionScrollElementID = encodeURI($(this).attr(attribute_trigger));
        var sessionScrollBodyClass = encodeURI($(this).attr(attribute_body_class));

        if(sessionScrollElementID !== null && sessionScrollElementID !== '' && sessionScrollBodyClass !== null && sessionScrollBodyClass !=='#' && sessionScrollBodyClass !=='') {
            rm.sessionStorage.setSession('sessionScrollElementID', sessionScrollElementID );
            rm.sessionStorage.setSession('sessionScrollBodyClass', sessionScrollBodyClass );
        }

      });
    };

    var processSessionScroll = function() {
        var sessionScrollElementID = rm.sessionStorage.getSession('sessionScrollElementID');
        var sessionScrollBodyClass = rm.sessionStorage.getSession('sessionScrollBodyClass');
        
        if($(document.body).hasClass(sessionScrollBodyClass) && sessionScrollElementID !== null && sessionScrollElementID !== '') {

          $(window).on('load', function() {
            if($('#' + sessionScrollElementID).length !== 0) {
              var scrollHeight = $('#' + sessionScrollElementID).offset().top;
              var offset = -$('.sticky--header').outerHeight();
              rm.sessionScroll.defaults.sessionScrollElementID = sessionScrollElementID;
              rm.sessionScroll.scrollTo(scrollHeight, offset);
            }
          });

        }

        rm.sessionStorage.removeSession('sessionScrollElementID');
        rm.sessionStorage.removeSession('sessionScrollBodyClass');
    };

    var scrollTo = function(scrollHeight, offset) {
      $('html,body').stop(true, true).animate({
        scrollTop: scrollHeight + offset
      });
    };
    
    var readjustView = function() {
      var sessionScrollElementID = rm.sessionScroll.defaults.sessionScrollElementID;
      var scrollHeight = $('#' + sessionScrollElementID).offset().top;
      var offset = -$('.sticky--header').outerHeight();
      $('html, body').stop(true, true).scrollTop( scrollHeight + offset );
    };

    return {
      init: initialize,
      bindClickEvents: bindClickEvents,
      processSessionScroll : processSessionScroll,
      scrollTo : scrollTo,
      defaults : defaults,
      readjustView : readjustView
    };
  }());
rm.sessionTableListener = (function() {
  'use strict';
  
  var initialize = function() {
 
    //init Discharge Summary page listeners
    setListeners('discharge-summary', '#discharge-summary-table', ['active-page', 'page-length', 'date-from', 'date-to', 'show-top', 'native-date' ]);
    
    //init E-Referrals page listeners
    setListeners('e-referrals', '#discharge-summary-table', ['active-page', 'page-length', 'date-from', 'date-to', 'show-top', 'native-date' ]);
    
    //init Event Summary page listeners
    setListeners('event-summary', '#discharge-summary-table', ['active-page', 'page-length', 'date-from', 'date-to', 'show-top', 'native-date' ]);
    
    //init Shared Health Summary page listeners
    setListeners('shared-health-summary', '#discharge-summary-table', ['active-page', 'page-length', 'date-from', 'date-to', 'show-top', 'native-date' ]);
    
    //init Specialist Letters page listeners
    setListeners('specialist-letters', '#discharge-summary-table', ['active-page', 'page-length', 'date-from', 'date-to', 'show-top', 'native-date' ]);
    
    //init Prescriptions & Dispense page listeners
    setListeners('prescriptions', '#prescription-ng', ['active-page', 'page-length', 'date-from', 'date-to', 'show-prescribed', 'show-dispensed', 'group-by' ]);

    //init PCML page listeners
    setListeners('pharmacist-shared-medicines-list', '#discharge-summary-table', ['active-page', 'page-length', 'date-from', 'date-to', 'show-top' ]);
  
    //init PRDR page listeners
    setListeners('medicareoverview', '#discharge-summary-table', []);
  };
  
  var setListeners = function(tablePage, tableID, eventArray) {
    
    var sessionTablePage = rm.sessionStorage.getSession('tablePage');
    eventArray = (eventArray !== null && eventArray.length !== 0) ? eventArray : [];
    
    if(tablePage !== null && tablePage === sessionTablePage && tableID !== null) {
      
      /* Set active page listener */
      if(eventArray.indexOf('active-page') !== -1) {
        $(tableID).on('page.dt', function () {
          var table = $(tableID).DataTable();
          rm.sessionStorage.setSession( tablePage + 'ActivePage', table.page.info().page );
        });
      }
      
      /* Set page-length listener */
      if(eventArray.indexOf('page-length') !== -1) {
        $(tableID).on( 'length.dt', function (e, settings, data) {
          rm.sessionStorage.setSession( tablePage + 'PageLength', data );
        
          if(data === -1) {
            rm.sessionStorage.setSession( tablePage + 'ActivePage', 0 );
          }
        });
      }
      
      /* Set datepicker from listener */
      if(eventArray.indexOf('date-from') !== -1) {
        $('#datefrom, #eventdateFrom, input[name="datefrom"]').parents('.datepicker:first').datetimepicker().on('dp.change', function() {
          var value = $(this).find('input[type="text"]').val();
          rm.sessionStorage.setSession(tablePage + 'DateFrom', value);
        });
      }
      
      /* Set datepicker to listener */
      if(eventArray.indexOf('date-to') !== -1) {
        $('#dateto, #eventdateTo, input[name="dateto"]').parents('.datepicker:first').datetimepicker().on('dp.change', function() {
          var value = $(this).find('input[type="text"]').val();
          rm.sessionStorage.setSession(tablePage + 'DateTo', value);
        });
      }

      /* Override datepicker from listener to native-date */
      if (tablePage === 'shared-health-summary' || tablePage === 'discharge-summary' || tablePage === 'e-referrals' || tablePage === 'event-summary' || tablePage === 'specialist-letters' || tablePage === 'pharmacist-shared-medicines-list' || tablePage === 'prescriptions' || tablePage === 'medicareoverview') {
        var dateFromDay = $('#date-from-day').val(),
              dateFromMonth = $('#date-from-month').val(),
              dateFromYear = $('#date-from-year').val(),
              dateToDay = $('#date-to-day').val(),
              dateToMonth = $('#date-to-month').val(),
              dateToYear = $('#date-to-year').val();  
        $('body').on('input', '[data-fv-field="date-from-day"],[data-fv-field="date-from-month"],[data-fv-field="date-from-year"],[data-fv-field="date-to-day"],[data-fv-field="date-to-month"],[data-fv-field="date-to-year"]', function () {
            var dateFromDay = $('#date-from-day').val(),
              dateFromMonth = $('#date-from-month').val(),
              dateFromYear = $('#date-from-year').val(),
              dateToDay = $('#date-to-day').val(),
              dateToMonth = $('#date-to-month').val(),
              dateToYear = $('#date-to-year').val();
            if (dateFromDay !== '' &&
              dateFromMonth !== '' &&
              dateFromYear !== '' &&
              dateToDay !== '' &&
              dateToMonth !== '' &&
              dateToYear !== '' &&
              ($('#show').val() === 'sr' ||
              tablePage === 'prescriptions' ||
              tablePage === 'medicareoverview')) {
              rm.sessionStorage.setSession(tablePage + 'DateFrom', dateFromMonth + '-' + dateFromDay + '-' + dateFromYear);
              rm.sessionStorage.setSession(tablePage + 'DateTo', dateToMonth + '-' + dateToDay + '-' + dateToYear);
            }
            else{
              rm.sessionStorage.removeSession(tablePage + 'DateFrom');
              rm.sessionStorage.removeSession(tablePage + 'DateTo');
            }
          });
          if(tablePage === 'prescriptions' || tablePage === 'medicareoverview') {
            if (dateFromDay !== '' &&
              dateFromMonth !== '' &&
              dateFromYear !== '' &&
              dateToDay !== '' &&
              dateToMonth !== '' &&
              dateToYear !== '') {
              rm.sessionStorage.setSession(tablePage + 'DateFrom', dateFromMonth + '-' + dateFromDay + '-' + dateFromYear);
              rm.sessionStorage.setSession(tablePage + 'DateTo', dateToMonth + '-' + dateToDay + '-' + dateToYear);
            }
          }
      }

      /* Set show top listener */
      if(eventArray.indexOf('show-top') !== -1) {
        $('#show').on('change', function() {
          rm.sessionStorage.setSession(tablePage + 'ShowTop', this.value);
          rm.sessionStorage.setSession('showToptrigger', false);
        });
      }
      
      /* Set Group By listener */
      if(eventArray.indexOf('group-by') !== -1) {
        $('#groupby-pd').on('change', function() {
          rm.sessionStorage.setSession(tablePage + 'ShowTop', this.value);
        });
      }
      
      /* Set show prescribe filter listener */
      if(eventArray.indexOf('show-prescribed') !== -1) {
        $('#showprescribed').on('change', function() {
          
          rm.sessionStorage.setSession(tablePage + 'ShowPrescribed', this.value);
          
          if(!$('#showprescribed').get(0).checked && !$('#showdispensed').get(0).checked) {
            $(tableID).parents('.dataTables_wrapper:first').addClass('hidden');
            $('.filter-empty-message').removeClass('hidden');
          } else {
            $(tableID).parents('.dataTables_wrapper:first').removeClass('hidden');
            $('.filter-empty-message').addClass('hidden');
          }
        });
      }
      
      /* Set show dispensed filter listener */
      if(eventArray.indexOf('show-dispensed') !== -1) {
        $('#showdispensed').on('change', function() {
          
          rm.sessionStorage.setSession(tablePage + 'ShowDispensed', this.value);
          
          if(!$('#showprescribed').get(0).checked && !$('#showdispensed').get(0).checked) {
            $(tableID).parents('.dataTables_wrapper:first').addClass('hidden');
            $('.filter-empty-message').removeClass('hidden');
          } else {
            $(tableID).parents('.dataTables_wrapper:first').removeClass('hidden');
            $('.filter-empty-message').addClass('hidden');
          }
          
        });
      }
      
      if($('body').hasClass('document-page')) {
        rm.sessionStorage.setSession('showToptrigger', true);
      }
    }
  };
  
  return {
    init: initialize,
    setListeners : setListeners
  };
  
})();
/*
  Session Redirects
    -Uses session to redirect back after a form process from form handler page
  
  Format/Usage:
    <a href="someURL" 
      data-session-redirect-target="phs"
      data-session-redirect-source="allergy-link"
      data-session-redirect-ajax="true"
      data-session-redirect-scroll="scroll-to-element-id" 
    >Personal Health Summary</a>
  
  Arguments:
    data-session-redirect-target = (Required) this should be the bodyClass of target. For verfication purposes.
    data-session-redirect-source = (Optional) to differentiate action from similar session redirect to page
    data-session-redirect-ajax   = (Optional)(String) true - if you want to trigger processSessionRedirects after an ajax call.
                                        (String) false - triggers on window on load
    data-session-redirect-scroll = (Optional) set this to the element-id you want to scroll after a redirect - Dependent with rm.sessionScroll
    return URL                   = (Required) this is automatically set from window Object. not affected by permalink rewrite rules
    
  Exposed Methods
    init = initializes the object
    bind = bind links to object
    trigger = trigger session redirects
    clear = clear all session redirects variable

*/

rm.sessionRedirect = (function() {
  'use strict';
  
  var initialize = function() {
    bindSessionRedirects();
    processSessionRedirects();
  };
  
  var bindSessionRedirects = function() {
    $('a[data-session-redirect-target]').on('click', function(e) {
      
      e.stopPropagation();
      
      var redirectTarget = $(this).attr('data-session-redirect-target');
      var redirectSource = $(this).attr('data-session-redirect-source');
      var redirectAjax = $(this).attr('data-session-redirect-ajax');
      var redirectScroll = $(this).attr('data-session-redirect-scroll');
      
      rm.sessionStorage.setSession('SessionRedirectTarget', redirectTarget); 
      
      if( 'string' === typeof redirectSource && '' !== redirectSource) {
        rm.sessionStorage.setSession('SessionRedirectSource', redirectSource ); 
      }
      
      if( 'string' === typeof redirectAjax  && 'true' === redirectAjax  ) {
        rm.sessionStorage.setSession('SessionRedirectAjax', true ); 
      } else {
        rm.sessionStorage.setSession('SessionRedirectAjax', false );
      }
      
      if( '' !== redirectScroll  && 'string' === typeof redirectScroll ) {
   
        //grab the last class and make it the bodyclass for session scroll, if no class, return session scroll as false
        var thisBodyClass = $(document.body).attr('class');
        
        if('string' === typeof thisBodyClass && 1 < thisBodyClass.split(' ').length ) {
          var bodyClasses = thisBodyClass.split(' ');
          rm.sessionStorage.setSession('SessionRedirectScroll', redirectScroll );
          rm.sessionStorage.setSession('SessionRedirectScrollBodyClass', bodyClasses[bodyClasses.length - 1] );
        }
      }
      
      rm.sessionStorage.setSession('SessionRedirectReturnURL', encodeURI( window.location.href) );
      
    });
  };
  
  var processSessionRedirects = function() {
    var SessionRedirectTarget = rm.sessionStorage.getSession('SessionRedirectTarget');
    
    if('string' === typeof SessionRedirectTarget && '' !== SessionRedirectTarget && $(document.body).hasClass(SessionRedirectTarget)) {
    
      var SessionRedirectAjax = rm.sessionStorage.getSession('SessionRedirectAjax');
      
      if('true' !== SessionRedirectAjax) {
        triggerSessionRedirects();
      } 
    
    } else {
      clearSessionRedirects();
    }
  };
  
  var triggerSessionRedirects = function() {
    var SessionRedirectTarget = rm.sessionStorage.getSession('SessionRedirectTarget');
    
    if( 'string' === typeof SessionRedirectTarget && '' !== SessionRedirectTarget && $(document.body).hasClass(SessionRedirectTarget)) {

      var SessionRedirectReturnURL = decodeURI(rm.sessionStorage.getSession('SessionRedirectReturnURL'));
      
      if( 'string' === typeof SessionRedirectReturnURL && '' !== SessionRedirectReturnURL ) {
        window.location.href = SessionRedirectReturnURL;
        
        var SessionRedirectScroll = rm.sessionStorage.getSession('SessionRedirectScroll');
        var SessionRedirectScrollBodyClass = rm.sessionStorage.getSession('SessionRedirectScrollBodyClass');
        
        if( 'string' === typeof SessionRedirectScroll && '' !== SessionRedirectScroll && 'string' === typeof SessionRedirectScrollBodyClass && '' !== SessionRedirectScrollBodyClass ) {
          rm.sessionStorage.setSession('sessionScrollElementID', SessionRedirectScroll );
          rm.sessionStorage.setSession('sessionScrollBodyClass', SessionRedirectScrollBodyClass );
        }
      }
    }
    
    clearSessionRedirects();
    
  };
  
  var clearSessionRedirects = function() {
    rm.sessionStorage.removeSession('SessionRedirectTarget');
    rm.sessionStorage.removeSession('SessionRedirectSource');
    rm.sessionStorage.removeSession('SessionRedirectAjax');
    rm.sessionStorage.removeSession('SessionRedirectScroll');
    rm.sessionStorage.removeSession('SessionRedirectReturnURL');
    rm.sessionStorage.removeSession('SessionRedirectScrollBodyClass');
  };
  
  return {
    init : initialize,
    bind : bindSessionRedirects,
    trigger : triggerSessionRedirects,
    clear : clearSessionRedirects
  };
})();

rm.pageLength = (function() {
  'use strict';

  var initialize = function() {
    var slr = {
      pathTableId: '#pathology-ng',
      diTableId: '#diagnostic-ng',
      pathClass: '.pathology',
      diClass: '.diagnostic-imaging',
      dischargeSummaryId: '#discharge-summary-table',
      pcmlTableId: '#discharge-summary-table',
      prescriptionNgId: '#prescription-ng'
    };

    var dischargeSummaryTotal = $(slr.dischargeSummaryId).DataTable().data().length,
      pcmlTotal = $(slr.pcmlTableId).DataTable().data().length,
      bodyClassName = $('body').attr('class');

    var pathTotal = 0;
    if(typeof $(slr.pathTableId).DataTable().page.info() !== 'undefined')
      pathTotal = $(slr.pathTableId).DataTable().page.info().recordsDisplay;

    var diTotal = 0;
    if(typeof $(slr.diTableId).DataTable().page.info() !== 'undefined')
      diTotal = $(slr.diTableId).DataTable().page.info().recordsDisplay;

    var prescriptionNgTotal = 0;
    if(typeof $(slr.prescriptionNgId).DataTable().page.info() !== 'undefined')
      prescriptionNgTotal = $(slr.prescriptionNgId).DataTable().page.info().recordsDisplay;

    function hideOptions(target, total) {
      $(target).find('.top .dataTables_length').removeClass('hidden');
      $(target).find('.bottom .dataTables_length').removeClass('hidden');
      $(target).find('.top .dataTables_length select option').removeClass('hidden');
      $(target).find('.bottom .dataTables_length select option').removeClass('hidden');

      if(total <= 25) {
        $(target).find('.top .dataTables_length').addClass('hidden');
				$(target).find('.bottom .dataTables_length').addClass('hidden');
      } else if(total <= 50) {
        $(target).find('.top .dataTables_length select > option:eq(1), .top .dataTables_length select > option:eq(2)').addClass('hidden');
				$(target).find('.bottom .dataTables_length select > option:eq(1), .bottom .dataTables_length select > option:eq(2)').addClass('hidden');
      } else if(total <= 100) {
        $(target).find('.top .dataTables_length select > option:eq(2)').addClass('hidden');
				$(target).find('.bottom .dataTables_length select > option:eq(2)').addClass('hidden');
      }
    }
    
		switch(true) {
			case (bodyClassName !== undefined && bodyClassName.indexOf('pathology') !== -1) :
				hideOptions(slr.pathClass, pathTotal);
				break;
			case (bodyClassName !== undefined && bodyClassName.indexOf('diagnostic-imaging') !== -1) :
				hideOptions(slr.diClass, diTotal);
				break;
      case (0 !== $(slr.pcmlTableId).length) :
        hideOptions('body', pcmlTotal);
        break;
			case ($(slr.dischargeSummaryId).length !== 0) :
				hideOptions('body', dischargeSummaryTotal);
				break;
			case ($(slr.prescriptionNgId).length !== 0) :
				hideOptions('body', prescriptionNgTotal);
				break;
      default:
        break;
		}
  };

  var setPageLength = function(target, total) {
    $(target).find('.top .dataTables_length').removeClass('hidden');
    $(target).find('.bottom .dataTables_length').removeClass('hidden');

    if(total <= 25) {
      $(target).find('.top .dataTables_length').addClass('hidden');
			$(target).find('.bottom .dataTables_length').addClass('hidden');

    } else if(total <= 50) {
      $(target).find('.top .dataTables_length select, .bottom .dataTables_length select').html('<option value="25">25 per page</option><option value="-1">Show All on this page</option>');
    } else if(total <= 100) {
      $(target).find('.top .dataTables_length select, .bottom .dataTables_length select').html('<option value="25">25 per page</option><option value="50">50 per page</option><option value="-1">Show All on this page</option>');
    }

    // $('.dataTables_length .native-select').selectpicker('refresh');
  };

  return {
    init: initialize,
    setPageLength: setPageLength
  };
}());
/* globals Unison */
/* jshint unused:false */
rm.globalSearch = (function () {

  'use strict';

  var initialize = function () {

    var $searchWrapper = $('.search-section'),
        $searchControl = $('.search-section input'),
        $searchClear =  $('.global-search-clear'),
        $searchButton =  $('.global-search-submit');

    setTimeout(function(){
        $searchWrapper.each(function(index){
            var currElem = $searchWrapper[index];
            var currSearchClearElem = $(currElem).find($searchClear);
            if ($(currElem).find('input').val() === '') {
                $(currSearchClearElem).addClass('hidden');
            } else if ($(currElem).find('input').val().length > 1) {
                $(currSearchClearElem).removeClass('hidden');
            }
        });
    
    }, 500);

    $(window).scroll(function(){
        if($('.global-search-page .global-search-input').length > 0){
            var stickyHeight = $('.sticky--header').outerHeight(true),
                searchOffset = $('.global-search-page .global-search-input').offset().top,
                searchHeight = $('.global-search-page .global-search-input').outerHeight(true),
                scrollTop = $('html, body').scrollTop();

            if(searchOffset + searchHeight - stickyHeight <= scrollTop) { 
                $searchControl.blur();
            }
        }
    });

    $searchControl.on('input', function (e) {

        var value = $(this).val();
        var length = value.length;

        if (value === '') {
            $searchClear.addClass('hidden');
        } else {
            $searchClear.removeClass('hidden');
      
            if ($(window).width() === 768) {
               $searchClear.removeClass('hidden').addClass('icon--clear-hover');
            } 
        }

    });
  
    $searchControl.on('keypress', function(event){

        if(event.keyCode === 13 && !$searchButton.is(':disabled')){
            //Submit code to be added here.
        }
    });

    $searchClear.hover(function() {
        $(this).removeClass('icon--clear-default');
        $(this).addClass('icon--clear-hover');
        }, function(){
        $(this).removeClass('icon--clear-hover');
        $(this).addClass('icon--clear-default');
    });

    $searchClear.focus(function() {
       $(this).removeClass('icon--clear-default');
       $(this).removeClass('icon--clear-hover');
       $(this).addClass('icon--clear-active');
    });

    $searchClear.blur(function() {
       $(this).removeClass('icon--clear-active');
       $(this).removeClass('icon--clear-hover');
       $(this).addClass('icon--clear-default');
    });

    $searchClear.on('click', function (e) {
       e.preventDefault();
       $(this).addClass('hidden');
       $(this).parents($searchWrapper).find('input.global-search-input').val('').trigger('input');
       $(this).parents($searchWrapper).find('input.global-search-input').focus();

    });

  };


  // public api
  return {
    init: initialize
  };

})();
rm.addRule = (function() {
    'use strict';

    var initialize = function() {
        window.addRule = function(selector, styles, sheet) {
            if(typeof styles !== 'string') {
            var clone = '';
            for(var style in styles) {
                var val = styles[style];
                style = style.replace(/([A-Z])/g, '-$1').toLowerCase();
                clone += style + ':' + (style === 'content' ? '"' + val + '"' : val) + '; ';
            }
            styles = clone;
            }
            sheet = sheet || document.styleSheets[document.styleSheets.length - 1];
            if(sheet.insertRule) sheet.insertRule(selector + ' {' + styles + '}', sheet.cssRules.length);
            else if(sheet.addRule) sheet.addRule(selector, styles);
            return this;
        };
        if($) {
            $.fn.addRule = function(styles, sheet) {
            addRule(this.selector, styles, sheet); // jshint ignore:line
            return this;
            };
        }
    };

    return {
      init: initialize
    };
  }());
'use strict';

(function(){
  var $errorContainer = $('#error-container');
  var $errorMessageContainer = $('#error-container .alert__message');
  
  function show(message) {
    $errorContainer.removeClass('hidden');
    $errorMessageContainer.html(message);
    rm.rollTo.to('body');
  }
  
  function hide() {
    $errorContainer.addClass('hidden');
  }


  var instance = {};
  instance.show = show;
  instance.hide = hide;

  rm.errorContainer = instance;
})();
rm.setNotifications = (function() {
  'use strict';

    var $formSetNotification = $('#formNotificationSettings'),
    $formEmail = $('#form-notification-verifications-email'),
    $formMobile = $('#form-notification-verifications-mobile'),
    $emailAddress = $('#emailAddress'),
    $mobileNumber = $('#mobileNumber'),
    $cancelEmail = $('#cancel-email'),
    $cancelMobile = $('#cancel-mobile');

  var initialize = function () {
    if($formSetNotification.length) {
      $formSetNotification.on('submit', function(e) {
        var emailError = false, mobileError = false;

        $formSetNotification.find('input[type="radio"]:checked').each(function(i,v) {
          
         if($(this).val().toLowerCase() === 'email'){
            emailError = true;
          } else if ($(this).val().toLowerCase() === 'sms') {
            mobileError = true;
          }

        });
      
        if($formEmail.attr('data-status') === 'verified') {
          emailError = false;
        }

        if($formMobile.attr('data-status') === 'verified') {
          mobileError = false;
        }

        if (emailError && mobileError) {
            $formEmail.trigger('submit');
            $formMobile.trigger('submit');
            $emailAddress.focus();
        } else if(emailError) {
            $formEmail.trigger('submit');
            $emailAddress.focus();
            $cancelMobile.trigger('click');
        } else if (mobileError) {
            $formMobile.trigger('submit');
            $mobileNumber.focus();
            $cancelEmail.trigger('click');       
        } else {
            $cancelEmail.trigger('click'); 
            $cancelMobile.trigger('click');
        }
        e.preventDefault();
      });
    } 
  };

  return {
    init: initialize
  };
}());
rm.article = (function(){
  'use strict';

    var settings = {
      'showPerPage'     : 25,
      'pageNumbers'     : 0,
      'totalArticles'   : 0,
      'currentPage'     : 1,
      'article'         : '.search-result-item',
      'articleTlp'      : '#articleTlp',
      'articleWrapper'  : '#articles',
      'overviewHeading' : '.overview__heading',
      'overviewDesc'    : '.overview__description',
      'activePage'      : '.paginate__number.active',
      'paginateWrapper' : '.paginate__wrapper',
      'paginateNumber'  : '.paginate__number',
      'paginateNextBtn' : '.paginate__next',
      'paginatePrevBtn' : '.paginate__previous',
      'paginateInfo'    : '.paginate__info'
    };

    settings.totalArticles = $(settings.articleWrapper + ' > .search-result-item').length;
    settings.pageNumbers  = Math.ceil(settings.totalArticles / settings.showPerPage);

    hideShowPage();
    displayPageInfo();
    initPageWrapper();

    $(document).on('click', settings.paginateNumber, function(){
      $(settings.paginateWrapper+' > '+settings.paginateNumber).removeClass('active');
      settings.currentPage = parseInt($(this).attr('data-page'));
      var pages = genPages(settings.currentPage, settings.pageNumbers);
      $.when( addPaginateBtns(pages, settings.currentPage) ).done(function( x ) {
        hideShowPrevNextBtn(); 
      });
      hideShowPage();
    });   

    $(document).on('click', settings.paginateNextBtn, function(){
      $(settings.activePage).next().trigger('click');
    });

    $(document).on('click', settings.paginatePrevBtn, function(){
      $(settings.activePage).prev().trigger('click');
    });

    function initPageWrapper(){
        $('<div class="paginate"></div>').insertAfter( settings.articleWrapper );
        $('.paginate').append('<div class="paginate__info"></div>');
        if(settings.pageNumbers > 1){
            $('.paginate').append('<div class="paginate__buttons"><button type="button" class="paginate__previous btn-link"><span class="sr-only">Go to previous page</span></button><div class="paginate__wrapper"></div><button type="button" class="paginate__next btn-link"><span class="sr-only">Go to next page</span></button></div>');
            var results = genPages(settings.currentPage, settings.pageNumbers);
            addPaginateBtns(results,settings.currentPage);
            hideShowPrevNextBtn();
        }
        displayPageInfo();
    }

    function hideArticles()
    {
      $(settings.articleWrapper + ' > .search-result-item').addClass('hidden');
    }

    function addPaginateBtns(pages, currentPage)
    {
      $(settings.paginateWrapper).html('');
      $.each(pages, function(index,item){
        if(item !== '...'){
          $(settings.paginateWrapper).append('<button type="button" class="paginate__number btn-link'+ ((item === currentPage) ? ' active' : '') +'" data-page="'+ item +'"><span class="sr-only">'+ ((item === currentPage) ? 'Current page is page ' : 'Go to page ') +'</span>'+ item +'</button>');
        }else{
          $(settings.paginateWrapper).append('<span class="paginate__ellipsis">'+ item +'</span>');
        }
      });
    }
    
    function displayPageInfo()
    {
      var pageInfo = 'Displaying '+( ((settings.showPerPage*settings.currentPage) - settings.showPerPage) + 1 )+' to '+ ( (settings.showPerPage*settings.currentPage > settings.totalArticles) ? settings.totalArticles : settings.showPerPage*settings.currentPage) +' of '+settings.totalArticles+' results';
      $(settings.paginateInfo).html(pageInfo);
    }

    function hideShowPage(){
      hideArticles();
      var tmpVal = settings.showPerPage * settings.currentPage;

      for(var i = tmpVal - settings.showPerPage; i < tmpVal; i++){
        $(settings.articleWrapper + ' .search-result-item:eq('+ i +')').removeClass('hidden');
      }
      
      displayPageInfo();
    }

    function hideShowPrevNextBtn(){
      $(settings.paginateNextBtn)[parseInt($(settings.activePage).attr('data-page')) === parseInt(settings.pageNumbers) ? 'addClass' : 'removeClass']('hidden');
      $(settings.paginatePrevBtn)[parseInt($(settings.activePage).attr('data-page')) === 1 ? 'addClass' : 'removeClass']('hidden');
    }

    function genPages(currentPage, pageCount){
      var delta = (pageCount >= 8) ? 4 : 7;
      var pages = [];
      var span = ( currentPage <= (pageCount - delta) ) ? 5 : pageCount - 1;
      var counter = (currentPage < 5) ?  2 : 4;
      
      while(counter <= span){
        pages.push(counter++);
      }

      if(currentPage - delta >= 1){
        pages.unshift('...');
      }

      if(currentPage + delta <= pageCount){
        pages.push('...');
      }

      pages.unshift(1);
      pages.push(pageCount);
      return pages;
    }

    $(document).ready(function() {
      $('#articles .search-result-item').attr('tabindex','0');
      $('.search-result-item header a').attr('tabindex','-1');

      $(document).on('click', settings.articleWrapper+' > .search-result-item', function(e) {
        e.preventDefault();
        var $link = $(this).find('a');

        if ($link.attr('target') !== '_blank') {
          window.location = $link.attr('href');
          return;
        }
        else if ($link.attr('target') === '_blank') {
          window.open($link.attr('href'));
          return;
        }
      });

      $(document).on('keypress', settings.articleWrapper+' > .search-result-item', function (e) {
        e.preventDefault();
        var $link = $(this).find('a');
        if (e.which === 13) {
          if ($link.attr('target') !== '_blank') {
            window.location = $link.attr('href');
            return;
          }
          else if ($link.attr('target') === '_blank') {
            window.open($link.attr('href'));
            return;
          }
        }
      });
    });

})();
rm.header = (function () {

	'use strict';

	var initialize = function() {
	};

	var formULC   = '#consumeULCForm',
        $formULC  = $(formULC),
		$codeInput = $formULC.find( 'input[name="ulc"]' );


	// Modal Header Consume ULC
	$('#adminConsumeULCMenu, a[data-target="#modalConsumeULC"]').on('click', function (e) {
		$('#modalConsumeULC').appendTo('body');
	});

	//Alphanumeric. Dashes will be added automatically.
	$codeInput.on( 'keyup', function( event ) {
		
		// When user select text in the document, also abort.
		var selection = window.getSelection().toString();
		if ( selection !== '' ) {
			return;
		}
		// When the arrow keys are pressed, abort.
		if ( $.inArray( event.keyCode, [38,40,37,39] ) !== -1 ) {
			return;
		}
		
		var $this = $(this), input = $this.val();
		input = input.replace(/[\W\s\._\-]+/g, '');
		
		var split = 4, chunk = [];

		for (var i = 0, len = input.length; i < len; i += split) {
			split = ( i >= 4 && i <= 8 ) ? 4 : 4;
			chunk.push( input.substr( i, split ) );
		}

		var output = $.map( chunk, function(v, i) {
			return v.length === 4 && i < 1 ? v + '-' : v;
		});

		$this.val(function() {
			return output.join('');
		});
	
	});

	$codeInput.on( 'keydown', function( event ) {
		
		var $this = $(this), 
			input = $this.val();
		
		// When backspace and delete keys are pressed.
		if ( $.inArray( event.keyCode, [8,46] ) !== -1 ) {
			// if hypen is the last char, remove the letter before the hypen and the hypen
			if (/\w\-$/.test(input)) input = input.substr(0, input.length - 1);

			$this.val(function() {
				return input;
			});
		}
	});

	// public api
	return {
		init: initialize,
	};

})();
rm.header.init();
rm.document = (function () {
    'use strict';
  
    var elemSelector = {
        formValidate: 'form.js-validate',
        resetButton: 'input[type="reset"], button[type="reset"], .js-reset'
      };

    var load = function (url, callback) {
        var req = new window.XMLHttpRequest();
        req.open('GET', url);
        // to allow us doing XSLT in IE
        try { req.responseType = 'msxml-document'; } catch (ex) {}
        req.onload = function() {
          callback(req.responseXML);
        };
        req.send();
      };
      
    var displayResult = function (xmlInput, xsltSheet) {
        if (typeof XSLTProcessor !== 'undefined') {
          var proc = new window.XSLTProcessor();
          proc.importStylesheet(xsltSheet);
          document.getElementById('example').appendChild(proc.transformToFragment(xmlInput, document));
        }
        else if (typeof xmlInput.transformNode !== 'undefined') {
          document.getElementById('example').innerHTML = xmlInput.transformNode(xsltSheet);
        }
    };

    var initialize = function() {
        window.addEventListener('load', function(){
            var host = window.location.host;

            if( host.indexOf('moorthy28sep') === -1){
            var $style = $('[data-move-to-head="this"]');
                $('[data-move-to-head="this"]').remove();
                $('head').append($style);
            }
        });
    };

    return {
        transform: function (xml, xsl) {
            load(xml, function (inputXml) {
                load(xsl, function (xsltSheet) {
                    displayResult(inputXml, xsltSheet);
                    var host = window.location.host;

                    if( host.indexOf('moorthy28sep') !== -1){
                    var $style = $('[data-move-to-head="this"]');
                    $('[data-move-to-head="this"]').remove();
                    $('head').append($style);
                    }
                }
                );
            }
            );
        },
        init : initialize
    };  
  }());
rm.questionnaire = (function () {  
  'use strict';

 
var initialize = function () {
  var   formQuestNew   = '#formChildhoodQuestionnaireNew',
        $formQuestNew  = $(formQuestNew);

  var slr = {   
      questBtn   : '#questBtn',
      wrapCls: 'fv-feedback-wrap',
      feedbackParentSlr: '.form-group',
      feedbackIconSlr: ['[data-fv-icon-for*="', '"]'],
      feedbackTextSlr: ['[data-fv-for*="', '"]']      
  };

  $(slr.questBtn).on('click', function(){
      checkRadioHasAns();
      checkCommentHasAns();
  });

  function checkRadioHasAns()
  {
    var radioFields = $formQuestNew.find('input[type=radio]');
    radioFields.each(function(index,item){
      if($('input[name="'+ $(item).attr('name') +'"]:checked').val()){
        addRemValidation($formQuestNew, false);
      }
    });
  }
  

  function checkCommentHasAns()
  {
    var textAreaFields = $formQuestNew.find('textarea');

    textAreaFields.each(function(index,item){
      if($.trim($(item).val())){
        addRemValidation($formQuestNew, false);
      }
    });
  }

  function addRemValidation($form, action)
  {
    var textAreaField = $form.find('textarea');
    textAreaField.each(function(index,item){
      var textAreaName = $(item).attr('name');
      $form.data('formValidation').enableFieldValidators(textAreaName, action, 'notEmpty').revalidateField($(this));
    });

    var radioField = $form.find('input[type=radio]') ;
    radioField.each(function(index,item){
      var radioName = $(item).attr('name');
      $form.data('formValidation').enableFieldValidators(radioName, action, 'callback').revalidateField($(this));
    });
  }

  rm.domReady.done(function () {
    var radioField = $formQuestNew.find('input[type=radio]');
      var uniqNames = '';
      radioField.each(function(index,item){
        var radioName = $(item).attr('name');
        if(uniqNames.trim() !== radioName.trim()){
          uniqNames = radioName;
          rm.validationHelper.configOneOfReqChecked_iconAndText(
            $formQuestNew,
            uniqNames,
            'Please answer the question.'
          );
        }
      });
  });
};
return {
  init: initialize
};
})();
/* globals moment */

rm.nativeDate = (function () {
  'use strict';
  
  var initialize = function() {
    bindChange();    
  };

  var bindChange = function () {
    $('body').on('focusout','[data-field-type="day"],[data-field-type="month"]', function () {
      if($(this).val().length === 1)
        $(this).val('0' + $(this).val());
    });
  };

  return {
    init: initialize
  };
}());

(function(){

  'use strict';

  rm.domReady.done(function () {
    if (!(rm.globals.DOM.body.hasClass('medicines-info') || (window.location.pathname.indexOf('medicines_information/med_info') !== -1 && rm.globals.DOM.body.hasClass('js-readonly')))) return;
    rm.ajaxLoader.showAjaxLoader('Loading');
    var slr = {
          showEmty: '.display--emptytable',
          showFill: '.display--filledtable',
          sysErr: '.error--system-error',
          sysErrText: '.error--system-error .alert__message__content',
          tb: '#medicines-view-records',
          tbEmpty: '#medicines-view-records--empty',
          lastLog: '.last-logged-in span',
          authorInfoTb: "authorinfo",
          allergiesAuthorInfoTb: "allergies-authorinfo",
          allergiesAuthorInfoModalId: "allergiesAuthorInfoModal",
          authorInfoModalId: "modalAuthorInfo",
          allergiesTb: "meds-info-allergies",
          allergiesTbEmpty: "meds-info-allergies--empty",
          authorInfoClass: ".allergies-author-info",
          allergiesAccordion: "meds-info-allergies-accordion",
          allergiesAccordionEmpty: "meds-info-allergies--empty",
          allergiesOverviewCountClass: '.allergies-overview-count',
          allergiesOverviewUnitClass: '.allergies-overview-unit',
          authorsFilter: 'authors-filter',
          dateFilter: 'date-selector',
          docTypeFilter: 'documents-type',
          medsToogle: '.meds-toogle',
          medsViewError: "#meds-view-error",
          medsDoc: '#documents-type',
          medsAuthor: '#authors-filter',
          medsDate: '#date-selector'
        },
        cls = {
          hide: 'hidden',
          expdAllBtn: 'meds-tb-expd',
        },
        txt = {
          lastLog: 'You last logged in on ',
          clpsAll: 'Collapse All',
          expdAll: 'Expand All'
        }, medsViewData, medsViewAuthorData, sortingColumn = 1, $tb = $(slr.tb),
        phsLocationRef = '/content/ncp/documents/key_info/phs.html',
        shsLocationRef = '/content/ncp/documents/document.shs.html',
        sysGenText = $('#sysGeneratedText').val();
    $(slr.tb).addClass(cls.hide);
    var medsViewAjaxTb = rm.ajaxTb.create(),
        authorInfoAjaxTb = rm.ajaxTb.create(),
        allergiesAjaxTb = rm.ajaxTb.create(),
        allergiesAuthorInfoAjaxTb = rm.ajaxTb.create(),
        ajaxRequest = rm.ajaxData.create(),
        jsonToAttrMap = [
          {
            jsonPropName: 'documentID',
            targetElem: false,
            targetAttr: 'data-docid'
          },{
            jsonPropName: 'SourceID',
            targetElem: 'td:nth-child(1) .medicine-source',
            targetAttr: 'data-source'
          },{
            jsonPropName: 'source',
            targetElem: 'td:nth-child(1) .medicine-source',
            targetAttr: false
          },{
            jsonPropName: 'AuthorDescription',
            targetElem: 'td:nth-child(1) .medicine-view-author-info',
            targetAttr: false,
            displayElement: 'showAuthorLink'
          },{
            jsonPropName: 'documentID',
            targetElem: 'td:nth-child(1) .medicine-view-author-info',
            targetAttr: 'data-docid'
          },{
            jsonPropName: 'Author',
            targetElem: 'td:nth-child(1) .medicine-view-author-info',
            targetAttr: 'data-author'
          },{
            jsonPropName: 'AuthorType',
            targetElem: 'td:nth-child(1) .medicine-view-author-info',
            targetAttr: 'data-role'
          },{
            jsonPropName: 'AuthorDescription',
            targetElem: 'td:nth-child(1) .medicine-view-author-info',
            targetAttr: 'data-organization'
          },{
            jsonPropName: 'AuthorPhone',
            targetElem: 'td:nth-child(1) .medicine-view-author-info',
            targetAttr: 'data-phone'
          },{
            jsonPropName: 'AuthorFax',
            targetElem: 'td:nth-child(1) .medicine-view-author-info',
            targetAttr: 'data-fax'
          },{
            jsonPropName: 'dateSortingIndex',
            targetElem: 'td:nth-child(2)',
            targetAttr: 'data-sort'
          }, {
            jsonPropName: 'date',
            targetElem: 'td:nth-child(2) .medicine-view-date',
            targetAttr: false
          },{
            jsonPropName: 'ago',
            targetElem: 'td:nth-child(2) .medicine-view-date-ago',
            targetAttr: false,
            addBrackets: true
          },{
            jsonPropName: 'dispenses',
            targetElem: 'td:nth-child(2) .medicine-view-dispenses',
            targetAttr: false,
            addBrackets: true
          },{
            jsonPropName: 'status',
            targetElem: 'td:nth-child(2) .medicine-view-status',
            targetAttr: false
          },{
            jsonPropName: 'ingredients',
            targetElem: 'td:nth-child(3) span',
            targetAttr: false
          }, {
            jsonPropName: 'brand',
            targetElem: 'td:nth-child(4) .medicines-view-brand',
            targetAttr: false
          },{
            jsonPropName: 'reasonCeased',
            targetElem: 'td:nth-child(4) .medicines-view-reason-ceased',
            targetAttr: false,
            addBrackets: true,
            label: "Reason: "
          }, {
            jsonPropName: 'direction',
            targetElem: 'td:nth-child(5) span',
            targetAttr: false
          },{
            jsonPropName: 'source',
            targetElem: 'td:nth-child(6) .medicine-source',
            targetAttr: false
          },{
            jsonPropName: 'AuthorDescription',
            targetElem: 'td:nth-child(6) .medicine-view-author-info',
            targetAttr: false,
            displayElement: 'showAuthorLink'
          },{
            jsonPropName: 'documentID',
            targetElem: 'td:nth-child(6) .medicine-view-author-info',
            targetAttr: 'data-docid'
          },{
            jsonPropName: 'Author',
            targetElem: 'td:nth-child(6) .medicine-view-author-info',
            targetAttr: 'data-author'
          },{
            jsonPropName: 'AuthorType',
            targetElem: 'td:nth-child(6) .medicine-view-author-info',
            targetAttr: 'data-role'
          },{
            jsonPropName: 'AuthorDescription',
            targetElem: 'td:nth-child(6) .medicine-view-author-info',
            targetAttr: 'data-organization'
          },{
            jsonPropName: 'AuthorPhone',
            targetElem: 'td:nth-child(6) .medicine-view-author-info',
            targetAttr: 'data-phone'
          },{
            jsonPropName: 'AuthorFax',
            targetElem: 'td:nth-child(6) .medicine-view-author-info',
            targetAttr: 'data-fax'
          }
        ];

        var authorInfoMap = [
            {
                jsonPropName: 'documentID',
                targetElem: false,
                targetAttr: 'data-docid'
            },{
                jsonPropName: 'Author',
                targetElem: 'td:nth-child(1) .author-name',
                targetAttr: false
            },{
                jsonPropName: 'AuthorPhone',
                targetElem: 'td:nth-child(2) .author-phone',
                targetAttr: false
            },{
                jsonPropName: 'AuthorFax',
                targetElem: 'td:nth-child(2) .author-fax',
                targetAttr: false
            },{
                jsonPropName: 'AuthorDescription',
                targetElem: 'td:nth-child(1) .author-org',
                targetAttr: false
            },{
                jsonPropName: 'AuthorType',
                targetElem: 'td:nth-child(1) .author-role',
                targetAttr: false
            }
        ];

        var allergiesMap = [
            {
                jsonPropName: 'documentID',
                targetElem: false,
                targetAttr: 'data-docid'
            },{
              jsonPropName: 'SourceID',
              targetElem: 'td:nth-child(1) .medicine-source',
              targetAttr: 'data-source'
            },{
              jsonPropName: 'source',
              targetElem: 'td:nth-child(1) .medicine-source',
              targetAttr: false
            },{
              jsonPropName: 'AuthorDescription',
              targetElem: 'td:nth-child(1) .allergies-author-info',
              targetAttr: false,
              displayElement: 'showAuthorLink'
            },{
              jsonPropName: 'documentID',
              targetElem: 'td:nth-child(1) .allergies-author-info',
              targetAttr: 'data-docid'
            },{
              jsonPropName: 'Author',
              targetElem: 'td:nth-child(1) .allergies-author-info',
              targetAttr: 'data-author'
            },{
              jsonPropName: 'AuthorType',
              targetElem: 'td:nth-child(1) .allergies-author-info',
              targetAttr: 'data-role'
            },{
              jsonPropName: 'AuthorDescription',
              targetElem: 'td:nth-child(1) .allergies-author-info',
              targetAttr: 'data-organization'
            },{
              jsonPropName: 'AuthorPhone',
              targetElem: 'td:nth-child(1) .allergies-author-info',
              targetAttr: 'data-phone'
            },{
              jsonPropName: 'AuthorFax',
              targetElem: 'td:nth-child(1) .allergies-author-info',
              targetAttr: 'data-fax'
            },{
              jsonPropName: 'date',
              targetElem: 'td:nth-child(2)',
              targetAttr: 'data-sort'
            }, {
              jsonPropName: 'date',
              targetElem: 'td:nth-child(2) .allergies-date',
              targetAttr: false
            },{
              jsonPropName: 'ago',
              targetElem: 'td:nth-child(2) .allergies-date-ago',
              targetAttr: false,
              addBrackets: true
            },{
              jsonPropName: 'substance',
              targetElem: 'td:nth-child(3) .allergies-substance',
              targetAttr: false
            },{
              jsonPropName: 'reactionType',
              targetElem: 'td:nth-child(3) .allergies-reaction-type',
              targetAttr: false,
              addBrackets: true
            },{
              jsonPropName: 'manifestations',
              targetElem: 'td:nth-child(4) span',
              targetAttr: false
            },{
              jsonPropName: 'source',
              targetElem: 'td:nth-child(5) .medicine-source',
              targetAttr: false
            },{
              jsonPropName: 'AuthorDescription',
              targetElem: 'td:nth-child(5) .allergies-author-info',
              targetAttr: false,
              displayElement: 'showAuthorLink'
            },{
              jsonPropName: 'documentID',
              targetElem: 'td:nth-child(5) .allergies-author-info',
              targetAttr: 'data-docid'
            },{
              jsonPropName: 'Author',
              targetElem: 'td:nth-child(5) .allergies-author-info',
              targetAttr: 'data-author'
            },{
              jsonPropName: 'AuthorType',
              targetElem: 'td:nth-child(5) .allergies-author-info',
              targetAttr: 'data-role'
            },{
              jsonPropName: 'AuthorDescription',
              targetElem: 'td:nth-child(5) .allergies-author-info',
              targetAttr: 'data-organization'
            },{
              jsonPropName: 'AuthorPhone',
              targetElem: 'td:nth-child(5) .allergies-author-info',
              targetAttr: 'data-phone'
            },{
              jsonPropName: 'AuthorFax',
              targetElem: 'td:nth-child(5) .allergies-author-info',
              targetAttr: 'data-fax'
            }
        ];

    var fetchData;

    if( window.location.href.indexOf('moorthy28sep') != -1 ) {
        fetchData = $.get('/ncp/medsView/table-form_meds-view-data.json');
    } else {
        fetchData = medsViewAjaxTb.fetchJson('/ncp/medsView');

    }

    fetchData
      .fail(function (err) {
          $(slr.tbEmpty).removeClass(cls.hide);
          setTimeout(function(){
              $(slr.tb+'_wrapper').addClass(cls.hide);
            }, 200);
          $('.meds-view-filters').addClass(cls.hide);
          $( "<div class='system-generated-text'>"+sysGenText+"</div>" ).insertAfter( slr.tbEmpty );
          $('#'+slr.allergiesAccordion).addClass('hidden');
          $('#'+slr.allergiesAccordionEmpty).removeClass('hidden');
          rm.ajaxLoader.hideAjaxLoader();
      })
      .done(function(respData) {
        medsViewAjaxTb.setCache(slr.tb);
        medsViewAjaxTb.state.jsonData = (respData.medsData && respData.medsData.length) ? true : false;
        medsViewData = respData;

        if (respData.errorCode !== 'SUCCESS') {
          //Empty table
           $(slr.tbEmpty).removeClass(cls.hide);
           $('#'+slr.allergiesAccordion).addClass('hidden');
           $('#'+slr.allergiesAccordionEmpty).removeClass('hidden');
          $(slr.tb +'_wrapper').addClass(cls.hide);
          $(slr.tb +'_wrapper').parent().append("<div>"+sysGenText+"</div>");
          switch (respData.errorCode) {
            case 'FAILED_TECH':
              $(slr.medsViewError).find('.alert__message__content').html(respData.errorMessage);
              $(slr.medsViewError).removeClass(cls.hide);
              $(slr.tb).addClass(cls.hide);
              rm.ajaxLoader.hideAjaxLoader();
              $('.meds-view-filters').addClass(cls.hide);
              break;
            case 'FAILED':
              $(slr.tb).addClass(cls.hide);
              $(slr.medsViewError).find('.alert__message__content').html(respData.errorMessage);
              $(slr.medsViewError).removeClass(cls.hide);
              rm.ajaxLoader.hideAjaxLoader();
              $('.meds-view-filters').addClass(cls.hide);
              break;
          }
        } else {
            var medsData = respData.medsData;

            if (!medsViewAjaxTb.state.jsonData) {
              $(slr.tbEmpty).removeClass(cls.hide);
              setTimeout(function(){
                $(slr.tb+'_wrapper').addClass(cls.hide);
              }, 200);
              $('.meds-view-filters').addClass(cls.hide);
            } else {
              $(slr.showEmty).addClass(cls.hide);
              $(slr.showFill).removeClass(cls.hide);

              createRow(medsData, jsonToAttrMap);
              authorInfoAjaxTb.setCache("#"+slr.authorInfoTb);
            }

            $(slr.lastLog).html(txt.lastLog + respData.lastUpdated);
            rm.table.initDataTable($tb);
            $tb.DataTable().order([1, 'asc']).draw();

            rm.pageLength.setPageLength('#medicines-view-records_wrapper', $tb.DataTable().data().length); //set page length option

            if(rm.sessionStorage.getSession('medsDoc') !== null) {
                $(slr.medsDoc).val(rm.sessionStorage.getSession('medsDoc'));
                var data = { detail: { id: 'documents-type', selected: rm.sessionStorage.getSession('medsDoc') } };
                filtersHandler(data);
            } else {
               $(slr.medsDoc).val('ad');
            }

            if(rm.sessionStorage.getSession('medsAuthor') !== null) {
                $(slr.medsAuthor).val(rm.sessionStorage.getSession('medsAuthor'));
                var data = { detail: { id: 'authors-filter', selected: rm.sessionStorage.getSession('medsAuthor') } };
                filtersHandler(data);
            } else {
              $(slr.medsAuthor).val('ALL');
            }

            if(rm.sessionStorage.getSession('medsDate') !== null) {
                $(slr.medsDate).val(rm.sessionStorage.getSession('medsDate'));
                var data = { detail: { id: 'date-selector', selected: rm.sessionStorage.getSession('medsDate') } };
                filtersHandler(data);
            } else {
              if(null === rm.sessionStorage.getSession('medsDoc') || 'ad' === rm.sessionStorage.getSession('medsDoc') ){
               var data = { detail: { id: 'date-selector', selected: '2y' } },
                   medsData = filterDataByDate('2y', respData.medsData);
               $(slr.medsDate).val('2y');
               filtersHandler(data);
              }
            }

            showAllergiesTable(respData.allergiesData, allergiesMap);
            //var currDateTime = moment().format('DD-MMM-YYYY [at] HH:mm');
            $('#view-generated').removeClass('hidden');
            $('.view-generated-time').text(respData.viewGenerated);
            if(respData.medsData.length > 0 && respData.allergiesData.length > 0) {
              $('#view-generated').addClass('printable-container');
            }
            if(medsViewAjaxTb.state.jsonData){
              $( "<div class='system-generated-text'>"+sysGenText+"</div>" ).insertAfter( $(slr.tb).parents('.dataTables_wrapper').find('.bottom') );
            }

            $(slr.tb).on('click','tbody tr', function(event){
              if(!$(event.target).hasClass('medicine-view-author-info')){
                  if($(this).find('td:first-child .table__link').attr('data-source') === 'PHS' && event.target.className !== 'td-detail__toggle') {
                    rm.sessionStorage.setSession('medsSession','true');
                    window.location.href = phsLocationRef;
                  } else {
                    tableRowClick(this, event);
                  }
              }

            });

            $(slr.tb).on('keypress','tbody tr', function(event){
              if((event.keycode || event.which) === 13){
                $(this).trigger('click');
              }
            });


            $(slr.medsToogle).click(function(){
              var $btn = $(this),
              doExpand = $btn.hasClass(cls.expdAllBtn);

              // Update the Btn text/class
              $btn
              .html(doExpand ? txt.clpsAll : txt.expdAll)
              .toggleClass(cls.expdAllBtn);

              $(slr.tb).find('tbody tr')[doExpand ? 'addClass' : 'removeClass']('td-detail--shown');
            });

            $(slr.tb +'_wrapper').parent().append("<div class='no-info-text hidden'>"+sysGenText+"</div>");
            if(medsData.length > 0){
              $(slr.tb).removeClass(cls.hide);
            } else {
              $(slr.tb +'_wrapper').addClass(cls.hide);
              $(slr.tbEmpty).removeClass(cls.hide);
              $('.no-info-text').removeClass('hidden');
            }

            if(rm.sessionStorage.getSession('medsPageLength') !== null) {
                $tb.DataTable().page.len(parseInt(rm.sessionStorage.getSession('medsPageLength'))).draw();
            }

            if(rm.sessionStorage.getSession('medsActivePage') !== null) {
                $tb.DataTable().page(parseInt(rm.sessionStorage.getSession('medsActivePage'))).draw(false);
            }
            
            $('#' + slr.authorInfoModalId).on('show.bs.modal', function(event) {
              populateData(slr.authorInfoTb, event);
            });

            if($('.medicine-view-author-info').length !== 0) {
              $('.medicine-view-author-info').on("keypress", function (event) {
                 if (event.which == 13) {
                     var $this = $(this);
                     $this.trigger('click');
                     event.stopPropagation();
                 }
              });
            }

            rm.ajaxLoader.hideAjaxLoader();
            rm.sessionScroll.readjustView();

            $('#medicines-view-records').removeAttr('role');
        }


      });

      function tableRowClick(thisObj, event){
        if (event.target.classList[0] === 'td-detail__toggle') {
            event.preventDefault();
            return;
        }
        rm.sessionStorage.setSession('medsSession','true');
        var docId = $(thisObj).attr('data-docid');
        var retriveDocumentPageURL = $("input[name='documentlinksrc']").val();
        var shsFlag = false;
        if (docId != undefined && docId.trim().length != 0) {
            if($(thisObj).find("td:first-child .table__link").attr("data-source") === 'SHS'){
              shsFlag = true;
            }
            retriveDocumentPageURL = retriveDocumentPageURL + '.html';
            $.ajax({
                    type: 'POST',
                    url: '/ncp/medsviewretrivedoclistdata',
                    data: 'docID=' + docId,
                    success: function (msg) {
                      if(shsFlag){
                        document.location.href = shsLocationRef;
                      } else {
                        document.location.href = retriveDocumentPageURL;
                      }
                    }
            });
          }
      }

      function showAllergiesTable(respData, infoMap){
        if(respData.length > 0){

            respData = _.sortBy(respData, [function(o) {
                                                return moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days');
                                            }, function(o) {
                                               return _.lowerCase(o.substance);
                                           }]);

            var substanceOverview = '';
            var $allergiesTb = $('#'+slr.allergiesTb);

            allergiesAjaxTb.setCache("#"+slr.allergiesTb);
            allergiesAjaxTb.addTrToTbody(allergiesAjaxTb.createTr(respData, infoMap));
            setTrColour('#'+slr.allergiesTb, respData);

            rm.table.initDataTable($allergiesTb);
            //$allergiesTb.DataTable().order([1, 'desc'],[2, 'asc']).draw();

            allergiesAuthorInfoAjaxTb.setCache("#"+slr.allergiesAuthorInfoTb);

            rm.pageLength.setPageLength('#meds-info-allergies_wrapper', $allergiesTb.DataTable().data().length); //set page length option

            if(rm.sessionStorage.getSession('allergiesPageLength') !== null) {
                $allergiesTb.DataTable().page.len(parseInt(rm.sessionStorage.getSession('allergiesPageLength'))).draw();
            }

            if(rm.sessionStorage.getSession('allergiesActivePage') !== null) {
                $allergiesTb.DataTable().page(parseInt(rm.sessionStorage.getSession('allergiesActivePage'))).draw(false);
            }

            $('#'+slr.allergiesAccordion).removeClass('hidden');
            $(slr.authorInfoClass).click({"id": slr.allergiesAuthorInfoModalId, "tableId": slr.allergiesAuthorInfoTb},authorInfoClick);

            $(slr.authorInfoClass).on("keypress", function (event) {
               if (event.which == 13) {
                   $(this).trigger('click');
                   event.stopPropagation();
               }
            });

            $(slr.allergiesOverviewCountClass).text(respData.length);

            $(slr.allergiesOverviewUnitClass).text(respData.length != 1?'items':'item');

            _.forEach(respData, function(value, key){
                substanceOverview = substanceOverview + ', ' + value.substance;
            });

            $('#'+slr.allergiesTb).on('click','tbody tr', function(event){
              if(!$(event.target).hasClass('allergies-author-info')){
                  if($(this).find('td:first-child .table__link').attr('data-source') === 'PHS' && event.target.className !== 'td-detail__toggle') {
                    rm.sessionStorage.setSession('medsSession','true');
                    window.location.href = phsLocationRef;
                  } else {
                    tableRowClick(this, event);
                  }
              }

            });

            $('#'+slr.allergiesTb).on('keypress','tbody tr', function(event){
              if((event.keycode || event.which) === 13){
                $(this).trigger('click');
              }
            });

        } else {
            $('#'+slr.allergiesAccordion).addClass('hidden');
            $('#'+slr.allergiesAccordionEmpty).removeClass('hidden');
        }
      }

      function setTrColour(table, respData){
        $( table ).find('tbody tr').each(function( rowIdx ) {
          if(typeof respData[rowIdx] !== 'undefined'){
            if(respData[rowIdx].SourceID == 'EDS'){
                $(this).addClass('table__row_bg_twilight_blue');
            } else if(respData[rowIdx].SourceID == 'SHS'){
                $(this).addClass('table__row_bg_lighter_blue');
            }

            if(respData[rowIdx].SourceID == 'PBS' || (table == '#'+slr.allergiesTb && respData[rowIdx].SourceID == 'PHS')){
              //$(this).find('.medicine-source').removeClass('table__link');
              $(this).find('.medicine-source').removeAttr('href');
            }
          }
        });

      }

      function authorInfoClick(event){
        $('#'+event.data.id).modal('show');
        var tableId = event.data.tableId;
        populateData(tableId, event);
      }

      function populateData(id, event) {
        
        var targetElement = event.relatedTarget || event.target;
        
        
        var authorName = $(targetElement).attr('data-author');
        var authorRole = $(targetElement).attr('data-role');
        var authorOrganization = $(targetElement).attr('data-organization');
        var authorPhone = $(targetElement).attr('data-phone');
        var authorFax = $(targetElement).attr('data-fax');

        $('#'+id+' tr').addClass('hidden');
        if(typeof authorName !== 'undefined' && authorName !== '')
          $('#'+id).find('td.author-name').text(authorName).closest('tr').removeClass('hidden');
        if(typeof authorRole !== 'undefined' && authorRole !== '')
          $('#'+id).find('td.author-role').text(authorRole).closest('tr').removeClass('hidden');
        if(typeof authorOrganization !== 'undefined' && authorOrganization !== '')
          $('#'+id).find('td.author-org').text(authorOrganization).closest('tr').removeClass('hidden');
        if(typeof authorFax !== 'undefined' && authorFax !== '')
          $('#'+id).find('td.author-fax').text(authorFax).closest('tr').removeClass('hidden');
        if(typeof authorPhone !== 'undefined' && authorPhone !== '')
          $('#'+id).find('td.author-phone').text(authorPhone).closest('tr').removeClass('hidden');
      }

      function createRow(medsData, jsonToAttrMap, sort){
        if(sort === undefined){
            sort = false;
        }
        var $tb = $(slr.tb);
        medsViewAjaxTb.addTrToTbody(medsViewAjaxTb.createTr(medsData, jsonToAttrMap));

        setTrColour($tb, medsData);

        if(sort){
           $tb.DataTable().clear();
           $tb.DataTable().rows.add($tb.find('tbody tr'));
           $tb.DataTable().order([sortingColumn, 'asc']).draw();
           rm.pageLength.setPageLength('#medicines-view-records_wrapper', $tb.DataTable().data().length); //set page length option
        }
      }

      function resetDateFilter(){
        $('#'+slr.dateFilter).val("ALL")
        $('#'+slr.dateFilter).parents('.bootstrap-select').find('li').removeClass('selected');
        $('#'+slr.dateFilter).parents('.bootstrap-select').find('li:last-child').addClass('selected');
      }

      function resetAuthorFilter(){
        $('#'+slr.authorsFilter).val("ALL");
        $('#'+slr.authorsFilter).parents('.bootstrap-select').find('li').removeClass('selected');
        $('#'+slr.authorsFilter).parents('.bootstrap-select').find('li:nth-child(2)').addClass('selected');
      }


      function filterDataByAuthor(selected, medsViewData){

          var selectedDate = $('#'+slr.dateFilter).val();
          var medsData = filterDataByDate(selectedDate, medsViewData);
          rm.sessionStorage.removeSession('medsDoc');
          return medsData;
      }

      function filterDataByDocument(selected, medsViewData){

          var medsData;
          sortingColumn = 1;

          resetDateFilter();
          resetAuthorFilter();

          rm.sessionStorage.removeSession('medsDate');
          rm.sessionStorage.removeSession('medsAuthor');

          if(selected === 'SHS'){
            sortingColumn = 1;
            $('#'+slr.authorsFilter).attr('disabled','disabled');
            $('#'+slr.dateFilter).attr('disabled','disabled');
            medsData = _.filter(medsViewData, { 'SourceID': "SHS"});
          } else if(selected === 'EDS'){
            sortingColumn = 1;
            $('#'+slr.authorsFilter).attr('disabled','disabled');
            $('#'+slr.dateFilter).attr('disabled','disabled');
            medsData = _.filter(medsViewData, { 'SourceID': "EDS"});
          } else {
            $('#'+slr.authorsFilter).attr('disabled',false);
            $('#'+slr.dateFilter).attr('disabled',false);
            medsData = medsViewData;
          }
          return medsData;
      }

      function isValidDateDiff(isSelectedAuthor, dateDiff, selectedFilter, day, month, currentDay, currentMonth) {
           var isValid = false;
           if(isSelectedAuthor && dateDiff <= selectedFilter) {
              if (dateDiff === selectedFilter && (parseInt(month) < parseInt(currentMonth) || parseInt(day) < parseInt(currentDay)) ) {
                isValid = false;
              } else {
                isValid = true;
              }
          }
          return isValid;
      }

      function filterDataByDate(selected, medsViewData){
          rm.sessionStorage.removeSession('medsDoc');
          sortingColumn = 1;
          var selectedAuthor = $('#'+slr.authorsFilter).val(), medsData = [];
          switch(selected){
              case '2y':
                  medsData = _.filter(medsViewData, function(o) {
                                var dateDiff = moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'months'),
                                    day = moment(o.date, 'DD-MMM-YYYY').format('DD'),
                                    month = moment(o.date, 'DD-MMM-YYYY').format('MM'),
                                    currentDay = moment().format('DD'),
                                    currentMonth = moment().format('MM');

                                if(selectedAuthor == "ALL"){
                                  return isValidDateDiff(true, dateDiff, 24, day, month, currentDay, currentMonth);
                                } else {
                                  var SourceID = checkSourceID(o.SourceID);
                                  return isValidDateDiff(SourceID == selectedAuthor, dateDiff, 24, day, month, currentDay, currentMonth);
                                }
                            });
                  break;
              case '6m':
                  medsData = _.filter(medsViewData, function(o) {
                                var dateDiff = moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'months'),
                                    day = moment(o.date, 'DD-MMM-YYYY').format('DD'),
                                    month = moment(o.date, 'DD-MMM-YYYY').format('MM'),
                                    currentDay = moment().format('DD'),
                                    currentMonth = moment().format('MM');

                                if(selectedAuthor == "ALL"){
                                  return isValidDateDiff(true, dateDiff, 6, day, month, currentDay, currentMonth);
                                } else {
                                  var SourceID = checkSourceID(o.SourceID);
                                  return isValidDateDiff(SourceID == selectedAuthor, dateDiff, 6, day, month, currentDay, currentMonth);
                                }
                            });
                  break;
              case '3m':
                  medsData = _.filter(medsViewData, function(o) {
                                var dateDiff = moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'months'),
                                    day = moment(o.date, 'DD-MMM-YYYY').format('DD'),
                                    month = moment(o.date, 'DD-MMM-YYYY').format('MM'),
                                    currentDay = moment().format('DD'),
                                    currentMonth = moment().format('MM');

                                if(selectedAuthor == "ALL"){
                                  return isValidDateDiff(true, dateDiff, 3, day, month, currentDay, currentMonth);
                                } else {
                                  var SourceID = checkSourceID(o.SourceID);
                                  return isValidDateDiff(SourceID == selectedAuthor, dateDiff, 3, day, month, currentDay, currentMonth);
                                }
                            });
                  break;
              case 'SHS':
                  var latestSharedHealthData = _.head(_.sortBy(_.filter(medsViewData, { 'SourceID': "SHS"}), [function(o) {
                                                  return moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'months');
                                                }]));
                  if(latestSharedHealthData){
                      medsData = _.filter(medsViewData, function(o) {
                                    if(selectedAuthor == "ALL"){
                                      return moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days') <= moment().diff(moment(latestSharedHealthData.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days') && o.SourceID !== 'SHS';
                                    } else {
                                      var SourceID = checkSourceID(o.SourceID);
                                      return SourceID === selectedAuthor && moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days') <= moment().diff(moment(latestSharedHealthData.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days') && o.SourceID !== 'SHS';
                                    }
                                 });
                  }
                  break;
              case 'EDS':
                  var latestDischargeData = _.head(_.sortBy(_.filter(medsViewData, { 'SourceID': "EDS"}), [function(o) {
                                              return moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'months');
                                            }]));
                  if(latestDischargeData){
                      medsData = _.filter(medsViewData, function(o) {
                                      if(selectedAuthor == "ALL"){
                                        return moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days') <= moment().diff(moment(latestDischargeData.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days') && o.SourceID !== 'EDS';
                                      } else {
                                        var SourceID = checkSourceID(o.SourceID);
                                        return SourceID === selectedAuthor && moment().diff(moment(o.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days') <= moment().diff(moment(latestDischargeData.date, 'DD-MMM-YYYY').format('MM/DD/YYYY'), 'days') && o.SourceID !== 'EDS';
                                      }
                                 });
                  }

                  break;
              case 'ALL':
                  if(selectedAuthor == "ALL"){
                      medsData = medsViewData;
                  } else {
                      medsData = _.filter(medsViewData, function(o) {
                                    var SourceID = checkSourceID(o.SourceID);
                                    return SourceID === selectedAuthor;
                                 });
                  }

                  break;
          }
          return medsData;
      }

      function checkSourceID(sourceID) {
        if(sourceID === 'SHS' || sourceID === 'ER' || sourceID === 'SPL' ||
           sourceID === 'EDS' || sourceID === 'EVS' || sourceID === 'PR' || sourceID === 'DR') {
              return 'HP';
        } else if (sourceID === 'PBS') {
            return 'PBS';
        } else {
            return 'PHS';
        }
      }

      $(([slr.medsDoc, slr.medsAuthor, slr.medsDate].join(','))).on('change', function(e){
          var data = { detail: { id: $(this).attr('id'), selected: $(this).val() } };
          filtersHandler(data);
      });


      function filtersHandler (e) {
          $(slr.tb).find('tbody tr').remove();
          var $tb = $(slr.tb);
          var medsData;
          if(e.detail.id === slr.docTypeFilter){
            medsData = filterDataByDocument(e.detail.selected, medsViewData.medsData);
            rm.sessionStorage.setSession('medsDoc', e.detail.selected);
          } else if(e.detail.id === slr.authorsFilter){
            medsData = filterDataByAuthor(e.detail.selected, medsViewData.medsData);
            rm.sessionStorage.setSession('medsAuthor', e.detail.selected);
          } else {
            medsData = filterDataByDate(e.detail.selected, medsViewData.medsData);
            rm.sessionStorage.setSession('medsDate', e.detail.selected);
          }

          if(medsData.length === 0){
            $(slr.tbEmpty).removeClass('hidden');
            $(slr.tb+'_wrapper').addClass('hidden');
            $('.no-info-text').removeClass('hidden');
          } else {
            $(slr.tbEmpty).addClass('hidden');
            $(slr.tb+'_wrapper').removeClass('hidden');
            $(slr.tb).removeClass('hidden');
            $('.no-info-text').addClass('hidden');
            createRow(medsData, jsonToAttrMap, true);
          }
      }

      $(slr.tb).on( 'length.dt', function (e, settings, data) {
          $(slr.tb+'_wrapper .native-select').val([data]);
          rm.sessionStorage.setSession('medsPageLength', data);
      });

      $tb.on('page.dt', function () {
          var table = $tb.DataTable();
          rm.sessionStorage.setSession('medsActivePage', table.page.info().page);
      });

      $('#'+slr.allergiesTb).on( 'length.dt', function (e, settings, data) {
          $('#'+slr.allergiesTb+'_wrapper .native-select').val([data]);
          rm.sessionStorage.setSession('allergiesPageLength', data);
      });

      $('#'+slr.allergiesTb).on('page.dt', function () {
          var table = $('#'+slr.allergiesTb).DataTable();
          rm.sessionStorage.setSession('allergiesActivePage', table.page.info().page);
      });

      $('#'+slr.allergiesAccordion+' .accordion__trigger').on( 'click', function (e) {
        var isAllergiesShow = $(this).attr('aria-expanded') === 'true' ? false : true;
        rm.sessionStorage.setSession('isShowAllergies', isAllergiesShow);
      });
  });
})();
$(function () {
  var optOut = $("#opt-out-val").val();
  var $btnOptOut = $("#btn-opt-out");
  var $lblOptOut = $("#lbl-opt-out");
  var setOptOutText = function () {
    var btnOptOutText = optOut == "1" ?
      "Do not participate" :
      "Participate";
    $btnOptOut.text(btnOptOutText);
    var lblOptOutText = optOut == "1" ?     
      "If you wish the information in your record to be excluded from secondary use for research and public health purposes, select the \"Do not participate\" button below." :
      "If you wish the health information in your record to be available for secondary uses click the \"Participate\" button below.";
    $lblOptOut.text(lblOptOutText);
  }
  var showError = function (msg) {
    $('#profile-error .alert__message__content').html(msg);
    $('#profile-error').show();
    rm.rollTo.to('body'); 
    //rm.errorContainer.show(msg || "Error");
  }
  // events
  $btnOptOut.on("click", function () {
    rm.errorContainer.hide();
    rm.ajaxLoader.showAjaxLoader();

    $.ajax({
      url: "/ncp/secondaryuse",
      method: "POST",
      dataType: "json",
      data: { "optOut": optOut }
    })
    .done(function (resp) {
      if (resp.status == "error") {
        showError(resp.errorMsg)
        return;
      }
      optOut = parseInt(resp.consent);
      setOptOutText();
    })
    .fail(function (resp) {
      showError(resp.responseJSON.error);
    })
    .always(function () {
      rm.ajaxLoader.hideAjaxLoader();
    });
  });

  // init
  setOptOutText();
});
(function() {

    'use strict';

    if (!rm.globals.DOM.body.hasClass('view-ulc')) return;

    rm.domReady.done(function() {
    
    var formEmail   = "#formAdminUnverifiedIdentityEmailULC",
        $formEmail  = $(formEmail),
        formSMS     = "#formAdminUnverifiedIdentityMobileULC",
        $formSMS    = $(formSMS);


    var slr = {
        email : '#ulc-email-btn',     
        sms   : '#ulc-sms-btn'      
    };

    // on blur on email field
    $formEmail.on('blur', 'input', function () {
        $formEmail.data('formValidation').enableFieldValidators('email', false, 'notEmpty').revalidateField($(this));
    });

    // on blur on sms field
    $formSMS.on('blur', 'input', function () {
        $formSMS.data('formValidation').enableFieldValidators('sms', false, 'notEmpty').revalidateField($(this));
    });

    $(slr.email).on("click", function(){
        $formEmail.data('formValidation').enableFieldValidators('email', true, 'notEmpty').revalidateField($(this));
    });

    $(slr.sms).on("click", function(){
        $formSMS.data('formValidation').enableFieldValidators('sms', true, 'notEmpty').revalidateField($(this));
    });

    });
})();

/* ===== reactivizr scripts-hook do-not-remove ===== */;// initialise modules
$(function () {
    'use strict';

    // misc - 1
    rm.filter.init();
    rm.popovers.init();
    rm.sticky.init();
    rm.stickyTableHeaders.init();
    rm.accordion.init();
    rm.switcher.init();
    rm.nav.init();
    rm.rollTo.init();
    rm.documentCard.init();
    rm.document.init();

    // table modules
    rm.readOnlyMode.init();                 // must be BEFORE DataTable init - disable pointer-events for specific element in read-only mode
    rm.tbPreSort.init();                    // must be BEFORE DataTable init
    rm.tbRowsToLists.init();                // must be BEFORE rm.table.init() or after markup is created
    rm.tbMobileCellDetailToggle.init();     // must be BEFORE rm.table.init()
    rm.table.init();
    rm.tbMobileSort.init();                 // must be AFTER rm.table.init()
    rm.tbSearch.init();                     // must be AFTER rm.table.init()
    rm.table.tdTrim.init();

    // form
    rm.form.init();
    rm.validation.init();
    rm.selectPicker.init();
    rm.dirtyforms.init(); //must be called after `rm.validation.init()`
    rm.modal.init();
    rm.chkboxToggleBtn.init();
    rm.displayonselect.init();

    // misc - 2
    rm.loadmore.init();
    rm.preview.init();
    rm.toolbar.init();
    rm.clickTbRowToCheckRdo.init();
    rm.mobileVerification.init();
    // rm.toolbarAdvCarePlan.init();
    rm.print.init();
    rm.showhideform.init();
    // rm.showhidetable.init();
    rm.listinfo.init();
    rm.inputfile.init();
    rm.formTools.init();
    rm.collapse.init();
    rm.badge.init();
    rm.modalImage.init();
    rm.radio.init();
    rm.search.init();
    // rm.rightClick.disable();
    rm.disabledBlock.init();
    rm.readmore.init();
    rm.verifyIdentity.init();
    rm.dataListFormCtrl.init();
    rm.overview.init();
    rm.checkbox.init();
    // rm.checkboxGroup.init();
    rm.timelineBlock.init();

    //forms
    rm.birthCertificate.init();
    rm.marriageCertificate.init();
    rm.driverLicense.init();

    // Page specific functionality
    rm.personalHealthNotes.init();
    rm.achievementdiary.init();
    rm.documentAccess.init();
    rm.dischargeSummary.init();
    rm.manageNomRep.init();
    rm.setHiddenRecordStatus.init();
    rm.accessCode.init();
    rm.childhoodQuestionnaire.init();
    rm.personalContact.init();
    rm.accessLevelNonRep.init();
    rm.emergencycontacts.init();
    rm.chooseOptions.init();
    rm.ivcpac.init();
    rm.globalSearch.init();
    rm.addRule.init();

    //Session Storage
    rm.sessionManagement.init();
    rm.sessionScroll.init();
    rm.sessionTableListener.init();
    rm.sessionRedirect.init();

    //Page pageLength
    rm.pageLength.init();

    // System notification
    rm.topNotification.init();      // Top fixed/system notification

    // Allow backend Devs run their script after all JS modules have run
    rm.domReady.resolve();

    //Set Notifications
    rm.setNotifications.init();

    //Questionnaire
    rm.questionnaire.init();

    //native date
    rm.nativeDate.init();
});